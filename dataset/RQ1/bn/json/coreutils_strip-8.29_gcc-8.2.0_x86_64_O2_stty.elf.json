{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_stty.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 136,
    "funcInfo": [
        {
            "funcName": "sub_401660",
            "funcStartAddr": "0x401660",
            "funcEndAddr": "0x40166c",
            "decompiledFuncCode": "int64_t sub_401660()\n{\n    int64_t var_8 = data_613008;\n    /* jump -> data_613010 */\n}\n\n"
        },
        {
            "funcName": "sub_401676",
            "funcStartAddr": "0x401676",
            "funcEndAddr": "0x401680",
            "decompiledFuncCode": "int64_t sub_401676()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_401686",
            "funcStartAddr": "0x401686",
            "funcEndAddr": "0x401690",
            "decompiledFuncCode": "int64_t sub_401686()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_401696",
            "funcStartAddr": "0x401696",
            "funcEndAddr": "0x4016a0",
            "decompiledFuncCode": "int64_t sub_401696()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_4016a6",
            "funcStartAddr": "0x4016a6",
            "funcEndAddr": "0x4016b0",
            "decompiledFuncCode": "int64_t sub_4016a6()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_4016b6",
            "funcStartAddr": "0x4016b6",
            "funcEndAddr": "0x4016c0",
            "decompiledFuncCode": "int64_t sub_4016b6()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_4016c6",
            "funcStartAddr": "0x4016c6",
            "funcEndAddr": "0x4016d0",
            "decompiledFuncCode": "int64_t sub_4016c6()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_4016d6",
            "funcStartAddr": "0x4016d6",
            "funcEndAddr": "0x4016e0",
            "decompiledFuncCode": "int64_t sub_4016d6()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_4016e6",
            "funcStartAddr": "0x4016e6",
            "funcEndAddr": "0x4016f0",
            "decompiledFuncCode": "int64_t sub_4016e6()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_4016f6",
            "funcStartAddr": "0x4016f6",
            "funcEndAddr": "0x401700",
            "decompiledFuncCode": "int64_t sub_4016f6()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_401706",
            "funcStartAddr": "0x401706",
            "funcEndAddr": "0x401710",
            "decompiledFuncCode": "int64_t sub_401706()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_401716",
            "funcStartAddr": "0x401716",
            "funcEndAddr": "0x401720",
            "decompiledFuncCode": "int64_t sub_401716()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_401726",
            "funcStartAddr": "0x401726",
            "funcEndAddr": "0x401730",
            "decompiledFuncCode": "int64_t sub_401726()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_401736",
            "funcStartAddr": "0x401736",
            "funcEndAddr": "0x401740",
            "decompiledFuncCode": "int64_t sub_401736()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_401746",
            "funcStartAddr": "0x401746",
            "funcEndAddr": "0x401750",
            "decompiledFuncCode": "int64_t sub_401746()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_401756",
            "funcStartAddr": "0x401756",
            "funcEndAddr": "0x401760",
            "decompiledFuncCode": "int64_t sub_401756()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_401766",
            "funcStartAddr": "0x401766",
            "funcEndAddr": "0x401770",
            "decompiledFuncCode": "int64_t sub_401766()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_401776",
            "funcStartAddr": "0x401776",
            "funcEndAddr": "0x401780",
            "decompiledFuncCode": "int64_t sub_401776()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_401786",
            "funcStartAddr": "0x401786",
            "funcEndAddr": "0x401790",
            "decompiledFuncCode": "int64_t sub_401786()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_401796",
            "funcStartAddr": "0x401796",
            "funcEndAddr": "0x4017a0",
            "decompiledFuncCode": "int64_t sub_401796()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_4017a6",
            "funcStartAddr": "0x4017a6",
            "funcEndAddr": "0x4017b0",
            "decompiledFuncCode": "int64_t sub_4017a6()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_4017b6",
            "funcStartAddr": "0x4017b6",
            "funcEndAddr": "0x4017c0",
            "decompiledFuncCode": "int64_t sub_4017b6()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_4017c6",
            "funcStartAddr": "0x4017c6",
            "funcEndAddr": "0x4017d0",
            "decompiledFuncCode": "int64_t sub_4017c6()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_4017d6",
            "funcStartAddr": "0x4017d6",
            "funcEndAddr": "0x4017e0",
            "decompiledFuncCode": "int64_t sub_4017d6()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_4017e6",
            "funcStartAddr": "0x4017e6",
            "funcEndAddr": "0x4017f0",
            "decompiledFuncCode": "int64_t sub_4017e6()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_401876",
            "funcStartAddr": "0x401876",
            "funcEndAddr": "0x401880",
            "decompiledFuncCode": "int64_t sub_401876()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_401886",
            "funcStartAddr": "0x401886",
            "funcEndAddr": "0x401890",
            "decompiledFuncCode": "int64_t sub_401886()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_401896",
            "funcStartAddr": "0x401896",
            "funcEndAddr": "0x4018a0",
            "decompiledFuncCode": "int64_t sub_401896()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_4018a6",
            "funcStartAddr": "0x4018a6",
            "funcEndAddr": "0x4018b0",
            "decompiledFuncCode": "int64_t sub_4018a6()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_4018b6",
            "funcStartAddr": "0x4018b6",
            "funcEndAddr": "0x4018c0",
            "decompiledFuncCode": "int64_t sub_4018b6()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_4018c6",
            "funcStartAddr": "0x4018c6",
            "funcEndAddr": "0x4018d0",
            "decompiledFuncCode": "int64_t sub_4018c6()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_4018d6",
            "funcStartAddr": "0x4018d6",
            "funcEndAddr": "0x4018e0",
            "decompiledFuncCode": "int64_t sub_4018d6()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_4018e6",
            "funcStartAddr": "0x4018e6",
            "funcEndAddr": "0x4018f0",
            "decompiledFuncCode": "int64_t sub_4018e6()\n{\n    int64_t var_8 = 0x27;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_4018f6",
            "funcStartAddr": "0x4018f6",
            "funcEndAddr": "0x401900",
            "decompiledFuncCode": "int64_t sub_4018f6()\n{\n    int64_t var_8 = 0x28;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_401906",
            "funcStartAddr": "0x401906",
            "funcEndAddr": "0x401910",
            "decompiledFuncCode": "int64_t sub_401906()\n{\n    int64_t var_8 = 0x29;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_401916",
            "funcStartAddr": "0x401916",
            "funcEndAddr": "0x401920",
            "decompiledFuncCode": "int64_t sub_401916()\n{\n    int64_t var_8 = 0x2a;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_401926",
            "funcStartAddr": "0x401926",
            "funcEndAddr": "0x401930",
            "decompiledFuncCode": "int64_t sub_401926()\n{\n    int64_t var_8 = 0x2b;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_401936",
            "funcStartAddr": "0x401936",
            "funcEndAddr": "0x401940",
            "decompiledFuncCode": "int64_t sub_401936()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_401946",
            "funcStartAddr": "0x401946",
            "funcEndAddr": "0x401950",
            "decompiledFuncCode": "int64_t sub_401946()\n{\n    int64_t var_8 = 0x2d;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_401956",
            "funcStartAddr": "0x401956",
            "funcEndAddr": "0x401960",
            "decompiledFuncCode": "int64_t sub_401956()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_401966",
            "funcStartAddr": "0x401966",
            "funcEndAddr": "0x401970",
            "decompiledFuncCode": "int64_t sub_401966()\n{\n    int64_t var_8 = 0x2f;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_401976",
            "funcStartAddr": "0x401976",
            "funcEndAddr": "0x401980",
            "decompiledFuncCode": "int64_t sub_401976()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_401986",
            "funcStartAddr": "0x401986",
            "funcEndAddr": "0x401990",
            "decompiledFuncCode": "int64_t sub_401986()\n{\n    int64_t var_8 = 0x31;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_401996",
            "funcStartAddr": "0x401996",
            "funcEndAddr": "0x4019a0",
            "decompiledFuncCode": "int64_t sub_401996()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_4019a6",
            "funcStartAddr": "0x4019a6",
            "funcEndAddr": "0x4019b0",
            "decompiledFuncCode": "int64_t sub_4019a6()\n{\n    int64_t var_8 = 0x33;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_4019b6",
            "funcStartAddr": "0x4019b6",
            "funcEndAddr": "0x4019c0",
            "decompiledFuncCode": "int64_t sub_4019b6()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_4019c6",
            "funcStartAddr": "0x4019c6",
            "funcEndAddr": "0x4019d0",
            "decompiledFuncCode": "int64_t sub_4019c6()\n{\n    int64_t var_8 = 0x35;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_4019d6",
            "funcStartAddr": "0x4019d6",
            "funcEndAddr": "0x4019e0",
            "decompiledFuncCode": "int64_t sub_4019d6()\n{\n    int64_t var_8 = 0x36;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "sub_4019e6",
            "funcStartAddr": "0x4019e6",
            "funcEndAddr": "0x4019f0",
            "decompiledFuncCode": "int64_t sub_4019e6()\n{\n    int64_t var_8 = 0x37;\n    /* tailcall */\n    return sub_401660();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x401aa0",
            "funcEndAddr": "0x402596",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    int32_t r15 = 1;\n    int32_t r13 = 0;\n    int32_t r12 = 0;\n    int64_t rbp = 0;\n    char** rbx = argv;\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rcx = sub_404a50(*argv);\n    void var_68;\n    int32_t var_60;\n    setlocale(6, &data_41101c[0x1b], rdx, rcx, r8, r9, var_68, var_60);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    sub_40bd50(sub_404940);\n    void* rax = &rbx[1];\n    char var_49 = 1;\n    data_6132b8 = 0;\n    int64_t var_58 = 0;\n    char var_4b = 0;\n    char var_4a = 0;\n    while (true)\n    {\n        uint64_t rax_1 = getopt_long((argc - r12), &rbx[rbp], \"-agF:\", &data_40c720, nullptr);\n        FILE* rdi_16;\n        if (rax_1 != 0xffffffff)\n        {\n            bool cond:0_1 = rax_1 <= 0x46;\n            if ((rax_1 == 0x46 && var_58 == 0))\n            {\n                var_58 = data_613580;\n            }\n            if (rax_1 != 0x46)\n            {\n                if ((!cond:0_1))\n                {\n                    if (rax_1 == 0x61)\n                    {\n                        var_4a = 1;\n                        r13 = 1;\n                    }\n                    if (rax_1 == 0x67)\n                    {\n                        var_4b = 1;\n                        r13 = 2;\n                    }\n                }\n                else\n                {\n                    if (rax_1 == 0xffffff7d)\n                    {\n                        sub_406af0(stdout, \"stty\", \"GNU coreutils\", data_613238);\n                        exit(0);\n                        /* no return */\n                    }\n                    if (rax_1 == 0xffffff7e)\n                    {\n                        sub_402d90(0);\n                        /* no return */\n                    }\n                }\n                if (((((!cond:0_1) && rax_1 != 0x61) && rax_1 != 0x67) || cond:0_1))\n                {\n                    int32_t temp0_1 = r12;\n                    r12 = (r12 + r15);\n                    bool c_1 = (temp0_1 + r15) < temp0_1;\n                    bool z_1 = temp0_1 == (-r15);\n                    char const* const rdi_4 = \"-drain\";\n                    int64_t rcx_4 = 7;\n                    rbp = r12;\n                    char* rdx_6 = rbx[rbp];\n                    char* rsi_2 = rdx_6;\n                    while (rcx_4 != 0)\n                    {\n                        char temp1_1 = *rsi_2;\n                        char const temp2_1 = *rdi_4;\n                        c_1 = temp1_1 < temp2_1;\n                        z_1 = temp1_1 == temp2_1;\n                        rsi_2 = &rsi_2[1];\n                        rdi_4 = &rdi_4[1];\n                        rcx_4 = (rcx_4 - 1);\n                        if ((!z_1))\n                        {\n                            break;\n                        }\n                    }\n                    rax_1 = ((!z_1) && (!c_1));\n                    rax_1 = (rax_1 - 0);\n                    if (rax_1 != 0)\n                    {\n                        char rcx_5 = var_49;\n                        if (strcmp(rdx_6, \"drain\") != 0)\n                        {\n                            rcx_5 = 0;\n                        }\n                        var_49 = rcx_5;\n                    }\n                    data_6132bc = 0;\n                    r15 = 1;\n                    continue;\n                }\n            }\n            if (((rax_1 == 0x46 && var_58 == 0) || rax_1 != 0x46))\n            {\n                int32_t rsi_1 = data_6132bc;\n                if (rsi_1 <= r15)\n                {\n                    rsi_1 = r15;\n                }\n                else\n                {\n                    int64_t rcx_1 = (r15 + rbp);\n                    void* rax_2 = &rbx[rcx_1];\n                    void* rdx_5 = (rax + ((((rsi_1 - 1) - r15) + rcx_1) << 3));\n                    do\n                    {\n                        *rax_2 = 0;\n                        rax_2 = (rax_2 + 8);\n                    } while (rax_2 != rdx_5);\n                }\n                r15 = rsi_1;\n                continue;\n            }\n        }\n        else\n        {\n            if ((var_4a & var_4b) == 0)\n            {\n                int64_t rsi_5;\n                FILE* rdi_7;\n                if (var_49 == 0)\n                {\n                    if (var_4a != 0)\n                    {\n                        goto label_402475;\n                    }\n                    if (var_4b != 0)\n                    {\n                        goto label_402475;\n                    }\n                    char var_3a;\n                    char var_39;\n                    if (var_58 == 0)\n                    {\n                        int32_t rax_22;\n                        int32_t rax_30;\n                        while (true)\n                        {\n                            int64_t rax_29;\n                            int64_t r9_4;\n                            rax_29 = dcgettext(nullptr, \"standard input\", 5);\n                            var_58 = rax_29;\n                            int64_t var_70_3 = r9_4;\n                            sub_403bd0(1, rax_29, rbx, argc, &data_6133a0, &var_39, &var_3a);\n                            rax_30 = tcgetattr(0, &data_613360);\n                            if (rax_30 != 0)\n                            {\n                                break;\n                            }\n                        label_401d87:\n                            var_39 = 0;\n                            var_3a = 0;\n                            int64_t var_70_2 = rsi_5;\n                            sub_403bd0(0, var_58, rbx, argc, &data_613360, &var_39, &var_3a);\n                            if (var_3a == 0)\n                            {\n                                return 0;\n                            }\n                            rax_22 = tcsetattr(0, data_613230, &data_613360);\n                            if (rax_22 != 0)\n                            {\n                                break;\n                            }\n                            if (tcgetattr(0, &data_613320) != 0)\n                            {\n                                break;\n                            }\n                            if (memcmp(&data_613360, &data_613320, 0x3c) == 0)\n                            {\n                                return 0;\n                            }\n                            data_613328 = (data_613328 & 0xeff0ffff);\n                            if ((var_39 == 0 && memcmp(&data_613360, &data_613320, 0x3c) == 0))\n                            {\n                                return 0;\n                            }\n                            rbx = sub_4064f0(0, 3, var_58);\n                            error(1, 0, dcgettext(nullptr, \"%s: unable to perform all reques\u2026\", 5), rbx);\n                        }\n                        if (((rax_30 == 0 && var_3a != 0) && rax_22 != 0))\n                        {\n                            rdi_7 = error(1, *__errno_location(), \"%s\", sub_4064f0(0, 3, var_58));\n                        label_40258c:\n                            __overflow(rdi_7, 0xa);\n                            goto label_401e6e;\n                        }\n                        if (rax_30 == 0)\n                        {\n                            goto label_402435;\n                        }\n                        goto label_402001;\n                    }\n                    uint64_t var_70_1 = rax_1;\n                    sub_403bd0(1, var_58, rbx, argc, &data_6133a0, &var_39, &var_3a);\n                }\n                else if (var_58 == 0)\n                {\n                    var_58 = dcgettext(nullptr, \"standard input\", 5);\n                    if (tcgetattr(0, &data_613360) != 0)\n                    {\n                    label_402001:\n                        error(1, *__errno_location(), \"%s\", sub_4064f0(0, 3, var_58));\n                    label_402032:\n                        void* rbx_3 = nullptr;\n                        __printf_chk(1, \"%lx:%lx:%lx:%lx\", data_613360, data_613364, data_613368, data_61336c);\n                        do\n                        {\n                            rbx_3 = (rbx_3 + 1);\n                            __printf_chk(1, \":%lx\", *(rbx_3 + 0x613370));\n                        } while (rbx_3 != 0x20);\n                        uint64_t* const rdi_11 = stdout;\n                        char* rax_36 = stdout[5];\n                        if (rax_36 >= stdout[6])\n                        {\n                            __overflow(rdi_11, 0xa);\n                        }\n                        else\n                        {\n                            stdout[5] = &rax_36[1];\n                            *rax_36 = 0xa;\n                        }\n                        break;\n                    }\n                label_401e03:\n                    int32_t rax_16 = sub_4026e0();\n                    data_6133dc = 0;\n                    data_6133e0 = rax_16;\n                    if (r13 == 1)\n                    {\n                        sub_402930(&data_613360, 1);\n                        sub_402ca0(1, var_58);\n                        data_613370;\n                        sub_4027c0(\"line = %d;\", 0);\n                        rdi_16 = stdout;\n                        char* rax_41 = stdout[5];\n                        if (rax_41 >= stdout[6])\n                        {\n                            goto label_4024ef;\n                        }\n                        stdout[5] = &rax_41[1];\n                        *rax_41 = 0xa;\n                        goto label_402230;\n                    }\n                    if (r13 == 2)\n                    {\n                        goto label_402032;\n                    }\n                    sub_402930(&data_613360, 1);\n                    data_613370;\n                    sub_4027c0(\"line = %d;\", 0);\n                    rdi_7 = stdout;\n                    char* rax_17 = stdout[5];\n                    if (rax_17 >= stdout[6])\n                    {\n                        goto label_40258c;\n                    }\n                    stdout[5] = &rax_17[1];\n                    *rax_17 = 0xa;\n                label_401e6e:\n                    data_6133dc = 0;\n                    int64_t* rbx_1 = &data_40c7e0;\n                    char r13_1 = 1;\n                    int32_t rax_19;\n                    while (true)\n                    {\n                        char* rbp_1 = *rbx_1;\n                        rax_19 = strcmp(rbp_1, &data_40bfd2);\n                        if (rax_19 == 0)\n                        {\n                            break;\n                        }\n                        char r12_1 = *(rbx_1[2] + 0x613371);\n                        if ((r12_1 != rbx_1[1] && strcmp(rbp_1, \"flush\") != 0))\n                        {\n                            if (r12_1 != 0)\n                            {\n                                sub_402b00(r12_1);\n                            }\n                            sub_4027c0(\"%s = %s;\", 0);\n                            r13_1 = 0;\n                        }\n                        rbx_1 = &rbx_1[3];\n                    }\n                    if ((*data_61336c & 2) == 0)\n                    {\n                        data_613376;\n                        data_613377;\n                        sub_4027c0(\"min = %lu; time = %lu;\\n\", rax_19);\n                    }\n                    else if (r13_1 == 0)\n                    {\n                        uint64_t* const rdi_12 = stdout;\n                        char* rax_37 = stdout[5];\n                        if (rax_37 >= stdout[6])\n                        {\n                            __overflow(rdi_12, 0xa);\n                        }\n                        else\n                        {\n                            stdout[5] = &rax_37[1];\n                            *rax_37 = 0xa;\n                        }\n                    }\n                    int64_t* rbx_4 = &data_40c9c0;\n                    int32_t rbp_2 = 0;\n                    char r12_2 = 1;\n                    data_6133dc = 0;\n                    while (*rbx_4 != 0)\n                    {\n                        if ((*(rbx_4 + 0xc) & 8) == 0)\n                        {\n                            int32_t rdi_13 = rbp_2;\n                            if (rbx_4[1] != rbp_2)\n                            {\n                                if (r12_2 == 0)\n                                {\n                                    uint64_t* const rdi_14 = stdout;\n                                    char* rax_38 = stdout[5];\n                                    if (rax_38 >= stdout[6])\n                                    {\n                                        __overflow(rdi_14, 0xa);\n                                    }\n                                    else\n                                    {\n                                        stdout[5] = &rax_38[1];\n                                        *rax_38 = 0xa;\n                                    }\n                                    data_6133dc = 0;\n                                }\n                                rdi_13 = rbx_4[1];\n                                r12_2 = 1;\n                                rbp_2 = rdi_13;\n                            }\n                            int32_t* rax_39 = sub_402750(rdi_13, 0x613360);\n                            int64_t rdx_23 = rbx_4[3];\n                            if (rdx_23 == 0)\n                            {\n                                rdx_23 = rbx_4[2];\n                            }\n                            if (rax_39 == 0)\n                            {\n                                __assert_fail(\"bitsp\", \"src/stty.c\", 0x7a2, \"display_changed\");\n                                /* no return */\n                            }\n                            char rcx_15 = *(rbx_4 + 0xc);\n                            if ((rdx_23 & *rax_39) == rbx_4[2])\n                            {\n                                rcx_15 = (rcx_15 & 2);\n                                if (rcx_15 != 0)\n                                {\n                                    *rbx_4;\n                                    r12_2 = 0;\n                                    sub_4027c0(\"%s\", 0);\n                                }\n                            }\n                            else if ((rcx_15 & 5) == 5)\n                            {\n                                *rbx_4;\n                                r12_2 = 0;\n                                sub_4027c0(&data_40c0a1, 0);\n                            }\n                        }\n                        rbx_4 = &rbx_4[4];\n                    }\n                    if (r12_2 != 0)\n                    {\n                    label_4021d0:\n                        data_6133dc = 0;\n                        break;\n                    }\n                label_4021b0:\n                    uint64_t* const rdi_15 = stdout;\n                    char* rax_40 = stdout[5];\n                    if (rax_40 >= stdout[6])\n                    {\n                        __overflow(rdi_15, 0xa);\n                    }\n                    else\n                    {\n                        stdout[5] = &rax_40[1];\n                        *rax_40 = 0xa;\n                    }\n                    goto label_4021d0;\n                }\n                int32_t rax_6;\n                int32_t rdx_9;\n                rax_6 = sub_4049e0(0, var_58, 0x800, 0);\n                if (rax_6 < 0)\n                {\n                    goto label_4024c7;\n                }\n                int32_t rax_8 = sub_407b50(0, 3, rdx_9);\n                if (rax_8 == 0xffffffff)\n                {\n                    goto label_402486;\n                }\n                *rax_8[1] = (*rax_8[1] & 0xf7);\n                if (sub_407b50(0, 4, rax_8) < 0)\n                {\n                    goto label_402486;\n                }\n                int32_t rax_11;\n                rax_11 = tcgetattr(0, &data_613360);\n                if (rax_11 != 0)\n                {\n                    goto label_402001;\n                }\n                if (((var_4b | var_49) == 0 && var_4a == 0))\n                {\n                    goto label_401d87;\n                }\n                goto label_401e03;\n            }\n            error(1, 0, dcgettext(nullptr, \"the options for verbose and stty\u2026\", 5));\n        }\n        error(1, 0, dcgettext(nullptr, \"only one device may be specified\", 5));\n    label_402435:\n        error(1, *__errno_location(), \"%s\", sub_4064f0(0, 3, var_58));\n    label_402475:\n        error(1, 0, dcgettext(nullptr, \"when specifying an output style,\u2026\", 5));\n    label_402486:\n        error(1, *__errno_location(), dcgettext(nullptr, \"%s: couldn't reset non-blocking \u2026\", 5), sub_4064f0(0, 3, var_58));\n    label_4024c7:\n        rdi_16 = error(1, *__errno_location(), \"%s\", sub_4064f0(0, 3, var_58));\n    label_4024ef:\n        __overflow(rdi_16, 0xa);\n    label_402230:\n        data_6133dc = 0;\n        int64_t* rbx_5 = &data_40c7e0;\n        int32_t rax_43;\n        while (true)\n        {\n            char* rbp_3 = *rbx_5;\n            rax_43 = strcmp(rbp_3, &data_40bfd2);\n            if (rax_43 == 0)\n            {\n                break;\n            }\n            if (strcmp(rbp_3, \"flush\") != 0)\n            {\n                char rax_46 = *(rbx_5[2] + 0x613371);\n                if (rax_46 != 0)\n                {\n                    sub_402b00(rax_46);\n                }\n                sub_4027c0(\"%s = %s;\", 0);\n            }\n            rbx_5 = &rbx_5[3];\n        }\n        data_613376;\n        data_613377;\n        sub_4027c0(\"min = %lu; time = %lu;\", rax_43);\n        if (data_6133dc != 0)\n        {\n            uint64_t* const rdi_20 = stdout;\n            char* rax_47 = stdout[5];\n            if (rax_47 >= stdout[6])\n            {\n                __overflow(rdi_20, 0xa);\n            }\n            else\n            {\n                stdout[5] = &rax_47[1];\n                *rax_47 = 0xa;\n            }\n        }\n        data_6133dc = 0;\n        int64_t* rbx_6 = &data_40c9c0;\n        int32_t r12_3 = 0;\n        while (*rbx_6 != 0)\n        {\n            if ((*(rbx_6 + 0xc) & 8) == 0)\n            {\n                int32_t rbp_4 = rbx_6[1];\n                if (rbp_4 != r12_3)\n                {\n                    uint64_t* const rdi_21 = stdout;\n                    char* rax_48 = stdout[5];\n                    if (rax_48 >= stdout[6])\n                    {\n                        __overflow(rdi_21, 0xa);\n                    }\n                    else\n                    {\n                        stdout[5] = &rax_48[1];\n                        *rax_48 = 0xa;\n                    }\n                    data_6133dc = 0;\n                    r12_3 = rbp_4;\n                    rbp_4 = rbx_6[1];\n                }\n                int32_t* rax_49 = sub_402750(rbp_4, 0x613360);\n                int64_t rdx_31 = rbx_6[3];\n                if (rdx_31 == 0)\n                {\n                    rdx_31 = rbx_6[2];\n                }\n                if (rax_49 == 0)\n                {\n                    __assert_fail(\"bitsp\", \"src/stty.c\", 0x7f6, \"display_all\");\n                    /* no return */\n                }\n                if ((rdx_31 & *rax_49) == rbx_6[2])\n                {\n                    *rbx_6;\n                    sub_4027c0(\"%s\", 0);\n                }\n                else if ((*(rbx_6 + 0xc) & 4) != 0)\n                {\n                    *rbx_6;\n                    sub_4027c0(&data_40c0a1, 0);\n                }\n            }\n            rbx_6 = &rbx_6[4];\n        }\n        goto label_4021b0;\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x4025a0",
            "funcEndAddr": "0x4025ca",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4025cb",
            "funcStartAddr": "0x4025cb",
            "funcEndAddr": "0x4025ea",
            "decompiledFuncCode": "void sub_4025cb()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_4025ea",
            "funcStartAddr": "0x4025ea",
            "funcEndAddr": "0x402621",
            "decompiledFuncCode": "int64_t sub_4025ea()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_402621",
            "funcStartAddr": "0x402621",
            "funcEndAddr": "0x402678",
            "decompiledFuncCode": "void sub_402621()\n{\n    if (data_6132e8 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_6132f0;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_6132f0 = (rax_1 + 1);\n        *(0x612e40 + ((rax_1 + 1) << 3))();\n    }\n    sub_4025cb();\n    data_6132e8 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_402678",
            "funcStartAddr": "0x402678",
            "funcEndAddr": "0x40267d",
            "decompiledFuncCode": "int64_t j_sub_4025ea()\n{\n    /* tailcall */\n    return sub_4025ea();\n}\n\n"
        },
        {
            "funcName": "sub_402680",
            "funcStartAddr": "0x402680",
            "funcEndAddr": "0x4026da",
            "decompiledFuncCode": "uint64_t sub_402680(char* arg1)\n{\n    void* const rsi = &data_40c143;\n    int32_t rbp = 0;\n    void* rbx = &data_40c3d8;\n    do\n    {\n        if (strcmp(arg1, rsi) == 0)\n        {\n            int64_t rbp_1 = rbp;\n            return *((rbp_1 * 0x18) + 0x40c3c8);\n        }\n        rbx = (rbx + 0x18);\n        rsi = *(rbx - 0x18);\n        rbp = (rbp + 1);\n    } while (rsi != 0);\n    return 0xffffffff;\n}\n\n"
        },
        {
            "funcName": "sub_4026e0",
            "funcStartAddr": "0x4026e0",
            "funcEndAddr": "0x40274b",
            "decompiledFuncCode": "uint64_t sub_4026e0()\n{\n    void var_10;\n    int32_t rax_1 = ioctl(1, 0x5413, &var_10);\n    uint64_t rax_2;\n    int16_t var_e;\n    if (rax_1 == 0)\n    {\n        rax_2 = var_e;\n    }\n    if ((rax_1 != 0 || (rax_1 == 0 && rax_2 == 0)))\n    {\n        char* rax_3 = getenv(\"COLUMNS\");\n        int32_t rax_4;\n        if (rax_3 != 0)\n        {\n            int64_t var_18;\n            rax_4 = sub_406fc0(rax_3, nullptr, 0, &var_18, &data_41101c[0x1b]);\n            if (rax_4 == 0)\n            {\n                rax_2 = var_18;\n            }\n        }\n        if (((rax_3 == 0 || (rax_3 != 0 && rax_4 != 0)) || ((rax_3 != 0 && rax_4 == 0) && (rax_2 - 1) > 0x7ffffffe)))\n        {\n            rax_2 = 0x50;\n        }\n    }\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_402750",
            "funcStartAddr": "0x401a70",
            "funcEndAddr": "0x4027b9",
            "decompiledFuncCode": "int64_t sub_402750(int32_t arg1, int64_t arg2)\n{\n    if (arg1 > 4)\n    {\n        abort();\n        /* no return */\n    }\n    switch (arg1)\n    {\n        case 0:\n        {\n            return (arg2 + 8);\n            break;\n        }\n        case 1:\n        {\n            return arg2;\n            break;\n        }\n        case 2:\n        {\n            return (arg2 + 4);\n            break;\n        }\n        case 3:\n        {\n            return (arg2 + 0xc);\n            break;\n        }\n        case 4:\n        {\n            return 0;\n            break;\n        }\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4027c0",
            "funcStartAddr": "0x4027c0",
            "funcEndAddr": "0x402924",
            "decompiledFuncCode": "int64_t sub_4027c0(char* arg1, char arg2 @ rax)\n{\n    int64_t rsi;\n    int64_t var_b0 = rsi;\n    int64_t rdx;\n    int64_t var_a8 = rdx;\n    int64_t rcx;\n    int64_t var_a0 = rcx;\n    int64_t r8;\n    int64_t var_98 = r8;\n    int64_t r9;\n    int64_t var_90 = r9;\n    if (arg2 != 0)\n    {\n        int128_t zmm0;\n        int128_t var_88_1 = zmm0;\n        int128_t zmm1;\n        int128_t var_78_1 = zmm1;\n        int128_t zmm2;\n        int128_t var_68_1 = zmm2;\n        int128_t zmm3;\n        int128_t var_58_1 = zmm3;\n        int128_t zmm4;\n        int128_t var_48_1 = zmm4;\n        int128_t zmm5;\n        int128_t var_38_1 = zmm5;\n        int128_t zmm6;\n        int128_t var_28_1 = zmm6;\n        int128_t zmm7;\n        int128_t var_18_1 = zmm7;\n    }\n    void* var_c8 = &arg_8;\n    int32_t var_d0 = 8;\n    int32_t var_cc = 0x30;\n    void var_b8;\n    void* var_c0 = &var_b8;\n    char* var_d8;\n    int32_t rax = sub_408ae0(&var_d8, arg1, &var_d0);\n    if (rax < 0)\n    {\n        sub_406e80();\n        /* no return */\n    }\n    int32_t rax_1 = data_6133dc;\n    uint64_t* const rdi_1 = stdout;\n    if (rax_1 > 0)\n    {\n        char* rcx_1 = stdout[5];\n        int64_t rsi_2 = stdout[6];\n        if ((data_6133e0 - rax_1) >= rax)\n        {\n            if (rcx_1 >= rsi_2)\n            {\n                __overflow(rdi_1, 0x20);\n                rax_1 = data_6133dc;\n            }\n            else\n            {\n                stdout[5] = &rcx_1[1];\n                *rcx_1 = 0x20;\n            }\n            data_6133dc = (rax_1 + 1);\n        }\n        else\n        {\n            if (rcx_1 >= rsi_2)\n            {\n                __overflow(rdi_1, 0xa);\n            }\n            else\n            {\n                stdout[5] = &rcx_1[1];\n                *rcx_1 = 0xa;\n            }\n            data_6133dc = 0;\n        }\n    }\n    fputs_unlocked(var_d8, stdout);\n    int64_t rax_3 = free(var_d8);\n    data_6133dc = (data_6133dc + rax);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_402930",
            "funcStartAddr": "0x402930",
            "funcEndAddr": "0x402aab",
            "decompiledFuncCode": "int64_t sub_402930(struct termios* arg1, char arg2)\n{\n    speed_t rax = cfgetispeed(arg1);\n    speed_t rax_1;\n    speed_t rax_2;\n    int64_t rax_4;\n    if (rax != 0)\n    {\n        rax_1 = cfgetispeed(arg1);\n        rax_2 = cfgetospeed(arg1);\n        if (rax_1 != rax_2)\n        {\n            speed_t rax_5 = cfgetospeed(arg1);\n            if (rax_5 != 0)\n            {\n                void* rdx_2 = &data_40c3e0;\n                void* const rsi_1 = &data_40c0de;\n                int32_t rcx_2 = 0;\n                while (true)\n                {\n                    rcx_2 = (rcx_2 + 1);\n                    if (rsi_1 == 0)\n                    {\n                        break;\n                    }\n                    rdx_2 = (rdx_2 + 0x18);\n                    if (rax_5 == *(rdx_2 - 0x18))\n                    {\n                        int64_t rcx_5 = rcx_2;\n                        *((rcx_5 * 0x18) + 0x40c3d0);\n                        break;\n                    }\n                    rsi_1 = *(rdx_2 - 8);\n                }\n            }\n            speed_t rax_6 = cfgetispeed(arg1);\n            if (rax_6 != 0)\n            {\n                void* rcx_3 = &data_40c3e0;\n                void* const rdi_6 = &data_40c0de;\n                int32_t rsi_2 = 0;\n                while (true)\n                {\n                    rsi_2 = (rsi_2 + 1);\n                    if (rdi_6 == 0)\n                    {\n                        break;\n                    }\n                    rcx_3 = (rcx_3 + 0x18);\n                    if (rax_6 == *(rcx_3 - 0x18))\n                    {\n                        int64_t rsi_5 = rsi_2;\n                        *((rsi_5 * 0x18) + 0x40c3d0);\n                        break;\n                    }\n                    rdi_6 = *(rcx_3 - 8);\n                }\n            }\n            void* const rdi_7 = \"ispeed %lu baud; ospeed %lu baud\u2026\";\n            if (arg2 == 0)\n            {\n                rdi_7 = \"%lu %lu\\n\";\n            }\n            rax_4 = sub_4027c0(rdi_7, 0);\n        }\n    }\n    if ((rax == 0 || (rax != 0 && rax_1 == rax_2)))\n    {\n        speed_t rax_3 = cfgetospeed(arg1);\n        if (rax_3 != 0)\n        {\n            void* rdx_1 = &data_40c3e0;\n            void* const rsi = &data_40c0de;\n            int32_t rcx_1 = 0;\n            while (true)\n            {\n                rcx_1 = (rcx_1 + 1);\n                if (rsi == 0)\n                {\n                    break;\n                }\n                rdx_1 = (rdx_1 + 0x18);\n                if (rax_3 == *(rdx_1 - 0x18))\n                {\n                    int64_t rcx_4 = rcx_1;\n                    *((rcx_4 * 0x18) + 0x40c3d0);\n                    break;\n                }\n                rsi = *(rdx_1 - 8);\n            }\n        }\n        void* const rdi_3 = \"speed %lu baud;\";\n        if (arg2 == 0)\n        {\n            rdi_3 = \"%lu\\n\";\n        }\n        rax_4 = sub_4027c0(rdi_3, 0);\n    }\n    if (arg2 == 0)\n    {\n        data_6133dc = 0;\n    }\n    return rax_4;\n}\n\n"
        },
        {
            "funcName": "sub_402ab0",
            "funcStartAddr": "0x402ab0",
            "funcEndAddr": "0x402af2",
            "decompiledFuncCode": "int64_t sub_402ab0(char* arg1, int64_t arg2)\n{\n    return sub_406ec0(arg1, 0, 0, arg2, &data_40bdde, dcgettext(nullptr, \"invalid integer argument\", 5), 0);\n}\n\n"
        },
        {
            "funcName": "sub_402b00",
            "funcStartAddr": "0x402b00",
            "funcEndAddr": "0x402bce",
            "decompiledFuncCode": "int64_t sub_402b00(char arg1)\n{\n    if (arg1 <= 0x1f)\n    {\n        data_613300 = 0x5e;\n        data_613301 = (arg1 + 0x40);\n        data_613302 = 0;\n        return 0x613300;\n    }\n    char* rax;\n    if (arg1 <= 0x7e)\n    {\n        data_613300 = arg1;\n        rax = &data_613301;\n    }\n    else if (arg1 == 0x7f)\n    {\n        rax = &data_613302;\n        *data_613300 = 0x3f5e;\n    }\n    else\n    {\n        *data_613300 = 0x2d4d;\n        if (arg1 <= 0x9f)\n        {\n            data_613302 = 0x5e;\n            rax = &data_613304;\n            data_613303 = (arg1 - 0x40);\n        }\n        else if (arg1 == 0xff)\n        {\n            *data_613302 = 0x3f5e;\n            rax = &data_613304;\n        }\n        else\n        {\n            rax = &data_613303;\n            data_613302 = (arg1 - 0x80);\n        }\n    }\n    *rax = 0;\n    return 0x613300;\n}\n\n"
        },
        {
            "funcName": "sub_402bd0",
            "funcStartAddr": "0x402bd0",
            "funcEndAddr": "0x402ca0",
            "decompiledFuncCode": "int64_t sub_402bd0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    int16_t var_30;\n    int32_t rax_1 = ioctl(0, 0x5413, &var_30);\n    int32_t* rax_2;\n    if (rax_1 != 0)\n    {\n        rax_2 = __errno_location();\n        if (*rax_2 != 0x16)\n        {\n            error(1, *rax_2, \"%s\", sub_4064f0(0, 3, arg3));\n        }\n        else\n        {\n            var_30 = 0;\n        }\n    }\n    if (((rax_1 != 0 && *rax_2 == 0x16) || rax_1 == 0))\n    {\n        if (arg1 >= 0)\n        {\n            var_30 = arg1;\n        }\n        if (arg2 >= 0)\n        {\n            int16_t var_2e_1 = arg2;\n        }\n        int64_t rax_4 = ioctl(0, 0x5414, &var_30);\n        if (rax_4 == 0)\n        {\n            return rax_4;\n        }\n    }\n    uint64_t rsi_2;\n    char rdi;\n    rsi_2 = error(1, *__errno_location(), \"%s\", sub_4064f0(0, 3, arg3));\n    /* tailcall */\n    return sub_402ca0(rdi, rsi_2);\n}\n\n"
        },
        {
            "funcName": "sub_402ca0",
            "funcStartAddr": "0x402ca0",
            "funcEndAddr": "0x402d90",
            "decompiledFuncCode": "int32_t* sub_402ca0(char arg1, uint64_t arg2)\n{\n    int16_t var_20;\n    if (ioctl(0, 0x5413, &var_20) != 0)\n    {\n        int32_t* rax_2 = __errno_location();\n        if (*rax_2 != 0x16)\n        {\n            error(1, *rax_2, \"%s\", sub_4064f0(0, 3, arg2));\n        }\n        else if (arg1 != 0)\n        {\n            return rax_2;\n        }\n        int32_t rdi = error(1, 0, dcgettext(nullptr, \"%s: no size information for this\u2026\", 5), sub_4064f0(0, 3, arg2));\n        /* tailcall */\n        return sub_402d90(rdi);\n    }\n    if (arg1 != 0)\n    {\n        return sub_4027c0(\"rows %d; columns %d;\", 0);\n    }\n    int64_t rax_3 = sub_4027c0(\"%d %d\\n\", 0);\n    data_6133dc = 0;\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_402d90",
            "funcStartAddr": "0x402d90",
            "funcEndAddr": "0x403bc1",
            "decompiledFuncCode": "int64_t sub_402d90(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_6133f8;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [-F DEVICE | --file=DE\u2026\", 5), rbp, rbp, rbp);\n        fputs_unlocked(dcgettext(nullptr, \"Print or change terminal charact\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nMandatory arguments to long op\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -a, --all          print all c\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nOptional - before SETTING indi\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nSpecial characters:\\n\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * discard CHAR  CHAR will toggl\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"   eof CHAR      CHAR will send \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * eol2 CHAR     alternate CHAR \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"   erase CHAR    CHAR will erase\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * lnext CHAR    CHAR will enter\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"   quit CHAR     CHAR will send \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * rprnt CHAR    CHAR will redra\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"   start CHAR    CHAR will resta\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * swtch CHAR    CHAR will switc\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * werase CHAR   CHAR will erase\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nSpecial settings:\\n   N       \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * cols N        tell the kernel\u2026\", 5), stdout);\n        char* rbp_1;\n        if (data_613230 == 1)\n        {\n            rbp_1 = dcgettext(nullptr, &data_40c195, 5);\n        }\n        else\n        {\n            rbp_1 = dcgettext(nullptr, &data_40c256, 5);\n        }\n        __printf_chk(1, dcgettext(nullptr, \" * [-]drain      wait for transm\u2026\", 5), rbp_1);\n        fputs_unlocked(dcgettext(nullptr, \"   ispeed N      set the input s\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * line N        use line discip\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"   min N         with -icanon, s\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * rows N        tell the kernel\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"   speed         print the termi\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nControl settings:\\n   [-]cloca\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * [-]crtscts    enable RTS/CTS \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"   csN           set character s\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"   [-]cstopb     use two stop bi\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * [-]cmspar     use \"stick\" (ma\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nInput settings:\\n   [-]brkint \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * [-]imaxbel    beep and do not\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"   [-]inlcr      translate newli\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * [-]iutf8      assume input ch\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * [-]iuclc      translate upper\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * [-]ixany      let any charact\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"   [-]ixoff      enable sending \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nOutput settings:\\n\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * bsN           backspace delay\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * crN           carriage return\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * ffN           form feed delay\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * nlN           newline delay s\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * [-]ocrnl      translate carri\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * [-]ofdel      use delete char\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * [-]ofill      use fill (paddi\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * [-]olcuc      translate lower\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * [-]onlcr      translate newli\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * [-]onlret     newline perform\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * [-]onocr      do not print ca\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"   [-]opost      postprocess out\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * tabN          horizontal tab \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * vtN           vertical tab de\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nLocal settings:\\n   [-]crteras\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * crtkill       kill all line b\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * [-]ctlecho    echo control ch\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"   [-]echo       echo input char\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * [-]echoctl    same as [-]ctle\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"   [-]echoe      same as [-]crte\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * [-]echoke     same as [-]crtk\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"   [-]echonl     echo newline ev\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * [-]echoprt    echo erased cha\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * [-]extproc    enable \"LINEMOD\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * [-]flusho     discard output\\n\", 5), stdout);\n        __printf_chk(1, dcgettext(nullptr, \"   [-]icanon     enable special \u2026\", 5), \"erase, kill, werase, rprnt\");\n        fputs_unlocked(dcgettext(nullptr, \"   [-]isig       enable interrup\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * [-]prterase   same as [-]echo\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * [-]tostop     stop background\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * [-]xcase      with icanon, es\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nCombination settings:\\n\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * [-]LCASE      same as [-]lcas\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"   cbreak        same as -icanon\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"   cooked        same as brkint \u2026\", 5), stdout);\n        __printf_chk(1, dcgettext(nullptr, \"   crt           same as %s\\n\", 5), \"echoe echoctl echoke\");\n        __printf_chk(1, dcgettext(nullptr, \"   dec           same as %s intr\u2026\", 5), \"echoe echoctl echoke -ixany\");\n        fputs_unlocked(dcgettext(nullptr, \" * [-]decctlq    same as [-]ixan\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"   ek            erase and kill \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \" * [-]lcase      same as xcase i\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"   litout        same as -parenb\u2026\", 5), stdout);\n        __printf_chk(1, dcgettext(nullptr, \"   nl            same as %s\\n   \u2026\", 5), \"-icrnl -onlcr\", \"icrnl -inlcr -igncr onlcr -ocrnl\u2026\");\n        fputs_unlocked(dcgettext(nullptr, \"   oddp          same as parenb \u2026\", 5), stdout);\n        __printf_chk(1, dcgettext(nullptr, \"   raw           same as -ignbrk\u2026\", 5), \" -iuclc -ixany -imaxbel -xcase\");\n        __printf_chk(1, dcgettext(nullptr, \"   sane          same as cread -\u2026\", 5), \"-ixoff -iutf8 -iuclc -ixany imax\u2026\", \"opost -ofill onlcr -onocr -onlre\u2026\", \"isig -tostop -ofdel -echoprt ech\u2026\");\n        fputs_unlocked(dcgettext(nullptr, \"\\nHandle the tty line connected \u2026\", 5), stdout);\n        void* const var_88 = &data_40beba;\n        void* const* rax_95 = &var_88;\n        void* const var_78_1 = \"coreutils\";\n        void* const var_70_1 = \"Multi-call invocation\";\n        void* const var_68_1 = \"sha224sum\";\n        void* const var_60_1 = \"sha2 utilities\";\n        void* const var_58_1 = \"sha256sum\";\n        void* const var_50_1 = \"sha2 utilities\";\n        void* const var_48_1 = \"sha384sum\";\n        void* const var_40_1 = \"sha2 utilities\";\n        void* const var_38_1 = \"sha512sum\";\n        void* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_95 = &rax_95[2];\n            void* const rdi_78 = *rax_95;\n            c_1 = false;\n            z_1 = (rdi_78 & rdi_78) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            void* const rsi_85 = \"stty\";\n            int64_t rcx_2 = 5;\n            while (rcx_2 != 0)\n            {\n                char temp0_1 = *rsi_85;\n                char temp1_1 = *rdi_78;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_85 = (rsi_85 + 1);\n                rdi_78 = (rdi_78 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        void* const rbp_2 = rax_95[1];\n        char* rax_109;\n        int32_t rax_110;\n        void* const r12_1;\n        if (rbp_2 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_6;\n            uint64_t r8_3;\n            ssize_t r9_2;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_109 = setlocale(5, nullptr, rdx_6, rcx_5, r8_3, r9_2, var_88, \"test invocation\");\n            if (rax_109 != 0)\n            {\n                rax_110 = strncmp(rax_109, &data_40bf3e, 3);\n                if (rax_110 != 0)\n                {\n                    rbp_2 = \"stty\";\n                }\n            }\n            if ((rax_109 == 0 || (rax_109 != 0 && rax_110 == 0)))\n            {\n                rbp_2 = \"stty\";\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"stty\");\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_4;\n            uint64_t r8_2;\n            ssize_t r9_1;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_98 = setlocale(5, nullptr, rdx_4, rcx_3, r8_2, r9_1, var_88, \"test invocation\");\n            if (rax_98 == 0)\n            {\n                goto label_403aa0;\n            }\n            if (strncmp(rax_98, &data_40bf3e, 3) == 0)\n            {\n                goto label_403aa0;\n            }\n        }\n        if ((((rbp_2 == 0 && rax_109 != 0) && rax_110 != 0) || rbp_2 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), \"stty\");\n        label_403aa0:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"stty\");\n            if (rbp_2 != \"stty\")\n            {\n                r12_1 = &data_41101c[0x1b];\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_2, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_403bd0",
            "funcStartAddr": "0x403bd0",
            "funcEndAddr": "0x404913",
            "decompiledFuncCode": "void sub_403bd0(char arg1, int64_t arg2, int64_t arg3, int32_t arg4, \n    struct termios* arg5, char* arg6, int64_t arg7)\n{\n    if (arg4 > 1)\n    {\n        int32_t rbp_1 = 1;\n        do\n        {\n            int64_t rax = rbp_1;\n            int64_t rdx = (rax << 3);\n            char* rbx_1 = *(arg3 + (rax << 3));\n            if (rbx_1 != 0)\n            {\n                char r13_3 = 0;\n                char temp0_1 = *rbx_1;\n                bool c_1 = temp0_1 < 0x2d;\n                bool z_1 = temp0_1 == 0x2d;\n                if (z_1)\n                {\n                    char* temp1_1 = rbx_1;\n                    rbx_1 = &rbx_1[1];\n                    c_1 = temp1_1 >= -1;\n                    z_1 = temp1_1 == -1;\n                    r13_3 = 1;\n                }\n                char const* const rdi = \"drain\";\n                int64_t rcx = 6;\n                char* rsi = rbx_1;\n                while (rcx != 0)\n                {\n                    char temp2_1 = *rsi;\n                    char const temp3_1 = *rdi;\n                    c_1 = temp2_1 < temp3_1;\n                    z_1 = temp2_1 == temp3_1;\n                    rsi = &rsi[1];\n                    rdi = &rdi[1];\n                    rcx = (rcx - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rax = ((!z_1) && (!c_1));\n                rax = (rax - 0);\n                if (rax == 0)\n                {\n                    data_613230 = (r13_3 ^ 1);\n                }\n                else\n                {\n                    int64_t r15_1 = 0;\n                    char const* const r14_1 = \"parenb\";\n                    int32_t rax_3;\n                    int64_t r12_1;\n                    do\n                    {\n                        r12_1 = r15_1;\n                        rax_3 = strcmp(rbx_1, r14_1);\n                        if (rax_3 == 0)\n                        {\n                            break;\n                        }\n                        r15_1 = (r15_1 + 1);\n                        r14_1 = *((r15_1 << 5) + 0x40c9c0);\n                    } while (r14_1 != 0);\n                    uint32_t rax_4;\n                    bool c_2;\n                    bool z_2;\n                    if (rax_3 == 0)\n                    {\n                        void* r12_3 = ((r12_1 << 5) + 0x40c9c0);\n                        rax_4 = *(r12_3 + 0xc);\n                        c_2 = false;\n                        z_2 = (rax_4 & 0x10) == 0;\n                        if (z_2)\n                        {\n                            int64_t var_80_1;\n                            if (r13_3 != 0)\n                            {\n                                if ((rax_4 & 4) == 0)\n                                {\n                                    *arg7 = 1;\n                                }\n                                else\n                                {\n                                    int32_t* rax_18 = sub_402750(*(r12_3 + 8), arg5);\n                                    if (rax_18 == 0)\n                                    {\n                                        if (((strcmp(r14_1, \"evenp\") != 0 && strcmp(r14_1, \"parity\") != 0) && strcmp(r14_1, \"oddp\") != 0))\n                                        {\n                                            goto label_404091;\n                                        }\n                                        uint32_t rax_52 = arg5->c_cflag;\n                                        var_80_1 = rax_52;\n                                        arg5->c_cflag = ((rax_52 & 0xfffffecf) | 0x30);\n                                        goto label_403eb9;\n                                    }\n                                    *rax_18 = (*rax_18 & (!(*(r12_3 + 0x10) | *(r12_3 + 0x18))));\n                                    *arg7 = 1;\n                                }\n                            }\n                            else\n                            {\n                                int32_t* rax_23 = sub_402750(*(r12_3 + 8), arg5);\n                                if (rax_23 != 0)\n                                {\n                                    *rax_23 = (((!*(r12_3 + 0x18)) & *rax_23) | *(r12_3 + 0x10));\n                                    *arg7 = 1;\n                                }\n                                else\n                                {\n                                    int32_t rax_28 = strcmp(r14_1, \"evenp\");\n                                    int32_t rax_29;\n                                    if (rax_28 != 0)\n                                    {\n                                        rax_29 = strcmp(r14_1, \"parity\");\n                                        if (rax_29 != 0)\n                                        {\n                                            if (strcmp(r14_1, \"oddp\") == 0)\n                                            {\n                                                uint32_t rax_57 = arg5->c_cflag;\n                                                var_80_1 = rax_57;\n                                                arg5->c_cflag = ((rax_57 & 0xfffffccf) | 0x320);\n                                            label_403eb9:\n                                                *arg7 = 1;\n                                            }\n                                            else\n                                            {\n                                            label_404091:\n                                                if (strcmp(r14_1, &data_40c310) == 0)\n                                                {\n                                                    uint32_t rax_32 = arg5->c_oflag;\n                                                    int64_t rcx_13 = (-0x400000101 & *(arg5 + 0));\n                                                    uint32_t rdx_11 = arg5->c_iflag;\n                                                    if (r13_3 == 0)\n                                                    {\n                                                        arg5->c_iflag = rcx_13;\n                                                        arg5->c_oflag = *rcx_13[4];\n                                                        *arg7 = 1;\n                                                    }\n                                                    else\n                                                    {\n                                                        int32_t rdx_12;\n                                                        *rdx_12[1] = (*(rdx_11 & 0xfffffe3f)[1] | 1);\n                                                        arg5->c_oflag = ((rax_32 & 0xffffffd3) | 4);\n                                                        arg5->c_iflag = rdx_12;\n                                                        *arg7 = 1;\n                                                    }\n                                                }\n                                                else if (strcmp(r14_1, &data_40bf4e) == 0)\n                                                {\n                                                    arg5->c_cc[2] = 0x7f;\n                                                    arg5->c_cc[3] = 0x15;\n                                                    *arg7 = 1;\n                                                }\n                                                else\n                                                {\n                                                    if (strcmp(r14_1, \"sane\") == 0)\n                                                    {\n                                                        void* rax_76 = &data_40c7e0;\n                                                        while (true)\n                                                        {\n                                                            rax_76 = (rax_76 + 0x18);\n                                                            if (*(rax_76 - 0x18) == 0)\n                                                            {\n                                                                break;\n                                                            }\n                                                            arg5->c_cc[*(rax_76 - 8)] = *(rax_76 - 0x10);\n                                                        }\n                                                        int64_t* rbx_6 = &data_40c9c0;\n                                                        while (*rbx_6 != 0)\n                                                        {\n                                                            char rax_78 = *(rbx_6 + 0xc);\n                                                            if ((rax_78 & 0x10) == 0)\n                                                            {\n                                                                if ((rax_78 & 1) != 0)\n                                                                {\n                                                                    int32_t* rax_77 = sub_402750(rbx_6[1], arg5);\n                                                                    if (rax_77 == 0)\n                                                                    {\n                                                                        __assert_fail(\"bitsp\", \"src/stty.c\", 0x8cb, \"sane_mode\");\n                                                                        /* no return */\n                                                                    }\n                                                                    *rax_77 = (((!rbx_6[3]) & *rax_77) | rbx_6[2]);\n                                                                }\n                                                                else if ((rax_78 & 2) != 0)\n                                                                {\n                                                                    int32_t* rax_79 = sub_402750(rbx_6[1], arg5);\n                                                                    if (rax_79 == 0)\n                                                                    {\n                                                                        __assert_fail(\"bitsp\", \"src/stty.c\", 0x8d1, \"sane_mode\");\n                                                                        /* no return */\n                                                                    }\n                                                                    *rax_79 = (*rax_79 & (!(rbx_6[2] | rbx_6[3])));\n                                                                }\n                                                            }\n                                                            rbx_6 = &rbx_6[4];\n                                                        }\n                                                        goto label_403eb9;\n                                                    }\n                                                    if (strcmp(r14_1, \"cbreak\") == 0)\n                                                    {\n                                                        uint32_t rax_65 = arg5->c_lflag;\n                                                        if (r13_3 == 0)\n                                                        {\n                                                            arg5->c_lflag = (rax_65 & 0xfffffffd);\n                                                            *arg7 = 1;\n                                                        }\n                                                        else\n                                                        {\n                                                            arg5->c_lflag = (rax_65 | 2);\n                                                            *arg7 = 1;\n                                                        }\n                                                    }\n                                                    else if (strcmp(r14_1, \"pass8\") == 0)\n                                                    {\n                                                        uint32_t rax_73 = arg5->c_cflag;\n                                                        uint32_t rdx_15 = arg5->c_iflag;\n                                                        var_80_1 = rax_73;\n                                                        int32_t rax_74 = (rax_73 & 0xfffffecf);\n                                                        if (r13_3 == 0)\n                                                        {\n                                                            arg5->c_cflag = (rax_74 | 0x30);\n                                                            arg5->c_iflag = (rdx_15 & 0xffffffdf);\n                                                            *arg7 = 1;\n                                                        }\n                                                        else\n                                                        {\n                                                            arg5->c_cflag = (rax_74 | 0x120);\n                                                            arg5->c_iflag = (rdx_15 | 0x20);\n                                                            *arg7 = 1;\n                                                        }\n                                                    }\n                                                    else if (strcmp(r14_1, \"litout\") == 0)\n                                                    {\n                                                        uint32_t rax_88 = arg5->c_cflag;\n                                                        int64_t rcx_29 = (-0x100000021 & *(arg5 + 0));\n                                                        int64_t rdx_28 = (0x100000020 | *(arg5 + 0));\n                                                        var_80_1 = rax_88;\n                                                        int32_t rax_89 = (rax_88 & 0xfffffecf);\n                                                        if (r13_3 == 0)\n                                                        {\n                                                            arg5->c_cflag = (rax_89 | 0x30);\n                                                            arg5->c_iflag = rcx_29;\n                                                            arg5->c_oflag = *rcx_29[4];\n                                                            *arg7 = 1;\n                                                        }\n                                                        else\n                                                        {\n                                                            arg5->c_iflag = rdx_28;\n                                                            arg5->c_oflag = *rdx_28[4];\n                                                            arg5->c_cflag = (rax_89 | 0x120);\n                                                            *arg7 = 1;\n                                                        }\n                                                    }\n                                                    else if (strcmp(r14_1, &data_40bf7b) != 0)\n                                                    {\n                                                        if (strcmp(r14_1, \"cooked\") == 0)\n                                                        {\n                                                            goto label_404752;\n                                                        }\n                                                        if (strcmp(r14_1, \"decctlq\") == 0)\n                                                        {\n                                                            uint32_t rax_95 = arg5->c_iflag;\n                                                            if (r13_3 == 0)\n                                                            {\n                                                                *rax_95[1] = (*rax_95[1] & 0xf7);\n                                                                arg5->c_iflag = rax_95;\n                                                                *arg7 = 1;\n                                                            }\n                                                            else\n                                                            {\n                                                                *rax_95[1] = (*rax_95[1] | 8);\n                                                                arg5->c_iflag = rax_95;\n                                                                *arg7 = 1;\n                                                            }\n                                                        }\n                                                        else if (strcmp(r14_1, \"tabs\") == 0)\n                                                        {\n                                                            tcflag_t rax_100 = arg5->c_oflag;\n                                                            if (r13_3 == 0)\n                                                            {\n                                                                *rax_100[1] = (*rax_100[1] & 0xe7);\n                                                                arg5->c_oflag = rax_100;\n                                                                *arg7 = 1;\n                                                            }\n                                                            else\n                                                            {\n                                                                *rax_100[1] = (*rax_100[1] | 0x18);\n                                                                arg5->c_oflag = rax_100;\n                                                                *arg7 = 1;\n                                                            }\n                                                        }\n                                                        else if (strcmp(r14_1, \"lcase\") != 0)\n                                                        {\n                                                            if (strcmp(r14_1, \"LCASE\") == 0)\n                                                            {\n                                                                goto label_4048ce;\n                                                            }\n                                                            if (strcmp(r14_1, &data_40bf9f) == 0)\n                                                            {\n                                                                arg5->c_lflag = (arg5->c_lflag | 0xa10);\n                                                                *arg7 = 1;\n                                                            }\n                                                            else\n                                                            {\n                                                                if (strcmp(r14_1, &data_40bfa3) != 0)\n                                                                {\n                                                                    goto label_403eb9;\n                                                                }\n                                                                arg5->c_iflag = (arg5->c_iflag & 0xfffff7ff);\n                                                                arg5->c_cc[0] = 3;\n                                                                arg5->c_cc[2] = 0x7f;\n                                                                arg5->c_cc[3] = 0x15;\n                                                                arg5->c_lflag = (arg5->c_lflag | 0xa10);\n                                                                *arg7 = 1;\n                                                            }\n                                                        }\n                                                        else\n                                                        {\n                                                        label_4048ce:\n                                                            int64_t rcx_34 = (-0x200000201 & *(arg5 + 0));\n                                                            int64_t rdx_30 = (0x200000200 | *(arg5 + 0));\n                                                            uint32_t rax_107 = arg5->c_lflag;\n                                                            if (r13_3 == 0)\n                                                            {\n                                                                arg5->c_lflag = (rax_107 | 4);\n                                                                arg5->c_iflag = rdx_30;\n                                                                arg5->c_oflag = *rdx_30[4];\n                                                                *arg7 = 1;\n                                                            }\n                                                            else\n                                                            {\n                                                                arg5->c_iflag = rcx_34;\n                                                                arg5->c_oflag = *rcx_34[4];\n                                                                arg5->c_lflag = (rax_107 & 0xfffffffb);\n                                                                *arg7 = 1;\n                                                            }\n                                                        }\n                                                    }\n                                                    else\n                                                    {\n                                                    label_404752:\n                                                        char const rax_96 = *r14_1;\n                                                        if ((((rax_96 == 0x72 && r13_3 == 0) || (rax_96 != 0x72 && rax_96 != 0x63)) || (rax_96 == 0x63 && r13_3 != 0)))\n                                                        {\n                                                            arg5->c_iflag = 0;\n                                                            arg5->c_oflag = (arg5->c_oflag & 0xfffffffe);\n                                                            arg5->c_lflag = (arg5->c_lflag & 0xfffffff8);\n                                                            arg5->c_cc[5] = 0;\n                                                            arg5->c_cc[6] = 1;\n                                                            *arg7 = 1;\n                                                        }\n                                                        if (((rax_96 == 0x72 && r13_3 != 0) || (rax_96 == 0x63 && r13_3 == 0)))\n                                                        {\n                                                            arg5->c_lflag = (arg5->c_lflag | 3);\n                                                            *(arg5 + 0) = (*(arg5 + 0) | 0x100000526);\n                                                            *arg7 = 1;\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    if ((rax_28 == 0 || (rax_28 != 0 && rax_29 == 0)))\n                                    {\n                                        uint32_t rax_45 = arg5->c_cflag;\n                                        var_80_1 = rax_45;\n                                        arg5->c_cflag = ((rax_45 & 0xfffffccf) | 0x120);\n                                        *arg7 = 1;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    int32_t r12_4;\n                    char* r13_4;\n                    if ((rax_3 != 0 && r13_3 == 0))\n                    {\n                        void* r14_2 = &data_40c7f8;\n                        r12_4 = 0;\n                        r13_4 = \"intr\";\n                        do\n                        {\n                            rax_4 = strcmp(rbx_1, r13_4);\n                            if (rax_4 == 0)\n                            {\n                                break;\n                            }\n                            r14_2 = (r14_2 + 0x18);\n                            r13_4 = *(r14_2 - 0x18);\n                            r12_4 = (r12_4 + 1);\n                            c_2 = false;\n                            z_2 = (r13_4 & r13_4) == 0;\n                        } while ((!z_2));\n                    }\n                    int64_t rbx_4;\n                    char const* const rsi_15;\n                    if (((rax_3 == 0 && (!z_2)) || ((rax_3 != 0 && r13_3 == 0) && rax_4 != 0)))\n                    {\n                        char const* const rdi_2 = \"ispeed\";\n                        int64_t rcx_1 = 7;\n                        char* rsi_2 = rbx_1;\n                        while (rcx_1 != 0)\n                        {\n                            char temp4_1 = *rsi_2;\n                            char const temp5_1 = *rdi_2;\n                            c_2 = temp4_1 < temp5_1;\n                            z_2 = temp4_1 == temp5_1;\n                            rsi_2 = &rsi_2[1];\n                            rdi_2 = &rdi_2[1];\n                            rcx_1 = (rcx_1 - 1);\n                            if ((!z_2))\n                            {\n                                break;\n                            }\n                        }\n                        rax_4 = ((!z_2) && (!c_2));\n                        rax_4 = (rax_4 - 0);\n                        bool c_3 = false;\n                        bool z_3 = (rax_4 & rax_4) == 0;\n                        if ((!z_3))\n                        {\n                            char const* const rdi_8 = \"ospeed\";\n                            int64_t rcx_7 = 7;\n                            char* rsi_7 = rbx_1;\n                            while (rcx_7 != 0)\n                            {\n                                char temp7_1 = *rsi_7;\n                                char const temp8_1 = *rdi_8;\n                                c_3 = temp7_1 < temp8_1;\n                                z_3 = temp7_1 == temp8_1;\n                                rsi_7 = &rsi_7[1];\n                                rdi_8 = &rdi_8[1];\n                                rcx_7 = (rcx_7 - 1);\n                                if ((!z_3))\n                                {\n                                    break;\n                                }\n                            }\n                            rax_4 = ((!z_3) && (!c_3));\n                            rax_4 = (rax_4 - 0);\n                            bool c_6 = false;\n                            bool z_6 = (rax_4 & rax_4) == 0;\n                            speed_t rsi_8;\n                            struct termios* rdi_10;\n                            if ((!z_6))\n                            {\n                                char const* const rdi_12 = \"rows\";\n                                int64_t rcx_9 = 5;\n                                char* rsi_10 = rbx_1;\n                                while (rcx_9 != 0)\n                                {\n                                    char temp11_1 = *rsi_10;\n                                    char const temp12_1 = *rdi_12;\n                                    c_6 = temp11_1 < temp12_1;\n                                    z_6 = temp11_1 == temp12_1;\n                                    rsi_10 = &rsi_10[1];\n                                    rdi_12 = &rdi_12[1];\n                                    rcx_9 = (rcx_9 - 1);\n                                    if ((!z_6))\n                                    {\n                                        break;\n                                    }\n                                }\n                                rax_4 = ((!z_6) && (!c_6));\n                                rax_4 = (rax_4 - 0);\n                                bool c_7 = false;\n                                bool z_7 = (rax_4 & rax_4) == 0;\n                                if ((!z_7))\n                                {\n                                    char const* const rdi_17 = \"cols\";\n                                    int64_t rcx_11 = 5;\n                                    char* rsi_12 = rbx_1;\n                                    while (rcx_11 != 0)\n                                    {\n                                        char temp15_1 = *rsi_12;\n                                        char const temp16_1 = *rdi_17;\n                                        c_7 = temp15_1 < temp16_1;\n                                        z_7 = temp15_1 == temp16_1;\n                                        rsi_12 = &rsi_12[1];\n                                        rdi_17 = &rdi_17[1];\n                                        rcx_11 = (rcx_11 - 1);\n                                        if ((!z_7))\n                                        {\n                                            break;\n                                        }\n                                    }\n                                    rax_4 = ((!z_7) && (!c_7));\n                                    rax_4 = (rax_4 - 0);\n                                    int32_t rax_24;\n                                    if (rax_4 != 0)\n                                    {\n                                        rax_24 = strcmp(rbx_1, \"columns\");\n                                        if (rax_24 != 0)\n                                        {\n                                            if (strcmp(rbx_1, \"size\") != 0)\n                                            {\n                                                if (strcmp(rbx_1, \"line\") == 0)\n                                                {\n                                                    if ((arg4 - 1) == rbp_1)\n                                                    {\n                                                        goto label_404407;\n                                                    }\n                                                    int64_t* r12_8 = ((arg3 + rdx) + 8);\n                                                    char* rdi_28 = *r12_8;\n                                                    if (rdi_28 == 0)\n                                                    {\n                                                        goto label_404407;\n                                                    }\n                                                    rbp_1 = (rbp_1 + 1);\n                                                    int64_t rax_41 = sub_402ab0(rdi_28, -1);\n                                                    arg5->c_line = rax_41;\n                                                    if ((rax_41 & 0xffffffffffffff00) != 0)\n                                                    {\n                                                        error(0, 0, dcgettext(nullptr, \"invalid line discipline %s\", 5), sub_406670(*r12_8));\n                                                    }\n                                                    goto label_403eb9;\n                                                }\n                                                if (strcmp(rbx_1, \"speed\") != 0)\n                                                {\n                                                    rax = sub_402680(rbx_1);\n                                                    speed_t r12_9 = rax;\n                                                    if (rax == 0xffffffff)\n                                                    {\n                                                        int32_t* rax_81 = __errno_location();\n                                                        char* r12_10 = rbx_1;\n                                                        int64_t r13_6 = 0;\n                                                        char* var_50;\n                                                        int64_t var_48;\n                                                        do\n                                                        {\n                                                            *rax_81 = 0;\n                                                            uint64_t rax_82 = strtoul(r12_10, &var_50, 0x10);\n                                                            if (*rax_81 != 0)\n                                                            {\n                                                                break;\n                                                            }\n                                                            char* rdx_26 = var_50;\n                                                            if (*rdx_26 != 0x3a)\n                                                            {\n                                                                break;\n                                                            }\n                                                            if (rdx_26 == r12_10)\n                                                            {\n                                                                break;\n                                                            }\n                                                            if (rax_82 != rax_82)\n                                                            {\n                                                                break;\n                                                            }\n                                                            *(&var_48 + (r13_6 << 2)) = rax_82;\n                                                            r13_6 = (r13_6 + 1);\n                                                            r12_10 = &rdx_26[1];\n                                                        } while (r13_6 != 4);\n                                                        if (*rax_81 == 0)\n                                                        {\n                                                            int64_t rax_83 = var_48;\n                                                            int64_t r13_7 = 0;\n                                                            bool r15_3 = true;\n                                                            arg5->c_iflag = rax_83;\n                                                            arg5->c_oflag = *rax_83[4];\n                                                            int64_t var_40;\n                                                            arg5->c_cflag = var_40;\n                                                            arg5->c_lflag = *var_40[4];\n                                                            while (true)\n                                                            {\n                                                                *rax_81 = 0;\n                                                                uint64_t rax_85 = strtoul(r12_10, &var_50, 0x10);\n                                                                if (*rax_81 != 0)\n                                                                {\n                                                                    break;\n                                                                }\n                                                                char* rdx_27 = var_50;\n                                                                if (*rdx_27 != r15_3)\n                                                                {\n                                                                    break;\n                                                                }\n                                                                r15_3 = r12_10 == rdx_27;\n                                                                if (r12_10 == rdx_27)\n                                                                {\n                                                                    break;\n                                                                }\n                                                                if ((rax_85 & 0xffffffffffffff00) != 0)\n                                                                {\n                                                                    break;\n                                                                }\n                                                                r12_10 = &rdx_27[1];\n                                                                arg5->c_cc[r13_7] = rax_85;\n                                                                r13_7 = (r13_7 + 1);\n                                                                if (r13_7 == 0x20)\n                                                                {\n                                                                    break;\n                                                                }\n                                                                if (r13_7 != 0x1f)\n                                                                {\n                                                                    r15_3 = true;\n                                                                }\n                                                            }\n                                                            if (*rax_81 == 0)\n                                                            {\n                                                                goto label_403eb9;\n                                                            }\n                                                        }\n                                                        rsi_15 = \"invalid argument %s\";\n                                                        rbx_4 = sub_406670(rbx_1);\n                                                        goto label_404422;\n                                                    }\n                                                    if (arg1 == 0)\n                                                    {\n                                                        cfsetispeed(arg5, rax);\n                                                        rsi_8 = r12_9;\n                                                        rdi_10 = arg5;\n                                                        goto label_403ea4;\n                                                    }\n                                                }\n                                                else if (arg1 == 0)\n                                                {\n                                                    data_6133e0 = sub_4026e0();\n                                                    sub_402930(arg5, 0);\n                                                }\n                                            }\n                                            else if (arg1 == 0)\n                                            {\n                                                int32_t rax_50 = sub_4026e0();\n                                                data_6133dc = 0;\n                                                data_6133e0 = rax_50;\n                                                sub_402ca0(0, arg2);\n                                            }\n                                        }\n                                    }\n                                    if ((rax_4 == 0 || (rax_4 != 0 && rax_24 == 0)))\n                                    {\n                                        if ((arg4 - 1) == rbp_1)\n                                        {\n                                            goto label_404407;\n                                        }\n                                        char* rdi_19 = *((arg3 + rdx) + 8);\n                                        if (rdi_19 == 0)\n                                        {\n                                            goto label_404407;\n                                        }\n                                        rbp_1 = (rbp_1 + 1);\n                                        if (arg1 == 0)\n                                        {\n                                            sub_402bd0(0xffffffff, sub_402ab0(rdi_19, 0x7fffffff), arg2);\n                                        }\n                                    }\n                                }\n                                else\n                                {\n                                    if ((arg4 - 1) == rbp_1)\n                                    {\n                                        goto label_404407;\n                                    }\n                                    char* rdi_13 = *((arg3 + rdx) + 8);\n                                    if (rdi_13 == 0)\n                                    {\n                                        goto label_404407;\n                                    }\n                                    rbp_1 = (rbp_1 + 1);\n                                    if (arg1 == 0)\n                                    {\n                                        sub_402bd0(sub_402ab0(rdi_13, 0x7fffffff), 0xffffffff, arg2);\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                if ((arg4 - 1) == rbp_1)\n                                {\n                                    goto label_404407;\n                                }\n                                char* rdi_9 = *((arg3 + rdx) + 8);\n                                if (rdi_9 == 0)\n                                {\n                                    goto label_404407;\n                                }\n                                rbp_1 = (rbp_1 + 1);\n                                if (arg1 == 0)\n                                {\n                                    rdi_10 = arg5;\n                                    rsi_8 = sub_402680(rdi_9);\n                                label_403ea4:\n                                    cfsetospeed(rdi_10, rsi_8);\n                                    *arg6 = 1;\n                                    goto label_403eb9;\n                                }\n                            }\n                        }\n                        else\n                        {\n                            if ((arg4 - 1) == rbp_1)\n                            {\n                                goto label_404407;\n                            }\n                            char* rdi_3 = *((arg3 + rdx) + 8);\n                            if (rdi_3 == 0)\n                            {\n                                goto label_404407;\n                            }\n                            rbp_1 = (rbp_1 + 1);\n                            if (arg1 == 0)\n                            {\n                                rbp_1 = (rbp_1 + 1);\n                                cfsetispeed(arg5, sub_402680(rdi_3));\n                                *arg6 = 1;\n                                *arg7 = 1;\n                                if (arg4 <= rbp_1)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                    }\n                    if (((rax_3 != 0 && r13_3 == 0) && rax_4 == 0))\n                    {\n                        if ((arg4 - 1) == rbp_1)\n                        {\n                        label_404407:\n                            rsi_15 = \"missing argument to %s\";\n                            rbx_4 = sub_406670(rbx_1);\n                            goto label_404422;\n                        }\n                        char* r15_2 = *((arg3 + rdx) + 8);\n                        if (r15_2 == 0)\n                        {\n                            goto label_404407;\n                        }\n                        void* const rdi_6 = &data_40bfd2;\n                        int64_t rcx_4 = 4;\n                        char* rsi_5 = r13_4;\n                        int32_t temp6_1 = rbp_1;\n                        rbp_1 = (rbp_1 + 1);\n                        bool c_4 = temp6_1 >= 0xffffffff;\n                        bool z_4 = temp6_1 == 0xffffffff;\n                        while (rcx_4 != 0)\n                        {\n                            char temp9_1 = *rsi_5;\n                            char temp10_1 = *rdi_6;\n                            c_4 = temp9_1 < temp10_1;\n                            z_4 = temp9_1 == temp10_1;\n                            rsi_5 = &rsi_5[1];\n                            rdi_6 = (rdi_6 + 1);\n                            rcx_4 = (rcx_4 - 1);\n                            if ((!z_4))\n                            {\n                                break;\n                            }\n                        }\n                        int64_t r12_5 = r12_4;\n                        void* rbx_2 = ((r12_5 * 0x18) + 0x40c7e0);\n                        int64_t rax_12;\n                        rax_12 = ((!z_4) && (!c_4));\n                        rax_12 = (rax_12 - 0);\n                        bool c_5 = false;\n                        bool z_5 = (rax_12 & rax_12) == 0;\n                        char r12_6;\n                        if (z_5)\n                        {\n                        label_403f8b:\n                            r12_6 = sub_402ab0(r15_2, 0xff);\n                        }\n                        else\n                        {\n                            char const* const rdi_7 = \"time\";\n                            int64_t rcx_5 = 5;\n                            char* rsi_6 = r13_4;\n                            while (rcx_5 != 0)\n                            {\n                                char temp13_1 = *rsi_6;\n                                char const temp14_1 = *rdi_7;\n                                c_5 = temp13_1 < temp14_1;\n                                z_5 = temp13_1 == temp14_1;\n                                rsi_6 = &rsi_6[1];\n                                rdi_7 = &rdi_7[1];\n                                rcx_5 = (rcx_5 - 1);\n                                if ((!z_5))\n                                {\n                                    break;\n                                }\n                            }\n                            rax_12 = ((!z_5) && (!c_5));\n                            rax_12 = (rax_12 - 0);\n                            if (rax_12 == 0)\n                            {\n                                goto label_403f8b;\n                            }\n                            char r13_5 = *r15_2;\n                            char r14_3;\n                            if (r13_5 != 0)\n                            {\n                                r14_3 = r15_2[1];\n                                if (r14_3 != 0)\n                                {\n                                    r12_6 = 0;\n                                    if ((strcmp(r15_2, &data_40bfdb) != 0 && strcmp(r15_2, \"undef\") != 0))\n                                    {\n                                        if (r13_5 != 0x5e)\n                                        {\n                                            goto label_403f8b;\n                                        }\n                                        if (r14_3 == 0x3f)\n                                        {\n                                            r12_6 = 0x7f;\n                                        }\n                                        else\n                                        {\n                                            r12_6 = (r14_3 & 0x9f);\n                                        }\n                                    }\n                                }\n                            }\n                            if ((r13_5 == 0 || (r13_5 != 0 && r14_3 == 0)))\n                            {\n                                r12_6 = r13_5;\n                            }\n                        }\n                        arg5->c_cc[*(rbx_2 + 0x10)] = r12_6;\n                        *arg7 = 1;\n                    }\n                    if (((((rax_3 == 0 && z_2) && r13_3 != 0) && (rax_4 & 4) == 0) || (rax_3 != 0 && r13_3 != 0)))\n                    {\n                        rsi_15 = \"invalid argument %s\";\n                        rbx_4 = sub_406670(&rbx_1[-1]);\n                    label_404422:\n                        error(0, 0, dcgettext(nullptr, rsi_15, 5), rbx_4);\n                        sub_402d90(1);\n                        /* no return */\n                    }\n                }\n            }\n            rbp_1 = (rbp_1 + 1);\n        } while (arg4 > rbp_1);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_404920",
            "funcStartAddr": "0x404920",
            "funcEndAddr": "0x404928",
            "decompiledFuncCode": "int64_t sub_404920(int64_t arg1)\n{\n    data_6133f0 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_404930",
            "funcStartAddr": "0x404930",
            "funcEndAddr": "0x404938",
            "decompiledFuncCode": "int64_t sub_404930(char arg1)\n{\n    data_6133e8 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_404940",
            "funcStartAddr": "0x404940",
            "funcEndAddr": "0x4049de",
            "decompiledFuncCode": "void sub_404940(void* arg1)\n{\n    int32_t rax = sub_408b40(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_6133e8 == 0 || (data_6133e8 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_6133f0;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_4064c0(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_6133e8 != 0) && *rax_1 == 0x20)) && sub_408b40(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_613240);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4049e0",
            "funcStartAddr": "0x4049e0",
            "funcEndAddr": "0x404a4a",
            "decompiledFuncCode": "uint64_t sub_4049e0(int32_t arg1, char* arg2, int32_t arg3, int32_t arg4)\n{\n    int32_t rax_1 = open(arg2, arg3, arg4);\n    if ((arg1 != rax_1 && rax_1 >= 0))\n    {\n        int32_t rax_3 = dup2(rax_1, arg1);\n        int32_t* rax_4 = __errno_location();\n        int32_t r13 = *rax_4;\n        close(rax_1);\n        *rax_4 = r13;\n        return rax_3;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_404a50",
            "funcStartAddr": "0x404a50",
            "funcEndAddr": "0x404ae9",
            "decompiledFuncCode": "char* sub_404a50(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_40f760;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_6133f8 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404af0",
            "funcStartAddr": "0x404af0",
            "funcEndAddr": "0x404be2",
            "decompiledFuncCode": "char* sub_404af0(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_408c00();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_404bd1:\n                void* const rbx_1 = &data_40f764;\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_404bd1;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_404bd1;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_404bd1;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_404bd1;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_404bd1;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_404bd1;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_404bd1;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_40f76d;\n            if (cond:2_1)\n            {\n                rbx = &data_40f76a;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_404bd1;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_404bd1;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_404bd1;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_404bd1;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_404bd1;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_40f771;\n            if (cond:1_1)\n            {\n                rbx = &data_40f766;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_404bf0",
            "funcStartAddr": "0x401a75",
            "funcEndAddr": "0x405e11",
            "decompiledFuncCode": "int64_t sub_404bf0(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    char const* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n    label_404c88:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_404ffc:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_405044;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_404bf0(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char const rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_40505b;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_405195;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_404de5;\n                            }\n                            goto label_4050d0;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_405195;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_404fc0;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_404fc0:\n                            if (var_c0 == 0)\n                            {\n                                goto label_404fcb;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_404e27:\n                            if (var_5c == 0)\n                            {\n                                goto label_404e38;\n                            }\n                        label_404ff0:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_404ff8;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_40522b;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_40522b:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_40523a:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_404ffc;\n                            }\n                            goto label_404fc0;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_404fc0;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_404fc0;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_40522b;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_404dc6;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_404dc6:\n                            if (var_5c == 0)\n                            {\n                                goto label_404de5;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_404de5;\n                            }\n                            goto label_40523a;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_404dbd:\n                            if (r12_1 != 0)\n                            {\n                                goto label_404fcb;\n                            }\n                            goto label_404dc6;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_4051f0:\n                            rdx = r11_1 == 2;\n                        label_404de5:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_404eec;\n                            }\n                            goto label_404def;\n                        }\n                        case 0x27:\n                        {\n                            goto label_404f6d;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_404f3d;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_404f9a;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_405d2d;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_404f04;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_404d99;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_405390;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_405390;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_405ce0:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_405044:\n                            rbx_1 = sub_404bf0(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_40505b:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_405195;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_4050e7;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_405195;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_4050b0:\n                                r13 = 0;\n                                goto label_404e6b;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_404e38:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_404e6b:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_404e75;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_404e75:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_404e7d;\n                            }\n                            case 9:\n                            {\n                                goto label_405060;\n                            }\n                            case 0xa:\n                            {\n                                goto label_404fd8;\n                            }\n                            case 0xb:\n                            {\n                                goto label_4050c0;\n                            }\n                            case 0xc:\n                            {\n                                goto label_4050a0;\n                            }\n                            case 0xd:\n                            {\n                                goto label_405089;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_4053ea;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_405075;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_4053ca;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_4053b2;\n                            }\n                            case 0x27:\n                            {\n                                goto label_404f6d;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_404f3d;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_404f9a;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_404d99;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_405390:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_405190:\n                            var_b8 = 0;\n                        label_405195:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_4051e4:\n                                if (rdx == 0)\n                                {\n                                    goto label_4051f0;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_4056e1:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_404f04;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_404ffc;\n                                }\n                                r13 = var_98;\n                                goto label_404e7d;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_408a60(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_404ffc;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_4056e1;\n                            }\n                            goto label_4051e4;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_4050d0:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_404ffc;\n                                }\n                                var_b8 = 0;\n                            label_4050e7:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_405132;\n                                    }\n                                    rax_8 = r10;\n                                label_40512a:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_405132:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_404eec;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_405173;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_40512a;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_404eec;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_405190;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_4050a5;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_404fdd;\n                            }\n                            case 9:\n                            {\n                            label_405060:\n                                rbp_3 = 0x74;\n                                goto label_404fdd;\n                            }\n                            case 0xa:\n                            {\n                            label_404fd8:\n                                rbp_3 = 0x6e;\n                            label_404fdd:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_404ff0;\n                                }\n                                goto label_404e38;\n                            }\n                            case 0xb:\n                            {\n                            label_4050c0:\n                                rbp_3 = 0x76;\n                                goto label_4050a5;\n                            }\n                            case 0xc:\n                            {\n                            label_4050a0:\n                                rbp_3 = 0x66;\n                            label_4050a5:\n                                if (var_5c == 0)\n                                {\n                                    goto label_4050b0;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_404ff8:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_404ffc;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_405089:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_404fc0;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_4053ea:\n                                rbp_3 = 0x20;\n                                goto label_4053b2;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_405075:\n                                rdx = 0;\n                            label_404fcb:\n                                r13 = 0;\n                                goto label_404de5;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_4053ca:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_404de5;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_404def:\n                                rax_8 = 0;\n                                goto label_404df1;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_4053b2:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_404df1;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_404f6d:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_404de5;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_405d2d;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_404eec;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_404f3d:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_405d2d:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_404ffc;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_404eec:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_404e27;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_404f04;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_404de5;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_4054d0:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_404de5;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_4054d0;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_4054d0;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_4054d0;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_4054d0;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_405ce0;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_405173:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_404eec;\n                                }\n                            label_404df1:\n                                if (arg7 == 0)\n                                {\n                                    goto label_404eec;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_404eec;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_404e27;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_404f9a:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_404fc0;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_404f04:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_404e7d;\n                                }\n                            label_404e7d:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_404e86;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_404e86:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_404d99:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_404fcb;\n                                }\n                                goto label_404dbd;\n                            }\n                        }\n                    }\n                }\n            }\n        label_405476:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = \"'\";\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_404c88;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = \"'\";\n                goto label_404c88;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"'\";\n            goto label_404c88;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40f764;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40f764;\n            }\n            goto label_404c88;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_40f764;\n            goto label_404c88;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_404c88;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_404af0(&data_40f775, r13);\n                arg9 = sub_404af0(\"'\", r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_404c88;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_405476;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n        goto label_404c88;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_405e20",
            "funcStartAddr": "0x401a7a",
            "funcEndAddr": "0x405fbe",
            "decompiledFuncCode": "char* sub_405e20(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_613298;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_6132b0 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_406e80();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x6132a0)\n        {\n            int64_t rax_9 = sub_406c90(0, rsi_1);\n            int128_t zmm0 = data_6132a0;\n            rbx = rax_9;\n            data_613298 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_406c90(rbx, rsi_1);\n            data_613298 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_6132b0;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_6132b0 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_404bf0(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        uint64_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x613400)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_406c30(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_404bf0(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_405fc0",
            "funcStartAddr": "0x405fc0",
            "funcEndAddr": "0x405ff4",
            "decompiledFuncCode": "int64_t sub_405fc0(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x613500;\n    }\n    int64_t rax_1 = sub_406e30(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_406000",
            "funcStartAddr": "0x406000",
            "funcEndAddr": "0x40600f",
            "decompiledFuncCode": "uint64_t sub_406000(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_613500;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_406010",
            "funcStartAddr": "0x406010",
            "funcEndAddr": "0x40601f",
            "decompiledFuncCode": "void sub_406010(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_613500;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_406020",
            "funcStartAddr": "0x406020",
            "funcEndAddr": "0x406053",
            "decompiledFuncCode": "uint64_t sub_406020(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x613500;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_406060",
            "funcStartAddr": "0x406060",
            "funcEndAddr": "0x406073",
            "decompiledFuncCode": "uint64_t sub_406060(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_613500;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_406080",
            "funcStartAddr": "0x406080",
            "funcEndAddr": "0x4060ab",
            "decompiledFuncCode": "void sub_406080(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_613500;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x613500;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4060b0",
            "funcStartAddr": "0x4060b0",
            "funcEndAddr": "0x406122",
            "decompiledFuncCode": "int64_t sub_4060b0(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_613500;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_404bf0(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_406130",
            "funcStartAddr": "0x406130",
            "funcEndAddr": "0x406211",
            "decompiledFuncCode": "char* sub_406130(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_613500;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_404bf0(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_406c30((rax_2 + 1));\n    sub_404bf0(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_406220",
            "funcStartAddr": "0x406220",
            "funcEndAddr": "0x40622a",
            "decompiledFuncCode": "int64_t sub_406220(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_406130(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_406230",
            "funcStartAddr": "0x406230",
            "funcEndAddr": "0x4062c5",
            "decompiledFuncCode": "uint64_t sub_406230()\n{\n    uint64_t rax_2 = data_6132b0;\n    int64_t r12 = data_613298;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x613400)\n    {\n        rax_2 = free(rdi_2);\n        *data_6132a0 = 0x100;\n        *(data_6132a0 + 8) = 0x613400;\n    }\n    if (r12 != 0x6132a0)\n    {\n        rax_2 = free(r12);\n        data_613298 = 0x6132a0;\n    }\n    data_6132b0 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_4062d0",
            "funcStartAddr": "0x4062d0",
            "funcEndAddr": "0x4062e1",
            "decompiledFuncCode": "int64_t sub_4062d0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_405e20(arg1, arg2, -1, &data_613500);\n}\n\n"
        },
        {
            "funcName": "sub_4062f0",
            "funcStartAddr": "0x4062f0",
            "funcEndAddr": "0x4062fa",
            "decompiledFuncCode": "int64_t sub_4062f0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_405e20(arg1, arg2, arg3, &data_613500);\n}\n\n"
        },
        {
            "funcName": "sub_406300",
            "funcStartAddr": "0x406300",
            "funcEndAddr": "0x406316",
            "decompiledFuncCode": "int64_t sub_406300(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_405e20(0, arg1, -1, &data_613500);\n}\n\n"
        },
        {
            "funcName": "sub_406320",
            "funcStartAddr": "0x406320",
            "funcEndAddr": "0x406332",
            "decompiledFuncCode": "int64_t sub_406320(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_405e20(0, arg1, arg2, &data_613500);\n}\n\n"
        },
        {
            "funcName": "sub_406340",
            "funcStartAddr": "0x401a7f",
            "funcEndAddr": "0x4063a8",
            "decompiledFuncCode": "char* sub_406340(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_405e20(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_4063b0",
            "funcStartAddr": "0x401a84",
            "funcEndAddr": "0x406414",
            "decompiledFuncCode": "char* sub_4063b0(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_405e20(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_406420",
            "funcStartAddr": "0x406420",
            "funcEndAddr": "0x40642c",
            "decompiledFuncCode": "int64_t sub_406420(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_406340(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_406430",
            "funcStartAddr": "0x406430",
            "funcEndAddr": "0x40643f",
            "decompiledFuncCode": "int64_t sub_406430(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_4063b0(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_406440",
            "funcStartAddr": "0x406440",
            "funcEndAddr": "0x4064b0",
            "decompiledFuncCode": "char* sub_406440(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_613530;\n    int128_t var_48 = data_613500;\n    int128_t var_38 = data_613510;\n    int128_t var_28 = data_613520;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_405e20(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_4064b0",
            "funcStartAddr": "0x4064b0",
            "funcEndAddr": "0x4064bd",
            "decompiledFuncCode": "int64_t sub_4064b0(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_406440(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_4064c0",
            "funcStartAddr": "0x4064c0",
            "funcEndAddr": "0x4064d1",
            "decompiledFuncCode": "int64_t sub_4064c0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_406440(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_4064e0",
            "funcStartAddr": "0x4064e0",
            "funcEndAddr": "0x4064ea",
            "decompiledFuncCode": "int64_t sub_4064e0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_406440(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_4064f0",
            "funcStartAddr": "0x401a89",
            "funcEndAddr": "0x40655e",
            "decompiledFuncCode": "char* sub_4064f0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_405e20(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_406560",
            "funcStartAddr": "0x406560",
            "funcEndAddr": "0x4065cc",
            "decompiledFuncCode": "char* sub_406560(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_613500;\n    int128_t var_38 = data_613510;\n    int128_t var_28 = data_613520;\n    int64_t var_18 = data_613530;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_405e20(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_406670",
            "funcStartAddr": "0x406670",
            "funcEndAddr": "0x406686",
            "decompiledFuncCode": "int64_t sub_406670(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_405e20(0, arg1, -1, &data_613260);\n}\n\n"
        },
        {
            "funcName": "sub_406690",
            "funcStartAddr": "0x401a8e",
            "funcEndAddr": "0x406a6d",
            "decompiledFuncCode": "int64_t sub_406690(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_4104cb, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_406a70",
            "funcStartAddr": "0x406a70",
            "funcEndAddr": "0x406a90",
            "decompiledFuncCode": "int64_t sub_406a70(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_406690(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_406a90",
            "funcStartAddr": "0x406a90",
            "funcEndAddr": "0x406af0",
            "decompiledFuncCode": "int64_t sub_406a90(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_406690(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_406af0",
            "funcStartAddr": "0x406af0",
            "funcEndAddr": "0x406bac",
            "decompiledFuncCode": "int64_t sub_406af0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_406690(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_406bb0",
            "funcStartAddr": "0x406bb0",
            "funcEndAddr": "0x406c24",
            "decompiledFuncCode": "int64_t sub_406bb0()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_406c30",
            "funcStartAddr": "0x406c30",
            "funcEndAddr": "0x406c4a",
            "decompiledFuncCode": "int64_t sub_406c30(uint64_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_406e80();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_406c90",
            "funcStartAddr": "0x406c90",
            "funcEndAddr": "0x406cc6",
            "decompiledFuncCode": "int64_t sub_406c90(int64_t arg1, uint64_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_406e80();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_406dda",
            "funcStartAddr": "0x406dda",
            "funcEndAddr": "0x406de0",
            "decompiledFuncCode": "int64_t sub_406dda() __noreturn\n{\n    sub_406e80();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_406de0",
            "funcStartAddr": "0x406de0",
            "funcEndAddr": "0x406df7",
            "decompiledFuncCode": "int64_t sub_406de0(uint64_t arg1)\n{\n    /* tailcall */\n    return memset(sub_406c30(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_406e00",
            "funcStartAddr": "0x406e00",
            "funcEndAddr": "0x406e2e",
            "decompiledFuncCode": "int64_t sub_406e00(uint64_t arg1, uint64_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_406e80();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_406e30",
            "funcStartAddr": "0x406e30",
            "funcEndAddr": "0x406e58",
            "decompiledFuncCode": "int64_t sub_406e30(int64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_406c30(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_406e60",
            "funcStartAddr": "0x406e60",
            "funcEndAddr": "0x406e73",
            "decompiledFuncCode": "int64_t sub_406e60(char* arg1)\n{\n    /* tailcall */\n    return sub_406e30(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_406e80",
            "funcStartAddr": "0x406e80",
            "funcEndAddr": "0x406eb1",
            "decompiledFuncCode": "int64_t sub_406e80() __noreturn\n{\n    error(data_613240, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_406ec0",
            "funcStartAddr": "0x406ec0",
            "funcEndAddr": "0x406f90",
            "decompiledFuncCode": "int64_t sub_406ec0(char* arg1, int32_t arg2, int64_t arg3, int64_t arg4, \n    char* arg5, int64_t arg6, int32_t arg7)\n{\n    int32_t rbx = arg7;\n    int64_t var_40;\n    int32_t rax = sub_407710(arg1, nullptr, arg2, &var_40, arg5);\n    int64_t rbp;\n    int32_t* r14_1;\n    if (rax == 0)\n    {\n        rbp = var_40;\n        if ((rbp < arg3 || (rbp >= arg3 && rbp > arg4)))\n        {\n            int32_t* rax_1 = __errno_location();\n            r14_1 = rax_1;\n            *r14_1 = (((rax_1 - rax_1) & 0xffffffd7) + 0x4b);\n        }\n    }\n    else\n    {\n        int32_t* rax_8 = __errno_location();\n        r14_1 = rax_8;\n        if (rax == 1)\n        {\n            *rax_8 = 0x4b;\n        }\n        else if (rax == 3)\n        {\n            *rax_8 = 0;\n        }\n    }\n    if (((rax == 0 && (rbp < arg3 || (rbp >= arg3 && rbp > arg4))) || rax != 0))\n    {\n        int64_t rax_5 = sub_406670(arg1);\n        uint64_t rsi = *r14_1;\n        if (rsi == 0x16)\n        {\n            rsi = 0;\n        }\n        if (rbx == 0)\n        {\n            rbx = 1;\n        }\n        error(rbx, rsi, \"%s: %s\", arg6, rax_5);\n        rbp = var_40;\n    }\n    return rbp;\n}\n\n"
        },
        {
            "funcName": "sub_406f90",
            "funcStartAddr": "0x406f90",
            "funcEndAddr": "0x406fb1",
            "decompiledFuncCode": "int64_t sub_406f90(char* arg1, int64_t arg2, int64_t arg3, char* arg4, \n    int64_t arg5, int32_t arg6)\n{\n    return sub_406ec0(arg1, 0xa, arg2, arg3, arg4, arg5, arg6);\n}\n\n"
        },
        {
            "funcName": "sub_406fc0",
            "funcStartAddr": "0x406fc0",
            "funcEndAddr": "0x407702",
            "decompiledFuncCode": "uint64_t sub_406fc0(char* arg1, int64_t* arg2, int32_t arg3, int64_t* arg4, \n    char* arg5)\n{\n    if (arg3 > 0x24)\n    {\n        __assert_fail(\"0 <= strtol_base && strtol_base \u2026\", \"lib/xstrtol.c\", 0x60, \"xstrtol\");\n        /* no return */\n    }\n    int64_t* rbx = arg2;\n    void var_40;\n    if (arg2 == 0)\n    {\n        rbx = &var_40;\n    }\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char* r15 = *rbx;\n    int64_t rbp_1 = strtol(arg1, rbx, arg3);\n    int32_t r12_1;\n    uint32_t r13_1;\n    if (r15 != arg1)\n    {\n        int32_t rax_2 = *rax;\n        if (rax_2 != 0)\n        {\n            r12_1 = 4;\n        }\n        if (rax_2 == 0x22)\n        {\n            r12_1 = 1;\n        }\n        if (rax_2 == 0)\n        {\n            r12_1 = 0;\n        }\n        if ((rax_2 == 0 || rax_2 == 0x22))\n        {\n            if (arg5 == 0)\n            {\n            label_407039:\n                *arg4 = rbp_1;\n            }\n            else\n            {\n                r13_1 = *r15;\n                if (r13_1 == 0)\n                {\n                    goto label_407039;\n                }\n                if (strchr(arg5, r13_1) != 0)\n                {\n                    goto label_40709d;\n                }\n            label_407149:\n                r12_1 = (r12_1 | 2);\n                *arg4 = rbp_1;\n            }\n        }\n    }\n    else\n    {\n        if (arg5 != 0)\n        {\n            r13_1 = *r15;\n            r12_1 = 4;\n            if (r13_1 != 0)\n            {\n                rbp_1 = 1;\n                r12_1 = 0;\n                if (strchr(arg5, r13_1) != 0)\n                {\n                label_40709d:\n                    uint64_t rdx_1 = (r13_1 - 0x45);\n                    int32_t rax_6;\n                    char* rax_7;\n                    char rax_8;\n                    int64_t rax_14;\n                    int64_t rcx;\n                    int64_t rcx_1;\n                    int64_t rcx_2;\n                    int64_t rcx_3;\n                    int64_t rcx_4;\n                    int64_t rcx_5;\n                    int64_t rcx_6;\n                    uint64_t rdx_2;\n                    int32_t rsi_2;\n                    int64_t rsi_4;\n                    int64_t rdi_4;\n                    int64_t r9_1;\n                    int64_t r9_2;\n                    int64_t r9_3;\n                    int64_t r9_4;\n                    int64_t r9_5;\n                    int64_t r9_6;\n                    char r13_2;\n                    if (rdx_1 <= 0x2f)\n                    {\n                        char var_49_1 = rdx_1;\n                        if ((!(TEST_BITQ(0x814400308945, rdx_1))))\n                        {\n                            goto label_4070a6;\n                        }\n                        rax_7 = strchr(arg5, 0x30);\n                        if (rax_7 == 0)\n                        {\n                            goto label_4070a6;\n                        }\n                        rax_8 = r15[1];\n                        if ((rax_8 != 0x44 && rax_8 != 0x69))\n                        {\n                            rdx_2 = var_49_1;\n                            if (rax_8 != 0x42)\n                            {\n                                switch (rdx_2)\n                                {\n                                    case 1:\n                                    case 3:\n                                    case 4:\n                                    case 5:\n                                    case 7:\n                                    case 9:\n                                    case 0xa:\n                                    case 0xc:\n                                    case 0xd:\n                                    case 0xe:\n                                    case 0x10:\n                                    case 0x11:\n                                    case 0x12:\n                                    case 0x13:\n                                    case 0x16:\n                                    case 0x17:\n                                    case 0x18:\n                                    case 0x19:\n                                    case 0x1a:\n                                    case 0x1b:\n                                    case 0x1c:\n                                    case 0x1f:\n                                    case 0x20:\n                                    case 0x21:\n                                    case 0x23:\n                                    case 0x24:\n                                    case 0x25:\n                                    case 0x27:\n                                    case 0x29:\n                                    case 0x2a:\n                                    case 0x2b:\n                                    case 0x2c:\n                                    case 0x2d:\n                                    case 0x2e:\n                                    {\n                                        goto label_407149;\n                                    }\n                                    case 6:\n                                    case 0x26:\n                                    {\n                                        rcx = 0x400;\n                                        rax_14 = -0x20000000000000;\n                                        break;\n                                    }\n                                    case 8:\n                                    case 0x28:\n                                    {\n                                        rcx = 0x400;\n                                        rdi_4 = -0x20000000000000;\n                                        break;\n                                    }\n                                    case 0x1d:\n                                    {\n                                        /* nop */\n                                        break;\n                                    }\n                                }\n                                switch (rdx_2)\n                                {\n                                    case 0xb:\n                                    {\n                                        rsi_4 = 1;\n                                        rcx_1 = 0x400;\n                                        r9_1 = -0x20000000000000;\n                                        goto label_4072c8;\n                                    }\n                                    case 0xf:\n                                    case 0x2f:\n                                    {\n                                        rsi_4 = 1;\n                                        rcx_2 = 0x400;\n                                        r9_2 = -0x20000000000000;\n                                        goto label_407330;\n                                    }\n                                    case 0x14:\n                                    {\n                                        rsi_4 = 1;\n                                        rcx_5 = 0x400;\n                                        r9_5 = -0x20000000000000;\n                                        goto label_407468;\n                                    }\n                                    case 0x15:\n                                    {\n                                        rsi_4 = 1;\n                                        rcx_6 = 0x400;\n                                        r9_6 = -0x20000000000000;\n                                        goto label_4074d0;\n                                    }\n                                }\n                                if ((rdx_2 == 2 || rdx_2 == 0x22))\n                                {\n                                    rsi_4 = 1;\n                                    rcx_4 = 0x400;\n                                    r9_4 = -0x20000000000000;\n                                    goto label_407400;\n                                }\n                                if (rdx_2 == 0)\n                                {\n                                    rsi_4 = 1;\n                                    rcx_3 = 0x400;\n                                    r9_3 = -0x20000000000000;\n                                    goto label_407398;\n                                }\n                                if (rdx_2 == 0x1e)\n                                {\n                                    rsi_4 = 1;\n                                    goto label_407188;\n                                }\n                            }\n                        }\n                        if (rax_8 == 0x42)\n                        {\n                            goto label_4076b8;\n                        }\n                        if (rax_8 == 0x69)\n                        {\n                            rax_6 = 0x400;\n                            int32_t rsi_6;\n                            rsi_6 = r15[2] == 0x42;\n                            rsi_2 = ((rsi_6 + rsi_6) + 1);\n                            goto label_4070b0;\n                        }\n                        if (rax_8 == 0x44)\n                        {\n                        label_4076b8:\n                            rsi_2 = 2;\n                            rax_6 = 0x3e8;\n                            goto label_4070b0;\n                        }\n                    }\n                    else\n                    {\n                    label_4070a6:\n                        rsi_2 = 1;\n                        rax_6 = 0x400;\n                    label_4070b0:\n                        r13_2 = (r13_1 - 0x42);\n                        if ((r13_2 == 9 || r13_2 == 0x29))\n                        {\n                            rcx = rax_6;\n                            rsi_4 = rsi_2;\n                            int64_t rax_13;\n                            int64_t rdx_3;\n                            rdx_3 = HIGHD(-0x8000000000000000);\n                            rax_13 = LOWD(-0x8000000000000000);\n                            rax_14 = (COMBINE(rdx_3, rax_13) / rcx);\n                        }\n                    }\n                    int64_t rax_16;\n                    if (((rdx_1 > 0x2f && (r13_2 == 9 || r13_2 == 0x29)) || ((((((rdx_1 <= 0x2f && (TEST_BITQ(0x814400308945, rdx_1))) && rax_7 != 0) && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && (rdx_2 == 6 || rdx_2 == 0x26))))\n                    {\n                        if (rbp_1 < rax_14)\n                        {\n                            goto label_407258;\n                        }\n                        int64_t rax_15;\n                        int64_t rdx_5;\n                        rdx_5 = HIGHD(0x7fffffffffffffff);\n                        rax_15 = LOWD(0x7fffffffffffffff);\n                        rax_16 = (COMBINE(rdx_5, rax_15) / rcx);\n                    }\n                    if ((rdx_1 > 0x2f && (r13_2 == 0xb || r13_2 == 0x2b)))\n                    {\n                        rcx = rax_6;\n                        rsi_4 = rsi_2;\n                        int64_t rax_17;\n                        int64_t rdx_7;\n                        rdx_7 = HIGHD(-0x8000000000000000);\n                        rax_17 = LOWD(-0x8000000000000000);\n                        rdi_4 = (COMBINE(rdx_7, rax_17) / rcx);\n                    }\n                    if (((rdx_1 > 0x2f && (r13_2 == 0xb || r13_2 == 0x2b)) || ((((((rdx_1 <= 0x2f && (TEST_BITQ(0x814400308945, rdx_1))) && rax_7 != 0) && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && (rdx_2 == 8 || rdx_2 == 0x28))))\n                    {\n                        if (rbp_1 < rdi_4)\n                        {\n                            goto label_407258;\n                        }\n                        int64_t rax_19;\n                        int64_t rdx_9;\n                        rdx_9 = HIGHD(0x7fffffffffffffff);\n                        rax_19 = LOWD(0x7fffffffffffffff);\n                        rax_16 = (COMBINE(rdx_9, rax_19) / rcx);\n                        if (rbp_1 > rax_16)\n                        {\n                            goto label_407610;\n                        }\n                        rbp_1 = (rbp_1 * rcx);\n                        if (rbp_1 < rdi_4)\n                        {\n                            goto label_407258;\n                        }\n                    }\n                    if (((((rdx_1 > 0x2f && (r13_2 == 9 || r13_2 == 0x29)) || ((((((rdx_1 <= 0x2f && (TEST_BITQ(0x814400308945, rdx_1))) && rax_7 != 0) && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && (rdx_2 == 6 || rdx_2 == 0x26))) && rbp_1 >= rax_14) || (((rdx_1 > 0x2f && (r13_2 == 0xb || r13_2 == 0x2b)) || ((((((rdx_1 <= 0x2f && (TEST_BITQ(0x814400308945, rdx_1))) && rax_7 != 0) && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && (rdx_2 == 8 || rdx_2 == 0x28))) && rbp_1 >= rdi_4)))\n                    {\n                        if (rax_16 < rbp_1)\n                        {\n                            goto label_407610;\n                        }\n                        rbp_1 = (rbp_1 * rcx);\n                        goto label_407188;\n                    }\n                    if ((rdx_1 > 0x2f && r13_2 == 0x20))\n                    {\n                        rsi_4 = rsi_2;\n                    }\n                    if (((rdx_1 > 0x2f && r13_2 == 0x20) || ((((((rdx_1 <= 0x2f && (TEST_BITQ(0x814400308945, rdx_1))) && rax_7 != 0) && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && rdx_2 == 0x1d)))\n                    {\n                        if (rbp_1 < -0x40000000000000)\n                        {\n                            goto label_407258;\n                        }\n                        if (rbp_1 > 0x3fffffffffffff)\n                        {\n                            goto label_407610;\n                        }\n                        rbp_1 = (rbp_1 << 9);\n                        goto label_407188;\n                    }\n                    if (rdx_1 > 0x2f)\n                    {\n                        switch (r13_2)\n                        {\n                            case 0:\n                            {\n                                rsi_4 = rsi_2;\n                                if (rbp_1 < -0x20000000000000)\n                                {\n                                label_407258:\n                                    rbp_1 = -0x8000000000000000;\n                                    r12_1 = 1;\n                                    goto label_407188;\n                                }\n                                if (rbp_1 <= 0x1fffffffffffff)\n                                {\n                                    rbp_1 = (rbp_1 << 0xa);\n                                    goto label_407188;\n                                }\n                            label_407610:\n                                rbp_1 = 0x7fffffffffffffff;\n                                r12_1 = 1;\n                                goto label_407188;\n                            }\n                            case 1:\n                            case 2:\n                            case 4:\n                            case 6:\n                            case 7:\n                            case 8:\n                            case 0xa:\n                            case 0xc:\n                            case 0xd:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x22:\n                            case 0x23:\n                            case 0x24:\n                            case 0x26:\n                            case 0x27:\n                            case 0x28:\n                            case 0x2a:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x33:\n                            case 0x34:\n                            {\n                                goto label_407149;\n                            }\n                            case 0x21:\n                            {\n                                rsi_4 = rsi_2;\n                            label_407188:\n                                void* rsi_5 = &r15[rsi_4];\n                                int32_t rax_12 = (r12_1 | 2);\n                                *rbx = rsi_5;\n                                if (*rsi_5 != 0)\n                                {\n                                    r12_1 = rax_12;\n                                }\n                                goto label_407039;\n                            }\n                            case 0x35:\n                            {\n                                rsi_4 = rsi_2;\n                                if (rbp_1 < -0x4000000000000000)\n                                {\n                                    goto label_407258;\n                                }\n                                if (rbp_1 > 0x3fffffffffffffff)\n                                {\n                                    goto label_407610;\n                                }\n                                rbp_1 = (rbp_1 + rbp_1);\n                                goto label_407188;\n                            }\n                        }\n                        int32_t r10_1;\n                        switch (r13_2)\n                        {\n                            case 3:\n                            {\n                                rcx_3 = rax_6;\n                                rsi_4 = rsi_2;\n                                int64_t rax_28;\n                                int64_t rdx_19;\n                                rdx_19 = HIGHD(-0x8000000000000000);\n                                rax_28 = LOWD(-0x8000000000000000);\n                                r9_3 = (COMBINE(rdx_19, rax_28) / rcx_3);\n                            label_407398:\n                                int32_t rdi_7 = 6;\n                                r10_1 = 0;\n                                do\n                                {\n                                    if (rbp_1 < r9_3)\n                                    {\n                                        rbp_1 = -0x8000000000000000;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        int64_t rax_30;\n                                        int64_t rdx_21;\n                                        rdx_21 = HIGHD(0x7fffffffffffffff);\n                                        rax_30 = LOWD(0x7fffffffffffffff);\n                                        if ((COMBINE(rdx_21, rax_30) / rcx_3) < rbp_1)\n                                        {\n                                            rbp_1 = 0x7fffffffffffffff;\n                                            r10_1 = 1;\n                                        }\n                                        else\n                                        {\n                                            rbp_1 = (rbp_1 * rcx_3);\n                                        }\n                                    }\n                                    rdi_7 = (rdi_7 - 1);\n                                } while (rdi_7 != 1);\n                                goto label_407600;\n                            }\n                            case 5:\n                            case 0x25:\n                            {\n                                rcx_4 = rax_6;\n                                rsi_4 = rsi_2;\n                                int64_t rax_32;\n                                int64_t rdx_23;\n                                rdx_23 = HIGHD(-0x8000000000000000);\n                                rax_32 = LOWD(-0x8000000000000000);\n                                r9_4 = (COMBINE(rdx_23, rax_32) / rcx_4);\n                            label_407400:\n                                int32_t rdi_8 = 3;\n                                r10_1 = 0;\n                                do\n                                {\n                                    if (rbp_1 < r9_4)\n                                    {\n                                        rbp_1 = -0x8000000000000000;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        int64_t rax_34;\n                                        int64_t rdx_25;\n                                        rdx_25 = HIGHD(0x7fffffffffffffff);\n                                        rax_34 = LOWD(0x7fffffffffffffff);\n                                        if ((COMBINE(rdx_25, rax_34) / rcx_4) < rbp_1)\n                                        {\n                                            rbp_1 = 0x7fffffffffffffff;\n                                            r10_1 = 1;\n                                        }\n                                        else\n                                        {\n                                            rbp_1 = (rbp_1 * rcx_4);\n                                        }\n                                    }\n                                    rdi_8 = (rdi_8 - 1);\n                                } while (rdi_8 != 1);\n                                goto label_407600;\n                            }\n                            case 0xe:\n                            {\n                                rcx_1 = rax_6;\n                                rsi_4 = rsi_2;\n                                int64_t rax_20;\n                                int64_t rdx_11;\n                                rdx_11 = HIGHD(-0x8000000000000000);\n                                rax_20 = LOWD(-0x8000000000000000);\n                                r9_1 = (COMBINE(rdx_11, rax_20) / rcx_1);\n                            label_4072c8:\n                                int32_t rdi_5 = 5;\n                                r10_1 = 0;\n                                do\n                                {\n                                    if (r9_1 > rbp_1)\n                                    {\n                                        rbp_1 = -0x8000000000000000;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        int64_t rax_22;\n                                        int64_t rdx_13;\n                                        rdx_13 = HIGHD(0x7fffffffffffffff);\n                                        rax_22 = LOWD(0x7fffffffffffffff);\n                                        if ((COMBINE(rdx_13, rax_22) / rcx_1) < rbp_1)\n                                        {\n                                            rbp_1 = 0x7fffffffffffffff;\n                                            r10_1 = 1;\n                                        }\n                                        else\n                                        {\n                                            rbp_1 = (rbp_1 * rcx_1);\n                                        }\n                                    }\n                                    rdi_5 = (rdi_5 - 1);\n                                } while (rdi_5 != 1);\n                            label_407600:\n                                r12_1 = (r12_1 | r10_1);\n                                goto label_407188;\n                            }\n                            case 0x12:\n                            case 0x32:\n                            {\n                                rcx_2 = rax_6;\n                                rsi_4 = rsi_2;\n                                int64_t rax_24;\n                                int64_t rdx_15;\n                                rdx_15 = HIGHD(-0x8000000000000000);\n                                rax_24 = LOWD(-0x8000000000000000);\n                                r9_2 = (COMBINE(rdx_15, rax_24) / rcx_2);\n                            label_407330:\n                                int32_t rdi_6 = 4;\n                                r10_1 = 0;\n                                do\n                                {\n                                    if (r9_2 > rbp_1)\n                                    {\n                                        rbp_1 = -0x8000000000000000;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        int64_t rax_26;\n                                        int64_t rdx_17;\n                                        rdx_17 = HIGHD(0x7fffffffffffffff);\n                                        rax_26 = LOWD(0x7fffffffffffffff);\n                                        if ((COMBINE(rdx_17, rax_26) / rcx_2) < rbp_1)\n                                        {\n                                            rbp_1 = 0x7fffffffffffffff;\n                                            r10_1 = 1;\n                                        }\n                                        else\n                                        {\n                                            rbp_1 = (rbp_1 * rcx_2);\n                                        }\n                                    }\n                                    rdi_6 = (rdi_6 - 1);\n                                } while (rdi_6 != 1);\n                                goto label_407600;\n                            }\n                        }\n                        if (r13_2 == 0x17)\n                        {\n                            rcx_5 = rax_6;\n                            rsi_4 = rsi_2;\n                            int64_t rax_36;\n                            int64_t rdx_27;\n                            rdx_27 = HIGHD(-0x8000000000000000);\n                            rax_36 = LOWD(-0x8000000000000000);\n                            r9_5 = (COMBINE(rdx_27, rax_36) / rcx_5);\n                        label_407468:\n                            int32_t rdi_9 = 8;\n                            r10_1 = 0;\n                            do\n                            {\n                                if (r9_5 > rbp_1)\n                                {\n                                    rbp_1 = -0x8000000000000000;\n                                    r10_1 = 1;\n                                }\n                                else\n                                {\n                                    int64_t rax_38;\n                                    int64_t rdx_29;\n                                    rdx_29 = HIGHD(0x7fffffffffffffff);\n                                    rax_38 = LOWD(0x7fffffffffffffff);\n                                    if ((COMBINE(rdx_29, rax_38) / rcx_5) < rbp_1)\n                                    {\n                                        rbp_1 = 0x7fffffffffffffff;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        rbp_1 = (rbp_1 * rcx_5);\n                                    }\n                                }\n                                rdi_9 = (rdi_9 - 1);\n                            } while (rdi_9 != 1);\n                            goto label_407600;\n                        }\n                        if (r13_2 == 0x18)\n                        {\n                            rcx_6 = rax_6;\n                            rsi_4 = rsi_2;\n                            int64_t rax_40;\n                            int64_t rdx_31;\n                            rdx_31 = HIGHD(-0x8000000000000000);\n                            rax_40 = LOWD(-0x8000000000000000);\n                            r9_6 = (COMBINE(rdx_31, rax_40) / rcx_6);\n                        label_4074d0:\n                            int32_t rdi_10 = 7;\n                            r10_1 = 0;\n                            do\n                            {\n                                if (r9_6 > rbp_1)\n                                {\n                                    rbp_1 = -0x8000000000000000;\n                                    r10_1 = 1;\n                                }\n                                else\n                                {\n                                    int64_t rax_42;\n                                    int64_t rdx_33;\n                                    rdx_33 = HIGHD(0x7fffffffffffffff);\n                                    rax_42 = LOWD(0x7fffffffffffffff);\n                                    if ((COMBINE(rdx_33, rax_42) / rcx_6) < rbp_1)\n                                    {\n                                        rbp_1 = 0x7fffffffffffffff;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        rbp_1 = (rbp_1 * rcx_6);\n                                    }\n                                }\n                                rdi_10 = (rdi_10 - 1);\n                            } while (rdi_10 != 1);\n                            goto label_407600;\n                        }\n                        if (r13_2 > 0x35)\n                        {\n                            goto label_407149;\n                        }\n                    }\n                }\n            }\n        }\n        if ((arg5 == 0 || (arg5 != 0 && r13_1 != 0)))\n        {\n            r12_1 = 4;\n        }\n    }\n    return r12_1;\n}\n\n"
        },
        {
            "funcName": "sub_407710",
            "funcStartAddr": "0x407710",
            "funcEndAddr": "0x407b44",
            "decompiledFuncCode": "uint64_t sub_407710(char* arg1, int64_t* arg2, int32_t arg3, uint64_t* arg4, \n    char* arg5)\n{\n    if (arg3 > 0x24)\n    {\n        __assert_fail(\"0 <= strtol_base && strtol_base \u2026\", \"lib/xstrtol.c\", 0x60, \"xstrtoumax\");\n        /* no return */\n    }\n    int64_t* r15 = arg2;\n    void var_40;\n    if (arg2 == 0)\n    {\n        r15 = &var_40;\n    }\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char rbx = *arg1;\n    uint16_t* rsi = *__ctype_b_loc();\n    char* rax_2 = arg1;\n    while ((*(&rsi[rbx] + 1) & 0x20) != 0)\n    {\n        rax_2 = &rax_2[1];\n        rbx = *rax_2;\n    }\n    int32_t rbp_1;\n    if (rbx == 0x2d)\n    {\n    label_4077da:\n        rbp_1 = 4;\n    }\n    else\n    {\n        char* r8 = *r15;\n        uint64_t rbx_1 = __strtoul_internal(arg1, r15, arg3, 0);\n        int32_t var_58;\n        void* r8_1;\n        uint32_t r12_1;\n        if (r8 == arg1)\n        {\n            var_58 = r8;\n            if (arg5 == 0)\n            {\n                goto label_4077da;\n            }\n            r12_1 = *arg1;\n            if (r12_1 == 0)\n            {\n                goto label_4077da;\n            }\n            rbp_1 = 0;\n            rbx_1 = 1;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) == 0)\n            {\n                goto label_4077da;\n            }\n        label_407817:\n            uint64_t rdx_1 = (r12_1 - 0x45);\n            int64_t rdx_3;\n            int32_t rsi_3;\n            if (rdx_1 <= 0x2f)\n            {\n                var_58 = rdx_1;\n                if ((!(TEST_BITQ(0x814400308945, rdx_1))))\n                {\n                    goto label_407880;\n                }\n                if (strchr(arg5, 0x30) == 0)\n                {\n                    goto label_407880;\n                }\n                char rax_8 = *(r8_1 + 1);\n                if (rax_8 == 0x44)\n                {\n                label_407aa8:\n                    rsi_3 = 2;\n                    rdx_3 = 0x3e8;\n                    goto label_40788a;\n                }\n                if (rax_8 == 0x69)\n                {\n                    rdx_3 = 0x400;\n                    int32_t rsi_6;\n                    rsi_6 = *(r8_1 + 2) == 0x42;\n                    rsi_3 = ((rsi_6 + rsi_6) + 1);\n                    goto label_40788a;\n                }\n                uint64_t rdx_2 = var_58;\n                if (rax_8 == 0x42)\n                {\n                    goto label_407aa8;\n                }\n                int32_t r9_1;\n                switch (rdx_2)\n                {\n                    case 0:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_407a2b:\n                        int64_t rcx_6 = rdx_3;\n                        int32_t rdi_8 = 6;\n                        r9_1 = 0;\n                        int32_t temp15_1;\n                        do\n                        {\n                            uint64_t rax_28;\n                            int64_t rdx_11;\n                            rdx_11 = HIGHD((rbx_1 * rcx_6));\n                            rax_28 = LOWD((rbx_1 * rcx_6));\n                            bool o_8 = ((rbx_1 * rcx_6) >> 0x40) != 0;\n                            rbx_1 = rax_28;\n                            if (o_8)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp15_1 = rdi_8;\n                            rdi_8 = (rdi_8 - 1);\n                        } while (temp15_1 != 1);\n                        goto label_407984;\n                    }\n                    case 1:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 7:\n                    case 9:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xe:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1f:\n                    case 0x20:\n                    case 0x21:\n                    case 0x23:\n                    case 0x24:\n                    case 0x25:\n                    case 0x27:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    {\n                        goto label_407925;\n                    }\n                    case 2:\n                    case 0x22:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_407a63:\n                        int64_t rcx_7 = rdx_3;\n                        int64_t rax_30;\n                        int64_t rdx_12;\n                        rdx_12 = HIGHD((rbx_1 * rcx_7));\n                        rax_30 = LOWD((rbx_1 * rcx_7));\n                        int64_t rax_31;\n                        if (((rbx_1 * rcx_7) >> 0x40) == 0)\n                        {\n                            int64_t rdx_13;\n                            rdx_13 = HIGHD((rax_30 * rcx_7));\n                            rax_31 = LOWD((rax_30 * rcx_7));\n                            if (((rax_30 * rcx_7) >> 0x40) == 0)\n                            {\n                                uint64_t rax_32;\n                                int64_t rdx_14;\n                                rdx_14 = HIGHD((rax_31 * rcx_7));\n                                rax_32 = LOWD((rax_31 * rcx_7));\n                                if (((rax_31 * rcx_7) >> 0x40) == 0)\n                                {\n                                    rbx_1 = rax_32;\n                                    rbp_1 = (rbp_1 | 0);\n                                }\n                            }\n                        }\n                        if (((((rbx_1 * rcx_7) >> 0x40) != 0 || (((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) != 0)) || ((((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) == 0) && ((rax_31 * rcx_7) >> 0x40) != 0)))\n                        {\n                            rbx_1 = -1;\n                            rbp_1 = (rbp_1 | 1);\n                        }\n                        goto label_4078cd;\n                    }\n                    case 6:\n                    case 0x26:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4078ef:\n                        uint64_t rax_15;\n                        int64_t rdx_6;\n                        rdx_6 = HIGHD((rbx_1 * rdx_3));\n                        rax_15 = LOWD((rbx_1 * rdx_3));\n                        bool o_3 = ((rbx_1 * rdx_3) >> 0x40) != 0;\n                        rbx_1 = rax_15;\n                        if ((!o_3))\n                        {\n                            goto label_4078cd;\n                        }\n                        goto label_4078f7;\n                    }\n                    case 8:\n                    case 0x28:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4078ae:\n                        int64_t rcx_1 = rdx_3;\n                        int64_t rax_10;\n                        int64_t rdx_4;\n                        rdx_4 = HIGHD((rbx_1 * rcx_1));\n                        rax_10 = LOWD((rbx_1 * rcx_1));\n                        if (((rbx_1 * rcx_1) >> 0x40) == 0)\n                        {\n                            uint64_t rax_11;\n                            int64_t rdx_5;\n                            rdx_5 = HIGHD((rax_10 * rcx_1));\n                            rax_11 = LOWD((rax_10 * rcx_1));\n                            if (((rax_10 * rcx_1) >> 0x40) != 0)\n                            {\n                                goto label_4078f7;\n                            }\n                            rbx_1 = rax_11;\n                            goto label_4078cd;\n                        }\n                    label_4078f7:\n                        rbp_1 = 1;\n                        rbx_1 = -1;\n                        goto label_4078cd;\n                    }\n                    case 0xb:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4079f8:\n                        int64_t rcx_5 = rdx_3;\n                        int32_t rdi_7 = 5;\n                        r9_1 = 0;\n                        int32_t temp14_1;\n                        do\n                        {\n                            uint64_t rax_26;\n                            int64_t rdx_10;\n                            rdx_10 = HIGHD((rbx_1 * rcx_5));\n                            rax_26 = LOWD((rbx_1 * rcx_5));\n                            bool o_7 = ((rbx_1 * rcx_5) >> 0x40) != 0;\n                            rbx_1 = rax_26;\n                            if (o_7)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp14_1 = rdi_7;\n                            rdi_7 = (rdi_7 - 1);\n                        } while (temp14_1 != 1);\n                        goto label_407984;\n                    }\n                    case 0xf:\n                    case 0x2f:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4079c8:\n                        int64_t rcx_4 = rdx_3;\n                        int32_t rdi_6 = 4;\n                        r9_1 = 0;\n                        int32_t temp13_1;\n                        do\n                        {\n                            uint64_t rax_24;\n                            int64_t rdx_9;\n                            rdx_9 = HIGHD((rbx_1 * rcx_4));\n                            rax_24 = LOWD((rbx_1 * rcx_4));\n                            bool o_6 = ((rbx_1 * rcx_4) >> 0x40) != 0;\n                            rbx_1 = rax_24;\n                            if (o_6)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp13_1 = rdi_6;\n                            rdi_6 = (rdi_6 - 1);\n                        } while (temp13_1 != 1);\n                        goto label_407984;\n                    }\n                    case 0x14:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_407996:\n                        int64_t rcx_3 = rdx_3;\n                        int32_t rdi_5 = 8;\n                        r9_1 = 0;\n                        int32_t temp12_1;\n                        do\n                        {\n                            uint64_t rax_22;\n                            int64_t rdx_8;\n                            rdx_8 = HIGHD((rbx_1 * rcx_3));\n                            rax_22 = LOWD((rbx_1 * rcx_3));\n                            bool o_5 = ((rbx_1 * rcx_3) >> 0x40) != 0;\n                            rbx_1 = rax_22;\n                            if (o_5)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp12_1 = rdi_5;\n                            rdi_5 = (rdi_5 - 1);\n                        } while (temp12_1 != 1);\n                        goto label_407984;\n                    }\n                    case 0x15:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40795b:\n                        int64_t rcx_2 = rdx_3;\n                        int32_t rdi_4 = 7;\n                        r9_1 = 0;\n                        int32_t temp11_1;\n                        do\n                        {\n                            uint64_t rax_20;\n                            int64_t rdx_7;\n                            rdx_7 = HIGHD((rbx_1 * rcx_2));\n                            rax_20 = LOWD((rbx_1 * rcx_2));\n                            bool o_4 = ((rbx_1 * rcx_2) >> 0x40) != 0;\n                            rbx_1 = rax_20;\n                            if (o_4)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp11_1 = rdi_4;\n                            rdi_4 = (rdi_4 - 1);\n                        } while (temp11_1 != 1);\n                    label_407984:\n                        rbp_1 = (rbp_1 | r9_1);\n                        goto label_4078cd;\n                    }\n                    case 0x1d:\n                    {\n                        rsi_3 = 1;\n                        break;\n                    }\n                    case 0x1e:\n                    {\n                        rsi_3 = 1;\n                        goto label_4078cd;\n                    }\n                }\n            }\n            else\n            {\n            label_407880:\n                rsi_3 = 1;\n                rdx_3 = 0x400;\n            label_40788a:\n                char r12_2 = (r12_1 - 0x42);\n                if (r12_2 > 0x35)\n                {\n                    goto label_407925;\n                }\n                switch (r12_2)\n                {\n                    case 0:\n                    {\n                        if ((rbx_1 >> 0x36) != 0)\n                        {\n                            goto label_4078f7;\n                        }\n                        rbx_1 = (rbx_1 << 0xa);\n                        goto label_4078cd;\n                    }\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x22:\n                    case 0x23:\n                    case 0x24:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x2a:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x33:\n                    case 0x34:\n                    {\n                        goto label_407925;\n                    }\n                    case 3:\n                    {\n                        goto label_407a2b;\n                    }\n                    case 5:\n                    case 0x25:\n                    {\n                        goto label_407a63;\n                    }\n                    case 9:\n                    case 0x29:\n                    {\n                        goto label_4078ef;\n                    }\n                    case 0xb:\n                    case 0x2b:\n                    {\n                        goto label_4078ae;\n                    }\n                    case 0xe:\n                    {\n                        goto label_4079f8;\n                    }\n                    case 0x12:\n                    case 0x32:\n                    {\n                        goto label_4079c8;\n                    }\n                    case 0x17:\n                    {\n                        goto label_407996;\n                    }\n                    case 0x18:\n                    {\n                        goto label_40795b;\n                    }\n                    case 0x21:\n                    {\n                        goto label_4078cd;\n                    }\n                    case 0x35:\n                    {\n                        if (rbx_1 < 0)\n                        {\n                            goto label_4078f7;\n                        }\n                        rbx_1 = (rbx_1 + rbx_1);\n                    label_4078cd:\n                        void* r8_2 = (r8_1 + rsi_3);\n                        int32_t rax_13 = (rbp_1 | 2);\n                        *r15 = r8_2;\n                        if (*r8_2 != 0)\n                        {\n                            rbp_1 = rax_13;\n                        }\n                        goto label_4077b2;\n                    }\n                }\n            }\n            if ((rbx_1 >> 0x37) != 0)\n            {\n                goto label_4078f7;\n            }\n            rbx_1 = (rbx_1 << 9);\n            goto label_4078cd;\n        }\n        int32_t rax_4 = *rax;\n        if (rax_4 == 0)\n        {\n            rbp_1 = 0;\n        }\n        else\n        {\n            rbp_1 = 1;\n            if (rax_4 != 0x22)\n            {\n                goto label_4077da;\n            }\n        }\n        if (arg5 == 0)\n        {\n        label_4077b2:\n            *arg4 = rbx_1;\n        }\n        else\n        {\n            r12_1 = *r8;\n            if (r12_1 == 0)\n            {\n                goto label_4077b2;\n            }\n            var_58 = r8;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) != 0)\n            {\n                goto label_407817;\n            }\n        label_407925:\n            *arg4 = rbx_1;\n            rbp_1 = (rbp_1 | 2);\n        }\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_407b50",
            "funcStartAddr": "0x407b50",
            "funcEndAddr": "0x407c85",
            "decompiledFuncCode": "uint64_t sub_407b50(int32_t arg1, int32_t arg2, int32_t arg3)\n{\n    void* var_58 = &arg_8;\n    int64_t rcx;\n    int64_t var_30 = rcx;\n    int32_t var_60 = 0x10;\n    void var_48;\n    void* var_50 = &var_48;\n    if (arg2 != 0x406)\n    {\n        return fcntl();\n    }\n    int32_t var_60_1 = 0x18;\n    int32_t rax_2;\n    int32_t rax_5;\n    int32_t* rax_15;\n    int32_t rax_17;\n    int32_t rbx;\n    if (data_613538 < 0)\n    {\n        rax_5 = sub_407b50();\n        rbx = rax_5;\n    }\n    else\n    {\n        rax_2 = fcntl();\n        rbx = rax_2;\n        if (rax_2 < 0)\n        {\n            rax_15 = __errno_location();\n            if (*rax_15 == 0x16)\n            {\n                rax_17 = sub_407b50(arg1, 0, arg3);\n                rbx = rax_17;\n                if (rax_17 >= 0)\n                {\n                    data_613538 = 0xffffffff;\n                }\n            }\n        }\n    }\n    if (((((data_613538 >= 0 && rax_2 < 0) && *rax_15 == 0x16) && rax_17 >= 0) || (rax_5 >= 0 && data_613538 == 0xffffffff)))\n    {\n        int32_t rax_7 = fcntl(rbx, 1);\n        int32_t rax_10;\n        if (rax_7 >= 0)\n        {\n            rax_10 = fcntl(rbx, 2, (rax_7 | 1));\n        }\n        if ((rax_7 < 0 || (rax_7 >= 0 && rax_10 == 0xffffffff)))\n        {\n            int32_t* rax_11 = __errno_location();\n            int32_t rdi_2 = rbx;\n            rbx = -1;\n            int32_t r12_1 = *rax_11;\n            close(rdi_2);\n            *rax_11 = r12_1;\n        }\n    }\n    if ((data_613538 >= 0 && (rax_2 >= 0 || (rax_2 < 0 && *rax_15 != 0x16))))\n    {\n        data_613538 = 1;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_407c90",
            "funcStartAddr": "0x407c90",
            "funcEndAddr": "0x407d6f",
            "decompiledFuncCode": "uint64_t sub_407c90(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_407d70",
            "funcStartAddr": "0x407d70",
            "funcEndAddr": "0x40838c",
            "decompiledFuncCode": "uint64_t sub_407d70(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_407fa0;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_407ec6;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_407ec6;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_407ec6:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_407fa0:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_407fce;\n                }\n                *arg5 = r12;\n            label_407fce:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_407fec;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_407fec:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_407fec;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_407f5e;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_407f5e:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_408390",
            "funcStartAddr": "0x408390",
            "funcEndAddr": "0x408956",
            "decompiledFuncCode": "uint64_t sub_408390(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_4085cc;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_408458;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_408458:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_407c90(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_411019;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_407c90(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_4085cc;\n                }\n                *arg7 = rdx_2;\n            label_4085cc:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_4086d0;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_411019;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_408740;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_4086d0;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_4086d0;\n                            }\n                            goto label_408691;\n                        }\n                    label_408691:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_407d70(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_41101a);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_4086d0:\n                            rdx = &r14_1[1];\n                        label_408511:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_40870e;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_40870e:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_411038;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_408740:\n                                        r14_2 = sub_407d70(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_4087fd;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_4087fd:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_4085cc;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_408458;\n        }\n        goto label_408511;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4089c0",
            "funcStartAddr": "0x4089c0",
            "funcEndAddr": "0x4089d8",
            "decompiledFuncCode": "uint64_t sub_4089c0(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_408a60",
            "funcStartAddr": "0x408a60",
            "funcEndAddr": "0x408ada",
            "decompiledFuncCode": "uint64_t sub_408a60(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_41101c[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_408a8a;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_408a8a:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_408ba0() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_408ae0",
            "funcStartAddr": "0x408ae0",
            "funcEndAddr": "0x408b39",
            "decompiledFuncCode": "uint64_t sub_408ae0(int64_t* arg1, char* arg2, int64_t arg3)\n{\n    int64_t var_10;\n    int64_t rax;\n    uint16_t x87control;\n    int80_t st0;\n    st0 = sub_409290(nullptr, &var_10, arg2, arg3, x87control);\n    uint64_t rax_1;\n    if (rax == 0)\n    {\n        rax_1 = 0xffffffff;\n    }\n    else\n    {\n        int64_t rdx_1 = var_10;\n        if (rdx_1 > 0x7fffffff)\n        {\n            free(rax);\n            *__errno_location() = 0x4b;\n            rax_1 = 0xffffffff;\n        }\n        else\n        {\n            *arg1 = rax;\n            rax_1 = rdx_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_408b40",
            "funcStartAddr": "0x408b40",
            "funcEndAddr": "0x408b9d",
            "decompiledFuncCode": "uint64_t sub_408b40(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_409170(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_408ba0",
            "funcStartAddr": "0x408ba0",
            "funcEndAddr": "0x408bfe",
            "decompiledFuncCode": "int64_t sub_408ba0()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_41103c;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            void* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_408c00",
            "funcStartAddr": "0x408c00",
            "funcEndAddr": "0x409162",
            "decompiledFuncCode": "char* sub_408c00()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_613578;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_41101c[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        uint64_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            uint64_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_408cfc;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_408d46;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_408cfc:\n            r15 = &data_41101c[0x1b];\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_408d46:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, &data_40c227);\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_408dfc:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_408f8b;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_408e38:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_408e38;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_408e72:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_408e72;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_41101c[0x1b];\n                                    free(rdi_26);\n                                    sub_409170(rax_12);\n                                    goto label_408d87;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_40904b:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_40904b;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_409099:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_409099;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_408dfc;\n                        }\n                        break;\n                    }\n                label_408f8b:\n                    sub_409170(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_41101c[0x1b];\n            }\n        label_408d87:\n            free(rbp_3);\n        }\n        data_613578 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_409170",
            "funcStartAddr": "0x409170",
            "funcEndAddr": "0x4091eb",
            "decompiledFuncCode": "int64_t sub_409170(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_4091f0(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_4091f0",
            "funcStartAddr": "0x4091f0",
            "funcEndAddr": "0x409230",
            "decompiledFuncCode": "int64_t sub_4091f0(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_409230(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_409230",
            "funcStartAddr": "0x409230",
            "funcEndAddr": "0x409287",
            "decompiledFuncCode": "off64_t sub_409230(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_409290",
            "funcStartAddr": "0x401a93",
            "funcEndAddr": "0x40ada9",
            "decompiledFuncCode": "void sub_409290(char* arg1, uint64_t* arg2, char* arg3, int64_t arg4, \n    uint16_t arg5 @ x87control)\n{\n    int64_t rbp;\n    int64_t __saved_rbp = rbp;\n    int64_t r15;\n    int64_t __saved_r15 = r15;\n    int64_t r14;\n    int64_t __saved_r14 = r14;\n    int64_t r13;\n    int64_t __saved_r13 = r13;\n    int64_t r12;\n    int64_t __saved_r12 = r12;\n    int64_t rbx;\n    int64_t __saved_rbx = rbx;\n    void var_6f8;\n    void* rsp_1 = &var_6f8;\n    void var_678;\n    int64_t var_588;\n    if (sub_40afd0(arg3, &var_588, &var_678) >= 0)\n    {\n        char* var_670;\n        void var_668;\n        int64_t* var_580;\n        void var_568;\n        if (sub_40adb0(arg4, &var_678) >= 0)\n        {\n            int64_t var_578;\n            int64_t rax_3 = (var_578 + 7);\n            if (rax_3 <= 6)\n            {\n                rax_3 = -1;\n            }\n            int64_t var_570;\n            int64_t rax_4 = (rax_3 + var_570);\n            char* var_6a8;\n            int64_t rcx;\n            char* r8_1;\n            if ((rax_3 + var_570) >= rax_3)\n            {\n                uint64_t rdi_3 = (rax_4 + 6);\n                if (rax_4 >= -6)\n                {\n                    goto label_4099b5;\n                }\n                char* var_6e0_1;\n                char* var_6b0_1;\n                int32_t* rdx_1;\n                if (rdi_3 <= 0xf9f)\n                {\n                    var_6e0_1 = nullptr;\n                    rsp_1 = (&var_6f8 - ((rax_4 + 0x1d) & 0xfffffffffffffff0));\n                    var_6b0_1 = ((rsp_1 + 0xf) & 0xfffffffffffffff0);\n                }\n                else\n                {\n                    if (rdi_3 == -1)\n                    {\n                        goto label_4099b5;\n                    }\n                    char* rax_5;\n                    rax_5 = malloc(rdi_3);\n                    var_6b0_1 = rax_5;\n                    if (rax_5 == 0)\n                    {\n                        goto label_4099b5;\n                    }\n                    var_6e0_1 = rax_5;\n                }\n                uint64_t r12_1 = 0;\n                if (arg1 != 0)\n                {\n                    r12_1 = *arg2;\n                }\n                int64_t* r14_1 = var_580;\n                r8_1 = arg3;\n                char* rbx_2 = arg1;\n                int64_t var_6c0_1 = 0;\n                uint64_t r15_2 = 0;\n                rcx = *r14_1;\n                void* r13_1;\n                if (rcx != r8_1)\n                {\n                    while (true)\n                    {\n                        void* rcx_1 = (rcx - r8_1);\n                        void* rax_8 = (r15_2 + rcx_1);\n                        r13_1 = rax_8;\n                        int32_t var_698;\n                        char* r15_7;\n                        if ((r15_2 + rcx_1) < r15_2)\n                        {\n                            if (r12_1 != -1)\n                            {\n                            label_409885:\n                                r15_7 = rbx_2;\n                                var_6a8 = __errno_location();\n                            }\n                            else\n                            {\n                                r13_1 = ffffffffffffffff;\n                            label_409503:\n                                memcpy(&rbx_2[r15_2], r8_1, rcx_1);\n                            label_40950f:\n                                if (var_588 == var_6c0_1)\n                                {\n                                    uint64_t r15_11 = r13_1;\n                                    uint64_t r14_3 = (r13_1 + 1);\n                                    if (r13_1 >= -1)\n                                    {\n                                        if (r12_1 != -1)\n                                        {\n                                            goto label_409885;\n                                        }\n                                    }\n                                    else if (r12_1 < r14_3)\n                                    {\n                                        bool cond:2_1 = r12_1 < 0;\n                                        if ((r12_1 == 0 && r14_3 <= 0xc))\n                                        {\n                                            r12_1 = 0xc;\n                                        label_40a665:\n                                            r13_1 = rbx_2 == arg1;\n                                            if ((rbx_2 == 0 || (rbx_2 != 0 && r13_1 != 0)))\n                                            {\n                                                char* rax_150 = malloc(r12_1);\n                                                if (rax_150 == 0)\n                                                {\n                                                    goto label_409885;\n                                                }\n                                                if ((r15_11 == 0 || (r15_11 != 0 && r13_1 == 0)))\n                                                {\n                                                    rbx_2 = rax_150;\n                                                }\n                                                if ((r15_11 != 0 && r13_1 != 0))\n                                                {\n                                                    rbx_2 = memcpy(rax_150, rbx_2, r15_11);\n                                                }\n                                            }\n                                            if ((rbx_2 != 0 && r13_1 == 0))\n                                            {\n                                                char* rax_126 = realloc(rbx_2, r12_1);\n                                                if (rax_126 == 0)\n                                                {\n                                                    goto label_409a9a;\n                                                }\n                                                rbx_2 = rax_126;\n                                            }\n                                        }\n                                        if (r12_1 != 0)\n                                        {\n                                            if (cond:2_1)\n                                            {\n                                                goto label_409885;\n                                            }\n                                            r12_1 = (r12_1 + r12_1);\n                                            if (r12_1 >= r14_3)\n                                            {\n                                                goto label_40a665;\n                                            }\n                                        }\n                                        if (((r12_1 == 0 && r14_3 > 0xc) || r12_1 != 0))\n                                        {\n                                            if (r14_3 == -1)\n                                            {\n                                                goto label_409885;\n                                            }\n                                            r12_1 = r14_3;\n                                            goto label_40a665;\n                                        }\n                                    }\n                                    rbx_2[r15_11] = 0;\n                                    if ((r12_1 > r14_3 && rbx_2 != arg1))\n                                    {\n                                        realloc(rbx_2, r14_3);\n                                    }\n                                    if (var_6e0_1 != 0)\n                                    {\n                                        free(var_6e0_1);\n                                    }\n                                    if (var_580 != &var_568)\n                                    {\n                                        free(var_580);\n                                    }\n                                    if (var_670 != &var_668)\n                                    {\n                                        free(var_670);\n                                    }\n                                    *arg2 = r15_11;\n                                    goto label_409911;\n                                }\n                                char r15_3 = r14_1[9];\n                                int64_t rax_17 = r14_1[0xa];\n                                if (r15_3 == 0x25)\n                                {\n                                    if (rax_17 != -1)\n                                    {\n                                    label_409fbc:\n                                        abort();\n                                        /* no return */\n                                    }\n                                    uint64_t rax_47 = (r13_1 + 1);\n                                    r15_2 = rax_47;\n                                    if (r13_1 < -1)\n                                    {\n                                        if (r12_1 >= rax_47)\n                                        {\n                                            goto label_409982;\n                                        }\n                                        bool cond:4_1 = r12_1 < 0;\n                                        if (r12_1 != 0)\n                                        {\n                                            if (cond:4_1)\n                                            {\n                                                goto label_409885;\n                                            }\n                                            r12_1 = (r12_1 + r12_1);\n                                            if (r12_1 >= rax_47)\n                                            {\n                                                goto label_409957;\n                                            }\n                                        }\n                                        else if (rax_47 <= 0xc)\n                                        {\n                                            r12_1 = 0xc;\n                                        label_409957:\n                                            rdx_1 = rbx_2 == arg1;\n                                            if (rbx_2 == 0)\n                                            {\n                                            label_40a173:\n                                                var_698 = rdx_1;\n                                                char* rax_107 = malloc(r12_1);\n                                                rdx_1 = var_698;\n                                                if (rax_107 == 0)\n                                                {\n                                                    goto label_409885;\n                                                }\n                                                if ((r13_1 == 0 || (r13_1 != 0 && rdx_1 == 0)))\n                                                {\n                                                    rbx_2 = rax_107;\n                                                }\n                                                if ((r13_1 != 0 && rdx_1 != 0))\n                                                {\n                                                    char* rax_108;\n                                                    rax_108 = memcpy(rax_107, rbx_2, r13_1);\n                                                    rbx_2 = rax_108;\n                                                }\n                                                goto label_409982;\n                                            }\n                                            if (rdx_1 != 0)\n                                            {\n                                                goto label_40a173;\n                                            }\n                                            char* rax_48;\n                                            rax_48 = realloc(rbx_2, r12_1);\n                                            if (rax_48 == 0)\n                                            {\n                                                goto label_409a9a;\n                                            }\n                                            rbx_2 = rax_48;\n                                            goto label_409982;\n                                        }\n                                        if (rax_47 == -1)\n                                        {\n                                            goto label_409885;\n                                        }\n                                        r12_1 = rax_47;\n                                        goto label_409957;\n                                    }\n                                    if (r12_1 != -1)\n                                    {\n                                        goto label_409885;\n                                    }\n                                    r15_2 = -1;\n                                label_409982:\n                                    *(rbx_2 + r13_1) = 0x25;\n                                label_409987:\n                                    r8_1 = r14_1[1];\n                                    r14_1 = &r14_1[0xb];\n                                    rcx = *r14_1;\n                                    var_6c0_1 = (var_6c0_1 + 1);\n                                    if (rcx == r8_1)\n                                    {\n                                        break;\n                                    }\n                                    continue;\n                                }\n                                else\n                                {\n                                    if (rax_17 == -1)\n                                    {\n                                        goto label_409fbc;\n                                    }\n                                    rdx_1 = &var_670[(rax_17 << 5)];\n                                    int32_t rax_19 = *rdx_1;\n                                    if (r15_3 == 0x6e)\n                                    {\n                                        uint64_t rax_50 = (rax_19 - 0x12);\n                                        if (rax_50 > 4)\n                                        {\n                                        label_401a93:\n                                            abort();\n                                            /* no return */\n                                        }\n                                        switch (rax_50)\n                                        {\n                                            case 0:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                            case 1:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                            case 2:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                            case 3:\n                                            case 4:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                        }\n                                        goto label_409987;\n                                    }\n                                    char rax_21 = (r15_3 & 0xdf);\n                                    int64_t var_6c8;\n                                    char* var_6b8;\n                                    int16_t var_680;\n                                    if (((rax_21 - 0x45) > 2 && rax_21 != 0x41))\n                                    {\n                                    label_409597:\n                                        char rax_22 = r14_1[2];\n                                        void* r15_4 = &var_6b0_1[1];\n                                        *var_6b0_1 = 0x25;\n                                        if ((rax_22 & 1) != 0)\n                                        {\n                                            var_6b0_1[1] = 0x27;\n                                            r15_4 = &var_6b0_1[2];\n                                        }\n                                        if ((rax_22 & 2) != 0)\n                                        {\n                                            *r15_4 = 0x2d;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 4) != 0)\n                                        {\n                                            *r15_4 = 0x2b;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 8) != 0)\n                                        {\n                                            *r15_4 = 0x20;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 0x10) != 0)\n                                        {\n                                            *r15_4 = 0x23;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 0x40) != 0)\n                                        {\n                                            *r15_4 = 0x49;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 0x20) != 0)\n                                        {\n                                            *r15_4 = 0x30;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        int64_t rsi_6 = r14_1[3];\n                                        int64_t rdx_5 = r14_1[4];\n                                        if (rsi_6 != rdx_5)\n                                        {\n                                            uint64_t rcx_4 = (rdx_5 - rsi_6);\n                                            memcpy(r15_4, rsi_6, rcx_4);\n                                            r15_4 = (r15_4 + rcx_4);\n                                        }\n                                        int64_t rsi_7 = r14_1[6];\n                                        uint64_t rdx_7 = r14_1[7];\n                                        if (rsi_7 != rdx_7)\n                                        {\n                                            uint64_t rcx_7 = (rdx_7 - rsi_7);\n                                            memcpy(r15_4, rsi_7, rcx_7);\n                                            r15_4 = (r15_4 + rcx_7);\n                                        }\n                                        if (rax_19 <= 0x10)\n                                        {\n                                            int32_t rax_23 = (1 << rax_19);\n                                            if ((rax_23 & 0x14180) == 0)\n                                            {\n                                                if ((*rax_23[1] & 0x10) != 0)\n                                                {\n                                                    *r15_4 = 0x4c;\n                                                    r15_4 = (r15_4 + 1);\n                                                }\n                                                if (((*rax_23[1] & 0x10) == 0 && (*rax_23[1] & 6) != 0))\n                                                {\n                                                    *r15_4 = 0x6c;\n                                                    r15_4 = (r15_4 + 1);\n                                                }\n                                            }\n                                            if (((((rax_23 & 0x14180) == 0 && (*rax_23[1] & 0x10) == 0) && (*rax_23[1] & 6) != 0) || (rax_23 & 0x14180) != 0))\n                                            {\n                                                *r15_4 = 0x6c;\n                                                r15_4 = (r15_4 + 1);\n                                            }\n                                        }\n                                        char rax_24 = r14_1[9];\n                                        *(r15_4 + 1) = 0;\n                                        *r15_4 = rax_24;\n                                        int64_t rax_25 = r14_1[5];\n                                        if (rax_25 != -1)\n                                        {\n                                            void* rax_27 = &var_670[(rax_25 << 5)];\n                                            if (*rax_27 != 5)\n                                            {\n                                                goto label_409fbc;\n                                            }\n                                            var_6b8 = 1;\n                                            var_680 = *(rax_27 + 0x10);\n                                            goto label_4096ee;\n                                        }\n                                        var_6b8 = 0;\n                                    label_4096ee:\n                                        int64_t rax_29 = r14_1[8];\n                                        if (rax_29 == -1)\n                                        {\n                                            goto label_409726;\n                                        }\n                                        void* r8_3 = &var_670[(rax_29 << 5)];\n                                        if (*r8_3 != 5)\n                                        {\n                                            goto label_409fbc;\n                                        }\n                                        uint64_t rax_31 = var_6b8;\n                                        *(&var_680 + (rax_31 << 2)) = *(r8_3 + 0x10);\n                                        var_6b8 = (rax_31 + 1);\n                                    label_409726:\n                                        void* rax_34 = (r13_1 + 2);\n                                        char* r11_1;\n                                        if (r13_1 < -2)\n                                        {\n                                            if (r12_1 >= rax_34)\n                                            {\n                                                goto label_40a168;\n                                            }\n                                            bool cond:22_1 = r12_1 < 0;\n                                            if (r12_1 != 0)\n                                            {\n                                                if (cond:22_1)\n                                                {\n                                                    goto label_409885;\n                                                }\n                                                r12_1 = (r12_1 + r12_1);\n                                                if (r12_1 >= rax_34)\n                                                {\n                                                    goto label_409759;\n                                                }\n                                            }\n                                            else if (rax_34 <= 0xc)\n                                            {\n                                                r12_1 = 0xc;\n                                            label_409759:\n                                                rdx_7 = rbx_2 == arg1;\n                                                if (rbx_2 == 0)\n                                                {\n                                                label_40a113:\n                                                    var_6a8 = rdx_7;\n                                                    char* rax_105 = malloc(r12_1);\n                                                    char rdx_17 = var_6a8;\n                                                    r11_1 = rax_105;\n                                                    if (rax_105 == 0)\n                                                    {\n                                                        goto label_409885;\n                                                    }\n                                                    if ((r13_1 != 0 && rdx_17 != 0))\n                                                    {\n                                                        r11_1 = memcpy(rax_105, rbx_2, r13_1);\n                                                    }\n                                                    goto label_409784;\n                                                }\n                                                if (rdx_7 != 0)\n                                                {\n                                                    goto label_40a113;\n                                                }\n                                                char* rax_35 = realloc(rbx_2, r12_1);\n                                                r11_1 = rax_35;\n                                                if (rax_35 == 0)\n                                                {\n                                                    goto label_409885;\n                                                }\n                                                goto label_409784;\n                                            }\n                                            if (rax_34 == -1)\n                                            {\n                                                goto label_409885;\n                                            }\n                                            r12_1 = rax_34;\n                                            goto label_409759;\n                                        }\n                                        if (r12_1 != -1)\n                                        {\n                                            goto label_409885;\n                                        }\n                                    label_40a168:\n                                        r11_1 = rbx_2;\n                                    label_409784:\n                                        *(r11_1 + r13_1) = 0;\n                                        int32_t* rax_36 = __errno_location();\n                                        char* r11_2 = r11_1;\n                                        var_6c8 = r15_4;\n                                        var_6a8 = rax_36;\n                                        int32_t rax_37 = *rax_36;\n                                    label_4097c2:\n                                        void* rbx_3 = 0x7fffffff;\n                                        int32_t var_684 = 0xffffffff;\n                                        void* r15_6 = (r12_1 - r13_1);\n                                        *var_6a8 = 0;\n                                        uint64_t rax_39 = rax_19;\n                                        if (r15_6 <= 0x7fffffff)\n                                        {\n                                            rbx_3 = r15_6;\n                                        }\n                                        if (rax_39 > 0x11)\n                                        {\n                                            goto label_401a93;\n                                        }\n                                        char* var_6d0_1;\n                                        int32_t var_67c;\n                                        int32_t rax_56;\n                                        int32_t rax_58;\n                                        void* rsp_3;\n                                        void* rsp_6;\n                                        void* rsp_10;\n                                        void* rsp_11;\n                                        int64_t rdi_18;\n                                        int32_t* r9_2;\n                                        uint64_t r9_3;\n                                        switch (rax_39)\n                                        {\n                                            case 0:\n                                            {\n                                                goto label_401a93;\n                                            }\n                                            case 1:\n                                            {\n                                                r9_3 = var_670[((r14_1[0xa] << 5) + 0x10)];\n                                                goto label_409c0b;\n                                            }\n                                            case 2:\n                                            {\n                                                r9_3 = var_670[((r14_1[0xa] << 5) + 0x10)];\n                                                goto label_409c0b;\n                                            }\n                                            case 3:\n                                            {\n                                                r9_3 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                goto label_409c0b;\n                                            }\n                                            case 4:\n                                            {\n                                                r9_3 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                goto label_409c0b;\n                                            }\n                                            case 5:\n                                            case 6:\n                                            case 0xd:\n                                            case 0xe:\n                                            {\n                                                r9_3 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                            label_409c0b:\n                                                int32_t rax_66 = var_6b8;\n                                                rdi_18 = (r11_2 + r13_1);\n                                                var_6d0_1 = r11_2;\n                                                if (rax_66 == 1)\n                                                {\n                                                    *(rsp_1 - 8) = &var_684;\n                                                    *(rsp_1 - 0x10) = r9_3;\n                                                    rsp_6 = (rsp_1 - 0x10);\n                                                    goto label_40a092;\n                                                }\n                                                if (rax_66 == 2)\n                                                {\n                                                    *(rsp_1 - 0x10) = &var_684;\n                                                    *(rsp_1 - 0x18) = r9_3;\n                                                    rsp_10 = (rsp_1 - 0x18);\n                                                    goto label_40a04c;\n                                                }\n                                                *(rsp_1 - 0x10) = &var_684;\n                                                rsp_6 = (rsp_1 - 0x10);\n                                                goto label_409c52;\n                                            }\n                                            case 7:\n                                            case 8:\n                                            case 9:\n                                            case 0xa:\n                                            case 0xf:\n                                            case 0x10:\n                                            case 0x11:\n                                            {\n                                                rdi_18 = (r11_2 + r13_1);\n                                                r9_2 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                rax_56 = var_6b8;\n                                                var_6d0_1 = r11_2;\n                                                break;\n                                            }\n                                            case 0xb:\n                                            {\n                                                int512_t zmm0;\n                                                zmm0 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                int32_t rax_83 = var_6b8;\n                                                void* rsp_17;\n                                                if (rax_83 == 1)\n                                                {\n                                                    *(rsp_1 - 0x10) = &var_684;\n                                                    rsp_17 = (rsp_1 - 0x10);\n                                                }\n                                                if (rax_83 == 2)\n                                                {\n                                                    *(rsp_1 - 8) = &var_684;\n                                                    *(rsp_1 - 0x10) = var_67c;\n                                                    rsp_17 = (rsp_1 - 0x10);\n                                                }\n                                                if ((rax_83 == 1 || rax_83 == 2))\n                                                {\n                                                    rax_58 = __snprintf_chk();\n                                                    *rsp_17;\n                                                    *(rsp_17 + 8);\n                                                    rsp_1 = (rsp_17 + 0x10);\n                                                }\n                                                if ((rax_83 != 1 && rax_83 != 2))\n                                                {\n                                                    rax_58 = __snprintf_chk();\n                                                }\n                                                goto label_409b20;\n                                            }\n                                            case 0xc:\n                                            {\n                                                rdi_18 = (r11_2 + r13_1);\n                                                var_6d0_1 = r11_2;\n                                                int80_t x87_r7_2 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                int32_t rax_76 = var_6b8;\n                                                if (rax_76 != 1)\n                                                {\n                                                    if (rax_76 == 2)\n                                                    {\n                                                        *(rsp_1 - 0x10) = &var_684;\n                                                        *(rsp_1 - 0x20) = x87_r7_2;\n                                                        *(rsp_1 - 0x30) = var_67c;\n                                                        rax_58 = __snprintf_chk();\n                                                        r11_2 = var_6d0_1;\n                                                        goto label_409b20;\n                                                    }\n                                                    rsp_3 = (rsp_1 - 0x10);\n                                                    r9_2 = &var_684;\n                                                    *rsp_3 = x87_r7_2;\n                                                    goto label_409b12;\n                                                }\n                                                *(rsp_1 - 0x10) = &var_684;\n                                                rsp_11 = (rsp_1 - 0x20);\n                                                *rsp_11 = x87_r7_2;\n                                            label_40a06c:\n                                                rax_58 = __snprintf_chk(rdi_18, rbx_3, 1, -1, var_6b0_1, var_680);\n                                                rsp_1 = (rsp_11 + 0x20);\n                                                r11_2 = var_6d0_1;\n                                            label_409b20:\n                                                rdx_1 = var_684;\n                                                if (rdx_1 >= 0)\n                                                {\n                                                    goto label_409b2e;\n                                                }\n                                                break;\n                                            }\n                                        }\n                                        if (((((((rax_39 == 7 || rax_39 == 8) || rax_39 == 9) || rax_39 == 0xa) || rax_39 == 0xf) || rax_39 == 0x10) || rax_39 == 0x11))\n                                        {\n                                            if (rax_56 != 1)\n                                            {\n                                                if (rax_56 == 2)\n                                                {\n                                                    *(rsp_1 - 0x10) = &var_684;\n                                                    *(rsp_1 - 0x18) = r9_2;\n                                                    rsp_10 = (rsp_1 - 0x18);\n                                                label_40a04c:\n                                                    *(rsp_10 - 8) = var_67c;\n                                                    rsp_11 = (rsp_10 - 8);\n                                                    goto label_40a06c;\n                                                }\n                                                *(rsp_1 - 0x10) = &var_684;\n                                                rsp_3 = (rsp_1 - 0x10);\n                                            label_409b12:\n                                                rax_58 = __snprintf_chk(rdi_18, rbx_3, 1, -1, var_6b0_1, r9_2);\n                                                r11_2 = var_6d0_1;\n                                                *rsp_3;\n                                                *(rsp_3 + 8);\n                                                rsp_1 = (rsp_3 + 0x10);\n                                                goto label_409b20;\n                                            }\n                                            *(rsp_1 - 8) = &var_684;\n                                            *(rsp_1 - 0x10) = r9_2;\n                                            rsp_6 = (rsp_1 - 0x10);\n                                        label_40a092:\n                                            r9_3 = var_680;\n                                        label_409c52:\n                                            rax_58 = __snprintf_chk(rdi_18, rbx_3, 1, -1, var_6b0_1, r9_3);\n                                            rdx_1 = var_684;\n                                            *(rsp_6 + 8);\n                                            rsp_1 = (rsp_6 + 0x10);\n                                            r11_2 = var_6d0_1;\n                                            if (rdx_1 >= 0)\n                                            {\n                                            label_409b2e:\n                                                int64_t rcx_16 = rdx_1;\n                                                if ((rcx_16 < rbx_3 && *(&r11_2[rcx_16] + r13_1) != 0))\n                                                {\n                                                    goto label_409fbc;\n                                                }\n                                                if (rdx_1 < rax_58)\n                                                {\n                                                label_409b48:\n                                                    var_684 = rax_58;\n                                                    rdx_1 = rax_58;\n                                                }\n                                                if ((rdx_1 + 1) < rbx_3)\n                                                {\n                                                    rbx_2 = r11_2;\n                                                    r15_2 = (rdx_1 + r13_1);\n                                                    *var_6a8 = rax_37;\n                                                    goto label_409987;\n                                                }\n                                                if (r15_6 > 0x7ffffffe)\n                                                {\n                                                    if ((r11_2 != arg1 && r11_2 != 0))\n                                                    {\n                                                        free(r11_2);\n                                                    }\n                                                    if (var_6e0_1 != 0)\n                                                    {\n                                                        free(var_6e0_1);\n                                                    }\n                                                    if (var_580 != &var_568)\n                                                    {\n                                                        free(var_580);\n                                                    }\n                                                    if (var_670 != &var_668)\n                                                    {\n                                                        free(var_670);\n                                                    }\n                                                    *var_6a8 = 0x4b;\n                                                    break;\n                                                }\n                                                uint64_t rax_60 = (rdx_1 + 2);\n                                                void* rax_61 = (rax_60 + r13_1);\n                                                int64_t rcx_18;\n                                                rcx_18 = (rax_60 + r13_1) < rax_60;\n                                                if (r12_1 >= 0)\n                                                {\n                                                    uint64_t rdx_13 = (r12_1 + r12_1);\n                                                    if (rcx_18 == 0)\n                                                    {\n                                                        if (rdx_13 >= rax_61)\n                                                        {\n                                                            rax_61 = rdx_13;\n                                                        }\n                                                        if (r12_1 >= rax_61)\n                                                        {\n                                                            goto label_4097c2;\n                                                        }\n                                                        r12_1 = (r12_1 + r12_1);\n                                                        if ((r12_1 < rax_61 && rax_61 != -1))\n                                                        {\n                                                            r12_1 = rax_61;\n                                                        }\n                                                        if (((r12_1 < rax_61 && rax_61 != -1) || r12_1 >= rax_61))\n                                                        {\n                                                            rbx_3 = r11_2 == arg1;\n                                                            if ((r11_2 == 0 || (r11_2 != 0 && rbx_3 != 0)))\n                                                            {\n                                                                char* rax_101 = malloc(r12_1);\n                                                                if (rax_101 != 0)\n                                                                {\n                                                                    if ((r13_1 != 0 && rbx_3 != 0))\n                                                                    {\n                                                                        r11_2 = memcpy(rax_101, r11_2, r13_1);\n                                                                        goto label_4097c2;\n                                                                    }\n                                                                    r11_2 = rax_101;\n                                                                    goto label_4097c2;\n                                                                }\n                                                            }\n                                                            if ((r11_2 != 0 && rbx_3 == 0))\n                                                            {\n                                                                char* rax_62 = realloc(r11_2, r12_1);\n                                                                if (rax_62 != 0)\n                                                                {\n                                                                    r11_2 = rax_62;\n                                                                    goto label_4097c2;\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                                else if (r12_1 == -1)\n                                                {\n                                                    goto label_4097c2;\n                                                }\n                                                r15_7 = r11_2;\n                                            }\n                                        }\n                                        if ((((((((((rax_39 == 7 || rax_39 == 8) || rax_39 == 9) || rax_39 == 0xa) || rax_39 == 0xf) || rax_39 == 0x10) || rax_39 == 0x11) && rax_56 == 1) && rdx_1 < 0) || rax_39 == 0xc))\n                                        {\n                                            if (*(var_6c8 + 1) != 0)\n                                            {\n                                                *(var_6c8 + 1) = 0;\n                                                goto label_4097c2;\n                                            }\n                                            if (rax_58 < 0)\n                                            {\n                                                int32_t rbx_4 = *var_6a8;\n                                                if (rbx_4 == 0)\n                                                {\n                                                    rbx_4 = 0x54;\n                                                    if ((r14_1[9] & 0xef) != 0x63)\n                                                    {\n                                                        rbx_4 = 0x16;\n                                                    }\n                                                }\n                                                if ((r11_2 != arg1 && r11_2 != 0))\n                                                {\n                                                    free(r11_2);\n                                                }\n                                                if (var_6e0_1 != 0)\n                                                {\n                                                    free(var_6e0_1);\n                                                }\n                                                if (var_580 != &var_568)\n                                                {\n                                                    free(var_580);\n                                                }\n                                                if (var_670 != &var_668)\n                                                {\n                                                    free(var_670);\n                                                }\n                                                *var_6a8 = rbx_4;\n                                                break;\n                                            }\n                                            goto label_409b48;\n                                        }\n                                    }\n                                    if (((rax_21 - 0x45) <= 2 || ((rax_21 - 0x45) > 2 && rax_21 == 0x41)))\n                                    {\n                                        if (rax_19 != 0xc)\n                                        {\n                                            goto label_409597;\n                                        }\n                                        long double x87_r7_1 = *(rdx_1 + 0x10);\n                                        if ((!(FCMP_UO(x87_r7_1, x87_r7_1))))\n                                        {\n                                            long double x87_r6_3 = x87_r7_1;\n                                            x87_r7_1 = (x87_r7_1 + x87_r7_1);\n                                            (x87_r6_3 - x87_r7_1);\n                                            bool cond:7_1 = x87_r6_3 != x87_r7_1;\n                                            if ((FCMP_UO(x87_r6_3, x87_r7_1)))\n                                            {\n                                                goto label_409597;\n                                            }\n                                            if (cond:7_1)\n                                            {\n                                                goto label_409597;\n                                            }\n                                            goto label_409a1d;\n                                        }\n                                    label_409a1d:\n                                        char* rdx_11 = r14_1[3];\n                                        int64_t rdi_16 = r14_1[4];\n                                        int32_t r11_3 = r14_1[2];\n                                        int64_t r10_1;\n                                        if (rdx_11 == rdi_16)\n                                        {\n                                            r10_1 = 0;\n                                        label_409810:\n                                            void* rdx_9 = r14_1[6];\n                                            int64_t rcx_10 = r14_1[7];\n                                            int64_t rcx_11;\n                                            int64_t rdx_10;\n                                            if (rdx_9 != rcx_10)\n                                            {\n                                                int64_t rsi_10 = r14_1[8];\n                                                if (rsi_10 == -1)\n                                                {\n                                                    char* rax_139 = (rdx_9 + 1);\n                                                    rdx_10 = 0;\n                                                    if (rcx_10 == rax_139)\n                                                    {\n                                                    label_40aaf4:\n                                                        rcx_11 = 0xc;\n                                                    label_409ee1:\n                                                        int64_t rax_97 = rcx_11;\n                                                        if (r10_1 >= rcx_11)\n                                                        {\n                                                            rax_97 = r10_1;\n                                                        }\n                                                        uint64_t rax_98 = (rax_97 + 1);\n                                                        var_698 = rax_98;\n                                                        if (rax_97 >= -1)\n                                                        {\n                                                            goto label_409885;\n                                                        }\n                                                        void var_2f8;\n                                                        int64_t rcx_21;\n                                                        if (rax_98 <= 0x2bc)\n                                                        {\n                                                            rcx_21 = &var_2f8;\n                                                        }\n                                                        else\n                                                        {\n                                                            var_6b8 = r11_3;\n                                                            var_6a8 = x87_r7_1;\n                                                            if (rax_98 == -1)\n                                                            {\n                                                                goto label_409885;\n                                                            }\n                                                            int64_t rax_99 = malloc(rax_98);\n                                                            r11_3 = var_6b8;\n                                                            x87_r7_1 = var_6a8;\n                                                            rcx_21 = rax_99;\n                                                            if (rax_99 == 0)\n                                                            {\n                                                                goto label_409885;\n                                                            }\n                                                        }\n                                                        int64_t r9_6;\n                                                        int64_t r15_9;\n                                                        if ((!(FCMP_UO(x87_r7_1, x87_r7_1))))\n                                                        {\n                                                            uint16_t x87status_1;\n                                                            int16_t temp0_2;\n                                                            temp0_2 = __fnstcw_memmem16(arg5);\n                                                            var_680 = temp0_2;\n                                                            int32_t r8_7 = var_680;\n                                                            int16_t rax_100;\n                                                            *rax_100[1] = (*r8_7[1] | 3);\n                                                            var_680 = rax_100;\n                                                            uint16_t x87control;\n                                                            uint16_t x87status_2;\n                                                            x87control = __fldcw_memmem16(var_680);\n                                                            bool c0_1;\n                                                            bool c1_1;\n                                                            bool c2_1;\n                                                            bool c3_1;\n                                                            c0_1 = __fxam(x87_r7_1);\n                                                            if ((*((((c0_1) ? 1 : 0) << 8) | ((((c1_1) ? 1 : 0) << 9) | ((((c2_1) ? 1 : 0) << 0xa) | ((((c3_1) ? 1 : 0) << 0xe) | 0x3800))))[1] & 2) != 0)\n                                                            {\n                                                                *rcx_21 = 0x2d;\n                                                                x87_r7_1 = (-x87_r7_1);\n                                                                r15_9 = (rcx_21 + 1);\n                                                            }\n                                                            else if ((r11_3 & 4) != 0)\n                                                            {\n                                                                r15_9 = (rcx_21 + 1);\n                                                                *rcx_21 = 0x2b;\n                                                            }\n                                                            else\n                                                            {\n                                                                r15_9 = rcx_21;\n                                                                if ((r11_3 & 8) != 0)\n                                                                {\n                                                                    r15_9 = (rcx_21 + 1);\n                                                                    *rcx_21 = 0x20;\n                                                                }\n                                                            }\n                                                            long double x87_r6_4 = 0;\n                                                            if (x87_r7_1 <= x87_r6_4)\n                                                            {\n                                                                (x87_r7_1 - x87_r6_4);\n                                                                bool cond:14_1 = x87_r7_1 != x87_r6_4;\n                                                                if ((FCMP_UO(x87_r7_1, x87_r6_4)))\n                                                                {\n                                                                    goto label_409fbc;\n                                                                }\n                                                                if (cond:14_1)\n                                                                {\n                                                                    goto label_409fbc;\n                                                                }\n                                                                bool rax_118 = (r14_1[9] & 0xdf);\n                                                                int32_t var_6e8;\n                                                                if (rax_118 == 0x46)\n                                                                {\n                                                                    *r15_9 = 0x30;\n                                                                    if ((r11_3 & 0x10) != 0)\n                                                                    {\n                                                                    label_40a919:\n                                                                        var_6e8 = r10_1;\n                                                                        var_6b8 = r11_3;\n                                                                        r9_6 = (r15_9 + 2);\n                                                                        char rax_137 = *nl_langinfo(0x10000);\n                                                                        r11_3 = var_6b8;\n                                                                        r10_1 = var_6e8;\n                                                                        if (rax_137 == 0)\n                                                                        {\n                                                                            rax_137 = 0x2e;\n                                                                        }\n                                                                        *(r15_9 + 1) = rax_137;\n                                                                        if (rdx_10 != 0)\n                                                                        {\n                                                                            int64_t rsi_34 = ((r15_9 + rdx_10) + 2);\n                                                                            int64_t rax_138 = r9_6;\n                                                                        label_40a990:\n                                                                            rax_138 = (rax_138 + 1);\n                                                                            *(rax_138 - 1) = 0x30;\n                                                                            if (rax_138 != rsi_34)\n                                                                            {\n                                                                                goto label_40a990;\n                                                                            }\n                                                                            r9_6 = (r9_6 + rdx_10);\n                                                                        }\n                                                                        goto label_40a40b;\n                                                                    }\n                                                                    if (rdx_10 != 0)\n                                                                    {\n                                                                        goto label_40a919;\n                                                                    }\n                                                                label_40a407:\n                                                                    r9_6 = (r15_9 + 1);\n                                                                label_40a40b:\n                                                                    var_680 = r8_7;\n                                                                    uint16_t x87status_3;\n                                                                    arg5 = __fldcw_memmem16(var_680);\n                                                                label_40a41c:\n                                                                    uint64_t r8_11 = (r9_6 - rcx_21);\n                                                                    if (r10_1 > r8_11)\n                                                                    {\n                                                                        int64_t r10_2 = (r10_1 - r8_11);\n                                                                        int64_t rdi_38 = (r9_6 + r10_2);\n                                                                        r8_11 = (rdi_38 - rcx_21);\n                                                                        if ((r11_3 & 2) == 0)\n                                                                        {\n                                                                            if (((r11_3 & 0x20) == 0 || ((r11_3 & 0x20) != 0 && r15_9 == 0)))\n                                                                            {\n                                                                                int64_t rax_130 = -1;\n                                                                                int64_t rdx_26 = ((rcx_21 - 1) - r9_6);\n                                                                                if (rcx_21 < r9_6)\n                                                                                {\n                                                                                label_40a755:\n                                                                                    *(rdi_38 + rax_130) = *(r9_6 + rax_130);\n                                                                                    rax_130 = (rax_130 - 1);\n                                                                                    if (rdx_26 != rax_130)\n                                                                                    {\n                                                                                        goto label_40a755;\n                                                                                    }\n                                                                                    r9_6 = rcx_21;\n                                                                                }\n                                                                                if (r10_2 != 0)\n                                                                                {\n                                                                                    int64_t r10_4 = (r10_2 + r9_6);\n                                                                                label_40a778:\n                                                                                    r9_6 = (r9_6 + 1);\n                                                                                    *(r9_6 - 1) = 0x20;\n                                                                                    if (r9_6 != r10_4)\n                                                                                    {\n                                                                                        goto label_40a778;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                            if (((r11_3 & 0x20) != 0 && r15_9 != 0))\n                                                                            {\n                                                                                if (r15_9 >= r9_6)\n                                                                                {\n                                                                                    r15_9 = r9_6;\n                                                                                }\n                                                                                else\n                                                                                {\n                                                                                    int64_t rax_119 = -1;\n                                                                                    int64_t rdx_21 = ((r15_9 - 1) - r9_6);\n                                                                                label_40a46d:\n                                                                                    *(rdi_38 + rax_119) = *(r9_6 + rax_119);\n                                                                                    rax_119 = (rax_119 - 1);\n                                                                                    if (rax_119 != rdx_21)\n                                                                                    {\n                                                                                        goto label_40a46d;\n                                                                                    }\n                                                                                }\n                                                                                if (r10_2 != 0)\n                                                                                {\n                                                                                    int64_t r10_3 = (r10_2 + r15_9);\n                                                                                label_40a488:\n                                                                                    r15_9 = (r15_9 + 1);\n                                                                                    *(r15_9 - 1) = 0x30;\n                                                                                    if (r15_9 != r10_3)\n                                                                                    {\n                                                                                        goto label_40a488;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                        else if (r10_2 != 0)\n                                                                        {\n                                                                        label_40a8e0:\n                                                                            r9_6 = (r9_6 + 1);\n                                                                            *(r9_6 - 1) = 0x20;\n                                                                            if (rdi_38 != r9_6)\n                                                                            {\n                                                                                goto label_40a8e0;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                    if (var_698 <= r8_11)\n                                                                    {\n                                                                        goto label_409fbc;\n                                                                    }\n                                                                    uint64_t rax_121 = (r13_1 + r8_11);\n                                                                    int64_t rsi_24;\n                                                                    rsi_24 = (r13_1 + r8_11) < r13_1;\n                                                                    r15_2 = rax_121;\n                                                                    if ((r12_1 - r13_1) > r8_11)\n                                                                    {\n                                                                        goto label_40a54a;\n                                                                    }\n                                                                    if (rsi_24 != 0)\n                                                                    {\n                                                                        if (r12_1 != -1)\n                                                                        {\n                                                                            goto label_409885;\n                                                                        }\n                                                                        goto label_40a54a;\n                                                                    }\n                                                                    if (r12_1 >= rax_121)\n                                                                    {\n                                                                        goto label_40a54a;\n                                                                    }\n                                                                    bool cond:21_1 = r12_1 < 0;\n                                                                    if (r12_1 != 0)\n                                                                    {\n                                                                        if (cond:21_1)\n                                                                        {\n                                                                            goto label_409885;\n                                                                        }\n                                                                        r12_1 = (r12_1 + r12_1);\n                                                                        if (r12_1 >= rax_121)\n                                                                        {\n                                                                            goto label_40a4f5;\n                                                                        }\n                                                                    }\n                                                                    else if (rax_121 <= 0xc)\n                                                                    {\n                                                                        r12_1 = 0xc;\n                                                                    label_40a4f5:\n                                                                        void* rdx_23;\n                                                                        rdx_23 = rbx_2 == arg1;\n                                                                        if (rbx_2 == 0)\n                                                                        {\n                                                                        label_40a78e:\n                                                                            var_6b8 = rdx_23;\n                                                                            var_698 = rcx_21;\n                                                                            char* rax_131 = malloc(r12_1);\n                                                                            rcx_21 = var_698;\n                                                                            char rdx_27 = var_6b8;\n                                                                            if (rax_131 == 0)\n                                                                            {\n                                                                                goto label_409885;\n                                                                            }\n                                                                            if ((r13_1 == 0 || (r13_1 != 0 && rdx_27 == 0)))\n                                                                            {\n                                                                                rbx_2 = rax_131;\n                                                                            }\n                                                                            if ((r13_1 != 0 && rdx_27 != 0))\n                                                                            {\n                                                                                var_698 = rcx_21;\n                                                                                rcx_21 = var_698;\n                                                                                rbx_2 = memcpy(rax_131, rbx_2, r13_1);\n                                                                            }\n                                                                            goto label_40a54a;\n                                                                        }\n                                                                        if (rdx_23 != 0)\n                                                                        {\n                                                                            goto label_40a78e;\n                                                                        }\n                                                                        var_6a8 = r8_11;\n                                                                        var_698 = rcx_21;\n                                                                        char* rax_122 = realloc(rbx_2, r12_1);\n                                                                        if (rax_122 == 0)\n                                                                        {\n                                                                            goto label_409885;\n                                                                        }\n                                                                        rcx_21 = var_698;\n                                                                        r8_11 = var_6a8;\n                                                                        rbx_2 = rax_122;\n                                                                    label_40a54a:\n                                                                        var_698 = rcx_21;\n                                                                        memcpy((rbx_2 + r13_1), rcx_21, r8_11);\n                                                                        int64_t rcx_25 = var_698;\n                                                                        if (rcx_25 != &var_2f8)\n                                                                        {\n                                                                            free(rcx_25);\n                                                                        }\n                                                                        goto label_409987;\n                                                                    }\n                                                                    if (rax_121 == -1)\n                                                                    {\n                                                                        goto label_409885;\n                                                                    }\n                                                                    r12_1 = rax_121;\n                                                                    goto label_40a4f5;\n                                                                }\n                                                                if (rax_118 != 0x45)\n                                                                {\n                                                                    int32_t var_6f0;\n                                                                    if (rax_118 == 0x47)\n                                                                    {\n                                                                        *r15_9 = 0x30;\n                                                                        if ((r11_3 & 0x10) == 0)\n                                                                        {\n                                                                            goto label_40a407;\n                                                                        }\n                                                                        int64_t r9_8 = (r15_9 + 2);\n                                                                        if (rdx_10 == 0)\n                                                                        {\n                                                                            var_6a8 = r11_3;\n                                                                            r11_3 = var_6a8;\n                                                                            char rax_156 = *nl_langinfo(0x10000);\n                                                                            r9_6 = r9_8;\n                                                                            if (rax_156 == 0)\n                                                                            {\n                                                                                rax_156 = 0x2e;\n                                                                            }\n                                                                            *(r15_9 + 1) = rax_156;\n                                                                        }\n                                                                        else\n                                                                        {\n                                                                            char* rsi_32 = (rdx_10 - 1);\n                                                                            var_6f0 = r10_1;\n                                                                            var_6e8 = r9_8;\n                                                                            var_6c8 = r11_3;\n                                                                            var_6b8 = rdx_10;\n                                                                            char rax_134 = *nl_langinfo(0x10000);\n                                                                            r11_3 = var_6c8;\n                                                                            r9_6 = var_6e8;\n                                                                            r10_1 = var_6f0;\n                                                                            if (rax_134 == 0)\n                                                                            {\n                                                                                rax_134 = 0x2e;\n                                                                            }\n                                                                            *(r15_9 + 1) = rax_134;\n                                                                            if (rsi_32 != 0)\n                                                                            {\n                                                                                void* rdx_30 = &var_6b8[(r15_9 + 1)];\n                                                                                int64_t rax_135 = r9_6;\n                                                                            label_40a8be:\n                                                                                rax_135 = (rax_135 + 1);\n                                                                                *(rax_135 - 1) = 0x30;\n                                                                                if (rax_135 != rdx_30)\n                                                                                {\n                                                                                    goto label_40a8be;\n                                                                                }\n                                                                                r9_6 = &rsi_32[r9_6];\n                                                                            }\n                                                                        }\n                                                                        goto label_40a40b;\n                                                                    }\n                                                                    if (rax_118 != 0x41)\n                                                                    {\n                                                                        goto label_409fbc;\n                                                                    }\n                                                                    char* rax_142 = (r15_9 + 2);\n                                                                    *r15_9 = 0x30;\n                                                                    char rax_143 = r14_1[9];\n                                                                    *(r15_9 + 2) = 0x30;\n                                                                    *(r15_9 + 1) = (rax_143 + 0x17);\n                                                                    char* rsi_41;\n                                                                    if ((r11_3 & 0x10) == 0)\n                                                                    {\n                                                                        rsi_41 = (r15_9 + 3);\n                                                                    }\n                                                                    if (((r11_3 & 0x10) != 0 || ((r11_3 & 0x10) == 0 && rdx_10 != 0 != 0)))\n                                                                    {\n                                                                        var_6f0 = r10_1;\n                                                                        var_6e8 = rcx_21;\n                                                                        var_6c8 = r11_3;\n                                                                        rsi_41 = (r15_9 + 4);\n                                                                        char rax_153 = *nl_langinfo(0x10000);\n                                                                        r11_3 = var_6c8;\n                                                                        rcx_21 = var_6e8;\n                                                                        r10_1 = var_6f0;\n                                                                        if (rax_153 == 0)\n                                                                        {\n                                                                            rax_153 = 0x2e;\n                                                                        }\n                                                                        *(r15_9 + 3) = rax_153;\n                                                                        if (rdx_10 != 0)\n                                                                        {\n                                                                            int64_t rdi_53 = ((r15_9 + rdx_10) + 4);\n                                                                            char* rax_154 = rsi_41;\n                                                                        label_40ad05:\n                                                                            rax_154 = &rax_154[1];\n                                                                            rax_154[-1] = 0x30;\n                                                                            if (rax_154 != rdi_53)\n                                                                            {\n                                                                                goto label_40ad05;\n                                                                            }\n                                                                            rsi_41 = &rsi_41[rdx_10];\n                                                                        }\n                                                                    }\n                                                                    char rax_145 = r14_1[9];\n                                                                    r9_6 = &rsi_41[3];\n                                                                    *(rsi_41 + 1) = 0x302b;\n                                                                    r15_9 = rax_142;\n                                                                    *rsi_41 = (rax_145 + 0xf);\n                                                                    goto label_40a40b;\n                                                                }\n                                                                *r15_9 = 0x30;\n                                                                char* rsi_27;\n                                                                if ((r11_3 & 0x10) == 0)\n                                                                {\n                                                                    rsi_27 = (r15_9 + 1);\n                                                                }\n                                                                if (((r11_3 & 0x10) != 0 || ((r11_3 & 0x10) == 0 && rdx_10 != 0 != 0)))\n                                                                {\n                                                                    var_6e8 = r10_1;\n                                                                    var_6b8 = r11_3;\n                                                                    rsi_27 = (r15_9 + 2);\n                                                                    char rax_148 = *nl_langinfo(0x10000);\n                                                                    r11_3 = var_6b8;\n                                                                    r10_1 = var_6e8;\n                                                                    if (rax_148 == 0)\n                                                                    {\n                                                                        rax_148 = 0x2e;\n                                                                    }\n                                                                    *(r15_9 + 1) = rax_148;\n                                                                    if (rdx_10 != 0)\n                                                                    {\n                                                                        int64_t rdi_50 = ((r15_9 + rdx_10) + 2);\n                                                                        char* rax_149 = rsi_27;\n                                                                    label_40abf0:\n                                                                        rax_149 = &rax_149[1];\n                                                                        rax_149[-1] = 0x30;\n                                                                        if (rax_149 != rdi_50)\n                                                                        {\n                                                                            goto label_40abf0;\n                                                                        }\n                                                                        rsi_27 = &rsi_27[rdx_10];\n                                                                    }\n                                                                }\n                                                                char rax_123 = r14_1[9];\n                                                                r9_6 = &rsi_27[4];\n                                                                rsi_27[3] = 0x30;\n                                                                *rsi_27 = rax_123;\n                                                                *(rsi_27 + 1) = 0x302b;\n                                                                goto label_40a40b;\n                                                            }\n                                                            long double x87_r6_7 = (x87_r6_4 + x87_r6_4);\n                                                            (x87_r6_7 - x87_r6_4);\n                                                            bool cond:15_1 = x87_r6_7 != x87_r6_4;\n                                                            if ((!(FCMP_O(x87_r6_7, x87_r6_4))))\n                                                            {\n                                                                goto label_409fbc;\n                                                            }\n                                                            if (cond:15_1)\n                                                            {\n                                                                goto label_409fbc;\n                                                            }\n                                                            r9_6 = (r15_9 + 3);\n                                                            if ((r14_1[9] - 0x41) > 0x19)\n                                                            {\n                                                                *(r15_9 + 2) = 0x66;\n                                                                *r15_9 = 0x6e69;\n                                                                r15_9 = 0;\n                                                            }\n                                                            else\n                                                            {\n                                                                *(r15_9 + 2) = 0x46;\n                                                                *r15_9 = 0x4e49;\n                                                                r15_9 = 0;\n                                                            }\n                                                            goto label_40a40b;\n                                                        }\n                                                        r9_6 = (rcx_21 + 3);\n                                                        if ((r15_3 - 0x41) > 0x19)\n                                                        {\n                                                            *(rcx_21 + 2) = 0x6e;\n                                                            r15_9 = 0;\n                                                            *rcx_21 = 0x616e;\n                                                        }\n                                                        else\n                                                        {\n                                                            *(rcx_21 + 2) = 0x4e;\n                                                            r15_9 = 0;\n                                                            *rcx_21 = 0x414e;\n                                                        }\n                                                        goto label_40a41c;\n                                                    }\n                                                    char* rsi_36 = rax_139;\n                                                label_40aa53:\n                                                    char* rdi_49 = &rsi_36[1];\n                                                    int64_t rax_140 = (*rsi_36 - 0x30);\n                                                    int64_t rsi_39 = -1;\n                                                    if (rdx_10 <= 0x1999999999999999)\n                                                    {\n                                                        int64_t rsi_40 = (rdx_10 * 5);\n                                                        rsi_39 = (rsi_40 + rsi_40);\n                                                    }\n                                                    rsi_36 = rdi_49;\n                                                    rdx_10 = (rax_140 + rsi_39);\n                                                    if ((rax_140 + rsi_39) < rax_140)\n                                                    {\n                                                        if (rcx_10 == rdi_49)\n                                                        {\n                                                            goto label_409885;\n                                                        }\n                                                    label_40aa87:\n                                                        rsi_36 = &rdi_49[1];\n                                                        if (rsi_36[-1] != 0x30)\n                                                        {\n                                                            if (rcx_10 != rsi_36)\n                                                            {\n                                                                rdi_49 = rsi_36;\n                                                                goto label_40aa87;\n                                                            }\n                                                            goto label_409885;\n                                                        }\n                                                        rdx_10 = -1;\n                                                    }\n                                                    if (rcx_10 != rsi_36)\n                                                    {\n                                                        goto label_40aa53;\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    void* r8_4 = &var_670[(rsi_10 << 5)];\n                                                    if (*r8_4 != 5)\n                                                    {\n                                                        goto label_409fbc;\n                                                    }\n                                                    rdx_10 = *(r8_4 + 0x10);\n                                                    if (rdx_10 < 0)\n                                                    {\n                                                        goto label_409ec0;\n                                                    }\n                                                }\n                                                if (rdx_10 == 0)\n                                                {\n                                                    goto label_40aaf4;\n                                                }\n                                                rcx_11 = (rdx_10 + 0xc);\n                                                if (rdx_10 >= -0xc)\n                                                {\n                                                    goto label_409885;\n                                                }\n                                                goto label_409ee1;\n                                            }\n                                        label_409ec0:\n                                            bool cond:9_1 = rax_21 != 0x41;\n                                            rcx_11 = 0xc;\n                                            if (rax_21 != 0x41)\n                                            {\n                                                rcx_11 = 0x12;\n                                            }\n                                            rdx_10 = 0;\n                                            if (cond:9_1)\n                                            {\n                                                rdx_10 = 6;\n                                            }\n                                            goto label_409ee1;\n                                        }\n                                        int64_t rcx_12 = r14_1[5];\n                                        if (rcx_12 != -1)\n                                        {\n                                            void* rcx_14 = &var_670[(rcx_12 << 5)];\n                                            if (*rcx_14 != 5)\n                                            {\n                                                goto label_409fbc;\n                                            }\n                                            r10_1 = *(rcx_14 + 0x10);\n                                            if (r10_1 < 0)\n                                            {\n                                                r11_3 = (r11_3 | 2);\n                                                r10_1 = (-r10_1);\n                                            }\n                                            goto label_409810;\n                                        }\n                                        r10_1 = 0;\n                                        var_698 = rcx_12;\n                                    label_40a9c1:\n                                        char* rsi_35 = &rdx_11[1];\n                                        int64_t r9_10 = -1;\n                                        int64_t rdx_34 = (*rdx_11 - 0x30);\n                                        if (r10_1 <= 0x1999999999999999)\n                                        {\n                                            int64_t r9_11 = (r10_1 * 5);\n                                            r9_10 = (r9_11 + r9_11);\n                                        }\n                                        r10_1 = (rdx_34 + r9_10);\n                                        rdx_11 = rsi_35;\n                                        if ((rdx_34 + r9_10) < rdx_34)\n                                        {\n                                            int64_t rcx_26 = var_698;\n                                            if (rdi_16 != rsi_35)\n                                            {\n                                            label_40aa06:\n                                                rdx_11 = &rdx_11[1];\n                                                if (rdx_11[-1] == 0x30)\n                                                {\n                                                    var_698 = rcx_26;\n                                                    r10_1 = -1;\n                                                }\n                                                else if (rdi_16 != rdx_11)\n                                                {\n                                                    goto label_40aa06;\n                                                }\n                                            }\n                                            if ((rdi_16 == rsi_35 || (rdi_16 != rsi_35 && rdx_11[-1] != 0x30)))\n                                            {\n                                                r10_1 = rcx_26;\n                                            }\n                                        }\n                                        if ((((((rdx_34 + r9_10) < rdx_34 && rdi_16 != rsi_35) && rdx_11[-1] == 0x30) || (rdx_34 + r9_10) >= rdx_34) && rdi_16 != rdx_11))\n                                        {\n                                            goto label_40a9c1;\n                                        }\n                                        goto label_409810;\n                                    }\n                                }\n                            }\n                            if ((r15_7 != arg1 && r15_7 != 0))\n                            {\n                                goto label_409aab;\n                            }\n                        }\n                        else\n                        {\n                            if (r12_1 >= rax_8)\n                            {\n                                goto label_409503;\n                            }\n                            bool cond:0_1 = r12_1 < 0;\n                            if ((r12_1 == 0 && rax_8 <= 0xc))\n                            {\n                                r12_1 = 0xc;\n                                rdx_1 = rbx_2 == arg1;\n                                if (rbx_2 == 0)\n                                {\n                                label_4093ea:\n                                    var_6a8 = rdx_1;\n                                    var_698 = rcx_1;\n                                    char* rax_9 = malloc(r12_1);\n                                    rcx_1 = var_698;\n                                    char rdx_2 = var_6a8;\n                                    if (rax_9 == 0)\n                                    {\n                                        goto label_409885;\n                                    }\n                                    if ((r15_2 == 0 || (r15_2 != 0 && rdx_2 == 0)))\n                                    {\n                                        rbx_2 = rax_9;\n                                    }\n                                    if ((r15_2 != 0 && rdx_2 != 0))\n                                    {\n                                        var_698 = rcx_1;\n                                        rcx_1 = var_698;\n                                        rbx_2 = memcpy(rax_9, rbx_2, r15_2);\n                                    }\n                                    goto label_409503;\n                                }\n                            }\n                            if (r12_1 != 0)\n                            {\n                                if (cond:0_1)\n                                {\n                                    goto label_409885;\n                                }\n                                r12_1 = (r12_1 + r12_1);\n                                if (r12_1 >= rax_8)\n                                {\n                                    goto label_4094b2;\n                                }\n                            }\n                            if (((r12_1 == 0 && rax_8 > 0xc) || r12_1 != 0))\n                            {\n                                if (rax_8 == -1)\n                                {\n                                    goto label_409885;\n                                }\n                                r12_1 = rax_8;\n                            label_4094b2:\n                                rdx_1 = rbx_2 == arg1;\n                                if (rbx_2 == 0)\n                                {\n                                    goto label_4093ea;\n                                }\n                            }\n                            if (((((r12_1 == 0 && rax_8 > 0xc) || r12_1 != 0) && rax_8 != -1) || (r12_1 == 0 && rax_8 <= 0xc)))\n                            {\n                                if (rdx_1 != 0)\n                                {\n                                    goto label_4093ea;\n                                }\n                                var_698 = rcx_1;\n                                char* rax_15 = realloc(rbx_2, r12_1);\n                                if (rax_15 != 0)\n                                {\n                                    rcx_1 = var_698;\n                                    rbx_2 = rax_15;\n                                    goto label_409503;\n                                }\n                            label_409a9a:\n                                r15_7 = rbx_2;\n                                var_6a8 = __errno_location();\n                            label_409aab:\n                                free(r15_7);\n                            }\n                        }\n                        if (var_6e0_1 == 0)\n                        {\n                            break;\n                        }\n                        free(var_6e0_1);\n                        break;\n                    }\n                }\n                if ((rcx == r8_1 || (((rcx != r8_1 && (!/* if (rcx == r8_1 || (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && not(unimplemented  {add rax, rcx} && var_6e0_1 == 0) && not(unimplemented  {add rax, rcx})))... */)) && (!(/* if (rcx == r8_1 || (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && not(unimplemented  {add rax, rcx} && var_6e0_1 == 0) && not(unimplemented  {add rax, rcx})))... */ && var_6e0_1 == 0))) && (!/* if (rcx == r8_1 || (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && not(unimplemented  {add rax, rcx} && var_6e0_1 == 0) && not(unimplemented  {add rax, rcx})))... */))))\n                {\n                    r13_1 = r15_2;\n                    goto label_40950f;\n                }\n                if ((((rcx != r8_1 && (!/* if (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && unimplemented  {add rax, rcx} && var_6e0_1 == 0)... */)) && /* if (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && unimplemented  {add rax, rcx} && var_6e0_1 == 0)... */) && var_6e0_1 == 0))\n                {\n                    goto label_4099b5;\n                }\n            }\n            else\n            {\n            label_4099b5:\n                var_6a8 = __errno_location();\n            }\n            if (((rax_3 + var_570) < rax_3 || ((((rax_3 + var_570) >= rax_3 && rax_4 < -6) && rcx != r8_1) && /* if (rax_3 + var_570 u< rax_3 || (rax_3 + var_570 u>= rax_3 && rax_4 u< -6 && rcx != r8_1 && unimplemented  {add rax, rcx}))... */)))\n            {\n                if (var_580 != &var_568)\n                {\n                    free(var_580);\n                }\n                if (var_670 == &var_668)\n                {\n                    goto label_4098fa;\n                }\n                free(var_670);\n            label_4098fa:\n                *var_6a8 = 0xc;\n            }\n        }\n        else\n        {\n            if (var_580 != &var_568)\n            {\n                free(var_580);\n            }\n            if (var_670 != &var_668)\n            {\n                free(var_670);\n            }\n            *__errno_location() = 0x16;\n        }\n    }\nlabel_409911:\n}\n\n"
        },
        {
            "funcName": "sub_40adb0",
            "funcStartAddr": "0x40adb0",
            "funcEndAddr": "0x40af86",
            "decompiledFuncCode": "int64_t sub_40adb0(int64_t, void* arg2)\n{\n    int32_t* rax = *(arg2 + 8);\n    if (*arg2 == 0)\n    {\n        return 0;\n    }\n    if (*rax > 0x16)\n    {\n        return 0xffffffff;\n    }\n    /* jump -> *((*rax << 3) + &data_411190) */\n}\n\n"
        },
        {
            "funcName": "sub_40afd0",
            "funcStartAddr": "0x40afd0",
            "funcEndAddr": "0x40bcd9",
            "decompiledFuncCode": "int64_t sub_40afd0(char* arg1, int64_t* arg2, int64_t* arg3)\n{\n    void* rcx = &arg2[4];\n    void* rax = &arg3[2];\n    int64_t* r8 = arg2;\n    void* r9 = 7;\n    int64_t r11 = 7;\n    int64_t r13 = 0;\n    *arg2 = 0;\n    arg2[1] = rcx;\n    void* var_60 = rcx;\n    *arg3 = 0;\n    arg3[1] = rax;\n    void* var_70 = nullptr;\n    int64_t var_78 = 0;\n    void* var_68 = nullptr;\n    while (true)\n    {\n        char rax_1 = *arg1;\n        int64_t rax_6;\n        if (rax_1 == 0)\n        {\n            *(rcx + (r13 * 0x58)) = arg1;\n            r8[2] = var_78;\n            r8[3] = var_70;\n            rax_6 = 0;\n        }\n        else\n        {\n            void* rbp_1 = &arg1[1];\n            if (rax_1 != 0x25)\n            {\n                goto label_40b048;\n            }\n            void* r14_1 = ffffffffffffffff;\n            char** r12_1 = (rcx + (r13 * 0x58));\n            *r12_1 = arg1;\n            r12_1[2] = 0;\n            r12_1[3] = 0;\n            r12_1[4] = 0;\n            r12_1[5] = -1;\n            r12_1[6] = 0;\n            r12_1[7] = 0;\n            r12_1[8] = -1;\n            r12_1[0xa] = -1;\n            char rbx_1 = arg1[1];\n            if ((rbx_1 - 0x30) > 9)\n            {\n                goto label_40b116;\n            }\n            void* rax_29 = rbp_1;\n            char rdx_14;\n            do\n            {\n                rax_29 = (rax_29 + 1);\n                rdx_14 = *rax_29;\n            } while ((rdx_14 - 0x30) <= 9);\n            void* r13_1;\n            if (rdx_14 == 0x24)\n            {\n                int64_t rax_64 = 0;\n                void* rcx_16;\n                int64_t rdx_28;\n                int64_t rdi_16;\n                char rsi_21;\n                do\n                {\n                    int64_t rsi_19 = -1;\n                    int64_t rdx_27 = (rbx_1 - 0x30);\n                    if (rax_64 <= 0x1999999999999999)\n                    {\n                        int64_t rsi_20 = (rax_64 * 5);\n                        rsi_19 = (rsi_20 + rsi_20);\n                    }\n                    rcx_16 = rbp_1;\n                    while (true)\n                    {\n                        rbx_1 = *(rbp_1 + 1);\n                        rdx_28 = (rdx_27 + rsi_19);\n                        rdi_16 = (rdx_27 + rsi_19) < rdx_27;\n                        rax_64 = rdx_28;\n                        rbp_1 = (rbp_1 + 1);\n                        rsi_21 = (rbx_1 - 0x30);\n                        if (rdi_16 == 0)\n                        {\n                            break;\n                        }\n                        if (rsi_21 > 9)\n                        {\n                            break;\n                        }\n                        rsi_19 = -1;\n                        rcx_16 = rbp_1;\n                        rdx_27 = (rbx_1 - 0x30);\n                    }\n                    if (rdi_16 != 0)\n                    {\n                        break;\n                    }\n                } while (rsi_21 <= 9);\n                if (rdi_16 != 0)\n                {\n                    goto label_40b798;\n                }\n                r14_1 = (rdx_28 - 1);\n                if (r14_1 <= -3)\n                {\n                    rbp_1 = (rcx_16 + 2);\n                    rbx_1 = *(rcx_16 + 2);\n                    goto label_40b116;\n                }\n            label_40b798:\n                r13_1 = arg3[1];\n            }\n            else\n            {\n                r14_1 = ffffffffffffffff;\n            label_40b116:\n                void* rcx_1;\n                while (true)\n                {\n                    rcx_1 = (rbp_1 + 1);\n                    if (rbx_1 == 0x27)\n                    {\n                        r12_1[2] = (r12_1[2] | 1);\n                    }\n                    else if (rbx_1 == 0x2d)\n                    {\n                        r12_1[2] = (r12_1[2] | 2);\n                    }\n                    else if (rbx_1 == 0x2b)\n                    {\n                        r12_1[2] = (r12_1[2] | 4);\n                    }\n                    else if (rbx_1 == 0x20)\n                    {\n                        r12_1[2] = (r12_1[2] | 8);\n                    }\n                    else if (rbx_1 == 0x23)\n                    {\n                        r12_1[2] = (r12_1[2] | 0x10);\n                    }\n                    else if (rbx_1 == 0x30)\n                    {\n                        r12_1[2] = (r12_1[2] | 0x20);\n                    }\n                    else\n                    {\n                        if (rbx_1 != 0x49)\n                        {\n                            break;\n                        }\n                        r12_1[2] = (r12_1[2] | 0x40);\n                    }\n                    rbx_1 = *rcx_1;\n                    rbp_1 = rcx_1;\n                }\n                if (rbx_1 != 0x2a)\n                {\n                    if ((rbx_1 - 0x30) <= 9)\n                    {\n                        r12_1[3] = rbp_1;\n                        if ((*rbp_1 - 0x30) <= 9)\n                        {\n                            void* rcx_15 = rbp_1;\n                            void* rdx_21;\n                            while (true)\n                            {\n                                rdx_21 = (rcx_15 + 1);\n                                if ((*(rcx_15 + 1) - 0x30) > 9)\n                                {\n                                    break;\n                                }\n                                rcx_15 = rdx_21;\n                            }\n                            rcx_1 = (rcx_15 + 2);\n                            int64_t rax_57 = (rdx_21 - rbp_1);\n                            rbp_1 = rdx_21;\n                            if (var_78 >= rax_57)\n                            {\n                                rax_57 = var_78;\n                            }\n                            var_78 = rax_57;\n                        }\n                        r12_1[4] = rbp_1;\n                        rbx_1 = *rbp_1;\n                    }\n                    goto label_40b188;\n                }\n                int64_t rax_12 = 1;\n                r12_1[3] = rbp_1;\n                r12_1[4] = rcx_1;\n                if (var_78 != 0)\n                {\n                    rax_12 = var_78;\n                }\n                var_78 = rax_12;\n                int32_t rax_13 = *(rbp_1 + 1);\n                void* rbx_2;\n                if ((rax_13 - 0x30) <= 9)\n                {\n                    void* rdx_17 = rcx_1;\n                    char rsi_10;\n                    do\n                    {\n                        rdx_17 = (rdx_17 + 1);\n                        rsi_10 = *rdx_17;\n                    } while ((rsi_10 - 0x30) <= 9);\n                    if (rsi_10 == 0x24)\n                    {\n                        void* rsi_11 = nullptr;\n                        void* rdx_20;\n                        int64_t rbp_2;\n                        void* rdi_5;\n                        char rbx_6;\n                        do\n                        {\n                            void* const rdx_18 = ffffffffffffffff;\n                            int64_t rax_43 = (rax_13 - 0x30);\n                            if (rsi_11 <= 0x1999999999999999)\n                            {\n                                void* rdx_19 = (rsi_11 * 5);\n                                rdx_18 = (rdx_19 + rdx_19);\n                            }\n                            rdi_5 = rcx_1;\n                            while (true)\n                            {\n                                rdx_20 = (rdx_18 + rax_43);\n                                rax_13 = *(rcx_1 + 1);\n                                rbp_2 = (rdx_18 + rax_43) < rdx_18;\n                                rsi_11 = rdx_20;\n                                rcx_1 = (rcx_1 + 1);\n                                rbx_6 = (rax_13 - 0x30);\n                                if (rbp_2 == 0)\n                                {\n                                    break;\n                                }\n                                if (rbx_6 > 9)\n                                {\n                                    break;\n                                }\n                                rdx_18 = ffffffffffffffff;\n                                rdi_5 = rcx_1;\n                                rax_43 = (rax_13 - 0x30);\n                            }\n                            if (rbp_2 != 0)\n                            {\n                                break;\n                            }\n                        } while (rbx_6 <= 9);\n                        if (rbp_2 != 0)\n                        {\n                            goto label_40b798;\n                        }\n                        rbx_2 = (rdx_20 - 1);\n                        if (rbx_2 > -3)\n                        {\n                            goto label_40b798;\n                        }\n                        r12_1[5] = rbx_2;\n                        rcx_1 = (rdi_5 + 2);\n                        goto label_40b22c;\n                    }\n                }\n                rbx_2 = r12_1[5];\n                if (rbx_2 != -1)\n                {\n                    goto label_40b22c;\n                }\n                void* rax_41 = (var_68 + 1);\n                r12_1[5] = var_68;\n                if (var_68 == -1)\n                {\n                    goto label_40b798;\n                }\n                rbx_2 = var_68;\n                var_68 = rax_41;\n            label_40b22c:\n                r13_1 = arg3[1];\n                int64_t rdx_4;\n                void* rsi_7;\n                if (r9 <= rbx_2)\n                {\n                    void* r9_1 = (r9 + r9);\n                    void* rax_36 = (rbx_2 + 1);\n                    if (r9_1 <= rbx_2)\n                    {\n                        r9_1 = rax_36;\n                    }\n                    if (r9_1 <= 0x7ffffffffffffff)\n                    {\n                        int64_t rsi_6 = (r9_1 << 5);\n                        if (rax == r13_1)\n                        {\n                            void* rax_63 = malloc(rsi_6);\n                            r9 = r9_1;\n                            if (rax_63 == 0)\n                            {\n                                goto label_40b989;\n                            }\n                            rdx_4 = *arg3;\n                            rsi_7 = rax;\n                            r13_1 = rax_63;\n                        label_40baa4:\n                            memcpy(r13_1, rsi_7, (rdx_4 << 5));\n                            rdx_4 = *arg3;\n                        label_40b55d:\n                            arg3[1] = r13_1;\n                            goto label_40b23c;\n                        }\n                        void* rax_37 = realloc(r13_1, rsi_6);\n                        rsi_7 = arg3[1];\n                        r13_1 = rax_37;\n                        r9 = r9_1;\n                        if (rax_37 != 0)\n                        {\n                            rdx_4 = *arg3;\n                            if (rax == rsi_7)\n                            {\n                                goto label_40baa4;\n                            }\n                            goto label_40b55d;\n                        }\n                        goto label_40b970;\n                    }\n                label_40b96d:\n                    rsi_7 = r13_1;\n                label_40b970:\n                    if (rax == rsi_7)\n                    {\n                        goto label_40b989;\n                    }\n                label_40b97f:\n                    free(rsi_7);\n                label_40b989:\n                    int64_t rdi_12 = r8[1];\n                    if (var_60 != rdi_12)\n                    {\n                        free(rdi_12);\n                    }\n                    break;\n                }\n                rdx_4 = *arg3;\n            label_40b23c:\n                if (rdx_4 <= rbx_2)\n                {\n                    do\n                    {\n                        rdx_4 = (rdx_4 + 1);\n                        *((r13_1 + (rdx_4 << 5)) - 0x20) = 0;\n                    } while (rdx_4 <= rbx_2);\n                    *arg3 = rdx_4;\n                    goto label_40b268;\n                }\n            label_40b268:\n                void* rax_16 = (r13_1 + (rbx_2 << 5));\n                int32_t rdx_5 = *rax_16;\n                if (rdx_5 == 0)\n                {\n                    *rax_16 = 5;\n                    rbx_1 = *rcx_1;\n                    rbp_1 = rcx_1;\n                    rcx_1 = (rcx_1 + 1);\n                    if (rbx_1 == 0x2e)\n                    {\n                        goto label_40b290;\n                    }\n                    goto label_40b191;\n                }\n                if (rdx_5 == 5)\n                {\n                    rbx_1 = *rcx_1;\n                    rbp_1 = rcx_1;\n                    rcx_1 = (rcx_1 + 1);\n                label_40b188:\n                    if (rbx_1 != 0x2e)\n                    {\n                        goto label_40b191;\n                    }\n                label_40b290:\n                    bool cond:0_1 = *(rbp_1 + 1) != 0x2a;\n                    r12_1[6] = rbp_1;\n                    if (cond:0_1)\n                    {\n                        void* rax_35;\n                        if ((*(rbp_1 + 1) - 0x30) > 9)\n                        {\n                            rbp_1 = rcx_1;\n                            rax_35 = 1;\n                        }\n                        else\n                        {\n                            do\n                            {\n                                rcx_1 = (rcx_1 + 1);\n                            } while ((*rcx_1 - 0x30) <= 9);\n                            rax_35 = (rcx_1 - rbp_1);\n                            rbp_1 = rcx_1;\n                        }\n                        r12_1[7] = rcx_1;\n                        rbx_1 = *rcx_1;\n                        if (var_70 >= rax_35)\n                        {\n                            rax_35 = var_70;\n                        }\n                        var_70 = rax_35;\n                        goto label_40b191;\n                    }\n                    void* rax_17 = 2;\n                    char* rcx_4 = (rbp_1 + 2);\n                    r12_1[7] = rcx_4;\n                    if (var_70 >= 2)\n                    {\n                        rax_17 = var_70;\n                    }\n                    var_70 = rax_17;\n                    int32_t rax_18 = *(rbp_1 + 2);\n                    void* rbx_4;\n                    if ((rax_18 - 0x30) <= 9)\n                    {\n                        char* rdx_31 = rcx_4;\n                        char rsi_23;\n                        do\n                        {\n                            rdx_31 = &rdx_31[1];\n                            rsi_23 = *rdx_31;\n                        } while ((rsi_23 - 0x30) <= 9);\n                        if (rsi_23 != 0x24)\n                        {\n                            goto label_40b2cf;\n                        }\n                        void* rsi_24 = nullptr;\n                        void* rdx_34;\n                        int64_t rbp_3;\n                        char* rdi_18;\n                        char rbx_7;\n                        do\n                        {\n                            void* const rdx_32 = ffffffffffffffff;\n                            int64_t rax_67 = (rax_18 - 0x30);\n                            if (rsi_24 <= 0x1999999999999999)\n                            {\n                                void* rdx_33 = (rsi_24 * 5);\n                                rdx_32 = (rdx_33 + rdx_33);\n                            }\n                            rdi_18 = rcx_4;\n                            while (true)\n                            {\n                                rdx_34 = (rdx_32 + rax_67);\n                                rbp_3 = (rdx_32 + rax_67) < rdx_32;\n                                rcx_4 = &rcx_4[1];\n                                rax_18 = *rcx_4;\n                                rsi_24 = rdx_34;\n                                rbx_7 = (rax_18 - 0x30);\n                                if (rbp_3 == 0)\n                                {\n                                    break;\n                                }\n                                if (rbx_7 > 9)\n                                {\n                                    break;\n                                }\n                                rdx_32 = ffffffffffffffff;\n                                rdi_18 = rcx_4;\n                                rax_67 = (rax_18 - 0x30);\n                            }\n                            if (rbp_3 != 0)\n                            {\n                                break;\n                            }\n                        } while (rbx_7 <= 9);\n                        if (rbp_3 != 0)\n                        {\n                            goto label_40b798;\n                        }\n                        rbx_4 = (rdx_34 - 1);\n                        if (rbx_4 > -3)\n                        {\n                            goto label_40b798;\n                        }\n                        r12_1[8] = rbx_4;\n                        rcx_4 = &rdi_18[2];\n                        goto label_40b2de;\n                    }\n                label_40b2cf:\n                    rbx_4 = r12_1[8];\n                    if (rbx_4 != -1)\n                    {\n                        goto label_40b2de;\n                    }\n                    void* rax_65 = (var_68 + 1);\n                    r12_1[8] = var_68;\n                    if (var_68 == -1)\n                    {\n                        goto label_40b798;\n                    }\n                    rbx_4 = var_68;\n                    var_68 = rax_65;\n                label_40b2de:\n                    r13_1 = arg3[1];\n                    void* var_58;\n                    int64_t rdx_7;\n                    if (r9 <= rbx_4)\n                    {\n                        void* r9_3 = (r9 + r9);\n                        void* rax_61 = (rbx_4 + 1);\n                        if (r9_3 <= rbx_4)\n                        {\n                            r9_3 = rax_61;\n                        }\n                        if (r9_3 > 0x7ffffffffffffff)\n                        {\n                            goto label_40b96d;\n                        }\n                        int64_t rsi_18 = (r9_3 << 5);\n                        var_58 = rcx_4;\n                        if (rax == r13_1)\n                        {\n                            void* rax_69 = malloc(rsi_18);\n                            rcx_4 = var_58;\n                            r9 = r9_3;\n                            if (rax_69 == 0)\n                            {\n                                goto label_40b989;\n                            }\n                            rdx_7 = *arg3;\n                            rsi_7 = rax;\n                            r13_1 = rax_69;\n                        label_40bc56:\n                            memcpy(r13_1, rsi_7, (rdx_7 << 5));\n                            rdx_7 = *arg3;\n                        label_40ba3c:\n                            arg3[1] = r13_1;\n                            goto label_40b2ee;\n                        }\n                        void* rax_62 = realloc(r13_1, rsi_18);\n                        rsi_7 = arg3[1];\n                        rcx_4 = var_58;\n                        r13_1 = rax_62;\n                        r9 = r9_3;\n                        if (rax_62 != 0)\n                        {\n                            rdx_7 = *arg3;\n                            if (rax == rsi_7)\n                            {\n                                goto label_40bc56;\n                            }\n                            goto label_40ba3c;\n                        }\n                        goto label_40b970;\n                    }\n                    rdx_7 = *arg3;\n                label_40b2ee:\n                    if (rdx_7 <= rbx_4)\n                    {\n                        do\n                        {\n                            rdx_7 = (rdx_7 + 1);\n                            *((r13_1 + (rdx_7 << 5)) - 0x20) = 0;\n                        } while (rdx_7 <= rbx_4);\n                        *arg3 = rdx_7;\n                        goto label_40b31b;\n                    }\n                label_40b31b:\n                    void* rax_23 = ((rbx_4 << 5) + r13_1);\n                    int32_t rdx_8 = *rax_23;\n                    if (rdx_8 == 0)\n                    {\n                        *rax_23 = 5;\n                        rbp_1 = rcx_4;\n                        rbx_1 = *rcx_4;\n                    label_40b191:\n                        int32_t rax_11 = 0;\n                        while (true)\n                        {\n                            rbp_1 = (rbp_1 + 1);\n                            if (rbx_1 == 0x68)\n                            {\n                                rax_11 = (rax_11 | (1 << (rax_11 & 1)));\n                            }\n                            else if (rbx_1 == 0x4c)\n                            {\n                                rax_11 = (rax_11 | 4);\n                            }\n                            else\n                            {\n                                if ((rbx_1 != 0x6c && (rbx_1 != 0x6a && ((rbx_1 & 0xdf) != 0x5a && rbx_1 != 0x74))))\n                                {\n                                    break;\n                                }\n                                rax_11 = (rax_11 + 8);\n                            }\n                            rbx_1 = *rbp_1;\n                        }\n                        char rdx_9 = (rbx_1 - 0x25);\n                        if (rdx_9 > 0x53)\n                        {\n                            goto label_40b798;\n                        }\n                        int32_t rcx_6;\n                        switch (rdx_9)\n                        {\n                            case 0:\n                            {\n                                goto label_40b3c1;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 7:\n                            case 8:\n                            case 9:\n                            case 0xa:\n                            case 0xb:\n                            case 0xc:\n                            case 0xd:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1d:\n                            case 0x1f:\n                            case 0x23:\n                            case 0x24:\n                            case 0x25:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x3b:\n                            case 0x3d:\n                            case 0x46:\n                            case 0x48:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x51:\n                            case 0x52:\n                            {\n                                goto label_40b798;\n                            }\n                            case 0x1c:\n                            case 0x20:\n                            case 0x21:\n                            case 0x22:\n                            case 0x3c:\n                            case 0x40:\n                            case 0x41:\n                            case 0x42:\n                            {\n                                rcx_6 = 0xc;\n                                if (rax_11 <= 0xf)\n                                {\n                                    int32_t rcx_12;\n                                    rcx_12 = (rax_11 & 4) != 0;\n                                    rcx_6 = (rcx_12 + 0xb);\n                                }\n                                goto label_40b369;\n                            }\n                            case 0x1e:\n                            {\n                                rcx_6 = 0xe;\n                                rbx_1 = 0x63;\n                                goto label_40b369;\n                            }\n                            case 0x2e:\n                            {\n                                rcx_6 = 0x10;\n                                rbx_1 = 0x73;\n                                goto label_40b369;\n                            }\n                            case 0x33:\n                            case 0x4a:\n                            case 0x50:\n                            case 0x53:\n                            {\n                                rcx_6 = 0xa;\n                                if ((rax_11 <= 0xf && (rax_11 & 4) == 0))\n                                {\n                                    rcx_6 = 8;\n                                    if (rax_11 <= 7)\n                                    {\n                                        rcx_6 = 2;\n                                        if ((rax_11 & 2) == 0)\n                                        {\n                                            rcx_6 = (((2 - 2) & 2) + 4);\n                                        }\n                                    }\n                                }\n                                goto label_40b369;\n                            }\n                            case 0x3e:\n                            {\n                                int32_t rcx_8;\n                                rcx_8 = rax_11 > 7;\n                                rcx_6 = (rcx_8 + 0xd);\n                                goto label_40b369;\n                            }\n                            case 0x3f:\n                            case 0x44:\n                            {\n                                rcx_6 = 9;\n                                if ((rax_11 <= 0xf && (rax_11 & 4) == 0))\n                                {\n                                    rcx_6 = 7;\n                                    if (rax_11 <= 7)\n                                    {\n                                        rcx_6 = 1;\n                                        if ((rax_11 & 2) == 0)\n                                        {\n                                            rcx_6 = (((1 - 1) & 2) + 3);\n                                        }\n                                    }\n                                }\n                                goto label_40b369;\n                            }\n                            case 0x49:\n                            {\n                                rcx_6 = 0x16;\n                                if ((rax_11 <= 0xf && (rax_11 & 4) == 0))\n                                {\n                                    rcx_6 = 0x15;\n                                    if (rax_11 <= 7)\n                                    {\n                                        rcx_6 = 0x12;\n                                        if ((rax_11 & 2) == 0)\n                                        {\n                                            int32_t rcx_9;\n                                            rcx_9 = (rax_11 & 1) == 0;\n                                            rcx_6 = (rcx_9 + 0x13);\n                                        }\n                                    }\n                                }\n                                goto label_40b369;\n                            }\n                            case 0x4b:\n                            {\n                                rcx_6 = 0x11;\n                                goto label_40b369;\n                            }\n                            case 0x4e:\n                            {\n                                int32_t rcx_5;\n                                rcx_5 = rax_11 > 7;\n                                rcx_6 = (rcx_5 + 0xf);\n                            label_40b369:\n                                if (r14_1 == -1)\n                                {\n                                    void* rax_51 = (var_68 + 1);\n                                    r12_1[0xa] = var_68;\n                                    if (var_68 == -1)\n                                    {\n                                        goto label_40b798;\n                                    }\n                                    r14_1 = var_68;\n                                    var_68 = rax_51;\n                                    goto label_40b378;\n                                }\n                                r12_1[0xa] = r14_1;\n                            label_40b378:\n                                r13_1 = arg3[1];\n                                if (r9 > r14_1)\n                                {\n                                    goto label_40b385;\n                                }\n                                void* r9_2 = (r9 + r9);\n                                void* rax_48 = (r14_1 + 1);\n                                if (r9_2 <= r14_1)\n                                {\n                                    r9_2 = rax_48;\n                                }\n                                if (r9_2 > 0x7ffffffffffffff)\n                                {\n                                    goto label_40b96d;\n                                }\n                                uint64_t rsi_13 = (r9_2 << 5);\n                                var_58 = rcx_6;\n                                void* rax_58;\n                                if (rax == r13_1)\n                                {\n                                    rax_58 = malloc(rsi_13);\n                                    rcx_6 = var_58;\n                                    r9 = r9_2;\n                                    if (rax_58 == 0)\n                                    {\n                                        goto label_40b989;\n                                    }\n                                    goto label_40b929;\n                                }\n                                void* rax_49 = realloc(r13_1, rsi_13);\n                                rcx_6 = var_58;\n                                r13_1 = rax_49;\n                                r9 = r9_2;\n                                if (rax_49 == 0)\n                                {\n                                    goto label_40bcc3;\n                                }\n                                if (rax != arg3[1])\n                                {\n                                    goto label_40b86b;\n                                }\n                                rax_58 = r13_1;\n                                r13_1 = rax;\n                            label_40b929:\n                                void* rsi_16 = r13_1;\n                                r13_1 = rax_58;\n                                var_58 = rcx_6;\n                                memcpy(rax_58, rsi_16, (*arg3 << 5));\n                                rcx_6 = var_58;\n                            label_40b86b:\n                                arg3[1] = r13_1;\n                            label_40b385:\n                                int64_t rax_24 = *arg3;\n                                if (rax_24 <= r14_1)\n                                {\n                                    do\n                                    {\n                                        rax_24 = (rax_24 + 1);\n                                        *((r13_1 + (rax_24 << 5)) - 0x20) = 0;\n                                    } while (rax_24 <= r14_1);\n                                    *arg3 = rax_24;\n                                }\n                                void* rax_25 = (r13_1 + (r14_1 << 5));\n                                int32_t rdx_13 = *rax_25;\n                                if (rdx_13 == 0)\n                                {\n                                    *rax_25 = rcx_6;\n                                label_40b3c1:\n                                    r12_1[9] = rbx_1;\n                                    int64_t rax_26 = *r8;\n                                    r12_1[1] = rbp_1;\n                                    r13 = (rax_26 + 1);\n                                    *r8 = r13;\n                                    if (r11 > r13)\n                                    {\n                                        rcx = r8[1];\n                                    label_40b048:\n                                        arg1 = rbp_1;\n                                        continue;\n                                    }\n                                    else\n                                    {\n                                        if (r11 >= 0)\n                                        {\n                                            int64_t rbx_5 = (r11 + r11);\n                                            if (rbx_5 > 0x2e8ba2e8ba2e8ba)\n                                            {\n                                                goto label_40bcc3;\n                                            }\n                                            int64_t r12_2 = r8[1];\n                                            int64_t rsi_3 = (r11 * 0xb0);\n                                            if (var_60 == r12_2)\n                                            {\n                                                void* rax_38 = malloc(rsi_3);\n                                                rcx = rax_38;\n                                                if (rax_38 != 0)\n                                                {\n                                                label_40b5b8:\n                                                    rcx = memcpy(rcx, r12_2, (r13 * 0x58));\n                                                    r13 = *r8;\n                                                label_40b45f:\n                                                    r8[1] = rcx;\n                                                    r11 = rbx_5;\n                                                    goto label_40b048;\n                                                }\n                                                rsi_7 = arg3[1];\n                                                if (rax == rsi_7)\n                                                {\n                                                    break;\n                                                }\n                                                goto label_40b97f;\n                                            }\n                                            void* rax_28 = realloc(r12_2, rsi_3);\n                                            rcx = rax_28;\n                                            if (rax_28 == 0)\n                                            {\n                                                goto label_40bcc3;\n                                            }\n                                            r12_2 = r8[1];\n                                            r13 = *r8;\n                                            if (var_60 == r12_2)\n                                            {\n                                                goto label_40b5b8;\n                                            }\n                                            goto label_40b45f;\n                                        }\n                                    label_40bcc3:\n                                        rsi_7 = arg3[1];\n                                    }\n                                    goto label_40b970;\n                                }\n                                if (rdx_13 == rcx_6)\n                                {\n                                    goto label_40b3c1;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                    else if (rdx_8 == 5)\n                    {\n                        rbx_1 = *rcx_4;\n                        rbp_1 = rcx_4;\n                        goto label_40b191;\n                    }\n                }\n            }\n            if (rax == r13_1)\n            {\n                goto label_40b7b5;\n            }\n            free(r13_1);\n        label_40b7b5:\n            int64_t rdi_7 = r8[1];\n            if (var_60 != rdi_7)\n            {\n                free(rdi_7);\n            }\n            *__errno_location() = 0x16;\n            rax_6 = 0xffffffff;\n        }\n        return rax_6;\n    }\n    *__errno_location() = 0xc;\n    return 0xffffffff;\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x40bce0",
            "funcEndAddr": "0x40bd3d",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x40bd40",
            "funcEndAddr": "0x40bd41",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_40bd50",
            "funcStartAddr": "0x40bd50",
            "funcEndAddr": "0x40bd68",
            "decompiledFuncCode": "int64_t sub_40bd50(void (* arg1)(void*))\n{\n    int64_t rdx = data_613228;\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, rdx);\n}\n\n"
        },
        {
            "funcName": "sub_40bd68",
            "funcStartAddr": "0x40bd68",
            "funcEndAddr": "0x40bd88",
            "decompiledFuncCode": "int64_t sub_40bd68(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_612e30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}