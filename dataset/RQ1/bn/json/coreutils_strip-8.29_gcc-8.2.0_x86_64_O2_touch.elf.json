{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_touch.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 186,
    "funcInfo": [
        {
            "funcName": "sub_401910",
            "funcStartAddr": "0x401910",
            "funcEndAddr": "0x40191c",
            "decompiledFuncCode": "int64_t sub_401910()\n{\n    int64_t var_8 = data_618008;\n    /* jump -> data_618010 */\n}\n\n"
        },
        {
            "funcName": "sub_401926",
            "funcStartAddr": "0x401926",
            "funcEndAddr": "0x401930",
            "decompiledFuncCode": "int64_t sub_401926()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401946",
            "funcStartAddr": "0x401946",
            "funcEndAddr": "0x401950",
            "decompiledFuncCode": "int64_t sub_401946()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401956",
            "funcStartAddr": "0x401956",
            "funcEndAddr": "0x401960",
            "decompiledFuncCode": "int64_t sub_401956()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401966",
            "funcStartAddr": "0x401966",
            "funcEndAddr": "0x401970",
            "decompiledFuncCode": "int64_t sub_401966()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401986",
            "funcStartAddr": "0x401986",
            "funcEndAddr": "0x401990",
            "decompiledFuncCode": "int64_t sub_401986()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401996",
            "funcStartAddr": "0x401996",
            "funcEndAddr": "0x4019a0",
            "decompiledFuncCode": "int64_t sub_401996()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_4019a6",
            "funcStartAddr": "0x4019a6",
            "funcEndAddr": "0x4019b0",
            "decompiledFuncCode": "int64_t sub_4019a6()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_4019c6",
            "funcStartAddr": "0x4019c6",
            "funcEndAddr": "0x4019d0",
            "decompiledFuncCode": "int64_t sub_4019c6()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_4019d6",
            "funcStartAddr": "0x4019d6",
            "funcEndAddr": "0x4019e0",
            "decompiledFuncCode": "int64_t sub_4019d6()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_4019e6",
            "funcStartAddr": "0x4019e6",
            "funcEndAddr": "0x4019f0",
            "decompiledFuncCode": "int64_t sub_4019e6()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_4019f6",
            "funcStartAddr": "0x4019f6",
            "funcEndAddr": "0x401a00",
            "decompiledFuncCode": "int64_t sub_4019f6()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401a06",
            "funcStartAddr": "0x401a06",
            "funcEndAddr": "0x401a10",
            "decompiledFuncCode": "int64_t sub_401a06()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401a16",
            "funcStartAddr": "0x401a16",
            "funcEndAddr": "0x401a20",
            "decompiledFuncCode": "int64_t sub_401a16()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401a26",
            "funcStartAddr": "0x401a26",
            "funcEndAddr": "0x401a30",
            "decompiledFuncCode": "int64_t sub_401a26()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401a36",
            "funcStartAddr": "0x401a36",
            "funcEndAddr": "0x401a40",
            "decompiledFuncCode": "int64_t sub_401a36()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401a46",
            "funcStartAddr": "0x401a46",
            "funcEndAddr": "0x401a50",
            "decompiledFuncCode": "int64_t sub_401a46()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401a56",
            "funcStartAddr": "0x401a56",
            "funcEndAddr": "0x401a60",
            "decompiledFuncCode": "int64_t sub_401a56()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401a66",
            "funcStartAddr": "0x401a66",
            "funcEndAddr": "0x401a70",
            "decompiledFuncCode": "int64_t sub_401a66()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401a76",
            "funcStartAddr": "0x401a76",
            "funcEndAddr": "0x401a80",
            "decompiledFuncCode": "int64_t sub_401a76()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401a86",
            "funcStartAddr": "0x401a86",
            "funcEndAddr": "0x401a90",
            "decompiledFuncCode": "int64_t sub_401a86()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401a96",
            "funcStartAddr": "0x401a96",
            "funcEndAddr": "0x401aa0",
            "decompiledFuncCode": "int64_t sub_401a96()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401aa6",
            "funcStartAddr": "0x401aa6",
            "funcEndAddr": "0x401ab0",
            "decompiledFuncCode": "int64_t sub_401aa6()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401ab6",
            "funcStartAddr": "0x401ab6",
            "funcEndAddr": "0x401ac0",
            "decompiledFuncCode": "int64_t sub_401ab6()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401ac6",
            "funcStartAddr": "0x401ac6",
            "funcEndAddr": "0x401ad0",
            "decompiledFuncCode": "int64_t sub_401ac6()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401ad6",
            "funcStartAddr": "0x401ad6",
            "funcEndAddr": "0x401ae0",
            "decompiledFuncCode": "int64_t sub_401ad6()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401ae6",
            "funcStartAddr": "0x401ae6",
            "funcEndAddr": "0x401af0",
            "decompiledFuncCode": "int64_t sub_401ae6()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401af6",
            "funcStartAddr": "0x401af6",
            "funcEndAddr": "0x401b00",
            "decompiledFuncCode": "int64_t sub_401af6()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401b06",
            "funcStartAddr": "0x401b06",
            "funcEndAddr": "0x401b10",
            "decompiledFuncCode": "int64_t sub_401b06()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401b16",
            "funcStartAddr": "0x401b16",
            "funcEndAddr": "0x401b20",
            "decompiledFuncCode": "int64_t sub_401b16()\n{\n    int64_t var_8 = 0x1f;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401b26",
            "funcStartAddr": "0x401b26",
            "funcEndAddr": "0x401b30",
            "decompiledFuncCode": "int64_t sub_401b26()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401b36",
            "funcStartAddr": "0x401b36",
            "funcEndAddr": "0x401b40",
            "decompiledFuncCode": "int64_t sub_401b36()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401b46",
            "funcStartAddr": "0x401b46",
            "funcEndAddr": "0x401b50",
            "decompiledFuncCode": "int64_t sub_401b46()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401b56",
            "funcStartAddr": "0x401b56",
            "funcEndAddr": "0x401b60",
            "decompiledFuncCode": "int64_t sub_401b56()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401b66",
            "funcStartAddr": "0x401b66",
            "funcEndAddr": "0x401b70",
            "decompiledFuncCode": "int64_t sub_401b66()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401b76",
            "funcStartAddr": "0x401b76",
            "funcEndAddr": "0x401b80",
            "decompiledFuncCode": "int64_t sub_401b76()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401b86",
            "funcStartAddr": "0x401b86",
            "funcEndAddr": "0x401b90",
            "decompiledFuncCode": "int64_t sub_401b86()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401b96",
            "funcStartAddr": "0x401b96",
            "funcEndAddr": "0x401ba0",
            "decompiledFuncCode": "int64_t sub_401b96()\n{\n    int64_t var_8 = 0x27;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401ba6",
            "funcStartAddr": "0x401ba6",
            "funcEndAddr": "0x401bb0",
            "decompiledFuncCode": "int64_t sub_401ba6()\n{\n    int64_t var_8 = 0x28;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401bb6",
            "funcStartAddr": "0x401bb6",
            "funcEndAddr": "0x401bc0",
            "decompiledFuncCode": "int64_t sub_401bb6()\n{\n    int64_t var_8 = 0x29;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401bc6",
            "funcStartAddr": "0x401bc6",
            "funcEndAddr": "0x401bd0",
            "decompiledFuncCode": "int64_t sub_401bc6()\n{\n    int64_t var_8 = 0x2a;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401bd6",
            "funcStartAddr": "0x401bd6",
            "funcEndAddr": "0x401be0",
            "decompiledFuncCode": "int64_t sub_401bd6()\n{\n    int64_t var_8 = 0x2b;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401be6",
            "funcStartAddr": "0x401be6",
            "funcEndAddr": "0x401bf0",
            "decompiledFuncCode": "int64_t sub_401be6()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401c06",
            "funcStartAddr": "0x401c06",
            "funcEndAddr": "0x401c10",
            "decompiledFuncCode": "int64_t sub_401c06()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401c16",
            "funcStartAddr": "0x401c16",
            "funcEndAddr": "0x401c20",
            "decompiledFuncCode": "int64_t sub_401c16()\n{\n    int64_t var_8 = 0x2f;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401c26",
            "funcStartAddr": "0x401c26",
            "funcEndAddr": "0x401c30",
            "decompiledFuncCode": "int64_t sub_401c26()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401c46",
            "funcStartAddr": "0x401c46",
            "funcEndAddr": "0x401c50",
            "decompiledFuncCode": "int64_t sub_401c46()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401c56",
            "funcStartAddr": "0x401c56",
            "funcEndAddr": "0x401c60",
            "decompiledFuncCode": "int64_t sub_401c56()\n{\n    int64_t var_8 = 0x33;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401c66",
            "funcStartAddr": "0x401c66",
            "funcEndAddr": "0x401c70",
            "decompiledFuncCode": "int64_t sub_401c66()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401c86",
            "funcStartAddr": "0x401c86",
            "funcEndAddr": "0x401c90",
            "decompiledFuncCode": "int64_t sub_401c86()\n{\n    int64_t var_8 = 0x36;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401c96",
            "funcStartAddr": "0x401c96",
            "funcEndAddr": "0x401ca0",
            "decompiledFuncCode": "int64_t sub_401c96()\n{\n    int64_t var_8 = 0x37;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401ca6",
            "funcStartAddr": "0x401ca6",
            "funcEndAddr": "0x401cb0",
            "decompiledFuncCode": "int64_t sub_401ca6()\n{\n    int64_t var_8 = 0x38;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401cc6",
            "funcStartAddr": "0x401cc6",
            "funcEndAddr": "0x401cd0",
            "decompiledFuncCode": "int64_t sub_401cc6()\n{\n    int64_t var_8 = 0x3a;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401cd6",
            "funcStartAddr": "0x401cd6",
            "funcEndAddr": "0x401ce0",
            "decompiledFuncCode": "int64_t sub_401cd6()\n{\n    int64_t var_8 = 0x3b;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401ce6",
            "funcStartAddr": "0x401ce6",
            "funcEndAddr": "0x401cf0",
            "decompiledFuncCode": "int64_t sub_401ce6()\n{\n    int64_t var_8 = 0x3c;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401d06",
            "funcStartAddr": "0x401d06",
            "funcEndAddr": "0x401d10",
            "decompiledFuncCode": "int64_t sub_401d06()\n{\n    int64_t var_8 = 0x3e;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401d16",
            "funcStartAddr": "0x401d16",
            "funcEndAddr": "0x401d20",
            "decompiledFuncCode": "int64_t sub_401d16()\n{\n    int64_t var_8 = 0x3f;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401d26",
            "funcStartAddr": "0x401d26",
            "funcEndAddr": "0x401d30",
            "decompiledFuncCode": "int64_t sub_401d26()\n{\n    int64_t var_8 = 0x40;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401d46",
            "funcStartAddr": "0x401d46",
            "funcEndAddr": "0x401d50",
            "decompiledFuncCode": "int64_t sub_401d46()\n{\n    int64_t var_8 = 0x42;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401d56",
            "funcStartAddr": "0x401d56",
            "funcEndAddr": "0x401d60",
            "decompiledFuncCode": "int64_t sub_401d56()\n{\n    int64_t var_8 = 0x43;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401d66",
            "funcStartAddr": "0x401d66",
            "funcEndAddr": "0x401d70",
            "decompiledFuncCode": "int64_t sub_401d66()\n{\n    int64_t var_8 = 0x44;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401d86",
            "funcStartAddr": "0x401d86",
            "funcEndAddr": "0x401d90",
            "decompiledFuncCode": "int64_t sub_401d86()\n{\n    int64_t var_8 = 0x46;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401d96",
            "funcStartAddr": "0x401d96",
            "funcEndAddr": "0x401da0",
            "decompiledFuncCode": "int64_t sub_401d96()\n{\n    int64_t var_8 = 0x47;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "sub_401da6",
            "funcStartAddr": "0x401da6",
            "funcEndAddr": "0x401db0",
            "decompiledFuncCode": "int64_t sub_401da6()\n{\n    int64_t var_8 = 0x48;\n    /* tailcall */\n    return sub_401910();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x401df0",
            "funcEndAddr": "0x4026c0",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    int64_t r14 = 0;\n    char r13 = 0;\n    char** rbp = argv;\n    char* rdi = *argv;\n    sub_408430(rdi);\n    setlocale(6, &data_414b79[0x1b]);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    sub_410ee0(sub_402f30);\n    data_6183a2 = 0;\n    data_6183a4 = 0;\n    data_6183a3 = 0;\n    while (true)\n    {\n        int32_t rax_1;\n        uint32_t r10_1;\n        rax_1 = getopt_long(argc, rbp, \"acd:fhmr:t:\", &data_411920, nullptr);\n        char* rbx_1 = rax_1;\n        if (rax_1 == 0xffffffff)\n        {\n            if (data_6183a4 == 0)\n            {\n                data_6183a4 = 3;\n            }\n            char rax_7 = data_6183a2;\n            char const* const rsi_17;\n            if ((r13 != 0 && (r14 != 0 || (r14 == 0 && rax_7 != 0))))\n            {\n                rsi_17 = \"cannot specify times from more t\u2026\";\n            }\n            if (r13 == 0)\n            {\n                int64_t var_c8;\n                if (rax_7 != 0)\n                {\n                    struct stat* rdx_9 = &var_c8;\n                    char* rsi_13 = data_618360;\n                    int32_t rax_41;\n                    if (data_6183a1 != 0)\n                    {\n                        rax_41 = __lxstat(1, rsi_13, rdx_9);\n                        rax_41 = rax_41 != 0;\n                    }\n                    else\n                    {\n                        rax_41 = __xstat(1, rsi_13, rdx_9);\n                        rax_41 = rax_41 != 0;\n                    }\n                    if (rax_41 != 0)\n                    {\n                        rbp = sub_409e00(4, data_618360);\n                        rbx_1 = dcgettext(nullptr, \"failed to get attributes of %s\", 5);\n                        error(1, *__errno_location(), rbx_1, rbp);\n                    label_4025c6:\n                        struct tm* rax_57;\n                        rax_57 = localtime(&data_618380);\n                        if (rax_57 != 0)\n                        {\n                            error(0, 0, dcgettext(nullptr, \"warning: 'touch %s' is obsolete;\u2026\", 5), rbp[data_61831c], (rax_57->tm_year + 0x76c), (rax_57->tm_mon + 1), rax_57->tm_mday, rax_57->tm_hour, rax_57->tm_min, rax_57->tm_sec);\n                        }\n                        goto label_40254b;\n                    }\n                    int64_t var_80;\n                    *data_618380 = var_80;\n                    int64_t var_78;\n                    *(data_618380 + 8) = var_78;\n                    int64_t var_70;\n                    *data_618390 = var_70;\n                    int64_t var_68;\n                    *(data_618390 + 8) = var_68;\n                    if (r14 != 0)\n                    {\n                        char rax_46 = data_6183a4;\n                        if ((rax_46 & 1) != 0)\n                        {\n                            sub_4027a0(&data_618380, r14, &data_618380);\n                            rax_46 = data_6183a4;\n                        }\n                        if ((rax_46 & 2) != 0)\n                        {\n                            sub_4027a0(&data_618390, r14, &data_618390);\n                        }\n                    }\n                }\n                else\n                {\n                    int64_t var_e0;\n                    int64_t var_d8;\n                    int64_t rax_34;\n                    bool cond:4_1;\n                    if (r14 != 0)\n                    {\n                        int64_t var_e8;\n                        sub_4030d0(&var_e8);\n                        sub_4027a0(&data_618380, r14, &var_e8);\n                        cond:4_1 = data_6183a4 != 3;\n                        data_618390 = data_618380;\n                        if ((!cond:4_1))\n                        {\n                            rax_34 = var_e8;\n                            if ((*data_618380 == rax_34 && *(data_618380 + 8) == var_e0))\n                            {\n                                var_d8 = (rax_34 ^ 1);\n                                sub_4027a0(&var_c8, r14, &var_d8);\n                            }\n                        }\n                    }\n                    int64_t var_c0;\n                    if ((r14 == 0 || (((((r14 != 0 && (!cond:4_1)) && *data_618380 == rax_34) && *(data_618380 + 8) == var_e0) && var_c8 == var_d8) && var_c0 == var_e0)))\n                    {\n                        int32_t rax_47;\n                        char rax_49;\n                        if ((argc - data_61831c) > 1)\n                        {\n                            rax_47 = sub_4083b0();\n                            if (rax_47 <= 0x30daf)\n                            {\n                                rax_49 = sub_408100(&data_618380, rbp[data_61831c], 9);\n                                if (rax_49 != 0)\n                                {\n                                    *(data_618380 + 8) = 0;\n                                    data_618390 = data_618380;\n                                    char* rax_50;\n                                    rax_50 = getenv(\"POSIXLY_CORRECT\");\n                                    if (rax_50 == 0)\n                                    {\n                                        goto label_4025c6;\n                                    }\n                                label_40254b:\n                                    data_61831c = (data_61831c + 1);\n                                }\n                            }\n                        }\n                        if ((((argc - data_61831c) <= 1 || ((argc - data_61831c) > 1 && rax_47 > 0x30daf)) || (((argc - data_61831c) > 1 && rax_47 <= 0x30daf) && rax_49 == 0)))\n                        {\n                            if (data_6183a4 == 3)\n                            {\n                                data_6183a0 = 1;\n                            }\n                            else\n                            {\n                                *(data_618380 + 8) = 0x3fffffff;\n                                *(data_618390 + 8) = 0x3fffffff;\n                            }\n                        }\n                    }\n                }\n            }\n            if ((((r13 != 0 && r14 == 0) && rax_7 == 0) || r13 == 0))\n            {\n                int32_t rax_14 = data_61831c;\n                bool c_1 = rax_14 < argc;\n                bool z_1 = rax_14 == argc;\n                bool s_1 = (rax_14 - argc) < 0;\n                bool o_1 = (rax_14 + (-argc));\n                if ((!z_1))\n                {\n                    int32_t r13_1 = 1;\n                    if (s_1 != o_1)\n                    {\n                        do\n                        {\n                            int64_t rcx_3 = 2;\n                            char const* const rdi_3 = \"-\";\n                            int32_t r11_1 = 1;\n                            char* r15_2 = rbp[rax_14];\n                            char* rsi_5 = r15_2;\n                            while (rcx_3 != 0)\n                            {\n                                char temp1_1 = *rsi_5;\n                                char const temp2_1 = *rdi_3;\n                                c_1 = temp1_1 < temp2_1;\n                                z_1 = temp1_1 == temp2_1;\n                                rsi_5 = &rsi_5[1];\n                                rdi_3 = &rdi_3[1];\n                                rcx_3 = (rcx_3 - 1);\n                                if ((!z_1))\n                                {\n                                    break;\n                                }\n                            }\n                            int32_t r14_2 = (((!z_1) && (!c_1)) - 0);\n                            if (r14_2 != 0)\n                            {\n                                if (data_6183a3 != 0)\n                                {\n                                label_402135:\n                                    r11_1 = rbx_1;\n                                    r14_2 = 0;\n                                }\n                                else\n                                {\n                                    if (data_6183a1 != 0)\n                                    {\n                                        goto label_402135;\n                                    }\n                                    int32_t rax_27;\n                                    rax_27 = sub_402fd0(0, r15_2, 0x941, 0x1b6);\n                                    r14_2 = 0;\n                                    r11_1 = rax_27;\n                                    if (rax_27 == 0xffffffff)\n                                    {\n                                        int32_t* rax_28;\n                                        rax_28 = __errno_location();\n                                        r14_2 = *rax_28;\n                                        if ((r14_2 - 0x15) <= 1)\n                                        {\n                                            goto label_402135;\n                                        }\n                                        r11_1 = rax_27;\n                                        if (r14_2 == 1)\n                                        {\n                                            goto label_402135;\n                                        }\n                                    }\n                                }\n                            }\n                            int32_t rax_16 = data_6183a4;\n                            if (rax_16 != 3)\n                            {\n                                if (rax_16 == 2)\n                                {\n                                    *(data_618380 + 8) = 0x3ffffffe;\n                                }\n                                else\n                                {\n                                    if (rax_16 != 1)\n                                    {\n                                        __assert_fail(\"change_times == CH_ATIME\", \"src/touch.c\", 0x99, \"touch\");\n                                        /* no return */\n                                    }\n                                    *(data_618390 + 8) = 0x3ffffffe;\n                                }\n                            }\n                            struct timespec* rcx_4 = &data_618380;\n                            if (data_6183a0 != 0)\n                            {\n                                rcx_4 = nullptr;\n                            }\n                            r10_1 = r11_1 == 0xffffffff;\n                            r10_1 = (r10_1 & data_6183a1);\n                            int32_t rax_19;\n                            int32_t rdx_2;\n                            if (r10_1 != 0)\n                            {\n                                rdx_2 = sub_403040(0xffffffff, 0xffffff9c, r15_2, rcx_4, 0x100);\n                            }\n                            else\n                            {\n                                int64_t var_f8;\n                                char r10_2;\n                                if (r11_1 != 1)\n                                {\n                                    var_f8 = r10_1;\n                                    r10_2 = var_f8;\n                                    rdx_2 = sub_403040(r11_1, 0xffffff9c, r15_2, rcx_4, 0);\n                                }\n                                if (r11_1 == 0)\n                                {\n                                    var_f8 = rdx_2;\n                                    int32_t var_fc_1;\n                                    var_fc_1 = r10_2;\n                                    rax_19 = close(0);\n                                    rdx_2 = var_f8;\n                                    if (rax_19 != 0)\n                                    {\n                                        error(0, *__errno_location(), dcgettext(nullptr, \"failed to close %s\", 5), sub_409e00(4, r15_2));\n                                        r10_1 = var_fc_1;\n                                    }\n                                }\n                            }\n                            if ((((r10_1 != 0 || ((r10_1 == 0 && r11_1 != 1) && r11_1 != 0)) || ((r10_1 == 0 && r11_1 == 0) && rax_19 == 0)) && rdx_2 == 0))\n                            {\n                            label_4021e6:\n                                r10_1 = 1;\n                            }\n                            if ((r10_1 == 0 && r11_1 == 1))\n                            {\n                                if (sub_403040(1, 0xffffff9c, nullptr, rcx_4, 0) == 0)\n                                {\n                                    goto label_4021e6;\n                                }\n                                if (*__errno_location() == 9)\n                                {\n                                    if (data_6183a3 != 0)\n                                    {\n                                        goto label_4021e6;\n                                    }\n                                    if (r14_2 != 0)\n                                    {\n                                        goto label_402231;\n                                    }\n                                    goto label_4020a2;\n                                }\n                            }\n                            if (((((r10_1 != 0 || ((r10_1 == 0 && r11_1 != 1) && r11_1 != 0)) || ((r10_1 == 0 && r11_1 == 0) && rax_19 == 0)) && rdx_2 != 0) || (r10_1 == 0 && r11_1 == 1)))\n                            {\n                                if (r14_2 != 0)\n                                {\n                                label_402231:\n                                    error(0, r14_2, dcgettext(nullptr, \"cannot touch %s\", 5), sub_409e00(4, r15_2));\n                                    r10_1 = 0;\n                                }\n                                else\n                                {\n                                    int32_t* rax_8 = __errno_location();\n                                    if (data_6183a3 != 0)\n                                    {\n                                        if (*rax_8 == 2)\n                                        {\n                                            goto label_4021e6;\n                                        }\n                                        goto label_4020a2;\n                                    }\n                                label_4020a2:\n                                    error(0, *__errno_location(), dcgettext(nullptr, \"setting times of %s\", 5), sub_409e00(4, r15_2));\n                                    r10_1 = 0;\n                                }\n                            }\n                            r13_1 = (r13_1 & r10_1);\n                            rax_14 = (data_61831c + 1);\n                            data_61831c = rax_14;\n                            c_1 = rax_14 < argc;\n                            z_1 = rax_14 == argc;\n                        } while ((rax_14 - argc) < 0 != (rax_14 + (-argc)));\n                    }\n                    return (r13_1 ^ 1);\n                }\n                rsi_17 = \"missing file operand\";\n            }\n            error(0, 0, dcgettext(nullptr, rsi_17, 5));\n            break;\n        }\n        bool cond:0_1 = rbx_1 <= 0x66;\n        if (rbx_1 != 0x66)\n        {\n            if (cond:0_1)\n            {\n                bool cond:2_1 = rbx_1 <= 0x61;\n                if (rbx_1 == 0x61)\n                {\n                    data_6183a4 = (data_6183a4 | 1);\n                }\n                else\n                {\n                    if (cond:2_1)\n                    {\n                        if (rbx_1 == 0xffffff7d)\n                        {\n                            int64_t var_110_1 = 0;\n                            char const* const var_118_1 = \"Randy Smith\";\n                            char const* const var_120_1 = \"David MacKenzie\";\n                            char const* const var_128_1 = \"Jim Kingdon\";\n                            sub_40a4d0(stdout, \"touch\", \"GNU coreutils\", data_618290);\n                            exit(0);\n                            /* no return */\n                        }\n                        if (rbx_1 == 0xffffff7e)\n                        {\n                            sub_4027e0(0);\n                            /* no return */\n                        }\n                        break;\n                    }\n                    if (rbx_1 == 0x63)\n                    {\n                        data_6183a3 = 1;\n                    }\n                    else\n                    {\n                        if (rbx_1 != 0x64)\n                        {\n                            break;\n                        }\n                        r14 = data_618550;\n                    }\n                }\n            }\n            else\n            {\n                bool cond:3_1 = rbx_1 > 0x72;\n                if (rbx_1 == 0x72)\n                {\n                    int64_t rax_6 = data_618550;\n                    data_6183a2 = 1;\n                    data_618360 = rax_6;\n                }\n                else if (cond:3_1)\n                {\n                    if (rbx_1 == 0x74)\n                    {\n                        char rax_3 = sub_408100(&data_618380, data_618550, 6);\n                        r13 = rax_3;\n                        if (rax_3 == 0)\n                        {\n                            void (* rdx_16)();\n                            int64_t rsi_20;\n                            int64_t rdi_8;\n                            rdx_16 = error(1, 0, dcgettext(nullptr, \"invalid date format %s\", 5), sub_40a050(data_618550));\n                            /* tailcall */\n                            return _start(rdi_8, rsi_20, rdx_16);\n                        }\n                        *(data_618380 + 8) = 0;\n                        data_618390 = data_618380;\n                    }\n                    else\n                    {\n                        if (rbx_1 != 0x80)\n                        {\n                            break;\n                        }\n                        data_6183a4 = (data_6183a4 | *((sub_402e50(\"--time\", data_618550, &data_4118e0, 0x4118b0, 4, data_618298) << 2) + 0x4118b0));\n                    }\n                }\n                else if (rbx_1 == 0x68)\n                {\n                    data_6183a1 = 1;\n                }\n                else\n                {\n                    if (rbx_1 != 0x6d)\n                    {\n                        break;\n                    }\n                    data_6183a4 = (data_6183a4 | 2);\n                }\n            }\n        }\n    }\n    sub_4027e0(1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x4026c0",
            "funcEndAddr": "0x4026ea",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4026eb",
            "funcStartAddr": "0x4026eb",
            "funcEndAddr": "0x40270a",
            "decompiledFuncCode": "void sub_4026eb()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_40270a",
            "funcStartAddr": "0x40270a",
            "funcEndAddr": "0x402741",
            "decompiledFuncCode": "int64_t sub_40270a()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_402741",
            "funcStartAddr": "0x402741",
            "funcEndAddr": "0x402798",
            "decompiledFuncCode": "void sub_402741()\n{\n    if (data_618348 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_618350;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_618350 = (rax_1 + 1);\n        *(0x617e40 + ((rax_1 + 1) << 3))();\n    }\n    sub_4026eb();\n    data_618348 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_402798",
            "funcStartAddr": "0x402798",
            "funcEndAddr": "0x40279d",
            "decompiledFuncCode": "int64_t j_sub_40270a()\n{\n    /* tailcall */\n    return sub_40270a();\n}\n\n"
        },
        {
            "funcName": "sub_4027a0",
            "funcStartAddr": "0x4027a0",
            "funcEndAddr": "0x4027e0",
            "decompiledFuncCode": "uint64_t sub_4027a0(struct tm* arg1, char* arg2, int64_t* arg3)\n{\n    uint64_t rax = sub_408000(arg1, arg2, arg3);\n    if (rax == 0)\n    {\n        int32_t rdi_1 = error(1, 0, dcgettext(nullptr, \"invalid date format %s\", 5), sub_40a050(arg2));\n        /* tailcall */\n        return sub_4027e0(rdi_1);\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4027e0",
            "funcStartAddr": "0x4027e0",
            "funcEndAddr": "0x402b7d",
            "decompiledFuncCode": "int64_t sub_4027e0(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_6183b8;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [OPTION]... FILE...\\n\", 5), rbp);\n        fputs_unlocked(dcgettext(nullptr, \"Update the access and modificati\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nMandatory arguments to long op\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -a                     change \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -h, --no-dereference   affect \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -r, --reference=FILE   use thi\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nNote that the -d and -t option\u2026\", 5), stdout);\n        void* const var_88 = &data_410f61;\n        void* const* rax_12 = &var_88;\n        void* const var_78_1 = \"coreutils\";\n        void* const var_70_1 = \"Multi-call invocation\";\n        void* const var_68_1 = \"sha224sum\";\n        void* const var_60_1 = \"sha2 utilities\";\n        void* const var_58_1 = \"sha256sum\";\n        void* const var_50_1 = \"sha2 utilities\";\n        void* const var_48_1 = \"sha384sum\";\n        void* const var_40_1 = \"sha2 utilities\";\n        void* const var_38_1 = \"sha512sum\";\n        void* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_12 = &rax_12[2];\n            void* const rdi_10 = *rax_12;\n            c_1 = false;\n            z_1 = (rdi_10 & rdi_10) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            void* const rsi_10 = \"touch\";\n            int64_t rcx_2 = 6;\n            while (rcx_2 != 0)\n            {\n                char temp0_1 = *rsi_10;\n                char temp1_1 = *rdi_10;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_10 = (rsi_10 + 1);\n                rdi_10 = (rdi_10 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        void* const rbp_1 = rax_12[1];\n        char* rax_23;\n        int32_t rax_24;\n        void* const r12_1;\n        if (rbp_1 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_5;\n            uint64_t r8_2;\n            ssize_t r9_2;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_23 = setlocale(5, nullptr, rdx_5, rcx_5, r8_2, r9_2, var_88, \"test invocation\");\n            if (rax_23 != 0)\n            {\n                rax_24 = strncmp(rax_23, &data_410fe5, 3);\n                if (rax_24 != 0)\n                {\n                    rbp_1 = \"touch\";\n                }\n            }\n            if ((rax_23 == 0 || (rax_23 != 0 && rax_24 == 0)))\n            {\n                rbp_1 = \"touch\";\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"touch\");\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_3;\n            uint64_t r8_1;\n            ssize_t r9_1;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_15 = setlocale(5, nullptr, rdx_3, rcx_3, r8_1, r9_1, var_88, \"test invocation\");\n            if (rax_15 == 0)\n            {\n                goto label_402a70;\n            }\n            if (strncmp(rax_15, &data_410fe5, 3) == 0)\n            {\n                goto label_402a70;\n            }\n        }\n        if ((((rbp_1 == 0 && rax_23 != 0) && rax_24 != 0) || rbp_1 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), \"touch\");\n        label_402a70:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"touch\");\n            if (rbp_1 != \"touch\")\n            {\n                r12_1 = &data_414b79[0x1b];\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_1, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_402b80",
            "funcStartAddr": "0x402b80",
            "funcEndAddr": "0x402b8a",
            "decompiledFuncCode": "int64_t sub_402b80() __noreturn\n{\n    /* tailcall */\n    return sub_4027e0(1);\n}\n\n"
        },
        {
            "funcName": "sub_402b90",
            "funcStartAddr": "0x402b90",
            "funcEndAddr": "0x402ca6",
            "decompiledFuncCode": "int64_t sub_402b90(char* arg1, int64_t* arg2, int64_t arg3, uint64_t arg4)\n{\n    int64_t rbp = arg3;\n    uint64_t rax = strlen(arg1);\n    char* r14 = *arg2;\n    int64_t var_58 = -1;\n    if (r14 != 0)\n    {\n        char var_41_1 = 0;\n        int64_t rbx_1 = 0;\n        while (true)\n        {\n            if (strncmp(r14, arg1, rax) == 0)\n            {\n                if (strlen(r14) == rax)\n                {\n                    var_58 = rbx_1;\n                    break;\n                }\n                if (var_58 == -1)\n                {\n                    var_58 = rbx_1;\n                    rbx_1 = (rbx_1 + 1);\n                    rbp = (rbp + arg4);\n                    r14 = arg2[rbx_1];\n                    if (r14 != 0)\n                    {\n                        continue;\n                    }\n                    goto label_402c6d;\n                }\n                if (arg3 == 0)\n                {\n                    var_41_1 = 1;\n                }\n                else\n                {\n                    char rax_3 = var_41_1;\n                    if (memcmp(((var_58 * arg4) + arg3), rbp, arg4) != 0)\n                    {\n                        rax_3 = 1;\n                    }\n                    var_41_1 = rax_3;\n                }\n            }\n            rbx_1 = (rbx_1 + 1);\n            rbp = (rbp + arg4);\n            r14 = arg2[rbx_1];\n            if (r14 == 0)\n            {\n            label_402c6d:\n                int64_t rax_6 = -2;\n                if (var_41_1 == 0)\n                {\n                    rax_6 = var_58;\n                }\n                var_58 = rax_6;\n                break;\n            }\n        }\n    }\n    return var_58;\n}\n\n"
        },
        {
            "funcName": "sub_402cb0",
            "funcStartAddr": "0x402cb0",
            "funcEndAddr": "0x402d21",
            "decompiledFuncCode": "int64_t sub_402cb0(uint64_t arg1, uint64_t arg2, int64_t arg3)\n{\n    char* rbx;\n    if (arg3 == -1)\n    {\n        rbx = dcgettext(nullptr, \"invalid argument %s for %s\", 5);\n    }\n    else\n    {\n        rbx = dcgettext(nullptr, \"ambiguous argument %s for %s\", 5);\n    }\n    /* tailcall */\n    return error(0, 0, rbx, sub_409d20(0, 8, arg2), sub_40a030(1, arg1));\n}\n\n"
        },
        {
            "funcName": "sub_402d30",
            "funcStartAddr": "0x402d30",
            "funcEndAddr": "0x402e48",
            "decompiledFuncCode": "char* sub_402d30(int64_t* arg1, int64_t arg2, uint64_t arg3)\n{\n    int64_t r14 = 0;\n    int64_t rbp = arg2;\n    int64_t rbx = 0;\n    fputs_unlocked(dcgettext(nullptr, \"Valid arguments are:\", 5), stderr);\n    int64_t r12 = *arg1;\n    if (r12 != 0)\n    {\n        do\n        {\n            if ((rbx != 0 && memcmp(r14, rbp, arg3) == 0))\n            {\n                rbx = (rbx + 1);\n                rbp = (rbp + arg3);\n                __fprintf_chk(stderr, 1, \", %s\", sub_40a050(r12));\n                r12 = arg1[rbx];\n                if (r12 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = (rbx + 1);\n            r14 = rbp;\n            rbp = (rbp + arg3);\n            __fprintf_chk(stderr, 1, \"\\n  - %s\", sub_40a050(r12));\n            r12 = arg1[rbx];\n        } while (r12 != 0);\n    }\n    uint64_t* const rdi_6 = stderr;\n    char* rax_6 = stderr[5];\n    if (rax_6 >= stderr[6])\n    {\n        /* tailcall */\n        return __overflow(rdi_6, 0xa);\n    }\n    stderr[5] = &rax_6[1];\n    *rax_6 = 0xa;\n    return rax_6;\n}\n\n"
        },
        {
            "funcName": "sub_402e50",
            "funcStartAddr": "0x402e50",
            "funcEndAddr": "0x402ec0",
            "decompiledFuncCode": "int64_t sub_402e50(int64_t arg1, char* arg2, int64_t* arg3, int64_t arg4, \n    uint64_t arg5, int64_t arg6)\n{\n    int64_t rax = sub_402b90(arg2, arg3, arg4, arg5);\n    if (rax < 0)\n    {\n        sub_402cb0(arg1, arg2, rax);\n        sub_402d30(arg3, arg4, arg5);\n        arg6();\n        rax = -1;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_402ec0",
            "funcStartAddr": "0x402ec0",
            "funcEndAddr": "0x402f0d",
            "decompiledFuncCode": "int64_t sub_402ec0(int64_t arg1, int64_t* arg2, int64_t arg3, uint64_t arg4)\n{\n    int64_t r14 = *arg2;\n    if (r14 != 0)\n    {\n        void* rbx_1 = &arg2[1];\n        int64_t rbp_1 = arg3;\n        do\n        {\n            if (memcmp(arg1, rbp_1, arg4) == 0)\n            {\n                break;\n            }\n            r14 = *rbx_1;\n            rbp_1 = (rbp_1 + arg4);\n            rbx_1 = (rbx_1 + 8);\n        } while (r14 != 0);\n    }\n    return r14;\n}\n\n"
        },
        {
            "funcName": "sub_402f10",
            "funcStartAddr": "0x402f10",
            "funcEndAddr": "0x402f18",
            "decompiledFuncCode": "int64_t sub_402f10(int64_t arg1)\n{\n    data_6183b0 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_402f20",
            "funcStartAddr": "0x402f20",
            "funcEndAddr": "0x402f28",
            "decompiledFuncCode": "int64_t sub_402f20(char arg1)\n{\n    data_6183a8 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_402f30",
            "funcStartAddr": "0x402f30",
            "funcEndAddr": "0x402fce",
            "decompiledFuncCode": "void sub_402f30(void* arg1)\n{\n    int32_t rax = sub_40c430(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_6183a8 == 0 || (data_6183a8 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_6183b0;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_409ea0(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_6183a8 != 0) && *rax_1 == 0x20)) && sub_40c430(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_6182a0);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_402fd0",
            "funcStartAddr": "0x402fd0",
            "funcEndAddr": "0x40303a",
            "decompiledFuncCode": "uint64_t sub_402fd0(int32_t arg1, char* arg2, int32_t arg3, int32_t arg4)\n{\n    int32_t rax_1 = open(arg2, arg3, arg4);\n    if ((arg1 != rax_1 && rax_1 >= 0))\n    {\n        int32_t rax_3 = dup2(rax_1, arg1);\n        int32_t* rax_4 = __errno_location();\n        int32_t r13 = *rax_4;\n        close(rax_1);\n        *rax_4 = r13;\n        return rax_3;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_403040",
            "funcStartAddr": "0x403040",
            "funcEndAddr": "0x4030cb",
            "decompiledFuncCode": "int64_t sub_403040(int32_t arg1, int32_t arg2, char* arg3, \n    struct timespec* arg4, int32_t arg5)\n{\n    int64_t rax_1;\n    if (arg1 >= 0)\n    {\n        rax_1 = futimens(arg1, arg4);\n        if (((arg3 != 0 && rax_1 == 0xffffffff) && *__errno_location() != 0x26))\n        {\n            return 0xffffffff;\n        }\n    }\n    else if (arg3 == 0)\n    {\n    label_4030b5:\n        *__errno_location() = 9;\n        return 0xffffffff;\n    }\n    if ((((arg1 >= 0 && arg3 != 0) && rax_1 == 0xffffffff) || arg1 < 0))\n    {\n        rax_1 = utimensat(arg2, arg3, arg4, arg5);\n    }\n    if (rax_1 != 1)\n    {\n        return rax_1;\n    }\n    goto label_4030b5;\n}\n\n"
        },
        {
            "funcName": "sub_4030d0",
            "funcStartAddr": "0x4030d0",
            "funcEndAddr": "0x40310a",
            "decompiledFuncCode": "__syscall_slong_t sub_4030d0(struct timespec* arg1)\n{\n    __syscall_slong_t rax = clock_gettime(0, arg1);\n    if (rax != 0)\n    {\n        int64_t var_18;\n        gettimeofday(&var_18, nullptr);\n        arg1->tv_sec = var_18;\n        int64_t var_10;\n        rax = (var_10 * 0x3e8);\n        arg1->tv_nsec = rax;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_403110",
            "funcStartAddr": "0x403110",
            "funcEndAddr": "0x40328e",
            "decompiledFuncCode": "int64_t sub_403110(void* arg1, int128_t arg2, int64_t arg3, int64_t arg4)\n{\n    int64_t rax_22 = *(arg1 + 0xa8);\n    if ((rax_22 != 0 && (*(arg1 + 0x30) == 0 && *(arg1 + 0xa1) == 0)))\n    {\n        if ((*(arg1 + 0xc8) != 0 || (*(arg1 + 0xc8) == 0 && arg4 > 2)))\n        {\n            *(arg1 + 0xd8) = 1;\n            *(arg1 + 0x20) = arg2;\n            *(arg1 + 0x30) = arg4;\n            return arg4;\n        }\n        if ((*(arg1 + 0xc8) == 0 && arg4 <= 2))\n        {\n            *(arg1 + 0xc8) = 1;\n        }\n        goto label_403280;\n    }\n    if (arg4 > 4)\n    {\n        *(arg1 + 0xa8) = (rax_22 + 1);\n        int64_t r10_1 = (arg3 >> 0x3f);\n        int64_t rax_3;\n        int64_t rdx_1;\n        rdx_1 = HIGHD((arg3 * -0x5c28f5c28f5c28f5));\n        rax_3 = LOWD((arg3 * -0x5c28f5c28f5c28f5));\n        *(arg1 + 0x30) = (arg4 - 4);\n        int64_t rcx_2 = (((rdx_1 + arg3) >> 6) - r10_1);\n        *(arg1 + 0x40) = (arg3 - (rcx_2 * 0x64));\n        int64_t rax_8;\n        int64_t rdx_4;\n        rdx_4 = HIGHD((rcx_2 * -0x5c28f5c28f5c28f5));\n        rax_8 = LOWD((rcx_2 * -0x5c28f5c28f5c28f5));\n        int64_t rax_15;\n        int64_t rdx_5;\n        rdx_5 = HIGHD((arg3 * 0x346dc5d63886594b));\n        rax_15 = LOWD((arg3 * 0x346dc5d63886594b));\n        *(arg1 + 0x38) = (rcx_2 - ((((rdx_4 + rcx_2) >> 6) - (rcx_2 >> 0x3f)) * 0x64));\n        *(arg1 + 0x28) = ((rdx_5 >> 0xb) - r10_1);\n        return rax_15;\n    }\n    *(arg1 + 0xc8) = (*(arg1 + 0xc8) + 1);\n    if (arg4 > 2)\n    {\n        int64_t rax_17;\n        int64_t rdx_8;\n        rdx_8 = HIGHD((arg3 * -0x5c28f5c28f5c28f5));\n        rax_17 = LOWD((arg3 * -0x5c28f5c28f5c28f5));\n        int64_t rdx_11 = (((rdx_8 + arg3) >> 6) - (arg3 >> 0x3f));\n        *(arg1 + 0x48) = rdx_11;\n        rax_22 = (rdx_11 * 0x64);\n        *(arg1 + 0x50) = (arg3 - rax_22);\n    label_40324e:\n        *(arg1 + 0x58) = 0;\n        *(arg1 + 0x60) = 0;\n        *(arg1 + 0x1c) = 2;\n        return rax_22;\n    }\nlabel_403280:\n    *(arg1 + 0x48) = arg3;\n    *(arg1 + 0x50) = 0;\n    goto label_40324e;\n}\n\n"
        },
        {
            "funcName": "sub_403290",
            "funcStartAddr": "0x403290",
            "funcEndAddr": "0x403389",
            "decompiledFuncCode": "char* sub_403290(int32_t arg1, char* arg2)\n{\n    int32_t temp0;\n    int32_t temp1;\n    temp0 = HIGHW((arg1 * 0x91a2b3c5));\n    temp1 = LOWW((arg1 * 0x91a2b3c5));\n    int32_t rbx_2 = (((temp0 + arg1) >> 0xb) - (arg1 >> 0x1f));\n    int32_t rax_3 = (rbx_2 >> 0x1f);\n    int32_t rbx_3 = (rbx_2 * 0xe10);\n    int32_t rax_5 = __sprintf_chk(arg2, 1, -1, \"%c%02d\", (((arg1 >> 0x1f) & 2) + 0x2b), ((rax_3 ^ rbx_2) - rax_3));\n    int32_t rbp_1 = (arg1 - rbx_3);\n    if (arg1 != rbx_3)\n    {\n        void* rsi = &arg2[rax_5];\n        int32_t rax_8 = (rbp_1 >> 0x1f);\n        *rsi = 0x3a;\n        int32_t rbp_3 = ((rbp_1 ^ rax_8) - rax_8);\n        int32_t temp3_1;\n        int32_t temp4_1;\n        temp3_1 = HIGHW((rbp_3 * 0x88888889));\n        temp4_1 = LOWW((rbp_3 * 0x88888889));\n        int32_t temp5_1;\n        int32_t temp6_1;\n        temp5_1 = HIGHW((rbp_3 * 0x1b4e81b5));\n        temp6_1 = LOWW((rbp_3 * 0x1b4e81b5));\n        uint32_t rcx_4 = (temp3_1 >> 5);\n        int32_t rdi_3 = ((temp3_1 >> 5) * 0x3c);\n        *(rsi + 1) = ((temp5_1 >> 6) + 0x30);\n        int32_t temp7_1;\n        int32_t temp8_1;\n        temp7_1 = HIGHW((rcx_4 * 0xcccccccd));\n        temp8_1 = LOWW((rcx_4 * 0xcccccccd));\n        uint8_t rax_12 = ((temp7_1 >> 3) * 5);\n        void* rax_14 = (rsi + 3);\n        int32_t rbp_4 = (rbp_3 - rdi_3);\n        *(rsi + 2) = ((rcx_4 - (rax_12 + rax_12)) + 0x30);\n        char rdi_4 = rbp_4;\n        if (rbp_3 != rdi_3)\n        {\n            *(rsi + 3) = 0x3a;\n            int32_t temp10_1;\n            int32_t temp11_1;\n            temp10_1 = HIGHW((rbp_4 * 0xcccccccd));\n            temp11_1 = LOWW((rbp_4 * 0xcccccccd));\n            uint64_t rdx_8 = (temp10_1 >> 3);\n            uint8_t rdx_9 = (rdx_8 * 5);\n            *(rsi + 4) = (rdx_8 + 0x30);\n            *(rsi + 5) = ((rdi_4 - (rdx_9 + rdx_9)) + 0x30);\n            *(rsi + 6) = 0;\n        }\n        else\n        {\n            *rax_14 = 0;\n        }\n    }\n    return arg2;\n}\n\n"
        },
        {
            "funcName": "sub_403390",
            "funcStartAddr": "0x403390",
            "funcEndAddr": "0x4033fe",
            "decompiledFuncCode": "char* sub_403390(int32_t arg1, char* arg2)\n{\n    int32_t temp0;\n    int32_t temp1;\n    temp0 = HIGHW((arg1 * 0x51eb851f));\n    temp1 = LOWW((arg1 * 0x51eb851f));\n    int32_t r8_1 = ((temp0 >> 5) - (arg1 >> 0x1f));\n    int32_t r9_1 = (arg1 - (r8_1 * 0x64));\n    int32_t rax_4 = ((r8_1 + 0x13) >> 0x1f);\n    int32_t rdx_3 = (r9_1 >> 0x1f);\n    int64_t rcx;\n    rcx = arg1 >= 0xfffff894;\n    __sprintf_chk(arg2, 1, -1, &*\"-%02d%02d\"[rcx], (((r8_1 + 0x13) ^ rax_4) - rax_4), ((r9_1 ^ rdx_3) - rdx_3));\n    return arg2;\n}\n\n"
        },
        {
            "funcName": "sub_403400",
            "funcStartAddr": "0x403400",
            "funcEndAddr": "0x4034be",
            "decompiledFuncCode": "uint64_t sub_403400(char* arg1, char arg2 @ rax)\n{\n    int64_t rsi;\n    int64_t var_b0 = rsi;\n    int64_t rdx;\n    int64_t var_a8 = rdx;\n    int64_t rcx;\n    int64_t var_a0 = rcx;\n    int64_t r8;\n    int64_t var_98 = r8;\n    int64_t r9;\n    int64_t var_90 = r9;\n    if (arg2 != 0)\n    {\n        int128_t zmm0;\n        int128_t var_88_1 = zmm0;\n        int128_t zmm1;\n        int128_t var_78_1 = zmm1;\n        int128_t zmm2;\n        int128_t var_68_1 = zmm2;\n        int128_t zmm3;\n        int128_t var_58_1 = zmm3;\n        int128_t zmm4;\n        int128_t var_48_1 = zmm4;\n        int128_t zmm5;\n        int128_t var_38_1 = zmm5;\n        int128_t zmm6;\n        int128_t var_28_1 = zmm6;\n        int128_t zmm7;\n        int128_t var_18_1 = zmm7;\n    }\n    fwrite(\"date: \", 1, 6, stderr);\n    void* var_c8 = &arg_8;\n    int32_t var_d0 = 8;\n    int32_t var_cc = 0x30;\n    void var_b8;\n    void* var_c0 = &var_b8;\n    return sub_40c370(stderr, arg1, &var_d0);\n}\n\n"
        },
        {
            "funcName": "sub_4034c0",
            "funcStartAddr": "0x4034c0",
            "funcEndAddr": "0x40352b",
            "decompiledFuncCode": "uint64_t sub_4034c0(int64_t** arg1, int32_t* arg2, struct tm* arg3, time_t arg4)\n{\n    time_t var_50 = arg4;\n    uint64_t rax_10;\n    struct tm* rax_11;\n    if (arg4 == -1)\n    {\n        void var_48;\n        rax_11 = sub_40c180(arg1, &var_50, &var_48);\n        arg3 = rax_11;\n        if (rax_11 == 0)\n        {\n            rax_10 = 0;\n        }\n    }\n    if ((arg4 != -1 || (arg4 == -1 && rax_11 != 0)))\n    {\n        int32_t rcx_5 = (((((*arg2 ^ arg3->tm_sec) | (arg2[1] ^ arg3->tm_min)) | (arg2[2] ^ arg3->tm_hour)) | (arg2[3] ^ arg3->tm_mday)) | (arg2[4] ^ arg3->tm_mon));\n        rax_10 = (rcx_5 | (arg2[5] ^ arg3->tm_year)) == 0;\n    }\n    return rax_10;\n}\n\n"
        },
        {
            "funcName": "sub_403530",
            "funcStartAddr": "0x403530",
            "funcEndAddr": "0x403565",
            "decompiledFuncCode": "int64_t sub_403530(char arg1, int64_t arg2, int64_t arg3)\n{\n    __fprintf_chk(stderr, 1, &*\" %+ld %s\"[(arg1 ^ 1)], arg2, arg3);\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_403570",
            "funcStartAddr": "0x403570",
            "funcEndAddr": "0x403625",
            "decompiledFuncCode": "int64_t sub_403570(int32_t* arg1, char arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5)\n{\n    int64_t r9_3 = arg3;\n    int64_t rcx_2;\n    if ((arg4 > 2 && arg5 < 0))\n    {\n        int64_t rcx_3 = r9_3;\n        int64_t rax_6;\n        int64_t rdx_2;\n        rdx_2 = HIGHD((r9_3 * -0x5c28f5c28f5c28f5));\n        rax_6 = LOWD((r9_3 * -0x5c28f5c28f5c28f5));\n        int64_t rdx_5 = (((rdx_2 + r9_3) >> 6) - (r9_3 >> 0x3f));\n        r9_3 = rdx_5;\n        rcx_2 = (rcx_3 - (rdx_5 * 0x64));\n    }\n    if ((arg4 <= 2 && arg5 < 0))\n    {\n        rcx_2 = 0;\n    }\n    int64_t rax_1;\n    int64_t r9_1;\n    if (((arg4 > 2 && arg5 < 0) || (arg4 <= 2 && arg5 < 0)))\n    {\n        r9_1 = (rcx_2 + (((r9_3 << 4) - r9_3) << 2));\n    label_4035a1:\n        rax_1 = 0;\n        if ((r9_1 + 0x5a0) <= 0xb40)\n        {\n            rax_1 = 1;\n            *arg1 = (r9_1 * 0x3c);\n        }\n    }\n    if (((arg4 > 2 && arg5 >= 0) || (arg4 <= 2 && arg5 >= 0)))\n    {\n        int64_t r9 = (r9_3 * 0x3c);\n        bool o_1 = /* bool o_1 = unimplemented  {imul r9, r9, 0x3c} */;\n        int32_t rcx;\n        rcx = o_1;\n        int32_t rdx;\n        if (arg2 != 0)\n        {\n            r9_1 = (r9 - arg5);\n            rdx = (r9 + (-arg5));\n        }\n        else\n        {\n            r9_1 = (r9 + arg5);\n            rdx = (r9 + arg5);\n        }\n        rax_1 = 0;\n        if ((rcx | rdx) == 0)\n        {\n            goto label_4035a1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_403630",
            "funcStartAddr": "0x403630",
            "funcEndAddr": "0x4036ea",
            "decompiledFuncCode": "char** sub_403630(void* arg1, char* arg2)\n{\n    void* const rsi = &data_411ab3;\n    char** rbx = &data_4130c0;\n    while (true)\n    {\n        if (strcmp(arg2, rsi) == 0)\n        {\n            break;\n        }\n        rbx = &rbx[2];\n        rsi = *rbx;\n        if (rsi == 0)\n        {\n            char* rsi_1 = *(arg1 + 0xe8);\n            char** rbx_1 = (arg1 + 0xe8);\n            if (rsi_1 != 0)\n            {\n                do\n                {\n                    if (strcmp(arg2, rsi_1) == 0)\n                    {\n                        return rbx_1;\n                    }\n                    rbx_1 = &rbx_1[2];\n                    rsi_1 = *rbx_1;\n                } while (rsi_1 != 0);\n            }\n            rbx = &data_412dc0;\n            char* rsi_2 = &data_411ab7;\n            while (true)\n            {\n                if (strcmp(arg2, rsi_2) == 0)\n                {\n                    break;\n                }\n                rbx = &rbx[2];\n                rsi_2 = *rbx;\n                if (rsi_2 == 0)\n                {\n                    return 0;\n                }\n            }\n            break;\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_4036f0",
            "funcStartAddr": "0x4036f0",
            "funcEndAddr": "0x403875",
            "decompiledFuncCode": "int64_t sub_4036f0(int64_t arg1, void* arg2)\n{\n    sub_403400(dcgettext(nullptr, \"parsed %s part: \", 5), 0);\n    int64_t rsi_1 = *(arg2 + 0x68);\n    int64_t rsi_2;\n    int64_t rsi_3;\n    char rdi_1;\n    if (rsi_1 != 0)\n    {\n        sub_403530(0, rsi_1, \"year(s)\");\n        rsi_2 = *(arg2 + 0x70);\n        rdi_1 = 1;\n        if (rsi_2 == 0)\n        {\n            rsi_3 = *(arg2 + 0x78);\n        }\n    }\n    else\n    {\n        rsi_2 = *(arg2 + 0x70);\n        if (rsi_2 == 0)\n        {\n            rsi_3 = *(arg2 + 0x78);\n            rdi_1 = 0;\n            if (rsi_3 != 0)\n            {\n            label_403751:\n                sub_403530(rdi_1, rsi_3, \"day(s)\");\n                rdi_1 = 1;\n            }\n            else if ((*(arg2 + 0x80) == 0 && (*(arg2 + 0x88) == 0 && (*(arg2 + 0x90) == 0 && *(arg2 + 0x98) == 0))))\n            {\n                /* tailcall */\n                return fputs(dcgettext(nullptr, \"today/this/now\\n\", 5), stderr);\n            }\n            goto label_403759;\n        }\n        rdi_1 = 0;\n    }\n    if (((rsi_1 != 0 && rsi_2 != 0) || rsi_1 == 0))\n    {\n        sub_403530(rdi_1, rsi_2, \"month(s)\");\n        rsi_3 = *(arg2 + 0x78);\n        rdi_1 = 1;\n    }\n    if (rsi_3 != 0)\n    {\n        goto label_403751;\n    }\nlabel_403759:\n    int64_t rsi_4 = *(arg2 + 0x80);\n    if (rsi_4 != 0)\n    {\n        sub_403530(rdi_1, rsi_4, \"hour(s)\");\n        rdi_1 = 1;\n    }\n    int64_t rsi_5 = *(arg2 + 0x88);\n    if (rsi_5 != 0)\n    {\n        sub_403530(rdi_1, rsi_5, \"minutes\");\n        rdi_1 = 1;\n    }\n    int64_t rsi_6 = *(arg2 + 0x90);\n    if (rsi_6 != 0)\n    {\n        sub_403530(rdi_1, rsi_6, \"seconds\");\n        rdi_1 = 1;\n    }\n    int64_t rsi_7 = *(arg2 + 0x98);\n    if (rsi_7 != 0)\n    {\n        sub_403530(rdi_1, rsi_7, \"nanoseconds\");\n    }\n    /* tailcall */\n    return fputc(0xa, stderr);\n}\n\n"
        },
        {
            "funcName": "sub_403880",
            "funcStartAddr": "0x403880",
            "funcEndAddr": "0x403915",
            "decompiledFuncCode": "char* sub_403880(struct tm* arg1, void* arg2, char* arg3)\n{\n    int32_t rax = sub_40e2d0(arg3, 0x64, \"(Y-M-D) %Y-%m-%d %H:%M:%S\", arg1, nullptr, 0);\n    if ((arg2 != 0 && (rax <= 0x63 && *(arg2 + 0xd0) != 0)))\n    {\n        void var_38;\n        __snprintf_chk(&arg3[rax], (0x64 - rax), 1, -1, \" TZ=%s\", sub_403290(*(arg2 + 0x18), &var_38));\n        return arg3;\n    }\n    return arg3;\n}\n\n"
        },
        {
            "funcName": "sub_403920",
            "funcStartAddr": "0x403920",
            "funcEndAddr": "0x403a0d",
            "decompiledFuncCode": "char* sub_403920(void* arg1, char* arg2)\n{\n    int64_t rcx_2;\n    int64_t rdx_1;\n    uint64_t rsi_1;\n    char* rdi_1;\n    if (*(arg1 + 0xe0) == 0)\n    {\n        *arg2 = 0;\n        rdx_1 = *(arg1 + 0x10);\n        if (rdx_1 > 6)\n        {\n        label_4039c3:\n            return arg2;\n        }\n        rdi_1 = arg2;\n        rcx_2 = 1;\n        rsi_1 = 0x64;\n    label_4039fe:\n        __snprintf_chk(rdi_1, rsi_1, 1, -1, (rcx_2 + \" %s\"), ((rdx_1 << 2) + &data_412b60));\n        return arg2;\n    }\n    int64_t rax_1 = (*(arg1 + 8) + 1);\n    int32_t rax_3;\n    if (rax_1 > 0xd)\n    {\n        rax_3 = __snprintf_chk(arg2, 0x64, 1, -1, \"%ld\");\n        rdx_1 = *(arg1 + 0x10);\n        if (rdx_1 > 6)\n        {\n            goto label_4039c3;\n        }\n    }\n    else\n    {\n        rax_3 = snprintf(arg2, 0x64, \"%s\", &*\"last\"[(rax_1 * 0xb)]);\n        rdx_1 = *(arg1 + 0x10);\n        if (rdx_1 > 6)\n        {\n            goto label_4039c3;\n        }\n        if (rax_3 > 0x63)\n        {\n            goto label_4039c3;\n        }\n    }\n    rcx_2 = rax_3 == 0;\n    rsi_1 = (0x64 - rax_3);\n    rdi_1 = &arg2[rax_3];\n    goto label_4039fe;\n}\n\n"
        },
        {
            "funcName": "sub_403a10",
            "funcStartAddr": "0x403a10",
            "funcEndAddr": "0x403db0",
            "decompiledFuncCode": "int64_t sub_403a10(int64_t arg1, void* arg2)\n{\n    sub_403400(dcgettext(nullptr, \"parsed %s part: \", 5), 0);\n    char rdx;\n    if ((*(arg2 + 0xa8) == 0 || (*(arg2 + 0xa8) != 0 && *(arg2 + 0xda) != 0)))\n    {\n        rdx = 0;\n        if (*(arg2 + 0xd8) != *(arg2 + 0xdf))\n        {\n            goto label_403a66;\n        }\n    }\n    if ((*(arg2 + 0xa8) != 0 && *(arg2 + 0xda) == 0))\n    {\n        __fprintf_chk(stderr, 1, \"(Y-M-D) %04ld-%02ld-%02ld\", *(arg2 + 0x28), *(arg2 + 0x38), *(arg2 + 0x40));\n        *(arg2 + 0xda) = 1;\n        rdx = 1;\n        if (*(arg2 + 0xd8) != *(arg2 + 0xdf))\n        {\n            fputc(0x20, stderr);\n        label_403a66:\n            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"year: %04ld\", 5), *(arg2 + 0x28));\n            rdx = 1;\n            *(arg2 + 0xdf) = *(arg2 + 0xd8);\n        }\n    }\n    if ((*(arg2 + 0xc8) != 0 && *(arg2 + 0xdd) == 0))\n    {\n        __fprintf_chk(stderr, 1, &*\" %02ld:%02ld:%02ld\"[(rdx ^ 1)], *(arg2 + 0x48), *(arg2 + 0x50), *(arg2 + 0x58));\n        int64_t rcx_7 = *(arg2 + 0x60);\n        if (rcx_7 != 0)\n        {\n            __fprintf_chk(stderr, 1, \".%09d\", rcx_7);\n        }\n        if (*(arg2 + 0x1c) == 1)\n        {\n            fwrite(&data_411b7c, 1, 2, stderr);\n        }\n        bool cond:2_1 = *(arg2 + 0xb0) == 0;\n        *(arg2 + 0xdd) = 1;\n        rdx = 1;\n        if ((!cond:2_1))\n        {\n            rdx = *(arg2 + 0xdb);\n            if (rdx == 0)\n            {\n                goto label_403d08;\n            }\n        }\n    }\n    void var_98;\n    if ((((*(arg2 + 0xc8) == 0 || (*(arg2 + 0xc8) != 0 && *(arg2 + 0xdd) != 0)) && *(arg2 + 0xb0) != 0) && *(arg2 + 0xdb) == 0))\n    {\n        if (rdx == 0)\n        {\n            goto label_403ade;\n        }\n    label_403d08:\n        fputc(0x20, stderr);\n    label_403ade:\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s (day ordinal=%ld number=%d)\", 5), sub_403920(arg2, &var_98), *(arg2 + 8), *(arg2 + 0x10));\n        *(arg2 + 0xdb) = 1;\n        rdx = 1;\n    }\n    void* const rbp_4;\n    if ((*(arg2 + 0xb8) != 0 && *(arg2 + 0xdc) == 0))\n    {\n        uint64_t rcx_3 = *(arg2 + 0x14);\n        void* const r8_2 = \" DST\";\n        FILE* rdi_4 = stderr;\n        if (*(arg2 + 0xc0) == 0)\n        {\n            r8_2 = &data_414b79[0x1b];\n        }\n        __fprintf_chk(rdi_4, 1, &*\" isdst=%d%s\"[(rdx ^ 1)], rcx_3, r8_2);\n        bool cond:1_1 = *(arg2 + 0xd0) == 0;\n        *(arg2 + 0xdc) = 1;\n        if (((!cond:1_1) && *(arg2 + 0xde) == 0))\n        {\n            rbp_4 = \" UTC%s\";\n            goto label_403d44;\n        }\n        if (*(arg2 + 0xa0) != 0)\n        {\n            goto label_403ba2;\n        }\n        goto label_403c2d;\n    }\n    int64_t rbx_1;\n    if ((*(arg2 + 0xd0) != 0 && *(arg2 + 0xde) == 0))\n    {\n        rbp_4 = &*\" UTC%s\"[(rdx ^ 1)];\n    label_403d44:\n        __fprintf_chk(stderr, 1, rbp_4, sub_403290(*(arg2 + 0x18), &var_98));\n        bool cond:3_1 = *(arg2 + 0xa0) == 0;\n        *(arg2 + 0xde) = 1;\n        if ((!cond:3_1))\n        {\n        label_403ba2:\n            rbx_1 = *(arg2 + 0x58);\n        label_403bb2:\n            fputc(0x20, stderr);\n        label_403c0d:\n            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"number of seconds: %ld\", 5), rbx_1);\n        }\n        goto label_403c2d;\n    }\n    if (*(arg2 + 0xa0) == 0)\n    {\n    label_403c2d:\n        return fputc(0xa, stderr);\n    }\n    rbx_1 = *(arg2 + 0x58);\n    if (rdx != 0)\n    {\n        goto label_403bb2;\n    }\n    goto label_403c0d;\n}\n\n"
        },
        {
            "funcName": "sub_403db0",
            "funcStartAddr": "0x403db0",
            "funcEndAddr": "0x406022",
            "decompiledFuncCode": "int64_t sub_403db0(void** arg1)\n{\n    uint64_t r8 = 0;\n    void** r9 = arg1;\n    int32_t r15 = 0x26;\n    uint32_t rbp = -2;\n    int16_t var_548 = 0;\n    void var_498;\n    void* rbx = &var_498;\n    int16_t* r14 = &var_548;\n    int32_t var_5c4 = 0;\n    void** var_5e0;\n    int64_t var_5d8_1;\n    int32_t var_5d0;\n    int128_t var_4d8_1;\n    int128_t var_4c8_1;\n    int128_t var_4b8_1;\n    int64_t var_4a8_1;\n    int32_t rax_37;\n    int16_t* rcx_1;\n    void* rdx_23;\n    void** r10_2;\n    void** r11_1;\n    int64_t r13_2;\n    int64_t r15_1;\n    while (true)\n    {\n        int64_t var_5c0;\n        void* var_5b8;\n        void** var_5a8;\n        int128_t var_518;\n        uint32_t rax_1;\n        if (rbp != 0xfffffffe)\n        {\n        label_403e15:\n            if (rbp > 0)\n            {\n                if (rbp > 0x115)\n                {\n                    r15 = (r15 + 2);\n                    rax_1 = 2;\n                }\n                else\n                {\n                label_4042cb:\n                    rax_1 = *(rbp + 0x413820);\n                label_4042d2:\n                    r15 = (r15 + rax_1);\n                }\n            }\n        }\n        else\n        {\n            void* rax_16 = *r9;\n            uint32_t rbp_1 = *rax_16;\n            char rcx_4 = rbp_1;\n            while (true)\n            {\n                char rdx_6 = rcx_4;\n                if ((rcx_4 <= 0x20 && ((1 << rcx_4) & 0x100003e00) != 0))\n                {\n                    char* rsi_3 = (rax_16 + 1);\n                    do\n                    {\n                        *r9 = rsi_3;\n                        rbp_1 = *rsi_3;\n                        rax_16 = rsi_3;\n                        rdx_6 = rbp_1;\n                        if (rbp_1 > 0x20)\n                        {\n                            break;\n                        }\n                        rsi_3 = &rsi_3[1];\n                    } while (((1 << rdx_6) & 0x100003e00) != 0);\n                }\n                int32_t rcx_9;\n                char rcx_14;\n                int32_t rsi_8;\n                if ((rcx_4 > 0x20 || ((rcx_4 <= 0x20 && ((1 << rcx_4) & 0x100003e00) != 0) && rbp_1 > 0x20)))\n                {\n                    rsi_8 = (rbp_1 - 0x30);\n                    rcx_14 = ((rdx_6 - 0x2b) & 0xfd);\n                    int32_t rsi_12;\n                    if (rsi_8 > 9)\n                    {\n                        if (rcx_14 == 0)\n                        {\n                            rax_16 = rdx_6 == 0x2d;\n                        }\n                        else\n                        {\n                            rcx_9 = (rbp_1 - 0x41);\n                        }\n                    }\n                    else\n                    {\n                        rax_16 = rdx_6 == 0x2d;\n                        if (rcx_14 != 0)\n                        {\n                        label_4045ee:\n                            rax_16 = *r9;\n                            rsi_12 = 0;\n                        label_4042f1:\n                            void* r11_2 = rax_16;\n                            int64_t rcx_16 = 0;\n                            uint32_t rdi_7 = rdx_6;\n                            int64_t rcx_17;\n                            int64_t rdx_14;\n                            char rdx_15;\n                            void* rbp_5;\n                            while (true)\n                            {\n                                int32_t rbp_4 = (rdi_7 - 0x30);\n                                int32_t rdx_13 = (0x30 - rdi_7);\n                                if (rsi_12 == 0xffffffff)\n                                {\n                                    rbp_4 = rdx_13;\n                                }\n                                rdx_14 = rbp_4;\n                                rcx_17 = (rcx_16 + rdx_14);\n                                if ((rcx_16 + rdx_14))\n                                {\n                                    break;\n                                }\n                                rdi_7 = *(r11_2 + 1);\n                                rbp_5 = (r11_2 + 1);\n                                rdx_15 = rdi_7;\n                                if ((rdi_7 - 0x30) > 9)\n                                {\n                                    break;\n                                }\n                                bool o_2 = /* bool o_2 = unimplemented  {imul rdx, rcx, 0xa} */;\n                                rcx_16 = (rcx_17 * 0xa);\n                                if (o_2)\n                                {\n                                    break;\n                                }\n                                r11_2 = rbp_5;\n                            }\n                            if ((rcx_16 + rdx_14))\n                            {\n                                goto label_404768;\n                            }\n                            if ((rdx_15 & 0xfd) == 0x2c)\n                            {\n                                uint64_t rdx_18 = (*(rbp_5 + 1) - 0x30);\n                                if (rdx_18 <= 9)\n                                {\n                                    void* rbp_6 = (r11_2 + 3);\n                                    int32_t r11_3 = *(r11_2 + 3);\n                                    int32_t rax_23 = 8;\n                                    char r13_4 = r11_3;\n                                    int32_t rdi_8;\n                                    int32_t temp74_1;\n                                    do\n                                    {\n                                        uint32_t rdx_19 = (rdx_18 * 5);\n                                        rdi_8 = (r11_3 - 0x30);\n                                        rdx_18 = (rdx_19 + rdx_19);\n                                        if (rdi_8 <= 9)\n                                        {\n                                            r11_3 = *(rbp_6 + 1);\n                                            rdx_18 = (rdx_18 + rdi_8);\n                                            rbp_6 = (rbp_6 + 1);\n                                            r13_4 = r11_3;\n                                            rdi_8 = (r11_3 - 0x30);\n                                        }\n                                        temp74_1 = rax_23;\n                                        rax_23 = (rax_23 - 1);\n                                    } while (temp74_1 != 1);\n                                    if (rsi_12 == 0xffffffff)\n                                    {\n                                        int32_t rax_49;\n                                        if (rdi_8 <= 9)\n                                        {\n                                            if (r13_4 == 0x30)\n                                            {\n                                                char rdi_15;\n                                                do\n                                                {\n                                                    rbp_6 = (rbp_6 + 1);\n                                                    rax_49 = *rbp_6;\n                                                    rdi_15 = rax_49;\n                                                    if ((rax_49 - 0x30) > 9)\n                                                    {\n                                                        break;\n                                                    }\n                                                } while (rdi_15 == 0x30);\n                                            }\n                                            if ((r13_4 != 0x30 || (r13_4 == 0x30 && (rax_49 - 0x30) <= 9)))\n                                            {\n                                                rdx_18 = (rdx_18 + 1);\n                                                if ((*rbp_6 - 0x30) <= 9)\n                                                {\n                                                    goto label_4043a5;\n                                                }\n                                            }\n                                        }\n                                        if (((rdi_8 > 9 || ((rdi_8 <= 9 && r13_4 == 0x30) && (rax_49 - 0x30) > 9)) && rdx_18 == 0))\n                                        {\n                                            *r9 = rbp_6;\n                                            rax_1 = 0x15;\n                                            rbp = 0x114;\n                                            var_518 = rcx_17;\n                                            var_5c0 = 0;\n                                            goto label_4042d2;\n                                        }\n                                    }\n                                    else\n                                    {\n                                        if (rdi_8 > 9)\n                                        {\n                                        label_405b14:\n                                            int64_t rax_161 = rdx_18;\n                                            *r9 = rbp_6;\n                                            var_5c0 = rax_161;\n                                            var_518 = rcx_17;\n                                            rax_1 = ((!(rax_161 - rax_161)) + 0x16);\n                                            rbp = ((!(rbp_6 - rbp_6)) + 0x115);\n                                            goto label_4042d2;\n                                        }\n                                    label_4043a5:\n                                        do\n                                        {\n                                            rbp_6 = (rbp_6 + 1);\n                                        } while ((*rbp_6 - 0x30) <= 9);\n                                        if (rsi_12 >= 0)\n                                        {\n                                            goto label_405b14;\n                                        }\n                                        if (rdx_18 == 0)\n                                        {\n                                            goto label_405b14;\n                                        }\n                                    }\n                                    if (rcx_17 == -0x8000000000000000)\n                                    {\n                                        goto label_404768;\n                                    }\n                                    *r9 = rbp_6;\n                                    rbp = 0x114;\n                                    var_518 = (rcx_17 - 1);\n                                    var_5c0 = (0x3b9aca00 - rdx_18);\n                                    rax_1 = 0x15;\n                                    goto label_4042d2;\n                                }\n                            }\n                            *r9 = rbp_5;\n                            var_5c0 = rcx_17;\n                            var_518 = (rsi_12 >> 0x1f);\n                            var_5b8 = (rbp_5 - rax_16);\n                            rax_1 = ((!(rax_16 - rax_16)) + 0x14);\n                            rbp = ((!(rbp_5 - rbp_5)) + 0x113);\n                            goto label_4042d2;\n                        }\n                    }\n                    if (((rsi_8 > 9 && rcx_14 == 0) || rsi_8 <= 9))\n                    {\n                        void* rdx_12 = (*r9 + 1);\n                        rsi_12 = (((rsi_8 - rsi_8) & 2) - 1);\n                        do\n                        {\n                            *r9 = rdx_12;\n                            rcx_4 = *rdx_12;\n                            rax_16 = rdx_12;\n                            rdx_6 = rcx_4;\n                            if (rcx_4 > 0x20)\n                            {\n                                break;\n                            }\n                            rdx_12 = (rax_16 + 1);\n                        } while (((1 << rcx_4) & 0x100003e00) != 0);\n                        if (rcx_4 <= 0x20)\n                        {\n                            rbp_1 = rcx_4;\n                            continue;\n                        }\n                        else\n                        {\n                            rbp_1 = rcx_4;\n                            if ((rbp_1 - 0x30) > 9)\n                            {\n                                continue;\n                            }\n                        }\n                        goto label_4042f1;\n                    }\n                }\n                if (((((1 << rcx_4) & 0x100003e00) == 0 || (((1 << rcx_4) & 0x100003e00) != 0 && rbp_1 <= 0x20)) && rcx_4 <= 0x20))\n                {\n                    if ((rbp_1 - 0x30) <= 9)\n                    {\n                        goto label_4045ee;\n                    }\n                    rcx_9 = (rbp_1 - 0x41);\n                    if (rcx_9 > 0x39)\n                    {\n                    label_404029:\n                        *r9 = (rax_16 + 1);\n                        rbp = *rax_16;\n                        if (rbp == 0)\n                        {\n                            goto label_404040;\n                        }\n                        goto label_4042cb;\n                    }\n                }\n                if ((((((rcx_4 > 0x20 || ((rcx_4 <= 0x20 && ((1 << rcx_4) & 0x100003e00) != 0) && rbp_1 > 0x20)) && rsi_8 > 9) && rcx_14 != 0) && rcx_9 > 0x39) || ((((((rcx_4 > 0x20 || ((rcx_4 <= 0x20 && ((1 << rcx_4) & 0x100003e00) != 0) && rbp_1 > 0x20)) && rsi_8 > 9) && rcx_14 != 0) && rcx_9 <= 0x39) || ((rcx_4 <= 0x20 && (((1 << rcx_4) & 0x100003e00) == 0 || (((1 << rcx_4) & 0x100003e00) != 0 && rbp_1 <= 0x20))) && (rbp_1 - 0x30) > 9)) && ((1 << rcx_9) & 0x3ffffff03ffffff) == 0)))\n                {\n                    if (rdx_6 != 0x28)\n                    {\n                        goto label_404029;\n                    }\n                    void* rsi_9 = *r9;\n                    int64_t rcx_15 = 0;\n                    bool rdx_10;\n                    while (true)\n                    {\n                        rax_16 = (rsi_9 + 1);\n                        *r9 = rax_16;\n                        rdx_10 = *(rax_16 - 1);\n                        if (rdx_10 == 0)\n                        {\n                            break;\n                        }\n                        if (rdx_10 != 0x28)\n                        {\n                            rdx_10 = rdx_10 == 0x29;\n                            rcx_15 = (rcx_15 - rdx_10);\n                        }\n                        else\n                        {\n                            rcx_15 = (rcx_15 + 1);\n                        }\n                        if (rcx_15 == 0)\n                        {\n                            break;\n                        }\n                        rsi_9 = rax_16;\n                    }\n                    if (rdx_10 == 0)\n                    {\n                        break;\n                    }\n                    rbp_1 = *(rsi_9 + 1);\n                    rcx_4 = rbp_1;\n                    continue;\n                }\n                if (((((((rcx_4 > 0x20 || ((rcx_4 <= 0x20 && ((1 << rcx_4) & 0x100003e00) != 0) && rbp_1 > 0x20)) && rsi_8 > 9) && rcx_14 != 0) && rcx_9 <= 0x39) || ((rcx_4 <= 0x20 && (((1 << rcx_4) & 0x100003e00) == 0 || (((1 << rcx_4) & 0x100003e00) != 0 && rbp_1 <= 0x20))) && (rbp_1 - 0x30) > 9)) && ((1 << rcx_9) & 0x3ffffff03ffffff) != 0))\n                {\n                    char var_568;\n                    char* rsi_5 = &var_568;\n                    void* rax_18 = (*r9 + 1);\n                    while (true)\n                    {\n                        void var_555;\n                        if (rsi_5 < &var_555)\n                        {\n                            *rsi_5 = rdx_6;\n                            rsi_5 = &rsi_5[1];\n                        }\n                        *r9 = rax_18;\n                        uint32_t rcx_10 = *rax_18;\n                        rdx_6 = rcx_10;\n                        int32_t rcx_11 = (rcx_10 - 0x41);\n                        if (((rcx_11 > 0x39 || (rcx_11 <= 0x39 && ((1 << rcx_11) & 0x3ffffff03ffffff) == 0)) && rdx_6 != 0x2e))\n                        {\n                            break;\n                        }\n                        rax_18 = (rax_18 + 1);\n                    }\n                    *rsi_5 = 0;\n                    char rax_19 = var_568;\n                    char* rcx_12 = &var_568;\n                    if (rax_19 != 0)\n                    {\n                        do\n                        {\n                            uint32_t rdx_7 = rax_19;\n                            char rdx_8 = (rdx_7 - 0x20);\n                            if ((rdx_7 - 0x61) < 0x1a)\n                            {\n                                rax_19 = rdx_8;\n                            }\n                            rcx_12 = &rcx_12[1];\n                            rcx_12[-1] = rax_19;\n                            rax_19 = *rcx_12;\n                        } while (rax_19 != 0);\n                    }\n                    char* rsi_7 = &data_411ba2;\n                    int64_t* rbx_1 = &data_4134c0;\n                    var_5e0 = r8;\n                    int32_t rax_20;\n                    do\n                    {\n                        rax_20 = strcmp(&var_568, rsi_7);\n                        if (rax_20 == 0)\n                        {\n                            break;\n                        }\n                        rbx_1 = &rbx_1[2];\n                        rsi_7 = *rbx_1;\n                    } while (rsi_7 != 0);\n                    int64_t rdx_9;\n                    if (rax_20 == 0)\n                    {\n                        r8 = var_5e0;\n                        rdx_9 = *(rbx_1 + 0xc);\n                        rbp = rbx_1[1];\n                    }\n                    else\n                    {\n                        int32_t r8_10 = var_5e0;\n                        char* rbp_9 = &var_568;\n                        uint32_t rax_157;\n                        do\n                        {\n                            int32_t rdx_85 = *rbp_9;\n                            rbp_9 = &rbp_9[4];\n                            rax_157 = (((rdx_85 - 0x1010101) & (!rdx_85)) & 0x80808080);\n                        } while (rax_157 == 0);\n                        uint32_t rdx_88 = (rax_157 >> 0x10);\n                        int32_t temp75_1 = (rax_157 & 0x8080);\n                        bool cond:6_1 = temp75_1 == 0;\n                        if (temp75_1 == 0)\n                        {\n                            rax_157 = rdx_88;\n                        }\n                        void* rdx_89 = &rbp_9[2];\n                        if (cond:6_1)\n                        {\n                            rbp_9 = rdx_89;\n                        }\n                        char rdi_31 = rax_157;\n                        int32_t rax_158 = 1;\n                        void* rbp_11 = ((rbp_9 - 3) - &var_568);\n                        if (rbp_11 != 3)\n                        {\n                            rax_158 = 0;\n                            char var_565;\n                            if (rbp_11 == 4)\n                            {\n                                rax_158 = var_565 == 0x2e;\n                            }\n                        }\n                        void* var_5d8_3 = rbx;\n                        char* rsi_30 = \"JANUARY\";\n                        int64_t* rbx_4 = &data_413320;\n                        var_5e0 = r8_10;\n                        var_5d0 = r9;\n                        bool rdx_90;\n                        do\n                        {\n                            if (rax_158 != 0)\n                            {\n                                rdx_90 = strncmp(&var_568, rsi_30, 3) == 0;\n                            }\n                            else\n                            {\n                                rdx_90 = strcmp(&var_568, rsi_30) == 0;\n                            }\n                            if (rdx_90 != 0)\n                            {\n                                break;\n                            }\n                            rbx_4 = &rbx_4[2];\n                            rsi_30 = *rbx_4;\n                        } while (rsi_30 != 0);\n                        void* var_5b0_10;\n                        char** rax_164;\n                        int32_t rax_165;\n                        void* rbp_15;\n                        bool z_1;\n                        if (rdx_90 == 0)\n                        {\n                            void** r9_2 = var_5d0;\n                            rbx = var_5d8_3;\n                            rbp_15 = rbp_11;\n                            var_5d8_3 = rdx_90;\n                            var_5a8 = var_5e0;\n                            rax_164 = sub_403630(r9_2, &var_568);\n                            r9 = r9_2;\n                            char rdx_91 = var_5d8_3;\n                            bool c_8 = false;\n                            z_1 = (rax_164 & rax_164) == 0;\n                            r8 = var_5a8;\n                            if (z_1)\n                            {\n                                int64_t rcx_35 = 4;\n                                char* rsi_31 = &var_568;\n                                char const* const rdi_34 = \"DST\";\n                                while (rcx_35 != 0)\n                                {\n                                    char temp77_1 = *rsi_31;\n                                    char const temp78_1 = *rdi_34;\n                                    c_8 = temp77_1 < temp78_1;\n                                    z_1 = temp77_1 == temp78_1;\n                                    rsi_31 = &rsi_31[1];\n                                    rdi_34 = &rdi_34[1];\n                                    rcx_35 = (rcx_35 - 1);\n                                    if ((!z_1))\n                                    {\n                                        break;\n                                    }\n                                }\n                                char* rsi_32 = \"YEAR\";\n                                rax_164 = ((!z_1) && (!c_8));\n                                rax_164 = (rax_164 - 0);\n                                if (rax_164 != 0)\n                                {\n                                    var_5d8_3 = rbx;\n                                    rbx_4 = &data_413260;\n                                    var_5e0 = r8;\n                                    var_5b0_10 = rdx_91;\n                                    var_5d0 = r9;\n                                    do\n                                    {\n                                        rax_165 = strcmp(&var_568, rsi_32);\n                                        if (rax_165 == 0)\n                                        {\n                                            break;\n                                        }\n                                        rbx_4 = &rbx_4[2];\n                                        rsi_32 = *rbx_4;\n                                    } while (rsi_32 != 0);\n                                }\n                            }\n                        }\n                        if (((((rdx_90 == 0 && z_1) && rax_164 != 0) && rax_165 == 0) || rdx_90 != 0))\n                        {\n                            r8 = var_5e0;\n                            rbx = var_5d8_3;\n                            r9 = var_5d0;\n                            rdx_9 = *(rbx_4 + 0xc);\n                            rbp = rbx_4[1];\n                        }\n                        if (rdx_90 == 0)\n                        {\n                            if (z_1)\n                            {\n                                if ((rax_164 != 0 && rax_165 != 0))\n                                {\n                                    void* rcx_40 = ((&var_568 + rbp_15) - 1);\n                                    int32_t r8_13 = var_5e0;\n                                    char rdx_96 = var_5b0_10;\n                                    r9 = var_5d0;\n                                    bool cond:11_1;\n                                    if (*rcx_40 == 0x53)\n                                    {\n                                        var_5e0 = r15;\n                                        char* rsi_38 = \"YEAR\";\n                                        int64_t* rbx_7 = &data_413260;\n                                        *rcx_40 = 0;\n                                        do\n                                        {\n                                            var_5d0 = rdx_96;\n                                            rdx_96 = var_5d0;\n                                            cond:11_1 = strcmp(&var_568, rsi_38) != 0;\n                                            if ((!cond:11_1))\n                                            {\n                                                break;\n                                            }\n                                            rbx_7 = &rbx_7[2];\n                                            rsi_38 = *rbx_7;\n                                        } while (rsi_38 != 0);\n                                        if ((!cond:11_1))\n                                        {\n                                            r8 = r8_13;\n                                            rbx = var_5d8_3;\n                                            r15 = var_5e0;\n                                            rdx_9 = *(rbx_7 + 0xc);\n                                            rbp = rbx_7[1];\n                                        }\n                                        else\n                                        {\n                                            r15 = var_5e0;\n                                            *rcx_40 = 0x53;\n                                        }\n                                    }\n                                    if (((*rcx_40 == 0x53 && cond:11_1) || *rcx_40 != 0x53))\n                                    {\n                                        var_5e0 = r15;\n                                        char* rsi_37 = \"TOMORROW\";\n                                        int64_t* rbx_6 = &data_413100;\n                                        int32_t rax_185;\n                                        do\n                                        {\n                                            var_5d0 = rdx_96;\n                                            rax_185 = strcmp(&var_568, rsi_37);\n                                            rdx_96 = var_5d0;\n                                            if (rax_185 == 0)\n                                            {\n                                                break;\n                                            }\n                                            rbx_6 = &rbx_6[2];\n                                            rsi_37 = *rbx_6;\n                                        } while (rsi_37 != 0);\n                                        if (rax_185 == 0)\n                                        {\n                                            r8 = r8_13;\n                                            rbx = var_5d8_3;\n                                            r15 = var_5e0;\n                                            rdx_9 = *(rbx_6 + 0xc);\n                                            rbp = rbx_6[1];\n                                        }\n                                        else\n                                        {\n                                            r8 = r8_13;\n                                            rbx = var_5d8_3;\n                                            char rax_187 = var_568;\n                                            r15 = var_5e0;\n                                            char* rsi_42;\n                                            if (rbp_15 == 1)\n                                            {\n                                                void* rcx_44 = &data_412c20;\n                                                if (rax_187 == 0x41)\n                                                {\n                                                    var_518 = -0xe10;\n                                                    rbp = 0x111;\n                                                    goto label_4042cb;\n                                                }\n                                                while (true)\n                                                {\n                                                    rsi_42 = *(rcx_44 + 0x10);\n                                                    void* rdi_47 = (rcx_44 + 0x10);\n                                                    if (rsi_42 == 0)\n                                                    {\n                                                        break;\n                                                    }\n                                                    if (*rsi_42 == rax_187)\n                                                    {\n                                                        break;\n                                                    }\n                                                    rcx_44 = rdi_47;\n                                                }\n                                                if (rsi_42 != 0)\n                                                {\n                                                    rdx_9 = *(rcx_44 + 0x1c);\n                                                    rbp = *(rcx_44 + 0x18);\n                                                }\n                                            }\n                                            if ((rbp_15 != 1 || ((rbp_15 == 1 && rax_187 != 0x41) && rsi_42 == 0)))\n                                            {\n                                                char* rsi_39 = &var_568;\n                                                char* rcx_42 = &var_568;\n                                                if (rax_187 != 0)\n                                                {\n                                                    do\n                                                    {\n                                                        if (rax_187 != 0x2e)\n                                                        {\n                                                            rcx_42 = &rcx_42[1];\n                                                        }\n                                                        else\n                                                        {\n                                                            rdx_96 = 1;\n                                                        }\n                                                        rsi_39 = &rsi_39[1];\n                                                        rax_187 = *rsi_39;\n                                                        *rcx_42 = rax_187;\n                                                    } while (rax_187 != 0);\n                                                    if (rdx_96 != 0)\n                                                    {\n                                                        void* var_5d8_4;\n                                                        var_5d8_4 = r8;\n                                                        rax_164 = sub_403630(r9, &var_568);\n                                                        r8 = var_5d8_4;\n                                                    }\n                                                }\n                                                if (((rax_187 == 0 || (rax_187 != 0 && rdx_96 == 0)) || ((rax_187 != 0 && rdx_96 != 0) && rax_164 == 0)))\n                                                {\n                                                    if (*(r9 + 0xd9) == 0)\n                                                    {\n                                                    label_404768:\n                                                        rax_1 = 2;\n                                                        rbp = 0x3f;\n                                                        goto label_4042d2;\n                                                    }\n                                                    var_5e0 = r8;\n                                                    rbp = 0x3f;\n                                                    sub_403400(dcgettext(nullptr, \"error: unknown word '%s'\\n\", 5), 0);\n                                                    rax_1 = 2;\n                                                    r8 = var_5e0;\n                                                    goto label_4042d2;\n                                                }\n                                                goto label_405c2d;\n                                            }\n                                        }\n                                    }\n                                }\n                                if (rax_164 == 0)\n                                {\n                                    var_518 = 0;\n                                    rbp = 0x103;\n                                    goto label_4042cb;\n                                }\n                            }\n                            else\n                            {\n                            label_405c2d:\n                                rdx_9 = *(rax_164 + 0xc);\n                                rbp = rax_164[1];\n                            }\n                        }\n                    }\n                    var_518 = rdx_9;\n                    goto label_403e15;\n                }\n            }\n        }\n        if (((rbp != 0xfffffffe && rbp <= 0) || rbp == 0xfffffffe))\n        {\n        label_404040:\n            rax_1 = 0;\n            rbp = 0;\n        }\n        if (r15 > 0x70)\n        {\n            goto label_403f00;\n        }\n        int64_t r10_1 = r15;\n        if (*(r10_1 + 0x4135e0) != rax_1)\n        {\n            goto label_403f00;\n        }\n        r8 = *(r10_1 + \"OCDEFGH:IdkJKenL12efqM;N=>?@AB=>\u2026\");\n        if (r8 == 0)\n        {\n            break;\n        }\n        rcx_1 = r14;\n        rbp = -2;\n        rbx = (rbx + 0x38);\n        var_5c4 = (var_5c4 - 1);\n        int64_t var_510_1 = var_5c0;\n        *rbx = var_518;\n        int64_t var_4e8;\n        *(rbx + 0x30) = var_4e8;\n        *(rbx + 0x10) = var_5b8;\n        int128_t var_4f8;\n        *(rbx + 0x20) = var_4f8;\n        while (true)\n        {\n            r14 = &rcx_1[1];\n            rcx_1[1] = r8;\n            void var_522;\n            if (r14 >= &var_522)\n            {\n                return 2;\n            }\n            if (r8 == 0xc)\n            {\n                return 0;\n            }\n            r15 = *(r8 + 0x4137a0);\n            if (r15 != 0xffffffa3)\n            {\n                break;\n            }\n        label_403f00:\n            uint32_t rcx_2 = *(r8 + 0x413720);\n            char rdx_2 = rcx_2;\n            if (rcx_2 == 0)\n            {\n                if (var_5c4 == 3)\n                {\n                    bool cond:2_1 = rbp != 0;\n                    if (rbp > 0)\n                    {\n                        rbp = -2;\n                    }\n                    else if ((!cond:2_1))\n                    {\n                        goto label_403f28;\n                    }\n                }\n            label_403f69:\n                int32_t rax_9 = *(r8 + 0x4137a0);\n                if (rax_9 != 0xffffffa3)\n                {\n                    int32_t rax_10 = (rax_9 + 1);\n                    if (rax_10 <= 0x70)\n                    {\n                        int64_t rax_11 = rax_10;\n                        if (*(rax_11 + 0x4135e0) == 1)\n                        {\n                            r8 = *(rax_11 + \"OCDEFGH:IdkJKenL12efqM;N=>?@AB=>\u2026\");\n                            if (r8 != 0)\n                            {\n                                rbx = (rbx + 0x38);\n                                rcx_1 = r14;\n                                var_5c4 = 3;\n                                int64_t var_510_2 = var_5c0;\n                                *rbx = var_518;\n                                *(rbx + 0x30) = var_4e8;\n                                *(rbx + 0x10) = var_5b8;\n                                *(rbx + 0x20) = var_4f8;\n                                continue;\n                            }\n                        }\n                    }\n                }\n                if (r14 == &var_548)\n                {\n                label_403f28:\n                    return 1;\n                }\n                r14 = (r14 - 2);\n                r8 = *r14;\n                rbx = (rbx - 0x38);\n                goto label_403f69;\n            }\n            int64_t rcx_3 = rcx_2;\n            char rdx_3 = (rdx_2 - 4);\n            uint64_t rdi = *(rcx_3 + 0x413520);\n            int64_t rax_13 = (1 - rdi);\n            int64_t* rax_14 = (rbx + (((rax_13 << 3) - rax_13) << 3));\n            r15_1 = *rax_14;\n            r10_2 = rax_14[1];\n            var_4a8_1 = rax_14[6];\n            r13_2 = rax_14[2];\n            var_4d8_1 = *rax_14;\n            r11_1 = rax_14[3];\n            var_4c8_1 = *(rax_14 + 0x10);\n            var_5d8_1 = rax_14[4];\n            var_4b8_1 = *(rax_14 + 0x20);\n            var_5e0 = rax_14[5];\n            var_5d0 = rax_14[6];\n            if (rdx_3 <= 0x57)\n            {\n                uint64_t rdx_4 = rdx_3;\n                void** var_5b0_3;\n                void** var_5b0_4;\n                void** var_5a0_2;\n                int16_t* var_5a0_3;\n                void** var_5a0_4;\n                void** var_5a0_5;\n                void** var_598_1;\n                void** var_590;\n                void* var_588_1;\n                int64_t var_580;\n                void** rax_53;\n                int32_t rax_54;\n                int64_t rax_59;\n                int64_t rax_92;\n                void* const rsi_19;\n                void* const rsi_22;\n                char* rdi_17;\n                int128_t zmm0;\n                int128_t zmm7;\n                switch (rdx_4)\n                {\n                    case 0:\n                    {\n                        zmm0 = *rbx;\n                        r9[0x14] = 1;\n                        *(r9 + 0x58) = zmm0;\n                        var_5a0_2 = r10_2;\n                        var_5a8 = r11_1;\n                        var_5b0_3 = r9;\n                        rcx_1 = &r14[-2];\n                        rdx_23 = (rbx - 0x70);\n                        r8 = 0xffffffa3;\n                        rdi_17 = dcgettext(nullptr, \"number of seconds\", 5);\n                        rax_37 = 2;\n                        break;\n                    }\n                    case 1:\n                    case 2:\n                    case 0xc:\n                    case 0xd:\n                    case 0x11:\n                    case 0x15:\n                    case 0x16:\n                    case 0x2d:\n                    case 0x46:\n                    case 0x4e:\n                    case 0x4f:\n                    case 0x50:\n                    case 0x52:\n                    {\n                        goto label_405fa1;\n                    }\n                    case 3:\n                    {\n                        var_5a0_2 = r10_2;\n                        rsi_19 = \"datetime\";\n                        var_5a8 = r11_1;\n                        r9[0x19] = (r9[0x19] + 1);\n                        r9[0x15] = (r9[0x15] + 1);\n                        var_5b0_3 = r9;\n                        break;\n                    }\n                    case 4:\n                    {\n                        var_5a0_2 = r10_2;\n                        rsi_19 = \"time\";\n                        var_5a8 = r11_1;\n                        r9[0x19] = (r9[0x19] + 1);\n                        var_5b0_3 = r9;\n                        break;\n                    }\n                    case 5:\n                    {\n                        var_5a0_2 = r10_2;\n                        rsi_19 = \"local_zone\";\n                        var_5a8 = r11_1;\n                        r9[0x17] = (r9[0x17] + 1);\n                        var_5b0_3 = r9;\n                        break;\n                    }\n                    case 6:\n                    {\n                        var_5a0_2 = r10_2;\n                        rsi_19 = \"zone\";\n                        r9[0x1a] = (r9[0x1a] + 1);\n                        var_5a8 = r11_1;\n                        var_5b0_3 = r9;\n                        break;\n                    }\n                    case 7:\n                    {\n                        var_5a0_2 = r10_2;\n                        rsi_19 = \"date\";\n                        var_5a8 = r11_1;\n                        r9[0x15] = (r9[0x15] + 1);\n                        var_5b0_3 = r9;\n                        break;\n                    }\n                    case 8:\n                    {\n                        var_5a0_2 = r10_2;\n                        rsi_19 = &data_411bfb;\n                        var_5a8 = r11_1;\n                        r9[0x16] = (r9[0x16] + 1);\n                        var_5b0_3 = r9;\n                        break;\n                    }\n                    case 9:\n                    {\n                        var_5a0_5 = r9;\n                        rsi_22 = \"relative\";\n                        var_5a8 = r10_2;\n                        var_5b0_4 = r11_1;\n                        break;\n                    }\n                    case 0xa:\n                    {\n                        char* rax_91 = dcgettext(nullptr, \"number\", 5);\n                        rdx_23 = (rbx - 0x38);\n                        rcx_1 = &r14[-1];\n                        r8 = 0xffffffa3;\n                        rax_37 = 4;\n                        if (*(r9 + 0xd9) == 0)\n                        {\n                            goto label_404549;\n                        }\n                        var_580 = 0xffffffa3;\n                        var_588_1 = rdx_23;\n                        var_590 = 4;\n                        var_598_1 = r10_2;\n                        var_5a0_3 = rcx_1;\n                        var_5a8 = r11_1;\n                        var_5b0_3 = r9;\n                        sub_403a10(rax_91, r9);\n                    label_404c66:\n                        r9 = var_5b0_3;\n                        r11_1 = var_5a8;\n                        rcx_1 = var_5a0_3;\n                        r10_2 = var_598_1;\n                        rax_37 = var_590;\n                        rdx_23 = var_588_1;\n                        r8 = 0xffffffa3;\n                        goto label_404549;\n                    }\n                    case 0xb:\n                    {\n                        var_5a0_5 = r9;\n                        rsi_22 = \"hybrid\";\n                        var_5a8 = r10_2;\n                        var_5b0_4 = r11_1;\n                        break;\n                    }\n                    case 0xe:\n                    {\n                        int64_t rax_88 = *(rbx - 0x30);\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        r9[0xa] = 0;\n                        r9[0xb] = 0;\n                        r8 = 0xffffffa3;\n                        r9[9] = rax_88;\n                        int32_t rax_89 = *rbx;\n                        r9[0xc] = 0;\n                        *(r9 + 0x1c) = rax_89;\n                        rax_37 = 7;\n                        goto label_404549;\n                    }\n                    case 0xf:\n                    {\n                        int64_t rax_86 = *(rbx - 0x30);\n                        int64_t rdx_51 = *(rbx - 0xa0);\n                        rcx_1 = &r14[-4];\n                        r9[0xb] = 0;\n                        r9[0xc] = 0;\n                        r8 = 0xffffffa3;\n                        r9[0xa] = rax_86;\n                        int32_t rax_87 = *rbx;\n                        r9[9] = rdx_51;\n                        rdx_23 = (rbx - 0xe0);\n                        *(r9 + 0x1c) = rax_87;\n                        rax_37 = 7;\n                        goto label_404549;\n                    }\n                    case 0x10:\n                    {\n                        int64_t rdx_50 = *(rbx - 0xa0);\n                        r8 = 0xffffffa3;\n                        int64_t rcx_25 = *(rbx - 0x110);\n                        r9[0xb] = *(rbx - 0x38);\n                        int64_t rax_84 = *(rbx - 0x30);\n                        r9[9] = rcx_25;\n                        rcx_1 = &r14[-6];\n                        r9[0xc] = rax_84;\n                        int32_t rax_85 = *rbx;\n                        r9[0xa] = rdx_50;\n                        rdx_23 = (rbx - 0x150);\n                        *(r9 + 0x1c) = rax_85;\n                        rax_37 = 7;\n                        goto label_404549;\n                    }\n                    case 0x12:\n                    {\n                        int64_t rax_71 = *(rbx - 0x30);\n                        r9[0xa] = 0;\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        r9[0xb] = 0;\n                        r8 = 0x14;\n                        r9[9] = rax_71;\n                        rax_37 = 8;\n                        r9[0xc] = 0;\n                        *(r9 + 0x1c) = 2;\n                        goto label_404549;\n                    }\n                    case 0x13:\n                    {\n                        int64_t rax_70 = *(rbx - 0x30);\n                        int64_t rdx_38 = *(rbx - 0xa0);\n                        r9[0xb] = 0;\n                        rcx_1 = &r14[-4];\n                        r9[0xc] = 0;\n                        r8 = 0x14;\n                        r9[9] = rdx_38;\n                        rdx_23 = (rbx - 0xe0);\n                        r9[0xa] = rax_70;\n                        rax_37 = 8;\n                        *(r9 + 0x1c) = 2;\n                        goto label_404549;\n                    }\n                    case 0x14:\n                    {\n                        int64_t rax_57 = *(rbx - 0x38);\n                        int64_t rdx_37 = *(rbx - 0xa0);\n                        *(r9 + 0x1c) = 2;\n                        r8 = 0x14;\n                        int64_t rcx_23 = *(rbx - 0x110);\n                        r9[0xb] = rax_57;\n                        int64_t rax_58 = *(rbx - 0x30);\n                        r9[9] = rcx_23;\n                        rcx_1 = &r14[-6];\n                        r9[0xa] = rdx_37;\n                        rdx_23 = (rbx - 0x150);\n                        r9[0xc] = rax_58;\n                        rax_37 = 8;\n                        goto label_404549;\n                    }\n                    case 0x17:\n                    {\n                        int64_t rcx_22 = *(rbx - 0x28);\n                        int64_t r8_4 = *rbx;\n                        int64_t rdx_36 = *(rbx - 0x30);\n                        char rsi_17 = *(rbx - 0x38);\n                        r9[0x1a] = (r9[0x1a] + 1);\n                        if (sub_403570(&r9[3], rsi_17, rdx_36, rcx_22, r8_4) == 0)\n                        {\n                            goto label_403f28;\n                        }\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        r8 = 0xffffffe5;\n                        rax_37 = 0xa;\n                        goto label_404549;\n                    }\n                    case 0x18:\n                    {\n                        rdx_23 = (rbx - 0x38);\n                        rcx_1 = &r14[-1];\n                        r8 = 0xffffffa3;\n                        *(r9 + 0x14) = *rbx;\n                        rax_37 = 0xb;\n                        goto label_404549;\n                    }\n                    case 0x19:\n                    {\n                        *(r9 + 0x14) = 1;\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        r8 = 0xffffffa3;\n                        r9[0x18] = (r9[0x18] + 1);\n                        rax_37 = 0xb;\n                        goto label_404549;\n                    }\n                    case 0x1a:\n                    {\n                        rax_54 = *rbx;\n                        break;\n                    }\n                    case 0x1b:\n                    {\n                        r9[3] = 0x6270;\n                        rdx_23 = (rbx - 0x38);\n                        rcx_1 = &r14[-1];\n                        r8 = 0xffffffa3;\n                        rax_37 = 0xc;\n                        goto label_404549;\n                    }\n                    case 0x1c:\n                    {\n                        var_5a0_4 = r10_2;\n                        var_5a8 = r11_1;\n                        r9[3] = *(rbx - 0x38);\n                        break;\n                    }\n                    case 0x1d:\n                    {\n                        var_5a0_4 = r10_2;\n                        var_5a8 = r11_1;\n                        r9[3] = 0x6270;\n                        break;\n                    }\n                    case 0x1e:\n                    {\n                        if (sub_403570(&r9[3], *(rbx - 0x38), *(rbx - 0x30), *(rbx - 0x28), *rbx) == 0)\n                        {\n                            goto label_403f28;\n                        }\n                        int64_t rax_100 = r9[3];\n                        int64_t rax_101 = (rax_100 + *(rbx - 0x70));\n                        int32_t rdx_53;\n                        rdx_53 = (rax_100 + *(rbx - 0x70));\n                        r9[3] = rax_101;\n                        if (rax_101 != rax_101)\n                        {\n                            rdx_53 = 1;\n                        }\n                        if (rdx_53 != 0)\n                        {\n                            goto label_403f28;\n                        }\n                        rdx_23 = (rbx - 0xa8);\n                        rcx_1 = &r14[-3];\n                        r8 = 0xffffffa3;\n                        rax_37 = 0xc;\n                        goto label_404549;\n                    }\n                    case 0x1f:\n                    {\n                        rax_54 = (*rbx + 0xe10);\n                        break;\n                    }\n                    case 0x20:\n                    {\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        r8 = 0xffffffa3;\n                        r9[3] = (*(rbx - 0x38) + 0xe10);\n                        rax_37 = 0xc;\n                        goto label_404549;\n                    }\n                    case 0x21:\n                    {\n                        int32_t rax_95 = *rbx;\n                        r9[1] = 0;\n                        rdx_23 = (rbx - 0x38);\n                        rcx_1 = &r14[-1];\n                        r8 = 0xffffffa3;\n                        r9[2] = rax_95;\n                        rax_37 = 0xd;\n                        goto label_404549;\n                    }\n                    case 0x22:\n                    {\n                        int32_t rax_94 = *(rbx - 0x38);\n                        r9[1] = 0;\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        r8 = 0xffffffa3;\n                        r9[2] = rax_94;\n                        rax_37 = 0xd;\n                        goto label_404549;\n                    }\n                    case 0x23:\n                    {\n                        rax_92 = *(rbx - 0x38);\n                        break;\n                    }\n                    case 0x24:\n                    {\n                        rax_92 = *(rbx - 0x30);\n                        break;\n                    }\n                    case 0x25:\n                    {\n                        rcx_1 = &r14[-3];\n                        rdx_23 = (rbx - 0xa8);\n                        r8 = 0xffffffa3;\n                        r9[7] = *(rbx - 0x68);\n                        r9[8] = *(rbx + 8);\n                        rax_37 = 0xe;\n                        goto label_404549;\n                    }\n                    case 0x26:\n                    {\n                        char rax_140 = *(r9 + 0xd9);\n                        if (*(rbx - 0xd0) <= 3)\n                        {\n                            int64_t rdi_37 = *(rbx - 0xd8);\n                            if (rax_140 != 0)\n                            {\n                                sub_403400(dcgettext(nullptr, \"warning: value %ld has less than\u2026\", 5), 0);\n                            }\n                            zmm7 = *rbx;\n                            rcx_1 = &r14[-5];\n                            rdx_23 = (rbx - 0x118);\n                            r8 = 0xffffffa3;\n                            r9[7] = rdi_37;\n                            int64_t rax_167 = *(rbx - 0x68);\n                            *(r9 + 0x20) = zmm7;\n                            r9[8] = rax_167;\n                            r9[6] = *(rbx + 0x10);\n                            rax_37 = 0xe;\n                        }\n                        else\n                        {\n                            if (rax_140 != 0)\n                            {\n                                int64_t var_5b0_12 = *(rbx - 0xd8);\n                                sub_403400(dcgettext(nullptr, \"warning: value %ld has %ld digit\u2026\", 5), 0);\n                            }\n                            zmm0 = *(rbx - 0xe0);\n                            rcx_1 = &r14[-5];\n                            rdx_23 = (rbx - 0x118);\n                            r8 = 0xffffffa3;\n                            r9[6] = *(rbx - 0xd0);\n                            int64_t rax_142 = *(rbx - 0x68);\n                            *(r9 + 0x20) = zmm0;\n                            r9[7] = rax_142;\n                            r9[8] = *(rbx + 8);\n                            rax_37 = 0xe;\n                        }\n                        goto label_404549;\n                    }\n                    case 0x27:\n                    {\n                        r9[8] = *(rbx - 0x68);\n                        r9[7] = *(rbx - 0x38);\n                        int64_t rax_139 = *(rbx + 8);\n                        r9[5] = (-rax_139);\n                        if (rax_139 == -0x8000000000000000)\n                        {\n                            goto label_403f28;\n                        }\n                        break;\n                    }\n                    case 0x28:\n                    {\n                        r9[7] = *(rbx - 0x70);\n                        int64_t rax_135 = *(rbx - 0x30);\n                        r9[8] = (-rax_135);\n                        if (rax_135 == -0x8000000000000000)\n                        {\n                            goto label_403f28;\n                        }\n                        int64_t rax_136 = *(rbx + 8);\n                        r9[5] = (-rax_136);\n                        if (rax_136 == -0x8000000000000000)\n                        {\n                            goto label_403f28;\n                        }\n                        break;\n                    }\n                    case 0x29:\n                    {\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        r8 = 0xffffffa3;\n                        r9[7] = *(rbx - 0x38);\n                        r9[8] = *(rbx + 8);\n                        rax_37 = 0xe;\n                        goto label_404549;\n                    }\n                    case 0x2a:\n                    {\n                        zmm0 = *rbx;\n                        rcx_1 = &r14[-4];\n                        rdx_23 = (rbx - 0xe0);\n                        r8 = 0xffffffa3;\n                        r9[7] = *(rbx - 0xa8);\n                        int64_t rax_130 = *(rbx - 0x68);\n                        *(r9 + 0x20) = zmm0;\n                        r9[8] = rax_130;\n                        r9[6] = *(rbx + 0x10);\n                        rax_37 = 0xe;\n                        goto label_404549;\n                    }\n                    case 0x2b:\n                    {\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        r8 = 0xffffffa3;\n                        r9[8] = *(rbx - 0x30);\n                        r9[7] = *rbx;\n                        rax_37 = 0xe;\n                        goto label_404549;\n                    }\n                    case 0x2c:\n                    {\n                        zmm7 = *rbx;\n                        r9[8] = *(rbx - 0x68);\n                        int64_t rax_125 = *(rbx - 0x38);\n                        *(r9 + 0x20) = zmm7;\n                        r9[7] = rax_125;\n                        break;\n                    }\n                    case 0x2e:\n                    {\n                        zmm0 = *(rbx - 0x70);\n                        r9[6] = *(rbx - 0x60);\n                        int64_t rax_122 = *(rbx - 0x30);\n                        *(r9 + 0x20) = zmm0;\n                        r9[7] = (-rax_122);\n                        if (rax_122 == -0x8000000000000000)\n                        {\n                            goto label_403f28;\n                        }\n                        int64_t rax_123 = *(rbx + 8);\n                        r9[8] = (-rax_123);\n                        if (rax_123 == -0x8000000000000000)\n                        {\n                            goto label_403f28;\n                        }\n                        rdx_23 = (rbx - 0xa8);\n                        rcx_1 = &r14[-3];\n                        r8 = 0xffffffa3;\n                        rax_37 = 0xf;\n                        goto label_404549;\n                    }\n                    case 0x2f:\n                    {\n                        void** rdx_54 = r9[0x12];\n                        int64_t rax_105 = *(rbx - 0x38);\n                        int64_t rdi_23 = *(rbx - 0x30);\n                        int64_t rsi_26 = *(rbx - 0x28);\n                        int64_t rcx_29 = *(rbx - 0x20);\n                        int32_t r8_7 = *(rbx - 8);\n                        int64_t rdx_55 = r9[0x10];\n                        int64_t rax_106 = r9[0x11];\n                        int64_t rdx_56 = r9[0xf];\n                        int64_t rdi_24 = *(rbx - 0x10);\n                        int64_t rdx_57 = r9[0xe];\n                        int64_t rsi_27 = *(rbx - 0x18);\n                        int64_t rdx_58 = r9[0xd];\n                        int32_t rcx_30 = r9[0x13];\n                        char rax_120;\n                        if (*rbx < 0)\n                        {\n                            int32_t rcx_37 = (rcx_30 - r8_7);\n                            r8_7 = (rcx_30 + (-r8_7));\n                            r9[0x13] = rcx_37;\n                            r9[0x12] = (rdx_54 - rdi_24);\n                            r9[0x11] = (rax_106 - rsi_27);\n                            r9[0x10] = (rdx_55 - rcx_29);\n                            r9[0xf] = (rdx_56 - rsi_26);\n                            void** rdi_39;\n                            rdi_39 = (rdx_57 + (-rdi_23));\n                            r9[0xe] = (rdx_57 - rdi_23);\n                            r9[0xd] = (rdx_58 - rax_105);\n                            rax_120 = (((((((rdx_54 + (-rdi_24)) | r8_7) | (rax_106 + (-rsi_27))) | (rdx_55 + (-rcx_29))) | (rdx_56 + (-rsi_26))) | rdi_39) | (rdx_58 + (-rax_105)));\n                        }\n                        else\n                        {\n                            int32_t rcx_31 = (rcx_30 + r8_7);\n                            r8_7 = (rcx_30 + r8_7);\n                            r9[0x13] = rcx_31;\n                            r9[0x12] = (rdx_54 + rdi_24);\n                            void** rdi_25;\n                            rdi_25 = (rax_106 + rsi_27);\n                            r9[0x11] = (rax_106 + rsi_27);\n                            r9[0x10] = (rdx_55 + rcx_29);\n                            r9[0xf] = (rdx_56 + rsi_26);\n                            void** rdx_62;\n                            rdx_62 = (rdx_57 + rdi_23);\n                            r9[0xe] = (rdx_57 + rdi_23);\n                            r9[0xd] = (rdx_58 + rax_105);\n                            rax_120 = (((((((rdx_54 + rdi_24) | r8_7) | rdi_25) | (rdx_55 + rcx_29)) | (rdx_56 + rsi_26)) | rdx_62) | (rdx_58 + rax_105));\n                        }\n                        if (rax_120 != 0)\n                        {\n                            goto label_403f28;\n                        }\n                        *(r9 + 0xa1) = 1;\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        r8 = 0xffffffa3;\n                        rax_37 = 0x10;\n                        goto label_404549;\n                    }\n                    case 0x30:\n                    case 0x31:\n                    {\n                        int32_t rax_39 = *(rbx + 0x30);\n                        bool o_3 = (rax_39 + r9[0x13]);\n                        r9[0x13] = (rax_39 + r9[0x13]);\n                        int64_t rax_41 = r9[0x12];\n                        int64_t rax_42;\n                        rax_42 = (rax_41 + *(rbx + 0x28));\n                        r9[0x12] = (rax_41 + *(rbx + 0x28));\n                        int64_t rdx_26 = r9[0x11];\n                        bool o_5 = (rdx_26 + *(rbx + 0x20));\n                        r9[0x11] = (rdx_26 + *(rbx + 0x20));\n                        int64_t rdx_28 = r9[0x10];\n                        bool o_6 = (rdx_28 + *(rbx + 0x18));\n                        r9[0x10] = (rdx_28 + *(rbx + 0x18));\n                        int64_t rdx_30 = r9[0xf];\n                        bool o_7 = (rdx_30 + *(rbx + 0x10));\n                        r9[0xf] = (rdx_30 + *(rbx + 0x10));\n                        int64_t rdx_32 = r9[0xe];\n                        void** rcx_20;\n                        rcx_20 = (rdx_32 + *(rbx + 8));\n                        r9[0xe] = (rdx_32 + *(rbx + 8));\n                        int64_t rdx_34 = r9[0xd];\n                        int64_t rcx_21;\n                        rcx_21 = (rdx_34 + *rbx);\n                        r9[0xd] = (rdx_34 + *rbx);\n                        if ((rcx_20 | ((((rax_42 | o_3) | o_5) | o_6) | o_7)) != 0)\n                        {\n                            goto label_403f28;\n                        }\n                        if (rcx_21 != 0)\n                        {\n                            goto label_403f28;\n                        }\n                        *(r9 + 0xa1) = 1;\n                        rdx_23 = (rbx - 0x38);\n                        rcx_1 = &r14[-1];\n                        r8 = 0xffffffa3;\n                        rax_37 = 0x10;\n                        goto label_404549;\n                    }\n                    case 0x32:\n                    {\n                        *var_4a8_1[4] = 0;\n                        r15_1 = *(rbx - 0x38);\n                        break;\n                    }\n                    case 0x33:\n                    {\n                        *var_4a8_1[4] = 0;\n                        r15_1 = *(rbx - 0x30);\n                        break;\n                    }\n                    case 0x34:\n                    {\n                        rdx_23 = (rbx - 0x38);\n                        rcx_1 = &r14[-1];\n                        rax_37 = 0x11;\n                        r11_1 = nullptr;\n                        r8 = 0xffffffa3;\n                        r13_2 = 0;\n                        *var_4a8_1[4] = 0;\n                        r10_2 = nullptr;\n                        var_5d0 = 0;\n                        r15_1 = 1;\n                        var_5e0 = nullptr;\n                        var_5d8_1 = 0;\n                        goto label_404549;\n                    }\n                    case 0x35:\n                    {\n                        r10_2 = *(rbx - 0x38);\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        *var_4a8_1[4] = 0;\n                        r8 = 0xffffffa3;\n                        rax_37 = 0x11;\n                        break;\n                    }\n                    case 0x36:\n                    {\n                        r10_2 = *(rbx - 0x30);\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        *var_4a8_1[4] = 0;\n                        r8 = 0xffffffa3;\n                        rax_37 = 0x11;\n                        break;\n                    }\n                    case 0x37:\n                    {\n                        rdx_23 = (rbx - 0x38);\n                        rcx_1 = &r14[-1];\n                        rax_37 = 0x11;\n                        r11_1 = nullptr;\n                        r8 = 0xffffffa3;\n                        r13_2 = 0;\n                        r15_1 = 0;\n                        *var_4a8_1[4] = 0;\n                        var_5d0 = 0;\n                        r10_2 = 1;\n                        var_5e0 = nullptr;\n                        var_5d8_1 = 0;\n                        goto label_404549;\n                    }\n                    case 0x38:\n                    {\n                        *rbx;\n                        bool o_11 = /* bool o_11 = unimplemented  {imul rax, qword [rbx]} */;\n                        zmm0 = 0;\n                        var_4a8_1 = 0;\n                        var_4d8_1 = zmm0;\n                        var_4c8_1 = zmm0;\n                        var_4b8_1 = zmm0;\n                        r13_2 = (*(rbx - 0x38) * *rbx);\n                        if (o_11)\n                        {\n                            goto label_403f28;\n                        }\n                        break;\n                    }\n                    case 0x39:\n                    {\n                        *rbx;\n                        bool o_10 = /* bool o_10 = unimplemented  {imul rax, qword [rbx]} */;\n                        zmm0 = 0;\n                        var_4a8_1 = 0;\n                        var_4d8_1 = zmm0;\n                        var_4c8_1 = zmm0;\n                        var_4b8_1 = zmm0;\n                        r13_2 = (*(rbx - 0x30) * *rbx);\n                        if (o_10)\n                        {\n                            goto label_403f28;\n                        }\n                        break;\n                    }\n                    case 0x3a:\n                    {\n                        r13_2 = *rbx;\n                        rdx_23 = (rbx - 0x38);\n                        rcx_1 = &r14[-1];\n                        rax_37 = 0x11;\n                        *var_4a8_1[4] = 0;\n                        r8 = 0xffffffa3;\n                        break;\n                    }\n                    case 0x3b:\n                    {\n                        r11_1 = *(rbx - 0x38);\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        *var_4a8_1[4] = 0;\n                        r8 = 0xffffffa3;\n                        rax_37 = 0x11;\n                        break;\n                    }\n                    case 0x3c:\n                    {\n                        r11_1 = *(rbx - 0x30);\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        *var_4a8_1[4] = 0;\n                        r8 = 0xffffffa3;\n                        rax_37 = 0x11;\n                        break;\n                    }\n                    case 0x3d:\n                    {\n                        rdx_23 = (rbx - 0x38);\n                        rcx_1 = &r14[-1];\n                        rax_37 = 0x11;\n                        r13_2 = 0;\n                        r8 = 0xffffffa3;\n                        r10_2 = nullptr;\n                        r15_1 = 0;\n                        *var_4a8_1[4] = 0;\n                        var_5d0 = 0;\n                        r11_1 = 1;\n                        var_5e0 = nullptr;\n                        var_5d8_1 = 0;\n                        goto label_404549;\n                    }\n                    case 0x3e:\n                    {\n                        *var_4a8_1[4] = 0;\n                        rax_59 = *(rbx - 0x38);\n                        break;\n                    }\n                    case 0x3f:\n                    {\n                        *var_4a8_1[4] = 0;\n                        rax_59 = *(rbx - 0x30);\n                        break;\n                    }\n                    case 0x40:\n                    {\n                        rdx_23 = (rbx - 0x38);\n                        rcx_1 = &r14[-1];\n                        rax_37 = 0x11;\n                        r11_1 = nullptr;\n                        r8 = 0xffffffa3;\n                        r13_2 = 0;\n                        r10_2 = nullptr;\n                        r15_1 = 0;\n                        *var_4a8_1[4] = 0;\n                        var_5d0 = 0;\n                        var_5e0 = nullptr;\n                        var_5d8_1 = 1;\n                        goto label_404549;\n                    }\n                    case 0x41:\n                    {\n                        *var_4a8_1[4] = 0;\n                        rax_53 = *(rbx - 0x38);\n                        break;\n                    }\n                    case 0x42:\n                    {\n                        *var_4a8_1[4] = 0;\n                        rax_53 = *(rbx - 0x30);\n                        break;\n                    }\n                    case 0x43:\n                    case 0x44:\n                    {\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        *var_4a8_1[4] = 0;\n                        r8 = 0xffffffa3;\n                        var_5e0 = *(rbx - 0x38);\n                        var_5d0 = *(rbx - 0x30);\n                        rax_37 = 0x11;\n                        break;\n                    }\n                    case 0x45:\n                    {\n                        rdx_23 = (rbx - 0x38);\n                        rcx_1 = &r14[-1];\n                        *var_4a8_1[4] = 0;\n                        r8 = 0xffffffa3;\n                        rax_37 = 0x11;\n                        var_5d0 = 0;\n                        var_5e0 = 1;\n                        break;\n                    }\n                    case 0x47:\n                    {\n                        r15_1 = *(rbx - 0x30);\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        *var_4a8_1[4] = 0;\n                        r8 = 0x3c;\n                        rax_37 = 0x12;\n                        break;\n                    }\n                    case 0x48:\n                    {\n                        r10_2 = *(rbx - 0x30);\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        *var_4a8_1[4] = 0;\n                        r8 = 0x3c;\n                        rax_37 = 0x12;\n                        break;\n                    }\n                    case 0x49:\n                    {\n                        *rbx;\n                        bool o_12 = /* bool o_12 = unimplemented  {imul rax, qword [rbx]} */;\n                        zmm0 = 0;\n                        var_4a8_1 = 0;\n                        var_4d8_1 = zmm0;\n                        var_4c8_1 = zmm0;\n                        var_4b8_1 = zmm0;\n                        r13_2 = (*(rbx - 0x30) * *rbx);\n                        if (o_12)\n                        {\n                            goto label_403f28;\n                        }\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        r8 = 0x3c;\n                        rax_37 = 0x12;\n                        break;\n                    }\n                    case 0x4a:\n                    {\n                        r11_1 = *(rbx - 0x30);\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        *var_4a8_1[4] = 0;\n                        r8 = 0x3c;\n                        rax_37 = 0x12;\n                        break;\n                    }\n                    case 0x4b:\n                    {\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        *var_4a8_1[4] = 0;\n                        r8 = 0x3c;\n                        var_5d8_1 = *(rbx - 0x30);\n                        rax_37 = 0x12;\n                        break;\n                    }\n                    case 0x4c:\n                    {\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        *var_4a8_1[4] = 0;\n                        r8 = 0x3c;\n                        var_5e0 = *(rbx - 0x30);\n                        rax_37 = 0x12;\n                        break;\n                    }\n                    case 0x4d:\n                    {\n                        r13_2 = *rbx;\n                        rdx_23 = (rbx - 0x38);\n                        rcx_1 = &r14[-1];\n                        rax_37 = 0x13;\n                        *var_4a8_1[4] = 0;\n                        r8 = 0xffffffa3;\n                        break;\n                    }\n                    case 0x51:\n                    {\n                        r15_1 = *(rbx + 8);\n                        rdx_23 = (rbx - 0x38);\n                        rcx_1 = &r14[-1];\n                        r10_2 = nullptr;\n                        r8 = 0xffffffa3;\n                        rax_37 = 0x15;\n                        goto label_404549;\n                    }\n                    case 0x53:\n                    {\n                        r15_1 = *(rbx + 8);\n                        rdx_23 = (rbx - 0x38);\n                        rcx_1 = &r14[-1];\n                        r10_2 = nullptr;\n                        r8 = 0xffffffa4;\n                        rax_37 = 0x16;\n                        goto label_404549;\n                    }\n                    case 0x54:\n                    {\n                        int64_t var_5f8_2 = *(rbx + 0x10);\n                        int64_t var_600_2 = *(rbx + 8);\n                        sub_403110(r9, *rbx, rdi, rdx_4);\n                        rdx_23 = (rbx - 0x38);\n                        rcx_1 = &r14[-1];\n                        r8 = 0xffffffa3;\n                        rax_37 = 0x17;\n                        goto label_404549;\n                    }\n                    case 0x55:\n                    {\n                        int64_t var_5f8_1 = *(rbx - 0x28);\n                        int64_t var_600_1 = *(rbx - 0x30);\n                        sub_403110(r9, *(rbx - 0x38), rdi, rdx_4);\n                        int32_t rax_146 = *(rbx + 0x30);\n                        bool o_28 = (rax_146 + r9[0x13]);\n                        r9[0x13] = (rax_146 + r9[0x13]);\n                        int64_t rax_148 = r9[0x12];\n                        int64_t rax_149;\n                        rax_149 = (rax_148 + *(rbx + 0x28));\n                        r9[0x12] = (rax_148 + *(rbx + 0x28));\n                        int64_t rdx_75 = r9[0x11];\n                        bool o_30 = (rdx_75 + *(rbx + 0x20));\n                        r9[0x11] = (rdx_75 + *(rbx + 0x20));\n                        int64_t rdx_77 = r9[0x10];\n                        bool o_31 = (rdx_77 + *(rbx + 0x18));\n                        r9[0x10] = (rdx_77 + *(rbx + 0x18));\n                        int64_t rdx_79 = r9[0xf];\n                        bool o_32 = (rdx_79 + *(rbx + 0x10));\n                        r9[0xf] = (rdx_79 + *(rbx + 0x10));\n                        int64_t rdx_81 = r9[0xe];\n                        bool o_33 = (rdx_81 + *(rbx + 8));\n                        r9[0xe] = (rdx_81 + *(rbx + 8));\n                        int64_t rdx_83 = r9[0xd];\n                        int64_t rcx_34;\n                        rcx_34 = (rdx_83 + *rbx);\n                        r9[0xd] = (rdx_83 + *rbx);\n                        if ((o_33 | ((((rax_149 | o_28) | o_30) | o_31) | o_32)) != 0)\n                        {\n                            goto label_403f28;\n                        }\n                        if (rcx_34 != 0)\n                        {\n                            goto label_403f28;\n                        }\n                        *(r9 + 0xa1) = 1;\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        r8 = 0xffffffa3;\n                        rax_37 = 0x18;\n                        goto label_404549;\n                    }\n                    case 0x56:\n                    {\n                        r8 = 0x2b;\n                        r15_1 = -1;\n                        rcx_1 = (r14 - (rdi + rdi));\n                        rax_37 = 0x19;\n                        rdx_23 = (rbx - (((rdi << 3) - rdi) << 3));\n                        goto label_404549;\n                    }\n                    case 0x57:\n                    {\n                        r15_1 = *(rbx + 8);\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        r8 = 0x2b;\n                        rax_37 = 0x19;\n                        goto label_404549;\n                    }\n                }\n                void** rsi_21;\n                char* rdi_20;\n                switch (rdx_4)\n                {\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    {\n                        rdx_23 = (rbx - 0x38);\n                        rcx_1 = &r14[-1];\n                        r8 = 0xffffffa3;\n                        rdi_17 = dcgettext(nullptr, rsi_19, 5);\n                        rax_37 = 4;\n                        break;\n                    }\n                    case 9:\n                    case 0xb:\n                    {\n                        r9 = var_5a0_5;\n                        rdx_23 = (rbx - 0x38);\n                        rcx_1 = &r14[-1];\n                        rdi_20 = dcgettext(nullptr, rsi_22, 5);\n                        r8 = 0xffffffa3;\n                        rax_37 = 4;\n                        r11_1 = var_5b0_4;\n                        r10_2 = var_5a8;\n                        if (*(r9 + 0xd9) == 0)\n                        {\n                            goto label_404549;\n                        }\n                        var_580 = 0xffffffa3;\n                        rsi_21 = r9;\n                        var_588_1 = rdx_23;\n                        var_590 = 4;\n                        var_598_1 = r10_2;\n                        var_5a0_3 = rcx_1;\n                        var_5a8 = r11_1;\n                        var_5b0_3 = r9;\n                    label_4050ed:\n                        sub_4036f0(rdi_20, rsi_21);\n                        goto label_404c66;\n                    }\n                    case 0x1a:\n                    case 0x1f:\n                    {\n                        r9[3] = rax_54;\n                        rdx_23 = (rbx - 0x38);\n                        rcx_1 = &r14[-1];\n                        r8 = 0xffffffa3;\n                        rax_37 = 0xc;\n                        goto label_404549;\n                    }\n                    case 0x1c:\n                    case 0x1d:\n                    {\n                        int32_t rax_72 = *(rbx + 0x30);\n                        bool o_13 = (rax_72 + r9[0x13]);\n                        r9[0x13] = (rax_72 + r9[0x13]);\n                        int64_t rax_74 = r9[0x12];\n                        int64_t rax_75;\n                        rax_75 = (rax_74 + *(rbx + 0x28));\n                        r9[0x12] = (rax_74 + *(rbx + 0x28));\n                        int64_t rdx_40 = r9[0x11];\n                        bool o_15 = (rdx_40 + *(rbx + 0x20));\n                        r9[0x11] = (rdx_40 + *(rbx + 0x20));\n                        int64_t rdx_42 = r9[0x10];\n                        bool o_16 = (rdx_42 + *(rbx + 0x18));\n                        r9[0x10] = (rdx_42 + *(rbx + 0x18));\n                        int64_t rdx_44 = r9[0xf];\n                        bool o_17 = (rdx_44 + *(rbx + 0x10));\n                        r9[0xf] = (rdx_44 + *(rbx + 0x10));\n                        int64_t rdx_46 = r9[0xe];\n                        bool o_18 = (rdx_46 + *(rbx + 8));\n                        r9[0xe] = (rdx_46 + *(rbx + 8));\n                        int64_t rdx_48 = r9[0xd];\n                        int64_t rcx_24;\n                        rcx_24 = (rdx_48 + *rbx);\n                        r9[0xd] = (rdx_48 + *rbx);\n                        if ((o_18 | ((((rax_75 | o_13) | o_15) | o_16) | o_17)) != 0)\n                        {\n                            goto label_403f28;\n                        }\n                        if (rcx_24 != 0)\n                        {\n                            goto label_403f28;\n                        }\n                        *(r9 + 0xa1) = 1;\n                        var_5b0_3 = r9;\n                        r9 = var_5b0_3;\n                        rcx_1 = &r14[-2];\n                        rdx_23 = (rbx - 0x70);\n                        rdi_20 = dcgettext(nullptr, \"relative\", 5);\n                        r8 = 0xffffffa3;\n                        rax_37 = 0xc;\n                        r11_1 = var_5a8;\n                        r10_2 = var_5a0_4;\n                        if (*(r9 + 0xd9) == 0)\n                        {\n                            goto label_404549;\n                        }\n                        var_580 = 0xffffffa3;\n                        rsi_21 = r9;\n                        var_588_1 = rdx_23;\n                        var_590 = 0xc;\n                        var_598_1 = r10_2;\n                        var_5a0_3 = rcx_1;\n                        goto label_4050ed;\n                    }\n                    case 0x23:\n                    case 0x24:\n                    {\n                        r9[1] = rax_92;\n                        int32_t rax_93 = *rbx;\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        r9[0x1c] = 1;\n                        r8 = 0xffffffa3;\n                        r9[2] = rax_93;\n                        rax_37 = 0xd;\n                        goto label_404549;\n                    }\n                    case 0x27:\n                    case 0x28:\n                    case 0x2c:\n                    {\n                        rcx_1 = &r14[-3];\n                        rdx_23 = (rbx - 0xa8);\n                        r8 = 0xffffffa3;\n                        r9[6] = *(rbx + 0x10);\n                        rax_37 = 0xe;\n                        goto label_404549;\n                    }\n                    case 0x32:\n                    case 0x33:\n                    {\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        r8 = 0xffffffa3;\n                        rax_37 = 0x11;\n                        break;\n                    }\n                    case 0x35:\n                    case 0x36:\n                    case 0x48:\n                    {\n                        var_5d0 = 0;\n                        r11_1 = nullptr;\n                        r13_2 = 0;\n                        r15_1 = 0;\n                        var_5e0 = nullptr;\n                        var_5d8_1 = 0;\n                        goto label_404549;\n                    }\n                    case 0x38:\n                    case 0x39:\n                    {\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        r8 = 0xffffffa3;\n                        rax_37 = 0x11;\n                        break;\n                    }\n                    case 0x3b:\n                    case 0x3c:\n                    case 0x4a:\n                    {\n                        var_5d0 = 0;\n                        r13_2 = 0;\n                        r10_2 = nullptr;\n                        r15_1 = 0;\n                        var_5e0 = nullptr;\n                        var_5d8_1 = 0;\n                        goto label_404549;\n                    }\n                    case 0x3e:\n                    case 0x3f:\n                    {\n                        var_5d8_1 = rax_59;\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        r8 = 0xffffffa3;\n                        rax_37 = 0x11;\n                        break;\n                    }\n                    case 0x41:\n                    case 0x42:\n                    {\n                        var_5e0 = rax_53;\n                        rdx_23 = (rbx - 0x70);\n                        rcx_1 = &r14[-2];\n                        r8 = 0xffffffa3;\n                        rax_37 = 0x11;\n                        break;\n                    }\n                }\n                switch (rdx_4)\n                {\n                    case 0:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    {\n                        r9 = var_5b0_3;\n                        r11_1 = var_5a8;\n                        r10_2 = var_5a0_2;\n                        if (*(r9 + 0xd9) == 0)\n                        {\n                            goto label_404549;\n                        }\n                        var_580 = 0xffffffa3;\n                        var_588_1 = rdx_23;\n                        var_590 = rax_37;\n                        var_598_1 = r10_2;\n                        var_5a0_3 = rcx_1;\n                        sub_403a10(rdi_17, r9);\n                        goto label_404c66;\n                    }\n                    case 0x32:\n                    case 0x33:\n                    case 0x47:\n                    {\n                        var_5d0 = 0;\n                        r11_1 = nullptr;\n                        r13_2 = 0;\n                        r10_2 = nullptr;\n                        var_5e0 = nullptr;\n                        var_5d8_1 = 0;\n                        goto label_404549;\n                    }\n                    case 0x38:\n                    case 0x39:\n                    case 0x3a:\n                    case 0x49:\n                    case 0x4d:\n                    {\n                        var_5d0 = 0;\n                        r11_1 = nullptr;\n                        r10_2 = nullptr;\n                        r15_1 = 0;\n                        var_5e0 = nullptr;\n                        var_5d8_1 = 0;\n                        goto label_404549;\n                    }\n                    case 0x3e:\n                    case 0x3f:\n                    case 0x4b:\n                    {\n                        r11_1 = nullptr;\n                        r13_2 = 0;\n                        r10_2 = nullptr;\n                        r15_1 = 0;\n                        var_5d0 = 0;\n                        var_5e0 = nullptr;\n                        goto label_404549;\n                    }\n                    case 0x41:\n                    case 0x42:\n                    case 0x4c:\n                    {\n                        var_5d0 = 0;\n                        break;\n                    }\n                }\n                if ((((((rdx_4 == 0x41 || rdx_4 == 0x42) || rdx_4 == 0x43) || rdx_4 == 0x44) || rdx_4 == 0x45) || rdx_4 == 0x4c))\n                {\n                    r11_1 = nullptr;\n                    r13_2 = 0;\n                    r10_2 = nullptr;\n                    r15_1 = 0;\n                    var_5d8_1 = 0;\n                    goto label_404549;\n                }\n            }\n            else\n            {\n            label_405fa1:\n                rax_37 = (*(rcx_3 + 0x413580) - 0x1c);\n                r8 = *(rax_37 + 0x413700);\n                rcx_1 = (r14 - (rdi + rdi));\n                rdx_23 = (rbx - (rdi * 0x38));\n            label_404549:\n                var_4d8_1 = r15_1;\n                rbx = (rdx_23 + 0x38);\n                *var_4d8_1[8] = r10_2;\n                var_4b8_1 = var_5d8_1;\n                var_4c8_1 = r13_2;\n                *var_4c8_1[8] = r11_1;\n                *var_4b8_1[8] = var_5e0;\n                var_4a8_1 = var_5d0;\n                *(rdx_23 + 0x38) = var_4d8_1;\n                *(rdx_23 + 0x68) = var_4a8_1;\n                *(rdx_23 + 0x48) = var_4c8_1;\n                *(rdx_23 + 0x58) = var_4b8_1;\n                int32_t rdx_24 = *rcx_1;\n                int32_t r8_1 = (r8 + rdx_24);\n                int16_t rsi_15 = rdx_24;\n                if (r8_1 <= 0x70)\n                {\n                    int64_t r8_2 = r8_1;\n                    rdx_24 = *(r8_2 + 0x4135e0);\n                    if (rsi_15 == rdx_24)\n                    {\n                        r8 = *(r8_2 + \"OCDEFGH:IdkJKenL12efqM;N=>?@AB=>\u2026\");\n                        continue;\n                    }\n                }\n                r8 = *(rax_37 + 0x4136e0);\n            }\n        }\n    }\n    rcx_1 = r14;\n    rdx_23 = rbx;\n    r15_1 = *(rbx + 0x38);\n    var_4d8_1 = *(rbx + 0x38);\n    r10_2 = *(rbx + 0x40);\n    r13_2 = *(rbx + 0x48);\n    var_4a8_1 = *(rbx + 0x68);\n    r11_1 = *(rbx + 0x50);\n    var_4c8_1 = *(rbx + 0x48);\n    var_4b8_1 = *(rbx + 0x58);\n    var_5d8_1 = *(rbx + 0x58);\n    var_5e0 = *(rbx + 0x60);\n    var_5d0 = *(rbx + 0x68);\n    rax_37 = -0x1c;\n    goto label_404549;\n}\n\n"
        },
        {
            "funcName": "sub_406030",
            "funcStartAddr": "0x406030",
            "funcEndAddr": "0x407ff6",
            "decompiledFuncCode": "uint64_t sub_406030(struct tm* arg1, char* arg2, int64_t* arg3, char arg4, \n    int64_t** arg5, char* arg6)\n{\n    int64_t* r13 = arg3;\n    char* var_428 = arg6;\n    uint64_t rax = strlen(arg2);\n    if (r13 == 0)\n    {\n        void var_3d8;\n        r13 = &var_3d8;\n        sub_4030d0(&var_3d8);\n    }\n    char* rax_1 = r13[1];\n    int64_t rbx = *r13;\n    char* r12 = arg2;\n    uint64_t rax_2 = *arg2;\n    bool c = rax_2 < 0x20;\n    bool z = rax_2 == 0x20;\n    if ((!((!z) && (!c))))\n    {\n        c = (TEST_BITQ(0x100003e00, rax_2));\n        if (c)\n        {\n            do\n            {\n                r12 = &r12[1];\n                char rcx_8 = *r12;\n                c = rcx_8 < 0x20;\n                z = rcx_8 == 0x20;\n                if (((!z) && (!c)))\n                {\n                    break;\n                }\n                c = false;\n                z = ((1 << rcx_8) & 0x100003e00) == 0;\n            } while ((!z));\n        }\n    }\n    char const* const rdi_1 = \"TZ=\"\";\n    int64_t rcx = 4;\n    char* rsi = r12;\n    while (rcx != 0)\n    {\n        char temp0_1 = *rsi;\n        char const temp1_1 = *rdi_1;\n        c = temp0_1 < temp1_1;\n        z = temp0_1 == temp1_1;\n        rsi = &rsi[1];\n        rdi_1 = &rdi_1[1];\n        rcx = (rcx - 1);\n        if ((!z))\n        {\n            break;\n        }\n    }\n    rax_2 = ((!z) && (!c));\n    rax_2 = (rax_2 - 0);\n    char* var_430_1;\n    int32_t var_328;\n    char rax_3;\n    int64_t** rax_54;\n    uint32_t rbx_1;\n    char r15_1;\n    int64_t** r15_2;\n    if (rax_2 == 0)\n    {\n        r15_1 = r12[4];\n        void* rsi_1 = &r12[4];\n        if (r15_1 != 0)\n        {\n            void* rdx = rsi_1;\n            rax_3 = r15_1;\n            size_t rdi_2 = 1;\n            do\n            {\n                void* rax_4;\n                if (rax_3 == 0x5c)\n                {\n                    rax_4 = (rdx + 1);\n                    char rdx_1 = *(rdx + 1);\n                    if ((rdx_1 != 0x5c && rdx_1 != 0x22))\n                    {\n                        break;\n                    }\n                }\n                else\n                {\n                    if (rax_3 == 0x22)\n                    {\n                        break;\n                    }\n                    rax_4 = rdx;\n                }\n                rdx = (rax_4 + 1);\n                rax_3 = *(rax_4 + 1);\n                rdi_2 = (rdi_2 + 1);\n            } while (rax_3 != 0);\n            if (rax_3 == 0x22)\n            {\n                if (rdi_2 <= 0x64)\n                {\n                    var_430_1 = nullptr;\n                    void var_238;\n                    var_428 = &var_238;\n                }\n                else\n                {\n                    char* rax_62 = malloc(rdi_2);\n                    var_428 = rax_62;\n                    var_430_1 = rax_62;\n                    if (rax_62 == 0)\n                    {\n                        goto label_406ac0;\n                    }\n                }\n                char* rdx_16 = var_428;\n                if (r15_1 != 0x22)\n                {\n                    do\n                    {\n                        void* const rax_52;\n                        rax_52 = r15_1 == 0x5c;\n                        rdx_16 = &rdx_16[1];\n                        void* rax_53 = (rax_52 + rsi_1);\n                        r15_1 = *(rax_53 + 1);\n                        rsi_1 = (rax_53 + 1);\n                        rdx_16[-1] = *rax_53;\n                    } while (r15_1 != 0x22);\n                }\n                *rdx_16 = 0;\n                rax_54 = sub_40bea0(var_428);\n                r15_2 = rax_54;\n                if (rax_54 == 0)\n                {\n                    rbx_1 = 0;\n                }\n                else\n                {\n                    uint64_t rax_55 = *(rsi_1 + 1);\n                    r12 = (rsi_1 + 1);\n                    if ((rax_55 <= 0x20 && (TEST_BITQ(0x100003e00, rax_55))))\n                    {\n                        char rcx_10;\n                        do\n                        {\n                            r12 = &r12[1];\n                            rcx_10 = *r12;\n                            if (rcx_10 > 0x20)\n                            {\n                                break;\n                            }\n                        } while (((1 << rcx_10) & 0x100003e00) != 0);\n                    }\n                    if (sub_40c180(r15_2, r13, &var_328) != 0)\n                    {\n                        goto label_406135;\n                    }\n                    rbx_1 = 0;\n                }\n            }\n        }\n    }\n    struct tm* rax_5;\n    if (((rax_2 != 0 || (rax_2 == 0 && r15_1 == 0)) || ((rax_2 == 0 && r15_1 != 0) && rax_3 != 0x22)))\n    {\n        rax_5 = sub_40c180(arg5, r13, &var_328);\n        if (rax_5 == 0)\n        {\n        label_406ac0:\n            var_430_1 = nullptr;\n            rbx_1 = 0;\n        }\n        else\n        {\n            var_430_1 = nullptr;\n            r15_2 = arg5;\n        label_406135:\n            int128_t zmm0 = 0;\n            int64_t var_128_1 = 0;\n            if (*r12 == 0)\n            {\n                r12 = \"0\";\n            }\n            int32_t var_13c_1 = 2;\n            char* var_158 = r12;\n            int32_t var_314;\n            int64_t rax_8 = (var_314 + 0x76c);\n            bool var_7f_2 = (arg4 & 1);\n            int64_t var_f8_1 = rax_1;\n            int32_t r12_2 = 0x76a700;\n            int32_t var_318;\n            int64_t rax_11 = (var_318 + 1);\n            int32_t var_31c;\n            int64_t rax_12 = var_31c;\n            int64_t var_c0_1 = 0;\n            int16_t var_b8_1 = 0;\n            int32_t var_308;\n            int32_t var_388_1 = var_308;\n            int64_t var_a0_1 = 0;\n            int64_t var_98_1 = 0;\n            char var_80_1 = 0;\n            int16_t var_7e_1 = 0;\n            int32_t var_7c_1 = 0;\n            char var_78_1 = 0;\n            int32_t var_68_1 = 0x10d;\n            char* var_60_1 = nullptr;\n            time_t var_2a8;\n            int16_t var_1c8;\n            char* var_198;\n            do\n            {\n                int64_t rax_17 = r12_2;\n                time_t rax_18 = (rax_17 + rbx);\n                if ((rax_17 + rbx))\n                {\n                    break;\n                }\n                var_2a8 = rax_18;\n                int32_t var_1a8;\n                if ((sub_40c180(r15_2, &var_2a8, &var_1c8) != 0 && (var_198 != 0 && var_1a8 != var_308)))\n                {\n                    var_60_1 = var_198;\n                    int32_t var_58_1 = 0x10d;\n                    int32_t var_54_1 = var_1a8;\n                    int64_t var_50_1 = 0;\n                    break;\n                }\n                r12_2 = (r12_2 + 0x76a700);\n            } while (r12_2 != 0x1da9c00);\n            char* var_2f8;\n            if (((var_2f8 != 0 && var_60_1 != 0) && strcmp(var_2f8, var_60_1) == 0))\n            {\n                int32_t var_64_2 = 0xffffffff;\n                int64_t var_60_2 = 0;\n            }\n            if (sub_403db0(&var_158) != 0)\n            {\n                rbx_1 = var_7f_2;\n                if (rbx_1 != 0)\n                {\n                    char* rax_51;\n                    if (var_158 < &arg2[rax])\n                    {\n                        rax_51 = dcgettext(nullptr, \"error: parsing failed, stopped a\u2026\", 5);\n                    }\n                    else\n                    {\n                        rax_51 = dcgettext(nullptr, \"error: parsing failed\\n\", 5);\n                    }\n                    rbx_1 = 0;\n                    sub_403400(rax_51, 0);\n                }\n            }\n            else\n            {\n                if (var_7f_2 == 0)\n                {\n                    rbx_1 = 0;\n                }\n                else\n                {\n                    sub_403400(dcgettext(nullptr, \"input timezone: \", 5), 0);\n                    char const* const rsi_18 = \"parsed date/time string\";\n                    bool c_2;\n                    bool z_1;\n                    if (var_428 == 0)\n                    {\n                        rsi_18 = \"system default\";\n                    }\n                    else\n                    {\n                        c_2 = arg5 < r15_2;\n                        z_1 = arg5 == r15_2;\n                        if (z_1)\n                        {\n                            char* rsi_30 = var_428;\n                            char const* const rdi_42 = \"UTC0\";\n                            int64_t rcx_15 = 5;\n                            while (rcx_15 != 0)\n                            {\n                                char temp4_1 = *rsi_30;\n                                char const temp5_1 = *rdi_42;\n                                c_2 = temp4_1 < temp5_1;\n                                z_1 = temp4_1 == temp5_1;\n                                rsi_30 = &rsi_30[1];\n                                rdi_42 = &rdi_42[1];\n                                rcx_15 = (rcx_15 - 1);\n                                if ((!z_1))\n                                {\n                                    break;\n                                }\n                            }\n                            rsi_18 = \"TZ=\"UTC0\" environment value or -\u2026\";\n                        }\n                    }\n                    if ((var_428 == 0 || ((var_428 != 0 && z_1) && (((!z_1) && (!c_2)) - 0) == 0)))\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, rsi_18, 5));\n                    }\n                    if (var_428 != 0)\n                    {\n                        char* rax_60;\n                        char* rcx_11;\n                        if ((z_1 && (((!z_1) && (!c_2)) - 0) != 0))\n                        {\n                            rax_60 = dcgettext(nullptr, \"TZ=\"%s\" environment value\", 5);\n                            rcx_11 = var_428;\n                        }\n                        if ((!z_1))\n                        {\n                            rax_60 = dcgettext(nullptr, \"TZ=\"%s\" in date string\", 5);\n                            rcx_11 = var_428;\n                        }\n                        if (((!z_1) || (z_1 && (((!z_1) && (!c_2)) - 0) != 0)))\n                        {\n                            __fprintf_chk(stderr, 1, rax_60, rcx_11);\n                        }\n                    }\n                    fputc(0xa, stderr);\n                    rbx_1 = var_7f_2;\n                }\n                int64_t r12_3 = rax_8;\n                int32_t var_394_1;\n                bool rbp_2;\n                if (r12_3 < 0)\n                {\n                    rbp_2 = (-0x76c + (-r12_3));\n                    var_394_1 = (-0x76c - r12_3);\n                    if ((-0x76c - r12_3) != (-0x76c - r12_3))\n                    {\n                        rbp_2 = true;\n                    }\n                }\n                else\n                {\n                    char rbp_1 = 0;\n                    int64_t rax_23 = (r12_3 - 0x76c);\n                    if (((r12_3 >= 0x76c && rax_23 < 0) || (r12_3 < 0x76c && rax_23 >= 0)))\n                    {\n                        rbp_1 = 1;\n                    }\n                    var_394_1 = rax_23;\n                    if (rax_23 != rax_23)\n                    {\n                        rbp_1 = 1;\n                    }\n                    rbp_2 = (rbp_1 & 1);\n                }\n                bool rcx_2;\n                int32_t rdx_7;\n                int64_t rdx_8;\n                char const* const rsi_31;\n                if (rbp_2 == 0)\n                {\n                    rdx_7 = (rax_11 - 1);\n                    int32_t rsi_5 = (rax_11 - 1);\n                    int32_t var_398_1 = (rax_11 - 1);\n                    if ((rax_11 - 1) != (rax_11 - 1))\n                    {\n                        rdx_7 = 1;\n                    }\n                    rcx_2 = var_7f_2;\n                    if (rdx_7 == 0)\n                    {\n                        rdx_8 = rax_12;\n                        uint32_t var_39c_1 = rax_12;\n                        uint32_t rdx_9 = rax_12;\n                        int64_t rax_26;\n                        rax_26 = rax_12 != rdx_8;\n                        uint32_t var_420_1 = rax_26;\n                        if (rax_12 == rdx_8)\n                        {\n                            int64_t var_3a8 = 0;\n                            int32_t var_3a0_1 = 0;\n                            var_f8_1 = 0;\n                            int32_t rdi_7;\n                            int32_t r8;\n                            int32_t r9;\n                            if (rcx_2 == 0)\n                            {\n                                r9 = 0;\n                                r8 = 0;\n                                rdi_7 = 0;\n                            }\n                            else\n                            {\n                                sub_403400(\"warning: using midnight as start\u2026\", 0);\n                                rdi_7 = var_3a8;\n                                r8 = *var_3a8[4];\n                                r9 = var_3a0_1;\n                                rdx_9 = var_39c_1;\n                                rsi_5 = var_398_1;\n                            }\n                            int32_t rax_28 = var_388_1;\n                            int32_t var_368 = rdi_7;\n                            time_t rax_29 = sub_40c230(r15_2, &var_3a8);\n                            time_t rbx_2 = rax_29;\n                            char* var_418;\n                            if (sub_4034c0(r15_2, &var_368, &var_3a8, rax_29) == 0)\n                            {\n                                int64_t var_3f0_1 = 0;\n                                int32_t r10_1 = var_368;\n                                int32_t r9_1 = var_3a8;\n                                struct tm* var_410;\n                                var_410 = r9;\n                                int32_t rcx_4 = *var_3a8[4];\n                                uint64_t var_408;\n                                var_408 = var_3a0_1;\n                                var_428 = rdx_9;\n                                var_418 = var_39c_1;\n                                void* var_400;\n                                var_400 = var_394_1;\n                                char const* const rax_43;\n                                char const* const rdx_14;\n                                if ((r10_1 == r9_1 && r8 == rcx_4))\n                                {\n                                    char const* const rcx_5;\n                                    char const* const r8_2;\n                                    if (((((var_428 == var_418 && var_410 != var_408) && rsi_5 == var_398_1) && var_400 == var_394_1) && var_7f_2 != 0))\n                                    {\n                                        sub_403400(dcgettext(nullptr, \"error: invalid date/time value:\\n\", 5), 0);\n                                        sub_403880(&var_368, &var_158, &var_1c8);\n                                        sub_403400(dcgettext(nullptr, \"    user provided time: '%s'\\n\", 5), 0);\n                                        sub_403880(&var_3a8, &var_158, &var_1c8);\n                                        sub_403400(dcgettext(nullptr, \"       normalized time: '%s'\\n\", 5), 0);\n                                        rax_43 = &data_414b79[0x1b];\n                                        rcx_5 = \"--\";\n                                        var_420_1 = 1;\n                                        rdx_14 = &data_414b79[0x1b];\n                                    label_406709:\n                                        r8_2 = &data_414b79[0x1b];\n                                    label_406717:\n                                        char const* const rdi_15 = \"--\";\n                                        if (rsi_5 == var_398_1)\n                                        {\n                                            rdi_15 = &data_414b79[0x1b];\n                                        }\n                                        char const* const r9_2 = \"----\";\n                                        if (var_400 == var_394_1)\n                                        {\n                                            r9_2 = &data_414b79[0x1b];\n                                        }\n                                        int64_t var_440;\n                                        __snprintf_chk(&var_1c8, 0x64, 1, 0x64, \"                                \u2026\", r9_2, rdi_15, r8_2, rcx_5, rax_43, rdx_14, var_440);\n                                        int64_t rax_45 = 0x33;\n                                        int64_t rdx_15 = 0x34;\n                                        if (*var_198[3] == 0x20)\n                                        {\n                                            do\n                                            {\n                                                rdx_15 = rax_45;\n                                                if (rax_45 == 0)\n                                                {\n                                                    break;\n                                                }\n                                                rax_45 = (rax_45 - 1);\n                                            } while (*(&var_1c8 + rax_45) == 0x20);\n                                        }\n                                        *(&var_1c8 + rdx_15) = 0;\n                                        sub_403400(\"%s\\n\", 0);\n                                        sub_403400(dcgettext(nullptr, \"     possible reasons:\\n\", 5), 0);\n                                        if (var_420_1 != 0)\n                                        {\n                                            sub_403400(dcgettext(nullptr, \"       non-existing due to dayli\u2026\", 5), 0);\n                                        }\n                                        if ((var_428 != var_418 && rsi_5 != var_398_1))\n                                        {\n                                            sub_403400(dcgettext(nullptr, \"       invalid day/month combina\u2026\", 5), 0);\n                                        }\n                                        sub_403400(dcgettext(nullptr, \"       numeric values overflow;\\n\", 5), 0);\n                                        dcgettext(nullptr, \"missing timezone\", 5);\n                                        sub_403400(\"       %s\\n\", 0);\n                                    }\n                                    if (((((var_428 != var_418 || (var_428 == var_418 && var_410 == var_408)) || ((var_428 == var_418 && var_410 != var_408) && rsi_5 != var_398_1)) || (((var_428 == var_418 && var_410 != var_408) && rsi_5 == var_398_1) && var_400 != var_394_1)) && var_7f_2 != 0))\n                                    {\n                                        sub_403400(dcgettext(nullptr, \"error: invalid date/time value:\\n\", 5), 0);\n                                        sub_403880(&var_368, &var_158, &var_1c8);\n                                        sub_403400(dcgettext(nullptr, \"    user provided time: '%s'\\n\", 5), 0);\n                                        sub_403880(&var_3a8, &var_158, &var_1c8);\n                                        sub_403400(dcgettext(nullptr, \"       normalized time: '%s'\\n\", 5), 0);\n                                        rdx_14 = &data_414b79[0x1b];\n                                        rax_43 = &data_414b79[0x1b];\n                                    label_407c09:\n                                        rcx_5 = &data_414b79[0x1b];\n                                        if (var_410 != var_408)\n                                        {\n                                            rcx_5 = \"--\";\n                                        }\n                                        r8_2 = \"--\";\n                                        if (var_428 == var_418)\n                                        {\n                                            goto label_406709;\n                                        }\n                                        goto label_406717;\n                                    }\n                                }\n                                if (((r10_1 != r9_1 || (r10_1 == r9_1 && r8 != rcx_4)) && var_7f_2 != 0))\n                                {\n                                    sub_403400(dcgettext(nullptr, \"error: invalid date/time value:\\n\", 5), 0);\n                                    sub_403880(&var_368, &var_158, &var_1c8);\n                                    sub_403400(dcgettext(nullptr, \"    user provided time: '%s'\\n\", 5), 0);\n                                    sub_403880(&var_3a8, &var_158, &var_1c8);\n                                    sub_403400(dcgettext(nullptr, \"       normalized time: '%s'\\n\", 5), 0);\n                                    if (r10_1 == r9_1)\n                                    {\n                                        rdx_14 = &data_414b79[0x1b];\n                                        rax_43 = \"--\";\n                                    }\n                                    else\n                                    {\n                                        rdx_14 = \"--\";\n                                        rax_43 = &data_414b79[0x1b];\n                                        if (r8 != rcx_4)\n                                        {\n                                            rax_43 = \"--\";\n                                        }\n                                    }\n                                    goto label_407c09;\n                                }\n                                goto label_406840;\n                            }\n                            void var_2e8;\n                            bool rax_99;\n                            int64_t rdx_34;\n                            int64_t rdi_56;\n                            if (var_7f_2 != 0)\n                            {\n                                __snprintf_chk(&var_2a8, 0x64, 1, 0x64, \"(Y-M-D) %s-%02d-%02d\", sub_403390(var_394_1, &var_2e8), (var_398_1 + 1), var_39c_1);\n                                sub_403400(dcgettext(nullptr, \"using current date as starting v\u2026\", 5), 0);\n                                sub_403880(&var_3a8, &var_158, &var_2a8);\n                                sub_403400(dcgettext(nullptr, \"starting date/time: '%s'\\n\", 5), 0);\n                                rdx_34 = zmm0;\n                                rdi_56 = *zmm0[8];\n                                int64_t rcx_31 = zmm0;\n                                rax_99 = var_7f_2;\n                                int64_t rsi_46 = (rdx_34 | rdi_56);\n                                if ((rsi_46 | rcx_31) == 0)\n                                {\n                                    goto label_407151;\n                                }\n                                if (rax_99 == 0)\n                                {\n                                    goto label_407792;\n                                }\n                                if ((rsi_46 != 0 && var_39c_1 != 0xf))\n                                {\n                                    sub_403400(dcgettext(nullptr, \"warning: when adding relative mo\u2026\", 5), 0);\n                                    rcx_31 = zmm0;\n                                }\n                                if (((rsi_46 == 0 || (rsi_46 != 0 && rcx_31 != 0)) && var_3a0_1 != 0xc))\n                                {\n                                    sub_403400(dcgettext(nullptr, \"warning: when adding relative da\u2026\", 5), 0);\n                                }\n                                int64_t rax_123 = var_394_1;\n                                int64_t rax_124 = (rax_123 + zmm0);\n                                int32_t rdx_47;\n                                rdx_47 = (rax_123 + zmm0);\n                                if ((rax_124 == rax_124 && rdx_47 == 0))\n                                {\n                                    var_420_1 = rax_124;\n                                    rdi_56 = *zmm0[8];\n                                    goto label_4074f5;\n                                }\n                                goto label_407629;\n                            }\n                            rdi_56 = *zmm0[8];\n                            rdx_34 = zmm0;\n                            if (((rdi_56 | rdx_34) | zmm0) == 0)\n                            {\n                                rax_99 = false;\n                            label_407151:\n                                int32_t rax_113;\n                                int64_t rcx_30;\n                                int64_t rdx_43;\n                                int64_t rbx_8;\n                                int64_t r12_9;\n                                if (rax_99 == 0)\n                                {\n                                label_407159:\n                                    int64_t rax_100 = *zmm0[8];\n                                    int64_t r11_1 = (rax_100 * 0xe10);\n                                    bool o_9 = /* bool o_9 = unimplemented  {imul r11, rax, 0xe10} */;\n                                    var_420_1 = rax_100;\n                                    if (o_9)\n                                    {\n                                        goto label_406840;\n                                    }\n                                    int64_t rax_102;\n                                    int64_t rdx_38;\n                                    rdx_38 = HIGHD((var_f8_1 * 0x112e0be826d694b3));\n                                    rax_102 = LOWD((var_f8_1 * 0x112e0be826d694b3));\n                                    int64_t rax_108;\n                                    int64_t rdx_41;\n                                    rdx_41 = HIGHD(((((var_f8_1 - (((rdx_38 >> 0x1a) - (var_f8_1 >> 0x3f)) * 0x3b9aca00)) + 0x3b9aca00) >> 9) * 0x44b82fa09b5a53));\n                                    rax_108 = LOWD(((((var_f8_1 - (((rdx_38 >> 0x1a) - (var_f8_1 >> 0x3f)) * 0x3b9aca00)) + 0x3b9aca00) >> 9) * 0x44b82fa09b5a53));\n                                    int64_t r10_6 = (((var_f8_1 - (((rdx_38 >> 0x1a) - (var_f8_1 >> 0x3f)) * 0x3b9aca00)) + 0x3b9aca00) - ((rdx_41 >> 0xb) * 0x3b9aca00));\n                                    int64_t r9_6 = (var_f8_1 - r10_6);\n                                    rcx_30 = r10_6;\n                                    int64_t rax_110;\n                                    int64_t rdx_42;\n                                    rdx_42 = HIGHD((r9_6 * 0x112e0be826d694b3));\n                                    rax_110 = LOWD((r9_6 * 0x112e0be826d694b3));\n                                    rax_113 = ((rdx_42 >> 0x1a) - (r9_6 >> 0x3f));\n                                    rbx_8 = (rbx_2 + r11_1);\n                                    if ((rbx_2 + r11_1))\n                                    {\n                                        goto label_406840;\n                                    }\n                                    r12_9 = zmm0;\n                                    rdx_43 = (r12_9 * 0x3c);\n                                    bool o_11 = /* bool o_11 = unimplemented  {imul rdx, r12, 0x3c} */;\n                                    if (o_11)\n                                    {\n                                        goto label_406840;\n                                    }\n                                    goto label_40721b;\n                                }\n                                sub_403880(&var_3a8, &var_158, &var_2a8);\n                                sub_403400(dcgettext(nullptr, \"'%s' = %ld epoch-seconds\\n\", 5), 0);\n                                int64_t rax_147 = *zmm0[8];\n                                int64_t r9_9 = (rax_147 * 0xe10);\n                                bool o_21 = /* bool o_21 = unimplemented  {imul r9, rax, 0xe10} */;\n                                var_420_1 = rax_147;\n                                int64_t rax_114;\n                                int64_t rbx_9;\n                                int64_t rbx_10;\n                                int64_t r13_4;\n                                bool o_23;\n                                if (o_21)\n                                {\n                                    rbp_2 = var_7f_2;\n                                }\n                                else\n                                {\n                                    rbp_2 = var_7f_2;\n                                    int64_t rax_149;\n                                    int64_t rdx_60;\n                                    rdx_60 = HIGHD((var_f8_1 * 0x112e0be826d694b3));\n                                    rax_149 = LOWD((var_f8_1 * 0x112e0be826d694b3));\n                                    int64_t rax_155;\n                                    int64_t rdx_63;\n                                    rdx_63 = HIGHD(((((var_f8_1 - (((rdx_60 >> 0x1a) - (var_f8_1 >> 0x3f)) * 0x3b9aca00)) + 0x3b9aca00) >> 9) * 0x44b82fa09b5a53));\n                                    rax_155 = LOWD(((((var_f8_1 - (((rdx_60 >> 0x1a) - (var_f8_1 >> 0x3f)) * 0x3b9aca00)) + 0x3b9aca00) >> 9) * 0x44b82fa09b5a53));\n                                    int64_t r11_8 = (((var_f8_1 - (((rdx_60 >> 0x1a) - (var_f8_1 >> 0x3f)) * 0x3b9aca00)) + 0x3b9aca00) - ((rdx_63 >> 0xb) * 0x3b9aca00));\n                                    int64_t r10_10 = (var_f8_1 - r11_8);\n                                    rcx_30 = r11_8;\n                                    int64_t rax_157;\n                                    int64_t rdx_64;\n                                    rdx_64 = HIGHD((r10_10 * 0x112e0be826d694b3));\n                                    rax_157 = LOWD((r10_10 * 0x112e0be826d694b3));\n                                    rax_113 = ((rdx_64 >> 0x1a) - (r10_10 >> 0x3f));\n                                    rbx_8 = (rbx_2 + r9_9);\n                                    if ((!(rbx_2 + r9_9)))\n                                    {\n                                        r12_9 = zmm0;\n                                        rdx_43 = (r12_9 * 0x3c);\n                                        o_23 = /* o_23 = unimplemented  {imul rdx, r12, 0x3c} */;\n                                        if ((!o_23))\n                                        {\n                                        label_40721b:\n                                            rbx_9 = (rbx_8 + rdx_43);\n                                            if ((!(rbx_8 + rdx_43)))\n                                            {\n                                                r13_4 = *zmm0[8];\n                                                rbx_10 = (rbx_9 + r13_4);\n                                                if ((!(rbx_9 + r13_4)))\n                                                {\n                                                    rax_114 = rax_113;\n                                                    int64_t rbx_11 = (rbx_10 + rax_114);\n                                                    if ((!(rbx_10 + rax_114)))\n                                                    {\n                                                        arg1->tm_sec = rbx_11;\n                                                        arg1->tm_min = *rbx_11[4];\n                                                        arg1->tm_hour = rcx_30;\n                                                        arg1->tm_mday = *rcx_30[4];\n                                                        struct tm* rax_67;\n                                                        if ((rbp_2 != 0 && ((0 | (r13_4 | r12_9)) | var_420_1) != 0))\n                                                        {\n                                                            var_418 = 0;\n                                                            sub_403400(dcgettext(nullptr, \"after time adjustment (%+ld hour\u2026\", 5), 0);\n                                                            sub_403400(dcgettext(nullptr, \"    new time = %ld epoch-seconds\u2026\", 5), 0);\n                                                            if (var_388_1 != 0xffffffff)\n                                                            {\n                                                                rax_67 = sub_40c180(r15_2, arg1, &var_2e8);\n                                                                int32_t var_2c8;\n                                                                if ((rax_67 != 0 && var_388_1 != var_2c8))\n                                                                {\n                                                                    sub_403400(dcgettext(nullptr, \"warning: daylight saving time ch\u2026\", 5), 0);\n                                                                }\n                                                            }\n                                                        }\n                                                        rbx_1 = var_7f_2;\n                                                        if (rbx_1 == 0)\n                                                        {\n                                                            rbx_1 = 1;\n                                                        }\n                                                        else\n                                                        {\n                                                            bool c_3 = var_428 < 0;\n                                                            bool z_2 = var_428 == 0;\n                                                            char const* const rsi_21 = \"timezone: system default\\n\";\n                                                            if ((!z_2))\n                                                            {\n                                                                char* rsi_22 = var_428;\n                                                                char const* const rdi_31 = \"UTC0\";\n                                                                int64_t rcx_13 = 5;\n                                                                while (rcx_13 != 0)\n                                                                {\n                                                                    char temp8_1 = *rsi_22;\n                                                                    char const temp9_1 = *rdi_31;\n                                                                    c_3 = temp8_1 < temp9_1;\n                                                                    z_2 = temp8_1 == temp9_1;\n                                                                    rsi_22 = &rsi_22[1];\n                                                                    rdi_31 = &rdi_31[1];\n                                                                    rcx_13 = (rcx_13 - 1);\n                                                                    if ((!z_2))\n                                                                    {\n                                                                        break;\n                                                                    }\n                                                                }\n                                                                rax_67 = ((!z_2) && (!c_3));\n                                                                rax_67 = (rax_67 - 0);\n                                                                if (rax_67 != 0)\n                                                                {\n                                                                    sub_403400(dcgettext(nullptr, \"timezone: TZ=\"%s\" environment va\u2026\", 5), 0);\n                                                                }\n                                                                else\n                                                                {\n                                                                    rsi_21 = \"timezone: Universal Time\\n\";\n                                                                }\n                                                            }\n                                                            if ((((!z_2) && rax_67 == 0) || z_2))\n                                                            {\n                                                                sub_403400(dcgettext(nullptr, rsi_21, 5), 0);\n                                                            }\n                                                            int64_t rbp_6;\n                                                            rbp_6 = arg1->tm_sec;\n                                                            *rbp_6[4] = arg1->tm_min;\n                                                            *(arg1 + 8);\n                                                            sub_403400(dcgettext(nullptr, \"final: %ld.%09d (epoch-seconds)\\n\", 5), 0);\n                                                            if (gmtime_r(arg1, &var_2e8) != 0)\n                                                            {\n                                                                sub_403880(&var_2e8, nullptr, &var_2a8);\n                                                                sub_403400(dcgettext(nullptr, \"final: %s (UTC)\\n\", 5), 0);\n                                                            }\n                                                            if (sub_40c180(r15_2, arg1, &var_1c8) != 0)\n                                                            {\n                                                                void var_3c8;\n                                                                int32_t var_1a0;\n                                                                sub_403290(var_1a0, &var_3c8);\n                                                                sub_403880(&var_1c8, nullptr, &var_2a8);\n                                                                sub_403400(dcgettext(nullptr, \"final: %s (UTC%s)\\n\", 5), 0);\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                if ((((((o_21 || ((!o_21) && (rbx_2 + r9_9))) || (((!o_21) && (!(rbx_2 + r9_9))) && o_23)) || ((((!o_21) && (!(rbx_2 + r9_9))) && (!o_23)) && (rbx_8 + rdx_43))) || (((((!o_21) && (!(rbx_2 + r9_9))) && (!o_23)) && (!(rbx_8 + rdx_43))) && (rbx_9 + r13_4))) || ((((((!o_21) && (!(rbx_2 + r9_9))) && (!o_23)) && (!(rbx_8 + rdx_43))) && (!(rbx_9 + r13_4))) && (rbx_10 + rax_114))))\n                                {\n                                    if (rbp_2 == 0)\n                                    {\n                                        goto label_406840;\n                                    }\n                                    rsi_31 = \"error: adding relative time caus\u2026\";\n                                label_406ed7:\n                                    rbx_1 = 0;\n                                    sub_403400(dcgettext(nullptr, rsi_31, 5), 0);\n                                }\n                            }\n                            else\n                            {\n                            label_407792:\n                                int64_t rax_141 = var_394_1;\n                                int64_t rax_142 = (rax_141 + rdx_34);\n                                rdx_34 = (rax_141 + rdx_34);\n                                uint32_t rdx_57 = rdx_34;\n                                if (rax_142 != rax_142)\n                                {\n                                    goto label_406840;\n                                }\n                                if (rdx_57 != 0)\n                                {\n                                    goto label_406840;\n                                }\n                                var_420_1 = rax_142;\n                            label_4074f5:\n                                int64_t rax_125 = var_398_1;\n                                int64_t r13_6 = (rax_125 + rdi_56);\n                                int64_t rax_126;\n                                rax_126 = (rax_125 + rdi_56);\n                                uint32_t rax_127 = rax_126;\n                                if (r13_6 == r13_6)\n                                {\n                                    if (rax_127 != 0)\n                                    {\n                                        goto label_407629;\n                                    }\n                                    int64_t r12_12 = var_39c_1;\n                                    int64_t r12_13 = (r12_12 + zmm0);\n                                    int32_t rax_128;\n                                    rax_128 = (r12_12 + zmm0);\n                                    if (r12_13 != r12_13)\n                                    {\n                                        goto label_407629;\n                                    }\n                                    if (rax_128 != 0)\n                                    {\n                                        goto label_407629;\n                                    }\n                                    int32_t var_398_2 = r13_6;\n                                    uint32_t var_39c_2 = r12_13;\n                                    uint32_t var_394_2 = var_420_1;\n                                    var_3a8 = var_368;\n                                    int32_t var_3a0_2 = r9;\n                                    var_388_1 = rax_28;\n                                    time_t rax_133 = sub_40c230(r15_2, &var_3a8);\n                                    rbx_2 = rax_133;\n                                    if (rax_133 != -1)\n                                    {\n                                        if (var_7f_2 == 0)\n                                        {\n                                            goto label_407159;\n                                        }\n                                        int64_t var_400_2 = zmm0;\n                                        int64_t var_418_1 = *zmm0[8];\n                                        int64_t var_408_1 = zmm0;\n                                        sub_403400(dcgettext(nullptr, \"after date adjustment (%+ld year\u2026\", 5), 0);\n                                        var_418 = sub_403880(&var_3a8, &var_158, &var_2a8);\n                                        sub_403400(dcgettext(nullptr, \"    new date/time = '%s'\\n\", 5), 0);\n                                        if ((rax_28 != 0xffffffff && rax_28 != var_388_1))\n                                        {\n                                            sub_403400(dcgettext(nullptr, \"warning: daylight saving time ch\u2026\", 5), 0);\n                                        }\n                                        if ((zmm0 == 0 && (r12_13 != var_39c_2 || ((r12_13 == var_39c_2 && *zmm0[8] == 0) && r13_6 != var_398_2))))\n                                        {\n                                            sub_403400(dcgettext(nullptr, \"warning: month/year adjustment r\u2026\", 5), 0);\n                                            var_420_1 = sub_403390(var_420_1, &var_2e8);\n                                            sub_403400(dcgettext(nullptr, \"     adjusted Y M D: %s %02d %02\u2026\", 5), 0);\n                                            var_420_1 = var_39c_2;\n                                            sub_403390(var_394_2, &var_2e8);\n                                            sub_403400(dcgettext(nullptr, \"   normalized Y M D: %s %02d %02\u2026\", 5), 0);\n                                        }\n                                        rax_99 = var_7f_2;\n                                        goto label_407151;\n                                    }\n                                    if (var_7f_2 == 0)\n                                    {\n                                        goto label_406840;\n                                    }\n                                    sub_403880(&var_3a8, &var_158, &var_2a8);\n                                    rbx_1 = 0;\n                                    sub_403400(dcgettext(nullptr, \"error: adding relative date resu\u2026\", 5), 0);\n                                }\n                                else\n                                {\n                                label_407629:\n                                    if (var_7f_2 == 0)\n                                    {\n                                        goto label_406840;\n                                    }\n                                    rbx_1 = 0;\n                                    sub_403400(dcgettext(nullptr, \"error: %s:%d\\n\", 5), 0);\n                                }\n                            }\n                        }\n                    }\n                }\n                else\n                {\n                    if (rbx_1 != 0)\n                    {\n                        sub_403400(dcgettext(nullptr, \"error: out-of-range year %ld\\n\", 5), 0);\n                    }\n                    rcx_2 = var_7f_2;\n                }\n                if ((((rbp_2 == 0 && rdx_7 != 0) || ((rbp_2 == 0 && rdx_7 == 0) && rax_12 != rdx_8)) || rbp_2 != 0))\n                {\n                    rsi_31 = \"error: year, month, or day overf\u2026\";\n                    if (rcx_2 != 0)\n                    {\n                        goto label_406ed7;\n                    }\n                label_406840:\n                    rbx_1 = 0;\n                }\n            }\n        }\n    }\n    if ((((((rax_2 != 0 || (rax_2 == 0 && r15_1 == 0)) || ((rax_2 == 0 && r15_1 != 0) && rax_3 != 0x22)) && rax_5 != 0) || (((rax_2 == 0 && r15_1 != 0) && rax_3 == 0x22) && rax_54 != 0)) && r15_2 != arg5))\n    {\n        sub_40c160(r15_2);\n    }\n    free(var_430_1);\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_408000",
            "funcStartAddr": "0x408000",
            "funcEndAddr": "0x408067",
            "decompiledFuncCode": "uint64_t sub_408000(struct tm* arg1, char* arg2, int64_t* arg3)\n{\n    int32_t rbp = 0;\n    char* rax = getenv(&data_411eae);\n    int64_t* rax_1 = sub_40bea0(rax);\n    if (rax_1 != 0)\n    {\n        rbp = sub_406030(arg1, arg2, arg3, 0, rax_1, rax);\n        sub_40c160(rax_1);\n    }\n    return rbp;\n}\n\n"
        },
        {
            "funcName": "sub_408070",
            "funcStartAddr": "0x408070",
            "funcEndAddr": "0x4080fb",
            "decompiledFuncCode": "struct tm* sub_408070(int32_t* arg1, int32_t* arg2, int64_t arg3, int32_t arg4)\n{\n    if (arg3 == 1)\n    {\n        int32_t rdx = *arg2;\n        *arg1 = rdx;\n        if (*arg2 > 0x44)\n        {\n            return 1;\n        }\n        if ((arg4 & 8) == 0)\n        {\n            *arg1 = (rdx + 0x64);\n            return 1;\n        }\n    }\n    else\n    {\n        if (arg3 != 2)\n        {\n            void var_10;\n            time(&var_10);\n            struct tm* rax_5 = localtime(&var_10);\n            if (rax_5 != 0)\n            {\n                *arg1 = rax_5->tm_year;\n                rax_5 = 1;\n            }\n            return rax_5;\n        }\n        if ((arg4 & 2) != 0)\n        {\n            *arg1 = (((*arg2 * 0x64) + arg2[1]) - 0x76c);\n            return 1;\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_408100",
            "funcStartAddr": "0x408100",
            "funcEndAddr": "0x4083a7",
            "decompiledFuncCode": "int64_t sub_408100(time_t* arg1, char* arg2, int32_t arg3)\n{\n    uint64_t r13 = strlen(arg2);\n    char* r14;\n    if ((arg3 & 4) == 0)\n    {\n        r14 = nullptr;\n    }\n    else\n    {\n        char* rax_1 = strchr(arg2, 0x2e);\n        r14 = rax_1;\n        if (rax_1 != 0)\n        {\n            void* rax_2 = (rax_1 - arg2);\n            if ((r13 - rax_2) != 3)\n            {\n                goto label_408150;\n            }\n            r13 = rax_2;\n        }\n    }\n    int64_t rax_3;\n    if ((r13 - 8) > 4)\n    {\n    label_408150:\n        rax_3 = 0;\n    label_408161:\n        return rax_3;\n    }\n    if ((r13 & 1) != 0)\n    {\n        goto label_408150;\n    }\n    char* rax_5 = arg2;\n    void* rcx_1 = &arg2[r13];\n    while ((*rax_5 - 0x30) <= 9)\n    {\n        rax_5 = &rax_5[1];\n        if (rcx_1 == rax_5)\n        {\n            break;\n        }\n    }\n    if ((*rax_5 - 0x30) > 9)\n    {\n        goto label_408150;\n    }\n    uint64_t r13_2 = (r13 >> 1);\n    int64_t rdx_2 = 0;\n    int32_t var_68;\n    do\n    {\n        &var_68[rdx_2] = ((arg2[((rdx_2 << 1) + 1)] + (((arg2[(rdx_2 << 1)] * 5) - 0xf0) << 1)) - 0x30);\n        rdx_2 = (rdx_2 + 1);\n    } while (r13_2 != rdx_2);\n    int64_t rdx_3 = (r13_2 - 4);\n    time_t var_c8;\n    int32_t var_a4_1;\n    int32_t var_a0_1;\n    int32_t var_9c_1;\n    int32_t var_98_1;\n    int32_t var_94;\n    int32_t var_60;\n    int64_t var_58;\n    if ((arg3 & 1) == 0)\n    {\n        if (sub_408070(&var_94, &var_68, rdx_3, arg3) == 0)\n        {\n            goto label_408150;\n        }\n        var_98_1 = (*((&var_c8 + (r13_2 << 2)) + 0x50) - 1);\n        var_9c_1 = *((&var_c8 + (r13_2 << 2)) + 0x54);\n        var_a0_1 = *((&var_c8 + (r13_2 << 2)) + 0x58);\n        var_a4_1 = *((&var_c8 + (r13_2 << 2)) + 0x5c);\n    }\n    else\n    {\n        var_98_1 = (var_68 - 1);\n        int32_t var_64;\n        var_9c_1 = var_64;\n        var_a0_1 = var_60;\n        int32_t var_5c;\n        var_a4_1 = var_5c;\n        if (sub_408070(&var_94, &var_58, rdx_3, arg3) == 0)\n        {\n            goto label_408150;\n        }\n    }\n    int32_t var_a8_1;\n    int32_t rax_18;\n    if (r14 == 0)\n    {\n        var_a8_1 = 0;\n        rax_18 = 0;\n    label_408249:\n        var_68 = rax_18;\n        int32_t var_48_1 = 0xffffffff;\n        int32_t var_64_1 = var_a4_1;\n        var_60 = var_a0_1;\n        var_58 = var_98_1;\n        time_t rax_22 = sub_40bdb0(&var_68);\n        int32_t* rdx_5 = &var_68;\n        var_c8 = rax_22;\n        if (rax_22 == -1)\n        {\n            int32_t* rax_36 = localtime(&var_c8);\n            rdx_5 = rax_36;\n            if (rax_36 == 0)\n            {\n                goto label_408150;\n            }\n            goto label_4082c0;\n        }\n    label_4082c0:\n        int32_t rax_28 = (((((var_94 ^ rdx_5[5]) | (var_98_1 ^ rdx_5[4])) | (var_9c_1 ^ rdx_5[3])) | (var_a0_1 ^ rdx_5[2])) | (var_a4_1 ^ rdx_5[1]));\n        if ((rax_28 | (*rdx_5 ^ var_a8_1)) == 0)\n        {\n        label_40830c:\n            *arg1 = var_c8;\n            return 1;\n        }\n        if (var_a8_1 != 0x3c)\n        {\n            goto label_408150;\n        }\n        void var_b8;\n        char* rax_30 = __stpcpy_chk(&var_b8, arg2, 0x10);\n        *(rax_30 - 2) = 0x3935;\n        *rax_30 = 0;\n        void var_c0;\n        rax_3 = sub_408100(&var_c0, &var_b8, arg3);\n        if (rax_3 == 0)\n        {\n            goto label_408161;\n        }\n        goto label_40830c;\n    }\n    uint64_t rax_16 = (r14[1] - 0x30);\n    if (rax_16 > 9)\n    {\n        goto label_408150;\n    }\n    int32_t rdx_4 = r14[2];\n    if ((rdx_4 - 0x30) > 9)\n    {\n        goto label_408150;\n    }\n    rax_18 = ((rdx_4 + ((rax_16 * 5) << 1)) - 0x30);\n    var_a8_1 = rax_18;\n    goto label_408249;\n}\n\n"
        },
        {
            "funcName": "sub_4083b0",
            "funcStartAddr": "0x4083b0",
            "funcEndAddr": "0x408422",
            "decompiledFuncCode": "uint64_t sub_4083b0()\n{\n    int32_t rbx = 0x31069;\n    char* rax = getenv(\"_POSIX2_VERSION\");\n    if ((rax != 0 && *rax != 0))\n    {\n        char* var_10;\n        int64_t rax_2 = strtol(rax, &var_10, 0xa);\n        if (*var_10 == 0)\n        {\n            if (rax_2 >= -0x80000000)\n            {\n                int32_t rbx_1 = 0x7fffffff;\n                if (rax_2 <= 0x7fffffff)\n                {\n                    rbx_1 = rax_2;\n                }\n                return rbx_1;\n            }\n            rbx = -0x80000000;\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_408430",
            "funcStartAddr": "0x408430",
            "funcEndAddr": "0x4084c9",
            "decompiledFuncCode": "char* sub_408430(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_413988;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_6183b8 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4084d0",
            "funcStartAddr": "0x4084d0",
            "funcEndAddr": "0x4085c2",
            "decompiledFuncCode": "char* sub_4084d0(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_40c4f0();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_4085b1:\n                void* const rbx_1 = \"\"\";\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_4085b1;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_4085b1;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_4085b1;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_4085b1;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_4085b1;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_4085b1;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_4085b1;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_413993;\n            if (cond:2_1)\n            {\n                rbx = &data_413990;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_4085b1;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_4085b1;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_4085b1;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_4085b1;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_4085b1;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_413997;\n            if (cond:1_1)\n            {\n                rbx = &data_41398c;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_4085d0",
            "funcStartAddr": "0x401dc0",
            "funcEndAddr": "0x4097f1",
            "decompiledFuncCode": "int64_t sub_4085d0(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    char const* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n    label_408668:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_4089dc:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_408a24;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_4085d0(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char const rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_408a3b;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_408b75;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_4087c5;\n                            }\n                            goto label_408ab0;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_408b75;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_4089a0;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_4089a0:\n                            if (var_c0 == 0)\n                            {\n                                goto label_4089ab;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_408807:\n                            if (var_5c == 0)\n                            {\n                                goto label_408818;\n                            }\n                        label_4089d0:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_4089d8;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_408c0b;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_408c0b:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_408c1a:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_4089dc;\n                            }\n                            goto label_4089a0;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_4089a0;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_4089a0;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_408c0b;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_4087a6;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_4087a6:\n                            if (var_5c == 0)\n                            {\n                                goto label_4087c5;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_4087c5;\n                            }\n                            goto label_408c1a;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_40879d:\n                            if (r12_1 != 0)\n                            {\n                                goto label_4089ab;\n                            }\n                            goto label_4087a6;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_408bd0:\n                            rdx = r11_1 == 2;\n                        label_4087c5:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_4088cc;\n                            }\n                            goto label_4087cf;\n                        }\n                        case 0x27:\n                        {\n                            goto label_40894d;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_40891d;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_40897a;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_40970d;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_4088e4;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_408779;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_408d70;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_408d70;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_4096c0:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_408a24:\n                            rbx_1 = sub_4085d0(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_408a3b:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_408b75;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_408ac7;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_408b75;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_408a90:\n                                r13 = 0;\n                                goto label_40884b;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_408818:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_40884b:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_408855;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_408855:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_40885d;\n                            }\n                            case 9:\n                            {\n                                goto label_408a40;\n                            }\n                            case 0xa:\n                            {\n                                goto label_4089b8;\n                            }\n                            case 0xb:\n                            {\n                                goto label_408aa0;\n                            }\n                            case 0xc:\n                            {\n                                goto label_408a80;\n                            }\n                            case 0xd:\n                            {\n                                goto label_408a69;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_408dca;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_408a55;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_408daa;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_408d92;\n                            }\n                            case 0x27:\n                            {\n                                goto label_40894d;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_40891d;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_40897a;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_408779;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_408d70:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_408b70:\n                            var_b8 = 0;\n                        label_408b75:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_408bc4:\n                                if (rdx == 0)\n                                {\n                                    goto label_408bd0;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_4090c1:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_4088e4;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_4089dc;\n                                }\n                                r13 = var_98;\n                                goto label_40885d;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_40b670(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_4089dc;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_4090c1;\n                            }\n                            goto label_408bc4;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_408ab0:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_4089dc;\n                                }\n                                var_b8 = 0;\n                            label_408ac7:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_408b12;\n                                    }\n                                    rax_8 = r10;\n                                label_408b0a:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_408b12:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_4088cc;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_408b53;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_408b0a;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_4088cc;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_408b70;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_408a85;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_4089bd;\n                            }\n                            case 9:\n                            {\n                            label_408a40:\n                                rbp_3 = 0x74;\n                                goto label_4089bd;\n                            }\n                            case 0xa:\n                            {\n                            label_4089b8:\n                                rbp_3 = 0x6e;\n                            label_4089bd:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_4089d0;\n                                }\n                                goto label_408818;\n                            }\n                            case 0xb:\n                            {\n                            label_408aa0:\n                                rbp_3 = 0x76;\n                                goto label_408a85;\n                            }\n                            case 0xc:\n                            {\n                            label_408a80:\n                                rbp_3 = 0x66;\n                            label_408a85:\n                                if (var_5c == 0)\n                                {\n                                    goto label_408a90;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_4089d8:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_4089dc;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_408a69:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_4089a0;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_408dca:\n                                rbp_3 = 0x20;\n                                goto label_408d92;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_408a55:\n                                rdx = 0;\n                            label_4089ab:\n                                r13 = 0;\n                                goto label_4087c5;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_408daa:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_4087c5;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_4087cf:\n                                rax_8 = 0;\n                                goto label_4087d1;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_408d92:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_4087d1;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_40894d:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_4087c5;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_40970d;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_4088cc;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_40891d:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_40970d:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_4089dc;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_4088cc:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_408807;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_4088e4;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_4087c5;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_408eb0:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_4087c5;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_408eb0;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_408eb0;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_408eb0;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_408eb0;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_4096c0;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_408b53:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_4088cc;\n                                }\n                            label_4087d1:\n                                if (arg7 == 0)\n                                {\n                                    goto label_4088cc;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_4088cc;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_408807;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_40897a:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_4089a0;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_4088e4:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_40885d;\n                                }\n                            label_40885d:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_408866;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_408866:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_408779:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_4089ab;\n                                }\n                                goto label_40879d;\n                            }\n                        }\n                    }\n                }\n            }\n        label_408e56:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = \"'\";\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_408668;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = \"'\";\n                goto label_408668;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"'\";\n            goto label_408668;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = \"\"\";\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = \"\"\";\n            }\n            goto label_408668;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"\"\";\n            goto label_408668;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_408668;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_4084d0(&data_41399b, r13);\n                arg9 = sub_4084d0(\"'\", r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_408668;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_408e56;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n        goto label_408668;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_409800",
            "funcStartAddr": "0x401dc5",
            "funcEndAddr": "0x40999e",
            "decompiledFuncCode": "char* sub_409800(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_6182f8;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_618310 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_40a860();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x618300)\n        {\n            int64_t rax_9 = sub_40a670(0, rsi_1);\n            int128_t zmm0 = data_618300;\n            rbx = rax_9;\n            data_6182f8 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_40a670(rbx, rsi_1);\n            data_6182f8 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_618310;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_618310 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_4085d0(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        size_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x6183c0)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_40a610(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_4085d0(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_4099a0",
            "funcStartAddr": "0x4099a0",
            "funcEndAddr": "0x4099d4",
            "decompiledFuncCode": "int64_t sub_4099a0(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x6184c0;\n    }\n    int64_t rax_1 = sub_40a810(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4099e0",
            "funcStartAddr": "0x4099e0",
            "funcEndAddr": "0x4099ef",
            "decompiledFuncCode": "uint64_t sub_4099e0(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6184c0;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4099f0",
            "funcStartAddr": "0x4099f0",
            "funcEndAddr": "0x4099ff",
            "decompiledFuncCode": "void sub_4099f0(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6184c0;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_409a00",
            "funcStartAddr": "0x409a00",
            "funcEndAddr": "0x409a33",
            "decompiledFuncCode": "uint64_t sub_409a00(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x6184c0;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_409a40",
            "funcStartAddr": "0x409a40",
            "funcEndAddr": "0x409a53",
            "decompiledFuncCode": "uint64_t sub_409a40(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6184c0;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_409a60",
            "funcStartAddr": "0x409a60",
            "funcEndAddr": "0x409a8b",
            "decompiledFuncCode": "void sub_409a60(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6184c0;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x6184c0;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_409a90",
            "funcStartAddr": "0x409a90",
            "funcEndAddr": "0x409b02",
            "decompiledFuncCode": "int64_t sub_409a90(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_6184c0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_4085d0(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_409b10",
            "funcStartAddr": "0x409b10",
            "funcEndAddr": "0x409bf1",
            "decompiledFuncCode": "char* sub_409b10(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_6184c0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_4085d0(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_40a610((rax_2 + 1));\n    sub_4085d0(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_409c00",
            "funcStartAddr": "0x409c00",
            "funcEndAddr": "0x409c0a",
            "decompiledFuncCode": "int64_t sub_409c00(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_409b10(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_409c10",
            "funcStartAddr": "0x409c10",
            "funcEndAddr": "0x409ca5",
            "decompiledFuncCode": "uint64_t sub_409c10()\n{\n    uint64_t rax_2 = data_618310;\n    int64_t r12 = data_6182f8;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x6183c0)\n    {\n        rax_2 = free(rdi_2);\n        *data_618300 = 0x100;\n        *(data_618300 + 8) = 0x6183c0;\n    }\n    if (r12 != 0x618300)\n    {\n        rax_2 = free(r12);\n        data_6182f8 = 0x618300;\n    }\n    data_618310 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_409cb0",
            "funcStartAddr": "0x409cb0",
            "funcEndAddr": "0x409cc1",
            "decompiledFuncCode": "int64_t sub_409cb0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_409800(arg1, arg2, -1, &data_6184c0);\n}\n\n"
        },
        {
            "funcName": "sub_409cd0",
            "funcStartAddr": "0x409cd0",
            "funcEndAddr": "0x409cda",
            "decompiledFuncCode": "int64_t sub_409cd0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_409800(arg1, arg2, arg3, &data_6184c0);\n}\n\n"
        },
        {
            "funcName": "sub_409ce0",
            "funcStartAddr": "0x409ce0",
            "funcEndAddr": "0x409cf6",
            "decompiledFuncCode": "int64_t sub_409ce0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_409800(0, arg1, -1, &data_6184c0);\n}\n\n"
        },
        {
            "funcName": "sub_409d00",
            "funcStartAddr": "0x409d00",
            "funcEndAddr": "0x409d12",
            "decompiledFuncCode": "int64_t sub_409d00(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_409800(0, arg1, arg2, &data_6184c0);\n}\n\n"
        },
        {
            "funcName": "sub_409d20",
            "funcStartAddr": "0x401dca",
            "funcEndAddr": "0x409d88",
            "decompiledFuncCode": "char* sub_409d20(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_409800(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_409d90",
            "funcStartAddr": "0x401dcf",
            "funcEndAddr": "0x409df4",
            "decompiledFuncCode": "char* sub_409d90(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_409800(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_409e00",
            "funcStartAddr": "0x409e00",
            "funcEndAddr": "0x409e0c",
            "decompiledFuncCode": "int64_t sub_409e00(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_409d20(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_409e10",
            "funcStartAddr": "0x409e10",
            "funcEndAddr": "0x409e1f",
            "decompiledFuncCode": "int64_t sub_409e10(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_409d90(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_409e20",
            "funcStartAddr": "0x409e20",
            "funcEndAddr": "0x409e90",
            "decompiledFuncCode": "char* sub_409e20(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_6184f0;\n    int128_t var_48 = data_6184c0;\n    int128_t var_38 = data_6184d0;\n    int128_t var_28 = data_6184e0;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_409800(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_409e90",
            "funcStartAddr": "0x409e90",
            "funcEndAddr": "0x409e9d",
            "decompiledFuncCode": "int64_t sub_409e90(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_409e20(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_409ea0",
            "funcStartAddr": "0x409ea0",
            "funcEndAddr": "0x409eb1",
            "decompiledFuncCode": "int64_t sub_409ea0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_409e20(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_409ec0",
            "funcStartAddr": "0x409ec0",
            "funcEndAddr": "0x409eca",
            "decompiledFuncCode": "int64_t sub_409ec0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_409e20(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_409ed0",
            "funcStartAddr": "0x401dd4",
            "funcEndAddr": "0x409f3e",
            "decompiledFuncCode": "char* sub_409ed0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_409800(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_409f40",
            "funcStartAddr": "0x409f40",
            "funcEndAddr": "0x409fac",
            "decompiledFuncCode": "char* sub_409f40(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_6184c0;\n    int128_t var_38 = data_6184d0;\n    int128_t var_28 = data_6184e0;\n    int64_t var_18 = data_6184f0;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_409800(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40a000",
            "funcStartAddr": "0x40a000",
            "funcEndAddr": "0x40a00a",
            "decompiledFuncCode": "int64_t sub_40a000(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_409800(arg1, arg2, arg3, &data_6182c0);\n}\n\n"
        },
        {
            "funcName": "sub_40a010",
            "funcStartAddr": "0x40a010",
            "funcEndAddr": "0x40a022",
            "decompiledFuncCode": "int64_t sub_40a010(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_409800(0, arg1, arg2, &data_6182c0);\n}\n\n"
        },
        {
            "funcName": "sub_40a030",
            "funcStartAddr": "0x40a030",
            "funcEndAddr": "0x40a041",
            "decompiledFuncCode": "int64_t sub_40a030(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_409800(arg1, arg2, -1, &data_6182c0);\n}\n\n"
        },
        {
            "funcName": "sub_40a050",
            "funcStartAddr": "0x40a050",
            "funcEndAddr": "0x40a066",
            "decompiledFuncCode": "int64_t sub_40a050(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_409800(0, arg1, -1, &data_6182c0);\n}\n\n"
        },
        {
            "funcName": "sub_40a070",
            "funcStartAddr": "0x401dd9",
            "funcEndAddr": "0x40a44d",
            "decompiledFuncCode": "int64_t sub_40a070(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_4146eb, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_40a450",
            "funcStartAddr": "0x40a450",
            "funcEndAddr": "0x40a470",
            "decompiledFuncCode": "int64_t sub_40a450(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_40a070(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_40a470",
            "funcStartAddr": "0x40a470",
            "funcEndAddr": "0x40a4d0",
            "decompiledFuncCode": "int64_t sub_40a470(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_40a070(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_40a4d0",
            "funcStartAddr": "0x40a4d0",
            "funcEndAddr": "0x40a58c",
            "decompiledFuncCode": "int64_t sub_40a4d0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_40a070(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_40a590",
            "funcStartAddr": "0x40a590",
            "funcEndAddr": "0x40a604",
            "decompiledFuncCode": "int64_t sub_40a590()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_40a610",
            "funcStartAddr": "0x40a610",
            "funcEndAddr": "0x40a62a",
            "decompiledFuncCode": "int64_t sub_40a610(size_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_40a860();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40a670",
            "funcStartAddr": "0x40a670",
            "funcEndAddr": "0x40a6a6",
            "decompiledFuncCode": "int64_t sub_40a670(int64_t arg1, size_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_40a860();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40a6e0",
            "funcStartAddr": "0x40a6e0",
            "funcEndAddr": "0x40a766",
            "decompiledFuncCode": "int64_t sub_40a6e0(int64_t arg1, int64_t* arg2, int64_t arg3)\n{\n    int64_t rcx = *arg2;\n    uint64_t rax_2;\n    uint64_t rdx_4;\n    if (arg1 != 0)\n    {\n        rax_2 = (COMBINE(0, 0x5555555555555554) / arg3);\n        if (rax_2 > rcx)\n        {\n            rcx = (((rcx >> 1) + rcx) + 1);\n        }\n    }\n    else\n    {\n        if (rcx == 0)\n        {\n            int64_t r8_2;\n            r8_2 = arg3 > 0x80;\n            rcx = (r8_2 + (COMBINE(0, 0x80) / arg3));\n        }\n        bool rdx_3;\n        rdx_3 = HIGHD((rcx * arg3));\n        rax_2 = LOWD((rcx * arg3));\n        rdx_4 = ((rcx * arg3) >> 0x40) != 0;\n    }\n    if ((((arg1 != 0 && rax_2 <= rcx) || (arg1 == 0 && rax_2 < 0)) || ((arg1 == 0 && rax_2 >= 0) && rdx_4 != 0)))\n    {\n        uint64_t var_8 = rax_2;\n        sub_40a860();\n        /* no return */\n    }\n    if (((arg1 != 0 && rax_2 > rcx) || ((arg1 == 0 && rax_2 >= 0) && rdx_4 == 0)))\n    {\n        *arg2 = rcx;\n        /* tailcall */\n        return sub_40a670(arg1, (rcx * arg3));\n    }\n}\n\n"
        },
        {
            "funcName": "sub_40a770",
            "funcStartAddr": "0x40a770",
            "funcEndAddr": "0x40a7c0",
            "decompiledFuncCode": "int64_t sub_40a770(int64_t arg1, int64_t* arg2)\n{\n    size_t rax = *arg2;\n    bool cond:0_1;\n    if (arg1 == 0)\n    {\n        cond:0_1 = rax >= 0;\n        if (rax == 0)\n        {\n            *arg2 = 0x80;\n            /* tailcall */\n            return sub_40a670(arg1, 0x80);\n        }\n    }\n    if ((arg1 != 0 && rax <= 0x5555555555555553))\n    {\n        rax = (((rax >> 1) + rax) + 1);\n    }\n    if (((arg1 != 0 && rax <= 0x5555555555555553) || ((arg1 == 0 && rax != 0) && cond:0_1)))\n    {\n        *arg2 = rax;\n        /* tailcall */\n        return sub_40a670(arg1, rax);\n    }\n    if (((arg1 != 0 && rax > 0x5555555555555553) || ((arg1 == 0 && rax != 0) && (!cond:0_1))))\n    {\n        size_t var_8 = rax;\n        sub_40a860();\n        /* no return */\n    }\n}\n\n"
        },
        {
            "funcName": "sub_40a7c0",
            "funcStartAddr": "0x40a7c0",
            "funcEndAddr": "0x40a7d7",
            "decompiledFuncCode": "int64_t sub_40a7c0(size_t arg1)\n{\n    /* tailcall */\n    return memset(sub_40a610(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_40a7e0",
            "funcStartAddr": "0x40a7e0",
            "funcEndAddr": "0x40a80e",
            "decompiledFuncCode": "int64_t sub_40a7e0(size_t arg1, size_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_40a860();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40a810",
            "funcStartAddr": "0x40a810",
            "funcEndAddr": "0x40a838",
            "decompiledFuncCode": "int64_t sub_40a810(int64_t arg1, size_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_40a610(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40a840",
            "funcStartAddr": "0x40a840",
            "funcEndAddr": "0x40a853",
            "decompiledFuncCode": "int64_t sub_40a840(char* arg1)\n{\n    /* tailcall */\n    return sub_40a810(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_40a860",
            "funcStartAddr": "0x40a860",
            "funcEndAddr": "0x40a891",
            "decompiledFuncCode": "int64_t sub_40a860() __noreturn\n{\n    error(data_6182a0, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40a8a0",
            "funcStartAddr": "0x40a8a0",
            "funcEndAddr": "0x40a97f",
            "decompiledFuncCode": "uint64_t sub_40a8a0(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_40a980",
            "funcStartAddr": "0x40a980",
            "funcEndAddr": "0x40af9c",
            "decompiledFuncCode": "uint64_t sub_40a980(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_40abb0;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_40aad6;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_40aad6;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_40aad6:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_40abb0:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_40abde;\n                }\n                *arg5 = r12;\n            label_40abde:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_40abfc;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_40abfc:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_40abfc;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_40ab6e;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_40ab6e:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_40afa0",
            "funcStartAddr": "0x40afa0",
            "funcEndAddr": "0x40b566",
            "decompiledFuncCode": "uint64_t sub_40afa0(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_40b1dc;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_40b068;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_40b068:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_40a8a0(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = \"--\";\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_40a8a0(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_40b1dc;\n                }\n                *arg7 = rdx_2;\n            label_40b1dc:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_40b2e0;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = \"--\";\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_40b350;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_40b2e0;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_40b2e0;\n                            }\n                            goto label_40b2a1;\n                        }\n                    label_40b2a1:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_40a980(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, \"-\");\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_40b2e0:\n                            rdx = &r14_1[1];\n                        label_40b121:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_40b31e;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_40b31e:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_414b95;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_40b350:\n                                        r14_2 = sub_40a980(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_40b40d;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_40b40d:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_40b1dc;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_40b068;\n        }\n        goto label_40b121;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_40b5d0",
            "funcStartAddr": "0x40b5d0",
            "funcEndAddr": "0x40b5e8",
            "decompiledFuncCode": "uint64_t sub_40b5d0(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_40b670",
            "funcStartAddr": "0x40b670",
            "funcEndAddr": "0x40b6ea",
            "decompiledFuncCode": "uint64_t sub_40b670(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_414b79[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_40b69a;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_40b69a:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_40c490() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_40b6f0",
            "funcStartAddr": "0x40b6f0",
            "funcEndAddr": "0x40b807",
            "decompiledFuncCode": "int64_t sub_40b6f0(int64_t arg1, int64_t arg2, int32_t arg3, int32_t arg4, \n    int32_t arg5, int32_t arg6, int32_t arg7, int32_t arg8, int32_t arg9, \n    int32_t arg10)\n{\n    int64_t rbx = arg6;\n    int32_t rax;\n    rax = (arg1 & 3) == 0;\n    int32_t r10_2 = (((arg1 >> 2) + 0x1db) - rax);\n    int32_t rax_1;\n    rax_1 = (arg6 & 3) == 0;\n    int64_t rdi = (arg1 - rbx);\n    int32_t r12_3 = (((rbx >> 2) + 0x1db) - rax_1);\n    int32_t temp0;\n    int32_t temp1;\n    temp0 = HIGHW((r10_2 * 0x51eb851f));\n    temp1 = LOWW((r10_2 * 0x51eb851f));\n    uint64_t rbp_1 = ((temp0 >> 3) - (r10_2 >> 0x1f));\n    int32_t rbp_2 = (rbp_1 - ((r10_2 - ((rbp_1 * 5) * 5)) >> 0x1f));\n    int32_t temp2;\n    int32_t temp3;\n    temp2 = HIGHW((r12_3 * 0x51eb851f));\n    temp3 = LOWW((r12_3 * 0x51eb851f));\n    uint64_t rdx_6 = ((temp2 >> 3) - (r12_3 >> 0x1f));\n    int32_t rdx_7 = (rdx_6 - ((r12_3 - ((rdx_6 * 5) * 5)) >> 0x1f));\n    int64_t rsi_2 = (((arg2 + (rdi * 0x16d)) - arg7) + (((rbp_2 >> 2) - (rdx_7 >> 2)) + ((r10_2 - r12_3) - (rbp_2 - rdx_7))));\n    int64_t rax_25 = ((arg3 + (rsi_2 * 0x18)) - arg8);\n    int64_t rax_27 = ((arg4 + (((rax_25 << 4) - rax_25) << 2)) - arg9);\n    return ((arg5 + (((rax_27 << 4) - rax_27) << 2)) - arg10);\n}\n\n"
        },
        {
            "funcName": "sub_40b810",
            "funcStartAddr": "0x40b810",
            "funcEndAddr": "0x40b8a1",
            "decompiledFuncCode": "int64_t sub_40b810(int64_t arg1, int64_t arg2, int32_t arg3, int32_t arg4, \n    int32_t arg5, int64_t arg6, int32_t* arg7)\n{\n    if (arg7 != 0)\n    {\n        int64_t rax_1 = sub_40b6f0(arg1, arg2, arg3, arg4, arg5, arg7[5], arg7[7], arg7[2], arg7[1], *arg7);\n        int64_t rax_2 = (rax_1 + arg6);\n        if ((!(rax_1 + arg6)))\n        {\n            return rax_2;\n        }\n    }\n    if (arg6 >= 0)\n    {\n        int64_t rdx = (arg6 - 1);\n        int64_t rax_3 = 0x7fffffffffffffff;\n        if (arg6 > 0x7ffffffffffffffd)\n        {\n            rax_3 = rdx;\n        }\n        return rax_3;\n    }\n    if (arg6 >= -0x7ffffffffffffffe)\n    {\n        return -0x8000000000000000;\n    }\n    return (arg6 + 1);\n}\n\n"
        },
        {
            "funcName": "sub_40b8b0",
            "funcStartAddr": "0x40b8b0",
            "funcEndAddr": "0x40b96f",
            "decompiledFuncCode": "int64_t sub_40b8b0(int64_t arg1, int64_t* arg2, int64_t arg3)\n{\n    int64_t var_30 = *arg2;\n    int64_t rax_1 = arg1(&var_30, arg3);\n    if (rax_1 == 0)\n    {\n        int64_t r14_1 = *arg2;\n        int64_t rbp_1 = 0;\n        if (r14_1 != 0)\n        {\n            while (true)\n            {\n                int64_t rbx_1 = (((rbp_1 | r14_1) & 1) + ((r14_1 >> 1) + (rbp_1 >> 1)));\n                if ((rbp_1 != rbx_1 && r14_1 != rbx_1))\n                {\n                    break;\n                }\n                var_30 = rbx_1;\n                rax_1 = arg1(&var_30, arg3);\n                if (rax_1 == 0)\n                {\n                    r14_1 = rbx_1;\n                    rbx_1 = rbp_1;\n                }\n                rbp_1 = rbx_1;\n            }\n            if ((rax_1 == 0 && rbp_1 != 0))\n            {\n                var_30 = rbp_1;\n                return arg1(&var_30, arg3);\n            }\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40b970",
            "funcStartAddr": "0x40b970",
            "funcEndAddr": "0x40bdaa",
            "decompiledFuncCode": "int64_t sub_40b970(int32_t* arg1, int64_t arg2, int64_t* arg3)\n{\n    int32_t rax = *arg1;\n    int64_t rsi = arg1[3];\n    int32_t rax_1 = arg1[1];\n    int32_t rax_2 = arg1[2];\n    int32_t rdi = arg1[4];\n    int32_t rax_3 = arg1[8];\n    int32_t temp0;\n    int32_t temp1;\n    temp0 = HIGHW((rdi * 0x2aaaaaab));\n    temp1 = LOWW((rdi * 0x2aaaaaab));\n    int32_t rdx_2 = 0;\n    uint64_t rcx_1 = ((temp0 >> 1) - (rdi >> 0x1f));\n    int32_t rdi_1 = (rdi - ((rcx_1 * 3) << 2));\n    int64_t rbx_3 = ((rcx_1 - (rdi_1 >> 0x1f)) + arg1[5]);\n    if ((rbx_3 & 3) == 0)\n    {\n        int64_t rax_13;\n        int64_t rdx_3;\n        rdx_3 = HIGHD((rbx_3 * -0x5c28f5c28f5c28f5));\n        rax_13 = LOWD((rbx_3 * -0x5c28f5c28f5c28f5));\n        int64_t rax_16 = (((rdx_3 + rbx_3) >> 6) - (rbx_3 >> 0x3f));\n        rdx_2 = 1;\n        if (rbx_3 == (rax_16 * 0x64))\n        {\n            rdx_2 = (rax_16 & 3) == 1;\n        }\n    }\n    int32_t r12 = 0x3b;\n    int32_t rbp = 6;\n    int64_t rax_20 = rdx_2;\n    int64_t rcx_5 = ((rdi_1 + ((rdi_1 >> 0x1f) & 0xc)) + (rax_20 + (((rax_20 + rax_20) + rax_20) << 2)));\n    int64_t rsi_1 = (rsi + (*((rcx_5 + rcx_5) + 0x414ba0) - 1));\n    if (rax <= 0x3b)\n    {\n        r12 = rax;\n    }\n    int32_t rax_26 = 0;\n    if (r12 >= 0)\n    {\n        rax_26 = r12;\n    }\n    uint64_t rax_30 = (-*arg3);\n    int32_t var_d4 = rax_30;\n    int64_t rax_31 = sub_40b6f0(rbx_3, rsi_1, rax_2, rax_1, rax_26, 0x46, 0, 0, 0, rax_30);\n    int64_t r13 = rax_31;\n    int64_t var_c8 = rax_31;\n    int32_t r12_1 = 0;\n    int64_t r14_1 = r13;\n    int64_t rax_33;\n    while (true)\n    {\n        int64_t r15_1 = var_c8;\n        int32_t var_b8;\n        rax_33 = sub_40b810(rbx_3, rsi_1, rax_2, rax_1, rax_26, r15_1, sub_40b8b0(arg2, &var_c8, &var_b8));\n        int32_t var_98;\n        void* var_78;\n        int32_t* r14_2;\n        if (r15_1 != rax_33)\n        {\n            if (r15_1 != r13)\n            {\n            label_40bad8:\n                int32_t temp2_1 = rbp;\n                rbp = (rbp - 1);\n                if (temp2_1 != 1)\n                {\n                    var_c8 = rax_33;\n                    r13 = r14_1;\n                    r14_1 = r15_1;\n                    r12_1 = var_98 != 0;\n                    continue;\n                }\n            }\n            else\n            {\n                if (r15_1 == r14_1)\n                {\n                    goto label_40bad8;\n                }\n                bool cond:2_1 = var_98 != 0;\n                if (var_98 >= 0)\n                {\n                    bool cond:3_1 = rax_3 != 0;\n                    if (rax_3 < 0)\n                    {\n                        if (cond:2_1 < r12_1)\n                        {\n                            goto label_40bad8;\n                        }\n                        goto label_40bb77;\n                    }\n                    if (cond:3_1 == cond:2_1)\n                    {\n                        goto label_40bad8;\n                    }\n                    goto label_40bb77;\n                }\n            label_40bb77:\n                r14_2 = arg1;\n                rax_33 = r15_1;\n            label_40bb90:\n                int32_t rsi_5 = var_b8;\n                *arg3 = (rax_33 - (var_d4 + rax_31));\n                int64_t rax_36;\n                void* rdx_19;\n                if (rsi_5 != rax)\n                {\n                    int64_t* rcx_11;\n                    rcx_11 = rax <= 0;\n                    int64_t rdx_16;\n                    rdx_16 = rsi_5 == 0x3c;\n                    rdx_19 = (rax + ((rdx_16 & rcx_11) - rax_26));\n                    void* rax_34 = (rax_33 + rdx_19);\n                    var_c8 = rax_34;\n                    if ((!(rax_33 + rdx_19)))\n                    {\n                        var_78 = rax_34;\n                        rax_36 = arg2(&var_78, &var_b8);\n                        if (rax_36 != 0)\n                        {\n                            rax_33 = var_c8;\n                        }\n                    }\n                }\n                if ((((rsi_5 != rax && (!(rax_33 + rdx_19))) && rax_36 != 0) || rsi_5 == rax))\n                {\n                    *r14_2 = var_b8;\n                    int128_t var_a8;\n                    *(r14_2 + 0x10) = var_a8;\n                    *(r14_2 + 0x20) = var_98;\n                    int64_t var_88;\n                    *(r14_2 + 0x30) = var_88;\n                    break;\n                }\n            }\n            rax_33 = -1;\n            break;\n        }\n        r14_2 = arg1;\n        int32_t var_f0;\n        var_f0 = rax_3 == 0;\n        char rbp_1 = var_f0;\n        if ((rbp_1 != var_98 == 0 && (rax_3 >= 0 && var_98 >= 0)))\n        {\n            int32_t r13_1 = 0x92c70;\n            var_f0 = rbx_3;\n            do\n            {\n                int32_t rbx_4 = (r13_1 + r13_1);\n                int32_t r12_3 = 2;\n                int32_t r15_3 = (-r13_1);\n                int64_t rdx_23 = r15_3;\n                int64_t var_c0 = (rdx_23 + rax_33);\n                if ((!(rdx_23 + rax_33)))\n                {\n                    goto label_40bd30;\n                }\n                while (true)\n                {\n                    r15_3 = (r15_3 + rbx_4);\n                    if (r12_3 == 1)\n                    {\n                        break;\n                    }\n                    int64_t rdx_25 = r15_3;\n                    r12_3 = 1;\n                    var_c0 = (rdx_25 + rax_33);\n                    if ((!(rdx_25 + rax_33)))\n                    {\n                    label_40bd30:\n                        sub_40b8b0(arg2, &var_c0, &var_78);\n                        int32_t var_58;\n                        if (rbp_1 == var_58 == 0)\n                        {\n                            break;\n                        }\n                        if (var_58 < 0)\n                        {\n                            break;\n                        }\n                        rax_33 = var_c8;\n                    }\n                }\n                if (r12_3 != 1)\n                {\n                    var_c8 = sub_40b810(var_f0, rsi_1, rax_2, rax_1, rax_26, var_c0, &var_78);\n                    sub_40b8b0(arg2, &var_c8, &var_b8);\n                    rax_33 = var_c8;\n                    break;\n                }\n                r13_1 = (r13_1 + 0x92c70);\n            } while (r13_1 != 0x100dc400);\n        }\n        goto label_40bb90;\n    }\n    return rax_33;\n}\n\n"
        },
        {
            "funcName": "sub_40bdb0",
            "funcStartAddr": "0x40bdb0",
            "funcEndAddr": "0x40bdcc",
            "decompiledFuncCode": "int64_t sub_40bdb0(int32_t* arg1)\n{\n    tzset();\n    /* tailcall */\n    return sub_40b970(arg1, 0x4019d0, &data_618538);\n}\n\n"
        },
        {
            "funcName": "sub_40bdd0",
            "funcStartAddr": "0x40bdd0",
            "funcEndAddr": "0x40be15",
            "decompiledFuncCode": "uint64_t sub_40bdd0(void* arg1)\n{\n    int32_t rax;\n    if (*(arg1 + 8) != 0)\n    {\n        rax = setenv(&data_411eae, (arg1 + 9), 1);\n    }\n    else\n    {\n        rax = unsetenv(&data_411eae);\n    }\n    int32_t rdx = 0;\n    if (rax == 0)\n    {\n        tzset();\n        rdx = 1;\n    }\n    return rdx;\n}\n\n"
        },
        {
            "funcName": "sub_40be20",
            "funcStartAddr": "0x40be20",
            "funcEndAddr": "0x40be49",
            "decompiledFuncCode": "void sub_40be20(int64_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        return;\n    }\n    int64_t* rbx_1;\n    do\n    {\n        rbx_1 = *arg1;\n        free(arg1);\n        arg1 = rbx_1;\n    } while (rbx_1 != 0);\n}\n\n"
        },
        {
            "funcName": "sub_40be50",
            "funcStartAddr": "0x40be50",
            "funcEndAddr": "0x40be91",
            "decompiledFuncCode": "uint64_t sub_40be50(int64_t* arg1)\n{\n    int32_t* rax = __errno_location();\n    int32_t r13 = *rax;\n    int32_t rax_1 = sub_40bdd0(arg1);\n    if (rax_1 == 0)\n    {\n        r13 = *rax;\n    }\n    sub_40be20(arg1);\n    *rax = r13;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40bea0",
            "funcStartAddr": "0x40bea0",
            "funcEndAddr": "0x40bf2f",
            "decompiledFuncCode": "int64_t* sub_40bea0(char* arg1)\n{\n    int64_t* rbx;\n    if (arg1 == 0)\n    {\n        int64_t* rax_3 = malloc(0x80);\n        rbx = rax_3;\n        if (rax_3 != 0)\n        {\n            *rbx = 0;\n            rbx[1] = 0;\n            return rbx;\n        }\n    }\n    else\n    {\n        uint64_t rdi = 0x76;\n        uint64_t rbp_1 = (strlen(arg1) + 1);\n        if (rbp_1 >= 0x76)\n        {\n            rdi = rbp_1;\n        }\n        int64_t* rax_1 = malloc(((rdi + 0x11) & 0xfffffffffffffff8));\n        rbx = rax_1;\n        if (rax_1 != 0)\n        {\n            *rax_1 = 0;\n            rbx[1] = 1;\n            memcpy((rbx + 9), arg1, rbp_1);\n            *((rbx + rbp_1) + 9) = 0;\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40bf30",
            "funcStartAddr": "0x40bf30",
            "funcEndAddr": "0x40c0a5",
            "decompiledFuncCode": "int64_t sub_40bf30(int64_t** arg1, void* arg2)\n{\n    char* r12 = *(arg2 + 0x30);\n    if (r12 == 0)\n    {\n        return 1;\n    }\n    int64_t** rbp = arg1;\n    int64_t rax_1;\n    if (arg2 <= r12)\n    {\n        rax_1 = 1;\n    }\n    if ((arg2 > r12 || (arg2 <= r12 && r12 >= (arg2 + 0x38))))\n    {\n        void* rbx_1 = (rbp + 9);\n        if (*r12 == 0)\n        {\n            rbx_1 = &data_414b79[0x1b];\n        }\n        else\n        {\n        label_40bf7e:\n            if (strcmp(rbx_1, r12) != 0)\n            {\n                int32_t rax_5;\n                do\n                {\n                    if (*rbx_1 == 0)\n                    {\n                        void* r14_1 = (rbp + 9);\n                        void* rax_9;\n                        uint64_t r15_1;\n                        if ((r14_1 == rbx_1 && rbp[1] == 0))\n                        {\n                            r15_1 = (strlen(r12) + 1);\n                            rax_9 = nullptr;\n                        }\n                        if (r14_1 != rbx_1)\n                        {\n                            r15_1 = (strlen(r12) + 1);\n                            rax_9 = (rbx_1 - r14_1);\n                            if ((!rax_9) < r15_1)\n                            {\n                                *__errno_location() = 0xc;\n                                return 0;\n                            }\n                        }\n                        if (((r14_1 == rbx_1 && rbp[1] == 0) || r14_1 != rbx_1))\n                        {\n                            if ((rax_9 + r15_1) <= 0x76)\n                            {\n                                memcpy(rbx_1, r12, r15_1);\n                                *(rbx_1 + r15_1) = 0;\n                                break;\n                            }\n                            int64_t* rax_13 = sub_40bea0(r12);\n                            *rbp = rax_13;\n                            if (rax_13 != 0)\n                            {\n                                rax_13[1] = 0;\n                                rbx_1 = (rax_13 + 9);\n                                break;\n                            }\n                            return 0;\n                        }\n                    }\n                    rbx_1 = ((rbx_1 + strlen(rbx_1)) + 1);\n                    if (*rbx_1 != 0)\n                    {\n                        goto label_40bf7e;\n                    }\n                    int64_t* rax_4 = *rbp;\n                    if (rax_4 == 0)\n                    {\n                        goto label_40bf7e;\n                    }\n                    rbx_1 = (rax_4 + 9);\n                    rbp = rax_4;\n                    rax_5 = strcmp(rbx_1, r12);\n                } while (rax_5 != 0);\n            }\n        }\n        *(arg2 + 0x30) = rbx_1;\n        rax_1 = 1;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40c0b0",
            "funcStartAddr": "0x40c0b0",
            "funcEndAddr": "0x40c15f",
            "decompiledFuncCode": "int64_t* sub_40c0b0(void* arg1)\n{\n    char* rax = getenv(&data_411eae);\n    if (rax == 0)\n    {\n        if (*(arg1 + 8) == 0)\n        {\n            return 1;\n        }\n    }\n    else if ((*(arg1 + 8) != 0 && strcmp((arg1 + 9), rax) == 0))\n    {\n        return 1;\n    }\n    int64_t* rax_1 = sub_40bea0(rax);\n    if ((rax_1 != 0 && sub_40bdd0(arg1) == 0))\n    {\n        int32_t* rax_7 = __errno_location();\n        int32_t r12_1 = *rax_7;\n        if (rax_1 != 1)\n        {\n            sub_40be20(rax_1);\n        }\n        *rax_7 = r12_1;\n        return 0;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40c160",
            "funcStartAddr": "0x40c160",
            "funcEndAddr": "0x40c171",
            "decompiledFuncCode": "void sub_40c160(int64_t* arg1)\n{\n    if (arg1 == 1)\n    {\n        return;\n    }\n    /* tailcall */\n    return sub_40be20(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_40c180",
            "funcStartAddr": "0x40c180",
            "funcEndAddr": "0x40c225",
            "decompiledFuncCode": "struct tm* sub_40c180(int64_t** arg1, time_t* arg2, struct tm* arg3)\n{\n    if (arg1 == 0)\n    {\n        /* tailcall */\n        return gmtime_r(arg2, arg3);\n    }\n    int64_t* rax = sub_40c0b0(arg1);\n    if (rax != 0)\n    {\n        struct tm* rax_1 = localtime_r(arg2, arg3);\n        char rax_2;\n        if (rax_1 != 0)\n        {\n            rax_2 = sub_40bf30(arg1, arg3);\n            if (rax_2 != 0)\n            {\n                char rax_5;\n                if (rax != 1)\n                {\n                    rax_5 = sub_40be50(rax);\n                }\n                if ((rax == 1 || (rax != 1 && rax_5 != 0)))\n                {\n                    return arg3;\n                }\n            }\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_2 == 0)) && rax != 1))\n        {\n            sub_40be50(rax);\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40c230",
            "funcStartAddr": "0x40c230",
            "funcEndAddr": "0x40c34c",
            "decompiledFuncCode": "time_t sub_40c230(int64_t** arg1, int32_t* arg2)\n{\n    if (arg1 == 0)\n    {\n        return timegm(arg2);\n    }\n    int64_t* rax = sub_40c0b0(arg1);\n    time_t var_60;\n    char rax_3;\n    if (rax != 0)\n    {\n        time_t rax_1 = sub_40bdb0(arg2);\n        var_60 = rax_1;\n        int32_t var_58;\n        if (rax_1 == -1)\n        {\n            if (localtime_r(&var_60, &var_58) != 0)\n            {\n                int32_t rax_6 = arg2[8];\n                int32_t var_38;\n                if (((rax_6 == 0 == var_38 == 0 || (rax_6 == 0 != var_38 == 0 && rax_6 < 0)) || ((rax_6 == 0 != var_38 == 0 && rax_6 >= 0) && var_38 < 0)))\n                {\n                    int32_t var_54;\n                    int32_t var_50;\n                    int32_t var_4c;\n                    int32_t var_48;\n                    int32_t var_44;\n                    int32_t rax_12 = (((((arg2[4] ^ var_48) | (arg2[5] ^ var_44)) | (arg2[3] ^ var_4c)) | (arg2[2] ^ var_50)) | (arg2[1] ^ var_54));\n                    if ((rax_12 | (*arg2 ^ var_58)) == 0)\n                    {\n                        goto label_40c271;\n                    }\n                }\n            }\n        }\n        else\n        {\n        label_40c271:\n            if (sub_40bf30(arg1, arg2) == 0)\n            {\n                var_60 = -1;\n            }\n        }\n        if (rax != 1)\n        {\n            rax_3 = sub_40be50(rax);\n        }\n    }\n    time_t rax_4;\n    if ((rax == 1 || ((rax != 0 && rax != 1) && rax_3 != 0)))\n    {\n        rax_4 = var_60;\n    }\n    if ((rax == 0 || ((rax != 0 && rax != 1) && rax_3 == 0)))\n    {\n        rax_4 = -1;\n    }\n    return rax_4;\n}\n\n"
        },
        {
            "funcName": "sub_40c370",
            "funcStartAddr": "0x40c370",
            "funcEndAddr": "0x40c42d",
            "decompiledFuncCode": "uint64_t sub_40c370(FILE* arg1, char* arg2, int64_t arg3)\n{\n    uint64_t var_800 = 0x7d0;\n    void var_7f8;\n    char* rax;\n    uint16_t x87control;\n    int80_t st0;\n    rax = sub_40e420(&var_7f8, &var_800, arg2, arg3, x87control);\n    uint64_t rbx = var_800;\n    uint64_t rax_1;\n    if (rax != 0)\n    {\n        rax_1 = fwrite(rax, 1, rbx, arg1);\n        if (rax_1 < rbx)\n        {\n            rbx = 0xffffffff;\n            if (rax != &var_7f8)\n            {\n                int32_t* rax_3 = __errno_location();\n                int32_t r13_1 = *rax_3;\n                free(rax);\n                *rax_3 = r13_1;\n            }\n        }\n        else\n        {\n            if (rax != &var_7f8)\n            {\n                free(rax);\n            }\n            if (rbx > 0x7fffffff)\n            {\n                *__errno_location() = 0x4b;\n            }\n        }\n    }\n    if ((((rax != 0 && rax_1 >= rbx) && rbx > 0x7fffffff) || rax == 0))\n    {\n        rbx = 0xffffffff;\n        sub_40e410(arg1);\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40c430",
            "funcStartAddr": "0x40c430",
            "funcEndAddr": "0x40c48d",
            "decompiledFuncCode": "uint64_t sub_40c430(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_40e2f0(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40c490",
            "funcStartAddr": "0x40c490",
            "funcEndAddr": "0x40c4ee",
            "decompiledFuncCode": "int64_t sub_40c490()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_412020;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            void* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40c4f0",
            "funcStartAddr": "0x40c4f0",
            "funcEndAddr": "0x40ca52",
            "decompiledFuncCode": "char* sub_40c4f0()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_618548;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_414b79[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        size_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            size_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_40c5ec;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_40c636;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_40c5ec:\n            r15 = &data_414b79[0x1b];\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_40c636:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, \"r\");\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_40c6ec:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_40c87b;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_40c728:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_40c728;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_40c762:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_40c762;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_414b79[0x1b];\n                                    free(rdi_26);\n                                    sub_40e2f0(rax_12);\n                                    goto label_40c677;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_40c93b:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_40c93b;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_40c989:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_40c989;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_40c6ec;\n                        }\n                        break;\n                    }\n                label_40c87b:\n                    sub_40e2f0(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_414b79[0x1b];\n            }\n        label_40c677:\n            free(rbp_3);\n        }\n        data_618548 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40ca60",
            "funcStartAddr": "0x40ca60",
            "funcEndAddr": "0x40caa1",
            "decompiledFuncCode": "char* sub_40ca60(char* arg1, void* arg2, int64_t arg3)\n{\n    if (arg3 != 0)\n    {\n        int64_t rbx_1 = (arg3 - 1);\n        int32_t** rax_1 = __ctype_tolower_loc();\n        do\n        {\n            arg1[rbx_1] = *rax_1[*(arg2 + rbx_1)];\n            rbx_1 = (rbx_1 - 1);\n        } while (rbx_1 != -1);\n    }\n    return arg1;\n}\n\n"
        },
        {
            "funcName": "sub_40cab0",
            "funcStartAddr": "0x40cab0",
            "funcEndAddr": "0x40caf1",
            "decompiledFuncCode": "char* sub_40cab0(char* arg1, void* arg2, int64_t arg3)\n{\n    if (arg3 != 0)\n    {\n        int64_t rbx_1 = (arg3 - 1);\n        int32_t** rax_1 = __ctype_toupper_loc();\n        do\n        {\n            arg1[rbx_1] = *rax_1[*(arg2 + rbx_1)];\n            rbx_1 = (rbx_1 - 1);\n        } while (rbx_1 != -1);\n    }\n    return arg1;\n}\n\n"
        },
        {
            "funcName": "sub_40cb00",
            "funcStartAddr": "0x40cb00",
            "funcEndAddr": "0x40e2c5",
            "decompiledFuncCode": "int64_t sub_40cb00(char* arg1, int64_t arg2, char* arg3, struct tm* arg4, \n    char arg5, int64_t arg6, int64_t** arg7, int32_t arg8)\n{\n    char* r15 = arg1;\n    char* rbx = arg3;\n    char* r12 = arg4->tm_zone;\n    int32_t r11 = arg4->tm_hour;\n    if (r12 == 0)\n    {\n        r12 = &data_414b79[0x1b];\n    }\n    if (r11 > 0xc)\n    {\n        r11 = (r11 - 0xc);\n    }\n    else if (r11 == 0)\n    {\n        r11 = 0xc;\n    }\n    char rax = *rbx;\n    int64_t r14 = 0;\n    if (rax != 0)\n    {\n        char var_456;\n        char* var_4b8_1 = &var_456;\n        do\n        {\n            char* r8;\n            if (rax == 0x25)\n            {\n                char r11_1 = arg5;\n                uint32_t r8_1 = 0;\n                int32_t r12_1 = 0;\n                char rcx;\n                uint64_t rbp_1;\n                int32_t r9;\n                while (true)\n                {\n                    rbx = &rbx[1];\n                    int32_t rax_2 = *rbx;\n                    rcx = rax_2;\n                    r9 = rax_2;\n                    bool cond:2_1 = rax_2 > 0x30;\n                    if (rax_2 != 0x30)\n                    {\n                        while ((!cond:2_1))\n                        {\n                            if (rax_2 != 0x23)\n                            {\n                                break;\n                            }\n                            rbx = &rbx[1];\n                            rax_2 = *rbx;\n                            r8_1 = 1;\n                            rcx = rax_2;\n                            r9 = rax_2;\n                            cond:2_1 = rax_2 > 0x30;\n                            if (rax_2 == 0x30)\n                            {\n                                break;\n                            }\n                        }\n                        if (((!cond:2_1) && rax_2 != 0x23))\n                        {\n                            if (rax_2 != 0x2d)\n                            {\n                                rbp_1 = 0xffffffff;\n                                if ((rax_2 - 0x30) > 9)\n                                {\n                                    break;\n                                }\n                            label_40cc91:\n                                rbp_1 = 0;\n                                while (true)\n                                {\n                                    int32_t rax_6 = rbx[1];\n                                    void* rsi = &rbx[1];\n                                    rcx = rax_6;\n                                    int32_t rdx_2 = (rax_6 - 0x30);\n                                    bool cond:3_1 = rbp_1 == 0xccccccc;\n                                    int32_t rdi;\n                                    if (rbp_1 <= 0xccccccc)\n                                    {\n                                        rdi = *rbx;\n                                        if (((!cond:3_1) || (cond:3_1 && rdi <= 0x37)))\n                                        {\n                                            rbx = rsi;\n                                            rbp_1 = ((rdi + ((rbp_1 * 5) << 1)) - 0x30);\n                                        }\n                                    }\n                                    if ((rbp_1 > 0xccccccc || ((rbp_1 <= 0xccccccc && cond:3_1) && rdi > 0x37)))\n                                    {\n                                        if (rdx_2 > 9)\n                                        {\n                                            r9 = rax_6;\n                                            rbx = rsi;\n                                            rbp_1 = 0x7fffffff;\n                                            break;\n                                        }\n                                        rax_6 = rbx[2];\n                                        rbp_1 = 0x7fffffff;\n                                        rbx = &rbx[2];\n                                        rcx = rax_6;\n                                        rdx_2 = (rax_6 - 0x30);\n                                    }\n                                    if ((((rbp_1 > 0xccccccc || ((rbp_1 <= 0xccccccc && cond:3_1) && rdi > 0x37)) && rdx_2 <= 9) || (rbp_1 <= 0xccccccc && ((!cond:3_1) || (cond:3_1 && rdi <= 0x37)))))\n                                    {\n                                        if (rdx_2 > 9)\n                                        {\n                                            r9 = rax_6;\n                                            break;\n                                        }\n                                    }\n                                }\n                                break;\n                            }\n                        }\n                        else if (cond:2_1)\n                        {\n                            if (rax_2 == 0x5e)\n                            {\n                                r11_1 = 1;\n                                continue;\n                            }\n                            else if (rax_2 != 0x5f)\n                            {\n                                rbp_1 = 0xffffffff;\n                                if ((rax_2 - 0x30) > 9)\n                                {\n                                    break;\n                                }\n                                goto label_40cc91;\n                            }\n                        }\n                    }\n                    r12_1 = rax_2;\n                }\n                if ((rcx == 0x45 || rcx == 0x4f))\n                {\n                    rcx = rbx[1];\n                    rbx = &rbx[1];\n                }\n                if ((rcx != 0x45 && rcx != 0x4f))\n                {\n                    r9 = 0;\n                }\n                if (rcx > 0x7a)\n                {\n                    goto label_40d948;\n                }\n                uint64_t var_498;\n                char var_480;\n                int64_t rax_110;\n                int64_t rdx_83;\n                char r13_1;\n                int64_t r13_10;\n                int64_t r13_12;\n                switch (rcx)\n                {\n                    case 0x25:\n                    {\n                        int32_t rax_126 = 0;\n                        r13_10 = 1;\n                        rdx_83 = (arg2 - r14);\n                        if (rbp_1 >= 0)\n                        {\n                            rax_126 = rbp_1;\n                        }\n                        rax_110 = rax_126;\n                        if (rax_110 != 0)\n                        {\n                            r13_10 = rax_110;\n                        }\n                        break;\n                    }\n                    case 0x50:\n                    {\n                        r13_1 = 1;\n                        break;\n                    }\n                    case 0x52:\n                    {\n                        var_498 = \"%H:%M\";\n                        break;\n                    }\n                    case 0x54:\n                    {\n                        var_498 = \"%H:%M:%S\";\n                        break;\n                    }\n                    case 0x5a:\n                    {\n                        char* rdi_17 = r12;\n                        var_480 = r8_1;\n                        if (r8_1 != 0)\n                        {\n                            r11_1 = 0;\n                        }\n                        uint64_t rax_56 = strlen(rdi_17);\n                        int32_t rax_57 = 0;\n                        if (rbp_1 >= 0)\n                        {\n                            rax_57 = rbp_1;\n                        }\n                        uint64_t rax_58 = rax_57;\n                        uint64_t rsi_20 = rax_58;\n                        if (rax_56 >= rax_58)\n                        {\n                            rsi_20 = rax_56;\n                        }\n                        if ((arg2 - r14) <= rsi_20)\n                        {\n                            break;\n                        }\n                        if (r15 != 0)\n                        {\n                            char r11_4 = r11_1;\n                            char r8_7 = var_480;\n                            if (rax_56 < rax_58)\n                            {\n                                uint64_t rdx_49 = (rbp_1 - rax_56);\n                                void* rbp_5 = &r15[rdx_49];\n                                if (r12_1 == 0x30)\n                                {\n                                    char* rdi_52 = r15;\n                                    r15 = rbp_5;\n                                    memset(rdi_52, 0x30, rdx_49);\n                                    r11_4 = r11_1;\n                                    r8_7 = var_480;\n                                }\n                                else\n                                {\n                                    char* rdi_18 = r15;\n                                    r15 = rbp_5;\n                                    memset(rdi_18, 0x20, rdx_49);\n                                }\n                            }\n                            char* rdi_19 = r15;\n                            if (r8_7 != 0)\n                            {\n                                sub_40ca60(rdi_19, r12, rax_56);\n                            }\n                            else if (r11_4 == 0)\n                            {\n                                memcpy(rdi_19, r12, rax_56);\n                            }\n                            else\n                            {\n                                sub_40cab0(rdi_19, r12, rax_56);\n                            }\n                            r15 = &r15[rax_56];\n                        }\n                        r14 = (r14 + rsi_20);\n                        r8 = rbx;\n                        break;\n                    }\n                    case 0x6e:\n                    {\n                        int32_t r13_9 = 0;\n                        if (rbp_1 >= 0)\n                        {\n                            r13_9 = rbp_1;\n                        }\n                        r13_10 = r13_9;\n                        if (r13_10 == 0)\n                        {\n                            r13_10 = 1;\n                        }\n                        if ((arg2 - r14) <= r13_10)\n                        {\n                            break;\n                        }\n                        if (r15 != 0)\n                        {\n                            if (rbp_1 > 1)\n                            {\n                                uint64_t rdx_52 = (rbp_1 - 1);\n                                void* rbp_6 = &r15[rdx_52];\n                                if (r12_1 == 0x30)\n                                {\n                                    char* rdi_48 = r15;\n                                    r15 = rbp_6;\n                                    memset(rdi_48, 0x30, rdx_52);\n                                }\n                                else\n                                {\n                                    char* rdi_20 = r15;\n                                    r15 = rbp_6;\n                                    memset(rdi_20, 0x20, rdx_52);\n                                }\n                            }\n                            *r15 = 0xa;\n                            r15 = &r15[1];\n                        }\n                        break;\n                    }\n                    case 0x70:\n                    {\n                        r13_1 = 0;\n                        break;\n                    }\n                    case 0x74:\n                    {\n                        int32_t r13_11 = 0;\n                        if (rbp_1 >= 0)\n                        {\n                            r13_11 = rbp_1;\n                        }\n                        r13_10 = r13_11;\n                        if (r13_10 == 0)\n                        {\n                            r13_10 = 1;\n                        }\n                        if ((arg2 - r14) <= r13_10)\n                        {\n                            break;\n                        }\n                        if (r15 != 0)\n                        {\n                            if (rbp_1 > 1)\n                            {\n                                uint64_t rdx_63 = (rbp_1 - 1);\n                                void* rbp_8 = &r15[rdx_63];\n                                if (r12_1 == 0x30)\n                                {\n                                    char* rdi_49 = r15;\n                                    r15 = rbp_8;\n                                    memset(rdi_49, 0x30, rdx_63);\n                                }\n                                else\n                                {\n                                    char* rdi_23 = r15;\n                                    r15 = rbp_8;\n                                    memset(rdi_23, 0x20, rdx_63);\n                                }\n                            }\n                            *r15 = 9;\n                            r15 = &r15[1];\n                        }\n                        break;\n                    }\n                    case 0x7a:\n                    {\n                        r13_12 = 0;\n                        break;\n                    }\n                }\n                if ((rcx == 0x50 || rcx == 0x70))\n                {\n                    char temp6_1 = r8_1;\n                    bool cond:15_1 = temp6_1 != 0;\n                    rcx = 0x70;\n                    if (temp6_1 != 0)\n                    {\n                        r13_1 = r8_1;\n                    }\n                    if (cond:15_1)\n                    {\n                        r11_1 = 0;\n                    }\n                }\n                uint64_t rcx_12;\n                char* r9_12;\n                if (rcx == 0x25)\n                {\n                    if (r9 != 0)\n                    {\n                        r8 = rbx;\n                        r9_12 = rbx;\n                        rcx_12 = 1;\n                    }\n                    else\n                    {\n                        if (r13_10 >= rdx_83)\n                        {\n                            break;\n                        }\n                        if (r15 != 0)\n                        {\n                            if (rbp_1 > 1)\n                            {\n                                uint64_t rdx_96 = (rbp_1 - 1);\n                                void* rbp_9 = &r15[rdx_96];\n                                if (r12_1 == 0x30)\n                                {\n                                    char* rdi_51 = r15;\n                                    r15 = rbp_9;\n                                    memset(rdi_51, 0x30, rdx_96);\n                                    rcx = *rbx;\n                                }\n                                else\n                                {\n                                    char* rdi_36 = r15;\n                                    r15 = rbp_9;\n                                    memset(rdi_36, 0x20, rdx_96);\n                                    rcx = *rbx;\n                                }\n                            }\n                            *r15 = rcx;\n                            r15 = &r15[1];\n                        }\n                    }\n                }\n                int32_t rsi_19;\n                int32_t rdi_16;\n                int32_t r10_1;\n                if ((rcx == 0x59 && r9 != 0x45))\n                {\n                    if (r9 == 0x4f)\n                    {\n                        goto label_40d948;\n                    }\n                    var_498 = 0;\n                    r10_1 = 4;\n                    int32_t rsi_28 = arg4->tm_year;\n                    r8_1 = rsi_28 < 0xfffff894;\n                    rsi_19 = (rsi_28 + 0x76c);\n                    rdi_16 = 0;\n                }\n                if ((rcx == 0x43 && r9 != 0x45))\n                {\n                    var_498 = 0;\n                    r10_1 = 2;\n                    int32_t rdi_28 = arg4->tm_year;\n                    int32_t temp9_1;\n                    int32_t temp10_1;\n                    temp9_1 = HIGHW((rdi_28 * 0x51eb851f));\n                    temp10_1 = LOWW((rdi_28 * 0x51eb851f));\n                    int32_t rax_93 = ((temp9_1 >> 5) - (rdi_28 >> 0x1f));\n                    int32_t rdx_74;\n                    rdx_74 = (rax_93 + 0x13) > 0;\n                    r8_1 = rdi_28 < 0xfffff894;\n                    rsi_19 = ((rax_93 + 0x13) - (((rdi_28 - (rax_93 * 0x64)) >> 0x1f) & rdx_74));\n                    rdi_16 = 0;\n                }\n                if (((rcx == 0x6e || rcx == 0x74) || (rcx == 0x25 && r9 == 0)))\n                {\n                    r14 = (r14 + r13_10);\n                    r8 = rbx;\n                }\n                char var_488;\n                uint64_t var_478;\n                void var_441;\n                int128_t var_438;\n                int64_t rax_20;\n                uint64_t rcx_6;\n                char rcx_14;\n                char rcx_15;\n                int32_t rdx_69;\n                int32_t rdi_26;\n                int32_t r9_4;\n                uint64_t r9_6;\n                uint64_t r9_11;\n                void* r13_2;\n                switch (rcx)\n                {\n                    case 0:\n                    {\n                        r9_12 = &rbx[-1];\n                        rcx_14 = rbx[-1];\n                    label_40dadb:\n                        int32_t rax_122 = 0;\n                        rdx_83 = (arg2 - r14);\n                        if (rbp_1 >= 0)\n                        {\n                            rax_122 = rbp_1;\n                        }\n                        rax_110 = rax_122;\n                        if (rcx_14 == 0x25)\n                        {\n                            r13_10 = 1;\n                            r8 = r9_12;\n                            rcx_12 = 1;\n                            if (rax_110 != 0)\n                            {\n                                r13_10 = rax_110;\n                            }\n                        }\n                        else\n                        {\n                            rbx = r9_12;\n                        label_40d948:\n                            void* rax_108 = &rbx[-1];\n                            int32_t rdx_81 = (rax_108 + 2);\n                            int32_t rcx_11;\n                            do\n                            {\n                                r9_12 = rax_108;\n                                rcx_11 = (rdx_81 - rax_108);\n                                rax_108 = (rax_108 - 1);\n                            } while (*(rax_108 + 1) != 0x25);\n                            int32_t rax_109 = 0;\n                            rcx_12 = rcx_11;\n                            r8 = rbx;\n                            rdx_83 = (arg2 - r14);\n                            if (rbp_1 >= 0)\n                            {\n                                rax_109 = rbp_1;\n                            }\n                            rax_110 = rax_109;\n                            r13_10 = rax_110;\n                            if (rcx_12 >= rax_110)\n                            {\n                                r13_10 = rcx_12;\n                            }\n                        }\n                        break;\n                    }\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 0xa:\n                    case 0xb:\n                    case 0xc:\n                    case 0xd:\n                    case 0xe:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x20:\n                    case 0x21:\n                    case 0x22:\n                    case 0x23:\n                    case 0x24:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x32:\n                    case 0x33:\n                    case 0x34:\n                    case 0x35:\n                    case 0x36:\n                    case 0x37:\n                    case 0x38:\n                    case 0x39:\n                    case 0x3b:\n                    case 0x3c:\n                    case 0x3d:\n                    case 0x3e:\n                    case 0x3f:\n                    case 0x40:\n                    case 0x45:\n                    case 0x4a:\n                    case 0x4b:\n                    case 0x4c:\n                    case 0x4f:\n                    case 0x51:\n                    case 0x5b:\n                    case 0x5c:\n                    case 0x5d:\n                    case 0x5e:\n                    case 0x5f:\n                    case 0x60:\n                    case 0x66:\n                    case 0x69:\n                    case 0x6f:\n                    case 0x76:\n                    {\n                        goto label_40d948;\n                    }\n                    case 0x3a:\n                    {\n                        char rax_134 = rbx[1];\n                        void* rdx_98 = &rbx[1];\n                        r13_12 = 1;\n                        if (rax_134 == 0x3a)\n                        {\n                            do\n                            {\n                                r13_12 = (r13_12 + 1);\n                                rax_134 = rbx[r13_12];\n                                rdx_98 = &rbx[r13_12];\n                            } while (rax_134 == 0x3a);\n                        }\n                        if (rax_134 != 0x7a)\n                        {\n                            goto label_40d948;\n                        }\n                        rbx = rdx_98;\n                        break;\n                    }\n                    case 0x41:\n                    case 0x42:\n                    case 0x61:\n                    {\n                        if (r9 != 0)\n                        {\n                            goto label_40d948;\n                        }\n                        if (r8_1 != 0)\n                        {\n                            r11_1 = r8_1;\n                        }\n                        break;\n                    }\n                    case 0x44:\n                    {\n                        if (r9 != 0)\n                        {\n                            goto label_40d948;\n                        }\n                        var_498 = \"%m/%d/%y\";\n                        break;\n                    }\n                    case 0x46:\n                    {\n                        if (r9 != 0)\n                        {\n                            goto label_40d948;\n                        }\n                        var_498 = \"%Y-%m-%d\";\n                        break;\n                    }\n                    case 0x47:\n                    case 0x56:\n                    case 0x67:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40d948;\n                        }\n                        int32_t rsi_6 = arg4->tm_year;\n                        int32_t r10_4 = arg4->tm_yday;\n                        int32_t r13_4 = arg4->tm_wday;\n                        var_498 = rsi_6;\n                        int32_t rdi_8 = ((rsi_6 + ((rsi_6 >> 0x1f) & 0x190)) - 0x64);\n                        int32_t temp4_1;\n                        int32_t temp5_1;\n                        temp4_1 = HIGHW((((r10_4 - r13_4) + 0x17e) * 0x92492493));\n                        temp5_1 = LOWW((((r10_4 - r13_4) + 0x17e) * 0x92492493));\n                        uint64_t rax_32 = (((temp4_1 + ((r10_4 - r13_4) + 0x17e)) >> 2) - (((r10_4 - r13_4) + 0x17e) >> 0x1f));\n                        r8_1 = (((r10_4 - ((r10_4 - r13_4) + 0x17e)) + ((rax_32 << 3) - rax_32)) + 3);\n                        int32_t r13_7;\n                        if (r8_1 < 0)\n                        {\n                            int32_t rsi_41 = (rdi_8 - 1);\n                            int32_t rdx_104 = 0x16d;\n                            if ((rsi_41 & 3) == 0)\n                            {\n                                int32_t temp21_1;\n                                int32_t temp22_1;\n                                temp21_1 = HIGHW((rsi_41 * 0x51eb851f));\n                                temp22_1 = LOWW((rsi_41 * 0x51eb851f));\n                                rdx_104 = 0x16e;\n                                if (rsi_41 == (((temp21_1 >> 5) - (rsi_41 >> 0x1f)) * 0x64))\n                                {\n                                    int32_t temp33_1;\n                                    int32_t temp34_1;\n                                    temp33_1 = HIGHW(rsi_41);\n                                    temp34_1 = LOWW(rsi_41);\n                                    int32_t temp1_1 = (COMBINE(temp33_1, temp34_1) % 0x190);\n                                    rdx_104 = ((!(temp1_1 - temp1_1)) + 0x16e);\n                                }\n                            }\n                            int32_t r10_10 = (r10_4 + rdx_104);\n                            r13_7 = -1;\n                            int32_t temp19_1;\n                            int32_t temp20_1;\n                            temp19_1 = HIGHW((((r10_10 - r13_4) + 0x17e) * 0x92492493));\n                            temp20_1 = LOWW((((r10_10 - r13_4) + 0x17e) * 0x92492493));\n                            uint64_t rax_157 = (((temp19_1 + ((r10_10 - r13_4) + 0x17e)) >> 2) - (((r10_10 - r13_4) + 0x17e) >> 0x1f));\n                            r8_1 = (((r10_10 - ((r10_10 - r13_4) + 0x17e)) + ((rax_157 << 3) - rax_157)) + 3);\n                        }\n                        else\n                        {\n                            int32_t rax_34 = 0x16d;\n                            if ((rdi_8 & 3) == 0)\n                            {\n                                int32_t temp25_1;\n                                int32_t temp26_1;\n                                temp25_1 = HIGHW((rdi_8 * 0x51eb851f));\n                                temp26_1 = LOWW((rdi_8 * 0x51eb851f));\n                                int32_t rax_37 = (rdi_8 >> 0x1f);\n                                var_488 = rax_37;\n                                rax_34 = 0x16e;\n                                if (rdi_8 == (((temp25_1 >> 5) - rax_37) * 0x64))\n                                {\n                                    int32_t rax_40;\n                                    rax_40 = rdi_8 == (((temp25_1 >> 7) - var_488) * 0x190);\n                                    rax_34 = (rax_40 + 0x16d);\n                                }\n                            }\n                            int32_t rsi_13 = (r10_4 - rax_34);\n                            int32_t temp23_1;\n                            int32_t temp24_1;\n                            temp23_1 = HIGHW((((rsi_13 - r13_4) + 0x17e) * 0x92492493));\n                            temp24_1 = LOWW((((rsi_13 - r13_4) + 0x17e) * 0x92492493));\n                            uint64_t rax_45 = (((temp23_1 + ((rsi_13 - r13_4) + 0x17e)) >> 2) - (((rsi_13 - r13_4) + 0x17e) >> 0x1f));\n                            uint32_t r13_5 = (((rsi_13 - ((rsi_13 - r13_4) + 0x17e)) + ((rax_45 << 3) - rax_45)) + 3);\n                            if (r13_5 >= 0)\n                            {\n                                r8_1 = r13_5;\n                            }\n                            r13_7 = ((r13_5 >> 0x1f) + 1);\n                        }\n                        if (rcx != 0x47)\n                        {\n                            if (rcx != 0x67)\n                            {\n                                r10_1 = 2;\n                                int32_t temp43_1;\n                                int32_t temp44_1;\n                                temp43_1 = HIGHW((r8_1 * 0x92492493));\n                                temp44_1 = LOWW((r8_1 * 0x92492493));\n                                rsi_19 = ((((temp43_1 + r8_1) >> 2) - (r8_1 >> 0x1f)) + 1);\n                            }\n                            else\n                            {\n                                int32_t r8_6 = var_498;\n                                r10_1 = 2;\n                                int32_t temp45_1;\n                                int32_t temp46_1;\n                                temp45_1 = HIGHW((var_498 * 0x51eb851f));\n                                temp46_1 = LOWW((var_498 * 0x51eb851f));\n                                int32_t rdi_14 = ((r8_6 - (((temp45_1 >> 5) - (r8_6 >> 0x1f)) * 0x64)) + r13_7);\n                                int32_t temp47_1;\n                                int32_t temp48_1;\n                                temp47_1 = HIGHW((rdi_14 * 0x51eb851f));\n                                temp48_1 = LOWW((rdi_14 * 0x51eb851f));\n                                int32_t rsi_18 = (((temp47_1 >> 5) - (rdi_14 >> 0x1f)) * 0x64);\n                                int32_t rdi_15 = (rdi_14 - rsi_18);\n                                rsi_19 = rdi_15;\n                                if ((rdi_14 - rsi_18) < 0)\n                                {\n                                    rsi_19 = (rsi_19 + 0x64);\n                                    int32_t rdx_45 = (-rdi_15);\n                                    if (r8_6 < (0xfffff894 - r13_7))\n                                    {\n                                        rsi_19 = rdx_45;\n                                    }\n                                }\n                            }\n                            goto label_40d292;\n                        }\n                        int32_t rsi_49 = var_498;\n                        var_498 = 0;\n                        r10_1 = 4;\n                        rsi_19 = ((rsi_49 + r13_7) + 0x76c);\n                        r8_1 = rsi_49 < (0xfffff894 - r13_7);\n                        rdi_16 = 0;\n                        break;\n                    }\n                    case 0x48:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40d948;\n                        }\n                        r10_1 = 2;\n                        rsi_19 = arg4->tm_hour;\n                        goto label_40d292;\n                    }\n                    case 0x49:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40d948;\n                        }\n                        rsi_19 = r11;\n                        r10_1 = 2;\n                        goto label_40d292;\n                    }\n                    case 0x4d:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40d948;\n                        }\n                        r10_1 = 2;\n                        rsi_19 = arg4->tm_min;\n                        goto label_40d292;\n                    }\n                    case 0x4e:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40d948;\n                        }\n                        if (rbp_1 == 0xffffffff)\n                        {\n                            rsi_19 = arg8;\n                            rbp_1 = 9;\n                            r10_1 = 9;\n                        }\n                        else\n                        {\n                            if (rbp_1 > 8)\n                            {\n                                rsi_19 = arg8;\n                            }\n                            else\n                            {\n                                rsi_19 = arg8;\n                                int32_t rdi_46 = rbp_1;\n                                do\n                                {\n                                    rdi_46 = (rdi_46 + 1);\n                                    int32_t temp39_1;\n                                    int32_t temp40_1;\n                                    temp39_1 = HIGHW((rsi_19 * 0x66666667));\n                                    temp40_1 = LOWW((rsi_19 * 0x66666667));\n                                    rsi_19 = ((temp39_1 >> 2) - (rsi_19 >> 0x1f));\n                                } while (rdi_46 != 9);\n                            }\n                            r10_1 = rbp_1;\n                        }\n                        goto label_40d292;\n                    }\n                    case 0x53:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40d948;\n                        }\n                        r10_1 = 2;\n                        rsi_19 = *arg4;\n                        goto label_40d292;\n                    }\n                    case 0x55:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40d948;\n                        }\n                        rdi_26 = ((arg4->tm_yday - arg4->tm_wday) + 7);\n                        int32_t temp7_1;\n                        int32_t temp8_1;\n                        temp7_1 = HIGHW((rdi_26 * 0x92492493));\n                        temp8_1 = LOWW((rdi_26 * 0x92492493));\n                        rdx_69 = temp7_1;\n                        break;\n                    }\n                    case 0x57:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40d948;\n                        }\n                        int32_t rax_98 = arg4->tm_wday;\n                        var_498 = rax_98;\n                        int32_t temp11_1;\n                        int32_t temp12_1;\n                        temp11_1 = HIGHW(((rax_98 + 6) * 0x92492493));\n                        temp12_1 = LOWW(((rax_98 + 6) * 0x92492493));\n                        uint64_t rax_102 = (((temp11_1 + (rax_98 + 6)) >> 2) - ((rax_98 + 6) >> 0x1f));\n                        rdi_26 = (((((rax_102 << 3) - rax_102) - (rax_98 + 6)) + arg4->tm_yday) + 7);\n                        int32_t temp13_1;\n                        int32_t temp14_1;\n                        temp13_1 = HIGHW((rdi_26 * 0x92492493));\n                        temp14_1 = LOWW((rdi_26 * 0x92492493));\n                        rdx_69 = temp13_1;\n                        break;\n                    }\n                    case 0x58:\n                    case 0x63:\n                    case 0x78:\n                    {\n                        if (r9 == 0x4f)\n                        {\n                            goto label_40d948;\n                        }\n                        break;\n                    }\n                    case 0x64:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40d948;\n                        }\n                        r10_1 = 2;\n                        rsi_19 = arg4->tm_mday;\n                        goto label_40d292;\n                    }\n                    case 0x65:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40d948;\n                        }\n                        rsi_19 = arg4->tm_mday;\n                        break;\n                    }\n                    case 0x6a:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40d948;\n                        }\n                        var_498 = 0;\n                        r10_1 = 3;\n                        int32_t rsi_36 = arg4->tm_yday;\n                        r8_1 = rsi_36 < 0xffffffff;\n                        rsi_19 = (rsi_36 + 1);\n                        rdi_16 = 0;\n                        break;\n                    }\n                    case 0x6b:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40d948;\n                        }\n                        rsi_19 = arg4->tm_hour;\n                        break;\n                    }\n                    case 0x6c:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40d948;\n                        }\n                        rsi_19 = r11;\n                        break;\n                    }\n                    case 0x6d:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40d948;\n                        }\n                        var_498 = 0;\n                        r10_1 = 2;\n                        int32_t rsi_22 = arg4->tm_mon;\n                        r8_1 = rsi_22 < 0xffffffff;\n                        rsi_19 = (rsi_22 + 1);\n                        rdi_16 = 0;\n                        break;\n                    }\n                    case 0x71:\n                    {\n                        r10_1 = 1;\n                        uint64_t rax_66 = arg4->tm_mon;\n                        if (r9 == 0x4f)\n                        {\n                            goto label_40d2b7;\n                        }\n                        var_498 = 0;\n                        r8_1 = 0;\n                        rdi_16 = 0;\n                        rsi_19 = (((rax_66 + ((rax_66 * 5) << 1)) >> 5) + 1);\n                    label_40d560:\n                        var_488 = r8_1;\n                        void* rcx_9 = &var_441;\n                        while (true)\n                        {\n                            r13_2 = (rcx_9 - 1);\n                            if ((rdi_16 & 1) != 0)\n                            {\n                                void* rax_67 = (rcx_9 - 2);\n                                *(rcx_9 - 1) = 0x3a;\n                                rcx_9 = r13_2;\n                                r13_2 = rax_67;\n                            }\n                            rdi_16 = (rdi_16 >> 1);\n                            int32_t temp41_1;\n                            int32_t temp42_1;\n                            temp41_1 = HIGHW((rsi_19 * 0xcccccccd));\n                            temp42_1 = LOWW((rsi_19 * 0xcccccccd));\n                            uint64_t rdx_55 = (temp41_1 >> 3);\n                            uint8_t rax_69 = (rdx_55 * 5);\n                            *(rcx_9 - 1) = ((rsi_19 - (rax_69 + rax_69)) + 0x30);\n                            rcx_9 = r13_2;\n                            if ((rsi_19 <= 9 && rdi_16 == 0))\n                            {\n                                break;\n                            }\n                            rsi_19 = rdx_55;\n                        }\n                        if (r10_1 < rbp_1)\n                        {\n                            r10_1 = rbp_1;\n                        }\n                        if (var_488 != 0)\n                        {\n                            goto label_40dca8;\n                        }\n                        if (var_498 == 0)\n                        {\n                            goto label_40cf59;\n                        }\n                        if (r12_1 == 0x2d)\n                        {\n                            rcx_15 = 0x2b;\n                        label_40dcbe:\n                            int32_t r9_13 = 0;\n                            uint64_t r12_2 = 1;\n                            if (rbp_1 >= 0)\n                            {\n                                r9_13 = rbp_1;\n                            }\n                            r9_6 = r9_13;\n                            if (r9_6 != 0)\n                            {\n                                r12_2 = r9_6;\n                            }\n                            if ((arg2 - r14) <= r12_2)\n                            {\n                                break;\n                            }\n                            if (r15 != 0)\n                            {\n                                if ((r10_1 == 0 && r9_6 > 1))\n                                {\n                                    uint64_t var_470;\n                                    var_470 = rcx_15;\n                                    var_480 = r10_1;\n                                    memset(r15, 0x20, (rbp_1 - 1));\n                                    rcx_15 = var_470;\n                                    r10_1 = var_480;\n                                    r15 = &r15[(rbp_1 - 1)];\n                                }\n                                *r15 = rcx_15;\n                                r15 = &r15[1];\n                            }\n                            r14 = (r14 + r12_2);\n                            r8 = rbx;\n                            r12_1 = 0x2d;\n                            rcx_6 = (&var_441 - r13_2);\n                            rax_20 = (arg2 - r14);\n                            goto label_40cf89;\n                        }\n                        var_498 = 0x2b;\n                    label_40d600:\n                        rcx_6 = (&var_441 - r13_2);\n                        r9_4 = ((r10_1 - 1) - rcx_6);\n                        rax_20 = (arg2 - r14);\n                        if (r9_4 <= 0)\n                        {\n                            int32_t r9_14 = 0;\n                            uint64_t r8_14 = 1;\n                            if (rbp_1 >= 0)\n                            {\n                                r9_14 = rbp_1;\n                            }\n                            r9_6 = r9_14;\n                            if (r9_6 != 0)\n                            {\n                                r8_14 = r9_6;\n                            }\n                            if (r8_14 >= rax_20)\n                            {\n                                break;\n                            }\n                            if (r15 != 0)\n                            {\n                                if ((r10_1 == 0 && r9_6 > 1))\n                                {\n                                    uint64_t rdx_101 = (rbp_1 - 1);\n                                    var_488 = &r15[rdx_101];\n                                    var_478 = r10_1;\n                                    if (r12_1 == 0x30)\n                                    {\n                                        memset(r15, 0x30, rdx_101);\n                                        r15 = var_488;\n                                        r10_1 = var_478;\n                                    }\n                                    else\n                                    {\n                                        memset(r15, 0x20, rdx_101);\n                                        r15 = var_488;\n                                        r10_1 = var_478;\n                                    }\n                                }\n                                r15 = &r15[1];\n                                r15[-1] = var_498;\n                            }\n                            r14 = (r14 + r8_14);\n                            r8 = rbx;\n                            rax_20 = (arg2 - r14);\n                            goto label_40cf89;\n                        }\n                        if (r12_1 == 0x5f)\n                        {\n                            goto label_40de73;\n                        }\n                        if (r10_1 >= rax_20)\n                        {\n                            break;\n                        }\n                        int32_t rdx_57 = 0;\n                        int64_t rsi_25 = 1;\n                        if (rbp_1 >= 0)\n                        {\n                            rdx_57 = rbp_1;\n                        }\n                        int64_t rdx_58 = rdx_57;\n                        if (rdx_58 != 0)\n                        {\n                            rsi_25 = rdx_58;\n                        }\n                        if (rsi_25 >= rax_20)\n                        {\n                            break;\n                        }\n                        r14 = (r14 + rsi_25);\n                        r9_11 = r9_4;\n                        r8 = rbx;\n                        if (r15 == 0)\n                        {\n                            goto label_40d714;\n                        }\n                        if ((r10_1 == 0 && rdx_58 > 1))\n                        {\n                            uint64_t rdx_60 = (rbp_1 - 1);\n                            void* rbp_7 = &r15[rdx_60];\n                            var_480 = r10_1;\n                            if (r12_1 == 0x30)\n                            {\n                                char* rdi_53 = r15;\n                                r15 = rbp_7;\n                                memset(rdi_53, 0x30, rdx_60);\n                                r10_1 = var_480;\n                            }\n                            else\n                            {\n                                char* rdi_21 = r15;\n                                r15 = rbp_7;\n                                memset(rdi_21, 0x20, rdx_60);\n                                r10_1 = var_480;\n                            }\n                        }\n                        r15 = &r15[1];\n                        r8 = rbx;\n                        r15[-1] = var_498;\n                        break;\n                    }\n                    case 0x73:\n                    {\n                        r13_2 = &var_441;\n                        int128_t zmm4;\n                        zmm4 = arg4->tm_isdst;\n                        *zmm4[8] = arg4->tm_gmtoff;\n                        int128_t zmm0;\n                        zmm0 = arg4->tm_sec;\n                        *zmm0[4] = arg4->tm_min;\n                        *zmm0[8] = arg4->tm_hour;\n                        *zmm0[0xc] = arg4->tm_mday;\n                        int128_t zmm2;\n                        zmm2 = arg4->tm_mon;\n                        *zmm2[4] = arg4->tm_year;\n                        *zmm2[8] = arg4->tm_wday;\n                        *zmm2[0xc] = arg4->tm_yday;\n                        var_438 = zmm0;\n                        int128_t var_428_1 = zmm2;\n                        var_498 = zmm4;\n                        int128_t var_418_1 = zmm4;\n                        char const* var_408_1 = arg4->tm_zone;\n                        time_t rax_13 = sub_40c230(arg7, &var_438);\n                        time_t rcx_4 = rax_13;\n                        do\n                        {\n                            int64_t rax_14;\n                            int64_t rdx_9;\n                            rdx_9 = HIGHD((0x6666666666666667 * rcx_4));\n                            rax_14 = LOWD((0x6666666666666667 * rcx_4));\n                            time_t rdx_11 = ((rdx_9 >> 2) - (rcx_4 >> 0x3f));\n                            char rdx_12 = (rdx_11 + (rdx_11 << 2));\n                            char rcx_5 = (rcx_4 - (rdx_12 + rdx_12));\n                            rcx_4 = rdx_11;\n                            char rax_18 = (0x30 - rcx_5);\n                            char rdx_15 = (rcx_5 + 0x30);\n                            if (rax_13 < 0)\n                            {\n                                rdx_15 = rax_18;\n                            }\n                            r13_2 = (r13_2 - 1);\n                            *r13_2 = rdx_15;\n                        } while (rcx_4 != 0);\n                        r10_1 = 1;\n                        if (rbp_1 > 0)\n                        {\n                            r10_1 = rbp_1;\n                        }\n                        if (rax_13 < 0)\n                        {\n                        label_40dca8:\n                            var_498 = 0x2d;\n                            rcx_15 = 0x2d;\n                            if (r12_1 != 0x2d)\n                            {\n                                goto label_40d600;\n                            }\n                            goto label_40dcbe;\n                        }\n                    label_40cf59:\n                        rcx_6 = (&var_441 - r13_2);\n                        rax_20 = (arg2 - r14);\n                        if (r12_1 == 0x2d)\n                        {\n                        label_40cf76:\n                            int32_t r9_5 = 0;\n                            r8 = rbx;\n                            if (rbp_1 >= 0)\n                            {\n                                r9_5 = rbp_1;\n                            }\n                            r9_6 = r9_5;\n                            goto label_40cf89;\n                        }\n                        r9_4 = (r10_1 - rcx_6);\n                        if (r9_4 <= 0)\n                        {\n                            goto label_40cf76;\n                        }\n                        if (r12_1 == 0x5f)\n                        {\n                            var_498 = 0;\n                        label_40de73:\n                            uint64_t r12_3 = r9_4;\n                            if (r12_3 >= rax_20)\n                            {\n                                break;\n                            }\n                            if (r15 != 0)\n                            {\n                                char* rdi_41 = r15;\n                                var_478 = r9_4;\n                                var_480 = r10_1;\n                                r15 = &r15[r12_3];\n                                memset(rdi_41, 0x20, r12_3);\n                                r9_4 = var_478;\n                                r10_1 = var_480;\n                            }\n                            r14 = (r14 + r12_3);\n                            int32_t rax_142 = (rbp_1 - r9_4);\n                            bool cond:28_1 = r9_4 < rbp_1;\n                            rbp_1 = 0;\n                            if (cond:28_1)\n                            {\n                                rbp_1 = rax_142;\n                            }\n                            rax_20 = (arg2 - r14);\n                            if (var_498 == 0)\n                            {\n                                r9_6 = rbp_1;\n                                r8 = rbx;\n                                r12_1 = 0x5f;\n                                rcx_6 = (&var_441 - r13_2);\n                            }\n                            else\n                            {\n                                r9_6 = rbp_1;\n                                uint64_t rcx_16 = 1;\n                                if (r9_6 != 0)\n                                {\n                                    rcx_16 = r9_6;\n                                }\n                                if (rcx_16 >= rax_20)\n                                {\n                                    break;\n                                }\n                                if (r15 != 0)\n                                {\n                                    if ((r10_1 == 0 && r9_6 > 1))\n                                    {\n                                        char* rdi_44 = r15;\n                                        var_478 = r10_1;\n                                        r15 = &r15[(r9_6 - 1)];\n                                        var_488 = r9_6;\n                                        memset(rdi_44, 0x20, (r9_6 - 1));\n                                        r10_1 = var_478;\n                                        r9_6 = var_488;\n                                    }\n                                    r15 = &r15[1];\n                                    r15[-1] = var_498;\n                                }\n                                r14 = (r14 + rcx_16);\n                                r8 = rbx;\n                                r12_1 = 0x5f;\n                                rcx_6 = (&var_441 - r13_2);\n                                rax_20 = (arg2 - r14);\n                            }\n                            goto label_40cf89;\n                        }\n                        if (r10_1 >= rax_20)\n                        {\n                            break;\n                        }\n                        r9_11 = r9_4;\n                        r8 = rbx;\n                        break;\n                    }\n                    case 0x75:\n                    {\n                        r10_1 = 1;\n                        int32_t rax_79 = arg4->tm_wday;\n                        var_498 = rax_79;\n                        int32_t temp2_1;\n                        int32_t temp3_1;\n                        temp2_1 = HIGHW(((rax_79 + 6) * 0x92492493));\n                        temp3_1 = LOWW(((rax_79 + 6) * 0x92492493));\n                        uint64_t rax_83 = (((temp2_1 + (rax_79 + 6)) >> 2) - ((rax_79 + 6) >> 0x1f));\n                        rsi_19 = (((rax_79 + 6) - ((rax_83 << 3) - rax_83)) + 1);\n                    label_40d292:\n                        var_498 = 0;\n                        rdi_16 = 0;\n                        r8_1 = (rsi_19 >> 0x1f);\n                        break;\n                    }\n                    case 0x77:\n                    {\n                        if (r9 == 0x45)\n                        {\n                            goto label_40d948;\n                        }\n                        r10_1 = 1;\n                        rsi_19 = arg4->tm_wday;\n                        goto label_40d292;\n                    }\n                    case 0x79:\n                    {\n                        if (r9 != 0x45)\n                        {\n                            r10_1 = 2;\n                            int32_t rdi_37 = arg4->tm_year;\n                            int32_t temp15_1;\n                            int32_t temp16_1;\n                            temp15_1 = HIGHW((rdi_37 * 0x51eb851f));\n                            temp16_1 = LOWW((rdi_37 * 0x51eb851f));\n                            int32_t rsi_40 = (((temp15_1 >> 5) - (rdi_37 >> 0x1f)) * 0x64);\n                            int32_t rax_132 = (rdi_37 - rsi_40);\n                            rsi_19 = rax_132;\n                            if ((rdi_37 - rsi_40) < 0)\n                            {\n                                int32_t rax_133 = (-rax_132);\n                                rsi_19 = (rsi_19 + 0x64);\n                                if (rdi_37 <= 0xfffff893)\n                                {\n                                    rsi_19 = rax_133;\n                                }\n                            }\n                            goto label_40d292;\n                        }\n                        break;\n                    }\n                }\n                switch (rcx)\n                {\n                    case 0x44:\n                    case 0x46:\n                    case 0x52:\n                    case 0x54:\n                    {\n                        uint32_t r13_3 = r11_1;\n                        int64_t r10_2 = sub_40cb00(0, -1, var_498, arg4, r13_3, arg6, arg7, arg8, arg2, arg4, var_4b8_1, arg6, r12);\n                        int32_t rax_23 = 0;\n                        if (rbp_1 >= 0)\n                        {\n                            rax_23 = rbp_1;\n                        }\n                        int64_t rax_24 = rax_23;\n                        int64_t rsi_4 = rax_24;\n                        if (r10_2 >= rax_24)\n                        {\n                            rsi_4 = r10_2;\n                        }\n                        int64_t r11_3 = (arg2 - r14);\n                        var_488 = rsi_4;\n                        if (r11_3 <= rsi_4)\n                        {\n                            break;\n                        }\n                        if (r15 != 0)\n                        {\n                            if (r10_2 < rax_24)\n                            {\n                                uint64_t rdx_20 = (rbp_1 - r10_2);\n                                var_480 = r11_3;\n                                void* rbp_4 = &r15[rdx_20];\n                                if (r12_1 == 0x30)\n                                {\n                                    char* rdi_45 = r15;\n                                    r15 = rbp_4;\n                                    memset(rdi_45, 0x30, rdx_20);\n                                    r11_3 = var_480;\n                                }\n                                else\n                                {\n                                    char* rdi_6 = r15;\n                                    r15 = rbp_4;\n                                    memset(rdi_6, 0x20, rdx_20);\n                                    r11_3 = var_480;\n                                }\n                            }\n                            var_480 = r10_2;\n                            sub_40cb00(r15, r11_3, var_498, arg4, r13_3, arg6, arg7, arg8);\n                            r15 = &r15[var_480];\n                        }\n                        r14 = (r14 + var_488);\n                        r8 = rbx;\n                        break;\n                    }\n                    case 0x55:\n                    case 0x57:\n                    {\n                        r10_1 = 2;\n                        rsi_19 = (((rdx_69 + rdi_26) >> 2) - (rdi_26 >> 0x1f));\n                        goto label_40d292;\n                    }\n                    case 0x58:\n                    case 0x63:\n                    case 0x72:\n                    case 0x78:\n                    {\n                        r13_1 = 0;\n                        break;\n                    }\n                    case 0x65:\n                    case 0x6b:\n                    case 0x6c:\n                    {\n                        r10_1 = 2;\n                        if ((r12_1 != 0x30 && r12_1 != 0x2d))\n                        {\n                            r12_1 = 0x5f;\n                        }\n                        goto label_40d292;\n                    }\n                }\n                int16_t var_458;\n                if ((((((rcx == 0x50 || rcx == 0x58) || rcx == 0x63) || rcx == 0x70) || rcx == 0x72) || rcx == 0x78))\n                {\n                    var_458 = 0x2520;\n                }\n                uint64_t rdx_8;\n                uint64_t rbx_1;\n                void* rsi_1;\n                char* rdi_3;\n                if ((rcx == 0x73 || rcx == 0x71))\n                {\n                    if (r15 == 0)\n                    {\n                        goto label_40d714;\n                    }\n                    var_478 = r10_1;\n                    var_480 = r8;\n                    memset(r15, 0x30, r9_11);\n                    r10_1 = var_478;\n                    r8 = var_480;\n                    r15 = &r15[r9_11];\n                label_40d714:\n                    r14 = (r14 + r9_11);\n                    rbp_1 = 0;\n                    r9_6 = 0;\n                    rax_20 = (arg2 - r14);\n                label_40cf89:\n                    rbx_1 = r9_6;\n                    if (rcx_6 >= r9_6)\n                    {\n                        rbx_1 = rcx_6;\n                    }\n                    if (rbx_1 >= rax_20)\n                    {\n                        break;\n                    }\n                    if (r15 == 0)\n                    {\n                        goto label_40ce46;\n                    }\n                    if ((r10_1 == 0 && rcx_6 < r9_6))\n                    {\n                        var_480 = rcx_6;\n                        uint64_t rdx_17 = (rbp_1 - rcx_6);\n                        var_488 = r8;\n                        void* rbp_3 = &r15[rdx_17];\n                        var_498 = r11_1;\n                        if (r12_1 == 0x30)\n                        {\n                            char* rdi_42 = r15;\n                            r15 = rbp_3;\n                            memset(rdi_42, 0x30, rdx_17);\n                            r11_1 = var_498;\n                            r8 = var_488;\n                            rcx_6 = var_480;\n                        }\n                        else\n                        {\n                            char* rdi_5 = r15;\n                            r15 = rbp_3;\n                            memset(rdi_5, 0x20, rdx_17);\n                            rcx_6 = var_480;\n                            r8 = var_488;\n                            r11_1 = var_498;\n                        }\n                    }\n                    var_488 = r8;\n                    rdx_8 = rcx_6;\n                    rsi_1 = r13_2;\n                    rdi_3 = r15;\n                    var_498 = rcx_6;\n                }\n                if (((rcx == 0x25 && r9 != 0) || rcx == 0))\n                {\n                    if (rdx_83 <= r13_10)\n                    {\n                        break;\n                    }\n                    if (r15 != 0)\n                    {\n                        if (rcx_12 < rax_110)\n                        {\n                            uint64_t rdx_85 = (rbp_1 - rcx_12);\n                            var_480 = r8;\n                            void* rbx_2 = &r15[rdx_85];\n                            var_488 = r9_12;\n                            var_498 = r11_1;\n                            if (r12_1 == 0x30)\n                            {\n                                char* rdi_43 = r15;\n                                r15 = rbx_2;\n                                memset(rdi_43, 0x30, rdx_85);\n                                r11_1 = var_498;\n                                r9_12 = var_488;\n                                r8 = var_480;\n                            }\n                            else\n                            {\n                                char* rdi_30 = r15;\n                                r15 = rbx_2;\n                                memset(rdi_30, 0x20, rdx_85);\n                                r8 = var_480;\n                                r9_12 = var_488;\n                                r11_1 = var_498;\n                            }\n                        }\n                        var_488 = r8;\n                        char* rdi_31 = r15;\n                        uint64_t rcx_13;\n                        if (r11_1 == 0)\n                        {\n                            memcpy(rdi_31, r9_12, rcx_12);\n                            r8 = var_488;\n                            rcx_13 = rcx_12;\n                        }\n                        else\n                        {\n                            sub_40cab0(rdi_31, r9_12, rcx_12);\n                            rcx_13 = rcx_12;\n                            r8 = var_488;\n                        }\n                        r15 = &r15[rcx_13];\n                    }\n                    r14 = (r14 + r13_10);\n                }\n                if ((rcx == 0x7a || rcx == 0x3a))\n                {\n                    if (arg4->tm_isdst < 0)\n                    {\n                        r8 = rbx;\n                    }\n                    else\n                    {\n                        int32_t rsi_34 = arg4->tm_gmtoff;\n                        r8_1 = 1;\n                        bool cond:19_1 = rsi_34 != 0;\n                        if (rsi_34 >= 0)\n                        {\n                            r8_1 = 0;\n                            if ((!cond:19_1))\n                            {\n                                r8_1 = *r12 == 0x2d;\n                            }\n                        }\n                        int32_t temp27_1;\n                        int32_t temp28_1;\n                        temp27_1 = HIGHW((rsi_34 * 0x91a2b3c5));\n                        temp28_1 = LOWW((rsi_34 * 0x91a2b3c5));\n                        int32_t rax_115 = (rsi_34 >> 0x1f);\n                        var_488 = rax_115;\n                        var_498 = (((temp27_1 + rsi_34) >> 0xb) - rax_115);\n                        int32_t temp29_1;\n                        int32_t temp30_1;\n                        temp29_1 = HIGHW((rsi_34 * 0x88888889));\n                        temp30_1 = LOWW((rsi_34 * 0x88888889));\n                        int32_t r10_8 = (((temp29_1 + rsi_34) >> 5) - var_488);\n                        int32_t temp31_1;\n                        int32_t temp32_1;\n                        temp31_1 = HIGHW((r10_8 * 0x88888889));\n                        temp32_1 = LOWW((r10_8 * 0x88888889));\n                        int32_t rax_121 = (r10_8 - ((((temp31_1 + r10_8) >> 5) - (r10_8 >> 0x1f)) * 0x3c));\n                        rdi_16 = rax_121;\n                        int32_t rsi_35 = (rsi_34 - (r10_8 * 0x3c));\n                        if (r13_12 == 0)\n                        {\n                            int32_t rsi_51 = (var_498 * 0x64);\n                            rdi_16 = 0;\n                            var_498 = 1;\n                            r10_1 = 5;\n                            rsi_19 = (rsi_51 + rax_121);\n                        }\n                        if ((r13_12 == 2 || (r13_12 == 3 && rsi_35 != 0)))\n                        {\n                            int32_t rax_163 = (var_498 * 0x2710);\n                            r10_1 = 9;\n                            var_498 = 1;\n                            int32_t rax_164 = (rax_163 + (rdi_16 * 0x64));\n                            rdi_16 = 0x14;\n                            rsi_19 = (rsi_35 + rax_164);\n                        }\n                        if ((r13_12 == 1 || ((r13_12 == 3 && rsi_35 == 0) && rax_121 != 0)))\n                        {\n                            int32_t rsi_50 = (var_498 * 0x64);\n                            r10_1 = 6;\n                            var_498 = 1;\n                            rsi_19 = (rsi_50 + rdi_16);\n                            rdi_16 = 4;\n                        }\n                        if (((r13_12 == 3 && rsi_35 == 0) && rax_121 == 0))\n                        {\n                            rsi_19 = var_498;\n                            r10_1 = 3;\n                            var_498 = 1;\n                        }\n                        if ((((r13_12 != 1 && r13_12 != 0) && r13_12 != 2) && r13_12 != 3))\n                        {\n                            rcx_14 = *rbx;\n                            r9_12 = rbx;\n                            goto label_40dadb;\n                        }\n                    }\n                }\n                char* rax_7;\n                uint64_t rax_8;\n                char* r8_2;\n                if (((((((rcx == 0x72 || rcx == 0x58) || rcx == 0x63) || rcx == 0x78) || rcx == 0x50) || rcx == 0x70) && r9 == 0))\n                {\n                    r8_2 = rbx;\n                    rax_7 = var_4b8_1;\n                label_40cd40:\n                    *rax_7 = rcx;\n                    rax_7[1] = 0;\n                    var_480 = r9;\n                    rax_8 = strftime(&var_438, 0x400, &var_458, arg4);\n                    r8 = r8_2;\n                    if (rax_8 != 0)\n                    {\n                        uint64_t rcx_2 = (rax_8 - 1);\n                        int32_t rax_9 = 0;\n                        if (rbp_1 >= 0)\n                        {\n                            rax_9 = rbp_1;\n                        }\n                        uint64_t rax_10 = rax_9;\n                        rbx_1 = rax_10;\n                        if (rcx_2 >= rax_10)\n                        {\n                            rbx_1 = rcx_2;\n                        }\n                        if ((arg2 - r14) <= rbx_1)\n                        {\n                            break;\n                        }\n                        if (((arg2 - r14) > rbx_1 && r15 != 0))\n                        {\n                            if ((var_480 == 0 && rcx_2 < rax_10))\n                            {\n                                var_480 = rcx_2;\n                                uint64_t rdx_7 = (rbp_1 - rcx_2);\n                                var_488 = r8;\n                                void* rbp_2 = &r15[rdx_7];\n                                var_498 = r11_1;\n                                if (r12_1 == 0x30)\n                                {\n                                    char* rdi_39 = r15;\n                                    r15 = rbp_2;\n                                    memset(rdi_39, 0x30, rdx_7);\n                                    r11_1 = var_498;\n                                    r8 = var_488;\n                                    rcx_2 = var_480;\n                                }\n                                else\n                                {\n                                    char* rdi_2 = r15;\n                                    r15 = rbp_2;\n                                    memset(rdi_2, 0x20, rdx_7);\n                                    rcx_2 = var_480;\n                                    r8 = var_488;\n                                    r11_1 = var_498;\n                                }\n                            }\n                            var_488 = r8;\n                            rsi_1 = &*var_438[1];\n                            rdx_8 = rcx_2;\n                            rdi_3 = r15;\n                            var_498 = rcx_2;\n                        }\n                    }\n                }\n                uint64_t rcx_3;\n                if ((((((((((((rcx == 0x72 || rcx == 0x58) || rcx == 0x63) || rcx == 0x78) || rcx == 0x50) || rcx == 0x70) && r9 == 0) && rax_8 != 0) && (arg2 - r14) > rbx_1) && r15 != 0) && r13_1 == 0) || ((rcx == 0x73 || rcx == 0x71) && r15 != 0)))\n                {\n                    if (r11_1 == 0)\n                    {\n                        memcpy(rdi_3, rsi_1, rdx_8);\n                        r8 = var_488;\n                        rcx_3 = var_498;\n                        goto label_40ce43;\n                    }\n                    sub_40cab0(rdi_3, rsi_1, rdx_8);\n                    rcx_3 = var_498;\n                    r8 = var_488;\n                    goto label_40ce43;\n                }\n                if ((((((rcx == 0x72 || rcx == 0x58) || rcx == 0x63) || rcx == 0x78) || rcx == 0x50) || rcx == 0x70))\n                {\n                    if (r9 != 0)\n                    {\n                        r10_1 = 0;\n                    label_40d2bf:\n                        var_456 = r9;\n                        r8_2 = rbx;\n                        r9 = r10_1;\n                        void var_455;\n                        rax_7 = &var_455;\n                        goto label_40cd40;\n                    }\n                    if ((rax_8 != 0 && (arg2 - r14) > rbx_1))\n                    {\n                        if ((r15 != 0 && r13_1 != 0))\n                        {\n                            sub_40ca60(rdi_3, rsi_1, rdx_8);\n                            rcx_3 = var_498;\n                            r8 = var_488;\n                        label_40ce43:\n                            r15 = &r15[rcx_3];\n                        label_40ce46:\n                            r14 = (r14 + rbx_1);\n                        }\n                        if (r15 == 0)\n                        {\n                            goto label_40ce46;\n                        }\n                    }\n                }\n                if (((((((((((rcx == 0x43 && r9 != 0x45) || rcx == 0x75) || ((rcx == 0x7a || rcx == 0x3a) && arg4->tm_isdst >= 0)) || rcx == 0x47) || rcx == 0x56) || rcx == 0x67) || rcx == 0x6d) || rcx == 0x6a) && r9 != 0x4f) || (rcx == 0x59 && r9 != 0x45)))\n                {\n                    if (r8_1 == 0)\n                    {\n                        goto label_40d560;\n                    }\n                    goto label_40d819;\n                }\n                if ((((((((((rcx == 0x43 && r9 != 0x45) || rcx == 0x75) || ((rcx == 0x7a || rcx == 0x3a) && arg4->tm_isdst >= 0)) || rcx == 0x47) || rcx == 0x56) || rcx == 0x67) || rcx == 0x6d) || rcx == 0x6a) && r9 == 0x4f))\n                {\n                    if (r8_1 == 0)\n                    {\n                        goto label_40d2b7;\n                    }\n                label_40d819:\n                    rsi_19 = (-rsi_19);\n                    goto label_40d560;\n                }\n                if ((((rcx == 0x59 && r9 == 0x45) || (rcx == 0x43 && r9 == 0x45)) || rcx == 0x79))\n                {\n                    r10_1 = 0;\n                label_40d2b7:\n                    r13_1 = 0;\n                    var_458 = 0x2520;\n                    goto label_40d2bf;\n                }\n                if ((rcx == 0x62 || rcx == 0x68))\n                {\n                    if (r8_1 != 0)\n                    {\n                        r11_1 = r8_1;\n                    }\n                    if (r9 != 0)\n                    {\n                        goto label_40d948;\n                    }\n                }\n                if (((((rcx == 0x41 || rcx == 0x42) || rcx == 0x61) || rcx == 0x62) || rcx == 0x68))\n                {\n                    rax_7 = var_4b8_1;\n                    r8_2 = rbx;\n                    r13_1 = 0;\n                    var_458 = 0x2520;\n                    r9 = 0;\n                    goto label_40cd40;\n                }\n            }\n            else\n            {\n                if ((arg2 - r14) <= 1)\n                {\n                    break;\n                }\n                if (r15 != 0)\n                {\n                    *r15 = rax;\n                    r15 = &r15[1];\n                }\n                r14 = (r14 + 1);\n                r8 = rbx;\n            }\n            rax = r8[1];\n            rbx = &r8[1];\n        } while (rax != 0);\n        if ((rax != 0x25 && (arg2 - r14) <= 1))\n        {\n            r14 = 0;\n        }\n    }\n    if ((((rax == 0 || (rax != 0 && (!(rax != 0x25 && (arg2 - r14) <= 1)))) && r15 != 0) && arg2 != 0))\n    {\n        *r15 = 0;\n    }\n    return r14;\n}\n\n"
        },
        {
            "funcName": "sub_40e2d0",
            "funcStartAddr": "0x40e2d0",
            "funcEndAddr": "0x40e2ef",
            "decompiledFuncCode": "int64_t sub_40e2d0(char* arg1, int64_t arg2, char* arg3, struct tm* arg4, \n    int64_t** arg5, int32_t arg6)\n{\n    char var_9 = 0;\n    return sub_40cb00(arg1, arg2, arg3, arg4, 0, &var_9, arg5, arg6);\n}\n\n"
        },
        {
            "funcName": "sub_40e2f0",
            "funcStartAddr": "0x40e2f0",
            "funcEndAddr": "0x40e36b",
            "decompiledFuncCode": "int64_t sub_40e2f0(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_40e370(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_40e370",
            "funcStartAddr": "0x40e370",
            "funcEndAddr": "0x40e3b0",
            "decompiledFuncCode": "int64_t sub_40e370(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_40e3b0(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_40e3b0",
            "funcStartAddr": "0x40e3b0",
            "funcEndAddr": "0x40e407",
            "decompiledFuncCode": "off64_t sub_40e3b0(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_40e410",
            "funcStartAddr": "0x40e410",
            "funcEndAddr": "0x40e414",
            "decompiledFuncCode": "int64_t sub_40e410(int32_t* arg1)\n{\n    *arg1 = (*arg1 | 0x20);\n}\n\n"
        },
        {
            "funcName": "sub_40e420",
            "funcStartAddr": "0x401dde",
            "funcEndAddr": "0x40ff39",
            "decompiledFuncCode": "char* sub_40e420(char* arg1, uint64_t* arg2, char* arg3, int64_t arg4, \n    uint16_t arg5 @ x87control)\n{\n    int64_t rbp;\n    int64_t __saved_rbp = rbp;\n    int64_t r15;\n    int64_t __saved_r15 = r15;\n    int64_t r14;\n    int64_t __saved_r14 = r14;\n    int64_t r13;\n    int64_t __saved_r13 = r13;\n    int64_t r12;\n    int64_t __saved_r12 = r12;\n    int64_t rbx;\n    int64_t __saved_rbx = rbx;\n    void var_6f8;\n    void* rsp_1 = &var_6f8;\n    void var_678;\n    int64_t var_588;\n    char* rbx_2;\n    if (sub_410160(arg3, &var_588, &var_678) < 0)\n    {\n        rbx_2 = nullptr;\n    }\n    else\n    {\n        char* var_670;\n        void var_668;\n        int64_t* var_580;\n        void var_568;\n        if (sub_40ff40(arg4, &var_678) >= 0)\n        {\n            int64_t var_578;\n            int64_t rax_3 = (var_578 + 7);\n            if (rax_3 <= 6)\n            {\n                rax_3 = -1;\n            }\n            int64_t var_570;\n            int64_t rax_4 = (rax_3 + var_570);\n            char* var_6a8;\n            int64_t rcx;\n            char* r8_1;\n            if ((rax_3 + var_570) >= rax_3)\n            {\n                size_t rdi_3 = (rax_4 + 6);\n                if (rax_4 >= -6)\n                {\n                    goto label_40eb45;\n                }\n                char* var_6e0_1;\n                char* var_6b0_1;\n                int32_t* rdx_1;\n                if (rdi_3 <= 0xf9f)\n                {\n                    var_6e0_1 = nullptr;\n                    rsp_1 = (&var_6f8 - ((rax_4 + 0x1d) & 0xfffffffffffffff0));\n                    var_6b0_1 = ((rsp_1 + 0xf) & 0xfffffffffffffff0);\n                }\n                else\n                {\n                    if (rdi_3 == -1)\n                    {\n                        goto label_40eb45;\n                    }\n                    char* rax_5;\n                    rax_5 = malloc(rdi_3);\n                    var_6b0_1 = rax_5;\n                    if (rax_5 == 0)\n                    {\n                        goto label_40eb45;\n                    }\n                    var_6e0_1 = rax_5;\n                }\n                size_t r12_1 = 0;\n                if (arg1 != 0)\n                {\n                    r12_1 = *arg2;\n                }\n                int64_t* r14_1 = var_580;\n                r8_1 = arg3;\n                rbx_2 = arg1;\n                int64_t var_6c0_1 = 0;\n                uint64_t r15_2 = 0;\n                rcx = *r14_1;\n                void* r13_1;\n                if (rcx != r8_1)\n                {\n                    while (true)\n                    {\n                        void* rcx_1 = (rcx - r8_1);\n                        void* rax_8 = (r15_2 + rcx_1);\n                        r13_1 = rax_8;\n                        int32_t var_698;\n                        char* r15_7;\n                        if ((r15_2 + rcx_1) < r15_2)\n                        {\n                            if (r12_1 != -1)\n                            {\n                            label_40ea15:\n                                r15_7 = rbx_2;\n                                var_6a8 = __errno_location();\n                            }\n                            else\n                            {\n                                r13_1 = ffffffffffffffff;\n                            label_40e693:\n                                memcpy(&rbx_2[r15_2], r8_1, rcx_1);\n                            label_40e69f:\n                                if (var_588 == var_6c0_1)\n                                {\n                                    uint64_t r15_11 = r13_1;\n                                    size_t r14_3 = (r13_1 + 1);\n                                    if (r13_1 >= -1)\n                                    {\n                                        if (r12_1 != -1)\n                                        {\n                                            goto label_40ea15;\n                                        }\n                                    }\n                                    else if (r12_1 < r14_3)\n                                    {\n                                        bool cond:2_1 = r12_1 < 0;\n                                        if ((r12_1 == 0 && r14_3 <= 0xc))\n                                        {\n                                            r12_1 = 0xc;\n                                        label_40f7f5:\n                                            r13_1 = rbx_2 == arg1;\n                                            if ((rbx_2 == 0 || (rbx_2 != 0 && r13_1 != 0)))\n                                            {\n                                                char* rax_150 = malloc(r12_1);\n                                                if (rax_150 == 0)\n                                                {\n                                                    goto label_40ea15;\n                                                }\n                                                if ((r15_11 == 0 || (r15_11 != 0 && r13_1 == 0)))\n                                                {\n                                                    rbx_2 = rax_150;\n                                                }\n                                                if ((r15_11 != 0 && r13_1 != 0))\n                                                {\n                                                    rbx_2 = memcpy(rax_150, rbx_2, r15_11);\n                                                }\n                                            }\n                                            if ((rbx_2 != 0 && r13_1 == 0))\n                                            {\n                                                char* rax_126 = realloc(rbx_2, r12_1);\n                                                if (rax_126 == 0)\n                                                {\n                                                    goto label_40ec2a;\n                                                }\n                                                rbx_2 = rax_126;\n                                            }\n                                        }\n                                        if (r12_1 != 0)\n                                        {\n                                            if (cond:2_1)\n                                            {\n                                                goto label_40ea15;\n                                            }\n                                            r12_1 = (r12_1 + r12_1);\n                                            if (r12_1 >= r14_3)\n                                            {\n                                                goto label_40f7f5;\n                                            }\n                                        }\n                                        if (((r12_1 == 0 && r14_3 > 0xc) || r12_1 != 0))\n                                        {\n                                            if (r14_3 == -1)\n                                            {\n                                                goto label_40ea15;\n                                            }\n                                            r12_1 = r14_3;\n                                            goto label_40f7f5;\n                                        }\n                                    }\n                                    rbx_2[r15_11] = 0;\n                                    if ((r12_1 > r14_3 && rbx_2 != arg1))\n                                    {\n                                        char* rax_127 = realloc(rbx_2, r14_3);\n                                        if (rax_127 != 0)\n                                        {\n                                            rbx_2 = rax_127;\n                                        }\n                                    }\n                                    if (var_6e0_1 != 0)\n                                    {\n                                        free(var_6e0_1);\n                                    }\n                                    if (var_580 != &var_568)\n                                    {\n                                        free(var_580);\n                                    }\n                                    if (var_670 != &var_668)\n                                    {\n                                        free(var_670);\n                                    }\n                                    *arg2 = r15_11;\n                                    goto label_40eaa1;\n                                }\n                                char r15_3 = r14_1[9];\n                                int64_t rax_17 = r14_1[0xa];\n                                if (r15_3 == 0x25)\n                                {\n                                    if (rax_17 != -1)\n                                    {\n                                    label_40f14c:\n                                        abort();\n                                        /* no return */\n                                    }\n                                    uint64_t rax_47 = (r13_1 + 1);\n                                    r15_2 = rax_47;\n                                    if (r13_1 < -1)\n                                    {\n                                        if (r12_1 >= rax_47)\n                                        {\n                                            goto label_40eb12;\n                                        }\n                                        bool cond:4_1 = r12_1 < 0;\n                                        if (r12_1 != 0)\n                                        {\n                                            if (cond:4_1)\n                                            {\n                                                goto label_40ea15;\n                                            }\n                                            r12_1 = (r12_1 + r12_1);\n                                            if (r12_1 >= rax_47)\n                                            {\n                                                goto label_40eae7;\n                                            }\n                                        }\n                                        else if (rax_47 <= 0xc)\n                                        {\n                                            r12_1 = 0xc;\n                                        label_40eae7:\n                                            rdx_1 = rbx_2 == arg1;\n                                            if (rbx_2 == 0)\n                                            {\n                                            label_40f303:\n                                                var_698 = rdx_1;\n                                                char* rax_107 = malloc(r12_1);\n                                                rdx_1 = var_698;\n                                                if (rax_107 == 0)\n                                                {\n                                                    goto label_40ea15;\n                                                }\n                                                if ((r13_1 == 0 || (r13_1 != 0 && rdx_1 == 0)))\n                                                {\n                                                    rbx_2 = rax_107;\n                                                }\n                                                if ((r13_1 != 0 && rdx_1 != 0))\n                                                {\n                                                    char* rax_108;\n                                                    rax_108 = memcpy(rax_107, rbx_2, r13_1);\n                                                    rbx_2 = rax_108;\n                                                }\n                                                goto label_40eb12;\n                                            }\n                                            if (rdx_1 != 0)\n                                            {\n                                                goto label_40f303;\n                                            }\n                                            char* rax_48;\n                                            rax_48 = realloc(rbx_2, r12_1);\n                                            if (rax_48 == 0)\n                                            {\n                                                goto label_40ec2a;\n                                            }\n                                            rbx_2 = rax_48;\n                                            goto label_40eb12;\n                                        }\n                                        if (rax_47 == -1)\n                                        {\n                                            goto label_40ea15;\n                                        }\n                                        r12_1 = rax_47;\n                                        goto label_40eae7;\n                                    }\n                                    if (r12_1 != -1)\n                                    {\n                                        goto label_40ea15;\n                                    }\n                                    r15_2 = -1;\n                                label_40eb12:\n                                    *(rbx_2 + r13_1) = 0x25;\n                                label_40eb17:\n                                    r8_1 = r14_1[1];\n                                    r14_1 = &r14_1[0xb];\n                                    rcx = *r14_1;\n                                    var_6c0_1 = (var_6c0_1 + 1);\n                                    if (rcx == r8_1)\n                                    {\n                                        break;\n                                    }\n                                    continue;\n                                }\n                                else\n                                {\n                                    if (rax_17 == -1)\n                                    {\n                                        goto label_40f14c;\n                                    }\n                                    rdx_1 = &var_670[(rax_17 << 5)];\n                                    int32_t rax_19 = *rdx_1;\n                                    if (r15_3 == 0x6e)\n                                    {\n                                        uint64_t rax_50 = (rax_19 - 0x12);\n                                        if (rax_50 > 4)\n                                        {\n                                        label_401dde:\n                                            abort();\n                                            /* no return */\n                                        }\n                                        switch (rax_50)\n                                        {\n                                            case 0:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                            case 1:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                            case 2:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                            case 3:\n                                            case 4:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                        }\n                                        goto label_40eb17;\n                                    }\n                                    char rax_21 = (r15_3 & 0xdf);\n                                    int64_t var_6c8;\n                                    char* var_6b8;\n                                    int16_t var_680;\n                                    if (((rax_21 - 0x45) > 2 && rax_21 != 0x41))\n                                    {\n                                    label_40e727:\n                                        char rax_22 = r14_1[2];\n                                        void* r15_4 = &var_6b0_1[1];\n                                        *var_6b0_1 = 0x25;\n                                        if ((rax_22 & 1) != 0)\n                                        {\n                                            var_6b0_1[1] = 0x27;\n                                            r15_4 = &var_6b0_1[2];\n                                        }\n                                        if ((rax_22 & 2) != 0)\n                                        {\n                                            *r15_4 = 0x2d;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 4) != 0)\n                                        {\n                                            *r15_4 = 0x2b;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 8) != 0)\n                                        {\n                                            *r15_4 = 0x20;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 0x10) != 0)\n                                        {\n                                            *r15_4 = 0x23;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 0x40) != 0)\n                                        {\n                                            *r15_4 = 0x49;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 0x20) != 0)\n                                        {\n                                            *r15_4 = 0x30;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        int64_t rsi_6 = r14_1[3];\n                                        int64_t rdx_5 = r14_1[4];\n                                        if (rsi_6 != rdx_5)\n                                        {\n                                            uint64_t rcx_4 = (rdx_5 - rsi_6);\n                                            memcpy(r15_4, rsi_6, rcx_4);\n                                            r15_4 = (r15_4 + rcx_4);\n                                        }\n                                        int64_t rsi_7 = r14_1[6];\n                                        uint64_t rdx_7 = r14_1[7];\n                                        if (rsi_7 != rdx_7)\n                                        {\n                                            uint64_t rcx_7 = (rdx_7 - rsi_7);\n                                            memcpy(r15_4, rsi_7, rcx_7);\n                                            r15_4 = (r15_4 + rcx_7);\n                                        }\n                                        if (rax_19 <= 0x10)\n                                        {\n                                            int32_t rax_23 = (1 << rax_19);\n                                            if ((rax_23 & 0x14180) == 0)\n                                            {\n                                                if ((*rax_23[1] & 0x10) != 0)\n                                                {\n                                                    *r15_4 = 0x4c;\n                                                    r15_4 = (r15_4 + 1);\n                                                }\n                                                if (((*rax_23[1] & 0x10) == 0 && (*rax_23[1] & 6) != 0))\n                                                {\n                                                    *r15_4 = 0x6c;\n                                                    r15_4 = (r15_4 + 1);\n                                                }\n                                            }\n                                            if (((((rax_23 & 0x14180) == 0 && (*rax_23[1] & 0x10) == 0) && (*rax_23[1] & 6) != 0) || (rax_23 & 0x14180) != 0))\n                                            {\n                                                *r15_4 = 0x6c;\n                                                r15_4 = (r15_4 + 1);\n                                            }\n                                        }\n                                        char rax_24 = r14_1[9];\n                                        *(r15_4 + 1) = 0;\n                                        *r15_4 = rax_24;\n                                        int64_t rax_25 = r14_1[5];\n                                        if (rax_25 != -1)\n                                        {\n                                            void* rax_27 = &var_670[(rax_25 << 5)];\n                                            if (*rax_27 != 5)\n                                            {\n                                                goto label_40f14c;\n                                            }\n                                            var_6b8 = 1;\n                                            var_680 = *(rax_27 + 0x10);\n                                            goto label_40e87e;\n                                        }\n                                        var_6b8 = 0;\n                                    label_40e87e:\n                                        int64_t rax_29 = r14_1[8];\n                                        if (rax_29 == -1)\n                                        {\n                                            goto label_40e8b6;\n                                        }\n                                        void* r8_3 = &var_670[(rax_29 << 5)];\n                                        if (*r8_3 != 5)\n                                        {\n                                            goto label_40f14c;\n                                        }\n                                        uint64_t rax_31 = var_6b8;\n                                        *(&var_680 + (rax_31 << 2)) = *(r8_3 + 0x10);\n                                        var_6b8 = (rax_31 + 1);\n                                    label_40e8b6:\n                                        void* rax_34 = (r13_1 + 2);\n                                        char* r11_1;\n                                        if (r13_1 < -2)\n                                        {\n                                            if (r12_1 >= rax_34)\n                                            {\n                                                goto label_40f2f8;\n                                            }\n                                            bool cond:22_1 = r12_1 < 0;\n                                            if (r12_1 != 0)\n                                            {\n                                                if (cond:22_1)\n                                                {\n                                                    goto label_40ea15;\n                                                }\n                                                r12_1 = (r12_1 + r12_1);\n                                                if (r12_1 >= rax_34)\n                                                {\n                                                    goto label_40e8e9;\n                                                }\n                                            }\n                                            else if (rax_34 <= 0xc)\n                                            {\n                                                r12_1 = 0xc;\n                                            label_40e8e9:\n                                                rdx_7 = rbx_2 == arg1;\n                                                if (rbx_2 == 0)\n                                                {\n                                                label_40f2a3:\n                                                    var_6a8 = rdx_7;\n                                                    char* rax_105 = malloc(r12_1);\n                                                    char rdx_17 = var_6a8;\n                                                    r11_1 = rax_105;\n                                                    if (rax_105 == 0)\n                                                    {\n                                                        goto label_40ea15;\n                                                    }\n                                                    if ((r13_1 != 0 && rdx_17 != 0))\n                                                    {\n                                                        r11_1 = memcpy(rax_105, rbx_2, r13_1);\n                                                    }\n                                                    goto label_40e914;\n                                                }\n                                                if (rdx_7 != 0)\n                                                {\n                                                    goto label_40f2a3;\n                                                }\n                                                char* rax_35 = realloc(rbx_2, r12_1);\n                                                r11_1 = rax_35;\n                                                if (rax_35 == 0)\n                                                {\n                                                    goto label_40ea15;\n                                                }\n                                                goto label_40e914;\n                                            }\n                                            if (rax_34 == -1)\n                                            {\n                                                goto label_40ea15;\n                                            }\n                                            r12_1 = rax_34;\n                                            goto label_40e8e9;\n                                        }\n                                        if (r12_1 != -1)\n                                        {\n                                            goto label_40ea15;\n                                        }\n                                    label_40f2f8:\n                                        r11_1 = rbx_2;\n                                    label_40e914:\n                                        *(r11_1 + r13_1) = 0;\n                                        int32_t* rax_36 = __errno_location();\n                                        char* r11_2 = r11_1;\n                                        var_6c8 = r15_4;\n                                        var_6a8 = rax_36;\n                                        int32_t rax_37 = *rax_36;\n                                    label_40e952:\n                                        void* rbx_3 = 0x7fffffff;\n                                        int32_t var_684 = 0xffffffff;\n                                        void* r15_6 = (r12_1 - r13_1);\n                                        *var_6a8 = 0;\n                                        uint64_t rax_39 = rax_19;\n                                        if (r15_6 <= 0x7fffffff)\n                                        {\n                                            rbx_3 = r15_6;\n                                        }\n                                        if (rax_39 > 0x11)\n                                        {\n                                            goto label_401dde;\n                                        }\n                                        char* var_6d0_1;\n                                        int32_t var_67c;\n                                        int32_t rax_56;\n                                        int32_t rax_58;\n                                        void* rsp_3;\n                                        void* rsp_6;\n                                        void* rsp_10;\n                                        void* rsp_11;\n                                        int64_t rdi_18;\n                                        int32_t* r9_2;\n                                        uint64_t r9_3;\n                                        switch (rax_39)\n                                        {\n                                            case 0:\n                                            {\n                                                goto label_401dde;\n                                            }\n                                            case 1:\n                                            {\n                                                r9_3 = var_670[((r14_1[0xa] << 5) + 0x10)];\n                                                goto label_40ed9b;\n                                            }\n                                            case 2:\n                                            {\n                                                r9_3 = var_670[((r14_1[0xa] << 5) + 0x10)];\n                                                goto label_40ed9b;\n                                            }\n                                            case 3:\n                                            {\n                                                r9_3 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                goto label_40ed9b;\n                                            }\n                                            case 4:\n                                            {\n                                                r9_3 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                goto label_40ed9b;\n                                            }\n                                            case 5:\n                                            case 6:\n                                            case 0xd:\n                                            case 0xe:\n                                            {\n                                                r9_3 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                            label_40ed9b:\n                                                int32_t rax_66 = var_6b8;\n                                                rdi_18 = (r11_2 + r13_1);\n                                                var_6d0_1 = r11_2;\n                                                if (rax_66 == 1)\n                                                {\n                                                    *(rsp_1 - 8) = &var_684;\n                                                    *(rsp_1 - 0x10) = r9_3;\n                                                    rsp_6 = (rsp_1 - 0x10);\n                                                    goto label_40f222;\n                                                }\n                                                if (rax_66 == 2)\n                                                {\n                                                    *(rsp_1 - 0x10) = &var_684;\n                                                    *(rsp_1 - 0x18) = r9_3;\n                                                    rsp_10 = (rsp_1 - 0x18);\n                                                    goto label_40f1dc;\n                                                }\n                                                *(rsp_1 - 0x10) = &var_684;\n                                                rsp_6 = (rsp_1 - 0x10);\n                                                goto label_40ede2;\n                                            }\n                                            case 7:\n                                            case 8:\n                                            case 9:\n                                            case 0xa:\n                                            case 0xf:\n                                            case 0x10:\n                                            case 0x11:\n                                            {\n                                                rdi_18 = (r11_2 + r13_1);\n                                                r9_2 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                rax_56 = var_6b8;\n                                                var_6d0_1 = r11_2;\n                                                break;\n                                            }\n                                            case 0xb:\n                                            {\n                                                int512_t zmm0;\n                                                zmm0 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                int32_t rax_83 = var_6b8;\n                                                void* rsp_17;\n                                                if (rax_83 == 1)\n                                                {\n                                                    *(rsp_1 - 0x10) = &var_684;\n                                                    rsp_17 = (rsp_1 - 0x10);\n                                                }\n                                                if (rax_83 == 2)\n                                                {\n                                                    *(rsp_1 - 8) = &var_684;\n                                                    *(rsp_1 - 0x10) = var_67c;\n                                                    rsp_17 = (rsp_1 - 0x10);\n                                                }\n                                                if ((rax_83 == 1 || rax_83 == 2))\n                                                {\n                                                    rax_58 = __snprintf_chk();\n                                                    *rsp_17;\n                                                    *(rsp_17 + 8);\n                                                    rsp_1 = (rsp_17 + 0x10);\n                                                }\n                                                if ((rax_83 != 1 && rax_83 != 2))\n                                                {\n                                                    rax_58 = __snprintf_chk();\n                                                }\n                                                goto label_40ecb0;\n                                            }\n                                            case 0xc:\n                                            {\n                                                rdi_18 = (r11_2 + r13_1);\n                                                var_6d0_1 = r11_2;\n                                                int80_t x87_r7_2 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                int32_t rax_76 = var_6b8;\n                                                if (rax_76 != 1)\n                                                {\n                                                    if (rax_76 == 2)\n                                                    {\n                                                        *(rsp_1 - 0x10) = &var_684;\n                                                        *(rsp_1 - 0x20) = x87_r7_2;\n                                                        *(rsp_1 - 0x30) = var_67c;\n                                                        rax_58 = __snprintf_chk();\n                                                        r11_2 = var_6d0_1;\n                                                        goto label_40ecb0;\n                                                    }\n                                                    rsp_3 = (rsp_1 - 0x10);\n                                                    r9_2 = &var_684;\n                                                    *rsp_3 = x87_r7_2;\n                                                    goto label_40eca2;\n                                                }\n                                                *(rsp_1 - 0x10) = &var_684;\n                                                rsp_11 = (rsp_1 - 0x20);\n                                                *rsp_11 = x87_r7_2;\n                                            label_40f1fc:\n                                                rax_58 = __snprintf_chk(rdi_18, rbx_3, 1, -1, var_6b0_1, var_680);\n                                                rsp_1 = (rsp_11 + 0x20);\n                                                r11_2 = var_6d0_1;\n                                            label_40ecb0:\n                                                rdx_1 = var_684;\n                                                if (rdx_1 >= 0)\n                                                {\n                                                    goto label_40ecbe;\n                                                }\n                                                break;\n                                            }\n                                        }\n                                        if (((((((rax_39 == 7 || rax_39 == 8) || rax_39 == 9) || rax_39 == 0xa) || rax_39 == 0xf) || rax_39 == 0x10) || rax_39 == 0x11))\n                                        {\n                                            if (rax_56 != 1)\n                                            {\n                                                if (rax_56 == 2)\n                                                {\n                                                    *(rsp_1 - 0x10) = &var_684;\n                                                    *(rsp_1 - 0x18) = r9_2;\n                                                    rsp_10 = (rsp_1 - 0x18);\n                                                label_40f1dc:\n                                                    *(rsp_10 - 8) = var_67c;\n                                                    rsp_11 = (rsp_10 - 8);\n                                                    goto label_40f1fc;\n                                                }\n                                                *(rsp_1 - 0x10) = &var_684;\n                                                rsp_3 = (rsp_1 - 0x10);\n                                            label_40eca2:\n                                                rax_58 = __snprintf_chk(rdi_18, rbx_3, 1, -1, var_6b0_1, r9_2);\n                                                r11_2 = var_6d0_1;\n                                                *rsp_3;\n                                                *(rsp_3 + 8);\n                                                rsp_1 = (rsp_3 + 0x10);\n                                                goto label_40ecb0;\n                                            }\n                                            *(rsp_1 - 8) = &var_684;\n                                            *(rsp_1 - 0x10) = r9_2;\n                                            rsp_6 = (rsp_1 - 0x10);\n                                        label_40f222:\n                                            r9_3 = var_680;\n                                        label_40ede2:\n                                            rax_58 = __snprintf_chk(rdi_18, rbx_3, 1, -1, var_6b0_1, r9_3);\n                                            rdx_1 = var_684;\n                                            *(rsp_6 + 8);\n                                            rsp_1 = (rsp_6 + 0x10);\n                                            r11_2 = var_6d0_1;\n                                            if (rdx_1 >= 0)\n                                            {\n                                            label_40ecbe:\n                                                int64_t rcx_16 = rdx_1;\n                                                if ((rcx_16 < rbx_3 && *(&r11_2[rcx_16] + r13_1) != 0))\n                                                {\n                                                    goto label_40f14c;\n                                                }\n                                                if (rdx_1 < rax_58)\n                                                {\n                                                label_40ecd8:\n                                                    var_684 = rax_58;\n                                                    rdx_1 = rax_58;\n                                                }\n                                                if ((rdx_1 + 1) < rbx_3)\n                                                {\n                                                    rbx_2 = r11_2;\n                                                    r15_2 = (rdx_1 + r13_1);\n                                                    *var_6a8 = rax_37;\n                                                    goto label_40eb17;\n                                                }\n                                                if (r15_6 > 0x7ffffffe)\n                                                {\n                                                    if ((r11_2 != arg1 && r11_2 != 0))\n                                                    {\n                                                        free(r11_2);\n                                                    }\n                                                    if (var_6e0_1 != 0)\n                                                    {\n                                                        free(var_6e0_1);\n                                                    }\n                                                    if (var_580 != &var_568)\n                                                    {\n                                                        free(var_580);\n                                                    }\n                                                    if (var_670 != &var_668)\n                                                    {\n                                                        free(var_670);\n                                                    }\n                                                    rbx_2 = nullptr;\n                                                    *var_6a8 = 0x4b;\n                                                    break;\n                                                }\n                                                uint64_t rax_60 = (rdx_1 + 2);\n                                                void* rax_61 = (rax_60 + r13_1);\n                                                int64_t rcx_18;\n                                                rcx_18 = (rax_60 + r13_1) < rax_60;\n                                                if (r12_1 >= 0)\n                                                {\n                                                    void* rdx_13 = (r12_1 + r12_1);\n                                                    if (rcx_18 == 0)\n                                                    {\n                                                        if (rdx_13 >= rax_61)\n                                                        {\n                                                            rax_61 = rdx_13;\n                                                        }\n                                                        if (r12_1 >= rax_61)\n                                                        {\n                                                            goto label_40e952;\n                                                        }\n                                                        r12_1 = (r12_1 + r12_1);\n                                                        if ((r12_1 < rax_61 && rax_61 != -1))\n                                                        {\n                                                            r12_1 = rax_61;\n                                                        }\n                                                        if (((r12_1 < rax_61 && rax_61 != -1) || r12_1 >= rax_61))\n                                                        {\n                                                            rbx_3 = r11_2 == arg1;\n                                                            if ((r11_2 == 0 || (r11_2 != 0 && rbx_3 != 0)))\n                                                            {\n                                                                char* rax_101 = malloc(r12_1);\n                                                                if (rax_101 != 0)\n                                                                {\n                                                                    if ((r13_1 != 0 && rbx_3 != 0))\n                                                                    {\n                                                                        r11_2 = memcpy(rax_101, r11_2, r13_1);\n                                                                        goto label_40e952;\n                                                                    }\n                                                                    r11_2 = rax_101;\n                                                                    goto label_40e952;\n                                                                }\n                                                            }\n                                                            if ((r11_2 != 0 && rbx_3 == 0))\n                                                            {\n                                                                char* rax_62 = realloc(r11_2, r12_1);\n                                                                if (rax_62 != 0)\n                                                                {\n                                                                    r11_2 = rax_62;\n                                                                    goto label_40e952;\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                                else if (r12_1 == -1)\n                                                {\n                                                    goto label_40e952;\n                                                }\n                                                r15_7 = r11_2;\n                                            }\n                                        }\n                                        if ((((((((((rax_39 == 7 || rax_39 == 8) || rax_39 == 9) || rax_39 == 0xa) || rax_39 == 0xf) || rax_39 == 0x10) || rax_39 == 0x11) && rax_56 == 1) && rdx_1 < 0) || rax_39 == 0xc))\n                                        {\n                                            if (*(var_6c8 + 1) != 0)\n                                            {\n                                                *(var_6c8 + 1) = 0;\n                                                goto label_40e952;\n                                            }\n                                            if (rax_58 < 0)\n                                            {\n                                                int32_t rbx_4 = *var_6a8;\n                                                if (rbx_4 == 0)\n                                                {\n                                                    rbx_4 = 0x54;\n                                                    if ((r14_1[9] & 0xef) != 0x63)\n                                                    {\n                                                        rbx_4 = 0x16;\n                                                    }\n                                                }\n                                                if ((r11_2 != arg1 && r11_2 != 0))\n                                                {\n                                                    free(r11_2);\n                                                }\n                                                if (var_6e0_1 != 0)\n                                                {\n                                                    free(var_6e0_1);\n                                                }\n                                                if (var_580 != &var_568)\n                                                {\n                                                    free(var_580);\n                                                }\n                                                if (var_670 != &var_668)\n                                                {\n                                                    free(var_670);\n                                                }\n                                                *var_6a8 = rbx_4;\n                                                rbx_2 = nullptr;\n                                                break;\n                                            }\n                                            goto label_40ecd8;\n                                        }\n                                    }\n                                    if (((rax_21 - 0x45) <= 2 || ((rax_21 - 0x45) > 2 && rax_21 == 0x41)))\n                                    {\n                                        if (rax_19 != 0xc)\n                                        {\n                                            goto label_40e727;\n                                        }\n                                        long double x87_r7_1 = *(rdx_1 + 0x10);\n                                        if ((!(FCMP_UO(x87_r7_1, x87_r7_1))))\n                                        {\n                                            long double x87_r6_3 = x87_r7_1;\n                                            x87_r7_1 = (x87_r7_1 + x87_r7_1);\n                                            (x87_r6_3 - x87_r7_1);\n                                            bool cond:7_1 = x87_r6_3 != x87_r7_1;\n                                            if ((FCMP_UO(x87_r6_3, x87_r7_1)))\n                                            {\n                                                goto label_40e727;\n                                            }\n                                            if (cond:7_1)\n                                            {\n                                                goto label_40e727;\n                                            }\n                                            goto label_40ebad;\n                                        }\n                                    label_40ebad:\n                                        char* rdx_11 = r14_1[3];\n                                        int64_t rdi_16 = r14_1[4];\n                                        int32_t r11_3 = r14_1[2];\n                                        int64_t r10_1;\n                                        if (rdx_11 == rdi_16)\n                                        {\n                                            r10_1 = 0;\n                                        label_40e9a0:\n                                            void* rdx_9 = r14_1[6];\n                                            int64_t rcx_10 = r14_1[7];\n                                            int64_t rcx_11;\n                                            int64_t rdx_10;\n                                            if (rdx_9 != rcx_10)\n                                            {\n                                                int64_t rsi_10 = r14_1[8];\n                                                if (rsi_10 == -1)\n                                                {\n                                                    char* rax_139 = (rdx_9 + 1);\n                                                    rdx_10 = 0;\n                                                    if (rcx_10 == rax_139)\n                                                    {\n                                                    label_40fc84:\n                                                        rcx_11 = 0xc;\n                                                    label_40f071:\n                                                        int64_t rax_97 = rcx_11;\n                                                        if (r10_1 >= rcx_11)\n                                                        {\n                                                            rax_97 = r10_1;\n                                                        }\n                                                        size_t rax_98 = (rax_97 + 1);\n                                                        var_698 = rax_98;\n                                                        if (rax_97 >= -1)\n                                                        {\n                                                            goto label_40ea15;\n                                                        }\n                                                        void var_2f8;\n                                                        int64_t rcx_21;\n                                                        if (rax_98 <= 0x2bc)\n                                                        {\n                                                            rcx_21 = &var_2f8;\n                                                        }\n                                                        else\n                                                        {\n                                                            var_6b8 = r11_3;\n                                                            var_6a8 = x87_r7_1;\n                                                            if (rax_98 == -1)\n                                                            {\n                                                                goto label_40ea15;\n                                                            }\n                                                            int64_t rax_99 = malloc(rax_98);\n                                                            r11_3 = var_6b8;\n                                                            x87_r7_1 = var_6a8;\n                                                            rcx_21 = rax_99;\n                                                            if (rax_99 == 0)\n                                                            {\n                                                                goto label_40ea15;\n                                                            }\n                                                        }\n                                                        int64_t r9_6;\n                                                        int64_t r15_9;\n                                                        if ((!(FCMP_UO(x87_r7_1, x87_r7_1))))\n                                                        {\n                                                            uint16_t x87status_1;\n                                                            int16_t temp0_2;\n                                                            temp0_2 = __fnstcw_memmem16(arg5);\n                                                            var_680 = temp0_2;\n                                                            int32_t r8_7 = var_680;\n                                                            int16_t rax_100;\n                                                            *rax_100[1] = (*r8_7[1] | 3);\n                                                            var_680 = rax_100;\n                                                            uint16_t x87control;\n                                                            uint16_t x87status_2;\n                                                            x87control = __fldcw_memmem16(var_680);\n                                                            bool c0_1;\n                                                            bool c1_1;\n                                                            bool c2_1;\n                                                            bool c3_1;\n                                                            c0_1 = __fxam(x87_r7_1);\n                                                            if ((*((((c0_1) ? 1 : 0) << 8) | ((((c1_1) ? 1 : 0) << 9) | ((((c2_1) ? 1 : 0) << 0xa) | ((((c3_1) ? 1 : 0) << 0xe) | 0x3800))))[1] & 2) != 0)\n                                                            {\n                                                                *rcx_21 = 0x2d;\n                                                                x87_r7_1 = (-x87_r7_1);\n                                                                r15_9 = (rcx_21 + 1);\n                                                            }\n                                                            else if ((r11_3 & 4) != 0)\n                                                            {\n                                                                r15_9 = (rcx_21 + 1);\n                                                                *rcx_21 = 0x2b;\n                                                            }\n                                                            else\n                                                            {\n                                                                r15_9 = rcx_21;\n                                                                if ((r11_3 & 8) != 0)\n                                                                {\n                                                                    r15_9 = (rcx_21 + 1);\n                                                                    *rcx_21 = 0x20;\n                                                                }\n                                                            }\n                                                            long double x87_r6_4 = 0;\n                                                            if (x87_r7_1 <= x87_r6_4)\n                                                            {\n                                                                (x87_r7_1 - x87_r6_4);\n                                                                bool cond:14_1 = x87_r7_1 != x87_r6_4;\n                                                                if ((FCMP_UO(x87_r7_1, x87_r6_4)))\n                                                                {\n                                                                    goto label_40f14c;\n                                                                }\n                                                                if (cond:14_1)\n                                                                {\n                                                                    goto label_40f14c;\n                                                                }\n                                                                bool rax_118 = (r14_1[9] & 0xdf);\n                                                                int32_t var_6e8;\n                                                                if (rax_118 == 0x46)\n                                                                {\n                                                                    *r15_9 = 0x30;\n                                                                    if ((r11_3 & 0x10) != 0)\n                                                                    {\n                                                                    label_40faa9:\n                                                                        var_6e8 = r10_1;\n                                                                        var_6b8 = r11_3;\n                                                                        r9_6 = (r15_9 + 2);\n                                                                        char rax_137 = *nl_langinfo(0x10000);\n                                                                        r11_3 = var_6b8;\n                                                                        r10_1 = var_6e8;\n                                                                        if (rax_137 == 0)\n                                                                        {\n                                                                            rax_137 = 0x2e;\n                                                                        }\n                                                                        *(r15_9 + 1) = rax_137;\n                                                                        if (rdx_10 != 0)\n                                                                        {\n                                                                            int64_t rsi_34 = ((r15_9 + rdx_10) + 2);\n                                                                            int64_t rax_138 = r9_6;\n                                                                        label_40fb20:\n                                                                            rax_138 = (rax_138 + 1);\n                                                                            *(rax_138 - 1) = 0x30;\n                                                                            if (rax_138 != rsi_34)\n                                                                            {\n                                                                                goto label_40fb20;\n                                                                            }\n                                                                            r9_6 = (r9_6 + rdx_10);\n                                                                        }\n                                                                        goto label_40f59b;\n                                                                    }\n                                                                    if (rdx_10 != 0)\n                                                                    {\n                                                                        goto label_40faa9;\n                                                                    }\n                                                                label_40f597:\n                                                                    r9_6 = (r15_9 + 1);\n                                                                label_40f59b:\n                                                                    var_680 = r8_7;\n                                                                    uint16_t x87status_3;\n                                                                    arg5 = __fldcw_memmem16(var_680);\n                                                                label_40f5ac:\n                                                                    uint64_t r8_11 = (r9_6 - rcx_21);\n                                                                    if (r10_1 > r8_11)\n                                                                    {\n                                                                        int64_t r10_2 = (r10_1 - r8_11);\n                                                                        int64_t rdi_38 = (r9_6 + r10_2);\n                                                                        r8_11 = (rdi_38 - rcx_21);\n                                                                        if ((r11_3 & 2) == 0)\n                                                                        {\n                                                                            if (((r11_3 & 0x20) == 0 || ((r11_3 & 0x20) != 0 && r15_9 == 0)))\n                                                                            {\n                                                                                int64_t rax_130 = -1;\n                                                                                int64_t rdx_26 = ((rcx_21 - 1) - r9_6);\n                                                                                if (rcx_21 < r9_6)\n                                                                                {\n                                                                                label_40f8e5:\n                                                                                    *(rdi_38 + rax_130) = *(r9_6 + rax_130);\n                                                                                    rax_130 = (rax_130 - 1);\n                                                                                    if (rdx_26 != rax_130)\n                                                                                    {\n                                                                                        goto label_40f8e5;\n                                                                                    }\n                                                                                    r9_6 = rcx_21;\n                                                                                }\n                                                                                if (r10_2 != 0)\n                                                                                {\n                                                                                    int64_t r10_4 = (r10_2 + r9_6);\n                                                                                label_40f908:\n                                                                                    r9_6 = (r9_6 + 1);\n                                                                                    *(r9_6 - 1) = 0x20;\n                                                                                    if (r9_6 != r10_4)\n                                                                                    {\n                                                                                        goto label_40f908;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                            if (((r11_3 & 0x20) != 0 && r15_9 != 0))\n                                                                            {\n                                                                                if (r15_9 >= r9_6)\n                                                                                {\n                                                                                    r15_9 = r9_6;\n                                                                                }\n                                                                                else\n                                                                                {\n                                                                                    int64_t rax_119 = -1;\n                                                                                    int64_t rdx_21 = ((r15_9 - 1) - r9_6);\n                                                                                label_40f5fd:\n                                                                                    *(rdi_38 + rax_119) = *(r9_6 + rax_119);\n                                                                                    rax_119 = (rax_119 - 1);\n                                                                                    if (rax_119 != rdx_21)\n                                                                                    {\n                                                                                        goto label_40f5fd;\n                                                                                    }\n                                                                                }\n                                                                                if (r10_2 != 0)\n                                                                                {\n                                                                                    int64_t r10_3 = (r10_2 + r15_9);\n                                                                                label_40f618:\n                                                                                    r15_9 = (r15_9 + 1);\n                                                                                    *(r15_9 - 1) = 0x30;\n                                                                                    if (r15_9 != r10_3)\n                                                                                    {\n                                                                                        goto label_40f618;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                        else if (r10_2 != 0)\n                                                                        {\n                                                                        label_40fa70:\n                                                                            r9_6 = (r9_6 + 1);\n                                                                            *(r9_6 - 1) = 0x20;\n                                                                            if (rdi_38 != r9_6)\n                                                                            {\n                                                                                goto label_40fa70;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                    if (var_698 <= r8_11)\n                                                                    {\n                                                                        goto label_40f14c;\n                                                                    }\n                                                                    uint64_t rax_121 = (r13_1 + r8_11);\n                                                                    int64_t rsi_24;\n                                                                    rsi_24 = (r13_1 + r8_11) < r13_1;\n                                                                    r15_2 = rax_121;\n                                                                    if ((r12_1 - r13_1) > r8_11)\n                                                                    {\n                                                                        goto label_40f6da;\n                                                                    }\n                                                                    if (rsi_24 != 0)\n                                                                    {\n                                                                        if (r12_1 != -1)\n                                                                        {\n                                                                            goto label_40ea15;\n                                                                        }\n                                                                        goto label_40f6da;\n                                                                    }\n                                                                    if (r12_1 >= rax_121)\n                                                                    {\n                                                                        goto label_40f6da;\n                                                                    }\n                                                                    bool cond:21_1 = r12_1 < 0;\n                                                                    if (r12_1 != 0)\n                                                                    {\n                                                                        if (cond:21_1)\n                                                                        {\n                                                                            goto label_40ea15;\n                                                                        }\n                                                                        r12_1 = (r12_1 + r12_1);\n                                                                        if (r12_1 >= rax_121)\n                                                                        {\n                                                                            goto label_40f685;\n                                                                        }\n                                                                    }\n                                                                    else if (rax_121 <= 0xc)\n                                                                    {\n                                                                        r12_1 = 0xc;\n                                                                    label_40f685:\n                                                                        void* rdx_23;\n                                                                        rdx_23 = rbx_2 == arg1;\n                                                                        if (rbx_2 == 0)\n                                                                        {\n                                                                        label_40f91e:\n                                                                            var_6b8 = rdx_23;\n                                                                            var_698 = rcx_21;\n                                                                            char* rax_131 = malloc(r12_1);\n                                                                            rcx_21 = var_698;\n                                                                            char rdx_27 = var_6b8;\n                                                                            if (rax_131 == 0)\n                                                                            {\n                                                                                goto label_40ea15;\n                                                                            }\n                                                                            if ((r13_1 == 0 || (r13_1 != 0 && rdx_27 == 0)))\n                                                                            {\n                                                                                rbx_2 = rax_131;\n                                                                            }\n                                                                            if ((r13_1 != 0 && rdx_27 != 0))\n                                                                            {\n                                                                                var_698 = rcx_21;\n                                                                                rcx_21 = var_698;\n                                                                                rbx_2 = memcpy(rax_131, rbx_2, r13_1);\n                                                                            }\n                                                                            goto label_40f6da;\n                                                                        }\n                                                                        if (rdx_23 != 0)\n                                                                        {\n                                                                            goto label_40f91e;\n                                                                        }\n                                                                        var_6a8 = r8_11;\n                                                                        var_698 = rcx_21;\n                                                                        char* rax_122 = realloc(rbx_2, r12_1);\n                                                                        if (rax_122 == 0)\n                                                                        {\n                                                                            goto label_40ea15;\n                                                                        }\n                                                                        rcx_21 = var_698;\n                                                                        r8_11 = var_6a8;\n                                                                        rbx_2 = rax_122;\n                                                                    label_40f6da:\n                                                                        var_698 = rcx_21;\n                                                                        memcpy((rbx_2 + r13_1), rcx_21, r8_11);\n                                                                        int64_t rcx_25 = var_698;\n                                                                        if (rcx_25 != &var_2f8)\n                                                                        {\n                                                                            free(rcx_25);\n                                                                        }\n                                                                        goto label_40eb17;\n                                                                    }\n                                                                    if (rax_121 == -1)\n                                                                    {\n                                                                        goto label_40ea15;\n                                                                    }\n                                                                    r12_1 = rax_121;\n                                                                    goto label_40f685;\n                                                                }\n                                                                if (rax_118 != 0x45)\n                                                                {\n                                                                    int32_t var_6f0;\n                                                                    if (rax_118 == 0x47)\n                                                                    {\n                                                                        *r15_9 = 0x30;\n                                                                        if ((r11_3 & 0x10) == 0)\n                                                                        {\n                                                                            goto label_40f597;\n                                                                        }\n                                                                        int64_t r9_8 = (r15_9 + 2);\n                                                                        if (rdx_10 == 0)\n                                                                        {\n                                                                            var_6a8 = r11_3;\n                                                                            r11_3 = var_6a8;\n                                                                            char rax_156 = *nl_langinfo(0x10000);\n                                                                            r9_6 = r9_8;\n                                                                            if (rax_156 == 0)\n                                                                            {\n                                                                                rax_156 = 0x2e;\n                                                                            }\n                                                                            *(r15_9 + 1) = rax_156;\n                                                                        }\n                                                                        else\n                                                                        {\n                                                                            char* rsi_32 = (rdx_10 - 1);\n                                                                            var_6f0 = r10_1;\n                                                                            var_6e8 = r9_8;\n                                                                            var_6c8 = r11_3;\n                                                                            var_6b8 = rdx_10;\n                                                                            char rax_134 = *nl_langinfo(0x10000);\n                                                                            r11_3 = var_6c8;\n                                                                            r9_6 = var_6e8;\n                                                                            r10_1 = var_6f0;\n                                                                            if (rax_134 == 0)\n                                                                            {\n                                                                                rax_134 = 0x2e;\n                                                                            }\n                                                                            *(r15_9 + 1) = rax_134;\n                                                                            if (rsi_32 != 0)\n                                                                            {\n                                                                                void* rdx_30 = &var_6b8[(r15_9 + 1)];\n                                                                                int64_t rax_135 = r9_6;\n                                                                            label_40fa4e:\n                                                                                rax_135 = (rax_135 + 1);\n                                                                                *(rax_135 - 1) = 0x30;\n                                                                                if (rax_135 != rdx_30)\n                                                                                {\n                                                                                    goto label_40fa4e;\n                                                                                }\n                                                                                r9_6 = &rsi_32[r9_6];\n                                                                            }\n                                                                        }\n                                                                        goto label_40f59b;\n                                                                    }\n                                                                    if (rax_118 != 0x41)\n                                                                    {\n                                                                        goto label_40f14c;\n                                                                    }\n                                                                    char* rax_142 = (r15_9 + 2);\n                                                                    *r15_9 = 0x30;\n                                                                    char rax_143 = r14_1[9];\n                                                                    *(r15_9 + 2) = 0x30;\n                                                                    *(r15_9 + 1) = (rax_143 + 0x17);\n                                                                    char* rsi_41;\n                                                                    if ((r11_3 & 0x10) == 0)\n                                                                    {\n                                                                        rsi_41 = (r15_9 + 3);\n                                                                    }\n                                                                    if (((r11_3 & 0x10) != 0 || ((r11_3 & 0x10) == 0 && rdx_10 != 0 != 0)))\n                                                                    {\n                                                                        var_6f0 = r10_1;\n                                                                        var_6e8 = rcx_21;\n                                                                        var_6c8 = r11_3;\n                                                                        rsi_41 = (r15_9 + 4);\n                                                                        char rax_153 = *nl_langinfo(0x10000);\n                                                                        r11_3 = var_6c8;\n                                                                        rcx_21 = var_6e8;\n                                                                        r10_1 = var_6f0;\n                                                                        if (rax_153 == 0)\n                                                                        {\n                                                                            rax_153 = 0x2e;\n                                                                        }\n                                                                        *(r15_9 + 3) = rax_153;\n                                                                        if (rdx_10 != 0)\n                                                                        {\n                                                                            int64_t rdi_53 = ((r15_9 + rdx_10) + 4);\n                                                                            char* rax_154 = rsi_41;\n                                                                        label_40fe95:\n                                                                            rax_154 = &rax_154[1];\n                                                                            rax_154[-1] = 0x30;\n                                                                            if (rax_154 != rdi_53)\n                                                                            {\n                                                                                goto label_40fe95;\n                                                                            }\n                                                                            rsi_41 = &rsi_41[rdx_10];\n                                                                        }\n                                                                    }\n                                                                    char rax_145 = r14_1[9];\n                                                                    r9_6 = &rsi_41[3];\n                                                                    *(rsi_41 + 1) = 0x302b;\n                                                                    r15_9 = rax_142;\n                                                                    *rsi_41 = (rax_145 + 0xf);\n                                                                    goto label_40f59b;\n                                                                }\n                                                                *r15_9 = 0x30;\n                                                                char* rsi_27;\n                                                                if ((r11_3 & 0x10) == 0)\n                                                                {\n                                                                    rsi_27 = (r15_9 + 1);\n                                                                }\n                                                                if (((r11_3 & 0x10) != 0 || ((r11_3 & 0x10) == 0 && rdx_10 != 0 != 0)))\n                                                                {\n                                                                    var_6e8 = r10_1;\n                                                                    var_6b8 = r11_3;\n                                                                    rsi_27 = (r15_9 + 2);\n                                                                    char rax_148 = *nl_langinfo(0x10000);\n                                                                    r11_3 = var_6b8;\n                                                                    r10_1 = var_6e8;\n                                                                    if (rax_148 == 0)\n                                                                    {\n                                                                        rax_148 = 0x2e;\n                                                                    }\n                                                                    *(r15_9 + 1) = rax_148;\n                                                                    if (rdx_10 != 0)\n                                                                    {\n                                                                        int64_t rdi_50 = ((r15_9 + rdx_10) + 2);\n                                                                        char* rax_149 = rsi_27;\n                                                                    label_40fd80:\n                                                                        rax_149 = &rax_149[1];\n                                                                        rax_149[-1] = 0x30;\n                                                                        if (rax_149 != rdi_50)\n                                                                        {\n                                                                            goto label_40fd80;\n                                                                        }\n                                                                        rsi_27 = &rsi_27[rdx_10];\n                                                                    }\n                                                                }\n                                                                char rax_123 = r14_1[9];\n                                                                r9_6 = &rsi_27[4];\n                                                                rsi_27[3] = 0x30;\n                                                                *rsi_27 = rax_123;\n                                                                *(rsi_27 + 1) = 0x302b;\n                                                                goto label_40f59b;\n                                                            }\n                                                            long double x87_r6_7 = (x87_r6_4 + x87_r6_4);\n                                                            (x87_r6_7 - x87_r6_4);\n                                                            bool cond:15_1 = x87_r6_7 != x87_r6_4;\n                                                            if ((!(FCMP_O(x87_r6_7, x87_r6_4))))\n                                                            {\n                                                                goto label_40f14c;\n                                                            }\n                                                            if (cond:15_1)\n                                                            {\n                                                                goto label_40f14c;\n                                                            }\n                                                            r9_6 = (r15_9 + 3);\n                                                            if ((r14_1[9] - 0x41) > 0x19)\n                                                            {\n                                                                *(r15_9 + 2) = 0x66;\n                                                                *r15_9 = 0x6e69;\n                                                                r15_9 = 0;\n                                                            }\n                                                            else\n                                                            {\n                                                                *(r15_9 + 2) = 0x46;\n                                                                *r15_9 = 0x4e49;\n                                                                r15_9 = 0;\n                                                            }\n                                                            goto label_40f59b;\n                                                        }\n                                                        r9_6 = (rcx_21 + 3);\n                                                        if ((r15_3 - 0x41) > 0x19)\n                                                        {\n                                                            *(rcx_21 + 2) = 0x6e;\n                                                            r15_9 = 0;\n                                                            *rcx_21 = 0x616e;\n                                                        }\n                                                        else\n                                                        {\n                                                            *(rcx_21 + 2) = 0x4e;\n                                                            r15_9 = 0;\n                                                            *rcx_21 = 0x414e;\n                                                        }\n                                                        goto label_40f5ac;\n                                                    }\n                                                    char* rsi_36 = rax_139;\n                                                label_40fbe3:\n                                                    char* rdi_49 = &rsi_36[1];\n                                                    int64_t rax_140 = (*rsi_36 - 0x30);\n                                                    int64_t rsi_39 = -1;\n                                                    if (rdx_10 <= 0x1999999999999999)\n                                                    {\n                                                        int64_t rsi_40 = (rdx_10 * 5);\n                                                        rsi_39 = (rsi_40 + rsi_40);\n                                                    }\n                                                    rsi_36 = rdi_49;\n                                                    rdx_10 = (rax_140 + rsi_39);\n                                                    if ((rax_140 + rsi_39) < rax_140)\n                                                    {\n                                                        if (rcx_10 == rdi_49)\n                                                        {\n                                                            goto label_40ea15;\n                                                        }\n                                                    label_40fc17:\n                                                        rsi_36 = &rdi_49[1];\n                                                        if (rsi_36[-1] != 0x30)\n                                                        {\n                                                            if (rcx_10 != rsi_36)\n                                                            {\n                                                                rdi_49 = rsi_36;\n                                                                goto label_40fc17;\n                                                            }\n                                                            goto label_40ea15;\n                                                        }\n                                                        rdx_10 = -1;\n                                                    }\n                                                    if (rcx_10 != rsi_36)\n                                                    {\n                                                        goto label_40fbe3;\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    void* r8_4 = &var_670[(rsi_10 << 5)];\n                                                    if (*r8_4 != 5)\n                                                    {\n                                                        goto label_40f14c;\n                                                    }\n                                                    rdx_10 = *(r8_4 + 0x10);\n                                                    if (rdx_10 < 0)\n                                                    {\n                                                        goto label_40f050;\n                                                    }\n                                                }\n                                                if (rdx_10 == 0)\n                                                {\n                                                    goto label_40fc84;\n                                                }\n                                                rcx_11 = (rdx_10 + 0xc);\n                                                if (rdx_10 >= -0xc)\n                                                {\n                                                    goto label_40ea15;\n                                                }\n                                                goto label_40f071;\n                                            }\n                                        label_40f050:\n                                            bool cond:9_1 = rax_21 != 0x41;\n                                            rcx_11 = 0xc;\n                                            if (rax_21 != 0x41)\n                                            {\n                                                rcx_11 = 0x12;\n                                            }\n                                            rdx_10 = 0;\n                                            if (cond:9_1)\n                                            {\n                                                rdx_10 = 6;\n                                            }\n                                            goto label_40f071;\n                                        }\n                                        int64_t rcx_12 = r14_1[5];\n                                        if (rcx_12 != -1)\n                                        {\n                                            void* rcx_14 = &var_670[(rcx_12 << 5)];\n                                            if (*rcx_14 != 5)\n                                            {\n                                                goto label_40f14c;\n                                            }\n                                            r10_1 = *(rcx_14 + 0x10);\n                                            if (r10_1 < 0)\n                                            {\n                                                r11_3 = (r11_3 | 2);\n                                                r10_1 = (-r10_1);\n                                            }\n                                            goto label_40e9a0;\n                                        }\n                                        r10_1 = 0;\n                                        var_698 = rcx_12;\n                                    label_40fb51:\n                                        char* rsi_35 = &rdx_11[1];\n                                        int64_t r9_10 = -1;\n                                        int64_t rdx_34 = (*rdx_11 - 0x30);\n                                        if (r10_1 <= 0x1999999999999999)\n                                        {\n                                            int64_t r9_11 = (r10_1 * 5);\n                                            r9_10 = (r9_11 + r9_11);\n                                        }\n                                        r10_1 = (rdx_34 + r9_10);\n                                        rdx_11 = rsi_35;\n                                        if ((rdx_34 + r9_10) < rdx_34)\n                                        {\n                                            int64_t rcx_26 = var_698;\n                                            if (rdi_16 != rsi_35)\n                                            {\n                                            label_40fb96:\n                                                rdx_11 = &rdx_11[1];\n                                                if (rdx_11[-1] == 0x30)\n                                                {\n                                                    var_698 = rcx_26;\n                                                    r10_1 = -1;\n                                                }\n                                                else if (rdi_16 != rdx_11)\n                                                {\n                                                    goto label_40fb96;\n                                                }\n                                            }\n                                            if ((rdi_16 == rsi_35 || (rdi_16 != rsi_35 && rdx_11[-1] != 0x30)))\n                                            {\n                                                r10_1 = rcx_26;\n                                            }\n                                        }\n                                        if ((((((rdx_34 + r9_10) < rdx_34 && rdi_16 != rsi_35) && rdx_11[-1] == 0x30) || (rdx_34 + r9_10) >= rdx_34) && rdi_16 != rdx_11))\n                                        {\n                                            goto label_40fb51;\n                                        }\n                                        goto label_40e9a0;\n                                    }\n                                }\n                            }\n                            if ((r15_7 != arg1 && r15_7 != 0))\n                            {\n                                goto label_40ec3b;\n                            }\n                        }\n                        else\n                        {\n                            if (r12_1 >= rax_8)\n                            {\n                                goto label_40e693;\n                            }\n                            bool cond:0_1 = r12_1 < 0;\n                            if ((r12_1 == 0 && rax_8 <= 0xc))\n                            {\n                                r12_1 = 0xc;\n                                rdx_1 = rbx_2 == arg1;\n                                if (rbx_2 == 0)\n                                {\n                                label_40e57a:\n                                    var_6a8 = rdx_1;\n                                    var_698 = rcx_1;\n                                    char* rax_9 = malloc(r12_1);\n                                    rcx_1 = var_698;\n                                    char rdx_2 = var_6a8;\n                                    if (rax_9 == 0)\n                                    {\n                                        goto label_40ea15;\n                                    }\n                                    if ((r15_2 == 0 || (r15_2 != 0 && rdx_2 == 0)))\n                                    {\n                                        rbx_2 = rax_9;\n                                    }\n                                    if ((r15_2 != 0 && rdx_2 != 0))\n                                    {\n                                        var_698 = rcx_1;\n                                        rcx_1 = var_698;\n                                        rbx_2 = memcpy(rax_9, rbx_2, r15_2);\n                                    }\n                                    goto label_40e693;\n                                }\n                            }\n                            if (r12_1 != 0)\n                            {\n                                if (cond:0_1)\n                                {\n                                    goto label_40ea15;\n                                }\n                                r12_1 = (r12_1 + r12_1);\n                                if (r12_1 >= rax_8)\n                                {\n                                    goto label_40e642;\n                                }\n                            }\n                            if (((r12_1 == 0 && rax_8 > 0xc) || r12_1 != 0))\n                            {\n                                if (rax_8 == -1)\n                                {\n                                    goto label_40ea15;\n                                }\n                                r12_1 = rax_8;\n                            label_40e642:\n                                rdx_1 = rbx_2 == arg1;\n                                if (rbx_2 == 0)\n                                {\n                                    goto label_40e57a;\n                                }\n                            }\n                            if (((((r12_1 == 0 && rax_8 > 0xc) || r12_1 != 0) && rax_8 != -1) || (r12_1 == 0 && rax_8 <= 0xc)))\n                            {\n                                if (rdx_1 != 0)\n                                {\n                                    goto label_40e57a;\n                                }\n                                var_698 = rcx_1;\n                                char* rax_15 = realloc(rbx_2, r12_1);\n                                if (rax_15 != 0)\n                                {\n                                    rcx_1 = var_698;\n                                    rbx_2 = rax_15;\n                                    goto label_40e693;\n                                }\n                            label_40ec2a:\n                                r15_7 = rbx_2;\n                                var_6a8 = __errno_location();\n                            label_40ec3b:\n                                free(r15_7);\n                            }\n                        }\n                        if (var_6e0_1 == 0)\n                        {\n                            break;\n                        }\n                        free(var_6e0_1);\n                        break;\n                    }\n                }\n                if ((rcx == r8_1 || (((rcx != r8_1 && (!/* if (rcx == r8_1 || (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && not(unimplemented  {add rax, rcx} && var_6e0_1 == 0) && not(unimplemented  {add rax, rcx})))... */)) && (!(/* if (rcx == r8_1 || (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && not(unimplemented  {add rax, rcx} && var_6e0_1 == 0) && not(unimplemented  {add rax, rcx})))... */ && var_6e0_1 == 0))) && (!/* if (rcx == r8_1 || (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && not(unimplemented  {add rax, rcx} && var_6e0_1 == 0) && not(unimplemented  {add rax, rcx})))... */))))\n                {\n                    r13_1 = r15_2;\n                    goto label_40e69f;\n                }\n                if ((((rcx != r8_1 && (!/* if (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && unimplemented  {add rax, rcx} && var_6e0_1 == 0)... */)) && /* if (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && unimplemented  {add rax, rcx} && var_6e0_1 == 0)... */) && var_6e0_1 == 0))\n                {\n                    goto label_40eb45;\n                }\n            }\n            else\n            {\n            label_40eb45:\n                var_6a8 = __errno_location();\n            }\n            if (((rax_3 + var_570) < rax_3 || ((((rax_3 + var_570) >= rax_3 && rax_4 < -6) && rcx != r8_1) && /* if (rax_3 + var_570 u< rax_3 || (rax_3 + var_570 u>= rax_3 && rax_4 u< -6 && rcx != r8_1 && unimplemented  {add rax, rcx}))... */)))\n            {\n                if (var_580 != &var_568)\n                {\n                    free(var_580);\n                }\n                if (var_670 == &var_668)\n                {\n                    goto label_40ea88;\n                }\n                free(var_670);\n            label_40ea88:\n                rbx_2 = nullptr;\n                *var_6a8 = 0xc;\n            }\n        }\n        else\n        {\n            if (var_580 != &var_568)\n            {\n                free(var_580);\n            }\n            if (var_670 != &var_668)\n            {\n                free(var_670);\n            }\n            rbx_2 = nullptr;\n            *__errno_location() = 0x16;\n        }\n    }\nlabel_40eaa1:\n    return rbx_2;\n}\n\n"
        },
        {
            "funcName": "sub_40ff40",
            "funcStartAddr": "0x40ff40",
            "funcEndAddr": "0x410116",
            "decompiledFuncCode": "int64_t sub_40ff40(int64_t, void* arg2)\n{\n    int32_t* rax = *(arg2 + 8);\n    if (*arg2 == 0)\n    {\n        return 0;\n    }\n    if (*rax > 0x16)\n    {\n        return 0xffffffff;\n    }\n    /* jump -> *((*rax << 3) + &data_415120) */\n}\n\n"
        },
        {
            "funcName": "sub_410160",
            "funcStartAddr": "0x410160",
            "funcEndAddr": "0x410e69",
            "decompiledFuncCode": "int64_t sub_410160(char* arg1, int64_t* arg2, int64_t* arg3)\n{\n    void* rcx = &arg2[4];\n    void* rax = &arg3[2];\n    int64_t* r8 = arg2;\n    void* r9 = 7;\n    int64_t r11 = 7;\n    int64_t r13 = 0;\n    *arg2 = 0;\n    arg2[1] = rcx;\n    void* var_60 = rcx;\n    *arg3 = 0;\n    arg3[1] = rax;\n    void* var_70 = nullptr;\n    int64_t var_78 = 0;\n    void* var_68 = nullptr;\n    while (true)\n    {\n        char rax_1 = *arg1;\n        int64_t rax_6;\n        if (rax_1 == 0)\n        {\n            *(rcx + (r13 * 0x58)) = arg1;\n            r8[2] = var_78;\n            r8[3] = var_70;\n            rax_6 = 0;\n        }\n        else\n        {\n            void* rbp_1 = &arg1[1];\n            if (rax_1 != 0x25)\n            {\n                goto label_4101d8;\n            }\n            void* r14_1 = ffffffffffffffff;\n            char** r12_1 = (rcx + (r13 * 0x58));\n            *r12_1 = arg1;\n            r12_1[2] = 0;\n            r12_1[3] = 0;\n            r12_1[4] = 0;\n            r12_1[5] = -1;\n            r12_1[6] = 0;\n            r12_1[7] = 0;\n            r12_1[8] = -1;\n            r12_1[0xa] = -1;\n            char rbx_1 = arg1[1];\n            if ((rbx_1 - 0x30) > 9)\n            {\n                goto label_4102a6;\n            }\n            void* rax_29 = rbp_1;\n            char rdx_14;\n            do\n            {\n                rax_29 = (rax_29 + 1);\n                rdx_14 = *rax_29;\n            } while ((rdx_14 - 0x30) <= 9);\n            void* r13_1;\n            if (rdx_14 == 0x24)\n            {\n                int64_t rax_64 = 0;\n                void* rcx_16;\n                int64_t rdx_28;\n                int64_t rdi_16;\n                char rsi_21;\n                do\n                {\n                    int64_t rsi_19 = -1;\n                    int64_t rdx_27 = (rbx_1 - 0x30);\n                    if (rax_64 <= 0x1999999999999999)\n                    {\n                        int64_t rsi_20 = (rax_64 * 5);\n                        rsi_19 = (rsi_20 + rsi_20);\n                    }\n                    rcx_16 = rbp_1;\n                    while (true)\n                    {\n                        rbx_1 = *(rbp_1 + 1);\n                        rdx_28 = (rdx_27 + rsi_19);\n                        rdi_16 = (rdx_27 + rsi_19) < rdx_27;\n                        rax_64 = rdx_28;\n                        rbp_1 = (rbp_1 + 1);\n                        rsi_21 = (rbx_1 - 0x30);\n                        if (rdi_16 == 0)\n                        {\n                            break;\n                        }\n                        if (rsi_21 > 9)\n                        {\n                            break;\n                        }\n                        rsi_19 = -1;\n                        rcx_16 = rbp_1;\n                        rdx_27 = (rbx_1 - 0x30);\n                    }\n                    if (rdi_16 != 0)\n                    {\n                        break;\n                    }\n                } while (rsi_21 <= 9);\n                if (rdi_16 != 0)\n                {\n                    goto label_410928;\n                }\n                r14_1 = (rdx_28 - 1);\n                if (r14_1 <= -3)\n                {\n                    rbp_1 = (rcx_16 + 2);\n                    rbx_1 = *(rcx_16 + 2);\n                    goto label_4102a6;\n                }\n            label_410928:\n                r13_1 = arg3[1];\n            }\n            else\n            {\n                r14_1 = ffffffffffffffff;\n            label_4102a6:\n                void* rcx_1;\n                while (true)\n                {\n                    rcx_1 = (rbp_1 + 1);\n                    if (rbx_1 == 0x27)\n                    {\n                        r12_1[2] = (r12_1[2] | 1);\n                    }\n                    else if (rbx_1 == 0x2d)\n                    {\n                        r12_1[2] = (r12_1[2] | 2);\n                    }\n                    else if (rbx_1 == 0x2b)\n                    {\n                        r12_1[2] = (r12_1[2] | 4);\n                    }\n                    else if (rbx_1 == 0x20)\n                    {\n                        r12_1[2] = (r12_1[2] | 8);\n                    }\n                    else if (rbx_1 == 0x23)\n                    {\n                        r12_1[2] = (r12_1[2] | 0x10);\n                    }\n                    else if (rbx_1 == 0x30)\n                    {\n                        r12_1[2] = (r12_1[2] | 0x20);\n                    }\n                    else\n                    {\n                        if (rbx_1 != 0x49)\n                        {\n                            break;\n                        }\n                        r12_1[2] = (r12_1[2] | 0x40);\n                    }\n                    rbx_1 = *rcx_1;\n                    rbp_1 = rcx_1;\n                }\n                if (rbx_1 != 0x2a)\n                {\n                    if ((rbx_1 - 0x30) <= 9)\n                    {\n                        r12_1[3] = rbp_1;\n                        if ((*rbp_1 - 0x30) <= 9)\n                        {\n                            void* rcx_15 = rbp_1;\n                            void* rdx_21;\n                            while (true)\n                            {\n                                rdx_21 = (rcx_15 + 1);\n                                if ((*(rcx_15 + 1) - 0x30) > 9)\n                                {\n                                    break;\n                                }\n                                rcx_15 = rdx_21;\n                            }\n                            rcx_1 = (rcx_15 + 2);\n                            int64_t rax_57 = (rdx_21 - rbp_1);\n                            rbp_1 = rdx_21;\n                            if (var_78 >= rax_57)\n                            {\n                                rax_57 = var_78;\n                            }\n                            var_78 = rax_57;\n                        }\n                        r12_1[4] = rbp_1;\n                        rbx_1 = *rbp_1;\n                    }\n                    goto label_410318;\n                }\n                int64_t rax_12 = 1;\n                r12_1[3] = rbp_1;\n                r12_1[4] = rcx_1;\n                if (var_78 != 0)\n                {\n                    rax_12 = var_78;\n                }\n                var_78 = rax_12;\n                int32_t rax_13 = *(rbp_1 + 1);\n                void* rbx_2;\n                if ((rax_13 - 0x30) <= 9)\n                {\n                    void* rdx_17 = rcx_1;\n                    char rsi_10;\n                    do\n                    {\n                        rdx_17 = (rdx_17 + 1);\n                        rsi_10 = *rdx_17;\n                    } while ((rsi_10 - 0x30) <= 9);\n                    if (rsi_10 == 0x24)\n                    {\n                        void* rsi_11 = nullptr;\n                        void* rdx_20;\n                        int64_t rbp_2;\n                        void* rdi_5;\n                        char rbx_6;\n                        do\n                        {\n                            void* const rdx_18 = ffffffffffffffff;\n                            int64_t rax_43 = (rax_13 - 0x30);\n                            if (rsi_11 <= 0x1999999999999999)\n                            {\n                                void* rdx_19 = (rsi_11 * 5);\n                                rdx_18 = (rdx_19 + rdx_19);\n                            }\n                            rdi_5 = rcx_1;\n                            while (true)\n                            {\n                                rdx_20 = (rdx_18 + rax_43);\n                                rax_13 = *(rcx_1 + 1);\n                                rbp_2 = (rdx_18 + rax_43) < rdx_18;\n                                rsi_11 = rdx_20;\n                                rcx_1 = (rcx_1 + 1);\n                                rbx_6 = (rax_13 - 0x30);\n                                if (rbp_2 == 0)\n                                {\n                                    break;\n                                }\n                                if (rbx_6 > 9)\n                                {\n                                    break;\n                                }\n                                rdx_18 = ffffffffffffffff;\n                                rdi_5 = rcx_1;\n                                rax_43 = (rax_13 - 0x30);\n                            }\n                            if (rbp_2 != 0)\n                            {\n                                break;\n                            }\n                        } while (rbx_6 <= 9);\n                        if (rbp_2 != 0)\n                        {\n                            goto label_410928;\n                        }\n                        rbx_2 = (rdx_20 - 1);\n                        if (rbx_2 > -3)\n                        {\n                            goto label_410928;\n                        }\n                        r12_1[5] = rbx_2;\n                        rcx_1 = (rdi_5 + 2);\n                        goto label_4103bc;\n                    }\n                }\n                rbx_2 = r12_1[5];\n                if (rbx_2 != -1)\n                {\n                    goto label_4103bc;\n                }\n                void* rax_41 = (var_68 + 1);\n                r12_1[5] = var_68;\n                if (var_68 == -1)\n                {\n                    goto label_410928;\n                }\n                rbx_2 = var_68;\n                var_68 = rax_41;\n            label_4103bc:\n                r13_1 = arg3[1];\n                int64_t rdx_4;\n                void* rsi_7;\n                if (r9 <= rbx_2)\n                {\n                    void* r9_1 = (r9 + r9);\n                    void* rax_36 = (rbx_2 + 1);\n                    if (r9_1 <= rbx_2)\n                    {\n                        r9_1 = rax_36;\n                    }\n                    if (r9_1 <= 0x7ffffffffffffff)\n                    {\n                        int64_t rsi_6 = (r9_1 << 5);\n                        if (rax == r13_1)\n                        {\n                            void* rax_63 = malloc(rsi_6);\n                            r9 = r9_1;\n                            if (rax_63 == 0)\n                            {\n                                goto label_410b19;\n                            }\n                            rdx_4 = *arg3;\n                            rsi_7 = rax;\n                            r13_1 = rax_63;\n                        label_410c34:\n                            memcpy(r13_1, rsi_7, (rdx_4 << 5));\n                            rdx_4 = *arg3;\n                        label_4106ed:\n                            arg3[1] = r13_1;\n                            goto label_4103cc;\n                        }\n                        void* rax_37 = realloc(r13_1, rsi_6);\n                        rsi_7 = arg3[1];\n                        r13_1 = rax_37;\n                        r9 = r9_1;\n                        if (rax_37 != 0)\n                        {\n                            rdx_4 = *arg3;\n                            if (rax == rsi_7)\n                            {\n                                goto label_410c34;\n                            }\n                            goto label_4106ed;\n                        }\n                        goto label_410b00;\n                    }\n                label_410afd:\n                    rsi_7 = r13_1;\n                label_410b00:\n                    if (rax == rsi_7)\n                    {\n                        goto label_410b19;\n                    }\n                label_410b0f:\n                    free(rsi_7);\n                label_410b19:\n                    int64_t rdi_12 = r8[1];\n                    if (var_60 != rdi_12)\n                    {\n                        free(rdi_12);\n                    }\n                    break;\n                }\n                rdx_4 = *arg3;\n            label_4103cc:\n                if (rdx_4 <= rbx_2)\n                {\n                    do\n                    {\n                        rdx_4 = (rdx_4 + 1);\n                        *((r13_1 + (rdx_4 << 5)) - 0x20) = 0;\n                    } while (rdx_4 <= rbx_2);\n                    *arg3 = rdx_4;\n                    goto label_4103f8;\n                }\n            label_4103f8:\n                void* rax_16 = (r13_1 + (rbx_2 << 5));\n                int32_t rdx_5 = *rax_16;\n                if (rdx_5 == 0)\n                {\n                    *rax_16 = 5;\n                    rbx_1 = *rcx_1;\n                    rbp_1 = rcx_1;\n                    rcx_1 = (rcx_1 + 1);\n                    if (rbx_1 == 0x2e)\n                    {\n                        goto label_410420;\n                    }\n                    goto label_410321;\n                }\n                if (rdx_5 == 5)\n                {\n                    rbx_1 = *rcx_1;\n                    rbp_1 = rcx_1;\n                    rcx_1 = (rcx_1 + 1);\n                label_410318:\n                    if (rbx_1 != 0x2e)\n                    {\n                        goto label_410321;\n                    }\n                label_410420:\n                    bool cond:0_1 = *(rbp_1 + 1) != 0x2a;\n                    r12_1[6] = rbp_1;\n                    if (cond:0_1)\n                    {\n                        void* rax_35;\n                        if ((*(rbp_1 + 1) - 0x30) > 9)\n                        {\n                            rbp_1 = rcx_1;\n                            rax_35 = 1;\n                        }\n                        else\n                        {\n                            do\n                            {\n                                rcx_1 = (rcx_1 + 1);\n                            } while ((*rcx_1 - 0x30) <= 9);\n                            rax_35 = (rcx_1 - rbp_1);\n                            rbp_1 = rcx_1;\n                        }\n                        r12_1[7] = rcx_1;\n                        rbx_1 = *rcx_1;\n                        if (var_70 >= rax_35)\n                        {\n                            rax_35 = var_70;\n                        }\n                        var_70 = rax_35;\n                        goto label_410321;\n                    }\n                    void* rax_17 = 2;\n                    char* rcx_4 = (rbp_1 + 2);\n                    r12_1[7] = rcx_4;\n                    if (var_70 >= 2)\n                    {\n                        rax_17 = var_70;\n                    }\n                    var_70 = rax_17;\n                    int32_t rax_18 = *(rbp_1 + 2);\n                    void* rbx_4;\n                    if ((rax_18 - 0x30) <= 9)\n                    {\n                        char* rdx_31 = rcx_4;\n                        char rsi_23;\n                        do\n                        {\n                            rdx_31 = &rdx_31[1];\n                            rsi_23 = *rdx_31;\n                        } while ((rsi_23 - 0x30) <= 9);\n                        if (rsi_23 != 0x24)\n                        {\n                            goto label_41045f;\n                        }\n                        void* rsi_24 = nullptr;\n                        void* rdx_34;\n                        int64_t rbp_3;\n                        char* rdi_18;\n                        char rbx_7;\n                        do\n                        {\n                            void* const rdx_32 = ffffffffffffffff;\n                            int64_t rax_67 = (rax_18 - 0x30);\n                            if (rsi_24 <= 0x1999999999999999)\n                            {\n                                void* rdx_33 = (rsi_24 * 5);\n                                rdx_32 = (rdx_33 + rdx_33);\n                            }\n                            rdi_18 = rcx_4;\n                            while (true)\n                            {\n                                rdx_34 = (rdx_32 + rax_67);\n                                rbp_3 = (rdx_32 + rax_67) < rdx_32;\n                                rcx_4 = &rcx_4[1];\n                                rax_18 = *rcx_4;\n                                rsi_24 = rdx_34;\n                                rbx_7 = (rax_18 - 0x30);\n                                if (rbp_3 == 0)\n                                {\n                                    break;\n                                }\n                                if (rbx_7 > 9)\n                                {\n                                    break;\n                                }\n                                rdx_32 = ffffffffffffffff;\n                                rdi_18 = rcx_4;\n                                rax_67 = (rax_18 - 0x30);\n                            }\n                            if (rbp_3 != 0)\n                            {\n                                break;\n                            }\n                        } while (rbx_7 <= 9);\n                        if (rbp_3 != 0)\n                        {\n                            goto label_410928;\n                        }\n                        rbx_4 = (rdx_34 - 1);\n                        if (rbx_4 > -3)\n                        {\n                            goto label_410928;\n                        }\n                        r12_1[8] = rbx_4;\n                        rcx_4 = &rdi_18[2];\n                        goto label_41046e;\n                    }\n                label_41045f:\n                    rbx_4 = r12_1[8];\n                    if (rbx_4 != -1)\n                    {\n                        goto label_41046e;\n                    }\n                    void* rax_65 = (var_68 + 1);\n                    r12_1[8] = var_68;\n                    if (var_68 == -1)\n                    {\n                        goto label_410928;\n                    }\n                    rbx_4 = var_68;\n                    var_68 = rax_65;\n                label_41046e:\n                    r13_1 = arg3[1];\n                    void* var_58;\n                    int64_t rdx_7;\n                    if (r9 <= rbx_4)\n                    {\n                        void* r9_3 = (r9 + r9);\n                        void* rax_61 = (rbx_4 + 1);\n                        if (r9_3 <= rbx_4)\n                        {\n                            r9_3 = rax_61;\n                        }\n                        if (r9_3 > 0x7ffffffffffffff)\n                        {\n                            goto label_410afd;\n                        }\n                        int64_t rsi_18 = (r9_3 << 5);\n                        var_58 = rcx_4;\n                        if (rax == r13_1)\n                        {\n                            void* rax_69 = malloc(rsi_18);\n                            rcx_4 = var_58;\n                            r9 = r9_3;\n                            if (rax_69 == 0)\n                            {\n                                goto label_410b19;\n                            }\n                            rdx_7 = *arg3;\n                            rsi_7 = rax;\n                            r13_1 = rax_69;\n                        label_410de6:\n                            memcpy(r13_1, rsi_7, (rdx_7 << 5));\n                            rdx_7 = *arg3;\n                        label_410bcc:\n                            arg3[1] = r13_1;\n                            goto label_41047e;\n                        }\n                        void* rax_62 = realloc(r13_1, rsi_18);\n                        rsi_7 = arg3[1];\n                        rcx_4 = var_58;\n                        r13_1 = rax_62;\n                        r9 = r9_3;\n                        if (rax_62 != 0)\n                        {\n                            rdx_7 = *arg3;\n                            if (rax == rsi_7)\n                            {\n                                goto label_410de6;\n                            }\n                            goto label_410bcc;\n                        }\n                        goto label_410b00;\n                    }\n                    rdx_7 = *arg3;\n                label_41047e:\n                    if (rdx_7 <= rbx_4)\n                    {\n                        do\n                        {\n                            rdx_7 = (rdx_7 + 1);\n                            *((r13_1 + (rdx_7 << 5)) - 0x20) = 0;\n                        } while (rdx_7 <= rbx_4);\n                        *arg3 = rdx_7;\n                        goto label_4104ab;\n                    }\n                label_4104ab:\n                    void* rax_23 = ((rbx_4 << 5) + r13_1);\n                    int32_t rdx_8 = *rax_23;\n                    if (rdx_8 == 0)\n                    {\n                        *rax_23 = 5;\n                        rbp_1 = rcx_4;\n                        rbx_1 = *rcx_4;\n                    label_410321:\n                        int32_t rax_11 = 0;\n                        while (true)\n                        {\n                            rbp_1 = (rbp_1 + 1);\n                            if (rbx_1 == 0x68)\n                            {\n                                rax_11 = (rax_11 | (1 << (rax_11 & 1)));\n                            }\n                            else if (rbx_1 == 0x4c)\n                            {\n                                rax_11 = (rax_11 | 4);\n                            }\n                            else\n                            {\n                                if ((rbx_1 != 0x6c && (rbx_1 != 0x6a && ((rbx_1 & 0xdf) != 0x5a && rbx_1 != 0x74))))\n                                {\n                                    break;\n                                }\n                                rax_11 = (rax_11 + 8);\n                            }\n                            rbx_1 = *rbp_1;\n                        }\n                        char rdx_9 = (rbx_1 - 0x25);\n                        if (rdx_9 > 0x53)\n                        {\n                            goto label_410928;\n                        }\n                        int32_t rcx_6;\n                        switch (rdx_9)\n                        {\n                            case 0:\n                            {\n                                goto label_410551;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 7:\n                            case 8:\n                            case 9:\n                            case 0xa:\n                            case 0xb:\n                            case 0xc:\n                            case 0xd:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1d:\n                            case 0x1f:\n                            case 0x23:\n                            case 0x24:\n                            case 0x25:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x3b:\n                            case 0x3d:\n                            case 0x46:\n                            case 0x48:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x51:\n                            case 0x52:\n                            {\n                                goto label_410928;\n                            }\n                            case 0x1c:\n                            case 0x20:\n                            case 0x21:\n                            case 0x22:\n                            case 0x3c:\n                            case 0x40:\n                            case 0x41:\n                            case 0x42:\n                            {\n                                rcx_6 = 0xc;\n                                if (rax_11 <= 0xf)\n                                {\n                                    int32_t rcx_12;\n                                    rcx_12 = (rax_11 & 4) != 0;\n                                    rcx_6 = (rcx_12 + 0xb);\n                                }\n                                goto label_4104f9;\n                            }\n                            case 0x1e:\n                            {\n                                rcx_6 = 0xe;\n                                rbx_1 = 0x63;\n                                goto label_4104f9;\n                            }\n                            case 0x2e:\n                            {\n                                rcx_6 = 0x10;\n                                rbx_1 = 0x73;\n                                goto label_4104f9;\n                            }\n                            case 0x33:\n                            case 0x4a:\n                            case 0x50:\n                            case 0x53:\n                            {\n                                rcx_6 = 0xa;\n                                if ((rax_11 <= 0xf && (rax_11 & 4) == 0))\n                                {\n                                    rcx_6 = 8;\n                                    if (rax_11 <= 7)\n                                    {\n                                        rcx_6 = 2;\n                                        if ((rax_11 & 2) == 0)\n                                        {\n                                            rcx_6 = (((2 - 2) & 2) + 4);\n                                        }\n                                    }\n                                }\n                                goto label_4104f9;\n                            }\n                            case 0x3e:\n                            {\n                                int32_t rcx_8;\n                                rcx_8 = rax_11 > 7;\n                                rcx_6 = (rcx_8 + 0xd);\n                                goto label_4104f9;\n                            }\n                            case 0x3f:\n                            case 0x44:\n                            {\n                                rcx_6 = 9;\n                                if ((rax_11 <= 0xf && (rax_11 & 4) == 0))\n                                {\n                                    rcx_6 = 7;\n                                    if (rax_11 <= 7)\n                                    {\n                                        rcx_6 = 1;\n                                        if ((rax_11 & 2) == 0)\n                                        {\n                                            rcx_6 = (((1 - 1) & 2) + 3);\n                                        }\n                                    }\n                                }\n                                goto label_4104f9;\n                            }\n                            case 0x49:\n                            {\n                                rcx_6 = 0x16;\n                                if ((rax_11 <= 0xf && (rax_11 & 4) == 0))\n                                {\n                                    rcx_6 = 0x15;\n                                    if (rax_11 <= 7)\n                                    {\n                                        rcx_6 = 0x12;\n                                        if ((rax_11 & 2) == 0)\n                                        {\n                                            int32_t rcx_9;\n                                            rcx_9 = (rax_11 & 1) == 0;\n                                            rcx_6 = (rcx_9 + 0x13);\n                                        }\n                                    }\n                                }\n                                goto label_4104f9;\n                            }\n                            case 0x4b:\n                            {\n                                rcx_6 = 0x11;\n                                goto label_4104f9;\n                            }\n                            case 0x4e:\n                            {\n                                int32_t rcx_5;\n                                rcx_5 = rax_11 > 7;\n                                rcx_6 = (rcx_5 + 0xf);\n                            label_4104f9:\n                                if (r14_1 == -1)\n                                {\n                                    void* rax_51 = (var_68 + 1);\n                                    r12_1[0xa] = var_68;\n                                    if (var_68 == -1)\n                                    {\n                                        goto label_410928;\n                                    }\n                                    r14_1 = var_68;\n                                    var_68 = rax_51;\n                                    goto label_410508;\n                                }\n                                r12_1[0xa] = r14_1;\n                            label_410508:\n                                r13_1 = arg3[1];\n                                if (r9 > r14_1)\n                                {\n                                    goto label_410515;\n                                }\n                                void* r9_2 = (r9 + r9);\n                                void* rax_48 = (r14_1 + 1);\n                                if (r9_2 <= r14_1)\n                                {\n                                    r9_2 = rax_48;\n                                }\n                                if (r9_2 > 0x7ffffffffffffff)\n                                {\n                                    goto label_410afd;\n                                }\n                                size_t rsi_13 = (r9_2 << 5);\n                                var_58 = rcx_6;\n                                void* rax_58;\n                                if (rax == r13_1)\n                                {\n                                    rax_58 = malloc(rsi_13);\n                                    rcx_6 = var_58;\n                                    r9 = r9_2;\n                                    if (rax_58 == 0)\n                                    {\n                                        goto label_410b19;\n                                    }\n                                    goto label_410ab9;\n                                }\n                                void* rax_49 = realloc(r13_1, rsi_13);\n                                rcx_6 = var_58;\n                                r13_1 = rax_49;\n                                r9 = r9_2;\n                                if (rax_49 == 0)\n                                {\n                                    goto label_410e53;\n                                }\n                                if (rax != arg3[1])\n                                {\n                                    goto label_4109fb;\n                                }\n                                rax_58 = r13_1;\n                                r13_1 = rax;\n                            label_410ab9:\n                                void* rsi_16 = r13_1;\n                                r13_1 = rax_58;\n                                var_58 = rcx_6;\n                                memcpy(rax_58, rsi_16, (*arg3 << 5));\n                                rcx_6 = var_58;\n                            label_4109fb:\n                                arg3[1] = r13_1;\n                            label_410515:\n                                int64_t rax_24 = *arg3;\n                                if (rax_24 <= r14_1)\n                                {\n                                    do\n                                    {\n                                        rax_24 = (rax_24 + 1);\n                                        *((r13_1 + (rax_24 << 5)) - 0x20) = 0;\n                                    } while (rax_24 <= r14_1);\n                                    *arg3 = rax_24;\n                                }\n                                void* rax_25 = (r13_1 + (r14_1 << 5));\n                                int32_t rdx_13 = *rax_25;\n                                if (rdx_13 == 0)\n                                {\n                                    *rax_25 = rcx_6;\n                                label_410551:\n                                    r12_1[9] = rbx_1;\n                                    int64_t rax_26 = *r8;\n                                    r12_1[1] = rbp_1;\n                                    r13 = (rax_26 + 1);\n                                    *r8 = r13;\n                                    if (r11 > r13)\n                                    {\n                                        rcx = r8[1];\n                                    label_4101d8:\n                                        arg1 = rbp_1;\n                                        continue;\n                                    }\n                                    else\n                                    {\n                                        if (r11 >= 0)\n                                        {\n                                            int64_t rbx_5 = (r11 + r11);\n                                            if (rbx_5 > 0x2e8ba2e8ba2e8ba)\n                                            {\n                                                goto label_410e53;\n                                            }\n                                            int64_t r12_2 = r8[1];\n                                            int64_t rsi_3 = (r11 * 0xb0);\n                                            if (var_60 == r12_2)\n                                            {\n                                                void* rax_38 = malloc(rsi_3);\n                                                rcx = rax_38;\n                                                if (rax_38 != 0)\n                                                {\n                                                label_410748:\n                                                    rcx = memcpy(rcx, r12_2, (r13 * 0x58));\n                                                    r13 = *r8;\n                                                label_4105ef:\n                                                    r8[1] = rcx;\n                                                    r11 = rbx_5;\n                                                    goto label_4101d8;\n                                                }\n                                                rsi_7 = arg3[1];\n                                                if (rax == rsi_7)\n                                                {\n                                                    break;\n                                                }\n                                                goto label_410b0f;\n                                            }\n                                            void* rax_28 = realloc(r12_2, rsi_3);\n                                            rcx = rax_28;\n                                            if (rax_28 == 0)\n                                            {\n                                                goto label_410e53;\n                                            }\n                                            r12_2 = r8[1];\n                                            r13 = *r8;\n                                            if (var_60 == r12_2)\n                                            {\n                                                goto label_410748;\n                                            }\n                                            goto label_4105ef;\n                                        }\n                                    label_410e53:\n                                        rsi_7 = arg3[1];\n                                    }\n                                    goto label_410b00;\n                                }\n                                if (rdx_13 == rcx_6)\n                                {\n                                    goto label_410551;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                    else if (rdx_8 == 5)\n                    {\n                        rbx_1 = *rcx_4;\n                        rbp_1 = rcx_4;\n                        goto label_410321;\n                    }\n                }\n            }\n            if (rax == r13_1)\n            {\n                goto label_410945;\n            }\n            free(r13_1);\n        label_410945:\n            int64_t rdi_7 = r8[1];\n            if (var_60 != rdi_7)\n            {\n                free(rdi_7);\n            }\n            *__errno_location() = 0x16;\n            rax_6 = 0xffffffff;\n        }\n        return rax_6;\n    }\n    *__errno_location() = 0xc;\n    return 0xffffffff;\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x410e70",
            "funcEndAddr": "0x410ecd",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x410ed0",
            "funcEndAddr": "0x410ed1",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_410ee0",
            "funcStartAddr": "0x410ee0",
            "funcEndAddr": "0x410ef8",
            "decompiledFuncCode": "int64_t sub_410ee0(void (* arg1)(void*))\n{\n    int64_t rdx = data_618288;\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, rdx);\n}\n\n"
        },
        {
            "funcName": "sub_410ef8",
            "funcStartAddr": "0x410ef8",
            "funcEndAddr": "0x410f18",
            "decompiledFuncCode": "int64_t sub_410ef8(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_617e30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}