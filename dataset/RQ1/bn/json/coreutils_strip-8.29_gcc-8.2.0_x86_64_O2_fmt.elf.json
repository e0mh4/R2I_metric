{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_fmt.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 126,
    "funcInfo": [
        {
            "funcName": "sub_401430",
            "funcStartAddr": "0x401430",
            "funcEndAddr": "0x40143c",
            "decompiledFuncCode": "int64_t sub_401430()\n{\n    int64_t var_8 = data_60b008;\n    /* jump -> data_60b010 */\n}\n\n"
        },
        {
            "funcName": "sub_401446",
            "funcStartAddr": "0x401446",
            "funcEndAddr": "0x401450",
            "decompiledFuncCode": "int64_t sub_401446()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401456",
            "funcStartAddr": "0x401456",
            "funcEndAddr": "0x401460",
            "decompiledFuncCode": "int64_t sub_401456()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401466",
            "funcStartAddr": "0x401466",
            "funcEndAddr": "0x401470",
            "decompiledFuncCode": "int64_t sub_401466()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401486",
            "funcStartAddr": "0x401486",
            "funcEndAddr": "0x401490",
            "decompiledFuncCode": "int64_t sub_401486()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401496",
            "funcStartAddr": "0x401496",
            "funcEndAddr": "0x4014a0",
            "decompiledFuncCode": "int64_t sub_401496()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_4014a6",
            "funcStartAddr": "0x4014a6",
            "funcEndAddr": "0x4014b0",
            "decompiledFuncCode": "int64_t sub_4014a6()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_4014c6",
            "funcStartAddr": "0x4014c6",
            "funcEndAddr": "0x4014d0",
            "decompiledFuncCode": "int64_t sub_4014c6()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_4014d6",
            "funcStartAddr": "0x4014d6",
            "funcEndAddr": "0x4014e0",
            "decompiledFuncCode": "int64_t sub_4014d6()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_4014e6",
            "funcStartAddr": "0x4014e6",
            "funcEndAddr": "0x4014f0",
            "decompiledFuncCode": "int64_t sub_4014e6()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401506",
            "funcStartAddr": "0x401506",
            "funcEndAddr": "0x401510",
            "decompiledFuncCode": "int64_t sub_401506()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401516",
            "funcStartAddr": "0x401516",
            "funcEndAddr": "0x401520",
            "decompiledFuncCode": "int64_t sub_401516()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401526",
            "funcStartAddr": "0x401526",
            "funcEndAddr": "0x401530",
            "decompiledFuncCode": "int64_t sub_401526()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401546",
            "funcStartAddr": "0x401546",
            "funcEndAddr": "0x401550",
            "decompiledFuncCode": "int64_t sub_401546()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401556",
            "funcStartAddr": "0x401556",
            "funcEndAddr": "0x401560",
            "decompiledFuncCode": "int64_t sub_401556()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401566",
            "funcStartAddr": "0x401566",
            "funcEndAddr": "0x401570",
            "decompiledFuncCode": "int64_t sub_401566()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401586",
            "funcStartAddr": "0x401586",
            "funcEndAddr": "0x401590",
            "decompiledFuncCode": "int64_t sub_401586()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401596",
            "funcStartAddr": "0x401596",
            "funcEndAddr": "0x4015a0",
            "decompiledFuncCode": "int64_t sub_401596()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_4015a6",
            "funcStartAddr": "0x4015a6",
            "funcEndAddr": "0x4015b0",
            "decompiledFuncCode": "int64_t sub_4015a6()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_4015c6",
            "funcStartAddr": "0x4015c6",
            "funcEndAddr": "0x4015d0",
            "decompiledFuncCode": "int64_t sub_4015c6()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_4015d6",
            "funcStartAddr": "0x4015d6",
            "funcEndAddr": "0x4015e0",
            "decompiledFuncCode": "int64_t sub_4015d6()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_4015e6",
            "funcStartAddr": "0x4015e6",
            "funcEndAddr": "0x4015f0",
            "decompiledFuncCode": "int64_t sub_4015e6()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401606",
            "funcStartAddr": "0x401606",
            "funcEndAddr": "0x401610",
            "decompiledFuncCode": "int64_t sub_401606()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401616",
            "funcStartAddr": "0x401616",
            "funcEndAddr": "0x401620",
            "decompiledFuncCode": "int64_t sub_401616()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401626",
            "funcStartAddr": "0x401626",
            "funcEndAddr": "0x401630",
            "decompiledFuncCode": "int64_t sub_401626()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401646",
            "funcStartAddr": "0x401646",
            "funcEndAddr": "0x401650",
            "decompiledFuncCode": "int64_t sub_401646()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401656",
            "funcStartAddr": "0x401656",
            "funcEndAddr": "0x401660",
            "decompiledFuncCode": "int64_t sub_401656()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401666",
            "funcStartAddr": "0x401666",
            "funcEndAddr": "0x401670",
            "decompiledFuncCode": "int64_t sub_401666()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401686",
            "funcStartAddr": "0x401686",
            "funcEndAddr": "0x401690",
            "decompiledFuncCode": "int64_t sub_401686()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401696",
            "funcStartAddr": "0x401696",
            "funcEndAddr": "0x4016a0",
            "decompiledFuncCode": "int64_t sub_401696()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_4016a6",
            "funcStartAddr": "0x4016a6",
            "funcEndAddr": "0x4016b0",
            "decompiledFuncCode": "int64_t sub_4016a6()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_4016c6",
            "funcStartAddr": "0x4016c6",
            "funcEndAddr": "0x4016d0",
            "decompiledFuncCode": "int64_t sub_4016c6()\n{\n    int64_t var_8 = 0x28;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_4016d6",
            "funcStartAddr": "0x4016d6",
            "funcEndAddr": "0x4016e0",
            "decompiledFuncCode": "int64_t sub_4016d6()\n{\n    int64_t var_8 = 0x29;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_4016e6",
            "funcStartAddr": "0x4016e6",
            "funcEndAddr": "0x4016f0",
            "decompiledFuncCode": "int64_t sub_4016e6()\n{\n    int64_t var_8 = 0x2a;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401706",
            "funcStartAddr": "0x401706",
            "funcEndAddr": "0x401710",
            "decompiledFuncCode": "int64_t sub_401706()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401716",
            "funcStartAddr": "0x401716",
            "funcEndAddr": "0x401720",
            "decompiledFuncCode": "int64_t sub_401716()\n{\n    int64_t var_8 = 0x2d;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401726",
            "funcStartAddr": "0x401726",
            "funcEndAddr": "0x401730",
            "decompiledFuncCode": "int64_t sub_401726()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401746",
            "funcStartAddr": "0x401746",
            "funcEndAddr": "0x401750",
            "decompiledFuncCode": "int64_t sub_401746()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401756",
            "funcStartAddr": "0x401756",
            "funcEndAddr": "0x401760",
            "decompiledFuncCode": "int64_t sub_401756()\n{\n    int64_t var_8 = 0x31;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401766",
            "funcStartAddr": "0x401766",
            "funcEndAddr": "0x401770",
            "decompiledFuncCode": "int64_t sub_401766()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401786",
            "funcStartAddr": "0x401786",
            "funcEndAddr": "0x401790",
            "decompiledFuncCode": "int64_t sub_401786()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_401796",
            "funcStartAddr": "0x401796",
            "funcEndAddr": "0x4017a0",
            "decompiledFuncCode": "int64_t sub_401796()\n{\n    int64_t var_8 = 0x35;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "sub_4017a6",
            "funcStartAddr": "0x4017a6",
            "funcEndAddr": "0x4017b0",
            "decompiledFuncCode": "int64_t sub_4017a6()\n{\n    int64_t var_8 = 0x36;\n    /* tailcall */\n    return sub_401430();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x4017e0",
            "funcEndAddr": "0x401c89",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    void* r12 = nullptr;\n    int32_t rbp = argc;\n    char** rbx_1 = argv;\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rcx = sub_403240(*argv);\n    int64_t var_38;\n    int32_t rbx;\n    setlocale(6, &data_409084[0x1b], rdx, rcx, r8, r9, var_38, rbx);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    sub_407200(sub_403160);\n    data_6162f0 = 0;\n    data_6162f1 = 0;\n    data_6162f2 = 0;\n    data_6162f3 = 0;\n    data_6162e0 = 0x4b;\n    data_6162e8 = 0x40909f;\n    data_6162dc = 0;\n    data_6162d8 = 0;\n    data_6162d4 = 0;\n    if (rbp > 1)\n    {\n        char* rax_1 = rbx_1[1];\n        if ((*rax_1 == 0x2d && (rax_1[1] - 0x30) <= 9))\n        {\n            r12 = &rax_1[1];\n            char* rax_9 = *rbx_1;\n            rbp = (rbp - 1);\n            rbx_1 = &rbx_1[1];\n            *rbx_1 = rax_9;\n        }\n    }\n    int64_t r13 = 0;\n    while (true)\n    {\n        int32_t rax_2 = getopt_long(rbp, rbx_1, \"0123456789cstuw:p:g:\", &data_407980, nullptr);\n        if (rax_2 == 0xffffffff)\n        {\n            break;\n        }\n        bool cond:0_1 = rax_2 <= 0x70;\n        if (rax_2 != 0x70)\n        {\n            if (cond:0_1)\n            {\n                bool cond:2_1 = rax_2 <= 0xffffff7e;\n                if (rax_2 == 0xffffff7e)\n                {\n                    sub_402dc0(0);\n                    /* no return */\n                }\n                if (cond:2_1)\n                {\n                    if (rax_2 == 0xffffff7d)\n                    {\n                        sub_4052e0(stdout, &data_40728f, \"GNU coreutils\", data_60b1f0);\n                        exit(0);\n                        /* no return */\n                    }\n                }\n                else if (rax_2 == 0x63)\n                {\n                    data_6162f3 = 1;\n                    continue;\n                }\n                else if (rax_2 == 0x67)\n                {\n                    r13 = data_6164a0;\n                    continue;\n                }\n            }\n            else\n            {\n                bool cond:3_1 = rax_2 <= 0x74;\n                if (rax_2 == 0x74)\n                {\n                    data_6162f2 = 1;\n                    continue;\n                }\n                else if (cond:3_1)\n                {\n                    if (rax_2 == 0x73)\n                    {\n                        data_6162f1 = 1;\n                        continue;\n                    }\n                }\n                else if (rax_2 == 0x75)\n                {\n                    data_6162f0 = 1;\n                    continue;\n                }\n                else if (rax_2 == 0x77)\n                {\n                    r12 = data_6164a0;\n                    continue;\n                }\n            }\n            if ((rax_2 - 0x30) <= 9)\n            {\n                error(0, 0, dcgettext(nullptr, \"invalid option -- %c; -WIDTH is \u2026\", 5), rax_2);\n            }\n            sub_402dc0(1);\n            /* no return */\n        }\n        int64_t r15_2 = data_6164a0;\n        data_6162d8 = 0;\n        if (*r15_2 == 0x20)\n        {\n            int32_t rdx_1 = (1 - r15_2);\n            int32_t rax_4;\n            do\n            {\n                rax_4 = (rdx_1 + r15_2);\n                r15_2 = (r15_2 + 1);\n            } while (*r15_2 == 0x20);\n            data_6162d8 = rax_4;\n        }\n        data_6162e8 = r15_2;\n        int32_t rax_5 = strlen(r15_2);\n        data_6162dc = rax_5;\n        int64_t rax_7 = (rax_5 + r15_2);\n        if (r15_2 < rax_7)\n        {\n            while (*(rax_7 - 1) == 0x20)\n            {\n                rax_7 = (rax_7 - 1);\n                if (r15_2 == rax_7)\n                {\n                    break;\n                }\n            }\n        }\n        *rax_7 = 0;\n        data_6162d4 = (rax_7 - r15_2);\n    }\n    if (r12 != 0)\n    {\n        int32_t rax_11 = sub_405780(r12, 0, 0x9c4, &data_409084[0x1b], dcgettext(nullptr, \"invalid width\", 5), 0);\n        data_6162e0 = rax_11;\n        if (r13 != 0)\n        {\n            data_6162d0 = sub_405780(r13, 0, rax_11, &data_409084[0x1b], dcgettext(nullptr, \"invalid width\", 5), 0);\n        }\n    }\n    if ((r12 == 0 && r13 != 0))\n    {\n        int32_t rax_30 = sub_405780(r13, 0, 0x4b, &data_409084[0x1b], dcgettext(nullptr, \"invalid width\", 5), 0);\n        data_6162d0 = rax_30;\n        data_6162e0 = (rax_30 + 0xa);\n    }\n    if (((r12 == 0 && r13 == 0) || (r12 != 0 && r13 == 0)))\n    {\n        int32_t temp2_1;\n        int32_t temp3_1;\n        temp2_1 = HIGHW((data_6162e0 * 0xbb));\n        temp3_1 = LOWW((data_6162e0 * 0xbb));\n        data_6162d0 = (COMBINE(temp2_1, temp3_1) / 0xc8);\n    }\n    int32_t rax_15 = data_60b25c;\n    bool c = rax_15 < rbp;\n    bool z = rax_15 == rbp;\n    bool s = (rax_15 - rbp) < 0;\n    bool o = (rax_15 + (-rbp));\n    char r12_2;\n    if (z)\n    {\n        r12_2 = 1;\n        sub_402850(stdin);\n    }\n    else\n    {\n        r12_2 = 1;\n        if (s != o)\n        {\n            do\n            {\n                int64_t rcx_2 = 2;\n                void* const rdi_7 = &data_409082;\n                uint64_t r14_1 = rbx_1[rax_15];\n                uint64_t rsi_1 = r14_1;\n                while (rcx_2 != 0)\n                {\n                    char temp8_1 = *rsi_1;\n                    char temp9_1 = *rdi_7;\n                    c = temp8_1 < temp9_1;\n                    z = temp8_1 == temp9_1;\n                    rsi_1 = (rsi_1 + 1);\n                    rdi_7 = (rdi_7 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z))\n                    {\n                        break;\n                    }\n                }\n                int64_t rax_16;\n                rax_16 = ((!z) && (!c));\n                rax_16 = (rax_16 - 0);\n                if (rax_16 == 0)\n                {\n                    sub_402850(stdin);\n                }\n                else\n                {\n                    FILE* rax_17 = fopen(r14_1, \"r\");\n                    int32_t rax_18;\n                    int32_t* rax_21;\n                    char* rcx_3;\n                    char* rdx_6;\n                    if (rax_17 == 0)\n                    {\n                        char* rax_24 = sub_404c10(4, r14_1);\n                        char* rax_25 = dcgettext(nullptr, \"cannot open %s for reading\", 5);\n                        rax_21 = __errno_location();\n                        rcx_3 = rax_24;\n                        rdx_6 = rax_25;\n                    }\n                    else\n                    {\n                        sub_402850(rax_17);\n                        rax_18 = sub_405bf0(rax_17);\n                        if (rax_18 == 0xffffffff)\n                        {\n                            char* rax_20 = sub_404ce0(0, 3, r14_1);\n                            rax_21 = __errno_location();\n                            rcx_3 = rax_20;\n                            rdx_6 = \"%s\";\n                        }\n                    }\n                    if ((rax_17 == 0 || (rax_17 != 0 && rax_18 == 0xffffffff)))\n                    {\n                        r12_2 = 0;\n                        error(0, *rax_21, rdx_6, rcx_3);\n                    }\n                }\n                rax_15 = (data_60b25c + 1);\n                data_60b25c = rax_15;\n                c = rax_15 < rbp;\n                z = rax_15 == rbp;\n            } while ((rax_15 - rbp) < 0 != (rax_15 + (-rbp)));\n        }\n    }\n    return (r12_2 ^ 1);\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x401c90",
            "funcEndAddr": "0x401cba",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_401cbb",
            "funcStartAddr": "0x401cbb",
            "funcEndAddr": "0x401cda",
            "decompiledFuncCode": "void sub_401cbb()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_401cda",
            "funcStartAddr": "0x401cda",
            "funcEndAddr": "0x401d11",
            "decompiledFuncCode": "int64_t sub_401cda()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_401d11",
            "funcStartAddr": "0x401d11",
            "funcEndAddr": "0x401d68",
            "decompiledFuncCode": "void sub_401d11()\n{\n    if (data_60b288 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_60b290;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_60b290 = (rax_1 + 1);\n        *(0x60ae40 + ((rax_1 + 1) << 3))();\n    }\n    sub_401cbb();\n    data_60b288 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_401d68",
            "funcStartAddr": "0x401d68",
            "funcEndAddr": "0x401d6d",
            "decompiledFuncCode": "int64_t j_sub_401cda()\n{\n    /* tailcall */\n    return sub_401cda();\n}\n\n"
        },
        {
            "funcName": "sub_401d70",
            "funcStartAddr": "0x401d70",
            "funcEndAddr": "0x401f73",
            "decompiledFuncCode": "uint64_t sub_401d70()\n{\n    void* rsi = data_60b2c0;\n    int32_t r8 = data_6162e0;\n    void* rcx = (rsi - 0x28);\n    int32_t rax = *(rsi + 8);\n    *(rsi + 0x18) = 0;\n    *(rsi + 8) = r8;\n    if (rcx >= 0x60b2e0)\n    {\n        int32_t r12_1 = data_60b2ac;\n        int32_t rbp_1 = data_60b2b0;\n        int32_t r9_1 = data_6162d0;\n        int32_t r10_1 = data_60b2a0;\n        do\n        {\n            int32_t r15_1 = r12_1;\n            void* rdx_1 = rcx;\n            int64_t rdi_1 = 0x7fffffffffffffff;\n            if (rcx == 0x60b2e0)\n            {\n                r15_1 = rbp_1;\n            }\n            int32_t r11_1 = *(rcx + 8);\n            int32_t r15_2 = (r15_1 + r11_1);\n            do\n            {\n                rdx_1 = (rdx_1 + 0x28);\n                int64_t rax_9;\n                if (rsi == rdx_1)\n                {\n                    rax_9 = 0;\n                }\n                else\n                {\n                    uint32_t rax_6 = ((r9_1 - r15_2) * 5);\n                    int64_t rax_8 = (rax_6 + rax_6);\n                    rax_9 = (rax_8 * rax_8);\n                    if (rsi != *(rdx_1 + 0x20))\n                    {\n                        uint32_t r14_3 = ((r15_2 - *(rdx_1 + 0x14)) * 5);\n                        int64_t r14_5 = (r14_3 + r14_3);\n                        rax_9 = (rax_9 + ((r14_5 * r14_5) >> 1));\n                    }\n                }\n                int64_t rax_1 = (rax_9 + *(rdx_1 + 0x18));\n                if ((rcx == 0x60b2e0 && r10_1 > 0))\n                {\n                    uint32_t r14_10 = ((r15_2 - r10_1) * 5);\n                    int64_t r14_12 = (r14_10 + r14_10);\n                    rax_1 = (rax_1 + ((r14_12 * r14_12) >> 1));\n                }\n                if (rax_1 < rdi_1)\n                {\n                    *(rcx + 0x20) = rdx_1;\n                    rdi_1 = rax_1;\n                    *(rcx + 0x14) = r15_2;\n                }\n                if (rsi == rdx_1)\n                {\n                    break;\n                }\n                r15_2 = (r15_2 + (*(rdx_1 + 8) + *(rdx_1 - 0x1c)));\n            } while (r8 > r15_2);\n            int64_t r14_15 = 0x1324;\n            if (rcx > 0x60b2e0)\n            {\n                char rax_10 = *(rcx - 0x18);\n                if ((rax_10 & 2) != 0)\n                {\n                    r14_15 = (((0x1324 - 0x1324) & 0x58804) + 0x960);\n                }\n                else\n                {\n                    r14_15 = 0xce4;\n                    if ((rax_10 & 4) == 0)\n                    {\n                        r14_15 = 0x1324;\n                        if ((rcx > 0x60b308 && (*(rcx - 0x40) & 8) != 0))\n                        {\n                            int64_t rax_17;\n                            int64_t rdx_4;\n                            rdx_4 = HIGHD(0x9c40);\n                            rax_17 = LOWD(0x9c40);\n                            r14_15 = ((COMBINE(rdx_4, rax_17) / (*(rcx - 0x20) + 2)) + 0x1324);\n                        }\n                    }\n                }\n            }\n            char rax_12 = *(rcx + 0x10);\n            if ((rax_12 & 1) != 0)\n            {\n                r14_15 = (r14_15 - 0x640);\n            }\n            else if ((rax_12 & 8) != 0)\n            {\n                int64_t rax_14;\n                int64_t rdx_2;\n                rdx_2 = HIGHD(0x57e4);\n                rax_14 = LOWD(0x57e4);\n                r14_15 = (r14_15 + (COMBINE(rdx_2, rax_14) / (r11_1 + 2)));\n            }\n            rcx = (rcx - 0x28);\n            *(rcx + 0x40) = (rdi_1 + r14_15);\n        } while (rcx >= 0x60b2e0);\n    }\n    uint64_t rax_13 = rax;\n    *(rsi + 8) = rax_13;\n    return rax_13;\n}\n\n"
        },
        {
            "funcName": "sub_401f80",
            "funcStartAddr": "0x401f80",
            "funcEndAddr": "0x401ff2",
            "decompiledFuncCode": "uint64_t sub_401f80(FILE* arg1, int32_t arg2)\n{\n    uint64_t rax = arg2;\n    while (true)\n    {\n        char* rax_4;\n        if (rax == 0x20)\n        {\n            data_6162cc = (data_6162cc + 1);\n            rax_4 = arg1->_IO_read_ptr;\n        }\n        if ((rax != 0x20 && rax != 9))\n        {\n            break;\n        }\n        if (rax == 9)\n        {\n            int32_t rdx_1 = data_6162cc;\n            data_60b2b8 = 1;\n            int32_t rax_1 = (rdx_1 + 7);\n            if (rdx_1 >= 0)\n            {\n                rax_1 = rdx_1;\n            }\n            data_6162cc = (((rax_1 >> 3) << 3) + 8);\n            rax_4 = arg1->_IO_read_ptr;\n        }\n        if (((rax == 0x20 && rax_4 < arg1->_IO_read_end) || (rax == 9 && rax_4 < arg1->_IO_read_end)))\n        {\n            arg1->_IO_read_ptr = &rax_4[1];\n            rax = *rax_4;\n            continue;\n        }\n        if (((rax == 0x20 && rax_4 >= arg1->_IO_read_end) || (rax == 9 && rax_4 >= arg1->_IO_read_end)))\n        {\n            rax = __uflow(arg1);\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_402000",
            "funcStartAddr": "0x402000",
            "funcEndAddr": "0x4020ec",
            "decompiledFuncCode": "uint64_t sub_402000(FILE* arg1)\n{\n    char* rax = arg1->_IO_read_ptr;\n    data_6162cc = 0;\n    uint32_t rsi;\n    if (rax >= arg1->_IO_read_end)\n    {\n        rsi = __uflow(arg1);\n    }\n    else\n    {\n        arg1->_IO_read_ptr = &rax[1];\n        rsi = *rax;\n    }\n    uint64_t rax_1 = sub_401f80(arg1, rsi);\n    if (data_6162d4 != 0)\n    {\n        int64_t rbp_1 = data_6162e8;\n        int32_t rdx_4 = data_6162cc;\n        uint32_t rcx_1 = *rbp_1;\n        data_60b2a4 = rdx_4;\n        if ((rcx_1 != 0 && rax_1 == rcx_1))\n        {\n            while (true)\n            {\n                char* rax_2 = arg1->_IO_read_ptr;\n                data_6162cc = (rdx_4 + 1);\n                uint32_t rdx_6;\n                if (rax_2 < arg1->_IO_read_end)\n                {\n                    rbp_1 = (rbp_1 + 1);\n                    arg1->_IO_read_ptr = &rax_2[1];\n                    rdx_6 = *rbp_1;\n                    rax_1 = *rax_2;\n                    if (rdx_6 == 0)\n                    {\n                        break;\n                    }\n                }\n                else\n                {\n                    rbp_1 = (rbp_1 + 1);\n                    rax_1 = __uflow(arg1);\n                    rdx_6 = *rbp_1;\n                    if (rdx_6 == 0)\n                    {\n                        break;\n                    }\n                }\n                if (rdx_6 != rax_1)\n                {\n                    return rax_1;\n                }\n                rdx_4 = data_6162cc;\n            }\n        }\n        if ((rcx_1 == 0 || (rcx_1 != 0 && rax_1 == rcx_1)))\n        {\n            /* tailcall */\n            return sub_401f80(arg1, rax_1);\n        }\n    }\n    else\n    {\n        int32_t rdx_3 = data_6162d8;\n        if (data_6162cc <= rdx_3)\n        {\n            rdx_3 = data_6162cc;\n        }\n        data_60b2a4 = rdx_3;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4020f0",
            "funcStartAddr": "0x4020f0",
            "funcEndAddr": "0x4021cf",
            "decompiledFuncCode": "void sub_4020f0(int32_t arg1)\n{\n    int32_t rdx = data_6162c8;\n    int32_t rbx = (rdx + arg1);\n    uint64_t rax;\n    if (data_60b2b8 != 0)\n    {\n        int32_t rbp_1 = (rbx + 7);\n        int32_t rcx_1 = (rdx + 1);\n        if (rbx >= 0)\n        {\n            rbp_1 = rbx;\n        }\n        uint64_t rbp_2 = (rbp_1 >> 3);\n        rax = (rbp_2 << 3);\n        if ((rcx_1 < rax && rdx < rax))\n        {\n            do\n            {\n                uint64_t* const rdi = stdout;\n                char* rax_1 = stdout[5];\n                if (rax_1 >= stdout[6])\n                {\n                    __overflow(rdi, 9);\n                }\n                else\n                {\n                    stdout[5] = &rax_1[1];\n                    *rax_1 = 9;\n                }\n                int32_t rdx_2 = data_6162c8;\n                int32_t rax_2 = (rdx_2 + 7);\n                if (rdx_2 >= 0)\n                {\n                    rax_2 = rdx_2;\n                }\n                rax = ((rax_2 >> 3) + 1);\n                rdx = (rax << 3);\n                data_6162c8 = rdx;\n            } while (rbp_2 > rax);\n        }\n    }\n    if (rbx > rdx)\n    {\n        do\n        {\n            uint64_t* const rdi_1 = stdout;\n            char* rax_4 = stdout[5];\n            if (rax_4 >= stdout[6])\n            {\n                __overflow(rdi_1, 0x20);\n            }\n            else\n            {\n                stdout[5] = &rax_4[1];\n                *rax_4 = 0x20;\n            }\n            rax = (data_6162c8 + 1);\n            data_6162c8 = rax;\n        } while (rax < rbx);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4021d0",
            "funcStartAddr": "0x4021d0",
            "funcEndAddr": "0x402257",
            "decompiledFuncCode": "uint64_t sub_4021d0(char arg1)\n{\n    if (data_6162f1 != 0)\n    {\n        uint64_t rax = data_60b2b0;\n        data_60b2ac = rax;\n        return rax;\n    }\n    if (data_6162f3 == 0)\n    {\n        uint64_t rax_2 = data_60b2b0;\n        if (data_6162f2 == 0)\n        {\n            data_60b2ac = rax_2;\n        }\n        else\n        {\n            if (arg1 != 0)\n            {\n                int32_t rdx_1 = data_6162cc;\n                if (rdx_1 != rax_2)\n                {\n                    data_60b2ac = rdx_1;\n                    return rax_2;\n                }\n            }\n            if (data_60b2ac == rax_2)\n            {\n                uint64_t rax_4 = ((rax_2 - rax_2) & 3);\n                data_60b2ac = rax_4;\n                return rax_4;\n            }\n        }\n        return rax_2;\n    }\n    uint64_t rax_1 = data_6162cc;\n    if (arg1 == 0)\n    {\n        rax_1 = data_60b2b0;\n    }\n    data_60b2ac = rax_1;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_402260",
            "funcStartAddr": "0x402260",
            "funcEndAddr": "0x4022d7",
            "decompiledFuncCode": "uint64_t sub_402260(void* arg1, int32_t* arg2)\n{\n    uint64_t rax_3 = *arg2;\n    if (rax_3 == 0)\n    {\n        data_6162c8 = (data_6162c8 + rax_3);\n        return rax_3;\n    }\n    void* rbp = ((arg1 + (rax_3 - 1)) + 1);\n    void* rbx = arg1;\n    do\n    {\n        uint64_t* const rdi = stdout;\n        rbx = (rbx + 1);\n        int32_t rsi = *(rbx - 1);\n        char* rax_1 = stdout[5];\n        if (rax_1 >= stdout[6])\n        {\n            __overflow(rdi, rsi);\n        }\n        else\n        {\n            stdout[5] = &rax_1[1];\n            *rax_1 = rsi;\n        }\n    } while (rbx != rbp);\n    uint64_t rax_2 = *arg2;\n    data_6162c8 = (data_6162c8 + rax_2);\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_4022e0",
            "funcStartAddr": "0x4022e0",
            "funcEndAddr": "0x4023cc",
            "decompiledFuncCode": "char* sub_4022e0(void* arg1, int32_t arg2)\n{\n    int32_t rdi = data_60b2b4;\n    data_6162c8 = 0;\n    sub_4020f0(rdi);\n    fputs_unlocked(data_6162e8, stdout);\n    int32_t rax_1 = (data_6162d4 + data_6162c8);\n    data_6162c8 = rax_1;\n    sub_4020f0((arg2 - rax_1));\n    void* r12 = *(arg1 + 0x20);\n    void* rbp = (r12 - 0x28);\n    if (arg1 != rbp)\n    {\n        void* rbx_2 = arg1;\n        do\n        {\n            void* rdi_3 = *rbx_2;\n            void* rsi_1 = (rbx_2 + 8);\n            rbx_2 = (rbx_2 + 0x28);\n            sub_402260(rdi_3, rsi_1);\n            sub_4020f0(*(rbx_2 - 0x1c));\n        } while (rbp != rbx_2);\n        rbp = ((arg1 + ((((r12 - arg1) - 0x50) >> 3) << 3)) + 0x28);\n    }\n    sub_402260(*rbp, (rbp + 8));\n    uint64_t* const rdi_6 = stdout;\n    data_60b2a0 = data_6162c8;\n    char* rax_3 = stdout[5];\n    if (rax_3 >= stdout[6])\n    {\n        /* tailcall */\n        return __overflow(rdi_6, 0xa);\n    }\n    stdout[5] = &rax_3[1];\n    *rax_3 = 0xa;\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_4023d0",
            "funcStartAddr": "0x4023d0",
            "funcEndAddr": "0x402416",
            "decompiledFuncCode": "char* sub_4023d0(int64_t arg1)\n{\n    char* rax = sub_4022e0(&data_60b2e0, data_60b2b0);\n    void* rbx = data_60b300;\n    if (rbx != arg1)\n    {\n        do\n        {\n            rax = sub_4022e0(rbx, data_60b2ac);\n            rbx = *(rbx + 0x20);\n        } while (arg1 != rbx);\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_402420",
            "funcStartAddr": "0x402420",
            "funcEndAddr": "0x402598",
            "decompiledFuncCode": "uint64_t sub_402420()\n{\n    int64_t rbp = data_60b2c0;\n    if (rbp == 0x60b2e0)\n    {\n        uint64_t rax_7 = fwrite_unlocked(&data_614f40, 1, (data_614f20 - 0x614f40), stdout);\n        data_614f20 = 0x614f40;\n        return rax_7;\n    }\n    sub_401d70();\n    int64_t rcx = data_60b300;\n    int64_t rbx;\n    if (rbp == rcx)\n    {\n        rbx = rbp;\n    }\n    else\n    {\n        int64_t rdx_1 = *(rcx + 0x18);\n        rbx = rbp;\n        int64_t rax_1 = 0x7fffffffffffffff;\n        int64_t rdi_1;\n        do\n        {\n            rdi_1 = *(rcx + 0x20);\n            int64_t rsi_1 = *(rdi_1 + 0x18);\n            int64_t rdx_2 = (rdx_1 - rsi_1);\n            if (rdx_2 < rax_1)\n            {\n                rax_1 = rdx_2;\n                rbx = rcx;\n            }\n            int64_t rdx_3 = (rax_1 + 9);\n            rcx = rdi_1;\n            if (rax_1 <= 0x7ffffffffffffff6)\n            {\n                rax_1 = rdx_3;\n            }\n            rdx_1 = rsi_1;\n        } while (rbp != rdi_1);\n    }\n    sub_4023d0(rbx);\n    int64_t rbp_1 = data_614f20;\n    int64_t rsi_2 = *rbx;\n    __memmove_chk(&data_614f40, rsi_2, (rbp_1 - rsi_2), 0x1388);\n    int64_t rdx_6 = *rbx;\n    int64_t rcx_4 = (-(rdx_6 - 0x614f40));\n    data_614f20 = (rbp_1 + rcx_4);\n    int64_t rbp_3 = data_60b2c0;\n    if (rbx <= rbp_3)\n    {\n        int64_t rax_2 = rbx;\n        while (true)\n        {\n            rax_2 = (rax_2 + 0x28);\n            *(rax_2 - 0x28) = (rdx_6 + rcx_4);\n            if (rax_2 > rbp_3)\n            {\n                break;\n            }\n            rdx_6 = *rax_2;\n        }\n    }\n    int64_t rax_6 = __memmove_chk(&data_60b2e0, rbx, ((((rbp_3 - rbx) >> 3) << 3) + 0x28), 0x9c40);\n    data_60b2c0 = (rbp_3 - (rbx - 0x60b2e0));\n    return rax_6;\n}\n\n"
        },
        {
            "funcName": "sub_4025a0",
            "funcStartAddr": "0x4025a0",
            "funcEndAddr": "0x40284e",
            "decompiledFuncCode": "int64_t sub_4025a0(FILE* arg1, uint32_t arg2)\n{\n    uint32_t r14 = arg2;\n    uint16_t** rax = __ctype_b_loc();\n    int64_t rcx = data_60b2c0;\n    while (true)\n    {\n        int64_t rax_1 = data_614f20;\n        *rcx = rax_1;\n        uint16_t* r8_1;\n        do\n        {\n            if (rax_1 == 0x6162c8)\n            {\n                sub_4021d0(1);\n                sub_402420();\n                rax_1 = data_614f20;\n            }\n            int64_t rcx_1 = (rax_1 + 1);\n            *rax_1 = r14;\n            char* rax_2 = arg1->_IO_read_ptr;\n            data_614f20 = rcx_1;\n            if (rax_2 < arg1->_IO_read_end)\n            {\n                arg1->_IO_read_ptr = &rax_2[1];\n                r14 = *rax_2;\n                rax_1 = rcx_1;\n            }\n            else\n            {\n                r14 = __uflow(arg1);\n                rax_1 = data_614f20;\n                if (r14 == 0xffffffff)\n                {\n                    r8_1 = *rax;\n                    break;\n                }\n            }\n            r8_1 = *rax;\n        } while ((*(&r8_1[r14] + 1) & 0x20) == 0);\n        int64_t rdx_2 = data_60b2c0;\n        int32_t rdi_1 = data_6162cc;\n        char* rbp_1 = *rdx_2;\n        int32_t rax_4 = (rax_1 - rbp_1);\n        *(rdx_2 + 8) = rax_4;\n        int32_t rdi_2 = (rdi_1 + rax_4);\n        int32_t rsi = *rbp_1;\n        void* r13_1 = &rbp_1[(rax_4 - 1)];\n        data_6162cc = rdi_2;\n        char rax_7 = *(rdx_2 + 0x10);\n        char var_41_1 = rax_7;\n        *(rdx_2 + 0x10) = (((rax_7 & 0xfa) | strchr(\"(['`\"\", rsi) != 0) | (4 & r8_1[*r13_1]));\n        int32_t r15_2;\n        if (rbp_1 >= r13_1)\n        {\n            r15_2 = *r13_1;\n        }\n        else\n        {\n            while (true)\n            {\n                r15_2 = *r13_1;\n                if (strchr(\")]'\"\", r15_2) == 0)\n                {\n                    break;\n                }\n                void* rax_11 = (r13_1 - 1);\n                if (rbp_1 == rax_11)\n                {\n                    r15_2 = *(r13_1 - 1);\n                    break;\n                }\n                r13_1 = rax_11;\n            }\n        }\n        char* rax_13;\n        rax_13 = strchr(&data_40726f, r15_2) != 0;\n        char rax_14 = *(rdx_2 + 0x10);\n        int64_t var_50_1;\n        var_50_1 = rax_14;\n        *(rdx_2 + 0x10) = ((rax_14 & 0xfd) | (rax_13 + rax_13));\n        int32_t rcx_5 = (data_6162cc - rdi_2);\n        r14 = sub_401f80(arg1, r14);\n        int64_t rax_18 = data_60b2c0;\n        *(rax_18 + 0xc) = rcx_5;\n        if (r14 != 0xffffffff)\n        {\n            char rsi_6 = *(rax_18 + 0x10);\n            int64_t rcx_6;\n            if ((rsi_6 & 2) == 0)\n            {\n                rcx_6 = 0;\n            label_40277c:\n                *(rax_18 + 0x10) = ((*(rax_18 + 0x10) & 0xf7) | (rcx_6 << 3));\n                if (r14 == 0xa)\n                {\n                    goto label_4027ba;\n                }\n            }\n            else\n            {\n                if ((rcx_5 > 1 || (rcx_5 <= 1 && r14 == 0xa)))\n                {\n                    rcx_6 = 1;\n                    goto label_40277c;\n                }\n                if ((rcx_5 <= 1 && r14 != 0xa))\n                {\n                    *(rax_18 + 0x10) = (rsi_6 & 0xf7);\n                }\n            }\n            if (data_6162f0 != 0)\n            {\n                goto label_4027ba;\n            }\n            if (rax_18 != 0x614ed0)\n            {\n                rcx = (rax_18 + 0x28);\n                data_60b2c0 = rcx;\n                continue;\n            }\n            goto label_402825;\n        }\n        *(rax_18 + 0x10) = (*(rax_18 + 0x10) | 8);\n    label_4027ba:\n        int32_t rcx_10;\n        rcx_10 = (*(rax_18 + 0x10) & 8) != 0;\n        *(rax_18 + 0xc) = (rcx_10 + 1);\n        if (rax_18 == 0x614ed0)\n        {\n        label_402825:\n            sub_4021d0(1);\n            sub_402420();\n            rax_18 = data_60b2c0;\n        }\n        rcx = (rax_18 + 0x28);\n        data_60b2c0 = rcx;\n        if (r14 == 0xa)\n        {\n            break;\n        }\n        if (r14 == 0xffffffff)\n        {\n            break;\n        }\n        if ((!(r14 != 0xa && r14 != 0xffffffff)))\n        {\n            /* nop */\n        }\n    }\n    /* tailcall */\n    return sub_402000(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_402850",
            "funcStartAddr": "0x402850",
            "funcEndAddr": "0x402db1",
            "decompiledFuncCode": "uint64_t sub_402850(FILE* arg1)\n{\n    uint64_t r12;\n    uint64_t var_10 = r12;\n    sub_403210(arg1, 2);\n    data_60b2b8 = 0;\n    data_60b2ac = 0;\n    uint32_t rax;\n    int32_t rdx;\n    rax = sub_402000(arg1);\n    data_60b2a8 = rax;\n    uint32_t rbx = rax;\n    while (true)\n    {\n        data_60b2a0 = 0;\n        int32_t rcx_2;\n        uint32_t rsi_4;\n        char rdi_10;\n        int32_t r8_1;\n        while (true)\n        {\n            int32_t rdi_1 = data_60b2a4;\n            uint64_t rax_1 = data_6162cc;\n            int32_t rdx_3;\n            uint32_t rsi_1;\n            int32_t rdi_8;\n            int64_t r13_1;\n            if ((rbx == 0xa || rbx == 0xffffffff))\n            {\n                data_6162c8 = 0;\n                r12 = rbx != 0xffffffff;\n                rdx = rbx != 0xa;\n                r12 = (r12 & rdx);\n                if ((rax_1 <= rdi_1 && r12 != 0))\n                {\n                label_402aa8:\n                    sub_4020f0(rdi_1);\n                    rax_1 = data_6162c8;\n                    rdx_3 = data_6162cc;\n                    r13_1 = data_6162e8;\n                    if (rax_1 != rdx_3)\n                    {\n                        rsi_1 = *r13_1;\n                        r12 = 1;\n                        if (rsi_1 != 0)\n                        {\n                            goto label_402938;\n                        }\n                        goto label_402ae2;\n                    }\n                    rdi_8 = 0;\n                label_402ae4:\n                    rax_1 = sub_4020f0(rdi_8);\n                }\n            }\n            if ((rbx != 0xa && rbx != 0xffffffff))\n            {\n                if ((data_6162d8 <= rdi_1 && (data_6162dc + rdi_1) <= rax_1))\n                {\n                    data_60b2b4 = rdi_1;\n                    data_60b2b0 = rax_1;\n                    data_614f20 = 0x614f40;\n                    data_60b2c0 = 0x60b2e0;\n                    rcx_2 = data_60b2a4;\n                    r8_1 = data_60b2b4;\n                    rdi_10 = 0;\n                    rsi_4 = sub_4025a0(arg1, rbx);\n                    break;\n                }\n                data_6162c8 = 0;\n                if (rax_1 <= rdi_1)\n                {\n                    goto label_402aa8;\n                }\n                r12 = 1;\n            }\n            if ((((rbx == 0xa || rbx == 0xffffffff) && rax_1 > rdi_1) || (rbx != 0xa && rbx != 0xffffffff)))\n            {\n                sub_4020f0(rdi_1);\n                rax_1 = data_6162c8;\n                rdx_3 = data_6162cc;\n                r13_1 = data_6162e8;\n                if (rdx_3 != rax_1)\n                {\n                    do\n                    {\n                        rsi_1 = *r13_1;\n                        if (rsi_1 == 0)\n                        {\n                            break;\n                        }\n                    label_402938:\n                        FILE* rdi_2 = stdout;\n                        r13_1 = (r13_1 + 1);\n                        char* rax_3 = stdout[5];\n                        if (rax_3 < stdout[6])\n                        {\n                            stdout[5] = &rax_3[1];\n                            *rax_3 = rsi_1;\n                        }\n                        else\n                        {\n                            __overflow(rdi_2, rsi_1);\n                            rdx_3 = data_6162cc;\n                        }\n                        rax_1 = (data_6162c8 + 1);\n                        data_6162c8 = rax_1;\n                    } while (rax_1 != rdx_3);\n                }\n                if (r12 != 0)\n                {\n                label_402ae2:\n                    rdi_8 = (rdx_3 - rax_1);\n                    goto label_402ae4;\n                }\n            }\n            if ((((((rbx == 0xa || rbx == 0xffffffff) && rax_1 > rdi_1) || (rbx != 0xa && rbx != 0xffffffff)) || (((rbx == 0xa || rbx == 0xffffffff) && rax_1 <= rdi_1) && r12 != 0)) && rbx != 0xffffffff))\n            {\n                for (; rbx != 0xa; rbx = *rax_1)\n                {\n                    while (rbx != 0xffffffff)\n                    {\n                        FILE* rdi_3 = stdout;\n                        char* rax_4 = stdout[5];\n                        if (rax_4 < stdout[6])\n                        {\n                            stdout[5] = &rax_4[1];\n                            *rax_4 = rbx;\n                            rax_1 = arg1->_IO_read_ptr;\n                            if (rax_1 < arg1->_IO_read_end)\n                            {\n                                break;\n                            }\n                        }\n                        else\n                        {\n                            __overflow(rdi_3, rbx);\n                            rax_1 = arg1->_IO_read_ptr;\n                            if (rax_1 < arg1->_IO_read_end)\n                            {\n                                break;\n                            }\n                        }\n                        rax_1 = __uflow(arg1);\n                        rbx = rax_1;\n                        if (rbx == 0xa)\n                        {\n                            break;\n                        }\n                    }\n                    if (rbx == 0xffffffff)\n                    {\n                        break;\n                    }\n                    arg1->_IO_read_ptr = (rax_1 + 1);\n                }\n            }\n            if (((((rbx == 0xa || rbx == 0xffffffff) && rax_1 <= rdi_1) && r12 == 0) || (((((rbx == 0xa || rbx == 0xffffffff) && rax_1 > rdi_1) || (rbx != 0xa && rbx != 0xffffffff)) || (((rbx == 0xa || rbx == 0xffffffff) && rax_1 <= rdi_1) && r12 != 0)) && rbx != 0xffffffff)))\n            {\n                if (rbx == 0xffffffff)\n                {\n                label_402a24:\n                    data_60b2a8 = 0xffffffff;\n                    return rax_1;\n                }\n                uint64_t* const rdi_5 = stdout;\n                char* rax_5 = stdout[5];\n                if (rax_5 >= stdout[6])\n                {\n                    __overflow(rdi_5, 0xa);\n                }\n                else\n                {\n                    stdout[5] = &rax_5[1];\n                    *rax_5 = 0xa;\n                }\n                uint32_t rax_6;\n                rax_6 = sub_402000(arg1);\n                rbx = rax_6;\n                continue;\n            }\n            if ((((((rbx == 0xa || rbx == 0xffffffff) && rax_1 > rdi_1) || (rbx != 0xa && rbx != 0xffffffff)) || (((rbx == 0xa || rbx == 0xffffffff) && rax_1 <= rdi_1) && r12 != 0)) && rbx == 0xffffffff))\n            {\n                rax_1 = (data_6162d4 + data_60b2a4);\n                if (rax_1 <= data_6162cc)\n                {\n                    FILE* rdi_7 = stdout;\n                    rax_1 = stdout[5];\n                    if (rax_1 >= stdout[6])\n                    {\n                        rax_1 = __overflow(rdi_7, 0xa);\n                    }\n                    else\n                    {\n                        stdout[5] = (rax_1 + 1);\n                        *rax_1 = 0xa;\n                    }\n                }\n                goto label_402a24;\n            }\n        }\n        if ((rcx_2 == r8_1 && (data_6162dc + rcx_2) <= data_6162cc))\n        {\n            int32_t rax_10;\n            rax_10 = rsi_4 != 0xa;\n            rdi_10 = (rsi_4 != 0xffffffff & rax_10);\n        }\n        sub_4021d0(rdi_10);\n        if (data_6162f1 == 0)\n        {\n            if (data_6162f3 == 0)\n            {\n                if (data_6162f2 == 0)\n                {\n                    if (rcx_2 == r8_1)\n                    {\n                        int32_t rax_15 = data_6162cc;\n                        if (((rcx_2 + data_6162dc) <= rax_15 && (rsi_4 != 0xffffffff && (rsi_4 != 0xa && rax_15 == data_60b2ac))))\n                        {\n                            int32_t rdx_10;\n                            do\n                            {\n                                rsi_4 = sub_4025a0(arg1, rsi_4);\n                                int32_t rax_18 = data_60b2a4;\n                                if (rax_18 != data_60b2b4)\n                                {\n                                    break;\n                                }\n                                rdx_10 = data_6162cc;\n                                if ((rax_18 + data_6162dc) > rdx_10)\n                                {\n                                    break;\n                                }\n                                if (rsi_4 == 0xa)\n                                {\n                                    break;\n                                }\n                                if (rsi_4 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                            } while (rdx_10 == data_60b2ac);\n                        }\n                    }\n                }\n                else if (rcx_2 == r8_1)\n                {\n                    int32_t rax_11 = data_6162cc;\n                    if (((rcx_2 + data_6162dc) <= rax_11 && (rsi_4 != 0xa && (rsi_4 != 0xffffffff && rax_11 != data_60b2b0))))\n                    {\n                        int32_t rdx_9;\n                        do\n                        {\n                            rsi_4 = sub_4025a0(arg1, rsi_4);\n                            int32_t rax_14 = data_60b2a4;\n                            if (rax_14 != data_60b2b4)\n                            {\n                                break;\n                            }\n                            rdx_9 = data_6162cc;\n                            if ((rax_14 + data_6162dc) > rdx_9)\n                            {\n                                break;\n                            }\n                            if (rsi_4 == 0xa)\n                            {\n                                break;\n                            }\n                            if (rsi_4 == 0xffffffff)\n                            {\n                                break;\n                            }\n                        } while (rdx_9 == data_60b2ac);\n                    }\n                }\n            }\n            else if ((rcx_2 == r8_1 && ((rcx_2 + data_6162dc) <= data_6162cc && (rsi_4 != 0xa && rsi_4 != 0xffffffff))))\n            {\n                int32_t rdx_11;\n                do\n                {\n                    rsi_4 = sub_4025a0(arg1, rsi_4);\n                    int32_t rax_21 = data_60b2a4;\n                    if (rax_21 != data_60b2b4)\n                    {\n                        break;\n                    }\n                    rdx_11 = data_6162cc;\n                    if ((rax_21 + data_6162dc) > rdx_11)\n                    {\n                        break;\n                    }\n                    if (rsi_4 == 0xa)\n                    {\n                        break;\n                    }\n                    if (rsi_4 == 0xffffffff)\n                    {\n                        break;\n                    }\n                } while (rdx_11 == data_60b2ac);\n            }\n        }\n        int64_t rbx_1 = data_60b2c0;\n        if (rbx_1 <= 0x60b2e0)\n        {\n            break;\n        }\n        *(rbx_1 - 0x18) = (*(rbx_1 - 0x18) | 0xa);\n        data_60b2a8 = rsi_4;\n        sub_401d70();\n        sub_4023d0(rbx_1);\n        rbx = data_60b2a8;\n    }\n    __assert_fail(\"word < word_limit\", \"src/fmt.c\", 0x25e, \"get_paragraph\");\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_402dc0",
            "funcStartAddr": "0x402dc0",
            "funcEndAddr": "0x40313d",
            "decompiledFuncCode": "int64_t sub_402dc0(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_616308;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [-WIDTH] [OPTION]... [\u2026\", 5), rbp);\n        fputs_unlocked(dcgettext(nullptr, \"Reformat each paragraph in the F\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nWith no FILE, or when FILE is \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nMandatory arguments to long op\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -c, --crown-margin        pres\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -t, --tagged-paragraph    inde\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        void* const var_88 = &data_407293;\n        void* const* rax_11 = &var_88;\n        void* const var_78_1 = \"coreutils\";\n        void* const var_70_1 = \"Multi-call invocation\";\n        void* const var_68_1 = \"sha224sum\";\n        void* const var_60_1 = \"sha2 utilities\";\n        void* const var_58_1 = \"sha256sum\";\n        void* const var_50_1 = \"sha2 utilities\";\n        void* const var_48_1 = \"sha384sum\";\n        void* const var_40_1 = \"sha2 utilities\";\n        void* const var_38_1 = \"sha512sum\";\n        void* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_11 = &rax_11[2];\n            void* const rdi_9 = *rax_11;\n            c_1 = false;\n            z_1 = (rdi_9 & rdi_9) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            void* const rsi_9 = &data_40728f;\n            int64_t rcx_2 = 4;\n            while (rcx_2 != 0)\n            {\n                char temp0_1 = *rsi_9;\n                char temp1_1 = *rdi_9;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_9 = (rsi_9 + 1);\n                rdi_9 = (rdi_9 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        void* const rbp_1 = rax_11[1];\n        char* rax_22;\n        int32_t rax_23;\n        void* const r12_1;\n        if (rbp_1 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_5;\n            uint64_t r8_2;\n            ssize_t r9_2;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_22 = setlocale(5, nullptr, rdx_5, rcx_5, r8_2, r9_2, var_88, \"test invocation\");\n            if (rax_22 != 0)\n            {\n                rax_23 = strncmp(rax_22, &data_407317, 3);\n                if (rax_23 != 0)\n                {\n                    rbp_1 = &data_40728f;\n                }\n            }\n            if ((rax_22 == 0 || (rax_22 != 0 && rax_23 == 0)))\n            {\n                rbp_1 = &data_40728f;\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", &data_40728f);\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_3;\n            uint64_t r8_1;\n            ssize_t r9_1;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_14 = setlocale(5, nullptr, rdx_3, rcx_3, r8_1, r9_1, var_88, \"test invocation\");\n            if (rax_14 == 0)\n            {\n                goto label_403030;\n            }\n            if (strncmp(rax_14, &data_407317, 3) == 0)\n            {\n                goto label_403030;\n            }\n        }\n        if ((((rbp_1 == 0 && rax_22 != 0) && rax_23 != 0) || rbp_1 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), &data_40728f);\n        label_403030:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", &data_40728f);\n            if (rbp_1 != &data_40728f)\n            {\n                r12_1 = &data_409084[0x1b];\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_1, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_403140",
            "funcStartAddr": "0x403140",
            "funcEndAddr": "0x403148",
            "decompiledFuncCode": "int64_t sub_403140(int64_t arg1)\n{\n    data_616300 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_403150",
            "funcStartAddr": "0x403150",
            "funcEndAddr": "0x403158",
            "decompiledFuncCode": "int64_t sub_403150(char arg1)\n{\n    data_6162f8 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_403160",
            "funcStartAddr": "0x403160",
            "funcEndAddr": "0x4031fe",
            "decompiledFuncCode": "void sub_403160(void* arg1)\n{\n    int32_t rax = sub_406b60(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_6162f8 == 0 || (data_6162f8 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_616300;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_404cb0(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_6162f8 != 0) && *rax_1 == 0x20)) && sub_406b60(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_60b1f8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_403200",
            "funcStartAddr": "0x403200",
            "funcEndAddr": "0x403205",
            "decompiledFuncCode": "int64_t sub_403200(int32_t arg1, int64_t arg2, off64_t arg3, int32_t arg4)\n{\n    /* tailcall */\n    return posix_fadvise(arg1, arg2, arg3, arg4);\n}\n\n"
        },
        {
            "funcName": "sub_403210",
            "funcStartAddr": "0x403210",
            "funcEndAddr": "0x403231",
            "decompiledFuncCode": "void sub_403210(FILE* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        return;\n    }\n    /* tailcall */\n    return posix_fadvise(fileno(arg1), 0, 0, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_403240",
            "funcStartAddr": "0x403240",
            "funcEndAddr": "0x4032d9",
            "decompiledFuncCode": "char* sub_403240(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_407b18;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_616308 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4032e0",
            "funcStartAddr": "0x4032e0",
            "funcEndAddr": "0x4033d2",
            "decompiledFuncCode": "char* sub_4032e0(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_406c20();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_4033c1:\n                char const* const rbx_1 = \"\"\";\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_4033c1;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_4033c1;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_4033c1;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_4033c1;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_4033c1;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_4033c1;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_4033c1;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_407b23;\n            if (cond:2_1)\n            {\n                rbx = &data_407b20;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_4033c1;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_4033c1;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_4033c1;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_4033c1;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_4033c1;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_407b27;\n            if (cond:1_1)\n            {\n                rbx = &data_407b1c;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_4033e0",
            "funcStartAddr": "0x4017c0",
            "funcEndAddr": "0x404601",
            "decompiledFuncCode": "int64_t sub_4033e0(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    char const* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n    label_403478:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_4037ec:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_403834;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_4033e0(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char const rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_40384b;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_403985;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_4035d5;\n                            }\n                            goto label_4038c0;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_403985;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_4037b0;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_4037b0:\n                            if (var_c0 == 0)\n                            {\n                                goto label_4037bb;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_403617:\n                            if (var_5c == 0)\n                            {\n                                goto label_403628;\n                            }\n                        label_4037e0:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_4037e8;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_403a1b;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_403a1b:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_403a2a:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_4037ec;\n                            }\n                            goto label_4037b0;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_4037b0;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_4037b0;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_403a1b;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_4035b6;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_4035b6:\n                            if (var_5c == 0)\n                            {\n                                goto label_4035d5;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_4035d5;\n                            }\n                            goto label_403a2a;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_4035ad:\n                            if (r12_1 != 0)\n                            {\n                                goto label_4037bb;\n                            }\n                            goto label_4035b6;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_4039e0:\n                            rdx = r11_1 == 2;\n                        label_4035d5:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_4036dc;\n                            }\n                            goto label_4035df;\n                        }\n                        case 0x27:\n                        {\n                            goto label_40375d;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_40372d;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_40378a;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_40451d;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_4036f4;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_403589;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_403b80;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_403b80;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_4044d0:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_403834:\n                            rbx_1 = sub_4033e0(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_40384b:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_403985;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_4038d7;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_403985;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_4038a0:\n                                r13 = 0;\n                                goto label_40365b;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_403628:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_40365b:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_403665;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_403665:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_40366d;\n                            }\n                            case 9:\n                            {\n                                goto label_403850;\n                            }\n                            case 0xa:\n                            {\n                                goto label_4037c8;\n                            }\n                            case 0xb:\n                            {\n                                goto label_4038b0;\n                            }\n                            case 0xc:\n                            {\n                                goto label_403890;\n                            }\n                            case 0xd:\n                            {\n                                goto label_403879;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_403bda;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_403865;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_403bba;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_403ba2;\n                            }\n                            case 0x27:\n                            {\n                                goto label_40375d;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_40372d;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_40378a;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_403589;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_403b80:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_403980:\n                            var_b8 = 0;\n                        label_403985:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_4039d4:\n                                if (rdx == 0)\n                                {\n                                    goto label_4039e0;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_403ed1:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_4036f4;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_4037ec;\n                                }\n                                r13 = var_98;\n                                goto label_40366d;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_406ae0(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_4037ec;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_403ed1;\n                            }\n                            goto label_4039d4;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_4038c0:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_4037ec;\n                                }\n                                var_b8 = 0;\n                            label_4038d7:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_403922;\n                                    }\n                                    rax_8 = r10;\n                                label_40391a:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_403922:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_4036dc;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_403963;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_40391a;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_4036dc;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_403980;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_403895;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_4037cd;\n                            }\n                            case 9:\n                            {\n                            label_403850:\n                                rbp_3 = 0x74;\n                                goto label_4037cd;\n                            }\n                            case 0xa:\n                            {\n                            label_4037c8:\n                                rbp_3 = 0x6e;\n                            label_4037cd:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_4037e0;\n                                }\n                                goto label_403628;\n                            }\n                            case 0xb:\n                            {\n                            label_4038b0:\n                                rbp_3 = 0x76;\n                                goto label_403895;\n                            }\n                            case 0xc:\n                            {\n                            label_403890:\n                                rbp_3 = 0x66;\n                            label_403895:\n                                if (var_5c == 0)\n                                {\n                                    goto label_4038a0;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_4037e8:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_4037ec;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_403879:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_4037b0;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_403bda:\n                                rbp_3 = 0x20;\n                                goto label_403ba2;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_403865:\n                                rdx = 0;\n                            label_4037bb:\n                                r13 = 0;\n                                goto label_4035d5;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_403bba:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_4035d5;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_4035df:\n                                rax_8 = 0;\n                                goto label_4035e1;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_403ba2:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_4035e1;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_40375d:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_4035d5;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_40451d;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_4036dc;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_40372d:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_40451d:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_4037ec;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_4036dc:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_403617;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_4036f4;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_4035d5;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_403cc0:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_4035d5;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_403cc0;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_403cc0;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_403cc0;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_403cc0;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_4044d0;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_403963:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_4036dc;\n                                }\n                            label_4035e1:\n                                if (arg7 == 0)\n                                {\n                                    goto label_4036dc;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_4036dc;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_403617;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_40378a:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_4037b0;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_4036f4:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_40366d;\n                                }\n                            label_40366d:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_403676;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_403676:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_403589:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_4037bb;\n                                }\n                                goto label_4035ad;\n                            }\n                        }\n                    }\n                }\n            }\n        label_403c66:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = \"'\";\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_403478;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = \"'\";\n                goto label_403478;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"'\";\n            goto label_403478;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = \"\"\";\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = \"\"\";\n            }\n            goto label_403478;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"\"\";\n            goto label_403478;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_403478;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_4032e0(&data_407b2b, r13);\n                arg9 = sub_4032e0(\"'\", r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_403478;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_403c66;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n        goto label_403478;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_404610",
            "funcStartAddr": "0x4017c5",
            "funcEndAddr": "0x4047ae",
            "decompiledFuncCode": "char* sub_404610(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_60b238;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_60b250 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_405670();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x60b240)\n        {\n            int64_t rax_9 = sub_405480(0, rsi_1);\n            int128_t zmm0 = data_60b240;\n            rbx = rax_9;\n            data_60b238 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_405480(rbx, rsi_1);\n            data_60b238 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_60b250;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_60b250 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_4033e0(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        uint64_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x616320)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_405420(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_4033e0(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_4047b0",
            "funcStartAddr": "0x4047b0",
            "funcEndAddr": "0x4047e4",
            "decompiledFuncCode": "int64_t sub_4047b0(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x616420;\n    }\n    int64_t rax_1 = sub_405620(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4047f0",
            "funcStartAddr": "0x4047f0",
            "funcEndAddr": "0x4047ff",
            "decompiledFuncCode": "uint64_t sub_4047f0(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_616420;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_404800",
            "funcStartAddr": "0x404800",
            "funcEndAddr": "0x40480f",
            "decompiledFuncCode": "void sub_404800(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_616420;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_404810",
            "funcStartAddr": "0x404810",
            "funcEndAddr": "0x404843",
            "decompiledFuncCode": "uint64_t sub_404810(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x616420;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_404850",
            "funcStartAddr": "0x404850",
            "funcEndAddr": "0x404863",
            "decompiledFuncCode": "uint64_t sub_404850(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_616420;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404870",
            "funcStartAddr": "0x404870",
            "funcEndAddr": "0x40489b",
            "decompiledFuncCode": "void sub_404870(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_616420;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x616420;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4048a0",
            "funcStartAddr": "0x4048a0",
            "funcEndAddr": "0x404912",
            "decompiledFuncCode": "int64_t sub_4048a0(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_616420;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_4033e0(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_404920",
            "funcStartAddr": "0x404920",
            "funcEndAddr": "0x404a01",
            "decompiledFuncCode": "char* sub_404920(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_616420;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_4033e0(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_405420((rax_2 + 1));\n    sub_4033e0(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_404a10",
            "funcStartAddr": "0x404a10",
            "funcEndAddr": "0x404a1a",
            "decompiledFuncCode": "int64_t sub_404a10(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_404920(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_404a20",
            "funcStartAddr": "0x404a20",
            "funcEndAddr": "0x404ab5",
            "decompiledFuncCode": "uint64_t sub_404a20()\n{\n    uint64_t rax_2 = data_60b250;\n    int64_t r12 = data_60b238;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x616320)\n    {\n        rax_2 = free(rdi_2);\n        *data_60b240 = 0x100;\n        *(data_60b240 + 8) = 0x616320;\n    }\n    if (r12 != 0x60b240)\n    {\n        rax_2 = free(r12);\n        data_60b238 = 0x60b240;\n    }\n    data_60b250 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_404ac0",
            "funcStartAddr": "0x404ac0",
            "funcEndAddr": "0x404ad1",
            "decompiledFuncCode": "int64_t sub_404ac0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_404610(arg1, arg2, -1, &data_616420);\n}\n\n"
        },
        {
            "funcName": "sub_404ae0",
            "funcStartAddr": "0x404ae0",
            "funcEndAddr": "0x404aea",
            "decompiledFuncCode": "int64_t sub_404ae0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_404610(arg1, arg2, arg3, &data_616420);\n}\n\n"
        },
        {
            "funcName": "sub_404af0",
            "funcStartAddr": "0x404af0",
            "funcEndAddr": "0x404b06",
            "decompiledFuncCode": "int64_t sub_404af0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_404610(0, arg1, -1, &data_616420);\n}\n\n"
        },
        {
            "funcName": "sub_404b10",
            "funcStartAddr": "0x404b10",
            "funcEndAddr": "0x404b22",
            "decompiledFuncCode": "int64_t sub_404b10(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_404610(0, arg1, arg2, &data_616420);\n}\n\n"
        },
        {
            "funcName": "sub_404b30",
            "funcStartAddr": "0x4017ca",
            "funcEndAddr": "0x404b98",
            "decompiledFuncCode": "char* sub_404b30(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_404610(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_404ba0",
            "funcStartAddr": "0x4017cf",
            "funcEndAddr": "0x404c04",
            "decompiledFuncCode": "char* sub_404ba0(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_404610(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_404c10",
            "funcStartAddr": "0x404c10",
            "funcEndAddr": "0x404c1c",
            "decompiledFuncCode": "int64_t sub_404c10(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_404b30(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_404c20",
            "funcStartAddr": "0x404c20",
            "funcEndAddr": "0x404c2f",
            "decompiledFuncCode": "int64_t sub_404c20(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_404ba0(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_404c30",
            "funcStartAddr": "0x404c30",
            "funcEndAddr": "0x404ca0",
            "decompiledFuncCode": "char* sub_404c30(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_616450;\n    int128_t var_48 = data_616420;\n    int128_t var_38 = data_616430;\n    int128_t var_28 = data_616440;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_404610(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_404ca0",
            "funcStartAddr": "0x404ca0",
            "funcEndAddr": "0x404cad",
            "decompiledFuncCode": "int64_t sub_404ca0(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_404c30(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_404cb0",
            "funcStartAddr": "0x404cb0",
            "funcEndAddr": "0x404cc1",
            "decompiledFuncCode": "int64_t sub_404cb0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_404c30(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_404cd0",
            "funcStartAddr": "0x404cd0",
            "funcEndAddr": "0x404cda",
            "decompiledFuncCode": "int64_t sub_404cd0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_404c30(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_404ce0",
            "funcStartAddr": "0x4017d4",
            "funcEndAddr": "0x404d4e",
            "decompiledFuncCode": "char* sub_404ce0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_404610(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_404d50",
            "funcStartAddr": "0x404d50",
            "funcEndAddr": "0x404dbc",
            "decompiledFuncCode": "char* sub_404d50(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_616420;\n    int128_t var_38 = data_616430;\n    int128_t var_28 = data_616440;\n    int64_t var_18 = data_616450;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_404610(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404e60",
            "funcStartAddr": "0x404e60",
            "funcEndAddr": "0x404e76",
            "decompiledFuncCode": "int64_t sub_404e60(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_404610(0, arg1, -1, &data_60b200);\n}\n\n"
        },
        {
            "funcName": "sub_404e80",
            "funcStartAddr": "0x4017d9",
            "funcEndAddr": "0x40525d",
            "decompiledFuncCode": "int64_t sub_404e80(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_40886b, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_405260",
            "funcStartAddr": "0x405260",
            "funcEndAddr": "0x405280",
            "decompiledFuncCode": "int64_t sub_405260(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_404e80(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_405280",
            "funcStartAddr": "0x405280",
            "funcEndAddr": "0x4052e0",
            "decompiledFuncCode": "int64_t sub_405280(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_404e80(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_4052e0",
            "funcStartAddr": "0x4052e0",
            "funcEndAddr": "0x40539c",
            "decompiledFuncCode": "int64_t sub_4052e0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_404e80(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_4053a0",
            "funcStartAddr": "0x4053a0",
            "funcEndAddr": "0x405414",
            "decompiledFuncCode": "int64_t sub_4053a0()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_405420",
            "funcStartAddr": "0x405420",
            "funcEndAddr": "0x40543a",
            "decompiledFuncCode": "int64_t sub_405420(uint64_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_405670();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405480",
            "funcStartAddr": "0x405480",
            "funcEndAddr": "0x4054b6",
            "decompiledFuncCode": "int64_t sub_405480(int64_t arg1, uint64_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_405670();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4055ca",
            "funcStartAddr": "0x4055ca",
            "funcEndAddr": "0x4055d0",
            "decompiledFuncCode": "int64_t sub_4055ca() __noreturn\n{\n    sub_405670();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4055d0",
            "funcStartAddr": "0x4055d0",
            "funcEndAddr": "0x4055e7",
            "decompiledFuncCode": "int64_t sub_4055d0(uint64_t arg1)\n{\n    /* tailcall */\n    return memset(sub_405420(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_4055f0",
            "funcStartAddr": "0x4055f0",
            "funcEndAddr": "0x40561e",
            "decompiledFuncCode": "int64_t sub_4055f0(uint64_t arg1, uint64_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_405670();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_405620",
            "funcStartAddr": "0x405620",
            "funcEndAddr": "0x405648",
            "decompiledFuncCode": "int64_t sub_405620(int64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_405420(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405650",
            "funcStartAddr": "0x405650",
            "funcEndAddr": "0x405663",
            "decompiledFuncCode": "int64_t sub_405650(char* arg1)\n{\n    /* tailcall */\n    return sub_405620(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_405670",
            "funcStartAddr": "0x405670",
            "funcEndAddr": "0x4056a1",
            "decompiledFuncCode": "int64_t sub_405670() __noreturn\n{\n    error(data_60b1f8, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4056b0",
            "funcStartAddr": "0x4056b0",
            "funcEndAddr": "0x405780",
            "decompiledFuncCode": "int64_t sub_4056b0(char* arg1, int32_t arg2, int64_t arg3, int64_t arg4, \n    char* arg5, int64_t arg6, int32_t arg7)\n{\n    int32_t rbx = arg7;\n    int64_t var_40;\n    int32_t rax = sub_4057b0(arg1, nullptr, arg2, &var_40, arg5);\n    int64_t rbp;\n    int32_t* r14_1;\n    if (rax == 0)\n    {\n        rbp = var_40;\n        if ((rbp < arg3 || (rbp >= arg3 && rbp > arg4)))\n        {\n            int32_t* rax_1 = __errno_location();\n            r14_1 = rax_1;\n            *r14_1 = (((rax_1 - rax_1) & 0xffffffd7) + 0x4b);\n        }\n    }\n    else\n    {\n        int32_t* rax_8 = __errno_location();\n        r14_1 = rax_8;\n        if (rax == 1)\n        {\n            *rax_8 = 0x4b;\n        }\n        else if (rax == 3)\n        {\n            *rax_8 = 0;\n        }\n    }\n    if (((rax == 0 && (rbp < arg3 || (rbp >= arg3 && rbp > arg4))) || rax != 0))\n    {\n        int64_t rax_5 = sub_404e60(arg1);\n        uint64_t rsi = *r14_1;\n        if (rsi == 0x16)\n        {\n            rsi = 0;\n        }\n        if (rbx == 0)\n        {\n            rbx = 1;\n        }\n        error(rbx, rsi, \"%s: %s\", arg6, rax_5);\n        rbp = var_40;\n    }\n    return rbp;\n}\n\n"
        },
        {
            "funcName": "sub_405780",
            "funcStartAddr": "0x405780",
            "funcEndAddr": "0x4057a1",
            "decompiledFuncCode": "int64_t sub_405780(char* arg1, int64_t arg2, int64_t arg3, char* arg4, \n    int64_t arg5, int32_t arg6)\n{\n    return sub_4056b0(arg1, 0xa, arg2, arg3, arg4, arg5, arg6);\n}\n\n"
        },
        {
            "funcName": "sub_4057b0",
            "funcStartAddr": "0x4057b0",
            "funcEndAddr": "0x405be4",
            "decompiledFuncCode": "uint64_t sub_4057b0(char* arg1, int64_t* arg2, int32_t arg3, uint64_t* arg4, \n    char* arg5)\n{\n    if (arg3 > 0x24)\n    {\n        __assert_fail(\"0 <= strtol_base && strtol_base \u2026\", \"lib/xstrtol.c\", 0x60, \"xstrtoumax\");\n        /* no return */\n    }\n    int64_t* r15 = arg2;\n    void var_40;\n    if (arg2 == 0)\n    {\n        r15 = &var_40;\n    }\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char rbx = *arg1;\n    uint16_t* rsi = *__ctype_b_loc();\n    char* rax_2 = arg1;\n    while ((*(&rsi[rbx] + 1) & 0x20) != 0)\n    {\n        rax_2 = &rax_2[1];\n        rbx = *rax_2;\n    }\n    int32_t rbp_1;\n    if (rbx == 0x2d)\n    {\n    label_40587a:\n        rbp_1 = 4;\n    }\n    else\n    {\n        char* r8 = *r15;\n        uint64_t rbx_1 = __strtoul_internal(arg1, r15, arg3, 0);\n        int32_t var_58;\n        void* r8_1;\n        uint32_t r12_1;\n        if (r8 == arg1)\n        {\n            var_58 = r8;\n            if (arg5 == 0)\n            {\n                goto label_40587a;\n            }\n            r12_1 = *arg1;\n            if (r12_1 == 0)\n            {\n                goto label_40587a;\n            }\n            rbp_1 = 0;\n            rbx_1 = 1;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) == 0)\n            {\n                goto label_40587a;\n            }\n        label_4058b7:\n            uint64_t rdx_1 = (r12_1 - 0x45);\n            int64_t rdx_3;\n            int32_t rsi_3;\n            if (rdx_1 <= 0x2f)\n            {\n                var_58 = rdx_1;\n                if ((!(TEST_BITQ(0x814400308945, rdx_1))))\n                {\n                    goto label_405920;\n                }\n                if (strchr(arg5, 0x30) == 0)\n                {\n                    goto label_405920;\n                }\n                char rax_8 = *(r8_1 + 1);\n                if (rax_8 == 0x44)\n                {\n                label_405b48:\n                    rsi_3 = 2;\n                    rdx_3 = 0x3e8;\n                    goto label_40592a;\n                }\n                if (rax_8 == 0x69)\n                {\n                    rdx_3 = 0x400;\n                    int32_t rsi_6;\n                    rsi_6 = *(r8_1 + 2) == 0x42;\n                    rsi_3 = ((rsi_6 + rsi_6) + 1);\n                    goto label_40592a;\n                }\n                uint64_t rdx_2 = var_58;\n                if (rax_8 == 0x42)\n                {\n                    goto label_405b48;\n                }\n                int32_t r9_1;\n                switch (rdx_2)\n                {\n                    case 0:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_405acb:\n                        int64_t rcx_6 = rdx_3;\n                        int32_t rdi_8 = 6;\n                        r9_1 = 0;\n                        int32_t temp15_1;\n                        do\n                        {\n                            uint64_t rax_28;\n                            int64_t rdx_11;\n                            rdx_11 = HIGHD((rbx_1 * rcx_6));\n                            rax_28 = LOWD((rbx_1 * rcx_6));\n                            bool o_8 = ((rbx_1 * rcx_6) >> 0x40) != 0;\n                            rbx_1 = rax_28;\n                            if (o_8)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp15_1 = rdi_8;\n                            rdi_8 = (rdi_8 - 1);\n                        } while (temp15_1 != 1);\n                        goto label_405a24;\n                    }\n                    case 1:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 7:\n                    case 9:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xe:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1f:\n                    case 0x20:\n                    case 0x21:\n                    case 0x23:\n                    case 0x24:\n                    case 0x25:\n                    case 0x27:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    {\n                        goto label_4059c5;\n                    }\n                    case 2:\n                    case 0x22:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_405b03:\n                        int64_t rcx_7 = rdx_3;\n                        int64_t rax_30;\n                        int64_t rdx_12;\n                        rdx_12 = HIGHD((rbx_1 * rcx_7));\n                        rax_30 = LOWD((rbx_1 * rcx_7));\n                        int64_t rax_31;\n                        if (((rbx_1 * rcx_7) >> 0x40) == 0)\n                        {\n                            int64_t rdx_13;\n                            rdx_13 = HIGHD((rax_30 * rcx_7));\n                            rax_31 = LOWD((rax_30 * rcx_7));\n                            if (((rax_30 * rcx_7) >> 0x40) == 0)\n                            {\n                                uint64_t rax_32;\n                                int64_t rdx_14;\n                                rdx_14 = HIGHD((rax_31 * rcx_7));\n                                rax_32 = LOWD((rax_31 * rcx_7));\n                                if (((rax_31 * rcx_7) >> 0x40) == 0)\n                                {\n                                    rbx_1 = rax_32;\n                                    rbp_1 = (rbp_1 | 0);\n                                }\n                            }\n                        }\n                        if (((((rbx_1 * rcx_7) >> 0x40) != 0 || (((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) != 0)) || ((((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) == 0) && ((rax_31 * rcx_7) >> 0x40) != 0)))\n                        {\n                            rbx_1 = -1;\n                            rbp_1 = (rbp_1 | 1);\n                        }\n                        goto label_40596d;\n                    }\n                    case 6:\n                    case 0x26:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40598f:\n                        uint64_t rax_15;\n                        int64_t rdx_6;\n                        rdx_6 = HIGHD((rbx_1 * rdx_3));\n                        rax_15 = LOWD((rbx_1 * rdx_3));\n                        bool o_3 = ((rbx_1 * rdx_3) >> 0x40) != 0;\n                        rbx_1 = rax_15;\n                        if ((!o_3))\n                        {\n                            goto label_40596d;\n                        }\n                        goto label_405997;\n                    }\n                    case 8:\n                    case 0x28:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40594e:\n                        int64_t rcx_1 = rdx_3;\n                        int64_t rax_10;\n                        int64_t rdx_4;\n                        rdx_4 = HIGHD((rbx_1 * rcx_1));\n                        rax_10 = LOWD((rbx_1 * rcx_1));\n                        if (((rbx_1 * rcx_1) >> 0x40) == 0)\n                        {\n                            uint64_t rax_11;\n                            int64_t rdx_5;\n                            rdx_5 = HIGHD((rax_10 * rcx_1));\n                            rax_11 = LOWD((rax_10 * rcx_1));\n                            if (((rax_10 * rcx_1) >> 0x40) != 0)\n                            {\n                                goto label_405997;\n                            }\n                            rbx_1 = rax_11;\n                            goto label_40596d;\n                        }\n                    label_405997:\n                        rbp_1 = 1;\n                        rbx_1 = -1;\n                        goto label_40596d;\n                    }\n                    case 0xb:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_405a98:\n                        int64_t rcx_5 = rdx_3;\n                        int32_t rdi_7 = 5;\n                        r9_1 = 0;\n                        int32_t temp14_1;\n                        do\n                        {\n                            uint64_t rax_26;\n                            int64_t rdx_10;\n                            rdx_10 = HIGHD((rbx_1 * rcx_5));\n                            rax_26 = LOWD((rbx_1 * rcx_5));\n                            bool o_7 = ((rbx_1 * rcx_5) >> 0x40) != 0;\n                            rbx_1 = rax_26;\n                            if (o_7)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp14_1 = rdi_7;\n                            rdi_7 = (rdi_7 - 1);\n                        } while (temp14_1 != 1);\n                        goto label_405a24;\n                    }\n                    case 0xf:\n                    case 0x2f:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_405a68:\n                        int64_t rcx_4 = rdx_3;\n                        int32_t rdi_6 = 4;\n                        r9_1 = 0;\n                        int32_t temp13_1;\n                        do\n                        {\n                            uint64_t rax_24;\n                            int64_t rdx_9;\n                            rdx_9 = HIGHD((rbx_1 * rcx_4));\n                            rax_24 = LOWD((rbx_1 * rcx_4));\n                            bool o_6 = ((rbx_1 * rcx_4) >> 0x40) != 0;\n                            rbx_1 = rax_24;\n                            if (o_6)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp13_1 = rdi_6;\n                            rdi_6 = (rdi_6 - 1);\n                        } while (temp13_1 != 1);\n                        goto label_405a24;\n                    }\n                    case 0x14:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_405a36:\n                        int64_t rcx_3 = rdx_3;\n                        int32_t rdi_5 = 8;\n                        r9_1 = 0;\n                        int32_t temp12_1;\n                        do\n                        {\n                            uint64_t rax_22;\n                            int64_t rdx_8;\n                            rdx_8 = HIGHD((rbx_1 * rcx_3));\n                            rax_22 = LOWD((rbx_1 * rcx_3));\n                            bool o_5 = ((rbx_1 * rcx_3) >> 0x40) != 0;\n                            rbx_1 = rax_22;\n                            if (o_5)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp12_1 = rdi_5;\n                            rdi_5 = (rdi_5 - 1);\n                        } while (temp12_1 != 1);\n                        goto label_405a24;\n                    }\n                    case 0x15:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4059fb:\n                        int64_t rcx_2 = rdx_3;\n                        int32_t rdi_4 = 7;\n                        r9_1 = 0;\n                        int32_t temp11_1;\n                        do\n                        {\n                            uint64_t rax_20;\n                            int64_t rdx_7;\n                            rdx_7 = HIGHD((rbx_1 * rcx_2));\n                            rax_20 = LOWD((rbx_1 * rcx_2));\n                            bool o_4 = ((rbx_1 * rcx_2) >> 0x40) != 0;\n                            rbx_1 = rax_20;\n                            if (o_4)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp11_1 = rdi_4;\n                            rdi_4 = (rdi_4 - 1);\n                        } while (temp11_1 != 1);\n                    label_405a24:\n                        rbp_1 = (rbp_1 | r9_1);\n                        goto label_40596d;\n                    }\n                    case 0x1d:\n                    {\n                        rsi_3 = 1;\n                        break;\n                    }\n                    case 0x1e:\n                    {\n                        rsi_3 = 1;\n                        goto label_40596d;\n                    }\n                }\n            }\n            else\n            {\n            label_405920:\n                rsi_3 = 1;\n                rdx_3 = 0x400;\n            label_40592a:\n                char r12_2 = (r12_1 - 0x42);\n                if (r12_2 > 0x35)\n                {\n                    goto label_4059c5;\n                }\n                switch (r12_2)\n                {\n                    case 0:\n                    {\n                        if ((rbx_1 >> 0x36) != 0)\n                        {\n                            goto label_405997;\n                        }\n                        rbx_1 = (rbx_1 << 0xa);\n                        goto label_40596d;\n                    }\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x22:\n                    case 0x23:\n                    case 0x24:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x2a:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x33:\n                    case 0x34:\n                    {\n                        goto label_4059c5;\n                    }\n                    case 3:\n                    {\n                        goto label_405acb;\n                    }\n                    case 5:\n                    case 0x25:\n                    {\n                        goto label_405b03;\n                    }\n                    case 9:\n                    case 0x29:\n                    {\n                        goto label_40598f;\n                    }\n                    case 0xb:\n                    case 0x2b:\n                    {\n                        goto label_40594e;\n                    }\n                    case 0xe:\n                    {\n                        goto label_405a98;\n                    }\n                    case 0x12:\n                    case 0x32:\n                    {\n                        goto label_405a68;\n                    }\n                    case 0x17:\n                    {\n                        goto label_405a36;\n                    }\n                    case 0x18:\n                    {\n                        goto label_4059fb;\n                    }\n                    case 0x21:\n                    {\n                        goto label_40596d;\n                    }\n                    case 0x35:\n                    {\n                        if (rbx_1 < 0)\n                        {\n                            goto label_405997;\n                        }\n                        rbx_1 = (rbx_1 + rbx_1);\n                    label_40596d:\n                        void* r8_2 = (r8_1 + rsi_3);\n                        int32_t rax_13 = (rbp_1 | 2);\n                        *r15 = r8_2;\n                        if (*r8_2 != 0)\n                        {\n                            rbp_1 = rax_13;\n                        }\n                        goto label_405852;\n                    }\n                }\n            }\n            if ((rbx_1 >> 0x37) != 0)\n            {\n                goto label_405997;\n            }\n            rbx_1 = (rbx_1 << 9);\n            goto label_40596d;\n        }\n        int32_t rax_4 = *rax;\n        if (rax_4 == 0)\n        {\n            rbp_1 = 0;\n        }\n        else\n        {\n            rbp_1 = 1;\n            if (rax_4 != 0x22)\n            {\n                goto label_40587a;\n            }\n        }\n        if (arg5 == 0)\n        {\n        label_405852:\n            *arg4 = rbx_1;\n        }\n        else\n        {\n            r12_1 = *r8;\n            if (r12_1 == 0)\n            {\n                goto label_405852;\n            }\n            var_58 = r8;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) != 0)\n            {\n                goto label_4058b7;\n            }\n        label_4059c5:\n            *arg4 = rbx_1;\n            rbp_1 = (rbp_1 | 2);\n        }\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_405bf0",
            "funcStartAddr": "0x405bf0",
            "funcEndAddr": "0x405c6b",
            "decompiledFuncCode": "int64_t sub_405bf0(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_405c70(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_405c70",
            "funcStartAddr": "0x405c70",
            "funcEndAddr": "0x405cb0",
            "decompiledFuncCode": "int64_t sub_405c70(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_405cb0(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_405cb0",
            "funcStartAddr": "0x405cb0",
            "funcEndAddr": "0x405d07",
            "decompiledFuncCode": "off64_t sub_405cb0(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_405d10",
            "funcStartAddr": "0x405d10",
            "funcEndAddr": "0x405def",
            "decompiledFuncCode": "uint64_t sub_405d10(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_405df0",
            "funcStartAddr": "0x405df0",
            "funcEndAddr": "0x40640c",
            "decompiledFuncCode": "uint64_t sub_405df0(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_406020;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_405f46;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_405f46;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_405f46:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_406020:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_40604e;\n                }\n                *arg5 = r12;\n            label_40604e:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_40606c;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_40606c:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_40606c;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_405fde;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_405fde:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_406410",
            "funcStartAddr": "0x406410",
            "funcEndAddr": "0x4069d6",
            "decompiledFuncCode": "uint64_t sub_406410(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_40664c;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_4064d8;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_4064d8:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_405d10(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_409081;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_405d10(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_40664c;\n                }\n                *arg7 = rdx_2;\n            label_40664c:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_406750;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_409081;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_4067c0;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_406750;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_406750;\n                            }\n                            goto label_406711;\n                        }\n                    label_406711:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_405df0(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_409082);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_406750:\n                            rdx = &r14_1[1];\n                        label_406591:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_40678e;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_40678e:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_4090a0;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_4067c0:\n                                        r14_2 = sub_405df0(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_40687d;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_40687d:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_40664c;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_4064d8;\n        }\n        goto label_406591;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_406a40",
            "funcStartAddr": "0x406a40",
            "funcEndAddr": "0x406a58",
            "decompiledFuncCode": "uint64_t sub_406a40(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_406ae0",
            "funcStartAddr": "0x406ae0",
            "funcEndAddr": "0x406b5a",
            "decompiledFuncCode": "uint64_t sub_406ae0(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_409084[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_406b0a;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_406b0a:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_406bc0() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_406b60",
            "funcStartAddr": "0x406b60",
            "funcEndAddr": "0x406bbd",
            "decompiledFuncCode": "uint64_t sub_406b60(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_405bf0(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_406bc0",
            "funcStartAddr": "0x406bc0",
            "funcEndAddr": "0x406c1e",
            "decompiledFuncCode": "int64_t sub_406bc0()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_4090a4;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            void* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_406c20",
            "funcStartAddr": "0x406c20",
            "funcEndAddr": "0x407182",
            "decompiledFuncCode": "char* sub_406c20()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_616498;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_409084[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        uint64_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            uint64_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_406d1c;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_406d66;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_406d1c:\n            r15 = &data_409084[0x1b];\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_406d66:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, \"r\");\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_406e1c:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_406fab;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_406e58:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_406e58;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_406e92:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_406e92;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_409084[0x1b];\n                                    free(rdi_26);\n                                    sub_405bf0(rax_12);\n                                    goto label_406da7;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_40706b:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_40706b;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_4070b9:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_4070b9;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_406e1c;\n                        }\n                        break;\n                    }\n                label_406fab:\n                    sub_405bf0(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_409084[0x1b];\n            }\n        label_406da7:\n            free(rbp_3);\n        }\n        data_616498 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x407190",
            "funcEndAddr": "0x4071ed",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x4071f0",
            "funcEndAddr": "0x4071f1",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_407200",
            "funcStartAddr": "0x407200",
            "funcEndAddr": "0x407218",
            "decompiledFuncCode": "int64_t sub_407200(void (* arg1)(void*))\n{\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, data_60b1e8);\n}\n\n"
        },
        {
            "funcName": "sub_407218",
            "funcStartAddr": "0x407218",
            "funcEndAddr": "0x407238",
            "decompiledFuncCode": "int64_t sub_407218(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_60ae30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}