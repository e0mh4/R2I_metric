{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_df.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 242,
    "funcInfo": [
        {
            "funcName": "sub_401dd0",
            "funcStartAddr": "0x401dd0",
            "funcEndAddr": "0x401ddc",
            "decompiledFuncCode": "int64_t sub_401dd0()\n{\n    int64_t var_8 = data_617008;\n    /* jump -> data_617010 */\n}\n\n"
        },
        {
            "funcName": "sub_401de6",
            "funcStartAddr": "0x401de6",
            "funcEndAddr": "0x401df0",
            "decompiledFuncCode": "int64_t sub_401de6()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401df6",
            "funcStartAddr": "0x401df6",
            "funcEndAddr": "0x401e00",
            "decompiledFuncCode": "int64_t sub_401df6()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401e06",
            "funcStartAddr": "0x401e06",
            "funcEndAddr": "0x401e10",
            "decompiledFuncCode": "int64_t sub_401e06()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401e16",
            "funcStartAddr": "0x401e16",
            "funcEndAddr": "0x401e20",
            "decompiledFuncCode": "int64_t sub_401e16()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401e26",
            "funcStartAddr": "0x401e26",
            "funcEndAddr": "0x401e30",
            "decompiledFuncCode": "int64_t sub_401e26()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401e36",
            "funcStartAddr": "0x401e36",
            "funcEndAddr": "0x401e40",
            "decompiledFuncCode": "int64_t sub_401e36()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401e46",
            "funcStartAddr": "0x401e46",
            "funcEndAddr": "0x401e50",
            "decompiledFuncCode": "int64_t sub_401e46()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401e56",
            "funcStartAddr": "0x401e56",
            "funcEndAddr": "0x401e60",
            "decompiledFuncCode": "int64_t sub_401e56()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401e66",
            "funcStartAddr": "0x401e66",
            "funcEndAddr": "0x401e70",
            "decompiledFuncCode": "int64_t sub_401e66()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401e76",
            "funcStartAddr": "0x401e76",
            "funcEndAddr": "0x401e80",
            "decompiledFuncCode": "int64_t sub_401e76()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401e86",
            "funcStartAddr": "0x401e86",
            "funcEndAddr": "0x401e90",
            "decompiledFuncCode": "int64_t sub_401e86()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401e96",
            "funcStartAddr": "0x401e96",
            "funcEndAddr": "0x401ea0",
            "decompiledFuncCode": "int64_t sub_401e96()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401ea6",
            "funcStartAddr": "0x401ea6",
            "funcEndAddr": "0x401eb0",
            "decompiledFuncCode": "int64_t sub_401ea6()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401eb6",
            "funcStartAddr": "0x401eb6",
            "funcEndAddr": "0x401ec0",
            "decompiledFuncCode": "int64_t sub_401eb6()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401ec6",
            "funcStartAddr": "0x401ec6",
            "funcEndAddr": "0x401ed0",
            "decompiledFuncCode": "int64_t sub_401ec6()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401ed6",
            "funcStartAddr": "0x401ed6",
            "funcEndAddr": "0x401ee0",
            "decompiledFuncCode": "int64_t sub_401ed6()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401ee6",
            "funcStartAddr": "0x401ee6",
            "funcEndAddr": "0x401ef0",
            "decompiledFuncCode": "int64_t sub_401ee6()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401ef6",
            "funcStartAddr": "0x401ef6",
            "funcEndAddr": "0x401f00",
            "decompiledFuncCode": "int64_t sub_401ef6()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401f06",
            "funcStartAddr": "0x401f06",
            "funcEndAddr": "0x401f10",
            "decompiledFuncCode": "int64_t sub_401f06()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401f16",
            "funcStartAddr": "0x401f16",
            "funcEndAddr": "0x401f20",
            "decompiledFuncCode": "int64_t sub_401f16()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401f26",
            "funcStartAddr": "0x401f26",
            "funcEndAddr": "0x401f30",
            "decompiledFuncCode": "int64_t sub_401f26()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401f36",
            "funcStartAddr": "0x401f36",
            "funcEndAddr": "0x401f40",
            "decompiledFuncCode": "int64_t sub_401f36()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401f46",
            "funcStartAddr": "0x401f46",
            "funcEndAddr": "0x401f50",
            "decompiledFuncCode": "int64_t sub_401f46()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401f56",
            "funcStartAddr": "0x401f56",
            "funcEndAddr": "0x401f60",
            "decompiledFuncCode": "int64_t sub_401f56()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401f66",
            "funcStartAddr": "0x401f66",
            "funcEndAddr": "0x401f70",
            "decompiledFuncCode": "int64_t sub_401f66()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401f76",
            "funcStartAddr": "0x401f76",
            "funcEndAddr": "0x401f80",
            "decompiledFuncCode": "int64_t sub_401f76()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401f86",
            "funcStartAddr": "0x401f86",
            "funcEndAddr": "0x401f90",
            "decompiledFuncCode": "int64_t sub_401f86()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401f96",
            "funcStartAddr": "0x401f96",
            "funcEndAddr": "0x401fa0",
            "decompiledFuncCode": "int64_t sub_401f96()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401fa6",
            "funcStartAddr": "0x401fa6",
            "funcEndAddr": "0x401fb0",
            "decompiledFuncCode": "int64_t sub_401fa6()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401fb6",
            "funcStartAddr": "0x401fb6",
            "funcEndAddr": "0x401fc0",
            "decompiledFuncCode": "int64_t sub_401fb6()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401fc6",
            "funcStartAddr": "0x401fc6",
            "funcEndAddr": "0x401fd0",
            "decompiledFuncCode": "int64_t sub_401fc6()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401fd6",
            "funcStartAddr": "0x401fd6",
            "funcEndAddr": "0x401fe0",
            "decompiledFuncCode": "int64_t sub_401fd6()\n{\n    int64_t var_8 = 0x1f;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_401fe6",
            "funcStartAddr": "0x401fe6",
            "funcEndAddr": "0x401ff0",
            "decompiledFuncCode": "int64_t sub_401fe6()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402006",
            "funcStartAddr": "0x402006",
            "funcEndAddr": "0x402010",
            "decompiledFuncCode": "int64_t sub_402006()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402026",
            "funcStartAddr": "0x402026",
            "funcEndAddr": "0x402030",
            "decompiledFuncCode": "int64_t sub_402026()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402036",
            "funcStartAddr": "0x402036",
            "funcEndAddr": "0x402040",
            "decompiledFuncCode": "int64_t sub_402036()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402046",
            "funcStartAddr": "0x402046",
            "funcEndAddr": "0x402050",
            "decompiledFuncCode": "int64_t sub_402046()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402056",
            "funcStartAddr": "0x402056",
            "funcEndAddr": "0x402060",
            "decompiledFuncCode": "int64_t sub_402056()\n{\n    int64_t var_8 = 0x27;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402066",
            "funcStartAddr": "0x402066",
            "funcEndAddr": "0x402070",
            "decompiledFuncCode": "int64_t sub_402066()\n{\n    int64_t var_8 = 0x28;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402086",
            "funcStartAddr": "0x402086",
            "funcEndAddr": "0x402090",
            "decompiledFuncCode": "int64_t sub_402086()\n{\n    int64_t var_8 = 0x2a;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_4020a6",
            "funcStartAddr": "0x4020a6",
            "funcEndAddr": "0x4020b0",
            "decompiledFuncCode": "int64_t sub_4020a6()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_4020b6",
            "funcStartAddr": "0x4020b6",
            "funcEndAddr": "0x4020c0",
            "decompiledFuncCode": "int64_t sub_4020b6()\n{\n    int64_t var_8 = 0x2d;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_4020c6",
            "funcStartAddr": "0x4020c6",
            "funcEndAddr": "0x4020d0",
            "decompiledFuncCode": "int64_t sub_4020c6()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_4020d6",
            "funcStartAddr": "0x4020d6",
            "funcEndAddr": "0x4020e0",
            "decompiledFuncCode": "int64_t sub_4020d6()\n{\n    int64_t var_8 = 0x2f;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_4020e6",
            "funcStartAddr": "0x4020e6",
            "funcEndAddr": "0x4020f0",
            "decompiledFuncCode": "int64_t sub_4020e6()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402106",
            "funcStartAddr": "0x402106",
            "funcEndAddr": "0x402110",
            "decompiledFuncCode": "int64_t sub_402106()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402126",
            "funcStartAddr": "0x402126",
            "funcEndAddr": "0x402130",
            "decompiledFuncCode": "int64_t sub_402126()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402136",
            "funcStartAddr": "0x402136",
            "funcEndAddr": "0x402140",
            "decompiledFuncCode": "int64_t sub_402136()\n{\n    int64_t var_8 = 0x35;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402146",
            "funcStartAddr": "0x402146",
            "funcEndAddr": "0x402150",
            "decompiledFuncCode": "int64_t sub_402146()\n{\n    int64_t var_8 = 0x36;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402156",
            "funcStartAddr": "0x402156",
            "funcEndAddr": "0x402160",
            "decompiledFuncCode": "int64_t sub_402156()\n{\n    int64_t var_8 = 0x37;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402166",
            "funcStartAddr": "0x402166",
            "funcEndAddr": "0x402170",
            "decompiledFuncCode": "int64_t sub_402166()\n{\n    int64_t var_8 = 0x38;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402186",
            "funcStartAddr": "0x402186",
            "funcEndAddr": "0x402190",
            "decompiledFuncCode": "int64_t sub_402186()\n{\n    int64_t var_8 = 0x3a;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_4021a6",
            "funcStartAddr": "0x4021a6",
            "funcEndAddr": "0x4021b0",
            "decompiledFuncCode": "int64_t sub_4021a6()\n{\n    int64_t var_8 = 0x3c;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_4021b6",
            "funcStartAddr": "0x4021b6",
            "funcEndAddr": "0x4021c0",
            "decompiledFuncCode": "int64_t sub_4021b6()\n{\n    int64_t var_8 = 0x3d;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_4021c6",
            "funcStartAddr": "0x4021c6",
            "funcEndAddr": "0x4021d0",
            "decompiledFuncCode": "int64_t sub_4021c6()\n{\n    int64_t var_8 = 0x3e;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_4021d6",
            "funcStartAddr": "0x4021d6",
            "funcEndAddr": "0x4021e0",
            "decompiledFuncCode": "int64_t sub_4021d6()\n{\n    int64_t var_8 = 0x3f;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_4021e6",
            "funcStartAddr": "0x4021e6",
            "funcEndAddr": "0x4021f0",
            "decompiledFuncCode": "int64_t sub_4021e6()\n{\n    int64_t var_8 = 0x40;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402206",
            "funcStartAddr": "0x402206",
            "funcEndAddr": "0x402210",
            "decompiledFuncCode": "int64_t sub_402206()\n{\n    int64_t var_8 = 0x42;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402226",
            "funcStartAddr": "0x402226",
            "funcEndAddr": "0x402230",
            "decompiledFuncCode": "int64_t sub_402226()\n{\n    int64_t var_8 = 0x44;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402236",
            "funcStartAddr": "0x402236",
            "funcEndAddr": "0x402240",
            "decompiledFuncCode": "int64_t sub_402236()\n{\n    int64_t var_8 = 0x45;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402246",
            "funcStartAddr": "0x402246",
            "funcEndAddr": "0x402250",
            "decompiledFuncCode": "int64_t sub_402246()\n{\n    int64_t var_8 = 0x46;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402256",
            "funcStartAddr": "0x402256",
            "funcEndAddr": "0x402260",
            "decompiledFuncCode": "int64_t sub_402256()\n{\n    int64_t var_8 = 0x47;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402266",
            "funcStartAddr": "0x402266",
            "funcEndAddr": "0x402270",
            "decompiledFuncCode": "int64_t sub_402266()\n{\n    int64_t var_8 = 0x48;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402286",
            "funcStartAddr": "0x402286",
            "funcEndAddr": "0x402290",
            "decompiledFuncCode": "int64_t sub_402286()\n{\n    int64_t var_8 = 0x4a;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_4022a6",
            "funcStartAddr": "0x4022a6",
            "funcEndAddr": "0x4022b0",
            "decompiledFuncCode": "int64_t sub_4022a6()\n{\n    int64_t var_8 = 0x4c;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_4022b6",
            "funcStartAddr": "0x4022b6",
            "funcEndAddr": "0x4022c0",
            "decompiledFuncCode": "int64_t sub_4022b6()\n{\n    int64_t var_8 = 0x4d;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_4022c6",
            "funcStartAddr": "0x4022c6",
            "funcEndAddr": "0x4022d0",
            "decompiledFuncCode": "int64_t sub_4022c6()\n{\n    int64_t var_8 = 0x4e;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_4022d6",
            "funcStartAddr": "0x4022d6",
            "funcEndAddr": "0x4022e0",
            "decompiledFuncCode": "int64_t sub_4022d6()\n{\n    int64_t var_8 = 0x4f;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_4022e6",
            "funcStartAddr": "0x4022e6",
            "funcEndAddr": "0x4022f0",
            "decompiledFuncCode": "int64_t sub_4022e6()\n{\n    int64_t var_8 = 0x50;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402306",
            "funcStartAddr": "0x402306",
            "funcEndAddr": "0x402310",
            "decompiledFuncCode": "int64_t sub_402306()\n{\n    int64_t var_8 = 0x52;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402326",
            "funcStartAddr": "0x402326",
            "funcEndAddr": "0x402330",
            "decompiledFuncCode": "int64_t sub_402326()\n{\n    int64_t var_8 = 0x54;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402336",
            "funcStartAddr": "0x402336",
            "funcEndAddr": "0x402340",
            "decompiledFuncCode": "int64_t sub_402336()\n{\n    int64_t var_8 = 0x55;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402346",
            "funcStartAddr": "0x402346",
            "funcEndAddr": "0x402350",
            "decompiledFuncCode": "int64_t sub_402346()\n{\n    int64_t var_8 = 0x56;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402356",
            "funcStartAddr": "0x402356",
            "funcEndAddr": "0x402360",
            "decompiledFuncCode": "int64_t sub_402356()\n{\n    int64_t var_8 = 0x57;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402366",
            "funcStartAddr": "0x402366",
            "funcEndAddr": "0x402370",
            "decompiledFuncCode": "int64_t sub_402366()\n{\n    int64_t var_8 = 0x58;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "sub_402386",
            "funcStartAddr": "0x402386",
            "funcEndAddr": "0x402390",
            "decompiledFuncCode": "int64_t sub_402386()\n{\n    int64_t var_8 = 0x5a;\n    /* tailcall */\n    return sub_401dd0();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x4023e0",
            "funcEndAddr": "0x403907",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    char r12 = 0;\n    char** var_158 = argv;\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rcx = sub_4081c0(*argv);\n    int32_t var_150;\n    setlocale(6, &data_4139f9[0x1b], rdx, rcx, r8, r9, var_158, var_150);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    sub_410f70(sub_4058f0);\n    data_6176d0 = 0;\n    data_6176c8 = 0;\n    data_6176ee = 0;\n    data_6176ec = 0;\n    data_6176e8 = 0xffffffff;\n    data_6176b9 = 0;\n    data_6176dd = 0;\n    data_6176d8 = 0;\n    data_6176b8 = 0;\n    data_617680 = 1;\n    char* rax = dcgettext(nullptr, \"options %s and %s are mutually e\u2026\", 5);\n    int32_t var_c8;\n    while (true)\n    {\n        var_c8 = 0xffffffff;\n        int32_t rax_1 = getopt_long(argc, var_158, \"aB:iF:hHklmPTt:vx:\", &data_411380, &var_c8);\n        if (rax_1 == 0xffffffff)\n        {\n            break;\n        }\n        bool cond:0_1 = rax_1 <= 0x69;\n        void* const rcx_29;\n        if (rax_1 != 0x69)\n        {\n            bool cond:2_1;\n            if ((!cond:0_1))\n            {\n                cond:2_1 = rax_1 <= 0x76;\n                if (rax_1 == 0x76)\n                {\n                    continue;\n                }\n                else if (cond:2_1)\n                {\n                    bool cond:6_1 = rax_1 <= 0x6c;\n                    if (rax_1 == 0x6c)\n                    {\n                        data_6176ed = 1;\n                        continue;\n                    }\n                    else\n                    {\n                        if (cond:6_1)\n                        {\n                            if (rax_1 == 0x6b)\n                            {\n                                data_6176e8 = 0;\n                                data_6176e0 = 0x400;\n                                continue;\n                            }\n                            goto label_402746;\n                        }\n                        if (rax_1 == 0x6d)\n                        {\n                            data_6176e8 = 0;\n                            data_6176e0 = 0x100000;\n                            continue;\n                        }\n                        else if (rax_1 != 0x74)\n                        {\n                            goto label_402746;\n                        }\n                    }\n                }\n                else\n                {\n                    bool cond:7_1 = rax_1 > 0x81;\n                    if (rax_1 == 0x81)\n                    {\n                        data_6176dc = 1;\n                        continue;\n                    }\n                    else\n                    {\n                        if ((!cond:7_1))\n                        {\n                            if (rax_1 == 0x78)\n                            {\n                                int64_t r14_1 = data_6178a8;\n                                int64_t* rax_2 = sub_40a560(0x10);\n                                int64_t rdx_1 = data_6176c8;\n                                *rax_2 = r14_1;\n                                rax_2[1] = rdx_1;\n                                data_6176c8 = rax_2;\n                                continue;\n                            }\n                            else if (rax_1 == 0x80)\n                            {\n                                data_6176dc = 0;\n                                continue;\n                            }\n                            goto label_402746;\n                        }\n                        if (rax_1 == 0x82)\n                        {\n                            data_6176b8 = 1;\n                            continue;\n                        }\n                        else\n                        {\n                            if (rax_1 != 0x83)\n                            {\n                                goto label_402746;\n                            }\n                            int32_t rax_5 = data_617660;\n                            if (rax_5 != 1)\n                            {\n                                if ((rax_5 == 0 && r12 != 0))\n                                {\n                                    error(0, 0, rax, &data_411106, \"--output\");\n                                    sub_404930(1);\n                                    /* no return */\n                                }\n                                if (data_6176b9 == 0)\n                                {\n                                    int64_t rdi_4 = data_6178a8;\n                                    data_617660 = 4;\n                                    if (rdi_4 == 0)\n                                    {\n                                        continue;\n                                    }\n                                    else\n                                    {\n                                        sub_404d60();\n                                        continue;\n                                    }\n                                }\n                                goto label_4038af;\n                            }\n                        }\n                    }\n                }\n            }\n            else\n            {\n                bool cond:1_1 = rax_1 <= 0x48;\n                if (rax_1 == 0x48)\n                {\n                    data_6176e8 = 0x90;\n                    data_6176e0 = 1;\n                    continue;\n                }\n                else\n                {\n                    if ((!cond:1_1))\n                    {\n                        bool cond:5_1 = rax_1 <= 0x54;\n                        if (rax_1 != 0x54)\n                        {\n                            if (cond:5_1)\n                            {\n                                if (rax_1 != 0x50)\n                                {\n                                    goto label_402746;\n                                }\n                                if (data_617660 == 4)\n                                {\n                                    rcx_29 = &data_411106;\n                                }\n                                else\n                                {\n                                    r12 = 1;\n                                    continue;\n                                }\n                                goto label_4038bd;\n                            }\n                            if (rax_1 == 0x61)\n                            {\n                                data_6176ee = 1;\n                                continue;\n                            }\n                            else if (rax_1 == 0x68)\n                            {\n                                data_6176e8 = 0xb0;\n                                data_6176e0 = 1;\n                                continue;\n                            }\n                            goto label_402746;\n                        }\n                        if (data_617660 != 4)\n                        {\n                            data_6176b9 = 1;\n                            continue;\n                        }\n                    label_4038af:\n                        rcx_29 = &data_411103;\n                        goto label_4038bd;\n                    }\n                    bool cond:4_1 = rax_1 <= 0xffffff7e;\n                    if (rax_1 == 0xffffff7e)\n                    {\n                        sub_404930(0);\n                        /* no return */\n                    }\n                    if (cond:4_1)\n                    {\n                        if (rax_1 == 0xffffff7d)\n                        {\n                            int64_t var_160_1 = 0;\n                            char const* const var_168 = \"Paul Eggert\";\n                            sub_40a420(stdout, &data_41103a, \"GNU coreutils\", data_617560);\n                            exit(0);\n                            /* no return */\n                        }\n                        goto label_402746;\n                    }\n                    if (rax_1 == 0x42)\n                    {\n                        int32_t rax_4 = sub_407980(data_6178a8, &data_6176e8, &data_6176e0);\n                        if (rax_4 != 0)\n                        {\n                            sub_40a820(rax_4, var_c8, 0x42, &data_411380, data_6178a8);\n                            /* no return */\n                        }\n                        continue;\n                    }\n                    else if (rax_1 != 0x46)\n                    {\n                        goto label_402746;\n                    }\n                }\n            }\n            if ((cond:0_1 || (((!cond:0_1) && rax_1 != 0x76) && cond:2_1)))\n            {\n                int64_t r14_2 = data_6178a8;\n                int64_t* rax_3 = sub_40a560(0x10);\n                int64_t rdx_2 = data_6176d0;\n                *rax_3 = r14_2;\n                rax_3[1] = rdx_2;\n                data_6176d0 = rax_3;\n                continue;\n            }\n        }\n        else if (data_617660 != 4)\n        {\n            data_617660 = 1;\n            continue;\n        }\n        rcx_29 = &data_411100;\n    label_4038bd:\n        error(0, 0, rax, rcx_29, \"--output\");\n    label_402746:\n        sub_404930(1);\n        /* no return */\n    }\n    if (data_6176e8 == 0xffffffff)\n    {\n        if (r12 == 0)\n        {\n            sub_407980(getenv(\"DF_BLOCK_SIZE\"), &data_6176e8, &data_6176e0);\n        }\n        else\n        {\n            data_6176e8 = 0;\n            char* rax_16 = getenv(\"POSIXLY_CORRECT\");\n            data_6176e0 = (((rax_16 - rax_16) & 0x200) + 0x200);\n        }\n    }\n    int32_t rax_7 = data_617660;\n    if ((rax_7 != 1 && rax_7 != 4))\n    {\n        if ((*data_6176e8 & 0x10) != 0)\n        {\n            data_617660 = 2;\n        }\n        else if (r12 != 0)\n        {\n            data_617660 = 3;\n        }\n    }\n    int64_t r12_1 = data_6176d0;\n    char r13_1 = 0;\n    if (r12_1 != 0)\n    {\n        do\n        {\n            int64_t rbp_1 = data_6176c8;\n            if (rbp_1 != 0)\n            {\n                uint64_t r14_3 = *r12_1;\n                do\n                {\n                    if (strcmp(r14_3, *rbp_1) == 0)\n                    {\n                        r13_1 = 1;\n                        error(0, 0, dcgettext(nullptr, \"file system type %s both selecte\u2026\", 5), sub_409de0(r14_3));\n                        break;\n                    }\n                    rbp_1 = *(rbp_1 + 8);\n                } while (rbp_1 != 0);\n            }\n            r12_1 = *(r12_1 + 8);\n        } while (r12_1 != 0);\n    }\n    int32_t rax_15;\n    if ((r12_1 == 0 || (r12_1 != 0 && r13_1 == 0)))\n    {\n        int32_t rax_12 = data_6175e0;\n        int64_t var_f8;\n        if (rax_12 < argc)\n        {\n            int64_t rax_20 = sub_40a560(((argc - rax_12) * 0x90));\n            int64_t r12_2 = data_6175e0;\n            var_f8 = rax_20;\n            while (true)\n            {\n                int32_t rbp_4 = r12_2;\n                if (argc <= r12_2)\n                {\n                    break;\n                }\n                if (__xstat(1, var_158[r12_2], (((r12_2 - data_6175e0) * 0x90) + rax_20)) != 0)\n                {\n                    error(0, *__errno_location(), \"%s\", sub_409c60(0, 3, var_158[r12_2]));\n                    data_6176d8 = 1;\n                    var_158[r12_2] = 0;\n                }\n                else if ((*((rax_20 + ((rbp_4 - data_6175e0) * 0x90)) + 0x18) & 0xf000) != 0x1000)\n                {\n                    int32_t rax_26 = open(var_158[r12_2], 0x100);\n                    if (rax_26 >= 0)\n                    {\n                        close(rax_26);\n                    }\n                }\n                r12_2 = (r12_2 + 1);\n            }\n        }\n        if ((data_6176d0 == 0 && (data_6176c8 == 0 && (data_6176b9 == 0 && data_61737c == 0))))\n        {\n            data_6176ed;\n        }\n        int64_t* rax_13 = sub_40c670();\n        data_6176c0 = rax_13;\n        if (rax_13 == 0)\n        {\n            int32_t rbp_6;\n            char* r12_3;\n            if (data_6175e0 >= argc)\n            {\n            label_402ab9:\n                rbp_6 = 1;\n                r12_3 = &data_4139f9[0x1b];\n            }\n            else\n            {\n                if (data_6176ee != 0)\n                {\n                    goto label_402ab9;\n                }\n                if (data_6176ed != 0)\n                {\n                    goto label_402ab9;\n                }\n                if (data_6176d0 != 0)\n                {\n                    goto label_402ab9;\n                }\n                if (data_6176c8 != 0)\n                {\n                    goto label_402ab9;\n                }\n                rbp_6 = 0;\n                r12_3 = dcgettext(nullptr, \"Warning: \", 5);\n            }\n            error(rbp_6, *__errno_location(), \"%s%s\", r12_3, dcgettext(nullptr, \"cannot read table of mounted fil\u2026\", 5));\n        }\n        if (data_6176dc != 0)\n        {\n            sync();\n        }\n        if (data_617660 > 4)\n        {\n            __assert_fail(\"!\"invalid header_mode\"\", \"src/df.c\", 0x1f0, \"get_field_list\");\n            /* no return */\n        }\n        char const* const rsi_6;\n        switch (data_617660)\n        {\n            case 0:\n            {\n                sub_403e20(0, 0);\n                if (data_6176b9 != 0)\n                {\n                    sub_403e20(1, 0);\n                }\n                sub_403e20(2, 0);\n                sub_403e20(3, 0);\n                sub_403e20(4, 0);\n                rsi_6 = nullptr;\n                break;\n            }\n            case 1:\n            {\n                sub_403e20(0, 0);\n                if (data_6176b9 != 0)\n                {\n                    sub_403e20(1, 0);\n                }\n                sub_403e20(6, 0);\n                sub_403e20(7, 0);\n                sub_403e20(8, 0);\n                sub_403e20(9, 0);\n                sub_403e20(0xa, 0);\n                break;\n            }\n            case 2:\n            {\n                sub_403e20(0, 0);\n                if (data_6176b9 != 0)\n                {\n                    sub_403e20(1, 0);\n                }\n                sub_403e20(2, \"Size\");\n                sub_403e20(3, 0);\n                sub_403e20(4, \"Avail\");\n                rsi_6 = nullptr;\n                break;\n            }\n            case 3:\n            {\n                sub_403e20(0, 0);\n                if (data_6176b9 != 0)\n                {\n                    sub_403e20(1, 0);\n                }\n                sub_403e20(2, 0);\n                sub_403e20(3, 0);\n                sub_403e20(4, 0);\n                rsi_6 = \"Capacity\";\n                break;\n            }\n            case 4:\n            {\n                if (data_617650 == 0)\n                {\n                    sub_404d60();\n                }\n                break;\n            }\n        }\n        if (((data_617660 == 0 || data_617660 == 2) || data_617660 == 3))\n        {\n            sub_403e20(5, rsi_6);\n            sub_403e20(0xa, 0);\n        }\n        sub_403ba0();\n        int32_t rdx_10 = data_6175e0;\n        char* var_138;\n        char* var_f0;\n        int64_t rdx_13;\n        if (rdx_10 >= argc)\n        {\n            char r12_8 = data_6176ee;\n            int64_t rbp_9 = data_6176c0;\n            int32_t rax_82 = 0;\n            while (rbp_9 != 0)\n            {\n                rbp_9 = *(rbp_9 + 0x30);\n                rax_82 = (rax_82 + 1);\n            }\n            int64_t* rax_83;\n            int64_t rcx_14;\n            rax_83 = sub_406460(rax_82, nullptr, 0x4039f0, 0x403a00, 0x403ac0);\n            data_6176f0 = rax_83;\n            if (rax_83 == 0)\n            {\n            label_4038e8:\n                sub_40a7b0();\n                /* no return */\n            }\n            char** r14_10 = data_6176c0;\n            int64_t* rbx_5 = nullptr;\n            if (r14_10 != 0)\n            {\n                var_150 = rbp_9;\n                char** rbp_12 = r14_10;\n                while (true)\n                {\n                    char rax_88 = rbp_12[5];\n                    if (((rax_88 & 2) != 0 && data_6176ed != 0))\n                    {\n                    label_403574:\n                        var_c8 = rbp_12[4];\n                    label_403581:\n                        int64_t* rax_85 = sub_40a560(0x18);\n                        int64_t* rdi_55 = data_6176f0;\n                        rax_85[1] = rbp_12;\n                        int64_t rax_86 = var_c8;\n                        rax_85[2] = rbx_5;\n                        *rax_85 = rax_86;\n                        int64_t rax_87;\n                        rax_87 = sub_406c00(rdi_55, rax_85);\n                        if (rax_87 == 0)\n                        {\n                            goto label_4038e8;\n                        }\n                        rbp_12 = rbp_12[6];\n                        rbx_5 = rax_85;\n                    }\n                    if ((((rax_88 & 2) == 0 || ((rax_88 & 2) != 0 && data_6176ed == 0)) && (rax_88 & 1) == 0))\n                    {\n                    label_4035ec:\n                        char* r13_9 = rbp_12[3];\n                        if (sub_403a10(r13_9) == 0)\n                        {\n                            goto label_403574;\n                        }\n                        char rax_90 = sub_403a60(r13_9);\n                        if (rax_90 != 0)\n                        {\n                            goto label_403574;\n                        }\n                        if (__xstat(1, rbp_12[1], &var_c8) == 0xffffffff)\n                        {\n                            goto label_403574;\n                        }\n                        int64_t rdi_58 = data_6176f0;\n                        int64_t rax_93 = var_c8;\n                        if (rdi_58 == 0)\n                        {\n                            goto label_403581;\n                        }\n                        int64_t var_e8 = rax_93;\n                        void* rax_94 = sub_4061f0(rdi_58, &var_e8);\n                        if (rax_94 == 0)\n                        {\n                            goto label_403581;\n                        }\n                        char** r15_4 = *(rax_94 + 8);\n                        int64_t rdi_59 = r15_4[2];\n                        int64_t r9_10;\n                        if (rdi_59 != 0)\n                        {\n                            r9_10 = rbp_12[2];\n                            if (r9_10 != 0)\n                            {\n                                int64_t rcx_22 = -1;\n                                while (rcx_22 != 0)\n                                {\n                                    bool cond:19_1 = rax_90 != *rdi_59;\n                                    rdi_59 = (rdi_59 + 1);\n                                    rcx_22 = (rcx_22 - 1);\n                                    if ((!cond:19_1))\n                                    {\n                                        break;\n                                    }\n                                }\n                                int64_t rdi_60 = r9_10;\n                                int64_t rsi_29 = ((!rcx_22) - 1);\n                                int64_t rcx_24 = -1;\n                                while (rcx_24 != 0)\n                                {\n                                    bool cond:20_1 = rax_90 != *rdi_60;\n                                    rdi_60 = (rdi_60 + 1);\n                                    rcx_24 = (rcx_24 - 1);\n                                    if ((!cond:20_1))\n                                    {\n                                        break;\n                                    }\n                                }\n                                int64_t rax_98;\n                                rax_98 = rsi_29 < ((!rcx_24) - 1);\n                                var_158 = rax_98;\n                            }\n                        }\n                        if ((rdi_59 == 0 || (rdi_59 != 0 && r9_10 == 0)))\n                        {\n                            var_158 = 0;\n                        }\n                        char* r14_12 = *rbp_12;\n                        if (data_6176b8 == 0)\n                        {\n                            if ((rbp_12[5] & 2) == 0)\n                            {\n                                goto label_4036e7;\n                            }\n                            if ((r15_4[5] & 2) == 0)\n                            {\n                                goto label_4036e7;\n                            }\n                            if (strcmp(*r15_4, r14_12) != 0)\n                            {\n                                goto label_403581;\n                            }\n                            goto label_4036e7;\n                        }\n                    label_4036e7:\n                        char* rax_101;\n                        rax_101 = strchr(r14_12, 0x2f);\n                        char* rax_102;\n                        if (rax_101 != 0)\n                        {\n                            rax_102 = strchr(*r15_4, 0x2f);\n                            if (rax_102 == 0)\n                            {\n                            label_403743:\n                                *(rax_94 + 8) = rbp_12;\n                            }\n                        }\n                        if ((rax_101 == 0 || (rax_101 != 0 && rax_102 != 0)))\n                        {\n                            char** r10_4 = r15_4[1];\n                            int64_t rcx_25 = -1;\n                            int64_t r9_11 = rbp_12[1];\n                            char** rdi_64 = r10_4;\n                            while (rcx_25 != 0)\n                            {\n                                bool cond:21_1 = 0 != *rdi_64;\n                                rdi_64 = (rdi_64 + 1);\n                                rcx_25 = (rcx_25 - 1);\n                                if ((!cond:21_1))\n                                {\n                                    break;\n                                }\n                            }\n                            int64_t rdi_65 = r9_11;\n                            int64_t rsi_31 = ((!rcx_25) - 1);\n                            rcx_14 = -1;\n                            while (rcx_14 != 0)\n                            {\n                                bool cond:22_1 = 0 != *rdi_65;\n                                rdi_65 = (rdi_65 + 1);\n                                rcx_14 = (rcx_14 - 1);\n                                if ((!cond:22_1))\n                                {\n                                    break;\n                                }\n                            }\n                            if ((rsi_31 > ((!rcx_14) - 1) && var_158 == 0))\n                            {\n                                goto label_403743;\n                            }\n                            char var_148;\n                            var_148 = r9_11;\n                            var_158 = r10_4;\n                            int32_t rax_111;\n                            rax_111 = strcmp(*r15_4, r14_12);\n                            if (rax_111 != 0)\n                            {\n                                int32_t rax_112;\n                                rax_112 = strcmp(var_148, var_158);\n                                if (rax_112 == 0)\n                                {\n                                    goto label_403743;\n                                }\n                                goto label_40382e;\n                            }\n                        label_40382e:\n                            r15_4 = rbp_12;\n                        }\n                        rbp_12 = rbp_12[6];\n                        if (r12_8 == 0)\n                        {\n                            rcx_14 = sub_40c620(r15_4);\n                        }\n                    }\n                    if ((((rax_88 & 2) != 0 && data_6176ed != 0) || (((rax_88 & 2) == 0 || ((rax_88 & 2) != 0 && data_6176ed == 0)) && (rax_88 & 1) == 0)))\n                    {\n                        if (rbp_12 == 0)\n                        {\n                            rbp_9 = var_150;\n                            break;\n                        }\n                        continue;\n                    }\n                    if ((((rax_88 & 2) == 0 || ((rax_88 & 2) != 0 && data_6176ed == 0)) && (rax_88 & 1) != 0))\n                    {\n                        if (data_6176ee != 0)\n                        {\n                            goto label_4035ec;\n                        }\n                        if (data_6176ec == 0)\n                        {\n                            goto label_403574;\n                        }\n                        goto label_4035ec;\n                    }\n                }\n            }\n            if (r12_8 == 0)\n            {\n                data_6176c0 = 0;\n                while (rbx_5 != 0)\n                {\n                    int64_t rax_61 = rbx_5[1];\n                    rbx_5 = rbx_5[2];\n                    r12_8 = 1;\n                    *(rax_61 + 0x30) = rbp_9;\n                    rbp_9 = rax_61;\n                }\n                if (r12_8 != 0)\n                {\n                    data_6176c0 = rbp_9;\n                }\n                rcx_14 = sub_4066a0(data_6176f0);\n                data_6176f0 = 0;\n            }\n            for (char** rbx_6 = data_6176c0; rbx_6 != 0; rbx_6 = rbx_6[6])\n            {\n                uint8_t r9_6 = rbx_6[5];\n                int64_t var_160_4 = rcx_14;\n                rcx_14 = sub_403f10(*rbx_6, rbx_6[1], nullptr, nullptr, rbx_6[3], (r9_6 & 1), ((r9_6 >> 1) & 1), nullptr, 1);\n            }\n        }\n        else\n        {\n            int64_t rax_36 = rdx_10;\n            data_6176ec = 1;\n            rdx_13 = (((!rdx_10) + argc) + (rax_36 + 1));\n            int64_t var_128 = (rax_36 + 1);\n            int64_t var_120 = rdx_13;\n            char* rcx_7;\n            while (true)\n            {\n                rcx_7 = var_158[rax_36];\n                var_138 = rcx_7;\n                if (rcx_7 != 0)\n                {\n                    break;\n                }\n            label_402fbd:\n                rax_36 = var_128;\n                if (var_120 == var_128)\n                {\n                    break;\n                }\n                var_128 = (var_128 + 1);\n            }\n            if (rcx_7 != 0)\n            {\n                void* rax_40 = (((rax_36 - data_6175e0) * 0x90) + var_f8);\n                void* var_118 = rax_40;\n                int32_t rax_41 = *(rax_40 + 0x18);\n                var_150 = rax_41;\n                if ((rax_41 & 0xb000) == 0x2000)\n                {\n                    char* rax_43 = canonicalize_file_name(rcx_7);\n                    var_f0 = rax_43;\n                    if (rax_43 == 0)\n                    {\n                        goto label_4034c4;\n                    }\n                    if (*rax_43 != 0x2f)\n                    {\n                        rax_43 = rcx_7;\n                    }\n                    var_150 = rax_43;\n                    goto label_402c43;\n                }\n            label_402dad:\n                char* rax_51;\n                int32_t r9_2;\n                rax_51 = canonicalize_file_name(var_138);\n                int64_t* rbx_3 = data_6176c0;\n                char const* const rdi_32;\n                int64_t* r12_7;\n                if ((rax_51 != 0 && *rax_51 == 0x2f))\n                {\n                    int64_t rcx_18 = -1;\n                    char* rdi_45 = rax_51;\n                    while (rcx_18 != 0)\n                    {\n                        bool cond:9_1 = 0 != *rdi_45;\n                        rdi_45 = &rdi_45[1];\n                        rcx_18 = (rcx_18 - 1);\n                        if ((!cond:9_1))\n                        {\n                            break;\n                        }\n                    }\n                    int64_t r14_9 = ((!rcx_18) - 1);\n                    if (rbx_3 == 0)\n                    {\n                        free(rax_51);\n                    label_402f7f:\n                        char* rax_55;\n                        int64_t rsi_13;\n                        rax_55 = sub_404ed0(var_138, var_118);\n                        if (rax_55 == 0)\n                        {\n                            goto label_402fbd;\n                        }\n                        int64_t var_160_2 = rsi_13;\n                        sub_403f10(nullptr, rax_55, var_138, nullptr, nullptr, 0, 0, nullptr, 0);\n                        rdx_13 = free(rax_55);\n                        goto label_402fbd;\n                    }\n                    int64_t* rbp_11 = rbx_3;\n                    int64_t r15_3 = 0;\n                    r12_7 = nullptr;\n                    bool c_3 = false;\n                    bool z_2 = (r9_2 ^ r9_2) == 0;\n                    do\n                    {\n                        char* rsi_22 = rbp_11[3];\n                        int64_t rcx_19 = 5;\n                        char const* const rdi_46 = \"lofs\";\n                        while (rcx_19 != 0)\n                        {\n                            char temp6_1 = *rsi_22;\n                            char const temp7_1 = *rdi_46;\n                            c_3 = temp6_1 < temp7_1;\n                            z_2 = temp6_1 == temp7_1;\n                            rsi_22 = &rsi_22[1];\n                            rdi_46 = &rdi_46[1];\n                            rcx_19 = (rcx_19 - 1);\n                            if ((!z_2))\n                            {\n                                break;\n                            }\n                        }\n                        int64_t rax_73;\n                        rax_73 = ((!z_2) && (!c_3));\n                        rax_73 = (rax_73 - 0);\n                        if ((rax_73 != 0 && ((r12_7 == 0 || (r12_7 != 0 && (r12_7[5] & 1) != 0)) || ((r12_7 != 0 && (r12_7[5] & 1) == 0) && (rbp_11[5] & 1) == 0))))\n                        {\n                            char* r8_9 = rbp_11[1];\n                            int64_t rcx_20 = -1;\n                            char* rdi_47 = r8_9;\n                            while (rcx_20 != 0)\n                            {\n                                bool cond:15_1 = 0 != *rdi_47;\n                                rdi_47 = &rdi_47[1];\n                                rcx_20 = (rcx_20 - 1);\n                                if ((!cond:15_1))\n                                {\n                                    break;\n                                }\n                            }\n                            int64_t rcx_21 = (!rcx_20);\n                            uint64_t r10_2 = (rcx_21 - 1);\n                            if ((r10_2 >= r15_3 && r14_9 >= r10_2))\n                            {\n                                if (r10_2 == 1)\n                                {\n                                    r15_3 = 1;\n                                    r12_7 = rbp_11;\n                                }\n                                else if ((r14_9 == r10_2 || (r14_9 != r10_2 && rax_51[(rcx_21 - 1)] == 0x2f)))\n                                {\n                                    var_150 = r10_2;\n                                    int64_t r10_3 = var_150;\n                                    int32_t temp8_1 = strncmp(r8_9, rax_51, r10_2);\n                                    bool cond:17_1 = temp8_1 == 0;\n                                    if (temp8_1 == 0)\n                                    {\n                                        r15_3 = r10_3;\n                                    }\n                                    if (cond:17_1)\n                                    {\n                                        r12_7 = rbp_11;\n                                    }\n                                }\n                            }\n                        }\n                        rbp_11 = rbp_11[6];\n                        c_3 = false;\n                        z_2 = (rbp_11 & rbp_11) == 0;\n                    } while ((!z_2));\n                    rdi_32 = free(rax_51);\n                    if (r12_7 == 0)\n                    {\n                        goto label_402ddb;\n                    }\n                    int32_t rax_74;\n                    rax_74 = __xstat(1, r12_7[1], &var_c8);\n                    if (rax_74 != 0)\n                    {\n                        goto label_402ddb;\n                    }\n                    if (var_c8 != *var_118)\n                    {\n                        goto label_402ddb;\n                    }\n                    goto label_403098;\n                }\n                rdi_32 = free(rax_51);\n                if (rbx_3 == 0)\n                {\n                    goto label_402f7f;\n                }\n            label_402ddb:\n                r12_7 = nullptr;\n                do\n                {\n                    int64_t rax_52 = rbx_3[4];\n                    if (rax_52 == -1)\n                    {\n                        int32_t rax_57;\n                        rax_57 = __xstat(1, rbx_3[1], &var_c8);\n                        if (rax_57 == 0)\n                        {\n                            rax_52 = var_c8;\n                            rbx_3[4] = rax_52;\n                        }\n                        else\n                        {\n                            int32_t* rax_60;\n                            rax_60 = __errno_location();\n                            if (*rax_60 == 5)\n                            {\n                                rdi_32 = error(0, *rax_60, \"%s\", sub_409c60(0, 3, rbx_3[1]));\n                                data_6176d8 = 1;\n                            }\n                            rbx_3[4] = -2;\n                            rax_52 = -2;\n                        }\n                    }\n                    int64_t temp0_1 = *var_118;\n                    bool c_2 = temp0_1 < rax_52;\n                    bool z_1 = temp0_1 == rax_52;\n                    if (z_1)\n                    {\n                        char* rsi_10 = rbx_3[3];\n                        int64_t rcx_10 = 5;\n                        rdi_32 = \"lofs\";\n                        while (rcx_10 != 0)\n                        {\n                            char temp4_1 = *rsi_10;\n                            char const temp5_1 = *rdi_32;\n                            c_2 = temp4_1 < temp5_1;\n                            z_1 = temp4_1 == temp5_1;\n                            rsi_10 = &rsi_10[1];\n                            rdi_32 = &rdi_32[1];\n                            rcx_10 = (rcx_10 - 1);\n                            if ((!z_1))\n                            {\n                                break;\n                            }\n                        }\n                        rax_52 = ((!z_1) && (!c_2));\n                        rax_52 = (rax_52 - 0);\n                        if ((rax_52 != 0 && ((r12_7 == 0 || (r12_7 != 0 && (r12_7[5] & 1) != 0)) || ((r12_7 != 0 && (r12_7[5] & 1) == 0) && (rbx_3[5] & 1) == 0))))\n                        {\n                            int32_t rax_53;\n                            rax_53 = __xstat(1, rbx_3[1], &var_c8);\n                            if ((rax_53 != 0 || (rax_53 == 0 && var_c8 != rbx_3[4])))\n                            {\n                                rbx_3[4] = -2;\n                            }\n                            if ((rax_53 == 0 && var_c8 == rbx_3[4]))\n                            {\n                                r12_7 = rbx_3;\n                            }\n                        }\n                    }\n                    rbx_3 = rbx_3[6];\n                } while (rbx_3 != 0);\n                if (r12_7 == 0)\n                {\n                    goto label_402f7f;\n                }\n            label_403098:\n                uint8_t r9_4 = r12_7[5];\n                char const* const var_160_3 = rdi_32;\n                rdx_13 = sub_403f10(*r12_7, r12_7[1], var_138, var_138, r12_7[3], (r9_4 & 1), ((r9_4 >> 1) & 1), nullptr, 0);\n                goto label_402fbd;\n            }\n        }\n        if (data_6176dd != 0)\n        {\n            if (data_6176b8 != 0)\n            {\n                void* const rsi_19 = &data_413461;\n                int64_t var_160_5 = rdx_13;\n                if (data_61734c == 0)\n                {\n                    rsi_19 = \"total\";\n                }\n                sub_403f10(\"total\", rsi_19, nullptr, nullptr, nullptr, 0, 0, &data_617680, 0);\n            }\n            if (data_617640 != 0)\n            {\n                int64_t r13_7 = 0;\n                do\n                {\n                    int64_t rax_68 = data_617650;\n                    if (rax_68 != 0)\n                    {\n                        int64_t r12_9 = (r13_7 << 3);\n                        int64_t rbx_7 = 0;\n                        char* r14_7 = **(data_617648 + (r13_7 << 3));\n                        while (true)\n                        {\n                            int64_t rbp_10 = (rbx_7 << 3);\n                            int32_t rcx_15;\n                            rcx_15 = rbx_7 == (rax_68 - 1);\n                            void* rax_66 = *(data_617658 + (rbx_7 << 3));\n                            var_c8 = *(rax_66 + 0x20);\n                            char* rax_67 = sub_407f30(r14_7, &var_c8, *(rax_66 + 0x28), (rcx_15 << 3));\n                            FILE* rsi_21 = stdout;\n                            char* rdi_41 = rax_67;\n                            if (rax_67 == 0)\n                            {\n                                rdi_41 = *(*(data_617648 + r12_9) + (rbx_7 << 3));\n                            }\n                            fputs_unlocked(rdi_41, rsi_21);\n                            rbx_7 = (rbx_7 + 1);\n                            free(rax_67);\n                            rax_68 = data_617650;\n                            if (rbx_7 >= rax_68)\n                            {\n                                break;\n                            }\n                            r14_7 = *((*(data_617648 + r12_9) + rbp_10) + 8);\n                            if (rbx_7 != 0)\n                            {\n                                uint64_t* const rdi_43 = stdout;\n                                char* rdx_25 = stdout[5];\n                                if (rdx_25 >= stdout[6])\n                                {\n                                    __overflow(rdi_43, 0x20);\n                                    rax_68 = data_617650;\n                                }\n                                else\n                                {\n                                    stdout[5] = &rdx_25[1];\n                                    *rdx_25 = 0x20;\n                                }\n                            }\n                        }\n                    }\n                    uint64_t* const rdi_44 = stdout;\n                    char* rax_71 = stdout[5];\n                    if (rax_71 >= stdout[6])\n                    {\n                        __overflow(rdi_44, 0xa);\n                    }\n                    else\n                    {\n                        stdout[5] = &rax_71[1];\n                        *rax_71 = 0xa;\n                    }\n                    r13_7 = (r13_7 + 1);\n                } while (r13_7 < data_617640);\n            }\n        }\n        else if (data_6176d8 == 0)\n        {\n            error(1, 0, dcgettext(nullptr, \"no file systems processed\", 5));\n        label_4034c4:\n            var_150 = var_138;\n        label_402c43:\n            int64_t* rbp_7 = data_6176c0;\n            if (rbp_7 == 0)\n            {\n                free(var_f0);\n            }\n            else\n            {\n                int64_t* var_108_1 = nullptr;\n                char r14_5 = 0;\n                uint64_t var_130_1 = -1;\n                char var_148_1 = 0;\n                while (true)\n                {\n                    char* r12_4 = *rbp_7;\n                    char* rax_44 = canonicalize_file_name(r12_4);\n                    if ((rax_44 != 0 && *rax_44 == 0x2f))\n                    {\n                        r12_4 = rax_44;\n                    }\n                    if (strcmp(var_150, r12_4) != 0)\n                    {\n                        goto label_402d77;\n                    }\n                    int64_t* r14_6 = data_6176c0;\n                    char* rbx_2 = rbp_7[1];\n                    int64_t* r15_1 = nullptr;\n                    if (r14_6 == 0)\n                    {\n                        goto label_402fef;\n                    }\n                    do\n                    {\n                        if (strcmp(r14_6[1], rbx_2) == 0)\n                        {\n                            r15_1 = r14_6;\n                        }\n                        r14_6 = r14_6[6];\n                    } while (r14_6 != 0);\n                    if (r15_1 == 0)\n                    {\n                        goto label_402fef;\n                    }\n                    char* rax_47 = canonicalize_file_name(*r15_1);\n                    char* rcx_8 = rax_47;\n                    char* rcx_9;\n                    if ((rax_47 != 0 && *rax_47 == 0x2f))\n                    {\n                    label_402d20:\n                        rcx_9 = rcx_8;\n                        if (strcmp(rcx_8, r12_4) != 0)\n                        {\n                            r14_5 = 1;\n                            goto label_402d6f;\n                        }\n                        rbx_2 = rbp_7[1];\n                        goto label_402d3e;\n                    }\n                    free(rcx_8);\n                    char* rax_48 = sub_40a790(*r15_1);\n                    rcx_8 = rax_48;\n                    if (rax_48 != 0)\n                    {\n                        goto label_402d20;\n                    }\n                    rbx_2 = rbp_7[1];\n                label_402fef:\n                    rcx_9 = nullptr;\n                label_402d3e:\n                    uint64_t rax_50 = strlen(rbx_2);\n                    char r12_6 = (var_148_1 ^ 1);\n                    bool r8_5 = var_130_1 > rax_50;\n                    r14_5 = (r12_6 | r8_5);\n                    int64_t r10_1;\n                    if (r14_5 != 0)\n                    {\n                        if (__xstat(1, rbx_2, &var_c8) != 0)\n                        {\n                            if (r12_6 == 0)\n                            {\n                            label_40333a:\n                                r14_5 = var_148_1;\n                                goto label_403057;\n                            }\n                            if (r8_5 == 0)\n                            {\n                                goto label_40333a;\n                            }\n                            r14_5 = 0;\n                        }\n                        if (rax_50 != 1)\n                        {\n                            var_130_1 = rax_50;\n                            var_108_1 = rbp_7;\n                        label_403057:\n                            var_148_1 = r14_5;\n                            r14_5 = 0;\n                            goto label_402d6f;\n                        }\n                        free(rcx_9);\n                        free(rax_44);\n                        r10_1 = free(var_f0);\n                        var_108_1 = rbp_7;\n                    }\n                    else\n                    {\n                        var_148_1 = 1;\n                    label_402d6f:\n                        free(rcx_9);\n                    label_402d77:\n                        free(rax_44);\n                        rbp_7 = rbp_7[6];\n                        if (rbp_7 != 0)\n                        {\n                            continue;\n                        }\n                        else\n                        {\n                            r10_1 = free(var_f0);\n                            if (var_108_1 == 0)\n                            {\n                                break;\n                            }\n                        }\n                    }\n                    uint8_t r9_8 = var_108_1[5];\n                    int64_t var_160_6 = r10_1;\n                    rdx_13 = sub_403f10(*var_108_1, var_108_1[1], var_138, nullptr, var_108_1[3], (r9_8 & 1), ((r9_8 >> 1) & 1), nullptr, 0);\n                    goto label_402fbd;\n                }\n                if (r14_5 != 0)\n                {\n                    rdx_13 = error(0, 0, dcgettext(nullptr, \"cannot access %s: over-mounted b\u2026\", 5), sub_409b90(4, var_138));\n                    data_6176d8 = 1;\n                    goto label_402fbd;\n                }\n            }\n            goto label_402dad;\n        }\n        rax_15 = data_6176d8;\n    }\n    if ((r12_1 != 0 && r13_1 != 0))\n    {\n        rax_15 = 1;\n    }\n    return rax_15;\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x403910",
            "funcEndAddr": "0x40393a",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40393b",
            "funcStartAddr": "0x40393b",
            "funcEndAddr": "0x40395a",
            "decompiledFuncCode": "void sub_40393b()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_40395a",
            "funcStartAddr": "0x40395a",
            "funcEndAddr": "0x403991",
            "decompiledFuncCode": "int64_t sub_40395a()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_403991",
            "funcStartAddr": "0x403991",
            "funcEndAddr": "0x4039e8",
            "decompiledFuncCode": "void sub_403991()\n{\n    if (data_617628 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_617630;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_617630 = (rax_1 + 1);\n        *(0x616e40 + ((rax_1 + 1) << 3))();\n    }\n    sub_40393b();\n    data_617628 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_4039e8",
            "funcStartAddr": "0x4039e8",
            "funcEndAddr": "0x4039ed",
            "decompiledFuncCode": "int64_t j_sub_40395a()\n{\n    /* tailcall */\n    return sub_40395a();\n}\n\n"
        },
        {
            "funcName": "sub_4039f0",
            "funcStartAddr": "0x4039f0",
            "funcEndAddr": "0x4039fc",
            "decompiledFuncCode": "uint64_t sub_4039f0(int64_t* arg1, int64_t arg2)\n{\n    return (COMBINE(0, *arg1) % arg2);\n}\n\n"
        },
        {
            "funcName": "sub_403a00",
            "funcStartAddr": "0x403a00",
            "funcEndAddr": "0x403a0a",
            "decompiledFuncCode": "int64_t sub_403a00(int64_t* arg1, int64_t* arg2)\n{\n    int64_t rax;\n    rax = *arg1 == *arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_403a10",
            "funcStartAddr": "0x403a10",
            "funcEndAddr": "0x403a5e",
            "decompiledFuncCode": "uint64_t sub_403a10(char* arg1)\n{\n    int64_t rbx = data_6176d0;\n    int64_t r12;\n    r12 = arg1 == 0;\n    r12 = (r12 | rbx == 0);\n    if (r12 == 0)\n    {\n        do\n        {\n            if (strcmp(arg1, *rbx) == 0)\n            {\n                return 1;\n            }\n            rbx = *(rbx + 8);\n        } while (rbx != 0);\n    }\n    return r12;\n}\n\n"
        },
        {
            "funcName": "sub_403a60",
            "funcStartAddr": "0x403a60",
            "funcEndAddr": "0x403abe",
            "decompiledFuncCode": "uint64_t sub_403a60(char* arg1)\n{\n    int64_t rbx = data_6176c8;\n    int64_t r12;\n    r12 = arg1 == 0;\n    r12 = (r12 | rbx == 0);\n    if (r12 != 0)\n    {\n        return 0;\n    }\n    do\n    {\n        if (strcmp(arg1, *rbx) == 0)\n        {\n            return 1;\n        }\n        rbx = *(rbx + 8);\n    } while (rbx != 0);\n    return r12;\n}\n\n"
        },
        {
            "funcName": "sub_403ac0",
            "funcStartAddr": "0x403ac0",
            "funcEndAddr": "0x403ac5",
            "decompiledFuncCode": "int64_t sub_403ac0(int64_t arg1)\n{\n    /* tailcall */\n    return free(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_403ad0",
            "funcStartAddr": "0x403ad0",
            "funcEndAddr": "0x403b48",
            "decompiledFuncCode": "int64_t sub_403ad0()\n{\n    int64_t rdi = data_617648;\n    int64_t rsi = (data_617640 + 1);\n    data_617640 = rsi;\n    uint64_t rax_1;\n    rax_1 = (rsi >> 0x3d) != 0;\n    int64_t rsi_1 = (rsi << 3);\n    if ((rsi_1 >= 0 && rax_1 == 0))\n    {\n        int64_t rax_3 = sub_40a5c0(rdi, rsi_1);\n        int64_t rdi_1 = data_617650;\n        int64_t rdx_1 = data_617640;\n        data_617648 = rax_3;\n        int64_t* rbx_1 = ((rax_3 + (rdx_1 << 3)) - 8);\n        uint64_t rax_5;\n        rax_5 = (rdi_1 >> 0x3d) != 0;\n        int64_t rdi_2 = (rdi_1 << 3);\n        if ((rdi_2 >= 0 && rax_5 == 0))\n        {\n            int64_t rax_7 = sub_40a560(rdi_2);\n            *rbx_1 = rax_7;\n            return rax_7;\n        }\n    }\n    sub_40a7b0();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_403b50",
            "funcStartAddr": "0x403b50",
            "funcEndAddr": "0x403b91",
            "decompiledFuncCode": "char* sub_403b50(char* arg1)\n{\n    uint64_t rbx = *arg1;\n    if (rbx != 0)\n    {\n        uint16_t** rax_1 = __ctype_b_loc();\n        char* rdx_1 = arg1;\n        do\n        {\n            if ((*rax_1[rbx] & 2) != 0)\n            {\n                *rdx_1 = 0x3f;\n            }\n            rdx_1 = &rdx_1[1];\n            rbx = *rdx_1;\n        } while (rbx != 0);\n    }\n    return arg1;\n}\n\n"
        },
        {
            "funcName": "sub_403ba0",
            "funcStartAddr": "0x403ba0",
            "funcEndAddr": "0x403e20",
            "decompiledFuncCode": "int64_t sub_403ba0()\n{\n    int64_t rax = sub_403ad0();\n    int64_t rdx = data_617658;\n    if (data_617650 != 0)\n    {\n        int64_t rbp_1 = 0;\n        bool cond:1_1;\n        do\n        {\n            int64_t rbx_1 = (rbp_1 << 3);\n            char* var_2c0 = nullptr;\n            int64_t r13_2 = (rdx + rbx_1);\n            char* r14_1 = dcgettext(nullptr, *(*r13_2 + 0x18), 5);\n            char* rdi_2;\n            if (**r13_2 != 2)\n            {\n            label_403be3:\n                char* rax_1 = strdup(r14_1);\n                var_2c0 = rax_1;\n                rdi_2 = rax_1;\n            }\n            else\n            {\n                int32_t rax_11 = data_617660;\n                int32_t r9_1 = data_6176e8;\n                if (rax_11 == 4)\n                {\n                    r9_1 = data_6176e8;\n                    if ((r9_1 & 0x10) != 0)\n                    {\n                        goto label_403be3;\n                    }\n                }\n                void var_2b8;\n                if ((rax_11 == 0 || rax_11 == 4))\n                {\n                    int64_t rdi_7 = data_6176e0;\n                    int32_t r10_2 = (r9_1 & 0x124);\n                    int64_t r8_1 = rdi_7;\n                    int64_t rsi_4 = rdi_7;\n                    uint64_t rax_19;\n                    int64_t rsi_5;\n                    do\n                    {\n                        int64_t rax_17;\n                        int64_t rdx_5;\n                        rdx_5 = HIGHD(((rsi_4 >> 3) * 0x20c49ba5e353f7cf));\n                        rax_17 = LOWD(((rsi_4 >> 3) * 0x20c49ba5e353f7cf));\n                        int32_t rax_18 = r8_1;\n                        r8_1 = (r8_1 >> 0xa);\n                        rax_19 = (rax_18 & 0x3ff);\n                        rsi_5 = (rsi_4 - ((rdx_5 >> 4) * 0x3e8));\n                        rsi_4 = (rdx_5 >> 4);\n                    } while ((rsi_5 | rax_19) == 0);\n                    int64_t rdx_7;\n                    rdx_7 = rsi_5 == 0;\n                    rax_19 = rax_19 == 0;\n                    bool cond:2_1 = rdx_7 <= rax_19;\n                    int32_t rdx_8;\n                    if (rdx_7 < rax_19)\n                    {\n                        rdx_8 = (r10_2 | 0xb8);\n                    }\n                    else if (cond:2_1)\n                    {\n                        rdx_8 = (r10_2 | 0x98);\n                    }\n                    else\n                    {\n                        rdx_8 = ((r9_1 & 0x104) | 0x98);\n                    }\n                    if (((rdx_7 >= rax_19 && (!cond:2_1)) || ((rdx_7 < rax_19 || (rdx_7 >= rax_19 && cond:2_1)) && (rdx_8 & 0x20) == 0)))\n                    {\n                        *rdx_8[1] = (*rdx_8[1] | 1);\n                    }\n                    sub_406fb0(rdi_7, &var_2b8, rdx_8, 1, 1);\n                    int16_t top = (top - 1);\n                    /* unimplemented  {call sub_406fb0} */;\n                    dcgettext(nullptr, \"blocks\", 5);\n                }\n                if ((rax_11 != 0 && rax_11 != 4))\n                {\n                    if (rax_11 != 3)\n                    {\n                        goto label_403be3;\n                    }\n                    sub_407b40(data_6176e0, &var_2b8);\n                }\n                if (sub_40acf0(&var_2c0, dcgettext(nullptr, \"%s-%s\", 5), 0) == 0xffffffff)\n                {\n                    var_2c0 = nullptr;\n                }\n                rdi_2 = var_2c0;\n            }\n            if (rdi_2 == 0)\n            {\n                sub_40a7b0();\n                /* no return */\n            }\n            sub_403b50(rdi_2);\n            char* rdi_3 = var_2c0;\n            *(*((data_617648 + (data_617640 << 3)) - 8) + rbx_1) = rdi_3;\n            void* rcx_1;\n            if (*(*(data_617658 + rbx_1) + 0x20) <= sub_408190(rdi_3, 0))\n            {\n                rdx = data_617658;\n                rax = sub_408190(var_2c0, 0);\n                rcx_1 = *(rdx + rbx_1);\n            }\n            else\n            {\n                rdx = data_617658;\n                rcx_1 = *(rdx + rbx_1);\n                rax = *(rcx_1 + 0x20);\n            }\n            rbp_1 = (rbp_1 + 1);\n            cond:1_1 = data_617650 <= rbp_1;\n            *(rcx_1 + 0x20) = rax;\n        } while ((!cond:1_1));\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_403e20",
            "funcStartAddr": "0x403e20",
            "funcEndAddr": "0x403ecc",
            "decompiledFuncCode": "void* sub_403e20(int32_t arg1, int64_t arg2)\n{\n    int64_t rdi = data_617658;\n    int64_t rsi = (data_617650 + 1);\n    data_617650 = rsi;\n    uint64_t rax_2;\n    rax_2 = (rsi >> 0x3d) != 0;\n    int64_t rsi_1 = (rsi << 3);\n    if ((rsi_1 >= 0 && rax_2 == 0))\n    {\n        int64_t rax_4 = sub_40a5c0(rdi, rsi_1);\n        int64_t rdi_1 = arg1;\n        int64_t rcx = data_617650;\n        data_617658 = rax_4;\n        void* rdx_2 = ((rdi_1 * 0x30) + 0x617320);\n        *((rax_4 + (rcx << 3)) - 8) = rdx_2;\n        if (arg2 != 0)\n        {\n            *(rdx_2 + 0x18) = arg2;\n        }\n        void* rax_7 = ((rdi_1 * 0x30) + 0x617320);\n        if (*(rax_7 + 0x2c) != 0)\n        {\n            __assert_fail(\"!\"field used\"\", \"src/df.c\", 0x164, \"alloc_field\");\n            /* no return */\n        }\n        *(rax_7 + 0x2c) = 1;\n        return rax_7;\n    }\n    sub_40a7b0();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_403ed0",
            "funcStartAddr": "0x403ed0",
            "funcEndAddr": "0x403f0f",
            "decompiledFuncCode": "void* sub_403ed0(char arg1, int64_t arg2, int64_t arg3)\n{\n    int32_t rdx = data_6176e8;\n    char* rsi_1 = (arg3 + arg1);\n    int64_t rcx;\n    int64_t r8;\n    if (arg1 != 0)\n    {\n        void* rax_1;\n        int80_t st0_1;\n        st0_1 = sub_406fb0((-arg2), rsi_1, rdx, rcx, r8);\n        *(rax_1 - 1) = 0x2d;\n        return (rax_1 - 1);\n    }\n    /* tailcall */\n    return sub_406fb0(arg2, rsi_1, rdx, rcx, r8);\n}\n\n"
        },
        {
            "funcName": "sub_403f10",
            "funcStartAddr": "0x403f10",
            "funcEndAddr": "0x40492c",
            "decompiledFuncCode": "uint64_t sub_403f10(char* arg1, char* arg2, char* arg3, char* arg4, char* arg5, \n    char arg6, char arg7, int128_t* arg8, int32_t arg9)\n{\n    char* r15 = arg3;\n    char* r13 = arg5;\n    char* r12 = arg4;\n    char* rbp = arg1;\n    uint64_t rax = arg9;\n    char var_3a0 = rax;\n    if ((arg7 == 0 || (arg7 != 0 && data_6176ed == 0)))\n    {\n        if (arg6 == 0)\n        {\n        label_403f73:\n            rax = sub_403a10(r13);\n            if (rax != 0)\n            {\n                rax = sub_403a60(r13);\n                if (rax == 0)\n                {\n                    bool var_399_1 = arg8 == 0;\n                    rax = var_399_1;\n                    if (((arg2 != 0 && rax != 0) && *arg2 == 0x2f))\n                    {\n                        if (r12 == 0)\n                        {\n                            r12 = arg2;\n                        }\n                        goto label_403fd0;\n                    }\n                    if ((arg2 == 0 || (arg2 != 0 && rax == 0)))\n                    {\n                        if (r12 == 0)\n                        {\n                            r12 = arg2;\n                            if (arg2 == 0)\n                            {\n                                r12 = rbp;\n                            }\n                        }\n                        char* var_3b8;\n                        int128_t var_388;\n                        int128_t var_378;\n                        int128_t var_368;\n                        uint64_t var_358;\n                        if (arg8 != 0)\n                        {\n                            var_388 = *arg8;\n                            int128_t zmm5 = arg8[2];\n                            rax = arg8[3];\n                            var_378 = arg8[1];\n                            var_3b8 = zmm5;\n                            var_368 = zmm5;\n                            var_358 = rax;\n                            if (*var_388[8] != 0)\n                            {\n                                goto label_40401c;\n                            }\n                            if (data_6176ee != 0)\n                            {\n                                goto label_40401c;\n                            }\n                            if (data_6176ec != 0)\n                            {\n                                goto label_40401c;\n                            }\n                        }\n                        else\n                        {\n                        label_403fd0:\n                            rax = sub_40b070(r12, rbp, &var_388);\n                            uint64_t var_308;\n                            uint64_t var_2c8;\n                            if (rax != 0)\n                            {\n                                int32_t* rax_43 = __errno_location();\n                                if (var_3a0 == 0)\n                                {\n                                label_4046a8:\n                                    rax = error(0, *rax_43, \"%s\", sub_409c60(0, 3, r12));\n                                    data_6176d8 = 1;\n                                }\n                                else\n                                {\n                                    rax = *rax_43;\n                                    if ((rax != 0xd && rax != 2))\n                                    {\n                                        goto label_4046a8;\n                                    }\n                                    if (data_6176ee != 0)\n                                    {\n                                        var_368 = 0;\n                                        r13 = &data_413461;\n                                        var_358 = -1;\n                                        *var_368[8] = -1;\n                                        *var_378[8] = -1;\n                                        var_378 = -1;\n                                        *var_388[8] = -1;\n                                        var_388 = -1;\n                                    label_404015:\n                                        data_6176dd = 1;\n                                    label_40401c:\n                                        sub_403ad0();\n                                        if (rbp == 0)\n                                        {\n                                            rbp = &data_413461;\n                                        }\n                                        if (r15 == 0)\n                                        {\n                                            r15 = &data_413461;\n                                        }\n                                        char* rax_1 = sub_40a790(rbp);\n                                        var_3b8 = rax_1;\n                                        if (var_3a0 != 0)\n                                        {\n                                            uint64_t rax_2 = strlen(rax_1);\n                                            if ((rax_2 > 0x24 && strspn(&rax_1[(rax_2 - 0x24)], \"-0123456789abcdefABCDEF\") == 0x24))\n                                            {\n                                                void* rax_46 = sub_405250(var_3b8, 0);\n                                                if (rax_46 != 0)\n                                                {\n                                                    free(var_3b8);\n                                                    var_3b8 = rax_46;\n                                                }\n                                            }\n                                        }\n                                        int64_t rsi_1 = *var_368[8];\n                                        if (r13 == 0)\n                                        {\n                                            r13 = &data_413461;\n                                        }\n                                        char var_2e8_1 = 0;\n                                        int64_t var_300_1 = 1;\n                                        var_308 = 1;\n                                        int64_t var_2f8_1 = rsi_1;\n                                        uint64_t var_2e0_1 = var_358;\n                                        uint64_t var_2f0_1 = var_358;\n                                        int64_t var_2d8_1 = -1;\n                                        char var_2d0_1 = 0;\n                                        if ((rsi_1 <= -3 && var_358 <= -3))\n                                        {\n                                            int64_t var_2d8_2 = (rsi_1 - var_358);\n                                            bool var_2d0_2 = rsi_1 < var_358;\n                                        }\n                                        int64_t r8 = *var_378[8];\n                                        int64_t var_318_1 = -1;\n                                        uint64_t r9 = var_388;\n                                        int64_t rcx = *var_388[8];\n                                        char var_310_1 = 0;\n                                        int64_t rdi_6 = var_378;\n                                        int64_t var_340_1 = data_6176e0;\n                                        int64_t rax_6;\n                                        rax_6 = r8 <= -3;\n                                        rax_6 = (rax_6 & var_368);\n                                        uint64_t var_348 = r9;\n                                        int64_t var_338_1 = rcx;\n                                        int64_t var_330_1 = r8;\n                                        int64_t var_320_1 = rdi_6;\n                                        char var_328_1 = rax_6;\n                                        if ((rcx <= -3 && rdi_6 <= -3))\n                                        {\n                                            int64_t var_318_2 = (rcx - rdi_6);\n                                            bool var_310_2 = rcx < rdi_6;\n                                        }\n                                        if ((data_6176b8 != 0 && var_399_1 != 0))\n                                        {\n                                            if (rsi_1 <= -3)\n                                            {\n                                                data_6176a8 = (data_6176a8 + rsi_1);\n                                            }\n                                            if (var_358 <= -3)\n                                            {\n                                                data_6176b0 = (data_6176b0 + var_358);\n                                            }\n                                            if (rcx <= -3)\n                                            {\n                                                data_617688 = (data_617688 + (rcx * r9));\n                                            }\n                                            if (rdi_6 <= -3)\n                                            {\n                                                data_617690 = (data_617690 + (rdi_6 * r9));\n                                            }\n                                            if (r8 <= -3)\n                                            {\n                                                char rcx_11 = data_6176a0;\n                                                int64_t r8_3 = (r8 * r9);\n                                                int64_t rdx_16 = data_617698;\n                                                if (rcx_11 == rax_6)\n                                                {\n                                                    data_617698 = (r8_3 + rdx_16);\n                                                }\n                                                else\n                                                {\n                                                    int64_t rdx_17 = (-rdx_16);\n                                                    if (rcx_11 == 0)\n                                                    {\n                                                        rdx_17 = rdx_16;\n                                                    }\n                                                    int64_t rsi_11 = (-r8_3);\n                                                    if (rax_6 != 0)\n                                                    {\n                                                        r8_3 = rsi_11;\n                                                    }\n                                                    if (rdx_17 <= r8_3)\n                                                    {\n                                                        data_6176a0 = rax_6;\n                                                        rcx_11 = rax_6;\n                                                        data_617698 = (r8_3 - rdx_17);\n                                                    }\n                                                    else\n                                                    {\n                                                        data_617698 = (rdx_17 - r8_3);\n                                                    }\n                                                    if (rcx_11 != 0)\n                                                    {\n                                                        data_617698 = (-data_617698);\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        int64_t rbx_2 = 0;\n                                        int64_t rdx_2 = data_617658;\n                                        if (data_617650 != 0)\n                                        {\n                                            while (true)\n                                            {\n                                                int32_t* rdx_3 = *(rdx_2 + (rbx_2 << 3));\n                                                int64_t rbp_1 = (rbx_2 << 3);\n                                                int32_t rax_7 = rdx_3[4];\n                                                uint64_t* rcx_1;\n                                                if (rax_7 == 1)\n                                                {\n                                                    rcx_1 = &var_308;\n                                                }\n                                                else if (rax_7 == 0)\n                                                {\n                                                    rcx_1 = &var_348;\n                                                }\n                                                else\n                                                {\n                                                    if (rax_7 != 2)\n                                                    {\n                                                        __assert_fail(\"!\"bad field_type\"\", \"src/df.c\", 0x435, \"get_dev\");\n                                                        /* no return */\n                                                    }\n                                                    rcx_1 = nullptr;\n                                                }\n                                                if (*rdx_3 > 0xb)\n                                                {\n                                                    __assert_fail(\"!\"unhandled field\"\", \"src/df.c\", 0x49b, \"get_dev\");\n                                                    /* no return */\n                                                }\n                                                char* var_390;\n                                                char rdx_5;\n                                                int64_t rsi_2;\n                                                char* rdi_7;\n                                                char* rdi_8;\n                                                switch (*rdx_3)\n                                                {\n                                                    case 0:\n                                                    {\n                                                        char* rax_22 = sub_40a790(var_3b8);\n                                                        rdi_8 = rax_22;\n                                                        var_390 = rax_22;\n                                                        break;\n                                                    }\n                                                    case 1:\n                                                    {\n                                                        char* rax_21 = sub_40a790(r13);\n                                                        rdi_8 = rax_21;\n                                                        var_390 = rax_21;\n                                                        break;\n                                                    }\n                                                    case 2:\n                                                    case 6:\n                                                    {\n                                                        int64_t rsi_3 = rcx_1[2];\n                                                        rdi_7 = &data_413461;\n                                                        if (rsi_3 <= -3)\n                                                        {\n                                                            rcx_1[1];\n                                                            *rcx_1;\n                                                            rdi_7 = sub_403ed0(0, rsi_3, &var_2c8);\n                                                        }\n                                                        goto label_40427b;\n                                                    }\n                                                    case 3:\n                                                    case 7:\n                                                    {\n                                                        rsi_2 = rcx_1[6];\n                                                        rdx_5 = rcx_1[7];\n                                                        if (rsi_2 <= -3)\n                                                        {\n                                                            goto label_40435b;\n                                                        }\n                                                        break;\n                                                    }\n                                                    case 4:\n                                                    case 8:\n                                                    {\n                                                        rsi_2 = rcx_1[3];\n                                                        rdx_5 = rcx_1[4];\n                                                        if (rsi_2 <= -3)\n                                                        {\n                                                        label_40435b:\n                                                            rcx_1[1];\n                                                            *rcx_1;\n                                                            rdi_7 = sub_403ed0(rdx_5, rsi_2, &var_2c8);\n                                                            goto label_40427b;\n                                                        }\n                                                        break;\n                                                    }\n                                                    case 5:\n                                                    case 9:\n                                                    {\n                                                        int64_t rdx_4 = rcx_1[6];\n                                                        if (rdx_4 > -3)\n                                                        {\n                                                        label_404323:\n                                                            char* rax_18 = strdup(&data_413461);\n                                                            var_390 = rax_18;\n                                                            rdi_8 = rax_18;\n                                                        }\n                                                        else\n                                                        {\n                                                            int64_t rsi_4 = rcx_1[3];\n                                                            if (rsi_4 > -3)\n                                                            {\n                                                                goto label_404323;\n                                                            }\n                                                            char rdi_15 = rcx_1[4];\n                                                            int64_t rcx_8;\n                                                            uint64_t zmm0[0x2];\n                                                            double zmm2;\n                                                            bool c_3;\n                                                            if (rcx_1[7] == 0)\n                                                            {\n                                                                if (rdx_4 <= 0x28f5c28f5c28f5c)\n                                                                {\n                                                                    rcx_8 = (rdx_4 + rsi_4);\n                                                                    c_3 = (rdx_4 + rsi_4) < rdx_4;\n                                                                    if ((rcx_8 != 0 && rdi_15 == c_3))\n                                                                    {\n                                                                        int64_t rdx_11 = 0;\n                                                                        int64_t rax_41 = (rdx_4 * 0x64);\n                                                                        uint64_t temp0_3 = (COMBINE(rdx_11, rax_41) / rcx_8);\n                                                                        uint64_t rdx_12;\n                                                                        rdx_12 = (COMBINE(rdx_11, rax_41) % rcx_8) != 0;\n                                                                        uint64_t rdx_13 = rdx_12;\n                                                                        uint64_t rdx_14 = (rdx_13 + temp0_3);\n                                                                        if ((rdx_13 + temp0_3) < 0)\n                                                                        {\n                                                                            zmm0 = 0;\n                                                                            zmm2 = 0;\n                                                                            zmm0[0] = ((rdx_14 >> 1) | (rdx_14 & 1));\n                                                                            zmm0[0] = (zmm0[0] + zmm0[0]);\n                                                                        }\n                                                                        else\n                                                                        {\n                                                                            zmm0 = 0;\n                                                                            zmm2 = 0;\n                                                                            zmm0[0] = rdx_14;\n                                                                        }\n                                                                    }\n                                                                }\n                                                                if (((rdx_4 > 0x28f5c28f5c28f5c || (rdx_4 <= 0x28f5c28f5c28f5c && rcx_8 == 0)) || ((rdx_4 <= 0x28f5c28f5c28f5c && rcx_8 != 0) && rdi_15 != c_3)))\n                                                                {\n                                                                    if (rdx_4 < 0)\n                                                                    {\n                                                                        zmm0 = 0;\n                                                                        zmm0[0] = ((rdx_4 >> 1) | (rdx_4 & 1));\n                                                                        zmm0[0] = (zmm0[0] + zmm0[0]);\n                                                                    }\n                                                                    else\n                                                                    {\n                                                                        zmm0 = 0;\n                                                                        zmm0[0] = rdx_4;\n                                                                    }\n                                                                }\n                                                            }\n                                                            else\n                                                            {\n                                                                int64_t rdx_8 = (-rdx_4);\n                                                                if (rdx_8 < 0)\n                                                                {\n                                                                    zmm0 = 0;\n                                                                    zmm0[0] = ((rdx_8 >> 1) | (rdx_8 & 1));\n                                                                    zmm0[0] = (zmm0[0] + zmm0[0]);\n                                                                }\n                                                                else\n                                                                {\n                                                                    zmm0 = 0;\n                                                                    zmm0[0] = rdx_8;\n                                                                }\n                                                                zmm0 = __xorpd_xmmxuq_memxuq(zmm0, data_412130);\n                                                            }\n                                                            uint64_t zmm1[0x2];\n                                                            if ((((((rcx_1[7] == 0 && ((rdx_4 > 0x28f5c28f5c28f5c || (rdx_4 <= 0x28f5c28f5c28f5c && rcx_8 == 0)) || ((rdx_4 <= 0x28f5c28f5c28f5c && rcx_8 != 0) && rdi_15 != c_3))) && rdx_4 < 0) || ((rcx_1[7] == 0 && ((rdx_4 > 0x28f5c28f5c28f5c || (rdx_4 <= 0x28f5c28f5c28f5c && rcx_8 == 0)) || ((rdx_4 <= 0x28f5c28f5c28f5c && rcx_8 != 0) && rdi_15 != c_3))) && rdx_4 >= 0)) || rcx_1[7] != 0) && rdi_15 != 0))\n                                                            {\n                                                                int64_t rsi_5 = (-rsi_4);\n                                                                if (rsi_5 < 0)\n                                                                {\n                                                                    zmm1 = 0;\n                                                                    zmm1[0] = ((rsi_5 >> 1) | (rsi_5 & 1));\n                                                                    zmm1[0] = (zmm1[0] + zmm1[0]);\n                                                                }\n                                                                else\n                                                                {\n                                                                    zmm1 = 0;\n                                                                    zmm1[0] = rsi_5;\n                                                                }\n                                                                zmm1 = __xorpd_xmmxuq_memxuq(zmm1, data_412130);\n                                                            label_4044c7:\n                                                                zmm1[0] = (zmm1[0] + zmm0[0]);\n                                                                zmm2 = 0;\n                                                                bool z_1 = (zmm1[0] == zmm2 | (FCMP_UO(zmm1[0], zmm2)));\n                                                                if ((!(FCMP_UO(zmm1[0], zmm2))))\n                                                                {\n                                                                    if (z_1)\n                                                                    {\n                                                                        goto label_404323;\n                                                                    }\n                                                                    goto label_4044db;\n                                                                }\n                                                            label_4044db:\n                                                                zmm0[0] = (zmm0[0] * 100.0);\n                                                                uint128_t zmm3 = 0x3ff0000000000000;\n                                                                zmm0[0] = (zmm0[0] / zmm1[0]);\n                                                                zmm1 = 0;\n                                                                zmm1[0] = (truncf(zmm0[0], arg3));\n                                                                double zmm4 = (zmm1[0] - zmm3);\n                                                                if ((!((zmm0[0] == zmm4 | (FCMP_UO(zmm0[0], zmm4))) || (zmm0[0] < zmm4 | (FCMP_UO(zmm0[0], zmm4))))))\n                                                                {\n                                                                    zmm3 = (zmm3 + zmm1[0]);\n                                                                    if ((!(zmm3 < zmm0[0] | (FCMP_UO(zmm3, zmm0[0])))))\n                                                                    {\n                                                                        if (((!(zmm0[0] == zmm1[0] | (FCMP_UO(zmm0[0], zmm1[0])))) && (!(zmm0[0] < zmm1[0] | (FCMP_UO(zmm0[0], zmm1[0]))))))\n                                                                        {\n                                                                            zmm0 = zmm3;\n                                                                        }\n                                                                        else\n                                                                        {\n                                                                            zmm1[0] = (zmm1[0] + zmm2);\n                                                                            zmm0 = zmm1;\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                            if (((((rcx_1[7] == 0 && rdx_4 <= 0x28f5c28f5c28f5c) && rcx_8 != 0) && rdi_15 == c_3) || (((((rcx_1[7] == 0 && ((rdx_4 > 0x28f5c28f5c28f5c || (rdx_4 <= 0x28f5c28f5c28f5c && rcx_8 == 0)) || ((rdx_4 <= 0x28f5c28f5c28f5c && rcx_8 != 0) && rdi_15 != c_3))) && rdx_4 < 0) || ((rcx_1[7] == 0 && ((rdx_4 > 0x28f5c28f5c28f5c || (rdx_4 <= 0x28f5c28f5c28f5c && rcx_8 == 0)) || ((rdx_4 <= 0x28f5c28f5c28f5c && rcx_8 != 0) && rdi_15 != c_3))) && rdx_4 >= 0)) || rcx_1[7] != 0) && rdi_15 != 0)))\n                                                            {\n                                                                if ((zmm0[0] < zmm2 | (FCMP_UO(zmm0[0], zmm2))))\n                                                                {\n                                                                    goto label_404323;\n                                                                }\n                                                                if (sub_40acf0(&var_390, \"%.0f%%\", 1) == 0xffffffff)\n                                                                {\n                                                                    var_390 = nullptr;\n                                                                label_404559:\n                                                                    sub_40a7b0();\n                                                                    /* no return */\n                                                                }\n                                                                rdi_8 = var_390;\n                                                            }\n                                                            if ((((((rcx_1[7] == 0 && ((rdx_4 > 0x28f5c28f5c28f5c || (rdx_4 <= 0x28f5c28f5c28f5c && rcx_8 == 0)) || ((rdx_4 <= 0x28f5c28f5c28f5c && rcx_8 != 0) && rdi_15 != c_3))) && rdx_4 < 0) || ((rcx_1[7] == 0 && ((rdx_4 > 0x28f5c28f5c28f5c || (rdx_4 <= 0x28f5c28f5c28f5c && rcx_8 == 0)) || ((rdx_4 <= 0x28f5c28f5c28f5c && rcx_8 != 0) && rdi_15 != c_3))) && rdx_4 >= 0)) || rcx_1[7] != 0) && rdi_15 == 0))\n                                                            {\n                                                                if (rsi_4 < 0)\n                                                                {\n                                                                    zmm1 = 0;\n                                                                    zmm1[0] = ((rsi_4 >> 1) | (rsi_4 & 1));\n                                                                    zmm1[0] = (zmm1[0] + zmm1[0]);\n                                                                }\n                                                                else\n                                                                {\n                                                                    zmm1 = 0;\n                                                                    zmm1[0] = rsi_4;\n                                                                }\n                                                                goto label_4044c7;\n                                                            }\n                                                        }\n                                                        if (rdi_8 == 0)\n                                                        {\n                                                            goto label_404559;\n                                                        }\n                                                        goto label_404291;\n                                                    }\n                                                    case 0xa:\n                                                    {\n                                                        rdi_7 = arg2;\n                                                    label_40427b:\n                                                        char* rax_10 = sub_40a790(rdi_7);\n                                                        var_390 = rax_10;\n                                                        rdi_8 = rax_10;\n                                                        break;\n                                                    }\n                                                    case 0xb:\n                                                    {\n                                                        rdi_7 = r15;\n                                                        goto label_40427b;\n                                                    }\n                                                }\n                                                if ((((*rdx_3 == 3 || *rdx_3 == 4) || *rdx_3 == 7) || *rdx_3 == 8))\n                                                {\n                                                    rdi_7 = &data_413461;\n                                                    if (rdx_5 == 0)\n                                                    {\n                                                        goto label_40427b;\n                                                    }\n                                                    goto label_40435b;\n                                                }\n                                                if (((*rdx_3 == 1 || *rdx_3 == 0) || *rdx_3 == 0xa))\n                                                {\n                                                    if (rdi_8 == 0)\n                                                    {\n                                                        __assert_fail(\"!\"empty cell\"\", \"src/df.c\", 0x49f, \"get_dev\");\n                                                        /* no return */\n                                                    }\n                                                label_404291:\n                                                    sub_403b50(rdi_8);\n                                                    int64_t r12_1 = *(*(data_617658 + rbp_1) + 0x20);\n                                                    int64_t rax_15;\n                                                    void* rcx_2;\n                                                    if (r12_1 <= sub_408190(var_390, 0))\n                                                    {\n                                                        rdx_2 = data_617658;\n                                                        rax_15 = sub_408190(var_390, 0);\n                                                        rcx_2 = *(rdx_2 + rbp_1);\n                                                    }\n                                                    else\n                                                    {\n                                                        rdx_2 = data_617658;\n                                                        rcx_2 = *(rdx_2 + rbp_1);\n                                                        rax_15 = *(rcx_2 + 0x20);\n                                                    }\n                                                    *(rcx_2 + 0x20) = rax_15;\n                                                    rbx_2 = (rbx_2 + 1);\n                                                    bool cond:8_1 = data_617650 > rbx_2;\n                                                    *(*((data_617648 + (data_617640 << 3)) - 8) + rbp_1) = var_390;\n                                                    if ((!cond:8_1))\n                                                    {\n                                                        break;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        rax = free(var_3b8);\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                if (var_3a0 != 0)\n                                {\n                                    if (data_6176ee != 0)\n                                    {\n                                        rax = __xstat(1, r12, &var_2c8);\n                                        if (rax == 0)\n                                        {\n                                            int64_t rdi_20 = data_6176f0;\n                                            rax = var_2c8;\n                                            if (rdi_20 != 0)\n                                            {\n                                                var_308 = rax;\n                                                rax = sub_4061f0(rdi_20, &var_308);\n                                                if (rax != 0)\n                                                {\n                                                    char** r12_2 = *(rax + 8);\n                                                    if (r12_2 != 0)\n                                                    {\n                                                        rax = strcmp(*r12_2, rbp);\n                                                        if ((rax != 0 && ((r12_2[5] & 2) == 0 || ((r12_2[5] & 2) != 0 && arg7 == 0))))\n                                                        {\n                                                            var_368 = 0;\n                                                            r13 = &data_413461;\n                                                            var_358 = -1;\n                                                            *var_368[8] = -1;\n                                                            *var_378[8] = -1;\n                                                            var_378 = -1;\n                                                            *var_388[8] = -1;\n                                                            var_388 = -1;\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    else if (*var_388[8] != 0)\n                                    {\n                                        goto label_404015;\n                                    }\n                                }\n                                if ((var_3a0 == 0 || (var_3a0 != 0 && data_6176ee != 0)))\n                                {\n                                    if (*var_388[8] != 0)\n                                    {\n                                        goto label_404015;\n                                    }\n                                    if (data_6176ee != 0)\n                                    {\n                                        goto label_404015;\n                                    }\n                                }\n                                if ((((var_3a0 != 0 && data_6176ee == 0) || ((var_3a0 == 0 || (var_3a0 != 0 && data_6176ee != 0)) && *var_388[8] == 0)) && data_6176ec != 0))\n                                {\n                                    if (arg8 != 0)\n                                    {\n                                        goto label_40401c;\n                                    }\n                                    goto label_404015;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else\n        {\n            if (data_6176ee != 0)\n            {\n                goto label_403f73;\n            }\n            if (data_6176ec != 0)\n            {\n                goto label_403f73;\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404930",
            "funcStartAddr": "0x404930",
            "funcEndAddr": "0x404d5d",
            "decompiledFuncCode": "int64_t sub_404930(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_617708;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [OPTION]... [FILE]...\\n\", 5), rbp);\n        fputs_unlocked(dcgettext(nullptr, \"Show information about the file \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nMandatory arguments to long op\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -a, --all             include \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -i, --inodes          list ino\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --output[=FIELD_LIST]  use\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --total           elide al\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -t, --type=TYPE       limit li\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        __printf_chk(1, dcgettext(nullptr, \"\\nDisplay values are in units of\u2026\", 5), &data_41103d);\n        fputs_unlocked(dcgettext(nullptr, \"\\nThe SIZE argument is an intege\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nFIELD_LIST is a comma-separate\u2026\", 5), stdout);\n        void* const var_88 = &data_411040;\n        void* const* rax_17 = &var_88;\n        void* const var_78_1 = \"coreutils\";\n        void* const var_70_1 = \"Multi-call invocation\";\n        void* const var_68_1 = \"sha224sum\";\n        void* const var_60_1 = \"sha2 utilities\";\n        void* const var_58_1 = \"sha256sum\";\n        void* const var_50_1 = \"sha2 utilities\";\n        void* const var_48_1 = \"sha384sum\";\n        void* const var_40_1 = \"sha2 utilities\";\n        void* const var_38_1 = \"sha512sum\";\n        void* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_17 = &rax_17[2];\n            void* const rdi_13 = *rax_17;\n            c_1 = false;\n            z_1 = (rdi_13 & rdi_13) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            void* const rsi_14 = &data_41103a;\n            int64_t rcx_2 = 3;\n            while (rcx_2 != 0)\n            {\n                char temp0_1 = *rsi_14;\n                char temp1_1 = *rdi_13;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_14 = (rsi_14 + 1);\n                rdi_13 = (rdi_13 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        void* const rbp_1 = rax_17[1];\n        char* rax_28;\n        int32_t rax_29;\n        void* const r12_1;\n        if (rbp_1 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_5;\n            uint64_t r8_2;\n            ssize_t r9_2;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_28 = setlocale(5, nullptr, rdx_5, rcx_5, r8_2, r9_2, var_88, \"test invocation\");\n            if (rax_28 != 0)\n            {\n                rax_29 = strncmp(rax_28, &data_4110c4, 3);\n                if (rax_29 != 0)\n                {\n                    rbp_1 = &data_41103a;\n                }\n            }\n            if ((rax_28 == 0 || (rax_28 != 0 && rax_29 == 0)))\n            {\n                rbp_1 = &data_41103a;\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", &data_41103a);\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_3;\n            uint64_t r8_1;\n            ssize_t r9_1;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_20 = setlocale(5, nullptr, rdx_3, rcx_3, r8_1, r9_1, var_88, \"test invocation\");\n            if (rax_20 == 0)\n            {\n                goto label_404c50;\n            }\n            if (strncmp(rax_20, &data_4110c4, 3) == 0)\n            {\n                goto label_404c50;\n            }\n        }\n        if ((((rbp_1 == 0 && rax_28 != 0) && rax_29 != 0) || rbp_1 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), &data_41103a);\n        label_404c50:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", &data_41103a);\n            if (rbp_1 != &data_41103a)\n            {\n                r12_1 = &data_4139f9[0x1b];\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_1, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404d60",
            "funcStartAddr": "0x404d60",
            "funcEndAddr": "0x404ec1",
            "decompiledFuncCode": "int64_t sub_404d60()\n{\n    char* rdi;\n    void* rax = sub_40a790(rdi);\n    void* rbp = rax;\n    void* r13_1;\n    do\n    {\n        r13_1 = nullptr;\n        char* rax_1 = strchr(rbp, 0x2c);\n        if (rax_1 != 0)\n        {\n            *rax_1 = 0;\n            r13_1 = &rax_1[1];\n        }\n        int64_t rbx_1 = 0;\n        int32_t rax_11;\n        while (true)\n        {\n            char r12_1 = rbx_1;\n            char* r15_1 = *((rbx_1 * 0x30) + 0x617328);\n            int64_t rbx_2;\n            char const* const rsi_2;\n            if (strcmp(r15_1, rbp) == 0)\n            {\n                if (*((rbx_1 * 0x30) + 0x61734c) == 0)\n                {\n                    rax_11 = (1 << r12_1);\n                    break;\n                }\n                rsi_2 = \"option --output: field %s used m\u2026\";\n                rbx_2 = sub_409de0(r15_1);\n            }\n            else\n            {\n                rbx_1 = (rbx_1 + 1);\n                if (rbx_1 != 0xc)\n                {\n                    continue;\n                }\n                else\n                {\n                    rsi_2 = \"option --output: field %s unknow\u2026\";\n                    rbx_2 = sub_409de0(rbp);\n                }\n            }\n            error(0, 0, dcgettext(nullptr, rsi_2, 5), rbx_2);\n            sub_404930(1);\n            /* no return */\n        }\n        if ((rax_11 & 0xfeb) != 0)\n        {\n            sub_403e20(rbx_1, 0);\n        }\n        else if ((rax_11 & 0x10) != 0)\n        {\n            sub_403e20(rbx_1, \"Avail\");\n        }\n        else\n        {\n            if ((rax_11 & 4) == 0)\n            {\n                __assert_fail(\"!\"invalid field\"\", \"src/df.c\", 0x1ab, \"decode_output_arg\");\n                /* no return */\n            }\n            sub_403e20(rbx_1, \"Size\");\n        }\n        rbp = r13_1;\n    } while (r13_1 != 0);\n    /* tailcall */\n    return free(rax);\n}\n\n"
        },
        {
            "funcName": "sub_404ed0",
            "funcStartAddr": "0x404ed0",
            "funcEndAddr": "0x405250",
            "decompiledFuncCode": "void* sub_404ed0(char* arg1, int128_t* arg2)\n{\n    void var_158;\n    int32_t rax = sub_409f30(&var_158);\n    int32_t* rax_1 = __errno_location();\n    void* rbx_3;\n    if (rax != 0)\n    {\n        rbx_3 = nullptr;\n        error(0, *rax_1, dcgettext(nullptr, \"cannot get current directory\", 5));\n    }\n    else\n    {\n        int128_t var_148;\n        char* rax_8;\n        int32_t rax_9;\n        int32_t rax_24;\n        char* rsi_5;\n        if ((*(arg2 + 0x18) & 0xf000) == 0x4000)\n        {\n            var_148 = *arg2;\n            int128_t var_138_2 = arg2[1];\n            int128_t var_128_2 = arg2[2];\n            int128_t var_118_2 = arg2[3];\n            int128_t var_108_2 = arg2[4];\n            int128_t var_f8_2 = arg2[5];\n            int128_t var_e8_2 = arg2[6];\n            int128_t var_d8_2 = arg2[7];\n            int128_t var_c8_2 = arg2[8];\n            rax_24 = chdir(arg1);\n            rsi_5 = arg1;\n        }\n        else\n        {\n            char* rax_4 = sub_405990(arg1);\n            uint64_t rax_5 = strlen(rax_4);\n            rax_8 = memcpy((((&var_158 - ((rax_5 + 0x18) & 0xfffffffffffffff0)) + 0xf) & 0xfffffffffffffff0), rax_4, (rax_5 + 1));\n            free(rax_4);\n            rax_9 = chdir(rax_8);\n            if (rax_9 < 0)\n            {\n                rsi_5 = rax_8;\n            }\n        }\n        if ((((*(arg2 + 0x18) & 0xf000) != 0x4000 && rax_9 < 0) || ((*(arg2 + 0x18) & 0xf000) == 0x4000 && rax_24 < 0)))\n        {\n            rbx_3 = nullptr;\n            error(0, *rax_1, dcgettext(nullptr, \"cannot change to directory %s\", 5), sub_409b90(4, rsi_5));\n        }\n        int32_t rax_10;\n        if (((*(arg2 + 0x18) & 0xf000) != 0x4000 && rax_9 >= 0))\n        {\n            rax_10 = __xstat(1, &data_41218c, &var_148);\n        }\n        if ((((*(arg2 + 0x18) & 0xf000) == 0x4000 && rax_24 >= 0) || (((*(arg2 + 0x18) & 0xf000) != 0x4000 && rax_9 >= 0) && rax_10 >= 0)))\n        {\n            while (true)\n            {\n                int64_t var_b8;\n                int64_t rbx_4;\n                char* rsi_3;\n                if (__xstat(1, &data_41218b, &var_b8) < 0)\n                {\n                    rsi_3 = \"cannot stat %s\";\n                    rbx_4 = sub_409b90(4, &data_41218b);\n                }\n                else\n                {\n                    int64_t var_b0;\n                    if ((var_b8 != var_148 || (var_b8 == var_148 && var_b0 == *var_148[8])))\n                    {\n                        rbx_3 = sub_40a7f0();\n                        break;\n                    }\n                    if ((var_b8 == var_148 && var_b0 != *var_148[8]))\n                    {\n                        if (chdir(&data_41218b) < 0)\n                        {\n                            rsi_3 = \"cannot change to directory %s\";\n                            rbx_4 = sub_409b90(4, &data_41218b);\n                        }\n                        else\n                        {\n                            var_148 = var_b8;\n                            int128_t var_a8;\n                            int128_t var_138_1 = var_a8;\n                            int128_t var_98;\n                            int128_t var_128_1 = var_98;\n                            int128_t var_88;\n                            int128_t var_118_1 = var_88;\n                            int128_t var_78;\n                            int128_t var_108_1 = var_78;\n                            int128_t var_68;\n                            int128_t var_f8_1 = var_68;\n                            int128_t var_58;\n                            int128_t var_e8_1 = var_58;\n                            int128_t var_48;\n                            int128_t var_d8_1 = var_48;\n                            int128_t var_38;\n                            int128_t var_c8_1 = var_38;\n                            continue;\n                        }\n                    }\n                }\n                rbx_3 = nullptr;\n                error(0, *rax_1, dcgettext(nullptr, rsi_3, 5), rbx_4);\n                break;\n            }\n            goto label_4050df;\n        }\n        if ((((*(arg2 + 0x18) & 0xf000) != 0x4000 && rax_9 >= 0) && rax_10 < 0))\n        {\n            rbx_3 = nullptr;\n            error(0, *rax_1, dcgettext(nullptr, \"cannot stat current directory (n\u2026\", 5), sub_409b90(4, rax_8));\n        label_4050df:\n            int32_t r13_2 = *rax_1;\n            if (sub_409f80(&var_158) != 0)\n            {\n                int32_t rsi_9;\n                char* rdi_10;\n                rsi_9 = error(1, *rax_1, dcgettext(nullptr, \"failed to return to initial work\u2026\", 5));\n                /* tailcall */\n                return sub_405250(rdi_10, rsi_9);\n            }\n            sub_409fa0(&var_158);\n            *rax_1 = r13_2;\n        }\n    }\n    return rbx_3;\n}\n\n"
        },
        {
            "funcName": "sub_405250",
            "funcStartAddr": "0x405250",
            "funcEndAddr": "0x4058c3",
            "decompiledFuncCode": "void* sub_405250(char* arg1, int32_t arg2)\n{\n    int32_t rcx_1 = (arg2 & 3);\n    void* r12;\n    if ((rcx_1 & (rcx_1 - 1)) == 0)\n    {\n        char* r15_1 = arg1;\n        if (arg1 != 0)\n        {\n            char rax_1 = *arg1;\n            if (rax_1 == 0)\n            {\n                r12 = nullptr;\n                *__errno_location() = 2;\n            }\n            else\n            {\n                void* rax_2;\n                void* rbx_2;\n                void* rbp_1;\n                if (rax_1 == 0x2f)\n                {\n                    char* rax_8 = sub_40a560(0x1000);\n                    r12 = rax_8;\n                    rbp_1 = &rax_8[0x1000];\n                    rbx_2 = &rax_8[1];\n                    *rax_8 = 0x2f;\n                }\n                else\n                {\n                    rax_2 = sub_40a7f0();\n                    r12 = rax_2;\n                    if (rax_2 != 0)\n                    {\n                        uint64_t rax_3 = strlen(rax_2);\n                        if (rax_3 <= 0xfff)\n                        {\n                            void* rax_34 = sub_40a5c0(r12, 0x1000);\n                            r12 = rax_34;\n                            rbx_2 = (rax_3 + rax_34);\n                            rbp_1 = (rax_34 + 0x1000);\n                        }\n                        else\n                        {\n                            rbx_2 = (rax_3 + r12);\n                            rbp_1 = rbx_2;\n                        }\n                    }\n                }\n                if ((rax_1 == 0x2f || (rax_1 != 0x2f && rax_2 != 0)))\n                {\n                    int32_t r14_2 = (arg2 & 4);\n                    char* var_e8_1 = r15_1;\n                    char rax_4 = *r15_1;\n                    int64_t* var_f0_1 = nullptr;\n                    size_t var_d8_1 = 0;\n                    int64_t var_e0_1 = 0;\n                    while (true)\n                    {\n                        if (rax_4 != 0)\n                        {\n                            char rdx_1 = rax_4;\n                            if (rax_4 == 0x2f)\n                            {\n                                do\n                                {\n                                    r15_1 = &r15_1[1];\n                                    rdx_1 = *r15_1;\n                                } while (rdx_1 == 0x2f);\n                            }\n                            if ((rax_4 != 0x2f || (rax_4 == 0x2f && rdx_1 != 0)))\n                            {\n                                char* r13_1 = r15_1;\n                                char* r14_3;\n                                while (true)\n                                {\n                                    rax_4 = r13_1[1];\n                                    r14_3 = &r13_1[1];\n                                    if (rax_4 == 0)\n                                    {\n                                        break;\n                                    }\n                                    if (rax_4 == 0x2f)\n                                    {\n                                        break;\n                                    }\n                                    r13_1 = r14_3;\n                                }\n                                if (r14_3 != r15_1)\n                                {\n                                    uint64_t r8_2 = (r14_3 - r15_1);\n                                    if (((rdx_1 == 0x2e && r8_2 == 2) && r15_1[1] == 0x2e))\n                                    {\n                                        r15_1 = r14_3;\n                                        if (rbx_2 <= (r12 + 1))\n                                        {\n                                            continue;\n                                        }\n                                        else\n                                        {\n                                            void* rdx_15 = (rbx_2 - 1);\n                                            if ((r12 >= rdx_15 || (r12 < rdx_15 && *(rbx_2 - 2) == 0x2f)))\n                                            {\n                                                rbx_2 = rdx_15;\n                                                continue;\n                                            }\n                                            if ((r12 < rdx_15 && *(rbx_2 - 2) != 0x2f))\n                                            {\n                                                rbx_2 = (rdx_15 - 1);\n                                                if (r12 != rbx_2)\n                                                {\n                                                    while (*(rbx_2 - 1) != 0x2f)\n                                                    {\n                                                        rbx_2 = (rbx_2 - 1);\n                                                        if (r12 == rbx_2)\n                                                        {\n                                                            break;\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    if (((r8_2 == 1 && rdx_1 == 0x2e) || ((rdx_1 == 0x2e && r8_2 == 2) && r15_1[1] == 0x2e)))\n                                    {\n                                        r15_1 = r14_3;\n                                        continue;\n                                    }\n                                    if (((((r8_2 == 1 && rdx_1 != 0x2e) || (r8_2 != 1 && rdx_1 != 0x2e)) || ((r8_2 != 1 && rdx_1 == 0x2e) && r8_2 != 2)) || ((rdx_1 == 0x2e && r8_2 == 2) && r15_1[1] != 0x2e)))\n                                    {\n                                        if (*(rbx_2 - 1) != 0x2f)\n                                        {\n                                            *rbx_2 = 0x2f;\n                                            rbx_2 = (rbx_2 + 1);\n                                        }\n                                        if (rbp_1 <= (rbx_2 + r8_2))\n                                        {\n                                            int64_t rbp_2 = (rbp_1 - r12);\n                                            void* rbx_3 = (rbx_2 - r12);\n                                            size_t rax_6 = ((r8_2 + rbp_2) + 1);\n                                            size_t rbp_3 = (rbp_2 + 0x1000);\n                                            if (r8_2 >= 0x1000)\n                                            {\n                                                rbp_3 = rax_6;\n                                            }\n                                            void* rax_7 = sub_40a5c0(r12, rbp_3);\n                                            r12 = rax_7;\n                                            rbp_1 = (rbp_3 + rax_7);\n                                            rbx_2 = (rbx_3 + rax_7);\n                                            goto label_4053cb;\n                                        }\n                                    label_4053cb:\n                                        memcpy(rbx_2, r15_1, r8_2);\n                                        rbx_2 = (rbx_2 + r8_2);\n                                        *rbx_2 = 0;\n                                        int32_t var_b0;\n                                        int32_t rcx_2;\n                                        int32_t rcx_4;\n                                        int32_t* rdx_5;\n                                        int32_t* rdx_13;\n                                        if ((rcx_1 != 2 || (rcx_1 == 2 && r14_2 == 0)))\n                                        {\n                                            void var_c8;\n                                            void* rdx_4 = &var_c8;\n                                            char* rsi_2 = r12;\n                                            int32_t rax_10;\n                                            if (r14_2 == 0)\n                                            {\n                                                rax_10 = __lxstat(1, rsi_2, rdx_4) != 0;\n                                            }\n                                            else\n                                            {\n                                                rax_10 = __xstat(1, rsi_2, rdx_4) != 0;\n                                            }\n                                            if (rax_10 == 0)\n                                            {\n                                                int32_t rax_15 = (var_b0 & 0xf000);\n                                                if (rax_15 == 0xa000)\n                                                {\n                                                    if (var_f0_1 == 0)\n                                                    {\n                                                        int64_t* rax_29 = sub_406460(7, nullptr, 0x406e20, 0x406e90, 0x406ed0);\n                                                        var_f0_1 = rax_29;\n                                                        if (rax_29 == 0)\n                                                        {\n                                                            sub_40a7b0();\n                                                            /* no return */\n                                                        }\n                                                    }\n                                                    int32_t rcx_3;\n                                                    int32_t* rdx_12;\n                                                    if (sub_405b90(var_f0_1, var_e8_1, &var_c8) == 0)\n                                                    {\n                                                        sub_405b00(var_f0_1, var_e8_1, &var_c8);\n                                                        int64_t var_98;\n                                                        char* rax_22 = sub_40d6b0(r12, var_98);\n                                                        if (rax_22 == 0)\n                                                        {\n                                                            int32_t* rax_35 = __errno_location();\n                                                            rdx_12 = rax_35;\n                                                            rcx_3 = *rax_35;\n                                                            if (rcx_1 != 2)\n                                                            {\n                                                                goto label_40567f;\n                                                            }\n                                                            if (rcx_3 != 0xc)\n                                                            {\n                                                                goto label_4054a9;\n                                                            }\n                                                            goto label_40567f;\n                                                        }\n                                                        uint64_t rax_23 = strlen(rax_22);\n                                                        uint64_t rax_24 = strlen(r14_3);\n                                                        uint64_t rdx_8 = rax_24;\n                                                        size_t r8_4 = ((rax_23 + rax_24) + 1);\n                                                        if (var_d8_1 == 0)\n                                                        {\n                                                            size_t rax_31 = 0x1000;\n                                                            if (r8_4 >= 0x1000)\n                                                            {\n                                                                rax_31 = r8_4;\n                                                            }\n                                                            var_d8_1 = rax_31;\n                                                            rdx_8 = rax_24;\n                                                            var_e0_1 = sub_40a560(rax_31);\n                                                        }\n                                                        else if (r8_4 > var_d8_1)\n                                                        {\n                                                            rdx_8 = rax_24;\n                                                            var_e0_1 = sub_40a5c0(var_e0_1, r8_4);\n                                                            var_d8_1 = r8_4;\n                                                        }\n                                                        memmove((var_e0_1 + rax_23), r14_3, (rdx_8 + 1));\n                                                        char* rax_26 = memcpy(var_e0_1, rax_22, rax_23);\n                                                        void* rdx_11 = (r12 + 1);\n                                                        r14_3 = rax_26;\n                                                        var_e8_1 = rax_26;\n                                                        if (*rax_22 == 0x2f)\n                                                        {\n                                                            *r12 = 0x2f;\n                                                            rbx_2 = rdx_11;\n                                                        }\n                                                        else if (rbx_2 > rdx_11)\n                                                        {\n                                                            void* rdx_17 = (rbx_2 - 1);\n                                                            if (r12 >= rdx_17)\n                                                            {\n                                                                rbx_2 = rdx_17;\n                                                            }\n                                                            else\n                                                            {\n                                                                bool cond:6_1 = *(rbx_2 - 2) == 0x2f;\n                                                                rbx_2 = rdx_17;\n                                                                if ((!cond:6_1))\n                                                                {\n                                                                    do\n                                                                    {\n                                                                        rbx_2 = (rbx_2 - 1);\n                                                                        if (r12 == rbx_2)\n                                                                        {\n                                                                            break;\n                                                                        }\n                                                                    } while (*(rbx_2 - 1) != 0x2f);\n                                                                }\n                                                            }\n                                                        }\n                                                        free(rax_22);\n                                                        goto label_405404;\n                                                    }\n                                                    if (rcx_1 == 2)\n                                                    {\n                                                        goto label_4054a9;\n                                                    }\n                                                    rcx_3 = 0x28;\n                                                    rdx_12 = __errno_location();\n                                                label_40567f:\n                                                    free(var_e0_1);\n                                                    free(r12);\n                                                    rdx_13 = rdx_12;\n                                                    rcx_4 = rcx_3;\n                                                label_4056a3:\n                                                    sub_4066a0(var_f0_1);\n                                                label_4056b1:\n                                                    *rdx_13 = rcx_4;\n                                                    r12 = nullptr;\n                                                    break;\n                                                }\n                                                if (rax_15 == 0x4000)\n                                                {\n                                                    goto label_405404;\n                                                }\n                                            }\n                                            else\n                                            {\n                                                int32_t* rax_11 = __errno_location();\n                                                rdx_5 = rax_11;\n                                                rcx_2 = *rax_11;\n                                                if (rcx_1 == 0)\n                                                {\n                                                    goto label_405763;\n                                                }\n                                                if (rcx_1 != 1)\n                                                {\n                                                    goto label_4053eb;\n                                                }\n                                                if (r14_3[strspn(r14_3, \"/\")] != 0)\n                                                {\n                                                    goto label_405763;\n                                                }\n                                                if (rcx_2 != 2)\n                                                {\n                                                    goto label_405763;\n                                                }\n                                            label_4054a9:\n                                                rax_4 = r13_1[1];\n                                                r15_1 = r14_3;\n                                                continue;\n                                            }\n                                        }\n                                        if ((rcx_1 == 2 && r14_2 != 0))\n                                        {\n                                        label_4053eb:\n                                            var_b0 = 0;\n                                        }\n                                        if (*r14_3 != 0)\n                                        {\n                                            if (rcx_1 == 2)\n                                            {\n                                                goto label_405404;\n                                            }\n                                            rcx_2 = 0x14;\n                                            rdx_5 = __errno_location();\n                                        label_405763:\n                                            free(var_e0_1);\n                                            free(r12);\n                                            rdx_13 = rdx_5;\n                                            rcx_4 = rcx_2;\n                                            if (var_f0_1 == 0)\n                                            {\n                                                goto label_4056b1;\n                                            }\n                                            goto label_4056a3;\n                                        }\n                                    label_405404:\n                                        rax_4 = *r14_3;\n                                        r15_1 = r14_3;\n                                        continue;\n                                    }\n                                }\n                            }\n                        }\n                        void* rax_17;\n                        if ((rbx_2 <= (r12 + 1) || (rbx_2 > (r12 + 1) && *(rbx_2 - 1) != 0x2f)))\n                        {\n                            rax_17 = (rbx_2 + 1);\n                        }\n                        if ((rbx_2 > (r12 + 1) && *(rbx_2 - 1) == 0x2f))\n                        {\n                            rax_17 = rbx_2;\n                            rbx_2 = (rbx_2 - 1);\n                        }\n                        *rbx_2 = 0;\n                        if (rbp_1 != rax_17)\n                        {\n                            r12 = sub_40a5c0(r12, ((rbx_2 - r12) + 1));\n                        }\n                        free(var_e0_1);\n                        if (var_f0_1 != 0)\n                        {\n                            sub_4066a0(var_f0_1);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    if (((rcx_1 & (rcx_1 - 1)) != 0 || ((rcx_1 & (rcx_1 - 1)) == 0 && arg1 == 0)))\n    {\n        r12 = nullptr;\n        *__errno_location() = 0x16;\n    }\n    return r12;\n}\n\n"
        },
        {
            "funcName": "sub_4058d0",
            "funcStartAddr": "0x4058d0",
            "funcEndAddr": "0x4058d8",
            "decompiledFuncCode": "int64_t sub_4058d0(int64_t arg1)\n{\n    data_617700 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4058e0",
            "funcStartAddr": "0x4058e0",
            "funcEndAddr": "0x4058e8",
            "decompiledFuncCode": "int64_t sub_4058e0(char arg1)\n{\n    data_6176f8 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4058f0",
            "funcStartAddr": "0x4058f0",
            "funcEndAddr": "0x40598e",
            "decompiledFuncCode": "void sub_4058f0(void* arg1)\n{\n    int32_t rax = sub_40db30(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_6176f8 == 0 || (data_6176f8 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_617700;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_409c30(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_6176f8 != 0) && *rax_1 == 0x20)) && sub_40db30(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_617568);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_405990",
            "funcStartAddr": "0x405990",
            "funcEndAddr": "0x4059a8",
            "decompiledFuncCode": "char* sub_405990(char* arg1)\n{\n    char* rax = sub_405a10(arg1);\n    if (rax == 0)\n    {\n        sub_40a7b0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4059b0",
            "funcStartAddr": "0x4059b0",
            "funcEndAddr": "0x405a0d",
            "decompiledFuncCode": "void* sub_4059b0(char* arg1)\n{\n    int64_t rbp;\n    rbp = *arg1 == 0x2f;\n    char* rax = sub_405a70(arg1);\n    void* rcx_1 = (rax - arg1);\n    if (rcx_1 > rbp)\n    {\n        void* rdx_1 = (rcx_1 - 1);\n        if (rax[-1] == 0x2f)\n        {\n            void* rax_1;\n            for (; rbp != rdx_1; rdx_1 = rax_1)\n            {\n                rax_1 = (rdx_1 - 1);\n                if (*((arg1 + rdx_1) - 1) != 0x2f)\n                {\n                    break;\n                }\n            }\n            return rdx_1;\n        }\n    }\n    return rcx_1;\n}\n\n"
        },
        {
            "funcName": "sub_405a10",
            "funcStartAddr": "0x405a10",
            "funcEndAddr": "0x405a6a",
            "decompiledFuncCode": "char* sub_405a10(char* arg1)\n{\n    void* rax = sub_4059b0(arg1);\n    void* rbx = rax;\n    rax = rax == 0;\n    char* rax_2 = malloc(((rbx + rax) + 1));\n    char* rcx = rax_2;\n    if (rax_2 != 0)\n    {\n        char* rax_3 = memcpy(rax_2, arg1, rbx);\n        rcx = rax_3;\n        if (rbx == 0)\n        {\n            *rax_3 = 0x2e;\n            rbx = 1;\n        }\n        *(rcx + rbx) = 0;\n    }\n    return rcx;\n}\n\n"
        },
        {
            "funcName": "sub_405a70",
            "funcStartAddr": "0x405a70",
            "funcEndAddr": "0x405acb",
            "decompiledFuncCode": "char* sub_405a70(char* arg1)\n{\n    char rdx = *arg1;\n    char* rax = arg1;\n    if (rdx == 0x2f)\n    {\n        do\n        {\n            rax = &rax[1];\n            rdx = *rax;\n        } while (rdx == 0x2f);\n    }\n    if (rdx != 0)\n    {\n        char* rcx_1 = rax;\n        char rsi_1 = 0;\n        while (true)\n        {\n            if (rdx == 0x2f)\n            {\n                rcx_1 = &rcx_1[1];\n                rdx = *rcx_1;\n                rsi_1 = 1;\n                if (rdx == 0)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                if (rsi_1 != 0)\n                {\n                    rax = rcx_1;\n                    rsi_1 = 0;\n                }\n                rcx_1 = &rcx_1[1];\n                rdx = *rcx_1;\n                if (rdx == 0)\n                {\n                    break;\n                }\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405ad0",
            "funcStartAddr": "0x405ad0",
            "funcEndAddr": "0x405afb",
            "decompiledFuncCode": "uint64_t sub_405ad0(char* arg1)\n{\n    uint64_t rax = strlen(arg1);\n    if (rax > 1)\n    {\n        while (true)\n        {\n            uint64_t rdx_1 = (rax - 1);\n            if (arg1[(rax - 1)] != 0x2f)\n            {\n                break;\n            }\n            rax = rdx_1;\n            if (rdx_1 == 1)\n            {\n                return rax;\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405b00",
            "funcStartAddr": "0x405b00",
            "funcEndAddr": "0x405b86",
            "decompiledFuncCode": "void sub_405b00(int64_t* arg1, char* arg2, int64_t* arg3)\n{\n    if (arg1 == 0)\n    {\n        return;\n    }\n    int64_t* rax = sub_40a560(0x18);\n    *rax = sub_40a790(arg2);\n    rax[1] = arg3[1];\n    rax[2] = *arg3;\n    int64_t rax_4 = sub_406c00(arg1, rax);\n    if (rax_4 == 0)\n    {\n        sub_40a7b0();\n        /* no return */\n    }\n    if (rax == rax_4)\n    {\n        return;\n    }\n    /* tailcall */\n    return sub_406ed0(rax);\n}\n\n"
        },
        {
            "funcName": "sub_405b90",
            "funcStartAddr": "0x405b90",
            "funcEndAddr": "0x405bcb",
            "decompiledFuncCode": "int64_t sub_405b90(void* arg1, int64_t arg2, int64_t* arg3)\n{\n    if (arg1 == 0)\n    {\n        return 0;\n    }\n    int64_t var_28 = arg2;\n    int64_t var_20 = arg3[1];\n    int64_t var_18 = *arg3;\n    int64_t rax_2;\n    rax_2 = sub_4061f0(arg1, &var_28) != 0;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_405bd0",
            "funcStartAddr": "0x405bd0",
            "funcEndAddr": "0x405c63",
            "decompiledFuncCode": "int64_t sub_405bd0(int64_t arg1)\n{\n    int64_t rsi = 0xa;\n    if (arg1 >= 0xa)\n    {\n        rsi = arg1;\n    }\n    int64_t rsi_1 = (rsi | 1);\n    if (rsi_1 != -1)\n    {\n        do\n        {\n            int64_t rax_2;\n            int64_t rdx_1;\n            rdx_1 = HIGHD((rsi_1 * -0x5555555555555555));\n            rax_2 = LOWD((rsi_1 * -0x5555555555555555));\n            uint64_t rcx_2 = (rsi_1 - ((rdx_1 >> 1) * 3));\n            uint64_t rax_6 = rcx_2;\n            int64_t rdi;\n            if ((rsi_1 > 9 && rcx_2 != 0))\n            {\n                int64_t r8_1 = 0x10;\n                rdi = 9;\n                int64_t rcx_3 = 3;\n                uint64_t temp1_1;\n                do\n                {\n                    rcx_3 = (rcx_3 + 2);\n                    rdi = (rdi + r8_1);\n                    temp1_1 = (COMBINE(0, rsi_1) % rcx_3);\n                    rax_6 = temp1_1;\n                    if (rdi >= rsi_1)\n                    {\n                        break;\n                    }\n                    r8_1 = (r8_1 + 8);\n                } while (temp1_1 != 0);\n            }\n            if (((rsi_1 <= 9 || ((rsi_1 > 9 && rcx_2 != 0) && rdi >= rsi_1)) && rax_6 != 0))\n            {\n                break;\n            }\n            rsi_1 = (rsi_1 + 2);\n        } while (rsi_1 != -1);\n    }\n    return rsi_1;\n}\n\n"
        },
        {
            "funcName": "sub_405c70",
            "funcStartAddr": "0x405c70",
            "funcEndAddr": "0x405c80",
            "decompiledFuncCode": "uint64_t sub_405c70(int64_t arg1, int64_t arg2)\n{\n    return (COMBINE(0, (RORQ(arg1, 3))) % arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405c80",
            "funcStartAddr": "0x405c80",
            "funcEndAddr": "0x405c87",
            "decompiledFuncCode": "int64_t sub_405c80(int64_t arg1, int64_t arg2)\n{\n    int64_t rax;\n    rax = arg1 == arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405c90",
            "funcStartAddr": "0x4023a0",
            "funcEndAddr": "0x405cb1",
            "decompiledFuncCode": "int64_t sub_405c90(void* arg1, int64_t arg2)\n{\n    int64_t rax = *(arg1 + 0x30)(arg2, *(arg1 + 0x10));\n    if (*(arg1 + 0x10) <= rax)\n    {\n        abort();\n        /* no return */\n    }\n    return ((rax << 4) + *arg1);\n}\n\n"
        },
        {
            "funcName": "sub_405cc0",
            "funcStartAddr": "0x405cc0",
            "funcEndAddr": "0x405dd9",
            "decompiledFuncCode": "int64_t sub_405cc0(void* arg1, int64_t arg2, int64_t* arg3, char arg4)\n{\n    int64_t* rax = sub_405c90(arg1, arg2);\n    *arg3 = rax;\n    int64_t rsi = *rax;\n    if (rsi != 0)\n    {\n        int64_t* rbx_1 = rax;\n        char rax_1;\n        if (rsi != arg2)\n        {\n            rax_1 = *(arg1 + 0x38)(arg2, rsi);\n            if (rax_1 != 0)\n            {\n                rsi = *rbx_1;\n            }\n            else\n            {\n                int64_t* rax_2 = rbx_1[1];\n                if (rax_2 != 0)\n                {\n                    rsi = *rax_2;\n                    if (arg2 != rsi)\n                    {\n                        do\n                        {\n                            if (*(arg1 + 0x38)(arg2, rsi) != 0)\n                            {\n                                rax_2 = rbx_1[1];\n                                rsi = *rax_2;\n                                break;\n                            }\n                            rbx_1 = rbx_1[1];\n                            rax_2 = rbx_1[1];\n                            if (rax_2 == 0)\n                            {\n                                return 0;\n                            }\n                            rsi = *rax_2;\n                        } while (rsi != arg2);\n                    }\n                    if (arg4 != 0)\n                    {\n                        rbx_1[1] = rax_2[1];\n                        *rax_2 = 0;\n                        rax_2[1] = *(arg1 + 0x48);\n                        *(arg1 + 0x48) = rax_2;\n                    }\n                    goto label_405d79;\n                }\n            }\n        }\n        if (((rsi != arg2 && rax_1 != 0) || rsi == arg2))\n        {\n            if (arg4 == 0)\n            {\n            label_405d79:\n                return rsi;\n            }\n            int128_t* rax_5 = rbx_1[1];\n            if (rax_5 != 0)\n            {\n                *rbx_1 = *rax_5;\n                *rax_5 = 0;\n                *(rax_5 + 8) = *(arg1 + 0x48);\n                *(arg1 + 0x48) = rax_5;\n                return rsi;\n            }\n            *rbx_1 = 0;\n            goto label_405d79;\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_405de0",
            "funcStartAddr": "0x405de0",
            "funcEndAddr": "0x405e5e",
            "decompiledFuncCode": "int64_t sub_405de0(int64_t* arg1)\n{\n    int32_t* rax_3 = *arg1;\n    if (rax_3 != 0x412280)\n    {\n        int32_t zmm0 = rax_3[2];\n        if (((zmm0 == 0.100000001f | (FCMP_UO(zmm0, 0.100000001f))) || (zmm0 < 0.100000001f | (FCMP_UO(zmm0, 0.100000001f)))))\n        {\n        label_405e4a:\n            *arg1 = 0x412280;\n            return 0;\n        }\n        if (((0.899999976f == zmm0 | (FCMP_UO(0.899999976f, zmm0))) || (0.899999976f < zmm0 | (FCMP_UO(0.899999976f, zmm0)))))\n        {\n            goto label_405e4a;\n        }\n        float zmm1 = rax_3[3];\n        if (((zmm1 == 1.10000002f | (FCMP_UO(zmm1, 1.10000002f))) || (zmm1 < 1.10000002f | (FCMP_UO(zmm1, 1.10000002f)))))\n        {\n            goto label_405e4a;\n        }\n        zmm1 = *rax_3;\n        if ((zmm1 < 0f | (FCMP_UO(zmm1, 0f))))\n        {\n            goto label_405e4a;\n        }\n        zmm1 = (zmm1 + 0.100000001f);\n        int32_t zmm2 = rax_3[1];\n        if (((zmm2 == zmm1 | (FCMP_UO(zmm2, zmm1))) || (zmm2 < zmm1 | (FCMP_UO(zmm2, zmm1)))))\n        {\n            goto label_405e4a;\n        }\n        int512_t zmm3;\n        zmm3 = 0x3f800000;\n        if ((1f < zmm2 | (FCMP_UO(1f, zmm2))))\n        {\n            goto label_405e4a;\n        }\n        if ((!((!(zmm0 == zmm1 | (FCMP_UO(zmm0, zmm1)))) && (!(zmm0 < zmm1 | (FCMP_UO(zmm0, zmm1)))))))\n        {\n            goto label_405e4a;\n        }\n    }\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_405e60",
            "funcStartAddr": "0x405e60",
            "funcEndAddr": "0x405faa",
            "decompiledFuncCode": "int64_t sub_405e60(void* arg1, int64_t* arg2, char arg3)\n{\n    int64_t* r12 = *arg2;\n    if (r12 < arg2[1])\n    {\n        do\n        {\n            int64_t r15_2 = *r12;\n            if (r15_2 != 0)\n            {\n                int64_t* rbx_1 = r12[1];\n                if (rbx_1 != 0)\n                {\n                    while (true)\n                    {\n                        int64_t r15_1 = *rbx_1;\n                        int64_t* rax_1 = sub_405c90(arg1, r15_1);\n                        int64_t* rdx = rbx_1[1];\n                        if (*rax_1 != 0)\n                        {\n                            rbx_1[1] = rax_1[1];\n                            rax_1[1] = rbx_1;\n                            rbx_1 = rdx;\n                            if (rdx == 0)\n                            {\n                                break;\n                            }\n                        }\n                        else\n                        {\n                            *rax_1 = r15_1;\n                            *(arg1 + 0x18) = (*(arg1 + 0x18) + 1);\n                            *rbx_1 = 0;\n                            rbx_1[1] = *(arg1 + 0x48);\n                            *(arg1 + 0x48) = rbx_1;\n                            rbx_1 = rdx;\n                            if (rdx == 0)\n                            {\n                                break;\n                            }\n                        }\n                    }\n                    r15_2 = *r12;\n                }\n                r12[1] = 0;\n                if (arg3 == 0)\n                {\n                    int64_t* rax_3 = sub_405c90(arg1, r15_2);\n                    if (*rax_3 == 0)\n                    {\n                        *rax_3 = r15_2;\n                        *(arg1 + 0x18) = (*(arg1 + 0x18) + 1);\n                    }\n                    else\n                    {\n                        int64_t* rax_4 = *(arg1 + 0x48);\n                        if (rax_4 != 0)\n                        {\n                            *(arg1 + 0x48) = rax_4[1];\n                        }\n                        else\n                        {\n                            rax_4 = malloc(0x10);\n                            if (rax_4 == 0)\n                            {\n                                return 0;\n                            }\n                        }\n                        int64_t rdx_2 = rax_3[1];\n                        *rax_4 = r15_2;\n                        rax_4[1] = rdx_2;\n                        rax_3[1] = rax_4;\n                    }\n                    *r12 = 0;\n                    r12 = &r12[2];\n                    arg2[3] = (arg2[3] - 1);\n                    if (arg2[1] <= r12)\n                    {\n                        break;\n                    }\n                    continue;\n                }\n            }\n            r12 = &r12[2];\n        } while (arg2[1] > r12);\n    }\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_405fb0",
            "funcStartAddr": "0x405fb0",
            "funcEndAddr": "0x405fb5",
            "decompiledFuncCode": "int64_t sub_405fb0(void* arg1)\n{\n    return *(arg1 + 0x10);\n}\n\n"
        },
        {
            "funcName": "sub_405fc0",
            "funcStartAddr": "0x405fc0",
            "funcEndAddr": "0x405fc5",
            "decompiledFuncCode": "int64_t sub_405fc0(void* arg1)\n{\n    return *(arg1 + 0x18);\n}\n\n"
        },
        {
            "funcName": "sub_405fd0",
            "funcStartAddr": "0x405fd0",
            "funcEndAddr": "0x405fd5",
            "decompiledFuncCode": "int64_t sub_405fd0(void* arg1)\n{\n    return *(arg1 + 0x20);\n}\n\n"
        },
        {
            "funcName": "sub_405fe0",
            "funcStartAddr": "0x405fe0",
            "funcEndAddr": "0x40602f",
            "decompiledFuncCode": "int64_t sub_405fe0(int64_t* arg1)\n{\n    int64_t* rsi = *arg1;\n    int64_t rdi = arg1[1];\n    int64_t rax = 0;\n    if (rsi >= rdi)\n    {\n        return 0;\n    }\n    while (true)\n    {\n        if (*rsi == 0)\n        {\n            rsi = &rsi[2];\n            if (rsi >= rdi)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rdx_1 = rsi[1];\n            int64_t rcx_1 = 1;\n            if (rdx_1 != 0)\n            {\n                do\n                {\n                    rdx_1 = *(rdx_1 + 8);\n                    rcx_1 = (rcx_1 + 1);\n                } while (rdx_1 != 0);\n            }\n            if (rax < rcx_1)\n            {\n                rax = rcx_1;\n            }\n            rsi = &rsi[2];\n            if (rsi >= rdi)\n            {\n                break;\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_406030",
            "funcStartAddr": "0x406030",
            "funcEndAddr": "0x406097",
            "decompiledFuncCode": "int64_t sub_406030(int64_t* arg1)\n{\n    int64_t* rcx = *arg1;\n    int64_t rsi = arg1[1];\n    int64_t rdx = 0;\n    int64_t r8 = 0;\n    if (rcx < rsi)\n    {\n        do\n        {\n            if (*rcx != 0)\n            {\n                void* rax_1 = rcx[1];\n                r8 = (r8 + 1);\n                rdx = (rdx + 1);\n                if (rax_1 != 0)\n                {\n                    do\n                    {\n                        rax_1 = *(rax_1 + 8);\n                        rdx = (rdx + 1);\n                    } while (rax_1 != 0);\n                    rcx = &rcx[2];\n                    if (rcx >= rsi)\n                    {\n                        break;\n                    }\n                    continue;\n                }\n            }\n            rcx = &rcx[2];\n        } while (rcx < rsi);\n    }\n    if (arg1[3] == r8)\n    {\n        int64_t rax_2;\n        rax_2 = arg1[4] == rdx;\n        return rax_2;\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_4060a0",
            "funcStartAddr": "0x4060a0",
            "funcEndAddr": "0x4061e8",
            "decompiledFuncCode": "int64_t sub_4060a0(int64_t* arg1, FILE* arg2)\n{\n    int64_t rbx = 0;\n    int64_t r12 = arg1[2];\n    int64_t r13 = arg1[3];\n    int64_t* rsi = *arg1;\n    int64_t rdi = arg1[1];\n    if (rsi < rdi)\n    {\n        while (true)\n        {\n            if (*rsi == 0)\n            {\n                rsi = &rsi[2];\n                if (rsi >= rdi)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                void* rax_1 = rsi[1];\n                int64_t rdx_1 = 1;\n                if (rax_1 != 0)\n                {\n                    do\n                    {\n                        rax_1 = *(rax_1 + 8);\n                        rdx_1 = (rdx_1 + 1);\n                    } while (rax_1 != 0);\n                }\n                if (rbx < rdx_1)\n                {\n                    rbx = rdx_1;\n                }\n                rsi = &rsi[2];\n                if (rsi >= rdi)\n                {\n                    break;\n                }\n            }\n        }\n    }\n    __fprintf_chk(arg2, 1, \"# entries:         %lu\\n\");\n    __fprintf_chk(arg2, 1, \"# buckets:         %lu\\n\", r12);\n    __fprintf_chk(arg2, 1, \"# buckets used:    %lu (%.2f%%)\\n\", r13);\n    /* tailcall */\n    return __fprintf_chk(arg2, 1, \"max bucket length: %lu\\n\", rbx);\n}\n\n"
        },
        {
            "funcName": "sub_4061f0",
            "funcStartAddr": "0x4061f0",
            "funcEndAddr": "0x406243",
            "decompiledFuncCode": "int64_t sub_4061f0(void* arg1, int64_t arg2)\n{\n    int64_t rbp = arg2;\n    int64_t* rax = sub_405c90(arg1, arg2);\n    int64_t rsi = *rax;\n    if (rsi != 0)\n    {\n        int64_t* rbx_1 = rax;\n        while (true)\n        {\n            if (rsi != rbp)\n            {\n                if (*(arg1 + 0x38)(rbp, rsi) != 0)\n                {\n                    rbp = *rbx_1;\n                }\n                else\n                {\n                    rbx_1 = rbx_1[1];\n                    if (rbx_1 == 0)\n                    {\n                        break;\n                    }\n                    rsi = *rbx_1;\n                    continue;\n                }\n            }\n            return rbp;\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_406250",
            "funcStartAddr": "0x4023a5",
            "funcEndAddr": "0x406298",
            "decompiledFuncCode": "int64_t sub_406250(int64_t* arg1)\n{\n    if (arg1[4] == 0)\n    {\n        return 0;\n    }\n    int64_t* rdx = *arg1;\n    int64_t rcx = arg1[1];\n    if (rdx < rcx)\n    {\n        do\n        {\n            int64_t rax_1 = *rdx;\n            if (rax_1 != 0)\n            {\n                return rax_1;\n            }\n            rdx = &rdx[2];\n        } while (rdx < rcx);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4062a0",
            "funcStartAddr": "0x4062a0",
            "funcEndAddr": "0x40630a",
            "decompiledFuncCode": "int64_t sub_4062a0(void* arg1, int64_t arg2)\n{\n    int64_t* rax = sub_405c90(arg1, arg2);\n    int64_t* rcx = rax;\n    int64_t* rdx = rax;\n    do\n    {\n        int64_t rax_1 = *rdx;\n        rdx = rdx[1];\n        if (rax_1 == arg2)\n        {\n            if (rdx != 0)\n            {\n                return *rdx;\n            }\n            break;\n        }\n    } while (rdx != 0);\n    int64_t rdx_1 = *(arg1 + 8);\n    int64_t rax_2;\n    do\n    {\n        rcx = &rcx[2];\n        if (rdx_1 <= rcx)\n        {\n            rax_2 = 0;\n            break;\n        }\n        rax_2 = *rcx;\n    } while (rax_2 == 0);\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_406310",
            "funcStartAddr": "0x406310",
            "funcEndAddr": "0x406374",
            "decompiledFuncCode": "int64_t sub_406310(int64_t* arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rdx = *arg1;\n    if (arg1[1] <= rdx)\n    {\n        return 0;\n    }\n    int64_t r9 = 0;\n    do\n    {\n        int64_t r8_1 = *rdx;\n        if (r8_1 != 0)\n        {\n            if (arg3 <= r9)\n            {\n                break;\n            }\n            *(arg2 + (r9 << 3)) = r8_1;\n            int64_t* r8_2 = rdx[1];\n            int64_t rcx_1 = (r9 + 1);\n            if (r8_2 != 0)\n            {\n                do\n                {\n                    if (arg3 == rcx_1)\n                    {\n                        return arg3;\n                    }\n                    rcx_1 = (rcx_1 + 1);\n                    *((arg2 + (rcx_1 << 3)) - 8) = *r8_2;\n                    r8_2 = r8_2[1];\n                } while (r8_2 != 0);\n            }\n            r9 = rcx_1;\n        }\n        rdx = &rdx[2];\n    } while (arg1[1] > rdx);\n    return r9;\n}\n\n"
        },
        {
            "funcName": "sub_406380",
            "funcStartAddr": "0x406380",
            "funcEndAddr": "0x4063f8",
            "decompiledFuncCode": "int64_t sub_406380(int64_t* arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* r14 = *arg1;\n    int64_t rbp;\n    if (arg1[1] <= r14)\n    {\n        rbp = 0;\n    }\n    else\n    {\n        rbp = 0;\n        do\n        {\n            int64_t rdi = *r14;\n            if (rdi != 0)\n            {\n                int64_t* rbx_1 = r14;\n                while (true)\n                {\n                    if (arg2(rdi, arg3) == 0)\n                    {\n                        return rbp;\n                    }\n                    rbx_1 = rbx_1[1];\n                    rbp = (rbp + 1);\n                    if (rbx_1 == 0)\n                    {\n                        break;\n                    }\n                    rdi = *rbx_1;\n                }\n            }\n            r14 = &r14[2];\n        } while (arg1[1] > r14);\n    }\n    return rbp;\n}\n\n"
        },
        {
            "funcName": "sub_406400",
            "funcStartAddr": "0x406400",
            "funcEndAddr": "0x406431",
            "decompiledFuncCode": "uint64_t sub_406400(char* arg1, int64_t arg2)\n{\n    uint64_t rcx = *arg1;\n    uint64_t rdx = 0;\n    if (rcx != 0)\n    {\n        do\n        {\n            arg1 = &arg1[1];\n            int64_t rax_4 = (((rdx << 5) - rdx) + rcx);\n            rcx = *arg1;\n            rdx = (COMBINE(0, rax_4) % arg2);\n        } while (rcx != 0);\n    }\n    return rdx;\n}\n\n"
        },
        {
            "funcName": "sub_406440",
            "funcStartAddr": "0x406440",
            "funcEndAddr": "0x406460",
            "decompiledFuncCode": "void sub_406440(int64_t* arg1)\n{\n    arg1[2] = 0;\n    *arg1 = 0x3f80000000000000;\n    arg1[1] = 0x3fb4fdf43f4ccccd;\n}\n\n"
        },
        {
            "funcName": "sub_406460",
            "funcStartAddr": "0x406460",
            "funcEndAddr": "0x4065ea",
            "decompiledFuncCode": "int64_t* sub_406460(int64_t arg1, void* arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5)\n{\n    int64_t r13 = arg4;\n    int64_t r12 = arg3;\n    int64_t rbp = arg1;\n    if (arg3 == 0)\n    {\n        r12 = 0x405c70;\n    }\n    if (arg4 == 0)\n    {\n        r13 = 0x405c80;\n    }\n    int64_t* rax = malloc(0x50);\n    int64_t* rbx = rax;\n    if (rax != 0)\n    {\n        int64_t* rdi = &rax[5];\n        float zmm1_1;\n        if (arg2 == 0)\n        {\n            rax[5] = 0x412280;\n            zmm1_1 = 0.800000012f;\n            if (sub_405de0(rdi) != 0)\n            {\n                float zmm0_1;\n                if (rbp < 0)\n                {\n                label_4065d3:\n                    zmm0_1 = ((rbp >> 1) | (rbp & 1));\n                    zmm0_1 = (zmm0_1 + zmm0_1);\n                label_406587:\n                    zmm0_1 = (zmm0_1 / zmm1_1);\n                    if ((!(zmm0_1 < 1.84467441e+19f | (FCMP_UO(zmm0_1, 1.84467441e+19f)))))\n                    {\n                        goto label_406540;\n                    }\n                    if ((zmm0_1 < 9.22337204e+18f | (FCMP_UO(zmm0_1, 9.22337204e+18f))))\n                    {\n                        rbp = (truncf(zmm0_1, arg4));\n                    }\n                    else\n                    {\n                        zmm0_1 = (zmm0_1 - 9.22337204e+18f);\n                        rbp = ((truncf(zmm0_1, arg4)) ^ 0x8000000000000000);\n                    }\n                    goto label_4064d3;\n                }\n            label_406582:\n                zmm0_1 = rbp;\n                goto label_406587;\n            }\n        label_406540:\n            int64_t* rdi_3 = rbx;\n            rbx = nullptr;\n            free(rdi_3);\n        }\n        else\n        {\n            rax[5] = arg2;\n            if (sub_405de0(rdi) == 0)\n            {\n                goto label_406540;\n            }\n            if (*(arg2 + 0x10) == 0)\n            {\n                zmm1_1 = *(arg2 + 8);\n                if (rbp < 0)\n                {\n                    goto label_4065d3;\n                }\n                goto label_406582;\n            }\n        label_4064d3:\n            size_t rax_2 = sub_405bd0(rbp);\n            uint64_t rax_3;\n            rax_3 = (rax_2 >> 0x3d) != 0;\n            uint64_t rax_4 = rax_3;\n            if ((TEST_BITQ(rax_2, 0x3c)))\n            {\n                goto label_406540;\n            }\n            if (rax_4 != 0)\n            {\n                goto label_406540;\n            }\n            rbx[2] = rax_2;\n            if (rax_2 == 0)\n            {\n                goto label_406540;\n            }\n            int64_t rax_5 = calloc(rax_2, 0x10);\n            *rbx = rax_5;\n            if (rax_5 == 0)\n            {\n                goto label_406540;\n            }\n            rbx[3] = 0;\n            rbx[4] = 0;\n            rbx[1] = ((rax_2 << 4) + rax_5);\n            rbx[6] = r12;\n            rbx[7] = r13;\n            rbx[8] = arg5;\n            rbx[9] = 0;\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_4065f0",
            "funcStartAddr": "0x4065f0",
            "funcEndAddr": "0x406698",
            "decompiledFuncCode": "void sub_4065f0(int64_t* arg1)\n{\n    int64_t* r12 = *arg1;\n    if (r12 < arg1[1])\n    {\n        while (true)\n        {\n            if (*r12 == 0)\n            {\n                r12 = &r12[2];\n                if (arg1[1] <= r12)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                int64_t* rbx_1 = r12[1];\n                int64_t rax = arg1[8];\n                if (rbx_1 != 0)\n                {\n                    int64_t* rdx_1;\n                    do\n                    {\n                        if (rax != 0)\n                        {\n                            rax(*rbx_1);\n                            rax = arg1[8];\n                        }\n                        rdx_1 = rbx_1[1];\n                        int64_t rcx_1 = arg1[9];\n                        *rbx_1 = 0;\n                        rbx_1[1] = rcx_1;\n                        arg1[9] = rbx_1;\n                        rbx_1 = rdx_1;\n                    } while (rdx_1 != 0);\n                }\n                if (rax != 0)\n                {\n                    rax(*r12);\n                }\n                *r12 = 0;\n                r12 = &r12[2];\n                r12[-1] = 0;\n                if (arg1[1] <= r12)\n                {\n                    break;\n                }\n            }\n        }\n    }\n    arg1[3] = 0;\n    arg1[4] = 0;\n}\n\n"
        },
        {
            "funcName": "sub_4066a0",
            "funcStartAddr": "0x4066a0",
            "funcEndAddr": "0x406776",
            "decompiledFuncCode": "int64_t sub_4066a0(int64_t* arg1)\n{\n    int64_t* rbp = *arg1;\n    int64_t rax = arg1[1];\n    if (((arg1[8] != 0 && arg1[4] != 0) && rbp < rax))\n    {\n        while (true)\n        {\n            int64_t rdi = *rbp;\n            if (rdi == 0)\n            {\n                rbp = &rbp[2];\n                if (rax <= rbp)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                int64_t* rbx_1 = rbp;\n                while (true)\n                {\n                    arg1[8](rdi);\n                    rbx_1 = rbx_1[1];\n                    if (rbx_1 == 0)\n                    {\n                        break;\n                    }\n                    rdi = *rbx_1;\n                }\n                rax = arg1[1];\n                rbp = &rbp[2];\n                if (rax <= rbp)\n                {\n                    break;\n                }\n            }\n        }\n        rbp = *arg1;\n    }\n    if ((((arg1[8] == 0 || (arg1[8] != 0 && arg1[4] == 0)) || ((arg1[8] != 0 && arg1[4] != 0) && rbp < rax)) && rbp < rax))\n    {\n        do\n        {\n            void* rdi_1 = rbp[1];\n            if (rdi_1 != 0)\n            {\n                void* rbx_2;\n                do\n                {\n                    rbx_2 = *(rdi_1 + 8);\n                    free(rdi_1);\n                    rdi_1 = rbx_2;\n                } while (rbx_2 != 0);\n            }\n            rbp = &rbp[2];\n        } while (arg1[1] > rbp);\n    }\n    void* rdi_2 = arg1[9];\n    if (rdi_2 != 0)\n    {\n        void* rbx_3;\n        do\n        {\n            rbx_3 = *(rdi_2 + 8);\n            free(rdi_2);\n            rdi_2 = rbx_3;\n        } while (rbx_3 != 0);\n    }\n    free(*arg1);\n    /* tailcall */\n    return free(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_406780",
            "funcStartAddr": "0x4023aa",
            "funcEndAddr": "0x40697a",
            "decompiledFuncCode": "uint64_t sub_406780(int64_t* arg1, int64_t arg2)\n{\n    void* r12 = arg1[5];\n    int32_t rbx_4;\n    if (*(r12 + 0x10) == 0)\n    {\n        float zmm0;\n        if (arg2 < 0)\n        {\n            zmm0 = ((arg2 >> 1) | (arg2 & 1));\n            zmm0 = (zmm0 + zmm0);\n        }\n        else\n        {\n            zmm0 = arg2;\n        }\n        zmm0 = (zmm0 / *(r12 + 8));\n        if ((!(zmm0 < 1.84467441e+19f | (FCMP_UO(zmm0, 1.84467441e+19f)))))\n        {\n        label_4068f0:\n            rbx_4 = 0;\n        label_4068fc:\n            return rbx_4;\n        }\n        if ((zmm0 < 9.22337204e+18f | (FCMP_UO(zmm0, 9.22337204e+18f))))\n        {\n            arg2 = (truncf(zmm0, 0x28));\n        }\n        else\n        {\n            zmm0 = (zmm0 - 9.22337204e+18f);\n            arg2 = ((truncf(zmm0, 0x28)) ^ 0x8000000000000000);\n        }\n    }\n    size_t rax_1 = sub_405bd0(arg2);\n    uint64_t rax_2;\n    rax_2 = (rax_1 >> 0x3d) != 0;\n    uint64_t rax_3 = rax_2;\n    if ((rax_1 << 3) < 0)\n    {\n        rax_3 = 1;\n    }\n    if (rax_1 == 0)\n    {\n        goto label_4068f0;\n    }\n    if (rax_3 != 0)\n    {\n        goto label_4068f0;\n    }\n    if (arg1[2] == rax_1)\n    {\n        return 1;\n    }\n    int64_t rax_4 = calloc(rax_1, 0x10);\n    int64_t var_68 = rax_4;\n    if (rax_4 == 0)\n    {\n        goto label_4068f0;\n    }\n    int64_t rbx_3 = ((rax_1 << 4) + rax_4);\n    int64_t var_38_1 = arg1[6];\n    int64_t var_48_1 = 0;\n    int64_t var_30_1 = arg1[7];\n    void* var_40_1 = r12;\n    int64_t var_28_1 = arg1[8];\n    int64_t rax_8 = arg1[9];\n    int32_t rax_9 = sub_405e60(&var_68, arg1, 0);\n    rbx_4 = rax_9;\n    if (rax_9 == 0)\n    {\n        arg1[9] = rax_8;\n        if ((sub_405e60(arg1, &var_68, 1) != 0 && sub_405e60(arg1, &var_68, 0) != 0))\n        {\n            free(var_68);\n            return rbx_4;\n        }\n        abort();\n        /* no return */\n    }\n    free(*arg1);\n    *arg1 = var_68;\n    arg1[1] = rbx_3;\n    arg1[2] = rax_1;\n    arg1[3] = 0;\n    arg1[9] = rax_8;\n    goto label_4068fc;\n}\n\n"
        },
        {
            "funcName": "sub_406980",
            "funcStartAddr": "0x4023af",
            "funcEndAddr": "0x406bf4",
            "decompiledFuncCode": "int64_t sub_406980(int64_t* arg1, int64_t arg2, int64_t* arg3)\n{\n    if (arg2 != 0)\n    {\n        int64_t* var_20;\n        int64_t rax_1 = sub_405cc0(arg1, arg2, &var_20, 0);\n        if (rax_1 != 0)\n        {\n            if (arg3 != 0)\n            {\n                *arg3 = rax_1;\n            }\n            return 0;\n        }\n        int64_t rax_3 = arg1[3];\n        int64_t rax_4;\n        void* rdx_2;\n        float zmm1;\n        if (rax_3 < 0)\n        {\n            rax_4 = arg1[2];\n            zmm1 = ((rax_3 >> 1) | (rax_3 & 1));\n            rdx_2 = arg1[5];\n            zmm1 = (zmm1 + zmm1);\n        }\n        else\n        {\n            rdx_2 = arg1[5];\n            zmm1 = rax_3;\n            rax_4 = arg1[2];\n        }\n        float zmm0_1;\n        if (((rax_3 < 0 && rax_4 >= 0) || (rax_3 >= 0 && rax_4 >= 0)))\n        {\n            zmm0_1 = (rax_4 * *(rdx_2 + 8));\n            if ((!((!(zmm1 == zmm0_1 | (FCMP_UO(zmm1, zmm0_1)))) && (!(zmm1 < zmm0_1 | (FCMP_UO(zmm1, zmm0_1)))))))\n            {\n            label_406a02:\n                int64_t* r12_2 = var_20;\n                if (*r12_2 == 0)\n                {\n                    *r12_2 = arg2;\n                    arg1[4] = (arg1[4] + 1);\n                    arg1[3] = (arg1[3] + 1);\n                    return 1;\n                }\n                int64_t* rax_5 = arg1[9];\n                if (rax_5 == 0)\n                {\n                    rax_5 = malloc(0x10);\n                }\n                else\n                {\n                    arg1[9] = rax_5[1];\n                }\n                int64_t rdx_4 = r12_2[1];\n                *rax_5 = arg2;\n                rax_5[1] = rdx_4;\n                r12_2[1] = rax_5;\n                arg1[4] = (arg1[4] + 1);\n                return 1;\n                goto label_406b14;\n            }\n        label_406aa5:\n            sub_405de0(&arg1[5]);\n            void* rdx_8 = arg1[5];\n            int64_t rax_9 = arg1[2];\n            float zmm2_1 = *(rdx_8 + 8);\n            float zmm0_2;\n            if (rax_9 < 0)\n            {\n                zmm0_2 = ((rax_9 >> 1) | (rax_9 & 1));\n                zmm0_2 = (zmm0_2 + zmm0_2);\n            }\n            else\n            {\n                zmm0_2 = rax_9;\n            }\n            int64_t rax_10 = arg1[3];\n            float zmm1_1;\n            if (rax_10 < 0)\n            {\n                zmm1_1 = ((rax_10 >> 1) | (rax_10 & 1));\n                zmm1_1 = (zmm1_1 + zmm1_1);\n            }\n            else\n            {\n                zmm1_1 = rax_10;\n            }\n            float zmm3_1 = (zmm2_1 * zmm0_2);\n            if (((zmm1_1 == zmm3_1 | (FCMP_UO(zmm1_1, zmm3_1))) || (zmm1_1 < zmm3_1 | (FCMP_UO(zmm1_1, zmm3_1)))))\n            {\n                goto label_406a02;\n            }\n            zmm0_2 = (zmm0_2 * *(rdx_8 + 0xc));\n            if (*(rdx_8 + 0x10) == 0)\n            {\n                zmm0_2 = (zmm0_2 * zmm2_1);\n            }\n            if ((!(zmm0_2 < 1.84467441e+19f | (FCMP_UO(zmm0_2, 1.84467441e+19f)))))\n            {\n            label_406b14:\n                return 0xffffffff;\n            }\n            int64_t rsi;\n            if ((!(zmm0_2 < 9.22337204e+18f | (FCMP_UO(zmm0_2, 9.22337204e+18f)))))\n            {\n                zmm0_2 = (zmm0_2 - 9.22337204e+18f);\n                rsi = ((truncf(zmm0_2, arg1)) ^ 0x8000000000000000);\n            }\n            else\n            {\n                rsi = (truncf(zmm0_2, arg1));\n            }\n            if (sub_406780(arg1, rsi) == 0)\n            {\n                goto label_406b14;\n            }\n            if (sub_405cc0(arg1, arg2, &var_20, 0) == 0)\n            {\n                goto label_406a02;\n            }\n        }\n        if (((rax_3 < 0 && rax_4 < 0) || (rax_3 >= 0 && rax_4 < 0)))\n        {\n            zmm0_1 = ((rax_4 >> 1) | (rax_4 & 1));\n            zmm0_1 = (zmm0_1 + zmm0_1);\n            zmm0_1 = (zmm0_1 * *(rdx_2 + 8));\n            if ((!((zmm1 == zmm0_1 | (FCMP_UO(zmm1, zmm0_1))) || (zmm1 < zmm0_1 | (FCMP_UO(zmm1, zmm0_1))))))\n            {\n                goto label_406aa5;\n            }\n            goto label_406a02;\n        }\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_406c00",
            "funcStartAddr": "0x406c00",
            "funcEndAddr": "0x406c3b",
            "decompiledFuncCode": "int64_t sub_406c00(int64_t* arg1, int64_t arg2)\n{\n    int64_t rbx = arg2;\n    int64_t var_10;\n    int32_t rax = sub_406980(arg1, arg2, &var_10);\n    if (rax == 0xffffffff)\n    {\n        return 0;\n    }\n    if (rax == 0)\n    {\n        rbx = var_10;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_406c40",
            "funcStartAddr": "0x406c40",
            "funcEndAddr": "0x406e17",
            "decompiledFuncCode": "int64_t sub_406c40(int64_t* arg1)\n{\n    int64_t* var_20;\n    int64_t rsi;\n    int64_t rax = sub_405cc0(arg1, rsi, &var_20, 1);\n    if (rax != 0)\n    {\n        int64_t* rax_1 = var_20;\n        arg1[4] = (arg1[4] - 1);\n        if (*rax_1 == 0)\n        {\n            int64_t rax_3 = arg1[3];\n            int64_t rax_4 = (rax_3 - 1);\n            arg1[3] = rax_4;\n            int64_t rax_5;\n            float* rdx_1;\n            float zmm0_1;\n            if ((rax_3 - 1) < 0)\n            {\n                rax_5 = arg1[2];\n                zmm0_1 = ((rax_4 >> 1) | (rax_4 & 1));\n                rdx_1 = arg1[5];\n                zmm0_1 = (zmm0_1 + zmm0_1);\n            }\n            else\n            {\n                rdx_1 = arg1[5];\n                zmm0_1 = rax_4;\n                rax_5 = arg1[2];\n            }\n            float zmm1;\n            if ((((rax_3 - 1) < 0 && rax_5 >= 0) || ((rax_3 - 1) >= 0 && rax_5 >= 0)))\n            {\n                zmm1 = rax_5;\n            }\n            if ((((rax_3 - 1) < 0 && rax_5 < 0) || ((rax_3 - 1) >= 0 && rax_5 < 0)))\n            {\n                zmm1 = ((rax_5 >> 1) | (rax_5 & 1));\n                zmm1 = (zmm1 + zmm1);\n            }\n            zmm1 = (zmm1 * *rdx_1);\n            if ((!((zmm1 == zmm0_1 | (FCMP_UO(zmm1, zmm0_1))) || (zmm1 < zmm0_1 | (FCMP_UO(zmm1, zmm0_1))))))\n            {\n                sub_405de0(&arg1[5]);\n                int64_t rax_6 = arg1[2];\n                int32_t* rdx_2 = arg1[5];\n                float zmm0_2;\n                if (rax_6 < 0)\n                {\n                    zmm0_2 = ((rax_6 >> 1) | (rax_6 & 1));\n                    zmm0_2 = (zmm0_2 + zmm0_2);\n                }\n                else\n                {\n                    zmm0_2 = rax_6;\n                }\n                int64_t rax_7 = arg1[3];\n                float zmm1_1;\n                if (rax_7 < 0)\n                {\n                    zmm1_1 = ((rax_7 >> 1) | (rax_7 & 1));\n                    zmm1_1 = (zmm1_1 + zmm1_1);\n                }\n                else\n                {\n                    zmm1_1 = rax_7;\n                }\n                float zmm2_1 = (*rdx_2 * zmm0_2);\n                if ((!((zmm2_1 == zmm1_1 | (FCMP_UO(zmm2_1, zmm1_1))) || (zmm2_1 < zmm1_1 | (FCMP_UO(zmm2_1, zmm1_1))))))\n                {\n                    zmm0_2 = (zmm0_2 * rdx_2[1]);\n                    if (rdx_2[4] == 0)\n                    {\n                        zmm0_2 = (zmm0_2 * rdx_2[2]);\n                    }\n                    int64_t rsi_1;\n                    if ((!(zmm0_2 < 9.22337204e+18f | (FCMP_UO(zmm0_2, 9.22337204e+18f)))))\n                    {\n                        zmm0_2 = (zmm0_2 - 9.22337204e+18f);\n                        rsi_1 = ((truncf(zmm0_2, arg1)) ^ 0x8000000000000000);\n                    }\n                    else\n                    {\n                        rsi_1 = (truncf(zmm0_2, arg1));\n                    }\n                    if (sub_406780(arg1, rsi_1) == 0)\n                    {\n                        void* rdi_2 = arg1[9];\n                        if (rdi_2 != 0)\n                        {\n                            void* r12_1;\n                            do\n                            {\n                                r12_1 = *(rdi_2 + 8);\n                                free(rdi_2);\n                                rdi_2 = r12_1;\n                            } while (r12_1 != 0);\n                        }\n                        arg1[9] = 0;\n                    }\n                }\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_406e20",
            "funcStartAddr": "0x406e20",
            "funcEndAddr": "0x406e47",
            "decompiledFuncCode": "uint64_t sub_406e20(int64_t* arg1, int64_t arg2)\n{\n    return (COMBINE(0, (sub_40dc40(*arg1, arg2) ^ arg1[1])) % arg2);\n}\n\n"
        },
        {
            "funcName": "sub_406e50",
            "funcStartAddr": "0x406e50",
            "funcEndAddr": "0x406e5d",
            "decompiledFuncCode": "uint64_t sub_406e50(void* arg1, int64_t arg2)\n{\n    return (COMBINE(0, *(arg1 + 8)) % arg2);\n}\n\n"
        },
        {
            "funcName": "sub_406e60",
            "funcStartAddr": "0x406e60",
            "funcEndAddr": "0x406e85",
            "decompiledFuncCode": "int64_t sub_406e60(int64_t* arg1, int64_t* arg2)\n{\n    if ((arg1[1] == arg2[1] && arg1[2] == arg2[2]))\n    {\n        /* tailcall */\n        return sub_409e00(*arg1, *arg2);\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_406e90",
            "funcStartAddr": "0x406e90",
            "funcEndAddr": "0x406ec3",
            "decompiledFuncCode": "int64_t sub_406e90(int64_t* arg1, int64_t* arg2)\n{\n    if ((arg1[1] == arg2[1] && arg1[2] == arg2[2]))\n    {\n        int64_t rax;\n        rax = strcmp(*arg1, *arg2) == 0;\n        return rax;\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_406ed0",
            "funcStartAddr": "0x406ed0",
            "funcEndAddr": "0x406ee5",
            "decompiledFuncCode": "int64_t sub_406ed0(int64_t* arg1)\n{\n    free(*arg1);\n    /* tailcall */\n    return free(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_406ef0",
            "funcStartAddr": "0x406ef0",
            "funcEndAddr": "0x406fa7",
            "decompiledFuncCode": "long double sub_406ef0(int32_t arg1, uint16_t arg2 @ x87control, \n    long double arg3)\n{\n    long double x87_r7 = 9.22337204e+18f;\n    int64_t rax_1;\n    if (arg3 >= x87_r7)\n    {\n        uint16_t x87status_3;\n        int16_t temp0_2;\n        temp0_2 = __fnstcw_memmem16(arg2);\n        long double x87_r7_1 = (arg3 - x87_r7);\n        x87_r7 = arg3;\n        int16_t rax_3;\n        *rax_3[1] = (*temp0_2[1] | 0xc);\n        uint16_t x87control_2;\n        uint16_t x87status_4;\n        x87control_2 = __fldcw_memmem16(rax_3);\n        uint16_t x87control_3;\n        uint16_t x87status_5;\n        x87control_3 = __fldcw_memmem16(temp0_2);\n        rax_1 = (x87_r7_1 ^ 0x8000000000000000);\n    }\n    else\n    {\n        uint16_t x87status;\n        int16_t temp0;\n        temp0 = __fnstcw_memmem16(arg2);\n        int16_t rax;\n        *rax[1] = (*temp0[1] | 0xc);\n        uint16_t x87control;\n        uint16_t x87status_1;\n        x87control = __fldcw_memmem16(rax);\n        uint16_t x87control_1;\n        uint16_t x87status_2;\n        x87control_1 = __fldcw_memmem16(temp0);\n        rax_1 = x87_r7;\n    }\n    long double x87_r6_2 = rax_1;\n    if (rax_1 < 0)\n    {\n        x87_r6_2 = (x87_r6_2 + 1.84467441e+19f);\n    }\n    if (arg1 == 0)\n    {\n        long double x87_r6_3 = x87_r7;\n        x87_r7 = x87_r6_2;\n        (x87_r6_3 - x87_r7);\n        if (((FCMP_UO(x87_r6_3, x87_r7)) || ((!(FCMP_UO(x87_r6_3, x87_r7))) && (!x87_r6_3 == x87_r7))))\n        {\n            x87_r7 = (rax_1 + 1);\n            if ((rax_1 + 1) < 0)\n            {\n                return (x87_r7 + 1.84467441e+19f);\n            }\n        }\n    }\n    return x87_r7;\n}\n\n"
        },
        {
            "funcName": "sub_406fb0",
            "funcStartAddr": "0x406fb0",
            "funcEndAddr": "0x40797e",
            "decompiledFuncCode": "void sub_406fb0(int64_t arg1, char* arg2, int32_t arg3, int64_t arg4, \n    int64_t arg5)\n{\n    int32_t rax_1 = (arg3 & 0x20);\n    int32_t rcx_1 = (arg3 & 3);\n    int32_t rax_4 = (((rax_1 - rax_1) & 0xffffffe8) + 0x400);\n    struct lconv* rax_5 = localeconv();\n    char* r15 = rax_5->decimal_point;\n    uint64_t rax_6 = strlen(r15);\n    uint64_t r8 = rax_6;\n    bool cond:1 = (rax_6 - 1) >= 0x10;\n    if ((rax_6 - 1) >= 0x10)\n    {\n        r15 = &data_41218c;\n    }\n    char* rax_8 = rax_5->grouping;\n    char* r12_1 = rax_5->thousands_sep;\n    if (cond:1)\n    {\n        r8 = 1;\n    }\n    uint64_t r8_1 = r8;\n    if (strlen(r12_1) >= 0x11)\n    {\n        r12_1 = &data_4139f9[0x1b];\n    }\n    void* var_a8 = &arg2[0x287];\n    int32_t rcx_8;\n    int64_t rdx;\n    int32_t rbx_1;\n    uint64_t rsi_1;\n    uint32_t rdi_15;\n    uint32_t r9_1;\n    uint64_t temp0_1;\n    void* r14_3;\n    void* r15_5;\n    if (arg5 <= arg4)\n    {\n        rdx = 0;\n        temp0_1 = (COMBINE(rdx, arg4) / arg5);\n        if ((COMBINE(rdx, arg4) % arg5) != 0)\n        {\n            goto label_40709a;\n        }\n        rsi_1 = (temp0_1 * arg1);\n        if ((COMBINE(0, rsi_1) / temp0_1) != arg1)\n        {\n            goto label_40709a;\n        }\n        rdi_15 = 0;\n        r9_1 = 0;\n        rcx_8 = (arg3 & 0x10);\n        if (rcx_8 == 0)\n        {\n        label_40760a:\n            rbx_1 = -1;\n        label_407366:\n            r14_3 = var_a8;\n            if (rcx_1 == 1)\n            {\n                if ((r9_1 + (rsi_1 & 1) != (-rdi_15)) > 5)\n                {\n                    r14_3 = var_a8;\n                label_407381:\n                    rsi_1 = (rsi_1 + 1);\n                    if (rcx_8 == 0)\n                    {\n                        goto label_4073aa;\n                    }\n                    if (rax_4 != rsi_1)\n                    {\n                        goto label_4073aa;\n                    }\n                    if (rbx_1 == 8)\n                    {\n                        goto label_4073aa;\n                    }\n                    rbx_1 = (rbx_1 + 1);\n                    if ((arg3 & 8) == 0)\n                    {\n                        *(r14_3 - 1) = 0x30;\n                        r14_3 = (r14_3 + (!r8_1));\n                        uint64_t rax_67 = r8_1;\n                        if (r8_1 >= 8)\n                        {\n                            void* rcx_21 = ((r14_3 + 8) & 0xfffffffffffffff8);\n                            *r14_3 = *r15;\n                            uint64_t rax_69 = r8_1;\n                            *((r14_3 + rax_69) - 8) = *((r15 + rax_69) - 8);\n                            void* rax_71 = (r14_3 - rcx_21);\n                            int64_t* r15_8 = (r15 - rax_71);\n                            int32_t rax_73 = ((rax_71 + r8_1) & 0xfffffff8);\n                            if (rax_73 >= 8)\n                            {\n                                int32_t rax_74 = (rax_73 & 0xfffffff8);\n                                int32_t rdx_37 = 0;\n                                do\n                                {\n                                    uint64_t rsi_11 = rdx_37;\n                                    rdx_37 = (rdx_37 + 8);\n                                    *(rcx_21 + rsi_11) = *(r15_8 + rsi_11);\n                                } while (rdx_37 < rax_74);\n                            }\n                        }\n                        else if ((r8_1 & 4) != 0)\n                        {\n                            *r14_3 = *r15;\n                            *((r14_3 + rax_67) - 4) = *((r15 + rax_67) - 4);\n                        }\n                        else if (rax_67 != 0)\n                        {\n                            *r14_3 = *r15;\n                            if ((rax_67 & 2) != 0)\n                            {\n                                *((r14_3 + rax_67) - 2) = *((r15 + rax_67) - 2);\n                            }\n                        }\n                    }\n                    r15_5 = (r14_3 - 1);\n                    *(r14_3 - 1) = 0x31;\n                }\n                else\n                {\n                label_4073aa:\n                    r15_5 = r14_3;\n                    while (true)\n                    {\n                        r15_5 = (r15_5 - 1);\n                        int64_t rax_35;\n                        int64_t rdx_12;\n                        rdx_12 = HIGHD((rsi_1 * -0x3333333333333333));\n                        rax_35 = LOWD((rsi_1 * -0x3333333333333333));\n                        uint64_t rdx_13 = (rdx_12 >> 3);\n                        char rax_36 = (rdx_13 + (rdx_13 << 2));\n                        *r15_5 = ((rsi_1 - (rax_36 + rax_36)) + 0x30);\n                        if (rsi_1 <= 9)\n                        {\n                            break;\n                        }\n                        rsi_1 = rdx_13;\n                    }\n                    if ((arg3 & 4) != 0)\n                    {\n                    label_4073f5:\n                        uint64_t rax_40 = strlen(r12_1);\n                        uint64_t rbp_4 = (r14_3 - r15_5);\n                        void var_68;\n                        __memcpy_chk(&var_68, r15_5, rbp_4, 0x29);\n                        char* r15_6 = rax_8;\n                        uint64_t rbx_4 = rbp_4;\n                        uint64_t rbp_5 = -1;\n                        while (true)\n                        {\n                            char rdx_15 = *r15_6;\n                            if (rdx_15 != 0)\n                            {\n                                uint64_t rax_41 = rdx_15;\n                                if (rdx_15 >= 0x7f)\n                                {\n                                    rax_41 = rbx_4;\n                                }\n                                r15_6 = &r15_6[1];\n                                rbp_5 = rax_41;\n                            }\n                            if (rbp_5 > rbx_4)\n                            {\n                                memcpy((r14_3 - rbx_4), &var_68, rbx_4);\n                                break;\n                            }\n                            void* r14_4 = (r14_3 - rbp_5);\n                            rbx_4 = (rbx_4 - rbp_5);\n                            memcpy(r14_4, (&var_68 + rbx_4), rbp_5);\n                            if (rbx_4 == 0)\n                            {\n                                break;\n                            }\n                            r14_3 = (r14_4 - rax_40);\n                            memcpy(r14_3, r12_1, rax_40);\n                        }\n                    }\n                }\n            }\n        }\n        else\n        {\n        label_40734e:\n            uint64_t r10_1 = rax_4;\n            rbx_1 = 0;\n            int32_t rbp_2 = r10_1;\n            if (r10_1 > rsi_1)\n            {\n                goto label_407366;\n            }\n            uint32_t rax_49;\n            int32_t rdx_24;\n            uint64_t temp0_8;\n            do\n            {\n                int64_t rdx_21 = 0;\n                temp0_8 = (COMBINE(rdx_21, rsi_1) / r10_1);\n                uint32_t rax_48 = (r9_1 + (((COMBINE(rdx_21, rsi_1) % r10_1) * 5) << 1));\n                rax_49 = (COMBINE(0, rax_48) / rbp_2);\n                rdx_24 = ((rdi_15 >> 1) + ((COMBINE(0, rax_48) % rbp_2) << 1));\n                r9_1 = rax_49;\n                rsi_1 = temp0_8;\n                int32_t rdi_26 = (rdi_15 + rdx_24);\n                if (rbp_2 > rdx_24)\n                {\n                    rdi_26 = rdi_26 != 0;\n                    rdi_15 = rdi_26;\n                }\n                else\n                {\n                    rdi_26 = rbp_2 < rdi_26;\n                    rdi_15 = (rdi_26 + 2);\n                }\n                rbx_1 = (rbx_1 + 1);\n                if (r10_1 > temp0_8)\n                {\n                    break;\n                }\n            } while (rbx_1 != 8);\n            if (r10_1 <= temp0_8)\n            {\n                goto label_407366;\n            }\n            if (temp0_8 > 9)\n            {\n                goto label_407366;\n            }\n            int32_t rdx_27;\n            if (rcx_1 == 1)\n            {\n                rdx_27 = ((rax_49 & 1) + rdi_15) > 2;\n            }\n            else\n            {\n                rdx_24 = rcx_1 == 0;\n                r9_1 = rdi_15 > 0;\n                rdx_27 = (rdx_24 & r9_1);\n            }\n            if (rdx_27 == 0)\n            {\n                if (rax_49 != 0)\n                {\n                    goto label_407818;\n                }\n                goto label_407787;\n            }\n            rax_49 = (rax_49 + 1);\n            char rax_56;\n            if (rax_49 != 0xa)\n            {\n            label_407818:\n                rax_56 = (rax_49 + 0x30);\n            label_4077a3:\n                arg2[0x286] = rax_56;\n                uint64_t rax_57 = r8_1;\n                r14_3 = (&arg2[0x286] - r8_1);\n                if (r8_1 >= 8)\n                {\n                    void* r9_5 = ((r14_3 + 8) & 0xfffffffffffffff8);\n                    *r14_3 = *r15;\n                    uint64_t rax_59 = r8_1;\n                    *((r14_3 + rax_59) - 8) = *((r15 + rax_59) - 8);\n                    void* rax_61 = (r14_3 - r9_5);\n                    void* r10_4 = (r15 - rax_61);\n                    int32_t rax_63 = ((rax_61 + r8_1) & 0xfffffff8);\n                    if (rax_63 >= 8)\n                    {\n                        int32_t rax_64 = (rax_63 & 0xfffffff8);\n                        int32_t rdx_33 = 0;\n                        do\n                        {\n                            uint64_t rdi_33 = rdx_33;\n                            rdx_33 = (rdx_33 + 8);\n                            *(r9_5 + rdi_33) = *(r10_4 + rdi_33);\n                        } while (rdx_33 < rax_64);\n                    }\n                }\n                else if ((r8_1 & 4) != 0)\n                {\n                    *r14_3 = *r15;\n                    *((r14_3 + rax_57) - 4) = *((r15 + rax_57) - 4);\n                }\n                else if (rax_57 != 0)\n                {\n                    *r14_3 = *r15;\n                    if ((rax_57 & 2) != 0)\n                    {\n                        *((r14_3 + rax_57) - 2) = *((r15 + rax_57) - 2);\n                    }\n                }\n                goto label_4077ce;\n            }\n            rsi_1 = (temp0_8 + 1);\n            if (rsi_1 == 0xa)\n            {\n                r14_3 = var_a8;\n            label_4077ce:\n                rdi_15 = 0;\n            }\n            else\n            {\n                rdi_15 = 0;\n            label_407787:\n                r14_3 = var_a8;\n                if ((arg3 & 8) == 0)\n                {\n                    rax_56 = 0x30;\n                    goto label_4077a3;\n                }\n            }\n            if (rcx_1 == 1)\n            {\n                goto label_4073aa;\n            }\n            r9_1 = 0;\n        }\n        if (((rcx_8 == 0 && rcx_1 != 1) || rcx_8 != 0))\n        {\n            if (rcx_1 != 0)\n            {\n                goto label_4073aa;\n            }\n            if ((rdi_15 + r9_1) <= 0)\n            {\n                goto label_4073aa;\n            }\n            goto label_407381;\n        }\n    }\n    else\n    {\n        if (arg4 != 0)\n        {\n            int64_t rdx_5 = 0;\n            uint64_t temp0_5 = (COMBINE(rdx_5, arg5) / arg4);\n            if ((COMBINE(rdx_5, arg5) % arg4) != 0)\n            {\n                goto label_40709a;\n            }\n            int64_t rdx_7 = 0;\n            uint64_t rax_30 = ((COMBINE(rdx_7, arg1) % temp0_5) * 5);\n            int64_t rdx_9 = 0;\n            uint64_t rax_31 = (rax_30 + rax_30);\n            rsi_1 = (COMBINE(rdx_7, arg1) / temp0_5);\n            uint64_t temp1_5 = (COMBINE(rdx_9, rax_31) % temp0_5);\n            uint64_t rdx_11 = (temp1_5 + temp1_5);\n            r9_1 = (COMBINE(rdx_9, rax_31) / temp0_5);\n            bool c_1 = temp0_5 < rdx_11;\n            if ((temp0_5 == rdx_11 || c_1))\n            {\n                rdi_15 = (c_1 + 2);\n            }\n            else\n            {\n                rdi_15 = rdx_11 != 0;\n            }\n            rcx_8 = (arg3 & 0x10);\n            if (rcx_8 != 0)\n            {\n                goto label_40734e;\n            }\n            goto label_40760a;\n        }\n    label_40709a:\n        long double x87_r7_1 = arg4;\n        if (arg4 < 0)\n        {\n            x87_r7_1 = (x87_r7_1 + 1.84467441e+19f);\n        }\n        long double x87_r6_1 = arg5;\n        long double x87_r6_2;\n        long double x87_r7_2;\n        if (arg5 < 0)\n        {\n            x87_r7_2 = (x87_r7_1 / (x87_r6_1 + 1.84467441e+19f));\n            x87_r6_2 = arg1;\n        }\n        else\n        {\n            x87_r7_2 = (x87_r7_1 / x87_r6_1);\n            x87_r6_2 = arg1;\n        }\n        uint64_t rax_18;\n        uint64_t r14_2;\n        uint16_t x87control;\n        long double x87_r7_3;\n        if (((arg5 < 0 && arg1 >= 0) || (arg5 >= 0 && arg1 >= 0)))\n        {\n            x87_r7_3 = (x87_r7_2 * x87_r6_2);\n            if ((arg3 & 0x10) != 0)\n            {\n            label_4070df:\n                long double x87_r6_3 = rax_4;\n                rbx_1 = 0;\n                long double x87_r5_1 = x87_r6_3;\n                while (true)\n                {\n                    rbx_1 = (rbx_1 + 1);\n                    long double x87_r7_4 = (x87_r5_1 * x87_r6_3);\n                    if (x87_r7_3 < x87_r7_4)\n                    {\n                        break;\n                    }\n                    if (rbx_1 == 8)\n                    {\n                        break;\n                    }\n                    x87_r6_3 = x87_r7_3;\n                    int64_t temp0_3 = x87_r5_1;\n                    x87_r5_1 = x87_r7_4;\n                    x87_r7_3 = temp0_3;\n                }\n                int64_t r14_1 = (r8_1 + 1);\n                long double x87_r7_7 = (x87_r6_3 / x87_r6_3);\n                int64_t rax_16;\n                rax_16 = rax_1 == 0;\n                int64_t r15_1 = ((r14_1 + rax_16) + 1);\n                int64_t var_88_3;\n                long double x87_r6_6;\n                long double x87_r7_8;\n                long double x87_r7_9;\n                if (rcx_1 == 1)\n                {\n                    long double var_b8_7 = x87_r7_7;\n                    var_88_3 = x87_r7_7;\n                    __sprintf_chk(arg2, 1, -1, \"%.1Lf\");\n                    rax_18 = strlen(arg2);\n                    x87_r7_8 = var_88_3;\n                    if (rax_18 > r15_1)\n                    {\n                        x87_r6_6 = 10f;\n                        x87_r7_9 = (x87_r7_8 * x87_r6_6);\n                    label_4071d7:\n                        int64_t var_b8_3 = (x87_r7_9 / x87_r6_6);\n                        __sprintf_chk(arg2, 1, -1, \"%.0Lf\");\n                        rax_18 = strlen(arg2);\n                        r14_2 = rax_18;\n                    }\n                }\n                else\n                {\n                    long double x87_r6_5;\n                    if (data_412320 > x87_r7_7)\n                    {\n                        var_88_3 = x87_r7_7;\n                        long double st0_3;\n                        st0_3 = sub_406ef0(rcx_1, x87control, x87_r7_7);\n                        x87_r7_7 = st0_3;\n                        x87_r6_5 = var_88_3;\n                    }\n                    else\n                    {\n                        x87_r6_5 = x87_r7_7;\n                    }\n                    var_88_3 = x87_r6_5;\n                    long double var_b8_1 = x87_r7_7;\n                    __sprintf_chk(arg2, 1, -1, \"%.1Lf\");\n                    rax_18 = strlen(arg2);\n                    x87_r7_8 = var_88_3;\n                    if (rax_18 > r15_1)\n                    {\n                        x87_r6_6 = 10f;\n                        x87_r7_9 = (x87_r7_8 * x87_r6_6);\n                    }\n                }\n                if (((rcx_1 == 1 && rax_18 <= r15_1) || (rcx_1 != 1 && rax_18 <= r15_1)))\n                {\n                    if (((arg3 & 8) == 0 || ((arg3 & 8) != 0 && arg2[(rax_18 - 1)] != 0x30)))\n                    {\n                        r14_2 = (rax_18 - r14_1);\n                    }\n                    if (((arg3 & 8) != 0 && arg2[(rax_18 - 1)] == 0x30))\n                    {\n                        x87_r6_6 = 10f;\n                        x87_r7_9 = (x87_r7_8 * x87_r6_6);\n                        if (rcx_1 == 1)\n                        {\n                            goto label_4071d7;\n                        }\n                    }\n                }\n                if (((rcx_1 != 1 && rax_18 > r15_1) || ((((rcx_1 == 1 && rax_18 <= r15_1) || (rcx_1 != 1 && rax_18 <= r15_1)) && (arg3 & 8) != 0) && arg2[(rax_18 - 1)] == 0x30)))\n                {\n                    if (data_412320 <= x87_r7_9)\n                    {\n                        goto label_4071d7;\n                    }\n                    var_88_3 = x87_r6_6;\n                    x87_r7_9 = sub_406ef0(rcx_1, x87control, x87_r7_9);\n                    x87_r6_6 = var_88_3;\n                    goto label_4071d7;\n                }\n                goto label_40724c;\n            }\n        }\n        if (((arg5 < 0 && arg1 < 0) || (arg5 >= 0 && arg1 < 0)))\n        {\n            x87_r7_3 = (x87_r7_2 * (x87_r6_2 + 1.84467441e+19f));\n            if ((arg3 & 0x10) != 0)\n            {\n                goto label_4070df;\n            }\n        }\n        if (rcx_1 != 1)\n        {\n            if (data_412320 > x87_r7_3)\n            {\n                long double var_b8_5 = x87_r7_3;\n                x87_r7_3 = sub_406ef0(rcx_1, x87control, var_b8_5);\n                r8_1 = var_b8_5;\n            }\n            goto label_407223;\n        }\n    label_407223:\n        long double var_b8_4 = x87_r7_3;\n        __sprintf_chk(arg2, 1, -1, \"%.0Lf\", r8_1);\n        rbx_1 = -1;\n        rax_18 = strlen(arg2);\n        r14_2 = rax_18;\n    label_40724c:\n        r15_5 = (var_a8 - rax_18);\n        r14_3 = (r14_2 + r15_5);\n        memmove(r15_5, arg2, rax_18);\n    }\n    if (((((((((arg5 <= arg4 && (COMBINE(rdx, arg4) % arg5) == 0) && (COMBINE(0, rsi_1) / temp0_1) == arg1) && rcx_8 == 0) && rcx_1 == 1) && (r9_1 + (rsi_1 & 1) != (-rdi_15)) > 5) || arg5 > arg4) && (arg3 & 4) == 0) || (((((arg5 <= arg4 && (COMBINE(rdx, arg4) % arg5) == 0) && (COMBINE(0, rsi_1) / temp0_1) == arg1) && rcx_8 == 0) && rcx_1 == 1) && (r9_1 + (rsi_1 & 1) != (-rdi_15)) <= 5)))\n    {\n        if ((arg3 & 0x80) == 0)\n        {\n        label_40728c:\n            *var_a8 = 0;\n            return;\n        }\n        if ((rbx_1 == 0xffffffff && arg5 <= 1))\n        {\n            rbx_1 = 0;\n        }\n        int32_t rax_23;\n        void* rdx_20;\n        if (((rbx_1 == 0xffffffff && arg5 <= 1) || rbx_1 != 0xffffffff))\n        {\n            rax_23 = (arg3 & 0x100);\n            if ((rax_23 | rbx_1) != 0)\n            {\n                if ((arg3 & 0x40) != 0)\n                {\n                label_4074fd:\n                    arg2[0x287] = 0x20;\n                    var_a8 = &arg2[0x288];\n                }\n                if (rbx_1 == 0)\n                {\n                    rdx_20 = var_a8;\n                    if (rax_23 != 0)\n                    {\n                    label_407551:\n                        *rdx_20 = 0x42;\n                        var_a8 = (rdx_20 + 1);\n                    }\n                }\n            }\n        }\n        if ((rbx_1 == 0xffffffff && arg5 > 1))\n        {\n            uint64_t rdx_19 = rax_4;\n            rbx_1 = 1;\n            int64_t rax_42 = 1;\n            do\n            {\n                rax_42 = (rax_42 * rdx_19);\n                if (arg5 <= rax_42)\n                {\n                    break;\n                }\n                rbx_1 = (rbx_1 + 1);\n            } while (rbx_1 != 8);\n            rax_23 = (arg3 & 0x100);\n            if ((arg3 & 0x40) != 0)\n            {\n                goto label_4074fd;\n            }\n        }\n        if ((((((rbx_1 == 0xffffffff && arg5 <= 1) || rbx_1 != 0xffffffff) && (rax_23 | rbx_1) != 0) && rbx_1 != 0) || (rbx_1 == 0xffffffff && arg5 > 1)))\n        {\n            if (rax_1 == 0)\n            {\n                if (rbx_1 != 1)\n                {\n                    goto label_407526;\n                }\n                rdx_20 = (var_a8 + 1);\n                *var_a8 = 0x6b;\n                if (rax_23 != 0)\n                {\n                    goto label_407551;\n                }\n                goto label_407743;\n            }\n        label_407526:\n            char* rdi_25 = var_a8;\n            rdx_20 = &rdi_25[1];\n            *rdi_25 = *(rbx_1 + 0x412308);\n            if (rax_23 != 0)\n            {\n                if (rax_1 != 0)\n                {\n                    rdx_20 = &rdi_25[2];\n                    rdi_25[1] = 0x69;\n                }\n                goto label_407551;\n            }\n        label_407743:\n            var_a8 = rdx_20;\n        }\n        goto label_40728c;\n    }\n    if ((((((((arg5 <= arg4 && (COMBINE(rdx, arg4) % arg5) == 0) && (COMBINE(0, rsi_1) / temp0_1) == arg1) && rcx_8 == 0) && rcx_1 == 1) && (r9_1 + (rsi_1 & 1) != (-rdi_15)) > 5) || arg5 > arg4) && (arg3 & 4) != 0))\n    {\n        goto label_4073f5;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_407980",
            "funcStartAddr": "0x407980",
            "funcEndAddr": "0x407b37",
            "decompiledFuncCode": "uint64_t sub_407980(char* arg1, int32_t* arg2, int64_t* arg3)\n{\n    char* rbx = arg1;\n    uint64_t rax_3;\n    char* rax_9;\n    char* rax_10;\n    if (arg1 == 0)\n    {\n        rax_9 = getenv(\"BLOCK_SIZE\");\n        rbx = rax_9;\n        if (rax_9 == 0)\n        {\n            rax_10 = getenv(\"BLOCKSIZE\");\n            rbx = rax_10;\n            if (rax_10 == 0)\n            {\n                rax_3 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_3 == 0)\n                {\n                    *arg3 = 0x400;\n                    *arg2 = 0;\n                }\n                else\n                {\n                    *arg3 = 0x200;\n                    rax_3 = 0;\n                    *arg2 = 0;\n                }\n            }\n        }\n    }\n    if (((arg1 != 0 || (arg1 == 0 && rax_9 != 0)) || ((arg1 == 0 && rax_9 == 0) && rax_10 != 0)))\n    {\n        int32_t rbp_1 = 0;\n        if (*rbx == 0x27)\n        {\n            rbx = &rbx[1];\n            rbp_1 = 4;\n        }\n        int32_t rax_1 = sub_40d7b0(rbx, &data_4122f0, 0x4122e0, 4);\n        if (rax_1 >= 0)\n        {\n            *arg3 = 1;\n            rax_3 = 0;\n            *arg2 = (rbp_1 | *((rax_1 << 2) + 0x4122e0));\n        }\n        else\n        {\n            void* var_30;\n            rax_3 = sub_40a8b0(rbx, &var_30, 0, arg3, \"eEgGkKmMpPtTyYzZ0\");\n            int64_t rdx_2;\n            if (rax_3 != 0)\n            {\n                *arg2 = 0;\n                rdx_2 = *arg3;\n            }\n            else\n            {\n                if ((*rbx - 0x30) > 9)\n                {\n                    void* rcx_2 = var_30;\n                    if (rbx != rcx_2)\n                    {\n                        do\n                        {\n                            rbx = &rbx[1];\n                            if ((*rbx - 0x30) <= 9)\n                            {\n                                break;\n                            }\n                        } while (rbx != rcx_2);\n                    }\n                    if ((rbx == rcx_2 || (rbx != rcx_2 && (*rbx - 0x30) > 9)))\n                    {\n                        if (*(rcx_2 - 1) == 0x42)\n                        {\n                            rbp_1 = (rbp_1 | 0x180);\n                        }\n                        else\n                        {\n                            rbp_1 = (rbp_1 | 0x80);\n                        }\n                        if ((*(rcx_2 - 1) != 0x42 || (*(rcx_2 - 1) == 0x42 && *(rcx_2 - 2) == 0x69)))\n                        {\n                            rbp_1 = (rbp_1 | 0x20);\n                        }\n                    }\n                }\n                rdx_2 = *arg3;\n                *arg2 = rbp_1;\n            }\n            if (rdx_2 == 0)\n            {\n                char* rax_4 = getenv(\"POSIXLY_CORRECT\");\n                *arg3 = (((rax_4 - rax_4) & 0x200) + 0x200);\n                return 4;\n            }\n        }\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_407b40",
            "funcStartAddr": "0x407b40",
            "funcEndAddr": "0x407b88",
            "decompiledFuncCode": "void* sub_407b40(uint64_t arg1, void* arg2)\n{\n    void* rcx = (arg2 + 0x14);\n    *(arg2 + 0x14) = 0;\n    while (true)\n    {\n        rcx = (rcx - 1);\n        int64_t rax_2;\n        int64_t rdx_1;\n        rdx_1 = HIGHD((arg1 * -0x3333333333333333));\n        rax_2 = LOWD((arg1 * -0x3333333333333333));\n        uint64_t rdx_2 = (rdx_1 >> 3);\n        char rax_3 = (rdx_2 + (rdx_2 << 2));\n        *rcx = ((arg1 - (rax_3 + rax_3)) + 0x30);\n        if (arg1 <= 9)\n        {\n            break;\n        }\n        arg1 = rdx_2;\n    }\n    return rcx;\n}\n\n"
        },
        {
            "funcName": "sub_407b90",
            "funcStartAddr": "0x407b90",
            "funcEndAddr": "0x407f2b",
            "decompiledFuncCode": "uint64_t sub_407b90(char* arg1, char* arg2, int64_t arg3, uint64_t* arg4, \n    int32_t arg5, int32_t arg6)\n{\n    char* var_50 = arg1;\n    uint64_t rax = strlen(arg1);\n    uint64_t r14 = rax;\n    wchar_t* var_68_1;\n    uint64_t rax_6;\n    uint64_t rax_7;\n    wchar_t* rax_9;\n    uint64_t rdx;\n    char* r12_1;\n    uint64_t r13_3;\n    uint64_t r15_1;\n    if ((arg6 & 2) == 0)\n    {\n        rax_6 = __ctype_get_mb_cur_max();\n        if (rax_6 > 1)\n        {\n            rax_7 = mbstowcs(nullptr, var_50, 0);\n            if (rax_7 != -1)\n            {\n                uint64_t r15_3 = (rax_7 + 1);\n                uint64_t rax_8 = (r15_3 << 2);\n                rax_9 = malloc(rax_8);\n                var_68_1 = rax_9;\n                if (rax_9 == 0)\n                {\n                    r15_1 = r14;\n                    r12_1 = nullptr;\n                    if ((arg6 & 1) != 0)\n                    {\n                        goto label_407bd6;\n                    }\n                }\n                else\n                {\n                    if (mbstowcs(var_68_1, var_50, r15_3) == 0)\n                    {\n                        r15_1 = r14;\n                        r12_1 = nullptr;\n                        goto label_407bd6;\n                    }\n                    *((var_68_1 + rax_8) - 4) = 0;\n                    int32_t rdi_5 = *var_68_1;\n                    wchar_t* rdx_9 = var_68_1;\n                    uint64_t var_48_1;\n                    if (rdi_5 == 0)\n                    {\n                        r15_1 = wcswidth(var_68_1);\n                    }\n                    else\n                    {\n                        var_48_1 = 0;\n                        do\n                        {\n                            if (iswprint(rdi_5) == 0)\n                            {\n                                *rdx_9 = 0xfffd;\n                                var_48_1 = 1;\n                            }\n                            rdx_9 = &rdx_9[1];\n                            rdi_5 = *rdx_9;\n                        } while (rdi_5 != 0);\n                        r15_1 = wcswidth(var_68_1);\n                    }\n                    uint64_t var_48_2;\n                    if ((rdi_5 == 0 || (rdi_5 != 0 && var_48_1 == 0)))\n                    {\n                        rdx = *arg4;\n                        if (rdx >= r15_1)\n                        {\n                            r12_1 = nullptr;\n                        }\n                        else\n                        {\n                            var_48_2 = (rax + 1);\n                        }\n                    }\n                    if ((rdi_5 != 0 && var_48_1 != 0))\n                    {\n                        var_48_2 = (wcstombs(nullptr, var_68_1, 0) + 1);\n                    }\n                    if ((((rdi_5 == 0 || (rdi_5 != 0 && var_48_1 == 0)) && rdx < r15_1) || (rdi_5 != 0 && var_48_1 != 0)))\n                    {\n                        char* rax_16 = malloc(var_48_2);\n                        r12_1 = rax_16;\n                        if (rax_16 != 0)\n                        {\n                            wchar_t* r14_1 = var_68_1;\n                            uint64_t rax_17 = *arg4;\n                            int32_t rdi_8 = *r14_1;\n                            if (rdi_8 == 0)\n                            {\n                                r14_1 = var_68_1;\n                                r15_1 = 0;\n                            }\n                            else\n                            {\n                                r15_1 = 0;\n                                do\n                                {\n                                    int32_t rax_20 = wcwidth(rdi_8);\n                                    int64_t rax_18;\n                                    if (rax_20 != 0xffffffff)\n                                    {\n                                        rax_18 = rax_20;\n                                    }\n                                    else\n                                    {\n                                        *r14_1 = 0xfffd;\n                                        rax_18 = 1;\n                                    }\n                                    uint64_t rax_19 = (rax_18 + r15_1);\n                                    if (rax_17 < rax_19)\n                                    {\n                                        break;\n                                    }\n                                    r14_1 = &r14_1[1];\n                                    rdi_8 = *r14_1;\n                                    r15_1 = rax_19;\n                                } while (rdi_8 != 0);\n                            }\n                            *r14_1 = 0;\n                            var_50 = r12_1;\n                            r14 = wcstombs(r12_1, var_68_1, var_48_2);\n                            goto label_407bd6;\n                        }\n                        if ((arg6 & 1) != 0)\n                        {\n                            goto label_407bd6;\n                        }\n                        r13_3 = -1;\n                        goto label_407cb2;\n                    }\n                }\n            }\n            if (((rax_7 == -1 && (arg6 & 1) == 0) || (rax_7 != -1 && rax_9 == 0)))\n            {\n                var_68_1 = nullptr;\n                r12_1 = nullptr;\n                r13_3 = -1;\n            label_407cb2:\n                free(var_68_1);\n                free(r12_1);\n                return r13_3;\n            }\n        }\n    }\n    uint64_t rax_1;\n    int32_t rsi;\n    if ((((arg6 & 2) != 0 || ((arg6 & 2) == 0 && rax_6 <= 1)) || ((((arg6 & 2) == 0 && rax_6 > 1) && rax_7 == -1) && (arg6 & 1) != 0)))\n    {\n        var_68_1 = nullptr;\n        r15_1 = r14;\n        r12_1 = nullptr;\n    label_407bd6:\n        rdx = *arg4;\n        if (rdx < r15_1)\n        {\n            r14 = rdx;\n            rax_1 = 0;\n        label_407be8:\n            rsi = arg5;\n            *arg4 = rdx;\n            uint64_t r13_1;\n            if (rsi != 0)\n            {\n            label_407bf8:\n                r13_1 = 0;\n                if (rsi != 1)\n                {\n                    r13_1 = (rax_1 >> 1);\n                    rax_1 = ((rax_1 & 1) + r13_1);\n                }\n                goto label_407c0c;\n            }\n        label_407cfd:\n            r13_1 = rax_1;\n            rax_1 = 0;\n        label_407c0c:\n            uint64_t r15_2 = (rax_1 + r14);\n            if ((arg6 & 4) != 0)\n            {\n                r15_2 = r14;\n                rax_1 = 0;\n            }\n            if ((arg6 & 8) != 0)\n            {\n                r13_1 = 0;\n            }\n            if (arg3 != 0)\n            {\n                void* rbp_2 = &arg2[(arg3 - 1)];\n                char* rdi = arg2;\n                if ((arg2 < rbp_2 && rax_1 != 0))\n                {\n                    do\n                    {\n                        rdi = &rdi[1];\n                        rdi[-1] = 0x20;\n                        if ((arg2 - rdi) == (-rax_1))\n                        {\n                            break;\n                        }\n                    } while (rbp_2 > rdi);\n                }\n                *rdi = 0;\n                uint64_t rdx_5 = (rbp_2 - rdi);\n                if (rdx_5 > r14)\n                {\n                    rdx_5 = r14;\n                }\n                char* rax_3 = mempcpy(rdi, var_50, rdx_5);\n                char* rdx_6 = rax_3;\n                if ((rbp_2 > rax_3 && r13_1 != 0))\n                {\n                    do\n                    {\n                        rdx_6 = &rdx_6[1];\n                        rdx_6[-1] = 0x20;\n                        if ((r13_1 - rdx_6) == (-rax_3))\n                        {\n                            break;\n                        }\n                    } while (rbp_2 > rdx_6);\n                }\n                *rdx_6 = 0;\n            }\n            r13_3 = (r13_1 + r15_2);\n            goto label_407cb2;\n        }\n    }\n    if ((((((((arg6 & 2) == 0 && rax_6 > 1) && rax_7 != -1) && rax_9 != 0) || (arg6 & 2) != 0) || ((arg6 & 2) == 0 && rax_6 <= 1)) || ((((arg6 & 2) == 0 && rax_6 > 1) && rax_7 == -1) && (arg6 & 1) != 0)))\n    {\n        if (r15_1 >= rdx)\n        {\n            rdx = r15_1;\n            rax_1 = 0;\n            goto label_407be8;\n        }\n        rsi = arg5;\n        rax_1 = (rdx - r15_1);\n        *arg4 = r15_1;\n        if (rsi == 0)\n        {\n            goto label_407cfd;\n        }\n        goto label_407bf8;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_407f30",
            "funcStartAddr": "0x407f30",
            "funcEndAddr": "0x407fcd",
            "decompiledFuncCode": "char* sub_407f30(char* arg1, int64_t* arg2, int32_t arg3, int32_t arg4)\n{\n    char* r12 = nullptr;\n    uint64_t r13 = *arg2;\n    uint64_t rax = r13;\n    char* r14_1;\n    size_t rbx_1;\n    do\n    {\n        rbx_1 = (rax + 1);\n        char* rax_1 = realloc(r12, rbx_1);\n        r14_1 = rax_1;\n        if (rax_1 == 0)\n        {\n            free(r12);\n            break;\n        }\n        *arg2 = r13;\n        rax = sub_407b90(arg1, rax_1, rbx_1, arg2, arg3, arg4);\n        if (rax == -1)\n        {\n            char* rdi_3 = r14_1;\n            r14_1 = nullptr;\n            free(rdi_3);\n            break;\n        }\n        r12 = r14_1;\n    } while (rbx_1 <= rax);\n    return r14_1;\n}\n\n"
        },
        {
            "funcName": "sub_407fd0",
            "funcStartAddr": "0x407fd0",
            "funcEndAddr": "0x408183",
            "decompiledFuncCode": "uint64_t sub_407fd0(char* arg1, int64_t arg2, int32_t arg3)\n{\n    char* r13 = &arg1[arg2];\n    char* rbx = arg1;\n    uint64_t rax = __ctype_get_mb_cur_max();\n    int32_t r12;\n    if (rax <= 1)\n    {\n        r12 = 0;\n        if (rbx < r13)\n        {\n            r12 = 0;\n            int32_t r15_1 = (arg3 & 2);\n            uint16_t* rdx_3 = *__ctype_b_loc();\n            while (true)\n            {\n                rbx = &rbx[1];\n                int16_t rax_11 = rdx_3[rbx[-1]];\n                if (((*rax_11[1] & 0x40) == 0 && r15_1 != 0))\n                {\n                    break;\n                }\n                if ((((*rax_11[1] & 0x40) != 0 || (((*rax_11[1] & 0x40) == 0 && r15_1 == 0) && (rax_11 & 2) == 0)) && r12 != 0x7fffffff))\n                {\n                    r12 = (r12 + 1);\n                }\n                if (((((*rax_11[1] & 0x40) != 0 || (((*rax_11[1] & 0x40) == 0 && r15_1 == 0) && (rax_11 & 2) == 0)) && r12 != 0x7fffffff) || (((*rax_11[1] & 0x40) == 0 && r15_1 == 0) && (rax_11 & 2) != 0)))\n                {\n                    if (r13 == rbx)\n                    {\n                        return r12;\n                    }\n                    continue;\n                }\n                if ((((*rax_11[1] & 0x40) != 0 || (((*rax_11[1] & 0x40) == 0 && r15_1 == 0) && (rax_11 & 2) == 0)) && r12 == 0x7fffffff))\n                {\n                    return r12;\n                }\n            }\n        }\n    }\n    else\n    {\n        r12 = 0;\n        if (rbx < r13)\n        {\n            while (true)\n            {\n                char rax_2 = *rbx;\n                if (rax_2 <= 0x3f)\n                {\n                    if (rax_2 < 0x25)\n                    {\n                        if ((rax_2 - 0x20) <= 3)\n                        {\n                            goto label_40801b;\n                        }\n                        goto label_408042;\n                    }\n                label_40801b:\n                    rbx = &rbx[1];\n                    r12 = (r12 + 1);\n                }\n                else\n                {\n                    if (rax_2 >= 0x41)\n                    {\n                        if (rax_2 <= 0x5f)\n                        {\n                            goto label_40801b;\n                        }\n                        if ((rax_2 - 0x61) <= 0x1d)\n                        {\n                            goto label_40801b;\n                        }\n                        goto label_408042;\n                    }\n                label_408042:\n                    mbstate_t var_40;\n                    var_40.__count = 0;\n                    var_40.__value = 0;\n                    uint64_t rax_5;\n                    while (true)\n                    {\n                        uint32_t var_44;\n                        rax_5 = sub_40c400(&var_44, rbx, (r13 - rbx), &var_40);\n                        uint64_t rbp_1 = rax_5;\n                        if ((rax_5 == -1 && (arg3 & 1) != 0))\n                        {\n                            break;\n                        }\n                        if (rax_5 != -1)\n                        {\n                            if (rax_5 != -2)\n                            {\n                                uint32_t rdi_2 = var_44;\n                                if (rax_5 == 0)\n                                {\n                                    rbp_1 = 1;\n                                }\n                                int32_t rax_6 = wcwidth(rdi_2);\n                                if (rax_6 < 0)\n                                {\n                                    if ((arg3 & 2) != 0)\n                                    {\n                                        break;\n                                    }\n                                    if (iswcntrl(var_44) != 0)\n                                    {\n                                        goto label_408068;\n                                    }\n                                    if (r12 != 0x7fffffff)\n                                    {\n                                        r12 = (r12 + 1);\n                                        goto label_408068;\n                                    }\n                                }\n                                else if ((0x7fffffff - r12) >= rax_6)\n                                {\n                                    r12 = (r12 + rax_6);\n                                label_408068:\n                                    rbx = &rbx[rbp_1];\n                                    if (mbsinit(&var_40) != 0)\n                                    {\n                                        break;\n                                    }\n                                    continue;\n                                }\n                                return 0x7fffffff;\n                            }\n                            if ((arg3 & 1) != 0)\n                            {\n                                break;\n                            }\n                            r12 = (r12 + 1);\n                            rbx = r13;\n                            break;\n                        }\n                    }\n                    if (rax_5 == -1)\n                    {\n                        if (((!(rax_5 == -1 && (arg3 & 1) == 0)) && (arg3 & 1) != 0))\n                        {\n                            break;\n                        }\n                        if ((arg3 & 1) == 0)\n                        {\n                            goto label_40801b;\n                        }\n                    }\n                }\n                if (rbx >= r13)\n                {\n                    return r12;\n                }\n            }\n        }\n    }\n    if (((rax <= 1 && rbx < r13) || (rax > 1 && rbx < r13)))\n    {\n        r12 = -1;\n    }\n    return r12;\n}\n\n"
        },
        {
            "funcName": "sub_408190",
            "funcStartAddr": "0x408190",
            "funcEndAddr": "0x4081b3",
            "decompiledFuncCode": "int64_t sub_408190(char* arg1, int32_t arg2)\n{\n    /* tailcall */\n    return sub_407fd0(arg1, strlen(arg1), arg2);\n}\n\n"
        },
        {
            "funcName": "sub_4081c0",
            "funcStartAddr": "0x4081c0",
            "funcEndAddr": "0x408259",
            "decompiledFuncCode": "char* sub_4081c0(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_412370;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_617708 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_408260",
            "funcStartAddr": "0x408260",
            "funcEndAddr": "0x408352",
            "decompiledFuncCode": "char* sub_408260(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_40dc80();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_408341:\n                char const* const rbx_1 = \"\"\";\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_408341;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_408341;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_408341;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_408341;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_408341;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_408341;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_408341;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_41237b;\n            if (cond:2_1)\n            {\n                rbx = &data_412378;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_408341;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_408341;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_408341;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_408341;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_408341;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_41237f;\n            if (cond:1_1)\n            {\n                rbx = &data_412374;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_408360",
            "funcStartAddr": "0x4023b4",
            "funcEndAddr": "0x409581",
            "decompiledFuncCode": "int64_t sub_408360(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    char const* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n    label_4083f8:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_40876c:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_4087b4;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_408360(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char const rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_4087cb;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_408905;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_408555;\n                            }\n                            goto label_408840;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_408905;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_408730;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_408730:\n                            if (var_c0 == 0)\n                            {\n                                goto label_40873b;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_408597:\n                            if (var_5c == 0)\n                            {\n                                goto label_4085a8;\n                            }\n                        label_408760:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_408768;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_40899b;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_40899b:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_4089aa:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_40876c;\n                            }\n                            goto label_408730;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_408730;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_408730;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_40899b;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_408536;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_408536:\n                            if (var_5c == 0)\n                            {\n                                goto label_408555;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_408555;\n                            }\n                            goto label_4089aa;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_40852d:\n                            if (r12_1 != 0)\n                            {\n                                goto label_40873b;\n                            }\n                            goto label_408536;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_408960:\n                            rdx = r11_1 == 2;\n                        label_408555:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_40865c;\n                            }\n                            goto label_40855f;\n                        }\n                        case 0x27:\n                        {\n                            goto label_4086dd;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_4086ad;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_40870a;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_40949d;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_408674;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_408509;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_408b00;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_408b00;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_409450:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_4087b4:\n                            rbx_1 = sub_408360(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_4087cb:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_408905;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_408857;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_408905;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_408820:\n                                r13 = 0;\n                                goto label_4085db;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_4085a8:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_4085db:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_4085e5;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_4085e5:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_4085ed;\n                            }\n                            case 9:\n                            {\n                                goto label_4087d0;\n                            }\n                            case 0xa:\n                            {\n                                goto label_408748;\n                            }\n                            case 0xb:\n                            {\n                                goto label_408830;\n                            }\n                            case 0xc:\n                            {\n                                goto label_408810;\n                            }\n                            case 0xd:\n                            {\n                                goto label_4087f9;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_408b5a;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_4087e5;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_408b3a;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_408b22;\n                            }\n                            case 0x27:\n                            {\n                                goto label_4086dd;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_4086ad;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_40870a;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_408509;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_408b00:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_408900:\n                            var_b8 = 0;\n                        label_408905:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_408954:\n                                if (rdx == 0)\n                                {\n                                    goto label_408960;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_408e51:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_408674;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_40876c;\n                                }\n                                r13 = var_98;\n                                goto label_4085ed;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_40c400(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_40876c;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_408e51;\n                            }\n                            goto label_408954;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_408840:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_40876c;\n                                }\n                                var_b8 = 0;\n                            label_408857:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_4088a2;\n                                    }\n                                    rax_8 = r10;\n                                label_40889a:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_4088a2:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_40865c;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_4088e3;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_40889a;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_40865c;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_408900;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_408815;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_40874d;\n                            }\n                            case 9:\n                            {\n                            label_4087d0:\n                                rbp_3 = 0x74;\n                                goto label_40874d;\n                            }\n                            case 0xa:\n                            {\n                            label_408748:\n                                rbp_3 = 0x6e;\n                            label_40874d:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_408760;\n                                }\n                                goto label_4085a8;\n                            }\n                            case 0xb:\n                            {\n                            label_408830:\n                                rbp_3 = 0x76;\n                                goto label_408815;\n                            }\n                            case 0xc:\n                            {\n                            label_408810:\n                                rbp_3 = 0x66;\n                            label_408815:\n                                if (var_5c == 0)\n                                {\n                                    goto label_408820;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_408768:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_40876c;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_4087f9:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_408730;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_408b5a:\n                                rbp_3 = 0x20;\n                                goto label_408b22;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_4087e5:\n                                rdx = 0;\n                            label_40873b:\n                                r13 = 0;\n                                goto label_408555;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_408b3a:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_408555;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_40855f:\n                                rax_8 = 0;\n                                goto label_408561;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_408b22:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_408561;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_4086dd:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_408555;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_40949d;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_40865c;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_4086ad:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_40949d:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_40876c;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_40865c:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_408597;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_408674;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_408555;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_408c40:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_408555;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_408c40;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_408c40;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_408c40;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_408c40;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_409450;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_4088e3:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_40865c;\n                                }\n                            label_408561:\n                                if (arg7 == 0)\n                                {\n                                    goto label_40865c;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_40865c;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_408597;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_40870a:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_408730;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_408674:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_4085ed;\n                                }\n                            label_4085ed:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_4085f6;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_4085f6:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_408509:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_40873b;\n                                }\n                                goto label_40852d;\n                            }\n                        }\n                    }\n                }\n            }\n        label_408be6:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = \"'\";\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_4083f8;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = \"'\";\n                goto label_4083f8;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"'\";\n            goto label_4083f8;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = \"\"\";\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = \"\"\";\n            }\n            goto label_4083f8;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"\"\";\n            goto label_4083f8;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_4083f8;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_408260(&data_412383, r13);\n                arg9 = sub_408260(\"'\", r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_4083f8;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_408be6;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n        goto label_4083f8;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_409590",
            "funcStartAddr": "0x4023b9",
            "funcEndAddr": "0x40972e",
            "decompiledFuncCode": "char* sub_409590(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_6175b8;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_6175d0 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_40a7b0();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x6175c0)\n        {\n            int64_t rax_9 = sub_40a5c0(0, rsi_1);\n            int128_t zmm0 = data_6175c0;\n            rbx = rax_9;\n            data_6175b8 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_40a5c0(rbx, rsi_1);\n            data_6175b8 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_6175d0;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_6175d0 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_408360(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        size_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x617720)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_40a560(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_408360(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_409730",
            "funcStartAddr": "0x409730",
            "funcEndAddr": "0x409764",
            "decompiledFuncCode": "int64_t sub_409730(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x617820;\n    }\n    int64_t rax_1 = sub_40a760(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_409770",
            "funcStartAddr": "0x409770",
            "funcEndAddr": "0x40977f",
            "decompiledFuncCode": "uint64_t sub_409770(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_617820;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_409780",
            "funcStartAddr": "0x409780",
            "funcEndAddr": "0x40978f",
            "decompiledFuncCode": "void sub_409780(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_617820;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_409790",
            "funcStartAddr": "0x409790",
            "funcEndAddr": "0x4097c3",
            "decompiledFuncCode": "uint64_t sub_409790(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x617820;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_4097d0",
            "funcStartAddr": "0x4097d0",
            "funcEndAddr": "0x4097e3",
            "decompiledFuncCode": "uint64_t sub_4097d0(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_617820;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4097f0",
            "funcStartAddr": "0x4097f0",
            "funcEndAddr": "0x40981b",
            "decompiledFuncCode": "void sub_4097f0(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_617820;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x617820;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_409820",
            "funcStartAddr": "0x409820",
            "funcEndAddr": "0x409892",
            "decompiledFuncCode": "int64_t sub_409820(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_617820;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_408360(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_4098a0",
            "funcStartAddr": "0x4098a0",
            "funcEndAddr": "0x409981",
            "decompiledFuncCode": "char* sub_4098a0(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_617820;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_408360(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_40a560((rax_2 + 1));\n    sub_408360(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_409990",
            "funcStartAddr": "0x409990",
            "funcEndAddr": "0x40999a",
            "decompiledFuncCode": "int64_t sub_409990(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_4098a0(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_4099a0",
            "funcStartAddr": "0x4099a0",
            "funcEndAddr": "0x409a35",
            "decompiledFuncCode": "uint64_t sub_4099a0()\n{\n    uint64_t rax_2 = data_6175d0;\n    int64_t r12 = data_6175b8;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x617720)\n    {\n        rax_2 = free(rdi_2);\n        *data_6175c0 = 0x100;\n        *(data_6175c0 + 8) = 0x617720;\n    }\n    if (r12 != 0x6175c0)\n    {\n        rax_2 = free(r12);\n        data_6175b8 = 0x6175c0;\n    }\n    data_6175d0 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_409a40",
            "funcStartAddr": "0x409a40",
            "funcEndAddr": "0x409a51",
            "decompiledFuncCode": "int64_t sub_409a40(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_409590(arg1, arg2, -1, &data_617820);\n}\n\n"
        },
        {
            "funcName": "sub_409a60",
            "funcStartAddr": "0x409a60",
            "funcEndAddr": "0x409a6a",
            "decompiledFuncCode": "int64_t sub_409a60(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_409590(arg1, arg2, arg3, &data_617820);\n}\n\n"
        },
        {
            "funcName": "sub_409a70",
            "funcStartAddr": "0x409a70",
            "funcEndAddr": "0x409a86",
            "decompiledFuncCode": "int64_t sub_409a70(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_409590(0, arg1, -1, &data_617820);\n}\n\n"
        },
        {
            "funcName": "sub_409a90",
            "funcStartAddr": "0x409a90",
            "funcEndAddr": "0x409aa2",
            "decompiledFuncCode": "int64_t sub_409a90(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_409590(0, arg1, arg2, &data_617820);\n}\n\n"
        },
        {
            "funcName": "sub_409ab0",
            "funcStartAddr": "0x4023be",
            "funcEndAddr": "0x409b18",
            "decompiledFuncCode": "char* sub_409ab0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_409590(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_409b20",
            "funcStartAddr": "0x4023c3",
            "funcEndAddr": "0x409b84",
            "decompiledFuncCode": "char* sub_409b20(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_409590(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_409b90",
            "funcStartAddr": "0x409b90",
            "funcEndAddr": "0x409b9c",
            "decompiledFuncCode": "int64_t sub_409b90(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_409ab0(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_409ba0",
            "funcStartAddr": "0x409ba0",
            "funcEndAddr": "0x409baf",
            "decompiledFuncCode": "int64_t sub_409ba0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_409b20(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_409bb0",
            "funcStartAddr": "0x409bb0",
            "funcEndAddr": "0x409c20",
            "decompiledFuncCode": "char* sub_409bb0(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_617850;\n    int128_t var_48 = data_617820;\n    int128_t var_38 = data_617830;\n    int128_t var_28 = data_617840;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_409590(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_409c20",
            "funcStartAddr": "0x409c20",
            "funcEndAddr": "0x409c2d",
            "decompiledFuncCode": "int64_t sub_409c20(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_409bb0(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_409c30",
            "funcStartAddr": "0x409c30",
            "funcEndAddr": "0x409c41",
            "decompiledFuncCode": "int64_t sub_409c30(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_409bb0(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_409c50",
            "funcStartAddr": "0x409c50",
            "funcEndAddr": "0x409c5a",
            "decompiledFuncCode": "int64_t sub_409c50(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_409bb0(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_409c60",
            "funcStartAddr": "0x4023c8",
            "funcEndAddr": "0x409cce",
            "decompiledFuncCode": "char* sub_409c60(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_409590(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_409cd0",
            "funcStartAddr": "0x409cd0",
            "funcEndAddr": "0x409d3c",
            "decompiledFuncCode": "char* sub_409cd0(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_617820;\n    int128_t var_38 = data_617830;\n    int128_t var_28 = data_617840;\n    int64_t var_18 = data_617850;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_409590(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_409dc0",
            "funcStartAddr": "0x409dc0",
            "funcEndAddr": "0x409dd1",
            "decompiledFuncCode": "int64_t sub_409dc0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_409590(arg1, arg2, -1, &data_617580);\n}\n\n"
        },
        {
            "funcName": "sub_409de0",
            "funcStartAddr": "0x409de0",
            "funcEndAddr": "0x409df6",
            "decompiledFuncCode": "int64_t sub_409de0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_409590(0, arg1, -1, &data_617580);\n}\n\n"
        },
        {
            "funcName": "sub_409e00",
            "funcStartAddr": "0x409e00",
            "funcEndAddr": "0x409f30",
            "decompiledFuncCode": "uint64_t sub_409e00(char* arg1, char* arg2)\n{\n    char* r15 = arg1;\n    int32_t rbx = 0;\n    char* rax = sub_405a70(arg1);\n    char* rax_1 = sub_405a70(arg2);\n    uint64_t rax_2 = sub_405ad0(rax);\n    if ((rax_2 == sub_405ad0(rax_1) && memcmp(rax, rax_1, rax_2) == 0))\n    {\n        char* rax_6 = sub_405990(r15);\n        char* rax_7 = sub_405990(arg2);\n        int64_t var_158;\n        if (__xstat(1, rax_6, &var_158) != 0)\n        {\n            error(1, *__errno_location(), \"%s\", rax_6);\n        }\n        int64_t var_c8;\n        if (__xstat(1, rax_7, &var_c8) != 0)\n        {\n            error(1, *__errno_location(), \"%s\", rax_7);\n        }\n        rbx = 0;\n        int64_t var_150;\n        int64_t var_c0;\n        if (var_150 == var_c0)\n        {\n            rbx = var_158 == var_c8;\n        }\n        free(rax_6);\n        free(rax_7);\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_409f30",
            "funcStartAddr": "0x409f30",
            "funcEndAddr": "0x409f7a",
            "decompiledFuncCode": "uint64_t sub_409f30(int32_t* arg1)\n{\n    *(arg1 + 8) = 0;\n    int32_t rdx;\n    int32_t rax_1 = sub_40db90(&data_41218c, 0x80000, rdx);\n    *arg1 = rax_1;\n    if (rax_1 < 0)\n    {\n        void* rax_3 = sub_40b160(nullptr, 0);\n        *(arg1 + 8) = rax_3;\n        rax_3 = rax_3 == 0;\n        return (-rax_3);\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_409f80",
            "funcStartAddr": "0x409f80",
            "funcEndAddr": "0x409f99",
            "decompiledFuncCode": "int64_t sub_409f80(int32_t* arg1)\n{\n    int32_t rax_2 = *arg1;\n    if (rax_2 < 0)\n    {\n        /* tailcall */\n        return sub_40ae00(*(arg1 + 8));\n    }\n    /* tailcall */\n    return fchdir(rax_2);\n}\n\n"
        },
        {
            "funcName": "sub_409fa0",
            "funcStartAddr": "0x409fa0",
            "funcEndAddr": "0x409fb9",
            "decompiledFuncCode": "int64_t sub_409fa0(int32_t* arg1)\n{\n    int32_t rdi = *arg1;\n    if (rdi >= 0)\n    {\n        close(rdi);\n    }\n    /* tailcall */\n    return free(*(arg1 + 8));\n}\n\n"
        },
        {
            "funcName": "sub_409fc0",
            "funcStartAddr": "0x4023cd",
            "funcEndAddr": "0x40a39d",
            "decompiledFuncCode": "int64_t sub_409fc0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_4130cb, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_40a3a0",
            "funcStartAddr": "0x40a3a0",
            "funcEndAddr": "0x40a3c0",
            "decompiledFuncCode": "int64_t sub_40a3a0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_409fc0(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_40a3c0",
            "funcStartAddr": "0x40a3c0",
            "funcEndAddr": "0x40a420",
            "decompiledFuncCode": "int64_t sub_40a3c0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_409fc0(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_40a420",
            "funcStartAddr": "0x40a420",
            "funcEndAddr": "0x40a4dc",
            "decompiledFuncCode": "int64_t sub_40a420(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_409fc0(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_40a4e0",
            "funcStartAddr": "0x40a4e0",
            "funcEndAddr": "0x40a554",
            "decompiledFuncCode": "int64_t sub_40a4e0()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_40a560",
            "funcStartAddr": "0x40a560",
            "funcEndAddr": "0x40a57a",
            "decompiledFuncCode": "int64_t sub_40a560(size_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_40a7b0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40a5c0",
            "funcStartAddr": "0x40a5c0",
            "funcEndAddr": "0x40a5f6",
            "decompiledFuncCode": "int64_t sub_40a5c0(int64_t arg1, size_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_40a7b0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40a70a",
            "funcStartAddr": "0x40a70a",
            "funcEndAddr": "0x40a710",
            "decompiledFuncCode": "int64_t sub_40a70a() __noreturn\n{\n    sub_40a7b0();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40a710",
            "funcStartAddr": "0x40a710",
            "funcEndAddr": "0x40a727",
            "decompiledFuncCode": "int64_t sub_40a710(size_t arg1)\n{\n    /* tailcall */\n    return memset(sub_40a560(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_40a730",
            "funcStartAddr": "0x40a730",
            "funcEndAddr": "0x40a75e",
            "decompiledFuncCode": "int64_t sub_40a730(size_t arg1, size_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_40a7b0();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40a760",
            "funcStartAddr": "0x40a760",
            "funcEndAddr": "0x40a788",
            "decompiledFuncCode": "int64_t sub_40a760(int64_t arg1, size_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_40a560(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40a790",
            "funcStartAddr": "0x40a790",
            "funcEndAddr": "0x40a7a3",
            "decompiledFuncCode": "int64_t sub_40a790(char* arg1)\n{\n    /* tailcall */\n    return sub_40a760(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_40a7b0",
            "funcStartAddr": "0x40a7b0",
            "funcEndAddr": "0x40a7e1",
            "decompiledFuncCode": "int64_t sub_40a7b0() __noreturn\n{\n    error(data_617568, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40a7f0",
            "funcStartAddr": "0x40a7f0",
            "funcEndAddr": "0x40a81f",
            "decompiledFuncCode": "void* sub_40a7f0()\n{\n    void* rax = sub_40b160(nullptr, 0);\n    if ((rax == 0 && *__errno_location() == 0xc))\n    {\n        sub_40a7b0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40a820",
            "funcStartAddr": "0x4023d2",
            "funcEndAddr": "0x40a8a1",
            "decompiledFuncCode": "int64_t sub_40a820(int32_t arg1, int32_t arg2, char arg3, int64_t* arg4, \n    int64_t arg5) __noreturn\n{\n    uint64_t rdi = (arg1 - 1);\n    int32_t rbx = data_617568;\n    if (rdi > 3)\n    {\n        abort();\n        /* no return */\n    }\n    char* rsi = *((rdi << 3) + &data_4134e0);\n    int64_t rax = arg2;\n    void* const r12;\n    char* r13;\n    if (arg2 < 0)\n    {\n        char var_2a = arg3;\n        r13 = &var_2a;\n        r12 = (&data_413460 - rax);\n        char var_29_1 = 0;\n    }\n    else\n    {\n        r12 = &data_413460;\n        r13 = arg4[(rax * 4)];\n    }\n    error(rbx, 0, dcgettext(nullptr, rsi, 5), r12, r13, arg5);\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40a8b0",
            "funcStartAddr": "0x40a8b0",
            "funcEndAddr": "0x40ace4",
            "decompiledFuncCode": "uint64_t sub_40a8b0(char* arg1, int64_t* arg2, int32_t arg3, uint64_t* arg4, \n    char* arg5)\n{\n    if (arg3 > 0x24)\n    {\n        __assert_fail(\"0 <= strtol_base && strtol_base \u2026\", \"lib/xstrtol.c\", 0x60, \"xstrtoumax\");\n        /* no return */\n    }\n    int64_t* r15 = arg2;\n    void var_40;\n    if (arg2 == 0)\n    {\n        r15 = &var_40;\n    }\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char rbx = *arg1;\n    uint16_t* rsi = *__ctype_b_loc();\n    char* rax_2 = arg1;\n    while ((*(&rsi[rbx] + 1) & 0x20) != 0)\n    {\n        rax_2 = &rax_2[1];\n        rbx = *rax_2;\n    }\n    int32_t rbp_1;\n    if (rbx == 0x2d)\n    {\n    label_40a97a:\n        rbp_1 = 4;\n    }\n    else\n    {\n        char* r8 = *r15;\n        uint64_t rbx_1 = __strtoul_internal(arg1, r15, arg3, 0);\n        int32_t var_58;\n        void* r8_1;\n        uint32_t r12_1;\n        if (r8 == arg1)\n        {\n            var_58 = r8;\n            if (arg5 == 0)\n            {\n                goto label_40a97a;\n            }\n            r12_1 = *arg1;\n            if (r12_1 == 0)\n            {\n                goto label_40a97a;\n            }\n            rbp_1 = 0;\n            rbx_1 = 1;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) == 0)\n            {\n                goto label_40a97a;\n            }\n        label_40a9b7:\n            uint64_t rdx_1 = (r12_1 - 0x45);\n            int64_t rdx_3;\n            int32_t rsi_3;\n            if (rdx_1 <= 0x2f)\n            {\n                var_58 = rdx_1;\n                if ((!(TEST_BITQ(0x814400308945, rdx_1))))\n                {\n                    goto label_40aa20;\n                }\n                if (strchr(arg5, 0x30) == 0)\n                {\n                    goto label_40aa20;\n                }\n                char rax_8 = *(r8_1 + 1);\n                if (rax_8 == 0x44)\n                {\n                label_40ac48:\n                    rsi_3 = 2;\n                    rdx_3 = 0x3e8;\n                    goto label_40aa2a;\n                }\n                if (rax_8 == 0x69)\n                {\n                    rdx_3 = 0x400;\n                    int32_t rsi_6;\n                    rsi_6 = *(r8_1 + 2) == 0x42;\n                    rsi_3 = ((rsi_6 + rsi_6) + 1);\n                    goto label_40aa2a;\n                }\n                uint64_t rdx_2 = var_58;\n                if (rax_8 == 0x42)\n                {\n                    goto label_40ac48;\n                }\n                int32_t r9_1;\n                switch (rdx_2)\n                {\n                    case 0:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40abcb:\n                        int64_t rcx_6 = rdx_3;\n                        int32_t rdi_8 = 6;\n                        r9_1 = 0;\n                        int32_t temp15_1;\n                        do\n                        {\n                            uint64_t rax_28;\n                            int64_t rdx_11;\n                            rdx_11 = HIGHD((rbx_1 * rcx_6));\n                            rax_28 = LOWD((rbx_1 * rcx_6));\n                            bool o_8 = ((rbx_1 * rcx_6) >> 0x40) != 0;\n                            rbx_1 = rax_28;\n                            if (o_8)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp15_1 = rdi_8;\n                            rdi_8 = (rdi_8 - 1);\n                        } while (temp15_1 != 1);\n                        goto label_40ab24;\n                    }\n                    case 1:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 7:\n                    case 9:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xe:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1f:\n                    case 0x20:\n                    case 0x21:\n                    case 0x23:\n                    case 0x24:\n                    case 0x25:\n                    case 0x27:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    {\n                        goto label_40aac5;\n                    }\n                    case 2:\n                    case 0x22:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40ac03:\n                        int64_t rcx_7 = rdx_3;\n                        int64_t rax_30;\n                        int64_t rdx_12;\n                        rdx_12 = HIGHD((rbx_1 * rcx_7));\n                        rax_30 = LOWD((rbx_1 * rcx_7));\n                        int64_t rax_31;\n                        if (((rbx_1 * rcx_7) >> 0x40) == 0)\n                        {\n                            int64_t rdx_13;\n                            rdx_13 = HIGHD((rax_30 * rcx_7));\n                            rax_31 = LOWD((rax_30 * rcx_7));\n                            if (((rax_30 * rcx_7) >> 0x40) == 0)\n                            {\n                                uint64_t rax_32;\n                                int64_t rdx_14;\n                                rdx_14 = HIGHD((rax_31 * rcx_7));\n                                rax_32 = LOWD((rax_31 * rcx_7));\n                                if (((rax_31 * rcx_7) >> 0x40) == 0)\n                                {\n                                    rbx_1 = rax_32;\n                                    rbp_1 = (rbp_1 | 0);\n                                }\n                            }\n                        }\n                        if (((((rbx_1 * rcx_7) >> 0x40) != 0 || (((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) != 0)) || ((((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) == 0) && ((rax_31 * rcx_7) >> 0x40) != 0)))\n                        {\n                            rbx_1 = -1;\n                            rbp_1 = (rbp_1 | 1);\n                        }\n                        goto label_40aa6d;\n                    }\n                    case 6:\n                    case 0x26:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40aa8f:\n                        uint64_t rax_15;\n                        int64_t rdx_6;\n                        rdx_6 = HIGHD((rbx_1 * rdx_3));\n                        rax_15 = LOWD((rbx_1 * rdx_3));\n                        bool o_3 = ((rbx_1 * rdx_3) >> 0x40) != 0;\n                        rbx_1 = rax_15;\n                        if ((!o_3))\n                        {\n                            goto label_40aa6d;\n                        }\n                        goto label_40aa97;\n                    }\n                    case 8:\n                    case 0x28:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40aa4e:\n                        int64_t rcx_1 = rdx_3;\n                        int64_t rax_10;\n                        int64_t rdx_4;\n                        rdx_4 = HIGHD((rbx_1 * rcx_1));\n                        rax_10 = LOWD((rbx_1 * rcx_1));\n                        if (((rbx_1 * rcx_1) >> 0x40) == 0)\n                        {\n                            uint64_t rax_11;\n                            int64_t rdx_5;\n                            rdx_5 = HIGHD((rax_10 * rcx_1));\n                            rax_11 = LOWD((rax_10 * rcx_1));\n                            if (((rax_10 * rcx_1) >> 0x40) != 0)\n                            {\n                                goto label_40aa97;\n                            }\n                            rbx_1 = rax_11;\n                            goto label_40aa6d;\n                        }\n                    label_40aa97:\n                        rbp_1 = 1;\n                        rbx_1 = -1;\n                        goto label_40aa6d;\n                    }\n                    case 0xb:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40ab98:\n                        int64_t rcx_5 = rdx_3;\n                        int32_t rdi_7 = 5;\n                        r9_1 = 0;\n                        int32_t temp14_1;\n                        do\n                        {\n                            uint64_t rax_26;\n                            int64_t rdx_10;\n                            rdx_10 = HIGHD((rbx_1 * rcx_5));\n                            rax_26 = LOWD((rbx_1 * rcx_5));\n                            bool o_7 = ((rbx_1 * rcx_5) >> 0x40) != 0;\n                            rbx_1 = rax_26;\n                            if (o_7)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp14_1 = rdi_7;\n                            rdi_7 = (rdi_7 - 1);\n                        } while (temp14_1 != 1);\n                        goto label_40ab24;\n                    }\n                    case 0xf:\n                    case 0x2f:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40ab68:\n                        int64_t rcx_4 = rdx_3;\n                        int32_t rdi_6 = 4;\n                        r9_1 = 0;\n                        int32_t temp13_1;\n                        do\n                        {\n                            uint64_t rax_24;\n                            int64_t rdx_9;\n                            rdx_9 = HIGHD((rbx_1 * rcx_4));\n                            rax_24 = LOWD((rbx_1 * rcx_4));\n                            bool o_6 = ((rbx_1 * rcx_4) >> 0x40) != 0;\n                            rbx_1 = rax_24;\n                            if (o_6)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp13_1 = rdi_6;\n                            rdi_6 = (rdi_6 - 1);\n                        } while (temp13_1 != 1);\n                        goto label_40ab24;\n                    }\n                    case 0x14:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40ab36:\n                        int64_t rcx_3 = rdx_3;\n                        int32_t rdi_5 = 8;\n                        r9_1 = 0;\n                        int32_t temp12_1;\n                        do\n                        {\n                            uint64_t rax_22;\n                            int64_t rdx_8;\n                            rdx_8 = HIGHD((rbx_1 * rcx_3));\n                            rax_22 = LOWD((rbx_1 * rcx_3));\n                            bool o_5 = ((rbx_1 * rcx_3) >> 0x40) != 0;\n                            rbx_1 = rax_22;\n                            if (o_5)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp12_1 = rdi_5;\n                            rdi_5 = (rdi_5 - 1);\n                        } while (temp12_1 != 1);\n                        goto label_40ab24;\n                    }\n                    case 0x15:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40aafb:\n                        int64_t rcx_2 = rdx_3;\n                        int32_t rdi_4 = 7;\n                        r9_1 = 0;\n                        int32_t temp11_1;\n                        do\n                        {\n                            uint64_t rax_20;\n                            int64_t rdx_7;\n                            rdx_7 = HIGHD((rbx_1 * rcx_2));\n                            rax_20 = LOWD((rbx_1 * rcx_2));\n                            bool o_4 = ((rbx_1 * rcx_2) >> 0x40) != 0;\n                            rbx_1 = rax_20;\n                            if (o_4)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp11_1 = rdi_4;\n                            rdi_4 = (rdi_4 - 1);\n                        } while (temp11_1 != 1);\n                    label_40ab24:\n                        rbp_1 = (rbp_1 | r9_1);\n                        goto label_40aa6d;\n                    }\n                    case 0x1d:\n                    {\n                        rsi_3 = 1;\n                        break;\n                    }\n                    case 0x1e:\n                    {\n                        rsi_3 = 1;\n                        goto label_40aa6d;\n                    }\n                }\n            }\n            else\n            {\n            label_40aa20:\n                rsi_3 = 1;\n                rdx_3 = 0x400;\n            label_40aa2a:\n                char r12_2 = (r12_1 - 0x42);\n                if (r12_2 > 0x35)\n                {\n                    goto label_40aac5;\n                }\n                switch (r12_2)\n                {\n                    case 0:\n                    {\n                        if ((rbx_1 >> 0x36) != 0)\n                        {\n                            goto label_40aa97;\n                        }\n                        rbx_1 = (rbx_1 << 0xa);\n                        goto label_40aa6d;\n                    }\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x22:\n                    case 0x23:\n                    case 0x24:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x2a:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x33:\n                    case 0x34:\n                    {\n                        goto label_40aac5;\n                    }\n                    case 3:\n                    {\n                        goto label_40abcb;\n                    }\n                    case 5:\n                    case 0x25:\n                    {\n                        goto label_40ac03;\n                    }\n                    case 9:\n                    case 0x29:\n                    {\n                        goto label_40aa8f;\n                    }\n                    case 0xb:\n                    case 0x2b:\n                    {\n                        goto label_40aa4e;\n                    }\n                    case 0xe:\n                    {\n                        goto label_40ab98;\n                    }\n                    case 0x12:\n                    case 0x32:\n                    {\n                        goto label_40ab68;\n                    }\n                    case 0x17:\n                    {\n                        goto label_40ab36;\n                    }\n                    case 0x18:\n                    {\n                        goto label_40aafb;\n                    }\n                    case 0x21:\n                    {\n                        goto label_40aa6d;\n                    }\n                    case 0x35:\n                    {\n                        if (rbx_1 < 0)\n                        {\n                            goto label_40aa97;\n                        }\n                        rbx_1 = (rbx_1 + rbx_1);\n                    label_40aa6d:\n                        void* r8_2 = (r8_1 + rsi_3);\n                        int32_t rax_13 = (rbp_1 | 2);\n                        *r15 = r8_2;\n                        if (*r8_2 != 0)\n                        {\n                            rbp_1 = rax_13;\n                        }\n                        goto label_40a952;\n                    }\n                }\n            }\n            if ((rbx_1 >> 0x37) != 0)\n            {\n                goto label_40aa97;\n            }\n            rbx_1 = (rbx_1 << 9);\n            goto label_40aa6d;\n        }\n        int32_t rax_4 = *rax;\n        if (rax_4 == 0)\n        {\n            rbp_1 = 0;\n        }\n        else\n        {\n            rbp_1 = 1;\n            if (rax_4 != 0x22)\n            {\n                goto label_40a97a;\n            }\n        }\n        if (arg5 == 0)\n        {\n        label_40a952:\n            *arg4 = rbx_1;\n        }\n        else\n        {\n            r12_1 = *r8;\n            if (r12_1 == 0)\n            {\n                goto label_40a952;\n            }\n            var_58 = r8;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) != 0)\n            {\n                goto label_40a9b7;\n            }\n        label_40aac5:\n            *arg4 = rbx_1;\n            rbp_1 = (rbp_1 | 2);\n        }\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_40acf0",
            "funcStartAddr": "0x40acf0",
            "funcEndAddr": "0x40ad7f",
            "decompiledFuncCode": "uint64_t sub_40acf0(int64_t* arg1, char* arg2, char arg3 @ rax)\n{\n    int64_t rdx;\n    int64_t var_a8 = rdx;\n    int64_t rcx;\n    int64_t var_a0 = rcx;\n    int64_t r8;\n    int64_t var_98 = r8;\n    int64_t r9;\n    int64_t var_90 = r9;\n    if (arg3 != 0)\n    {\n        int128_t zmm0;\n        int128_t var_88_1 = zmm0;\n        int128_t zmm1;\n        int128_t var_78_1 = zmm1;\n        int128_t zmm2;\n        int128_t var_68_1 = zmm2;\n        int128_t zmm3;\n        int128_t var_58_1 = zmm3;\n        int128_t zmm4;\n        int128_t var_48_1 = zmm4;\n        int128_t zmm5;\n        int128_t var_38_1 = zmm5;\n        int128_t zmm6;\n        int128_t var_28_1 = zmm6;\n        int128_t zmm7;\n        int128_t var_18_1 = zmm7;\n    }\n    int32_t var_d0 = 0x10;\n    void* var_c8 = &arg_8;\n    int32_t var_cc = 0x30;\n    void var_b8;\n    void* var_c0 = &var_b8;\n    return sub_40d650(arg1, arg2, &var_d0);\n}\n\n"
        },
        {
            "funcName": "sub_40ad80",
            "funcStartAddr": "0x40ad80",
            "funcEndAddr": "0x40adb3",
            "decompiledFuncCode": "void sub_40ad80(int32_t arg1)\n{\n    if (arg1 < 0)\n    {\n        return;\n    }\n    if (close(arg1) != 0)\n    {\n        __assert_fail(\"! close_fail\", \"lib/chdir-long.c\", 0x40, \"cdb_free\");\n        /* no return */\n    }\n}\n\n"
        },
        {
            "funcName": "sub_40adc0",
            "funcStartAddr": "0x40adc0",
            "funcEndAddr": "0x40adf7",
            "decompiledFuncCode": "int64_t sub_40adc0(int32_t* arg1, char* arg2)\n{\n    int32_t rax_1 = openat(*arg1, arg2, 0x10900);\n    int64_t rax_2;\n    if (rax_1 < 0)\n    {\n        rax_2 = 0xffffffff;\n    }\n    else\n    {\n        sub_40ad80(*arg1);\n        *arg1 = rax_1;\n        rax_2 = 0;\n    }\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_40ae00",
            "funcStartAddr": "0x40ae00",
            "funcEndAddr": "0x40b06b",
            "decompiledFuncCode": "uint64_t sub_40ae00(char* arg1)\n{\n    int32_t rax = chdir();\n    int32_t rbx = rax;\n    if (rax != 0)\n    {\n        int32_t* rax_1 = __errno_location();\n        if (*rax_1 == 0x24)\n        {\n            uint64_t rax_2 = strlen(arg1);\n            int32_t var_2c = 0xffffff9c;\n            if (rax_2 == 0)\n            {\n                __assert_fail(\"0 < len\", \"lib/chdir-long.c\", 0x7e, \"chdir_long\");\n                /* no return */\n            }\n            if (rax_2 <= 0xfff)\n            {\n                __assert_fail(\"4096 <= len\", \"lib/chdir-long.c\", 0x7f, \"chdir_long\");\n                /* no return */\n            }\n            uint64_t rax_3 = strspn(arg1, \"/\");\n            char* rax_14;\n            int32_t rax_15;\n            void* rbp_1;\n            if (rax_3 == 2)\n            {\n                rax_14 = sub_40c480(&arg1[3], 0x2f, (rax_2 - 3));\n                if (rax_14 == 0)\n                {\n                    goto label_40af41;\n                }\n                *rax_14 = 0;\n                rax_15 = sub_40adc0(&var_2c, arg1);\n                *rax_14 = 0x2f;\n                if (rax_15 == 0)\n                {\n                    rbp_1 = &rax_14[(1 + strspn(&rax_14[1], \"/\"))];\n                }\n                else\n                {\n                label_40af30:\n                    int32_t rbx_4 = *rax_1;\n                    sub_40ad80(var_2c);\n                    *rax_1 = rbx_4;\n                label_40af41:\n                    rbx = -1;\n                }\n            }\n            else\n            {\n                rbp_1 = arg1;\n                if (rax_3 != 0)\n                {\n                    if (sub_40adc0(&var_2c, \"/\") != 0)\n                    {\n                        goto label_40af30;\n                    }\n                    rbp_1 = &arg1[rax_3];\n                }\n            }\n            if ((((rax_3 == 2 && rax_14 != 0) && rax_15 == 0) || rax_3 != 2))\n            {\n                if (*rbp_1 == 0x2f)\n                {\n                    __assert_fail(\"*dir != '/'\", \"lib/chdir-long.c\", 0xa2, \"chdir_long\");\n                    /* no return */\n                }\n                void* r13_1 = &arg1[rax_2];\n                if (rbp_1 > r13_1)\n                {\n                    __assert_fail(\"dir <= dir_end\", \"lib/chdir-long.c\", 0xa3, \"chdir_long\");\n                    /* no return */\n                }\n                while (true)\n                {\n                    if ((r13_1 - rbp_1) <= 0xfff)\n                    {\n                        if ((r13_1 > rbp_1 && sub_40adc0(&var_2c, rbp_1) != 0))\n                        {\n                            break;\n                        }\n                        int32_t rax_11 = fchdir(var_2c);\n                        if (rax_11 != 0)\n                        {\n                            break;\n                        }\n                        sub_40ad80(var_2c);\n                        return rax_11;\n                    }\n                    char* rax_4 = memrchr(rbp_1, 0x2f, 0x1000);\n                    if (rax_4 == 0)\n                    {\n                        *rax_1 = 0x24;\n                        return -1;\n                    }\n                    *rax_4 = 0;\n                    if ((rax_4 - rbp_1) > 0xfff)\n                    {\n                        __assert_fail(\"slash - dir < 4096\", \"lib/chdir-long.c\", 0xb3, \"chdir_long\");\n                        /* no return */\n                    }\n                    int32_t rax_6 = sub_40adc0(&var_2c, rbp_1);\n                    *rax_4 = 0x2f;\n                    if (rax_6 != 0)\n                    {\n                        break;\n                    }\n                    rbp_1 = &rax_4[(1 + strspn(&rax_4[1], \"/\"))];\n                }\n                goto label_40af30;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40b070",
            "funcStartAddr": "0x40b070",
            "funcEndAddr": "0x40b15b",
            "decompiledFuncCode": "int64_t sub_40b070(char* arg1, int64_t arg2, int64_t* arg3)\n{\n    int32_t rax = data_6175d4;\n    bool cond:0 = rax == 0;\n    int64_t var_1a8;\n    int32_t rax_4;\n    int32_t rax_12;\n    if (rax < 0)\n    {\n        rax_4 = uname(&var_1a8);\n        if (rax_4 == 0)\n        {\n            void var_126;\n            rax_12 = strverscmp(&var_126, \"2.6.36\");\n            if (rax_12 >= 0)\n            {\n                data_6175d4 = 1;\n            }\n        }\n        if ((rax_4 != 0 || (rax_4 == 0 && rax_12 < 0)))\n        {\n            data_6175d4 = 0;\n        }\n    }\n    int64_t var_1a0;\n    int64_t rax_2;\n    int64_t rax_3;\n    if (((rax < 0 && (rax_4 != 0 || (rax_4 == 0 && rax_12 < 0))) || (rax >= 0 && cond:0)))\n    {\n        if (statfs(arg1, &var_1a8) < 0)\n        {\n            rax_2 = 0xffffffff;\n        }\n        else\n        {\n            rax_3 = var_1a0;\n        label_40b0ea:\n            *arg3 = rax_3;\n            int64_t var_198;\n            arg3[1] = var_198;\n            int64_t var_190;\n            arg3[2] = var_190;\n            int64_t var_188;\n            arg3[3] = var_188;\n            arg3[4] = (var_188 >> 0x3f);\n            int64_t var_180;\n            arg3[5] = var_180;\n            int64_t var_178;\n            arg3[6] = var_178;\n            rax_2 = 0;\n        }\n    }\n    if ((((rax < 0 && rax_4 == 0) && rax_12 >= 0) || (rax >= 0 && (!cond:0))))\n    {\n        rax_2 = 0xffffffff;\n        if (statvfs(arg1, &var_1a8) >= 0)\n        {\n            rax_3 = var_1a0;\n            if (rax_3 == 0)\n            {\n                rax_3 = var_1a8;\n            }\n            goto label_40b0ea;\n        }\n    }\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_40b160",
            "funcStartAddr": "0x40b160",
            "funcEndAddr": "0x40b622",
            "decompiledFuncCode": "void* const sub_40b160(void* arg1, size_t arg2)\n{\n    void* var_108 = arg1;\n    void* const var_110;\n    size_t var_100;\n    if (arg2 != 0)\n    {\n        var_100 = arg2;\n        if (var_108 != 0)\n        {\n            var_110 = var_108;\n        }\n    }\n    else\n    {\n        var_100 = 0x1000;\n        if (arg1 != 0)\n        {\n            var_110 = nullptr;\n            *__errno_location() = 0x16;\n        }\n    }\n    void* rax_1;\n    if (((arg2 != 0 && var_108 == 0) || (arg2 == 0 && arg1 == 0)))\n    {\n        rax_1 = malloc(var_100);\n        var_110 = rax_1;\n    }\n    if (((arg2 != 0 && var_108 != 0) || (((arg2 != 0 && var_108 == 0) || (arg2 == 0 && arg1 == 0)) && rax_1 != 0)))\n    {\n        void* rbx_2 = (var_110 + var_100);\n        *(rbx_2 - 1) = 0;\n        int64_t var_c8;\n        int32_t rax_5 = __lxstat(1, &data_41218c, &var_c8);\n        int32_t rax_6;\n        int32_t rbx_6;\n        int32_t* r12_1;\n        if (rax_5 >= 0)\n        {\n            int64_t r15_1 = var_c8;\n            int64_t var_c0;\n            int64_t r14_1 = var_c0;\n            int64_t var_120_1 = r15_1;\n            rax_6 = __lxstat(1, \"/\", &var_c8);\n            if (rax_6 >= 0)\n            {\n                void* var_e8_1 = (rbx_2 - 1);\n                int64_t rax_8 = var_c8;\n                bool cond:1_1 = r15_1 != rax_8;\n                int64_t var_e0_1 = rax_8;\n                rax_8 = r14_1 != var_c0;\n                bool rdx_3 = (cond:1_1 | rax_8);\n                if (rdx_3 != 0)\n                {\n                    DIR* rbp_1 = nullptr;\n                    int32_t r15_2 = -0x64;\n                    r12_1 = __errno_location();\n                    do\n                    {\n                        int32_t rax_11 = openat(r15_2, &data_41218b, 0);\n                        r15_2 = rax_11;\n                        if (rax_11 < 0)\n                        {\n                            rbx_6 = *r12_1;\n                            if (rbp_1 != 0)\n                            {\n                            label_40b534:\n                                closedir(rbp_1);\n                            }\n                        }\n                        else\n                        {\n                            if (__fxstat(1, rax_11, &var_c8) != 0)\n                            {\n                                rbx_6 = *r12_1;\n                                if (rbp_1 != 0)\n                                {\n                                    closedir(rbp_1);\n                                }\n                                goto label_40b5a0;\n                            }\n                            int32_t rax_13;\n                            if (rbp_1 != 0)\n                            {\n                                rax_13 = closedir(rbp_1);\n                            }\n                            if ((rbp_1 == 0 || (rbp_1 != 0 && rax_13 == 0)))\n                            {\n                                int64_t rax_14 = var_c8;\n                                DIR* rax_16 = fdopendir(r15_2);\n                                rbp_1 = rax_16;\n                                if (rax_16 != 0)\n                                {\n                                    bool r13_1 = rdx_3;\n                                    struct dirent64* rax_17;\n                                    char* rbx_3;\n                                    while (true)\n                                    {\n                                        *r12_1 = 0;\n                                        rax_17 = readdir(rbp_1);\n                                        if (rax_17 == 0)\n                                        {\n                                            rbx_6 = *r12_1;\n                                            if (rbx_6 != 0)\n                                            {\n                                                break;\n                                            }\n                                            if (r13_1 == 0)\n                                            {\n                                                break;\n                                            }\n                                            rewinddir(rbp_1);\n                                            rax_17 = readdir(rbp_1);\n                                            if (rax_17 == 0)\n                                            {\n                                                rbx_6 = *r12_1;\n                                                break;\n                                            }\n                                            r13_1 = false;\n                                            if (rax_17->d_name[0] != 0x2e)\n                                            {\n                                                goto label_40b332;\n                                            }\n                                        }\n                                        if (((rax_17 != 0 && rax_17->d_name[0] == 0x2e) || rax_17 == 0))\n                                        {\n                                            if (rax_17->d_name[1] == 0)\n                                            {\n                                                continue;\n                                            }\n                                            if ((rax_17->d_name[1] != 0 && rax_17->d_name[1] == 0x2e))\n                                            {\n                                                continue;\n                                            }\n                                        }\n                                        if (r13_1 != 0)\n                                        {\n                                            int64_t rcx_1;\n                                            rcx_1 = rax_14 != var_120_1;\n                                            bool rdx_5 = (rax_17->d_ino == r14_1 | rcx_1);\n                                            if (rdx_5 == 0)\n                                            {\n                                                continue;\n                                            }\n                                            else\n                                            {\n                                                r13_1 = rdx_5;\n                                            }\n                                            goto label_40b332;\n                                        }\n                                    label_40b332:\n                                        rbx_3 = &rax_17->d_name;\n                                        int32_t var_b0;\n                                        if (((__fxstatat(1, r15_2, rbx_3, &var_c8, 0x100) == 0 && (var_b0 & 0xf000) == 0x4000) && var_c8 == var_120_1))\n                                        {\n                                            if (var_c0 == r14_1)\n                                            {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                    if ((!((rax_17 == 0 && rbx_6 == 0) && r13_1 != 0)))\n                                    {\n                                        void* r13_3 = (var_e8_1 - var_110);\n                                        size_t rax_22 = strlen(rbx_3);\n                                        void* rax_25;\n                                        size_t rdx_7;\n                                        if (r13_3 <= rax_22)\n                                        {\n                                            if (arg2 != 0)\n                                            {\n                                                *r12_1 = 0x22;\n                                                rbx_6 = 0x22;\n                                            }\n                                            else\n                                            {\n                                                rdx_7 = var_100;\n                                                if (rax_22 >= var_100)\n                                                {\n                                                    rdx_7 = rax_22;\n                                                }\n                                                size_t rax_24 = (var_100 + rdx_7);\n                                                if ((var_100 + rdx_7) >= var_100)\n                                                {\n                                                    rax_25 = realloc(var_110, rax_24);\n                                                    if (rax_25 != 0)\n                                                    {\n                                                        var_110 = rax_25;\n                                                        var_e8_1 = memcpy((rax_25 + (rdx_7 + r13_3)), (rax_25 + r13_3), (var_100 - r13_3));\n                                                        var_100 = rax_24;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        if (((((r13_3 <= rax_22 && arg2 == 0) && (var_100 + rdx_7) >= var_100) && rax_25 != 0) || r13_3 > rax_22))\n                                        {\n                                            void* rax_28 = memcpy((var_e8_1 - rax_22), rbx_3, rax_22);\n                                            var_e8_1 = (rax_28 - 1);\n                                            r14_1 = var_c0;\n                                            *(rax_28 - 1) = 0x2f;\n                                            var_120_1 = rax_14;\n                                            if (var_e0_1 != rax_14)\n                                            {\n                                                continue;\n                                            }\n                                            else\n                                            {\n                                                if (var_c0 == var_c0)\n                                                {\n                                                    if (closedir(rbp_1) != 0)\n                                                    {\n                                                        goto label_40b566;\n                                                    }\n                                                    rbx_2 = (var_110 + var_100);\n                                                    goto label_40b487;\n                                                }\n                                                continue;\n                                            }\n                                        }\n                                        if (((r13_3 <= rax_22 && arg2 == 0) && ((var_100 + rdx_7) < var_100 || ((var_100 + rdx_7) >= var_100 && rax_25 == 0))))\n                                        {\n                                            *r12_1 = 0xc;\n                                            rbx_6 = 0xc;\n                                        }\n                                    }\n                                    else if (rbx_6 == 0)\n                                    {\n                                        *r12_1 = 2;\n                                        rbx_6 = 2;\n                                    }\n                                    goto label_40b534;\n                                }\n                            }\n                            rbx_6 = *r12_1;\n                        label_40b5a0:\n                            close(r15_2);\n                        }\n                    } while (var_108 == 0);\n                    if (var_108 != 0)\n                    {\n                        goto label_40b541;\n                    }\n                    goto label_40b571;\n                }\n            label_40b487:\n                if (var_e8_1 == ((var_110 + var_100) - 1))\n                {\n                    *(var_e8_1 - 1) = 0x2f;\n                    var_e8_1 = (var_e8_1 - 1);\n                }\n                void* rbx_5 = (rbx_2 - var_e8_1);\n                memmove(var_110, var_e8_1, rbx_5);\n                if (arg2 == 0)\n                {\n                    var_108 = realloc(var_110, rbx_5);\n                }\n                void* const rax_34 = var_108;\n                if (rax_34 == 0)\n                {\n                    rax_34 = var_110;\n                }\n                var_110 = rax_34;\n            }\n        }\n        if ((rax_5 < 0 || (rax_5 >= 0 && rax_6 < 0)))\n        {\n            r12_1 = __errno_location();\n        label_40b566:\n            rbx_6 = *r12_1;\n            if (var_108 != 0)\n            {\n                goto label_40b541;\n            }\n        label_40b571:\n            free(var_110);\n        label_40b541:\n            *r12_1 = rbx_6;\n            var_110 = nullptr;\n        }\n    }\n    return var_110;\n}\n\n"
        },
        {
            "funcName": "sub_40b630",
            "funcStartAddr": "0x40b630",
            "funcEndAddr": "0x40b70f",
            "decompiledFuncCode": "uint64_t sub_40b630(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_40b710",
            "funcStartAddr": "0x40b710",
            "funcEndAddr": "0x40bd2c",
            "decompiledFuncCode": "uint64_t sub_40b710(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_40b940;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_40b866;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_40b866;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_40b866:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_40b940:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_40b96e;\n                }\n                *arg5 = r12;\n            label_40b96e:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_40b98c;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_40b98c:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_40b98c;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_40b8fe;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_40b8fe:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_40bd30",
            "funcStartAddr": "0x40bd30",
            "funcEndAddr": "0x40c2f6",
            "decompiledFuncCode": "uint64_t sub_40bd30(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_40bf6c;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_40bdf8;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_40bdf8:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_40b630(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_413460;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_40b630(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_40bf6c;\n                }\n                *arg7 = rdx_2;\n            label_40bf6c:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_40c070;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_413460;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_40c0e0;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_40c070;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_40c070;\n                            }\n                            goto label_40c031;\n                        }\n                    label_40c031:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_40b710(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_413461);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_40c070:\n                            rdx = &r14_1[1];\n                        label_40beb1:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_40c0ae;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_40c0ae:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_413a15;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_40c0e0:\n                                        r14_2 = sub_40b710(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_40c19d;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_40c19d:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_40bf6c;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_40bdf8;\n        }\n        goto label_40beb1;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_40c360",
            "funcStartAddr": "0x40c360",
            "funcEndAddr": "0x40c378",
            "decompiledFuncCode": "uint64_t sub_40c360(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_40c400",
            "funcStartAddr": "0x40c400",
            "funcEndAddr": "0x40c47a",
            "decompiledFuncCode": "uint64_t sub_40c400(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_4139f9[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_40c42a;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_40c42a:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_40dbe0() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_40c480",
            "funcStartAddr": "0x40c480",
            "funcEndAddr": "0x40c584",
            "decompiledFuncCode": "char* sub_40c480(char* arg1, int32_t arg2, int64_t arg3)\n{\n    char r8 = arg2;\n    if (arg3 != 0)\n    {\n        if ((arg1 & 7) != 0)\n        {\n            if (arg2 == *arg1)\n            {\n            label_40c580:\n                return arg1;\n            }\n            do\n            {\n                arg1 = &arg1[1];\n                int64_t temp0_1 = arg3;\n                arg3 = (arg3 - 1);\n                if (temp0_1 == 1)\n                {\n                    return 0;\n                }\n                if ((arg1 & 7) == 0)\n                {\n                    break;\n                }\n            } while (*arg1 != r8);\n            if ((arg1 & 7) != 0)\n            {\n                goto label_40c580;\n            }\n        }\n        int64_t r9_5 = ((arg2 << 8) | arg2);\n        int64_t r9_6 = (r9_5 | (r9_5 << 0x10));\n        int64_t r9_7 = (r9_6 | (r9_6 << 0x20));\n        int64_t rax_8;\n        if (arg3 > 7)\n        {\n            rax_8 = (*arg1 ^ r9_7);\n            if ((((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0)\n            {\n                int64_t rax_12;\n                do\n                {\n                    arg3 = (arg3 - 8);\n                    arg1 = &arg1[8];\n                    if (arg3 <= 7)\n                    {\n                        break;\n                    }\n                    rax_12 = (*arg1 ^ r9_7);\n                } while ((((!rax_12) & (rax_12 - 0x101010101010101)) & 0x8080808080808080) == 0);\n            }\n        }\n        if ((((arg3 <= 7 || (arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) != 0)) || (((arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0) && arg3 <= 7) && arg3 != 0)) || ((arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0) && arg3 > 7)))\n        {\n            if (arg2 == *arg1)\n            {\n                goto label_40c580;\n            }\n            char* rcx_3 = &arg1[1];\n            void* rdi = &arg1[arg3];\n            while (true)\n            {\n                char* rax_15 = rcx_3;\n                if (rcx_3 == rdi)\n                {\n                    return 0;\n                }\n                rcx_3 = &rcx_3[1];\n                if (rcx_3[-1] == r8)\n                {\n                    return rax_15;\n                }\n            }\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40c590",
            "funcStartAddr": "0x40c590",
            "funcEndAddr": "0x40c61a",
            "decompiledFuncCode": "int64_t sub_40c590(char* arg1)\n{\n    char* rcx = arg1;\n    int64_t rdx = 0;\n    int64_t rax_1 = (strlen(arg1) + 1);\n    while (true)\n    {\n        char rdi = arg1[rdx];\n        int64_t rsi_1 = (rdx + 1);\n        if (rdi == 0x5c)\n        {\n            int64_t r8_1 = (rdx + 4);\n            if (r8_1 >= rax_1)\n            {\n                goto label_40c5a8;\n            }\n            uint64_t r9_1 = arg1[rsi_1];\n            if ((r9_1 - 0x30) > 3)\n            {\n                goto label_40c5a8;\n            }\n            uint32_t r10_2 = arg1[(rdx + 2)];\n            if ((r10_2 - 0x30) > 7)\n            {\n                goto label_40c5a8;\n            }\n            char r11_2 = (arg1[(rdx + 3)] - 0x30);\n            if (r11_2 > 7)\n            {\n                goto label_40c5a8;\n            }\n            rcx = &rcx[1];\n            rsi_1 = r8_1;\n            rcx[-1] = ((r11_2 + ((r10_2 + (r9_1 << 3)) << 3)) - 0x80);\n        }\n        else\n        {\n        label_40c5a8:\n            *rcx = rdi;\n            rcx = &rcx[1];\n            if (rax_1 <= rsi_1)\n            {\n                return rax_1;\n            }\n        }\n        rdx = rsi_1;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_40c620",
            "funcStartAddr": "0x40c620",
            "funcEndAddr": "0x40c662",
            "decompiledFuncCode": "int64_t sub_40c620(int64_t* arg1)\n{\n    free(*arg1);\n    free(arg1[1]);\n    free(arg1[2]);\n    if ((arg1[5] & 4) != 0)\n    {\n        free(arg1[3]);\n        /* tailcall */\n        return free(arg1);\n    }\n    /* tailcall */\n    return free(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_40c670",
            "funcStartAddr": "0x40c670",
            "funcEndAddr": "0x40ce2f",
            "decompiledFuncCode": "int64_t* sub_40c670()\n{\n    FILE* rax = fopen(\"/proc/self/mountinfo\", \"r\");\n    int64_t* var_50;\n    int32_t rax_29;\n    int64_t* rax_30;\n    FILE* rax_33;\n    int32_t rax_50;\n    int64_t* r12_1;\n    if (rax == 0)\n    {\n        rax_33 = setmntent(\"/etc/mtab\", \"r\");\n        if (rax_33 == 0)\n        {\n            rax_30 = nullptr;\n        label_40c938:\n            return rax_30;\n        }\n        r12_1 = &var_50;\n        struct mntent* rax_34 = getmntent(rax_33);\n        struct mntent* rbp_2 = rax_34;\n        if (rax_34 != 0)\n        {\n            struct mntent* rax_49;\n            do\n            {\n                char* rax_35 = hasmntopt(rbp_2, \"bind\");\n                int64_t* rax_36 = sub_40a560(0x38);\n                *rax_36 = sub_40a790(rbp_2->mnt_fsname);\n                int64_t rax_38 = sub_40a790(rbp_2->mnt_dir);\n                rax_36[2] = 0;\n                char* rdi_41 = rbp_2->mnt_type;\n                rax_36[1] = rax_38;\n                char* rax_39 = sub_40a790(rdi_41);\n                void* const rdi_42 = \"autofs\";\n                int64_t rcx_21 = 7;\n                char temp0_1 = rax_36[5];\n                rax_36[5] = (rax_36[5] | 4);\n                bool c_13 = false;\n                bool z_13 = (temp0_1 | 4) == 0;\n                char* rsi_14 = rax_39;\n                char* rbp_3 = rax_39;\n                rax_36[3] = rax_39;\n                char rdx_13 = 1;\n                while (rcx_21 != 0)\n                {\n                    char temp1_1 = *rsi_14;\n                    char temp2_1 = *rdi_42;\n                    c_13 = temp1_1 < temp2_1;\n                    z_13 = temp1_1 == temp2_1;\n                    rsi_14 = &rsi_14[1];\n                    rdi_42 = (rdi_42 + 1);\n                    rcx_21 = (rcx_21 - 1);\n                    if ((!z_13))\n                    {\n                        break;\n                    }\n                }\n                rax_39 = ((!z_13) && (!c_13));\n                rax_39 = (rax_39 - 0);\n                bool c_14 = false;\n                bool z_14 = (rax_39 & rax_39) == 0;\n                if ((!z_14))\n                {\n                    void* const rdi_43 = \"proc\";\n                    int64_t rcx_22 = 5;\n                    char* rsi_15 = rbp_3;\n                    while (rcx_22 != 0)\n                    {\n                        char temp8_1 = *rsi_15;\n                        char temp9_1 = *rdi_43;\n                        c_14 = temp8_1 < temp9_1;\n                        z_14 = temp8_1 == temp9_1;\n                        rsi_15 = &rsi_15[1];\n                        rdi_43 = (rdi_43 + 1);\n                        rcx_22 = (rcx_22 - 1);\n                        if ((!z_14))\n                        {\n                            break;\n                        }\n                    }\n                    rax_39 = ((!z_14) && (!c_14));\n                    rax_39 = (rax_39 - 0);\n                    bool c_15 = false;\n                    bool z_15 = (rax_39 & rax_39) == 0;\n                    if ((!z_15))\n                    {\n                        void* const rdi_44 = \"subfs\";\n                        int64_t rcx_23 = 6;\n                        char* rsi_16 = rbp_3;\n                        while (rcx_23 != 0)\n                        {\n                            char temp18_1 = *rsi_16;\n                            char temp19_1 = *rdi_44;\n                            c_15 = temp18_1 < temp19_1;\n                            z_15 = temp18_1 == temp19_1;\n                            rsi_16 = &rsi_16[1];\n                            rdi_44 = (rdi_44 + 1);\n                            rcx_23 = (rcx_23 - 1);\n                            if ((!z_15))\n                            {\n                                break;\n                            }\n                        }\n                        rax_39 = ((!z_15) && (!c_15));\n                        rax_39 = (rax_39 - 0);\n                        bool c_16 = false;\n                        bool z_16 = (rax_39 & rax_39) == 0;\n                        if ((!z_16))\n                        {\n                            void* const rdi_45 = \"debugfs\";\n                            int64_t rcx_24 = 8;\n                            char* rsi_17 = rbp_3;\n                            while (rcx_24 != 0)\n                            {\n                                char temp28_1 = *rsi_17;\n                                char temp29_1 = *rdi_45;\n                                c_16 = temp28_1 < temp29_1;\n                                z_16 = temp28_1 == temp29_1;\n                                rsi_17 = &rsi_17[1];\n                                rdi_45 = (rdi_45 + 1);\n                                rcx_24 = (rcx_24 - 1);\n                                if ((!z_16))\n                                {\n                                    break;\n                                }\n                            }\n                            rax_39 = ((!z_16) && (!c_16));\n                            rax_39 = (rax_39 - 0);\n                            bool c_17 = false;\n                            bool z_17 = (rax_39 & rax_39) == 0;\n                            if ((!z_17))\n                            {\n                                void* const rdi_46 = \"devpts\";\n                                int64_t rcx_25 = 7;\n                                char* rsi_18 = rbp_3;\n                                while (rcx_25 != 0)\n                                {\n                                    char temp34_1 = *rsi_18;\n                                    char temp35_1 = *rdi_46;\n                                    c_17 = temp34_1 < temp35_1;\n                                    z_17 = temp34_1 == temp35_1;\n                                    rsi_18 = &rsi_18[1];\n                                    rdi_46 = (rdi_46 + 1);\n                                    rcx_25 = (rcx_25 - 1);\n                                    if ((!z_17))\n                                    {\n                                        break;\n                                    }\n                                }\n                                rax_39 = ((!z_17) && (!c_17));\n                                rax_39 = (rax_39 - 0);\n                                bool c_18 = false;\n                                bool z_18 = (rax_39 & rax_39) == 0;\n                                if ((!z_18))\n                                {\n                                    void* const rdi_47 = \"fusectl\";\n                                    int64_t rcx_26 = 8;\n                                    char* rsi_19 = rbp_3;\n                                    while (rcx_26 != 0)\n                                    {\n                                        char temp38_1 = *rsi_19;\n                                        char temp39_1 = *rdi_47;\n                                        c_18 = temp38_1 < temp39_1;\n                                        z_18 = temp38_1 == temp39_1;\n                                        rsi_19 = &rsi_19[1];\n                                        rdi_47 = (rdi_47 + 1);\n                                        rcx_26 = (rcx_26 - 1);\n                                        if ((!z_18))\n                                        {\n                                            break;\n                                        }\n                                    }\n                                    rax_39 = ((!z_18) && (!c_18));\n                                    rax_39 = (rax_39 - 0);\n                                    bool c_19 = false;\n                                    bool z_19 = (rax_39 & rax_39) == 0;\n                                    if ((!z_19))\n                                    {\n                                        void* const rdi_48 = \"mqueue\";\n                                        int64_t rcx_27 = 7;\n                                        char* rsi_20 = rbp_3;\n                                        while (rcx_27 != 0)\n                                        {\n                                            char temp42_1 = *rsi_20;\n                                            char temp43_1 = *rdi_48;\n                                            c_19 = temp42_1 < temp43_1;\n                                            z_19 = temp42_1 == temp43_1;\n                                            rsi_20 = &rsi_20[1];\n                                            rdi_48 = (rdi_48 + 1);\n                                            rcx_27 = (rcx_27 - 1);\n                                            if ((!z_19))\n                                            {\n                                                break;\n                                            }\n                                        }\n                                        rax_39 = ((!z_19) && (!c_19));\n                                        rax_39 = (rax_39 - 0);\n                                        bool c_20 = false;\n                                        bool z_20 = (rax_39 & rax_39) == 0;\n                                        if ((!z_20))\n                                        {\n                                            void* const rdi_49 = \"rpc_pipefs\";\n                                            int64_t rcx_28 = 0xb;\n                                            char* rsi_21 = rbp_3;\n                                            while (rcx_28 != 0)\n                                            {\n                                                char temp46_1 = *rsi_21;\n                                                char temp47_1 = *rdi_49;\n                                                c_20 = temp46_1 < temp47_1;\n                                                z_20 = temp46_1 == temp47_1;\n                                                rsi_21 = &rsi_21[1];\n                                                rdi_49 = (rdi_49 + 1);\n                                                rcx_28 = (rcx_28 - 1);\n                                                if ((!z_20))\n                                                {\n                                                    break;\n                                                }\n                                            }\n                                            rax_39 = ((!z_20) && (!c_20));\n                                            rax_39 = (rax_39 - 0);\n                                            bool c_21 = false;\n                                            bool z_21 = (rax_39 & rax_39) == 0;\n                                            if ((!z_21))\n                                            {\n                                                void* const rdi_50 = \"sysfs\";\n                                                int64_t rcx_29 = 6;\n                                                char* rsi_22 = rbp_3;\n                                                while (rcx_29 != 0)\n                                                {\n                                                    char temp50_1 = *rsi_22;\n                                                    char temp51_1 = *rdi_50;\n                                                    c_21 = temp50_1 < temp51_1;\n                                                    z_21 = temp50_1 == temp51_1;\n                                                    rsi_22 = &rsi_22[1];\n                                                    rdi_50 = (rdi_50 + 1);\n                                                    rcx_29 = (rcx_29 - 1);\n                                                    if ((!z_21))\n                                                    {\n                                                        break;\n                                                    }\n                                                }\n                                                rax_39 = ((!z_21) && (!c_21));\n                                                rax_39 = (rax_39 - 0);\n                                                bool c_22 = false;\n                                                bool z_22 = (rax_39 & rax_39) == 0;\n                                                if ((!z_22))\n                                                {\n                                                    void* const rdi_51 = \"devfs\";\n                                                    int64_t rcx_30 = 6;\n                                                    char* rsi_23 = rbp_3;\n                                                    while (rcx_30 != 0)\n                                                    {\n                                                        char temp54_1 = *rsi_23;\n                                                        char temp55_1 = *rdi_51;\n                                                        c_22 = temp54_1 < temp55_1;\n                                                        z_22 = temp54_1 == temp55_1;\n                                                        rsi_23 = &rsi_23[1];\n                                                        rdi_51 = (rdi_51 + 1);\n                                                        rcx_30 = (rcx_30 - 1);\n                                                        if ((!z_22))\n                                                        {\n                                                            break;\n                                                        }\n                                                    }\n                                                    rax_39 = ((!z_22) && (!c_22));\n                                                    rax_39 = (rax_39 - 0);\n                                                    bool c_23 = false;\n                                                    bool z_23 = (rax_39 & rax_39) == 0;\n                                                    if ((!z_23))\n                                                    {\n                                                        void* const rdi_52 = \"kernfs\";\n                                                        int64_t rcx_31 = 7;\n                                                        char* rsi_24 = rbp_3;\n                                                        while (rcx_31 != 0)\n                                                        {\n                                                            char temp58_1 = *rsi_24;\n                                                            char temp59_1 = *rdi_52;\n                                                            c_23 = temp58_1 < temp59_1;\n                                                            z_23 = temp58_1 == temp59_1;\n                                                            rsi_24 = &rsi_24[1];\n                                                            rdi_52 = (rdi_52 + 1);\n                                                            rcx_31 = (rcx_31 - 1);\n                                                            if ((!z_23))\n                                                            {\n                                                                break;\n                                                            }\n                                                        }\n                                                        rax_39 = ((!z_23) && (!c_23));\n                                                        rax_39 = (rax_39 - 0);\n                                                        if (rax_39 != 0)\n                                                        {\n                                                            char var_89_1 = 1;\n                                                            rdx_13 = 1;\n                                                            if (strcmp(rbp_3, \"ignore\") != 0)\n                                                            {\n                                                                int32_t rax_41;\n                                                                rax_41 = strcmp(rbp_3, \"none\") == 0;\n                                                                rdx_13 = (rax_35 == 0 & rax_41);\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                char* r15_4 = *rax_36;\n                rax_36[5] = ((rax_36[5] & 0xfe) | rdx_13);\n                bool rdx_15 = true;\n                if (strchr(r15_4, 0x3a) == 0)\n                {\n                    char temp4_1 = *r15_4;\n                    bool c_24 = temp4_1 < 0x2f;\n                    bool z_24 = temp4_1 == 0x2f;\n                    char* rax_45;\n                    if (z_24)\n                    {\n                        char temp7_1 = r15_4[1];\n                        c_24 = temp7_1 < 0x2f;\n                        z_24 = temp7_1 == 0x2f;\n                        if ((!z_24))\n                        {\n                            goto label_40cd52;\n                        }\n                        void* const rdi_63 = \"smbfs\";\n                        int64_t rcx_35 = 6;\n                        char* rsi_28 = rbp_3;\n                        while (rcx_35 != 0)\n                        {\n                            char temp16_1 = *rsi_28;\n                            char temp17_1 = *rdi_63;\n                            c_24 = temp16_1 < temp17_1;\n                            z_24 = temp16_1 == temp17_1;\n                            rsi_28 = &rsi_28[1];\n                            rdi_63 = (rdi_63 + 1);\n                            rcx_35 = (rcx_35 - 1);\n                            if ((!z_24))\n                            {\n                                break;\n                            }\n                        }\n                        rax_45 = ((!z_24) && (!c_24));\n                        rax_45 = (rax_45 - 0);\n                        bool c_26 = false;\n                        bool z_26 = (rax_45 & rax_45) == 0;\n                        if ((!z_26))\n                        {\n                            void* const rdi_64 = \"cifs\";\n                            int64_t rcx_36 = 5;\n                            char* rsi_29 = rbp_3;\n                            while (rcx_36 != 0)\n                            {\n                                char temp26_1 = *rsi_29;\n                                char temp27_1 = *rdi_64;\n                                c_26 = temp26_1 < temp27_1;\n                                z_26 = temp26_1 == temp27_1;\n                                rsi_29 = &rsi_29[1];\n                                rdi_64 = (rdi_64 + 1);\n                                rcx_36 = (rcx_36 - 1);\n                                if ((!z_26))\n                                {\n                                    break;\n                                }\n                            }\n                            rax_45 = ((!z_26) && (!c_26));\n                            rax_45 = (rax_45 - 0);\n                            c_24 = false;\n                            z_24 = (rax_45 & rax_45) == 0;\n                            if ((!z_24))\n                            {\n                                goto label_40cd52;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_40cd52:\n                        void* const rsi_25 = \"-hosts\";\n                        int64_t rcx_32 = 7;\n                        char* rdi_59 = r15_4;\n                        while (rcx_32 != 0)\n                        {\n                            char temp11_1 = *rsi_25;\n                            char temp12_1 = *rdi_59;\n                            c_24 = temp11_1 < temp12_1;\n                            z_24 = temp11_1 == temp12_1;\n                            rsi_25 = (rsi_25 + 1);\n                            rdi_59 = &rdi_59[1];\n                            rcx_32 = (rcx_32 - 1);\n                            if ((!z_24))\n                            {\n                                break;\n                            }\n                        }\n                        rax_45 = ((!z_24) && (!c_24));\n                        rax_45 = (rax_45 - 0);\n                        rdx_15 = rax_45 == 0;\n                    }\n                }\n                char rax_46 = rax_36[5];\n                rax_36[4] = -1;\n                rax_36[5] = ((rax_46 & 0xfd) | (rdx_15 + rdx_15));\n                *r12_1 = rax_36;\n                r12_1 = &rax_36[6];\n                rax_49 = getmntent(rax_33);\n                rbp_2 = rax_49;\n            } while (rax_49 != 0);\n        }\n        rax_50 = endmntent(rax_33);\n    }\n    else\n    {\n        char* var_48 = nullptr;\n        r12_1 = &var_50;\n        uint64_t var_40 = 0;\n        while (true)\n        {\n            if (__getdelim(&var_48, &var_40, 0xa, rax) == -1)\n            {\n                break;\n            }\n            void var_79;\n            int32_t var_78;\n            int32_t var_74;\n            int32_t var_70;\n            int32_t var_6c;\n            int32_t var_58;\n            int32_t var_54;\n            if ((sscanf(var_48, \"%*u %*u %u:%u %n%*s%n %n%*s%n%c\", &var_78, &var_74, &var_58, &var_54, &var_70, &var_6c, &var_79) & 0xfffffffb) == 3)\n            {\n                char* rax_5 = sub_40d2b0(&var_48[var_6c], &data_413a2e);\n                int32_t var_68;\n                int32_t var_64;\n                int32_t var_60;\n                int32_t var_5c;\n                if ((rax_5 != 0 && (sscanf(rax_5, \" - %n%*s%n %n%*s%n %c\", &var_68, &var_64, &var_60, &var_5c, &var_79) & 0xfffffffb) == 1))\n                {\n                    char r13_1 = 1;\n                    var_48[var_54] = 0;\n                    var_48[var_6c] = 0;\n                    rax_5[var_64] = 0;\n                    rax_5[var_5c] = 0;\n                    sub_40c590(&rax_5[var_60]);\n                    sub_40c590(&var_48[var_70]);\n                    sub_40c590(&var_48[var_58]);\n                    int64_t* rax_13 = sub_40a560(0x38);\n                    *rax_13 = sub_40a790(&rax_5[var_60]);\n                    rax_13[1] = sub_40a790(&var_48[var_70]);\n                    rax_13[2] = sub_40a790(&var_48[var_58]);\n                    char* rax_17 = sub_40a790(&rax_5[var_68]);\n                    uint64_t rdx_6 = var_78;\n                    void* const rdi_20 = \"autofs\";\n                    rax_13[3] = rax_17;\n                    uint64_t rax_18 = var_74;\n                    rax_13[5] = (rax_13[5] | 4);\n                    int64_t rdx_10 = ((((rdx_6 << 0x20) & 0xfffff00000000000) | ((rdx_6 << 8) & 0xfff00)) | rax_18);\n                    int64_t rax_20 = ((rax_18 << 0xc) & 0xffffff00000);\n                    int64_t rcx_9 = 7;\n                    char* rsi_2 = rax_17;\n                    int64_t rax_21 = (rax_20 | rdx_10);\n                    bool c_1 = false;\n                    bool z_1 = (rax_20 | rdx_10) == 0;\n                    while (rcx_9 != 0)\n                    {\n                        char temp5_1 = *rsi_2;\n                        char temp6_1 = *rdi_20;\n                        c_1 = temp5_1 < temp6_1;\n                        z_1 = temp5_1 == temp6_1;\n                        rsi_2 = &rsi_2[1];\n                        rdi_20 = (rdi_20 + 1);\n                        rcx_9 = (rcx_9 - 1);\n                        if ((!z_1))\n                        {\n                            break;\n                        }\n                    }\n                    rax_13[4] = rax_21;\n                    rax_21 = ((!z_1) && (!c_1));\n                    rax_21 = (rax_21 - 0);\n                    bool c_2 = false;\n                    bool z_2 = (rax_21 & rax_21) == 0;\n                    if ((!z_2))\n                    {\n                        void* const rdi_21 = \"proc\";\n                        int64_t rcx_10 = 5;\n                        char* rsi_3 = rax_17;\n                        while (rcx_10 != 0)\n                        {\n                            char temp14_1 = *rsi_3;\n                            char temp15_1 = *rdi_21;\n                            c_2 = temp14_1 < temp15_1;\n                            z_2 = temp14_1 == temp15_1;\n                            rsi_3 = &rsi_3[1];\n                            rdi_21 = (rdi_21 + 1);\n                            rcx_10 = (rcx_10 - 1);\n                            if ((!z_2))\n                            {\n                                break;\n                            }\n                        }\n                        rax_21 = ((!z_2) && (!c_2));\n                        rax_21 = (rax_21 - 0);\n                        bool c_3 = false;\n                        bool z_3 = (rax_21 & rax_21) == 0;\n                        if ((!z_3))\n                        {\n                            void* const rdi_25 = \"subfs\";\n                            int64_t rcx_11 = 6;\n                            char* rsi_4 = rax_17;\n                            while (rcx_11 != 0)\n                            {\n                                char temp24_1 = *rsi_4;\n                                char temp25_1 = *rdi_25;\n                                c_3 = temp24_1 < temp25_1;\n                                z_3 = temp24_1 == temp25_1;\n                                rsi_4 = &rsi_4[1];\n                                rdi_25 = (rdi_25 + 1);\n                                rcx_11 = (rcx_11 - 1);\n                                if ((!z_3))\n                                {\n                                    break;\n                                }\n                            }\n                            rax_21 = ((!z_3) && (!c_3));\n                            rax_21 = (rax_21 - 0);\n                            bool c_4 = false;\n                            bool z_4 = (rax_21 & rax_21) == 0;\n                            if ((!z_4))\n                            {\n                                void* const rdi_26 = \"debugfs\";\n                                int64_t rcx_12 = 8;\n                                char* rsi_5 = rax_17;\n                                while (rcx_12 != 0)\n                                {\n                                    char temp32_1 = *rsi_5;\n                                    char temp33_1 = *rdi_26;\n                                    c_4 = temp32_1 < temp33_1;\n                                    z_4 = temp32_1 == temp33_1;\n                                    rsi_5 = &rsi_5[1];\n                                    rdi_26 = (rdi_26 + 1);\n                                    rcx_12 = (rcx_12 - 1);\n                                    if ((!z_4))\n                                    {\n                                        break;\n                                    }\n                                }\n                                rax_21 = ((!z_4) && (!c_4));\n                                rax_21 = (rax_21 - 0);\n                                bool c_5 = false;\n                                bool z_5 = (rax_21 & rax_21) == 0;\n                                if ((!z_5))\n                                {\n                                    void* const rdi_27 = \"devpts\";\n                                    int64_t rcx_13 = 7;\n                                    char* rsi_6 = rax_17;\n                                    while (rcx_13 != 0)\n                                    {\n                                        char temp36_1 = *rsi_6;\n                                        char temp37_1 = *rdi_27;\n                                        c_5 = temp36_1 < temp37_1;\n                                        z_5 = temp36_1 == temp37_1;\n                                        rsi_6 = &rsi_6[1];\n                                        rdi_27 = (rdi_27 + 1);\n                                        rcx_13 = (rcx_13 - 1);\n                                        if ((!z_5))\n                                        {\n                                            break;\n                                        }\n                                    }\n                                    rax_21 = ((!z_5) && (!c_5));\n                                    rax_21 = (rax_21 - 0);\n                                    bool c_6 = false;\n                                    bool z_6 = (rax_21 & rax_21) == 0;\n                                    if ((!z_6))\n                                    {\n                                        void* const rdi_28 = \"fusectl\";\n                                        int64_t rcx_14 = 8;\n                                        char* rsi_7 = rax_17;\n                                        while (rcx_14 != 0)\n                                        {\n                                            char temp40_1 = *rsi_7;\n                                            char temp41_1 = *rdi_28;\n                                            c_6 = temp40_1 < temp41_1;\n                                            z_6 = temp40_1 == temp41_1;\n                                            rsi_7 = &rsi_7[1];\n                                            rdi_28 = (rdi_28 + 1);\n                                            rcx_14 = (rcx_14 - 1);\n                                            if ((!z_6))\n                                            {\n                                                break;\n                                            }\n                                        }\n                                        rax_21 = ((!z_6) && (!c_6));\n                                        rax_21 = (rax_21 - 0);\n                                        bool c_7 = false;\n                                        bool z_7 = (rax_21 & rax_21) == 0;\n                                        if ((!z_7))\n                                        {\n                                            void* const rdi_29 = \"mqueue\";\n                                            int64_t rcx_15 = 7;\n                                            char* rsi_8 = rax_17;\n                                            while (rcx_15 != 0)\n                                            {\n                                                char temp44_1 = *rsi_8;\n                                                char temp45_1 = *rdi_29;\n                                                c_7 = temp44_1 < temp45_1;\n                                                z_7 = temp44_1 == temp45_1;\n                                                rsi_8 = &rsi_8[1];\n                                                rdi_29 = (rdi_29 + 1);\n                                                rcx_15 = (rcx_15 - 1);\n                                                if ((!z_7))\n                                                {\n                                                    break;\n                                                }\n                                            }\n                                            rax_21 = ((!z_7) && (!c_7));\n                                            rax_21 = (rax_21 - 0);\n                                            bool c_8 = false;\n                                            bool z_8 = (rax_21 & rax_21) == 0;\n                                            if ((!z_8))\n                                            {\n                                                void* const rdi_30 = \"rpc_pipefs\";\n                                                int64_t rcx_16 = 0xb;\n                                                char* rsi_9 = rax_17;\n                                                while (rcx_16 != 0)\n                                                {\n                                                    char temp48_1 = *rsi_9;\n                                                    char temp49_1 = *rdi_30;\n                                                    c_8 = temp48_1 < temp49_1;\n                                                    z_8 = temp48_1 == temp49_1;\n                                                    rsi_9 = &rsi_9[1];\n                                                    rdi_30 = (rdi_30 + 1);\n                                                    rcx_16 = (rcx_16 - 1);\n                                                    if ((!z_8))\n                                                    {\n                                                        break;\n                                                    }\n                                                }\n                                                rax_21 = ((!z_8) && (!c_8));\n                                                rax_21 = (rax_21 - 0);\n                                                bool c_9 = false;\n                                                bool z_9 = (rax_21 & rax_21) == 0;\n                                                if ((!z_9))\n                                                {\n                                                    void* const rdi_31 = \"sysfs\";\n                                                    int64_t rcx_17 = 6;\n                                                    char* rsi_10 = rax_17;\n                                                    while (rcx_17 != 0)\n                                                    {\n                                                        char temp52_1 = *rsi_10;\n                                                        char temp53_1 = *rdi_31;\n                                                        c_9 = temp52_1 < temp53_1;\n                                                        z_9 = temp52_1 == temp53_1;\n                                                        rsi_10 = &rsi_10[1];\n                                                        rdi_31 = (rdi_31 + 1);\n                                                        rcx_17 = (rcx_17 - 1);\n                                                        if ((!z_9))\n                                                        {\n                                                            break;\n                                                        }\n                                                    }\n                                                    rax_21 = ((!z_9) && (!c_9));\n                                                    rax_21 = (rax_21 - 0);\n                                                    bool c_10 = false;\n                                                    bool z_10 = (rax_21 & rax_21) == 0;\n                                                    if ((!z_10))\n                                                    {\n                                                        void* const rdi_32 = \"devfs\";\n                                                        int64_t rcx_18 = 6;\n                                                        char* rsi_11 = rax_17;\n                                                        while (rcx_18 != 0)\n                                                        {\n                                                            char temp56_1 = *rsi_11;\n                                                            char temp57_1 = *rdi_32;\n                                                            c_10 = temp56_1 < temp57_1;\n                                                            z_10 = temp56_1 == temp57_1;\n                                                            rsi_11 = &rsi_11[1];\n                                                            rdi_32 = (rdi_32 + 1);\n                                                            rcx_18 = (rcx_18 - 1);\n                                                            if ((!z_10))\n                                                            {\n                                                                break;\n                                                            }\n                                                        }\n                                                        rax_21 = ((!z_10) && (!c_10));\n                                                        rax_21 = (rax_21 - 0);\n                                                        bool c_11 = false;\n                                                        bool z_11 = (rax_21 & rax_21) == 0;\n                                                        if ((!z_11))\n                                                        {\n                                                            void* const rdi_33 = \"kernfs\";\n                                                            int64_t rcx_19 = 7;\n                                                            char* rsi_12 = rax_17;\n                                                            while (rcx_19 != 0)\n                                                            {\n                                                                char temp60_1 = *rsi_12;\n                                                                char temp61_1 = *rdi_33;\n                                                                c_11 = temp60_1 < temp61_1;\n                                                                z_11 = temp60_1 == temp61_1;\n                                                                rsi_12 = &rsi_12[1];\n                                                                rdi_33 = (rdi_33 + 1);\n                                                                rcx_19 = (rcx_19 - 1);\n                                                                if ((!z_11))\n                                                                {\n                                                                    break;\n                                                                }\n                                                            }\n                                                            rax_21 = ((!z_11) && (!c_11));\n                                                            rax_21 = (rax_21 - 0);\n                                                            if ((rax_21 != 0 && strcmp(rax_17, \"ignore\") != 0))\n                                                            {\n                                                                r13_1 = strcmp(rax_17, \"none\") == 0;\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    char* r13_2 = *rax_13;\n                    rax_13[5] = ((rax_13[5] & 0xfe) | r13_1);\n                    bool rdx_11 = true;\n                    if (strchr(r13_2, 0x3a) == 0)\n                    {\n                        char temp10_1 = *r13_2;\n                        bool c_12 = temp10_1 < 0x2f;\n                        bool z_12 = temp10_1 == 0x2f;\n                        char* rax_25;\n                        if (z_12)\n                        {\n                            char temp13_1 = r13_2[1];\n                            c_12 = temp13_1 < 0x2f;\n                            z_12 = temp13_1 == 0x2f;\n                            if ((!z_12))\n                            {\n                                goto label_40ca7b;\n                            }\n                            void* const rdi_60 = \"smbfs\";\n                            int64_t rcx_33 = 6;\n                            char* rsi_26 = rax_17;\n                            while (rcx_33 != 0)\n                            {\n                                char temp22_1 = *rsi_26;\n                                char temp23_1 = *rdi_60;\n                                c_12 = temp22_1 < temp23_1;\n                                z_12 = temp22_1 == temp23_1;\n                                rsi_26 = &rsi_26[1];\n                                rdi_60 = (rdi_60 + 1);\n                                rcx_33 = (rcx_33 - 1);\n                                if ((!z_12))\n                                {\n                                    break;\n                                }\n                            }\n                            rax_25 = ((!z_12) && (!c_12));\n                            rax_25 = (rax_25 - 0);\n                            bool c_25 = false;\n                            bool z_25 = (rax_25 & rax_25) == 0;\n                            if ((!z_25))\n                            {\n                                void* const rdi_61 = \"cifs\";\n                                int64_t rcx_34 = 5;\n                                char* rsi_27 = rax_17;\n                                while (rcx_34 != 0)\n                                {\n                                    char temp30_1 = *rsi_27;\n                                    char temp31_1 = *rdi_61;\n                                    c_25 = temp30_1 < temp31_1;\n                                    z_25 = temp30_1 == temp31_1;\n                                    rsi_27 = &rsi_27[1];\n                                    rdi_61 = (rdi_61 + 1);\n                                    rcx_34 = (rcx_34 - 1);\n                                    if ((!z_25))\n                                    {\n                                        break;\n                                    }\n                                }\n                                rax_25 = ((!z_25) && (!c_25));\n                                rax_25 = (rax_25 - 0);\n                                c_12 = false;\n                                z_12 = (rax_25 & rax_25) == 0;\n                                if ((!z_12))\n                                {\n                                    goto label_40ca7b;\n                                }\n                            }\n                        }\n                        else\n                        {\n                        label_40ca7b:\n                            void* const rsi_13 = \"-hosts\";\n                            int64_t rcx_20 = 7;\n                            char* rdi_36 = r13_2;\n                            while (rcx_20 != 0)\n                            {\n                                char temp20_1 = *rsi_13;\n                                char temp21_1 = *rdi_36;\n                                c_12 = temp20_1 < temp21_1;\n                                z_12 = temp20_1 == temp21_1;\n                                rsi_13 = (rsi_13 + 1);\n                                rdi_36 = &rdi_36[1];\n                                rcx_20 = (rcx_20 - 1);\n                                if ((!z_12))\n                                {\n                                    break;\n                                }\n                            }\n                            rax_25 = ((!z_12) && (!c_12));\n                            rax_25 = (rax_25 - 0);\n                            rdx_11 = rax_25 == 0;\n                        }\n                    }\n                    rax_13[5] = ((rax_13[5] & 0xfd) | (rdx_11 + rdx_11));\n                    *r12_1 = rax_13;\n                    r12_1 = &rax_13[6];\n                }\n            }\n        }\n        free(var_48);\n        if ((rax->_flags & 0x20) == 0)\n        {\n            rax_29 = sub_40e240(rax);\n        }\n    }\n    if ((((rax == 0 && rax_33 != 0) && rax_50 != 0) || ((rax != 0 && (rax->_flags & 0x20) == 0) && rax_29 != 0xffffffff)))\n    {\n        *r12_1 = 0;\n        rax_30 = var_50;\n        goto label_40c938;\n    }\n    int32_t* r13_4;\n    int32_t r14;\n    if ((((rax == 0 && rax_33 != 0) && rax_50 == 0) || ((rax != 0 && (rax->_flags & 0x20) == 0) && rax_29 == 0xffffffff)))\n    {\n        int32_t* rax_51 = __errno_location();\n        r14 = *rax_51;\n        r13_4 = rax_51;\n        goto label_40cd03;\n    }\n    if ((rax != 0 && (rax->_flags & 0x20) != 0))\n    {\n        int32_t* rax_53 = __errno_location();\n        r14 = *rax_53;\n        r13_4 = rax_53;\n        sub_40e240(rax);\n        *r13_4 = r14;\n    label_40cd03:\n        *r12_1 = 0;\n        int64_t* rdi_58 = var_50;\n        if (rdi_58 != 0)\n        {\n            int64_t* rbx_3;\n            do\n            {\n                rbx_3 = rdi_58[6];\n                sub_40c620(rdi_58);\n                var_50 = rbx_3;\n                rdi_58 = rbx_3;\n            } while (rbx_3 != 0);\n        }\n        *r13_4 = r14;\n        return 0;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_40ce30",
            "funcStartAddr": "0x40ce30",
            "funcEndAddr": "0x40cf5e",
            "decompiledFuncCode": "int64_t sub_40ce30(char* arg1, int64_t arg2, int64_t* arg3)\n{\n    int64_t r11 = 1;\n    int64_t r8 = 1;\n    int64_t r9 = 0;\n    int64_t rax = -1;\n    while (true)\n    {\n        int64_t rcx_1 = (r8 + r9);\n        if (rcx_1 >= arg2)\n        {\n            break;\n        }\n        char rbx_1;\n        char temp0_1;\n        bool cond:0_1;\n        do\n        {\n            rbx_1 = arg1[(rax + r8)];\n            temp0_1 = arg1[rcx_1];\n            cond:0_1 = temp0_1 == rbx_1;\n            if (temp0_1 >= rbx_1)\n            {\n                break;\n            }\n            r9 = rcx_1;\n            r8 = 1;\n            int64_t r11_1 = rcx_1;\n            rcx_1 = (1 + r9);\n            r11 = (r11_1 - rax);\n        } while (rcx_1 < arg2);\n        if (temp0_1 < rbx_1)\n        {\n            break;\n        }\n        if ((!cond:0_1))\n        {\n            rax = r9;\n            r11 = 1;\n            r9 = (r9 + 1);\n            r8 = 1;\n        }\n        else if (r8 == r11)\n        {\n            r9 = rcx_1;\n            r8 = 1;\n        }\n        else\n        {\n            r8 = (r8 + 1);\n        }\n    }\n    *arg3 = r11;\n    int64_t rbx_2 = 1;\n    int64_t r8_1 = 1;\n    int64_t r9_1 = 0;\n    int64_t r10_2 = -1;\n    while (true)\n    {\n        int64_t rcx_2 = (r8_1 + r9_1);\n        if (arg2 <= rcx_2)\n        {\n            break;\n        }\n        char r11_3;\n        char temp1_1;\n        bool cond:1_1;\n        do\n        {\n            r11_3 = arg1[(r10_2 + r8_1)];\n            temp1_1 = arg1[rcx_2];\n            cond:1_1 = temp1_1 == r11_3;\n            if (temp1_1 <= r11_3)\n            {\n                break;\n            }\n            r9_1 = rcx_2;\n            r8_1 = 1;\n            int64_t rbx_3 = rcx_2;\n            rcx_2 = (1 + r9_1);\n            rbx_2 = (rbx_3 - r10_2);\n        } while (arg2 > rcx_2);\n        if (temp1_1 > r11_3)\n        {\n            break;\n        }\n        if ((!cond:1_1))\n        {\n            r10_2 = r9_1;\n            rbx_2 = 1;\n            r9_1 = (r9_1 + 1);\n            r8_1 = 1;\n        }\n        else if (r8_1 == rbx_2)\n        {\n            r9_1 = rcx_2;\n            r8_1 = 1;\n        }\n        else\n        {\n            r8_1 = (r8_1 + 1);\n        }\n    }\n    int64_t r10_3 = (r10_2 + 1);\n    int64_t rax_1 = (rax + 1);\n    if (r10_3 >= rax_1)\n    {\n        *arg3 = rbx_2;\n        rax_1 = r10_3;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40cf60",
            "funcStartAddr": "0x40cf60",
            "funcEndAddr": "0x40d2a9",
            "decompiledFuncCode": "void* sub_40cf60(void* arg1, void* arg2, char* arg3, void* arg4)\n{\n    void* rbp = arg2;\n    void* var_868;\n    void* var_840;\n    uint64_t r13;\n    if (arg4 <= 2)\n    {\n        var_840 = 1;\n        r13 = (arg4 - 1);\n        var_868 = 1;\n    }\n    else\n    {\n        r13 = sub_40ce30(arg3, arg4, &var_840);\n        var_868 = var_840;\n    }\n    void var_838;\n    void* rax_3 = &var_838;\n    void var_38;\n    do\n    {\n        *rax_3 = arg4;\n        rax_3 = (rax_3 + 8);\n    } while (&var_38 != rax_3);\n    void* rsi_1 = (arg3 + var_868);\n    int32_t rax_6;\n    int32_t rax_15;\n    void* rax_16;\n    void* r10_1;\n    if (arg4 == 0)\n    {\n        rax_15 = memcmp(arg3, rsi_1, r13);\n        if (rax_15 == 0)\n        {\n        label_40d12d:\n            rax_16 = nullptr;\n        }\n    }\n    else\n    {\n        r10_1 = (arg4 - 1);\n        void* r9_1 = (arg4 + arg3);\n        char* rax_5 = arg3;\n        void* rdi_1 = (arg3 + r10_1);\n        do\n        {\n            uint64_t rdx_1 = *rax_5;\n            int64_t rcx_1 = (rdi_1 - rax_5);\n            rax_5 = &rax_5[1];\n            *(&var_838 + (rdx_1 << 3)) = rcx_1;\n        } while (r9_1 != rax_5);\n        rax_6 = memcmp(arg3, rsi_1, r13);\n    }\n    if (((arg4 == 0 && rax_15 != 0) || (arg4 != 0 && rax_6 != 0)))\n    {\n        void* r14_1 = (arg4 - 1);\n        void* rax_8 = (arg4 - r13);\n        if (rax_8 < r13)\n        {\n            rax_8 = r13;\n        }\n        void* r9_2 = nullptr;\n        void* rax_9 = (rax_8 + 1);\n        var_840 = rax_9;\n        int64_t rax_10 = (1 - r13);\n        void* rcx_2;\n        void* rdx_5;\n        while (true)\n        {\n            rcx_2 = (r9_2 + arg4);\n            char* rax_12 = sub_40c480((arg1 + rbp), 0, (rcx_2 - rbp));\n            if (rcx_2 == 0)\n            {\n                break;\n            }\n            void* r9_3 = r9_2;\n            if (rax_12 != 0)\n            {\n                break;\n            }\n            uint64_t rax_11 = *(&var_838 + (*((arg1 + rcx_2) - 1) << 3));\n            if (rax_11 == 0)\n            {\n                rdx_5 = (arg1 + r9_3);\n                if (r13 < r14_1)\n                {\n                    rax_11 = r13;\n                    if (*(rdx_5 + r13) == arg3[r13])\n                    {\n                        do\n                        {\n                            rax_11 = (rax_11 + 1);\n                            if (rax_11 >= r14_1)\n                            {\n                                break;\n                            }\n                        } while (arg3[rax_11] == *(rdx_5 + rax_11));\n                    }\n                    if ((*(rdx_5 + r13) != arg3[r13] || (*(rdx_5 + r13) == arg3[r13] && rax_11 < r14_1)))\n                    {\n                        r9_3 = (r9_3 + rax_10);\n                    }\n                }\n                if ((r13 >= r14_1 || ((r13 < r14_1 && *(rdx_5 + r13) == arg3[r13]) && rax_11 >= r14_1)))\n                {\n                    int64_t rax_14 = (r13 - 1);\n                    if (rax_14 == -1)\n                    {\n                        break;\n                    }\n                    if (*(rdx_5 + rax_14) == arg3[(r13 - 1)])\n                    {\n                        do\n                        {\n                            rax_14 = (rax_14 - 1);\n                            if (rax_14 == -1)\n                            {\n                                break;\n                            }\n                        } while (arg3[rax_14] == *(rdx_5 + rax_14));\n                        if (rax_14 == -1)\n                        {\n                            break;\n                        }\n                    }\n                    r9_2 = (r9_3 + rax_9);\n                }\n            }\n            if ((((rax_11 == 0 && r13 < r14_1) && (*(rdx_5 + r13) != arg3[r13] || (*(rdx_5 + r13) == arg3[r13] && rax_11 < r14_1))) || rax_11 != 0))\n            {\n                r9_2 = (r9_3 + rax_11);\n            }\n            rbp = rcx_2;\n        }\n        if (rcx_2 == 0)\n        {\n            goto label_40d12d;\n        }\n        rax_16 = rdx_5;\n    }\n    if ((arg4 != 0 && rax_6 == 0))\n    {\n        uint64_t rax_17 = (r13 - 1);\n        void* r11_1 = nullptr;\n        void* r14_2 = nullptr;\n        void* rax_19 = (arg4 - var_868);\n        void* rax_20 = (1 - r13);\n        char* rax_22;\n        while (true)\n        {\n            void* r9_4 = (r14_2 + arg4);\n            rax_22 = sub_40c480((arg1 + rbp), 0, (r9_4 - rbp));\n            if (rax_22 != 0)\n            {\n                break;\n            }\n            if (r9_4 == 0)\n            {\n                break;\n            }\n            void* rax_21 = *(&var_838 + (*((arg1 + r9_4) - 1) << 3));\n            if (rax_21 != 0)\n            {\n                if ((rax_21 < var_868 && r11_1 != 0))\n                {\n                    rax_21 = rax_19;\n                }\n                r14_2 = (r14_2 + rax_21);\n                r11_1 = nullptr;\n            }\n            else\n            {\n                void* rax_24 = r13;\n                if (r11_1 >= r13)\n                {\n                    rax_24 = r11_1;\n                }\n                char* rdx_9;\n                if (rax_24 < r10_1)\n                {\n                    rdx_9 = (arg1 + r14_2);\n                    while (*(arg3 + rax_24) == *(rdx_9 + rax_24))\n                    {\n                        rax_24 = (rax_24 + 1);\n                        if (rax_24 == r10_1)\n                        {\n                            break;\n                        }\n                    }\n                    if (*(arg3 + rax_24) != *(rdx_9 + rax_24))\n                    {\n                        r11_1 = nullptr;\n                        r14_2 = (rax_24 + (rax_20 + r14_2));\n                    }\n                }\n                if ((rax_24 >= r10_1 || (rax_24 < r10_1 && *(arg3 + rax_24) == *(rdx_9 + rax_24))))\n                {\n                    uint64_t rax_25 = rax_17;\n                    int64_t rdx_10;\n                    if (r11_1 < r13)\n                    {\n                        rdx_10 = (arg1 + r14_2);\n                        if (*(rdx_10 + rax_17) == arg3[rax_17])\n                        {\n                            while (true)\n                            {\n                                uint64_t rsi_6 = (rax_25 - 1);\n                                if (r11_1 == rax_25)\n                                {\n                                    break;\n                                }\n                                if (arg3[(rax_25 - 1)] != *((rax_25 + rdx_10) - 1))\n                                {\n                                    break;\n                                }\n                                rax_25 = rsi_6;\n                            }\n                        }\n                    }\n                    if ((r11_1 >= r13 || (r11_1 < r13 && *(rdx_10 + rax_17) != arg3[rax_17])))\n                    {\n                        rax_25 = r13;\n                    }\n                    if ((r11_1 + 1) > rax_25)\n                    {\n                        break;\n                    }\n                    r14_2 = (r14_2 + var_868);\n                    r11_1 = rax_19;\n                }\n            }\n            rbp = r9_4;\n        }\n        if (rax_22 != 0)\n        {\n            goto label_40d12d;\n        }\n        rax_16 = (arg1 + r14_2);\n    }\n    return rax_16;\n}\n\n"
        },
        {
            "funcName": "sub_40d2b0",
            "funcStartAddr": "0x40d2b0",
            "funcEndAddr": "0x40d644",
            "decompiledFuncCode": "char* sub_40d2b0(char* arg1, char* arg2)\n{\n    uint32_t rax = *arg1;\n    char r9 = *arg2;\n    char* r12_1;\n    if (rax == 0)\n    {\n        r12_1 = nullptr;\n        if (r9 == 0)\n        {\n            r12_1 = arg1;\n        }\n    }\n    else if (r9 == 0)\n    {\n        r12_1 = arg1;\n    }\n    else\n    {\n        char* rbx_1 = arg2;\n        char* rdx_1 = arg1;\n        char rcx_1 = r9;\n        int32_t r8_1 = 1;\n        while (true)\n        {\n            rdx_1 = &rdx_1[1];\n            rbx_1 = &rbx_1[1];\n            rax = rcx_1 == rax;\n            rcx_1 = *rbx_1;\n            r8_1 = (r8_1 & rax);\n            rax = *rdx_1;\n            if ((rax != 0 && rcx_1 != 0))\n            {\n                continue;\n            }\n            if (rax == 0)\n            {\n                r12_1 = nullptr;\n                if (rcx_1 != 0)\n                {\n                    break;\n                }\n            }\n            r12_1 = arg1;\n            if (r8_1 == 0)\n            {\n                void* rbp_2 = (rbx_1 - arg2);\n                char* rax_1 = strchr(&arg1[1], r9);\n                r12_1 = rax_1;\n                if ((rax_1 != 0 && rbp_2 != 1))\n                {\n                    int64_t rax_2 = (arg1 + rbp_2);\n                    char* rbx_2 = (rbx_1 - rbp_2);\n                    void* r8_3 = (rax_2 - r12_1);\n                    if (rax_2 < r12_1)\n                    {\n                        r8_3 = 1;\n                    }\n                    if (rbp_2 > 0x1f)\n                    {\n                        r12_1 = sub_40cf60(r12_1, r8_3, rbx_2, rbp_2);\n                    }\n                    else\n                    {\n                        void* var_60_1;\n                        void* var_40;\n                        uint64_t r15_1;\n                        if (rbp_2 <= 2)\n                        {\n                            var_40 = 1;\n                            r15_1 = (rbp_2 - 1);\n                            var_60_1 = 1;\n                        }\n                        else\n                        {\n                            r15_1 = sub_40ce30(rbx_2, rbp_2, &var_40);\n                            var_60_1 = var_40;\n                        }\n                        int32_t rax_8 = memcmp(rbx_2, (rbx_2 + var_60_1), r15_1);\n                        void* r8_4 = r8_3;\n                        void* r11_1;\n                        void* r13_3;\n                        void* r14_1;\n                        if (rax_8 != 0)\n                        {\n                            void* rax_17 = (rbp_2 - r15_1);\n                            if (rax_17 < r15_1)\n                            {\n                                rax_17 = r15_1;\n                            }\n                            void* r14_2 = nullptr;\n                            void* rax_18 = (rax_17 + 1);\n                            var_40 = rax_18;\n                            void* rax_19 = &r12_1[r15_1];\n                            void* rax_20 = (1 - r15_1);\n                            char* rdx_12;\n                            while (true)\n                            {\n                                r13_3 = (rbp_2 + r14_2);\n                                char* rax_21 = sub_40c480((r12_1 + r8_4), 0, (r13_3 - r8_4));\n                                if (r13_3 == 0)\n                                {\n                                    break;\n                                }\n                                if (rax_21 != 0)\n                                {\n                                    break;\n                                }\n                                rdx_12 = (r12_1 + r14_2);\n                                uint64_t rax_22;\n                                if (rbp_2 > r15_1)\n                                {\n                                    rax_22 = r15_1;\n                                    rdx_12 = (r12_1 + r14_2);\n                                    if (*(rax_19 + r14_2) == rbx_2[r15_1])\n                                    {\n                                        do\n                                        {\n                                            rax_22 = (rax_22 + 1);\n                                            if (rbp_2 <= rax_22)\n                                            {\n                                                break;\n                                            }\n                                        } while (rbx_2[rax_22] == rdx_12[rax_22]);\n                                    }\n                                    if ((*(rax_19 + r14_2) != rbx_2[r15_1] || (*(rax_19 + r14_2) == rbx_2[r15_1] && rbp_2 > rax_22)))\n                                    {\n                                        r14_2 = (rax_22 + (rax_20 + r14_2));\n                                    }\n                                }\n                                if ((rbp_2 <= r15_1 || ((rbp_2 > r15_1 && *(rax_19 + r14_2) == rbx_2[r15_1]) && rbp_2 <= rax_22)))\n                                {\n                                    int64_t rax_23 = (r15_1 - 1);\n                                    if (rax_23 == -1)\n                                    {\n                                        break;\n                                    }\n                                    if (rdx_12[rax_23] == rbx_2[(r15_1 - 1)])\n                                    {\n                                        do\n                                        {\n                                            rax_23 = (rax_23 - 1);\n                                            if (rax_23 == -1)\n                                            {\n                                                break;\n                                            }\n                                        } while (rbx_2[rax_23] == rdx_12[rax_23]);\n                                        if (rax_23 == -1)\n                                        {\n                                            break;\n                                        }\n                                    }\n                                    r14_2 = (r14_2 + rax_18);\n                                }\n                                r8_4 = r13_3;\n                            }\n                            if (r13_3 != 0)\n                            {\n                                r12_1 = rdx_12;\n                            }\n                        }\n                        else\n                        {\n                            uint64_t rax_9 = (r15_1 - 1);\n                            void* r13_2 = nullptr;\n                            r14_1 = nullptr;\n                            void* rax_11 = (rbp_2 - var_60_1);\n                            void* rax_12 = (1 - r15_1);\n                            while (true)\n                            {\n                                r11_1 = (rbp_2 + r14_1);\n                                char* rax_13 = sub_40c480((r12_1 + r8_4), 0, (r11_1 - r8_4));\n                                if (r11_1 == 0)\n                                {\n                                    break;\n                                }\n                                if (rax_13 != 0)\n                                {\n                                    break;\n                                }\n                                void* rax_14 = r13_2;\n                                if (r15_1 >= r13_2)\n                                {\n                                    rax_14 = r15_1;\n                                }\n                                if ((rbp_2 > rax_14 && *((r12_1 + rax_14) + r14_1) == *(rbx_2 + rax_14)))\n                                {\n                                    void* rdx_8 = (r12_1 + r14_1);\n                                    do\n                                    {\n                                        rax_14 = (rax_14 + 1);\n                                        if (rbp_2 == rax_14)\n                                        {\n                                            break;\n                                        }\n                                    } while (*(rbx_2 + rax_14) == *(rdx_8 + rax_14));\n                                }\n                                if ((rbp_2 <= rax_14 || ((rbp_2 > rax_14 && *((r12_1 + rax_14) + r14_1) == *(rbx_2 + rax_14)) && rbp_2 == rax_14)))\n                                {\n                                    uint64_t rax_15 = rax_9;\n                                    int64_t rsi_5;\n                                    if (r15_1 > r13_2)\n                                    {\n                                        rsi_5 = (r12_1 + r14_1);\n                                        if (rbx_2[rax_9] == *(rsi_5 + rax_9))\n                                        {\n                                            while (true)\n                                            {\n                                                uint64_t rdx_9 = (rax_15 - 1);\n                                                if (r13_2 == rax_15)\n                                                {\n                                                    break;\n                                                }\n                                                if (rbx_2[(rax_15 - 1)] != *((rax_15 + rsi_5) - 1))\n                                                {\n                                                    break;\n                                                }\n                                                rax_15 = rdx_9;\n                                            }\n                                        }\n                                    }\n                                    if ((r15_1 <= r13_2 || (r15_1 > r13_2 && rbx_2[rax_9] != *(rsi_5 + rax_9))))\n                                    {\n                                        rax_15 = r15_1;\n                                    }\n                                    if ((r13_2 + 1) > rax_15)\n                                    {\n                                        break;\n                                    }\n                                    r13_2 = rax_11;\n                                    r14_1 = (r14_1 + var_60_1);\n                                }\n                                if ((rbp_2 > rax_14 && (*((r12_1 + rax_14) + r14_1) != *(rbx_2 + rax_14) || (*((r12_1 + rax_14) + r14_1) == *(rbx_2 + rax_14) && rbp_2 != rax_14))))\n                                {\n                                    r13_2 = nullptr;\n                                    r14_1 = (rax_14 + (rax_12 + r14_1));\n                                }\n                                r8_4 = r11_1;\n                            }\n                        }\n                        if (((rax_8 != 0 && r13_3 == 0) || (rax_8 == 0 && r11_1 == 0)))\n                        {\n                            r12_1 = nullptr;\n                        }\n                        if ((rax_8 == 0 && r11_1 != 0))\n                        {\n                            r12_1 = (r12_1 + r14_1);\n                        }\n                    }\n                }\n            }\n            break;\n        }\n    }\n    return r12_1;\n}\n\n"
        },
        {
            "funcName": "sub_40d650",
            "funcStartAddr": "0x40d650",
            "funcEndAddr": "0x40d6a9",
            "decompiledFuncCode": "uint64_t sub_40d650(int64_t* arg1, char* arg2, int64_t arg3)\n{\n    int64_t var_10;\n    int64_t rax;\n    uint16_t x87control;\n    int80_t st0;\n    st0 = sub_40e360(nullptr, &var_10, arg2, arg3, x87control);\n    uint64_t rax_1;\n    if (rax == 0)\n    {\n        rax_1 = 0xffffffff;\n    }\n    else\n    {\n        int64_t rdx_1 = var_10;\n        if (rdx_1 > 0x7fffffff)\n        {\n            free(rax);\n            *__errno_location() = 0x4b;\n            rax_1 = 0xffffffff;\n        }\n        else\n        {\n            *arg1 = rax;\n            rax_1 = rdx_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40d6b0",
            "funcStartAddr": "0x40d6b0",
            "funcEndAddr": "0x40d79f",
            "decompiledFuncCode": "char* sub_40d6b0(int64_t arg1, int64_t arg2)\n{\n    size_t rbx = (arg2 + 1);\n    if (arg2 >= 0x401)\n    {\n        rbx = 0x401;\n    }\n    char* rbp_1;\n    while (true)\n    {\n        char* rax_1 = malloc(rbx);\n        rbp_1 = rax_1;\n        if (rax_1 == 0)\n        {\n            break;\n        }\n        while (true)\n        {\n            int64_t rax_2 = readlink(arg1, rax_1, rbx);\n            if ((rax_2 < 0 && *__errno_location() != 0x22))\n            {\n                free(rbp_1);\n                return nullptr;\n            }\n            if (rbx > rax_2)\n            {\n                rbp_1[rax_2] = 0;\n                return rbp_1;\n            }\n            free(rbp_1);\n            if (rbx > 0x3fffffffffffffff)\n            {\n                break;\n            }\n            rbx = (rbx + rbx);\n            rax_1 = malloc(rbx);\n            rbp_1 = rax_1;\n            if (rax_1 == 0)\n            {\n                return rbp_1;\n            }\n        }\n        if (rbx > 0x7ffffffffffffffe)\n        {\n            rbp_1 = nullptr;\n            *__errno_location() = 0xc;\n            break;\n        }\n        rbx = 0x7fffffffffffffff;\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_40d7a0",
            "funcStartAddr": "0x40d7a0",
            "funcEndAddr": "0x40d7aa",
            "decompiledFuncCode": "int64_t sub_40d7a0() __noreturn\n{\n    /* tailcall */\n    return sub_404930(1);\n}\n\n"
        },
        {
            "funcName": "sub_40d7b0",
            "funcStartAddr": "0x40d7b0",
            "funcEndAddr": "0x40d8c6",
            "decompiledFuncCode": "int64_t sub_40d7b0(char* arg1, int64_t* arg2, int64_t arg3, uint64_t arg4)\n{\n    int64_t rbp = arg3;\n    uint64_t rax = strlen(arg1);\n    char* r14 = *arg2;\n    int64_t var_58 = -1;\n    if (r14 != 0)\n    {\n        char var_41_1 = 0;\n        int64_t rbx_1 = 0;\n        while (true)\n        {\n            if (strncmp(r14, arg1, rax) == 0)\n            {\n                if (strlen(r14) == rax)\n                {\n                    var_58 = rbx_1;\n                    break;\n                }\n                if (var_58 == -1)\n                {\n                    var_58 = rbx_1;\n                    rbx_1 = (rbx_1 + 1);\n                    rbp = (rbp + arg4);\n                    r14 = arg2[rbx_1];\n                    if (r14 != 0)\n                    {\n                        continue;\n                    }\n                    goto label_40d88d;\n                }\n                if (arg3 == 0)\n                {\n                    var_41_1 = 1;\n                }\n                else\n                {\n                    char rax_3 = var_41_1;\n                    if (memcmp(((var_58 * arg4) + arg3), rbp, arg4) != 0)\n                    {\n                        rax_3 = 1;\n                    }\n                    var_41_1 = rax_3;\n                }\n            }\n            rbx_1 = (rbx_1 + 1);\n            rbp = (rbp + arg4);\n            r14 = arg2[rbx_1];\n            if (r14 == 0)\n            {\n            label_40d88d:\n                int64_t rax_6 = -2;\n                if (var_41_1 == 0)\n                {\n                    rax_6 = var_58;\n                }\n                var_58 = rax_6;\n                break;\n            }\n        }\n    }\n    return var_58;\n}\n\n"
        },
        {
            "funcName": "sub_40d8d0",
            "funcStartAddr": "0x40d8d0",
            "funcEndAddr": "0x40d941",
            "decompiledFuncCode": "int64_t sub_40d8d0(uint64_t arg1, uint64_t arg2, int64_t arg3)\n{\n    char* rbx;\n    if (arg3 == -1)\n    {\n        rbx = dcgettext(nullptr, \"invalid argument %s for %s\", 5);\n    }\n    else\n    {\n        rbx = dcgettext(nullptr, \"ambiguous argument %s for %s\", 5);\n    }\n    /* tailcall */\n    return error(0, 0, rbx, sub_409ab0(0, 8, arg2), sub_409dc0(1, arg1));\n}\n\n"
        },
        {
            "funcName": "sub_40d950",
            "funcStartAddr": "0x40d950",
            "funcEndAddr": "0x40da68",
            "decompiledFuncCode": "char* sub_40d950(int64_t* arg1, int64_t arg2, uint64_t arg3)\n{\n    int64_t r14 = 0;\n    int64_t rbp = arg2;\n    int64_t rbx = 0;\n    fputs_unlocked(dcgettext(nullptr, \"Valid arguments are:\", 5), stderr);\n    uint64_t r12 = *arg1;\n    if (r12 != 0)\n    {\n        do\n        {\n            if ((rbx != 0 && memcmp(r14, rbp, arg3) == 0))\n            {\n                rbx = (rbx + 1);\n                rbp = (rbp + arg3);\n                __fprintf_chk(stderr, 1, \", %s\", sub_409de0(r12));\n                r12 = arg1[rbx];\n                if (r12 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = (rbx + 1);\n            r14 = rbp;\n            rbp = (rbp + arg3);\n            __fprintf_chk(stderr, 1, \"\\n  - %s\", sub_409de0(r12));\n            r12 = arg1[rbx];\n        } while (r12 != 0);\n    }\n    uint64_t* const rdi_6 = stderr;\n    char* rax_6 = stderr[5];\n    if (rax_6 >= stderr[6])\n    {\n        /* tailcall */\n        return __overflow(rdi_6, 0xa);\n    }\n    stderr[5] = &rax_6[1];\n    *rax_6 = 0xa;\n    return rax_6;\n}\n\n"
        },
        {
            "funcName": "sub_40da70",
            "funcStartAddr": "0x40da70",
            "funcEndAddr": "0x40dae0",
            "decompiledFuncCode": "int64_t sub_40da70(uint64_t arg1, char* arg2, int64_t* arg3, int64_t arg4, \n    uint64_t arg5, int64_t arg6)\n{\n    int64_t rax = sub_40d7b0(arg2, arg3, arg4, arg5);\n    if (rax < 0)\n    {\n        sub_40d8d0(arg1, arg2, rax);\n        sub_40d950(arg3, arg4, arg5);\n        arg6();\n        rax = -1;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40dae0",
            "funcStartAddr": "0x40dae0",
            "funcEndAddr": "0x40db2d",
            "decompiledFuncCode": "int64_t sub_40dae0(int64_t arg1, int64_t* arg2, int64_t arg3, uint64_t arg4)\n{\n    int64_t r14 = *arg2;\n    if (r14 != 0)\n    {\n        void* rbx_1 = &arg2[1];\n        int64_t rbp_1 = arg3;\n        do\n        {\n            if (memcmp(arg1, rbp_1, arg4) == 0)\n            {\n                break;\n            }\n            r14 = *rbx_1;\n            rbp_1 = (rbp_1 + arg4);\n            rbx_1 = (rbx_1 + 8);\n        } while (r14 != 0);\n    }\n    return r14;\n}\n\n"
        },
        {
            "funcName": "sub_40db30",
            "funcStartAddr": "0x40db30",
            "funcEndAddr": "0x40db8d",
            "decompiledFuncCode": "uint64_t sub_40db30(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_40e240(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40db90",
            "funcStartAddr": "0x40db90",
            "funcEndAddr": "0x40dbda",
            "decompiledFuncCode": "uint64_t sub_40db90(char* arg1, int64_t arg2, int32_t arg3)\n{\n    uint64_t rdx = 0;\n    if ((arg2 & 0x40) != 0)\n    {\n        int32_t var_50_1 = 0x10;\n        rdx = arg3;\n        void* var_48_1 = &arg_8;\n        void var_38;\n        void* var_40_1 = &var_38;\n    }\n    return sub_40e1f0(open(arg1, arg2, rdx));\n}\n\n"
        },
        {
            "funcName": "sub_40dbe0",
            "funcStartAddr": "0x40dbe0",
            "funcEndAddr": "0x40dc3e",
            "decompiledFuncCode": "int64_t sub_40dbe0()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_413b42;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            void* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40dc40",
            "funcStartAddr": "0x40dc40",
            "funcEndAddr": "0x40dc76",
            "decompiledFuncCode": "uint64_t sub_40dc40(char* arg1, int64_t arg2)\n{\n    int64_t rcx = *arg1;\n    if (rcx == 0)\n    {\n        return 0;\n    }\n    int64_t rax = 0;\n    do\n    {\n        arg1 = &arg1[1];\n        rax = ((ROLQ(rax, 9)) + rcx);\n        rcx = *arg1;\n    } while (rcx != 0);\n    return (COMBINE(0, rax) % arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40dc80",
            "funcStartAddr": "0x40dc80",
            "funcEndAddr": "0x40e1e2",
            "decompiledFuncCode": "char* sub_40dc80()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_617898;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_4139f9[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        size_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            size_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_40dd7c;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_40ddc6;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_40dd7c:\n            r15 = &data_4139f9[0x1b];\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_40ddc6:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, \"r\");\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_40de7c:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_40e00b;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_40deb8:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_40deb8;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_40def2:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_40def2;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_4139f9[0x1b];\n                                    free(rdi_26);\n                                    sub_40e240(rax_12);\n                                    goto label_40de07;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_40e0cb:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_40e0cb;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_40e119:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_40e119;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_40de7c;\n                        }\n                        break;\n                    }\n                label_40e00b:\n                    sub_40e240(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_4139f9[0x1b];\n            }\n        label_40de07:\n            free(rbp_3);\n        }\n        data_617898 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40e1f0",
            "funcStartAddr": "0x40e1f0",
            "funcEndAddr": "0x40e23e",
            "decompiledFuncCode": "uint64_t sub_40e1f0(int32_t arg1)\n{\n    if (arg1 <= 2)\n    {\n        int32_t rax_1 = sub_40fe80(arg1);\n        int32_t* rax_2 = __errno_location();\n        int32_t r13 = *rax_2;\n        close(arg1);\n        *rax_2 = r13;\n        return rax_1;\n    }\n    return arg1;\n}\n\n"
        },
        {
            "funcName": "sub_40e240",
            "funcStartAddr": "0x40e240",
            "funcEndAddr": "0x40e2bb",
            "decompiledFuncCode": "int64_t sub_40e240(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_40e2c0(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_40e2c0",
            "funcStartAddr": "0x40e2c0",
            "funcEndAddr": "0x40e300",
            "decompiledFuncCode": "int64_t sub_40e2c0(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_40e300(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_40e300",
            "funcStartAddr": "0x40e300",
            "funcEndAddr": "0x40e357",
            "decompiledFuncCode": "off64_t sub_40e300(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_40e360",
            "funcStartAddr": "0x4023d7",
            "funcEndAddr": "0x40fe79",
            "decompiledFuncCode": "void sub_40e360(char* arg1, uint64_t* arg2, char* arg3, int64_t arg4, \n    uint16_t arg5 @ x87control)\n{\n    int64_t rbp;\n    int64_t __saved_rbp = rbp;\n    int64_t r15;\n    int64_t __saved_r15 = r15;\n    int64_t r14;\n    int64_t __saved_r14 = r14;\n    int64_t r13;\n    int64_t __saved_r13 = r13;\n    int64_t r12;\n    int64_t __saved_r12 = r12;\n    int64_t rbx;\n    int64_t __saved_rbx = rbx;\n    void var_6f8;\n    void* rsp_1 = &var_6f8;\n    void var_678;\n    int64_t var_588;\n    if (sub_4101f0(arg3, &var_588, &var_678) >= 0)\n    {\n        char* var_670;\n        void var_668;\n        int64_t* var_580;\n        void var_568;\n        if (sub_40ffd0(arg4, &var_678) >= 0)\n        {\n            int64_t var_578;\n            int64_t rax_3 = (var_578 + 7);\n            if (rax_3 <= 6)\n            {\n                rax_3 = -1;\n            }\n            int64_t var_570;\n            int64_t rax_4 = (rax_3 + var_570);\n            char* var_6a8;\n            int64_t rcx;\n            char* r8_1;\n            if ((rax_3 + var_570) >= rax_3)\n            {\n                size_t rdi_3 = (rax_4 + 6);\n                if (rax_4 >= -6)\n                {\n                    goto label_40ea85;\n                }\n                char* var_6e0_1;\n                char* var_6b0_1;\n                int32_t* rdx_1;\n                if (rdi_3 <= 0xf9f)\n                {\n                    var_6e0_1 = nullptr;\n                    rsp_1 = (&var_6f8 - ((rax_4 + 0x1d) & 0xfffffffffffffff0));\n                    var_6b0_1 = ((rsp_1 + 0xf) & 0xfffffffffffffff0);\n                }\n                else\n                {\n                    if (rdi_3 == -1)\n                    {\n                        goto label_40ea85;\n                    }\n                    char* rax_5;\n                    rax_5 = malloc(rdi_3);\n                    var_6b0_1 = rax_5;\n                    if (rax_5 == 0)\n                    {\n                        goto label_40ea85;\n                    }\n                    var_6e0_1 = rax_5;\n                }\n                size_t r12_1 = 0;\n                if (arg1 != 0)\n                {\n                    r12_1 = *arg2;\n                }\n                int64_t* r14_1 = var_580;\n                r8_1 = arg3;\n                char* rbx_2 = arg1;\n                int64_t var_6c0_1 = 0;\n                uint64_t r15_2 = 0;\n                rcx = *r14_1;\n                void* r13_1;\n                if (rcx != r8_1)\n                {\n                    while (true)\n                    {\n                        void* rcx_1 = (rcx - r8_1);\n                        void* rax_8 = (r15_2 + rcx_1);\n                        r13_1 = rax_8;\n                        int32_t var_698;\n                        char* r15_7;\n                        if ((r15_2 + rcx_1) < r15_2)\n                        {\n                            if (r12_1 != -1)\n                            {\n                            label_40e955:\n                                r15_7 = rbx_2;\n                                var_6a8 = __errno_location();\n                            }\n                            else\n                            {\n                                r13_1 = ffffffffffffffff;\n                            label_40e5d3:\n                                memcpy(&rbx_2[r15_2], r8_1, rcx_1);\n                            label_40e5df:\n                                if (var_588 == var_6c0_1)\n                                {\n                                    uint64_t r15_11 = r13_1;\n                                    size_t r14_3 = (r13_1 + 1);\n                                    if (r13_1 >= -1)\n                                    {\n                                        if (r12_1 != -1)\n                                        {\n                                            goto label_40e955;\n                                        }\n                                    }\n                                    else if (r12_1 < r14_3)\n                                    {\n                                        bool cond:2_1 = r12_1 < 0;\n                                        if ((r12_1 == 0 && r14_3 <= 0xc))\n                                        {\n                                            r12_1 = 0xc;\n                                        label_40f735:\n                                            r13_1 = rbx_2 == arg1;\n                                            if ((rbx_2 == 0 || (rbx_2 != 0 && r13_1 != 0)))\n                                            {\n                                                char* rax_150 = malloc(r12_1);\n                                                if (rax_150 == 0)\n                                                {\n                                                    goto label_40e955;\n                                                }\n                                                if ((r15_11 == 0 || (r15_11 != 0 && r13_1 == 0)))\n                                                {\n                                                    rbx_2 = rax_150;\n                                                }\n                                                if ((r15_11 != 0 && r13_1 != 0))\n                                                {\n                                                    rbx_2 = memcpy(rax_150, rbx_2, r15_11);\n                                                }\n                                            }\n                                            if ((rbx_2 != 0 && r13_1 == 0))\n                                            {\n                                                char* rax_126 = realloc(rbx_2, r12_1);\n                                                if (rax_126 == 0)\n                                                {\n                                                    goto label_40eb6a;\n                                                }\n                                                rbx_2 = rax_126;\n                                            }\n                                        }\n                                        if (r12_1 != 0)\n                                        {\n                                            if (cond:2_1)\n                                            {\n                                                goto label_40e955;\n                                            }\n                                            r12_1 = (r12_1 + r12_1);\n                                            if (r12_1 >= r14_3)\n                                            {\n                                                goto label_40f735;\n                                            }\n                                        }\n                                        if (((r12_1 == 0 && r14_3 > 0xc) || r12_1 != 0))\n                                        {\n                                            if (r14_3 == -1)\n                                            {\n                                                goto label_40e955;\n                                            }\n                                            r12_1 = r14_3;\n                                            goto label_40f735;\n                                        }\n                                    }\n                                    rbx_2[r15_11] = 0;\n                                    if ((r12_1 > r14_3 && rbx_2 != arg1))\n                                    {\n                                        realloc(rbx_2, r14_3);\n                                    }\n                                    if (var_6e0_1 != 0)\n                                    {\n                                        free(var_6e0_1);\n                                    }\n                                    if (var_580 != &var_568)\n                                    {\n                                        free(var_580);\n                                    }\n                                    if (var_670 != &var_668)\n                                    {\n                                        free(var_670);\n                                    }\n                                    *arg2 = r15_11;\n                                    goto label_40e9e1;\n                                }\n                                char r15_3 = r14_1[9];\n                                int64_t rax_17 = r14_1[0xa];\n                                if (r15_3 == 0x25)\n                                {\n                                    if (rax_17 != -1)\n                                    {\n                                    label_40f08c:\n                                        abort();\n                                        /* no return */\n                                    }\n                                    uint64_t rax_47 = (r13_1 + 1);\n                                    r15_2 = rax_47;\n                                    if (r13_1 < -1)\n                                    {\n                                        if (r12_1 >= rax_47)\n                                        {\n                                            goto label_40ea52;\n                                        }\n                                        bool cond:4_1 = r12_1 < 0;\n                                        if (r12_1 != 0)\n                                        {\n                                            if (cond:4_1)\n                                            {\n                                                goto label_40e955;\n                                            }\n                                            r12_1 = (r12_1 + r12_1);\n                                            if (r12_1 >= rax_47)\n                                            {\n                                                goto label_40ea27;\n                                            }\n                                        }\n                                        else if (rax_47 <= 0xc)\n                                        {\n                                            r12_1 = 0xc;\n                                        label_40ea27:\n                                            rdx_1 = rbx_2 == arg1;\n                                            if (rbx_2 == 0)\n                                            {\n                                            label_40f243:\n                                                var_698 = rdx_1;\n                                                char* rax_107 = malloc(r12_1);\n                                                rdx_1 = var_698;\n                                                if (rax_107 == 0)\n                                                {\n                                                    goto label_40e955;\n                                                }\n                                                if ((r13_1 == 0 || (r13_1 != 0 && rdx_1 == 0)))\n                                                {\n                                                    rbx_2 = rax_107;\n                                                }\n                                                if ((r13_1 != 0 && rdx_1 != 0))\n                                                {\n                                                    char* rax_108;\n                                                    rax_108 = memcpy(rax_107, rbx_2, r13_1);\n                                                    rbx_2 = rax_108;\n                                                }\n                                                goto label_40ea52;\n                                            }\n                                            if (rdx_1 != 0)\n                                            {\n                                                goto label_40f243;\n                                            }\n                                            char* rax_48;\n                                            rax_48 = realloc(rbx_2, r12_1);\n                                            if (rax_48 == 0)\n                                            {\n                                                goto label_40eb6a;\n                                            }\n                                            rbx_2 = rax_48;\n                                            goto label_40ea52;\n                                        }\n                                        if (rax_47 == -1)\n                                        {\n                                            goto label_40e955;\n                                        }\n                                        r12_1 = rax_47;\n                                        goto label_40ea27;\n                                    }\n                                    if (r12_1 != -1)\n                                    {\n                                        goto label_40e955;\n                                    }\n                                    r15_2 = -1;\n                                label_40ea52:\n                                    *(rbx_2 + r13_1) = 0x25;\n                                label_40ea57:\n                                    r8_1 = r14_1[1];\n                                    r14_1 = &r14_1[0xb];\n                                    rcx = *r14_1;\n                                    var_6c0_1 = (var_6c0_1 + 1);\n                                    if (rcx == r8_1)\n                                    {\n                                        break;\n                                    }\n                                    continue;\n                                }\n                                else\n                                {\n                                    if (rax_17 == -1)\n                                    {\n                                        goto label_40f08c;\n                                    }\n                                    rdx_1 = &var_670[(rax_17 << 5)];\n                                    int32_t rax_19 = *rdx_1;\n                                    if (r15_3 == 0x6e)\n                                    {\n                                        uint64_t rax_50 = (rax_19 - 0x12);\n                                        if (rax_50 > 4)\n                                        {\n                                        label_4023d7:\n                                            abort();\n                                            /* no return */\n                                        }\n                                        switch (rax_50)\n                                        {\n                                            case 0:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                            case 1:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                            case 2:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                            case 3:\n                                            case 4:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                        }\n                                        goto label_40ea57;\n                                    }\n                                    char rax_21 = (r15_3 & 0xdf);\n                                    int64_t var_6c8;\n                                    char* var_6b8;\n                                    int16_t var_680;\n                                    if (((rax_21 - 0x45) > 2 && rax_21 != 0x41))\n                                    {\n                                    label_40e667:\n                                        char rax_22 = r14_1[2];\n                                        void* r15_4 = &var_6b0_1[1];\n                                        *var_6b0_1 = 0x25;\n                                        if ((rax_22 & 1) != 0)\n                                        {\n                                            var_6b0_1[1] = 0x27;\n                                            r15_4 = &var_6b0_1[2];\n                                        }\n                                        if ((rax_22 & 2) != 0)\n                                        {\n                                            *r15_4 = 0x2d;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 4) != 0)\n                                        {\n                                            *r15_4 = 0x2b;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 8) != 0)\n                                        {\n                                            *r15_4 = 0x20;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 0x10) != 0)\n                                        {\n                                            *r15_4 = 0x23;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 0x40) != 0)\n                                        {\n                                            *r15_4 = 0x49;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 0x20) != 0)\n                                        {\n                                            *r15_4 = 0x30;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        int64_t rsi_6 = r14_1[3];\n                                        int64_t rdx_5 = r14_1[4];\n                                        if (rsi_6 != rdx_5)\n                                        {\n                                            uint64_t rcx_4 = (rdx_5 - rsi_6);\n                                            memcpy(r15_4, rsi_6, rcx_4);\n                                            r15_4 = (r15_4 + rcx_4);\n                                        }\n                                        int64_t rsi_7 = r14_1[6];\n                                        uint64_t rdx_7 = r14_1[7];\n                                        if (rsi_7 != rdx_7)\n                                        {\n                                            uint64_t rcx_7 = (rdx_7 - rsi_7);\n                                            memcpy(r15_4, rsi_7, rcx_7);\n                                            r15_4 = (r15_4 + rcx_7);\n                                        }\n                                        if (rax_19 <= 0x10)\n                                        {\n                                            int32_t rax_23 = (1 << rax_19);\n                                            if ((rax_23 & 0x14180) == 0)\n                                            {\n                                                if ((*rax_23[1] & 0x10) != 0)\n                                                {\n                                                    *r15_4 = 0x4c;\n                                                    r15_4 = (r15_4 + 1);\n                                                }\n                                                if (((*rax_23[1] & 0x10) == 0 && (*rax_23[1] & 6) != 0))\n                                                {\n                                                    *r15_4 = 0x6c;\n                                                    r15_4 = (r15_4 + 1);\n                                                }\n                                            }\n                                            if (((((rax_23 & 0x14180) == 0 && (*rax_23[1] & 0x10) == 0) && (*rax_23[1] & 6) != 0) || (rax_23 & 0x14180) != 0))\n                                            {\n                                                *r15_4 = 0x6c;\n                                                r15_4 = (r15_4 + 1);\n                                            }\n                                        }\n                                        char rax_24 = r14_1[9];\n                                        *(r15_4 + 1) = 0;\n                                        *r15_4 = rax_24;\n                                        int64_t rax_25 = r14_1[5];\n                                        if (rax_25 != -1)\n                                        {\n                                            void* rax_27 = &var_670[(rax_25 << 5)];\n                                            if (*rax_27 != 5)\n                                            {\n                                                goto label_40f08c;\n                                            }\n                                            var_6b8 = 1;\n                                            var_680 = *(rax_27 + 0x10);\n                                            goto label_40e7be;\n                                        }\n                                        var_6b8 = 0;\n                                    label_40e7be:\n                                        int64_t rax_29 = r14_1[8];\n                                        if (rax_29 == -1)\n                                        {\n                                            goto label_40e7f6;\n                                        }\n                                        void* r8_3 = &var_670[(rax_29 << 5)];\n                                        if (*r8_3 != 5)\n                                        {\n                                            goto label_40f08c;\n                                        }\n                                        uint64_t rax_31 = var_6b8;\n                                        *(&var_680 + (rax_31 << 2)) = *(r8_3 + 0x10);\n                                        var_6b8 = (rax_31 + 1);\n                                    label_40e7f6:\n                                        void* rax_34 = (r13_1 + 2);\n                                        char* r11_1;\n                                        if (r13_1 < -2)\n                                        {\n                                            if (r12_1 >= rax_34)\n                                            {\n                                                goto label_40f238;\n                                            }\n                                            bool cond:22_1 = r12_1 < 0;\n                                            if (r12_1 != 0)\n                                            {\n                                                if (cond:22_1)\n                                                {\n                                                    goto label_40e955;\n                                                }\n                                                r12_1 = (r12_1 + r12_1);\n                                                if (r12_1 >= rax_34)\n                                                {\n                                                    goto label_40e829;\n                                                }\n                                            }\n                                            else if (rax_34 <= 0xc)\n                                            {\n                                                r12_1 = 0xc;\n                                            label_40e829:\n                                                rdx_7 = rbx_2 == arg1;\n                                                if (rbx_2 == 0)\n                                                {\n                                                label_40f1e3:\n                                                    var_6a8 = rdx_7;\n                                                    char* rax_105 = malloc(r12_1);\n                                                    char rdx_17 = var_6a8;\n                                                    r11_1 = rax_105;\n                                                    if (rax_105 == 0)\n                                                    {\n                                                        goto label_40e955;\n                                                    }\n                                                    if ((r13_1 != 0 && rdx_17 != 0))\n                                                    {\n                                                        r11_1 = memcpy(rax_105, rbx_2, r13_1);\n                                                    }\n                                                    goto label_40e854;\n                                                }\n                                                if (rdx_7 != 0)\n                                                {\n                                                    goto label_40f1e3;\n                                                }\n                                                char* rax_35 = realloc(rbx_2, r12_1);\n                                                r11_1 = rax_35;\n                                                if (rax_35 == 0)\n                                                {\n                                                    goto label_40e955;\n                                                }\n                                                goto label_40e854;\n                                            }\n                                            if (rax_34 == -1)\n                                            {\n                                                goto label_40e955;\n                                            }\n                                            r12_1 = rax_34;\n                                            goto label_40e829;\n                                        }\n                                        if (r12_1 != -1)\n                                        {\n                                            goto label_40e955;\n                                        }\n                                    label_40f238:\n                                        r11_1 = rbx_2;\n                                    label_40e854:\n                                        *(r11_1 + r13_1) = 0;\n                                        int32_t* rax_36 = __errno_location();\n                                        char* r11_2 = r11_1;\n                                        var_6c8 = r15_4;\n                                        var_6a8 = rax_36;\n                                        int32_t rax_37 = *rax_36;\n                                    label_40e892:\n                                        void* rbx_3 = 0x7fffffff;\n                                        int32_t var_684 = 0xffffffff;\n                                        void* r15_6 = (r12_1 - r13_1);\n                                        *var_6a8 = 0;\n                                        uint64_t rax_39 = rax_19;\n                                        if (r15_6 <= 0x7fffffff)\n                                        {\n                                            rbx_3 = r15_6;\n                                        }\n                                        if (rax_39 > 0x11)\n                                        {\n                                            goto label_4023d7;\n                                        }\n                                        char* var_6d0_1;\n                                        int32_t var_67c;\n                                        int32_t rax_56;\n                                        int32_t rax_58;\n                                        void* rsp_3;\n                                        void* rsp_6;\n                                        void* rsp_10;\n                                        void* rsp_11;\n                                        int64_t rdi_18;\n                                        int32_t* r9_2;\n                                        uint64_t r9_3;\n                                        switch (rax_39)\n                                        {\n                                            case 0:\n                                            {\n                                                goto label_4023d7;\n                                            }\n                                            case 1:\n                                            {\n                                                r9_3 = var_670[((r14_1[0xa] << 5) + 0x10)];\n                                                goto label_40ecdb;\n                                            }\n                                            case 2:\n                                            {\n                                                r9_3 = var_670[((r14_1[0xa] << 5) + 0x10)];\n                                                goto label_40ecdb;\n                                            }\n                                            case 3:\n                                            {\n                                                r9_3 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                goto label_40ecdb;\n                                            }\n                                            case 4:\n                                            {\n                                                r9_3 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                goto label_40ecdb;\n                                            }\n                                            case 5:\n                                            case 6:\n                                            case 0xd:\n                                            case 0xe:\n                                            {\n                                                r9_3 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                            label_40ecdb:\n                                                int32_t rax_66 = var_6b8;\n                                                rdi_18 = (r11_2 + r13_1);\n                                                var_6d0_1 = r11_2;\n                                                if (rax_66 == 1)\n                                                {\n                                                    *(rsp_1 - 8) = &var_684;\n                                                    *(rsp_1 - 0x10) = r9_3;\n                                                    rsp_6 = (rsp_1 - 0x10);\n                                                    goto label_40f162;\n                                                }\n                                                if (rax_66 == 2)\n                                                {\n                                                    *(rsp_1 - 0x10) = &var_684;\n                                                    *(rsp_1 - 0x18) = r9_3;\n                                                    rsp_10 = (rsp_1 - 0x18);\n                                                    goto label_40f11c;\n                                                }\n                                                *(rsp_1 - 0x10) = &var_684;\n                                                rsp_6 = (rsp_1 - 0x10);\n                                                goto label_40ed22;\n                                            }\n                                            case 7:\n                                            case 8:\n                                            case 9:\n                                            case 0xa:\n                                            case 0xf:\n                                            case 0x10:\n                                            case 0x11:\n                                            {\n                                                rdi_18 = (r11_2 + r13_1);\n                                                r9_2 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                rax_56 = var_6b8;\n                                                var_6d0_1 = r11_2;\n                                                break;\n                                            }\n                                            case 0xb:\n                                            {\n                                                int512_t zmm0;\n                                                zmm0 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                int32_t rax_83 = var_6b8;\n                                                void* rsp_17;\n                                                if (rax_83 == 1)\n                                                {\n                                                    *(rsp_1 - 0x10) = &var_684;\n                                                    rsp_17 = (rsp_1 - 0x10);\n                                                }\n                                                if (rax_83 == 2)\n                                                {\n                                                    *(rsp_1 - 8) = &var_684;\n                                                    *(rsp_1 - 0x10) = var_67c;\n                                                    rsp_17 = (rsp_1 - 0x10);\n                                                }\n                                                if ((rax_83 == 1 || rax_83 == 2))\n                                                {\n                                                    rax_58 = __snprintf_chk();\n                                                    *rsp_17;\n                                                    *(rsp_17 + 8);\n                                                    rsp_1 = (rsp_17 + 0x10);\n                                                }\n                                                if ((rax_83 != 1 && rax_83 != 2))\n                                                {\n                                                    rax_58 = __snprintf_chk();\n                                                }\n                                                goto label_40ebf0;\n                                            }\n                                            case 0xc:\n                                            {\n                                                rdi_18 = (r11_2 + r13_1);\n                                                var_6d0_1 = r11_2;\n                                                int80_t x87_r7_2 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                int32_t rax_76 = var_6b8;\n                                                if (rax_76 != 1)\n                                                {\n                                                    if (rax_76 == 2)\n                                                    {\n                                                        *(rsp_1 - 0x10) = &var_684;\n                                                        *(rsp_1 - 0x20) = x87_r7_2;\n                                                        *(rsp_1 - 0x30) = var_67c;\n                                                        rax_58 = __snprintf_chk();\n                                                        r11_2 = var_6d0_1;\n                                                        goto label_40ebf0;\n                                                    }\n                                                    rsp_3 = (rsp_1 - 0x10);\n                                                    r9_2 = &var_684;\n                                                    *rsp_3 = x87_r7_2;\n                                                    goto label_40ebe2;\n                                                }\n                                                *(rsp_1 - 0x10) = &var_684;\n                                                rsp_11 = (rsp_1 - 0x20);\n                                                *rsp_11 = x87_r7_2;\n                                            label_40f13c:\n                                                rax_58 = __snprintf_chk(rdi_18, rbx_3, 1, -1, var_6b0_1, var_680);\n                                                rsp_1 = (rsp_11 + 0x20);\n                                                r11_2 = var_6d0_1;\n                                            label_40ebf0:\n                                                rdx_1 = var_684;\n                                                if (rdx_1 >= 0)\n                                                {\n                                                    goto label_40ebfe;\n                                                }\n                                                break;\n                                            }\n                                        }\n                                        if (((((((rax_39 == 7 || rax_39 == 8) || rax_39 == 9) || rax_39 == 0xa) || rax_39 == 0xf) || rax_39 == 0x10) || rax_39 == 0x11))\n                                        {\n                                            if (rax_56 != 1)\n                                            {\n                                                if (rax_56 == 2)\n                                                {\n                                                    *(rsp_1 - 0x10) = &var_684;\n                                                    *(rsp_1 - 0x18) = r9_2;\n                                                    rsp_10 = (rsp_1 - 0x18);\n                                                label_40f11c:\n                                                    *(rsp_10 - 8) = var_67c;\n                                                    rsp_11 = (rsp_10 - 8);\n                                                    goto label_40f13c;\n                                                }\n                                                *(rsp_1 - 0x10) = &var_684;\n                                                rsp_3 = (rsp_1 - 0x10);\n                                            label_40ebe2:\n                                                rax_58 = __snprintf_chk(rdi_18, rbx_3, 1, -1, var_6b0_1, r9_2);\n                                                r11_2 = var_6d0_1;\n                                                *rsp_3;\n                                                *(rsp_3 + 8);\n                                                rsp_1 = (rsp_3 + 0x10);\n                                                goto label_40ebf0;\n                                            }\n                                            *(rsp_1 - 8) = &var_684;\n                                            *(rsp_1 - 0x10) = r9_2;\n                                            rsp_6 = (rsp_1 - 0x10);\n                                        label_40f162:\n                                            r9_3 = var_680;\n                                        label_40ed22:\n                                            rax_58 = __snprintf_chk(rdi_18, rbx_3, 1, -1, var_6b0_1, r9_3);\n                                            rdx_1 = var_684;\n                                            *(rsp_6 + 8);\n                                            rsp_1 = (rsp_6 + 0x10);\n                                            r11_2 = var_6d0_1;\n                                            if (rdx_1 >= 0)\n                                            {\n                                            label_40ebfe:\n                                                int64_t rcx_16 = rdx_1;\n                                                if ((rcx_16 < rbx_3 && *(&r11_2[rcx_16] + r13_1) != 0))\n                                                {\n                                                    goto label_40f08c;\n                                                }\n                                                if (rdx_1 < rax_58)\n                                                {\n                                                label_40ec18:\n                                                    var_684 = rax_58;\n                                                    rdx_1 = rax_58;\n                                                }\n                                                if ((rdx_1 + 1) < rbx_3)\n                                                {\n                                                    rbx_2 = r11_2;\n                                                    r15_2 = (rdx_1 + r13_1);\n                                                    *var_6a8 = rax_37;\n                                                    goto label_40ea57;\n                                                }\n                                                if (r15_6 > 0x7ffffffe)\n                                                {\n                                                    if ((r11_2 != arg1 && r11_2 != 0))\n                                                    {\n                                                        free(r11_2);\n                                                    }\n                                                    if (var_6e0_1 != 0)\n                                                    {\n                                                        free(var_6e0_1);\n                                                    }\n                                                    if (var_580 != &var_568)\n                                                    {\n                                                        free(var_580);\n                                                    }\n                                                    if (var_670 != &var_668)\n                                                    {\n                                                        free(var_670);\n                                                    }\n                                                    *var_6a8 = 0x4b;\n                                                    break;\n                                                }\n                                                uint64_t rax_60 = (rdx_1 + 2);\n                                                void* rax_61 = (rax_60 + r13_1);\n                                                int64_t rcx_18;\n                                                rcx_18 = (rax_60 + r13_1) < rax_60;\n                                                if (r12_1 >= 0)\n                                                {\n                                                    void* rdx_13 = (r12_1 + r12_1);\n                                                    if (rcx_18 == 0)\n                                                    {\n                                                        if (rdx_13 >= rax_61)\n                                                        {\n                                                            rax_61 = rdx_13;\n                                                        }\n                                                        if (r12_1 >= rax_61)\n                                                        {\n                                                            goto label_40e892;\n                                                        }\n                                                        r12_1 = (r12_1 + r12_1);\n                                                        if ((r12_1 < rax_61 && rax_61 != -1))\n                                                        {\n                                                            r12_1 = rax_61;\n                                                        }\n                                                        if (((r12_1 < rax_61 && rax_61 != -1) || r12_1 >= rax_61))\n                                                        {\n                                                            rbx_3 = r11_2 == arg1;\n                                                            if ((r11_2 == 0 || (r11_2 != 0 && rbx_3 != 0)))\n                                                            {\n                                                                char* rax_101 = malloc(r12_1);\n                                                                if (rax_101 != 0)\n                                                                {\n                                                                    if ((r13_1 != 0 && rbx_3 != 0))\n                                                                    {\n                                                                        r11_2 = memcpy(rax_101, r11_2, r13_1);\n                                                                        goto label_40e892;\n                                                                    }\n                                                                    r11_2 = rax_101;\n                                                                    goto label_40e892;\n                                                                }\n                                                            }\n                                                            if ((r11_2 != 0 && rbx_3 == 0))\n                                                            {\n                                                                char* rax_62 = realloc(r11_2, r12_1);\n                                                                if (rax_62 != 0)\n                                                                {\n                                                                    r11_2 = rax_62;\n                                                                    goto label_40e892;\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                                else if (r12_1 == -1)\n                                                {\n                                                    goto label_40e892;\n                                                }\n                                                r15_7 = r11_2;\n                                            }\n                                        }\n                                        if ((((((((((rax_39 == 7 || rax_39 == 8) || rax_39 == 9) || rax_39 == 0xa) || rax_39 == 0xf) || rax_39 == 0x10) || rax_39 == 0x11) && rax_56 == 1) && rdx_1 < 0) || rax_39 == 0xc))\n                                        {\n                                            if (*(var_6c8 + 1) != 0)\n                                            {\n                                                *(var_6c8 + 1) = 0;\n                                                goto label_40e892;\n                                            }\n                                            if (rax_58 < 0)\n                                            {\n                                                int32_t rbx_4 = *var_6a8;\n                                                if (rbx_4 == 0)\n                                                {\n                                                    rbx_4 = 0x54;\n                                                    if ((r14_1[9] & 0xef) != 0x63)\n                                                    {\n                                                        rbx_4 = 0x16;\n                                                    }\n                                                }\n                                                if ((r11_2 != arg1 && r11_2 != 0))\n                                                {\n                                                    free(r11_2);\n                                                }\n                                                if (var_6e0_1 != 0)\n                                                {\n                                                    free(var_6e0_1);\n                                                }\n                                                if (var_580 != &var_568)\n                                                {\n                                                    free(var_580);\n                                                }\n                                                if (var_670 != &var_668)\n                                                {\n                                                    free(var_670);\n                                                }\n                                                *var_6a8 = rbx_4;\n                                                break;\n                                            }\n                                            goto label_40ec18;\n                                        }\n                                    }\n                                    if (((rax_21 - 0x45) <= 2 || ((rax_21 - 0x45) > 2 && rax_21 == 0x41)))\n                                    {\n                                        if (rax_19 != 0xc)\n                                        {\n                                            goto label_40e667;\n                                        }\n                                        long double x87_r7_1 = *(rdx_1 + 0x10);\n                                        if ((!(FCMP_UO(x87_r7_1, x87_r7_1))))\n                                        {\n                                            long double x87_r6_3 = x87_r7_1;\n                                            x87_r7_1 = (x87_r7_1 + x87_r7_1);\n                                            (x87_r6_3 - x87_r7_1);\n                                            bool cond:7_1 = x87_r6_3 != x87_r7_1;\n                                            if ((FCMP_UO(x87_r6_3, x87_r7_1)))\n                                            {\n                                                goto label_40e667;\n                                            }\n                                            if (cond:7_1)\n                                            {\n                                                goto label_40e667;\n                                            }\n                                            goto label_40eaed;\n                                        }\n                                    label_40eaed:\n                                        char* rdx_11 = r14_1[3];\n                                        int64_t rdi_16 = r14_1[4];\n                                        int32_t r11_3 = r14_1[2];\n                                        int64_t r10_1;\n                                        if (rdx_11 == rdi_16)\n                                        {\n                                            r10_1 = 0;\n                                        label_40e8e0:\n                                            void* rdx_9 = r14_1[6];\n                                            int64_t rcx_10 = r14_1[7];\n                                            int64_t rcx_11;\n                                            int64_t rdx_10;\n                                            if (rdx_9 != rcx_10)\n                                            {\n                                                int64_t rsi_10 = r14_1[8];\n                                                if (rsi_10 == -1)\n                                                {\n                                                    char* rax_139 = (rdx_9 + 1);\n                                                    rdx_10 = 0;\n                                                    if (rcx_10 == rax_139)\n                                                    {\n                                                    label_40fbc4:\n                                                        rcx_11 = 0xc;\n                                                    label_40efb1:\n                                                        int64_t rax_97 = rcx_11;\n                                                        if (r10_1 >= rcx_11)\n                                                        {\n                                                            rax_97 = r10_1;\n                                                        }\n                                                        size_t rax_98 = (rax_97 + 1);\n                                                        var_698 = rax_98;\n                                                        if (rax_97 >= -1)\n                                                        {\n                                                            goto label_40e955;\n                                                        }\n                                                        void var_2f8;\n                                                        int64_t rcx_21;\n                                                        if (rax_98 <= 0x2bc)\n                                                        {\n                                                            rcx_21 = &var_2f8;\n                                                        }\n                                                        else\n                                                        {\n                                                            var_6b8 = r11_3;\n                                                            var_6a8 = x87_r7_1;\n                                                            if (rax_98 == -1)\n                                                            {\n                                                                goto label_40e955;\n                                                            }\n                                                            int64_t rax_99 = malloc(rax_98);\n                                                            r11_3 = var_6b8;\n                                                            x87_r7_1 = var_6a8;\n                                                            rcx_21 = rax_99;\n                                                            if (rax_99 == 0)\n                                                            {\n                                                                goto label_40e955;\n                                                            }\n                                                        }\n                                                        int64_t r9_6;\n                                                        int64_t r15_9;\n                                                        if ((!(FCMP_UO(x87_r7_1, x87_r7_1))))\n                                                        {\n                                                            uint16_t x87status_1;\n                                                            int16_t temp0_2;\n                                                            temp0_2 = __fnstcw_memmem16(arg5);\n                                                            var_680 = temp0_2;\n                                                            int32_t r8_7 = var_680;\n                                                            int16_t rax_100;\n                                                            *rax_100[1] = (*r8_7[1] | 3);\n                                                            var_680 = rax_100;\n                                                            uint16_t x87control;\n                                                            uint16_t x87status_2;\n                                                            x87control = __fldcw_memmem16(var_680);\n                                                            bool c0_1;\n                                                            bool c1_1;\n                                                            bool c2_1;\n                                                            bool c3_1;\n                                                            c0_1 = __fxam(x87_r7_1);\n                                                            if ((*((((c0_1) ? 1 : 0) << 8) | ((((c1_1) ? 1 : 0) << 9) | ((((c2_1) ? 1 : 0) << 0xa) | ((((c3_1) ? 1 : 0) << 0xe) | 0x3800))))[1] & 2) != 0)\n                                                            {\n                                                                *rcx_21 = 0x2d;\n                                                                x87_r7_1 = (-x87_r7_1);\n                                                                r15_9 = (rcx_21 + 1);\n                                                            }\n                                                            else if ((r11_3 & 4) != 0)\n                                                            {\n                                                                r15_9 = (rcx_21 + 1);\n                                                                *rcx_21 = 0x2b;\n                                                            }\n                                                            else\n                                                            {\n                                                                r15_9 = rcx_21;\n                                                                if ((r11_3 & 8) != 0)\n                                                                {\n                                                                    r15_9 = (rcx_21 + 1);\n                                                                    *rcx_21 = 0x20;\n                                                                }\n                                                            }\n                                                            long double x87_r6_4 = 0;\n                                                            if (x87_r7_1 <= x87_r6_4)\n                                                            {\n                                                                (x87_r7_1 - x87_r6_4);\n                                                                bool cond:14_1 = x87_r7_1 != x87_r6_4;\n                                                                if ((FCMP_UO(x87_r7_1, x87_r6_4)))\n                                                                {\n                                                                    goto label_40f08c;\n                                                                }\n                                                                if (cond:14_1)\n                                                                {\n                                                                    goto label_40f08c;\n                                                                }\n                                                                bool rax_118 = (r14_1[9] & 0xdf);\n                                                                int32_t var_6e8;\n                                                                if (rax_118 == 0x46)\n                                                                {\n                                                                    *r15_9 = 0x30;\n                                                                    if ((r11_3 & 0x10) != 0)\n                                                                    {\n                                                                    label_40f9e9:\n                                                                        var_6e8 = r10_1;\n                                                                        var_6b8 = r11_3;\n                                                                        r9_6 = (r15_9 + 2);\n                                                                        char rax_137 = *nl_langinfo(0x10000);\n                                                                        r11_3 = var_6b8;\n                                                                        r10_1 = var_6e8;\n                                                                        if (rax_137 == 0)\n                                                                        {\n                                                                            rax_137 = 0x2e;\n                                                                        }\n                                                                        *(r15_9 + 1) = rax_137;\n                                                                        if (rdx_10 != 0)\n                                                                        {\n                                                                            int64_t rsi_34 = ((r15_9 + rdx_10) + 2);\n                                                                            int64_t rax_138 = r9_6;\n                                                                        label_40fa60:\n                                                                            rax_138 = (rax_138 + 1);\n                                                                            *(rax_138 - 1) = 0x30;\n                                                                            if (rax_138 != rsi_34)\n                                                                            {\n                                                                                goto label_40fa60;\n                                                                            }\n                                                                            r9_6 = (r9_6 + rdx_10);\n                                                                        }\n                                                                        goto label_40f4db;\n                                                                    }\n                                                                    if (rdx_10 != 0)\n                                                                    {\n                                                                        goto label_40f9e9;\n                                                                    }\n                                                                label_40f4d7:\n                                                                    r9_6 = (r15_9 + 1);\n                                                                label_40f4db:\n                                                                    var_680 = r8_7;\n                                                                    uint16_t x87status_3;\n                                                                    arg5 = __fldcw_memmem16(var_680);\n                                                                label_40f4ec:\n                                                                    uint64_t r8_11 = (r9_6 - rcx_21);\n                                                                    if (r10_1 > r8_11)\n                                                                    {\n                                                                        int64_t r10_2 = (r10_1 - r8_11);\n                                                                        int64_t rdi_38 = (r9_6 + r10_2);\n                                                                        r8_11 = (rdi_38 - rcx_21);\n                                                                        if ((r11_3 & 2) == 0)\n                                                                        {\n                                                                            if (((r11_3 & 0x20) == 0 || ((r11_3 & 0x20) != 0 && r15_9 == 0)))\n                                                                            {\n                                                                                int64_t rax_130 = -1;\n                                                                                int64_t rdx_26 = ((rcx_21 - 1) - r9_6);\n                                                                                if (rcx_21 < r9_6)\n                                                                                {\n                                                                                label_40f825:\n                                                                                    *(rdi_38 + rax_130) = *(r9_6 + rax_130);\n                                                                                    rax_130 = (rax_130 - 1);\n                                                                                    if (rdx_26 != rax_130)\n                                                                                    {\n                                                                                        goto label_40f825;\n                                                                                    }\n                                                                                    r9_6 = rcx_21;\n                                                                                }\n                                                                                if (r10_2 != 0)\n                                                                                {\n                                                                                    int64_t r10_4 = (r10_2 + r9_6);\n                                                                                label_40f848:\n                                                                                    r9_6 = (r9_6 + 1);\n                                                                                    *(r9_6 - 1) = 0x20;\n                                                                                    if (r9_6 != r10_4)\n                                                                                    {\n                                                                                        goto label_40f848;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                            if (((r11_3 & 0x20) != 0 && r15_9 != 0))\n                                                                            {\n                                                                                if (r15_9 >= r9_6)\n                                                                                {\n                                                                                    r15_9 = r9_6;\n                                                                                }\n                                                                                else\n                                                                                {\n                                                                                    int64_t rax_119 = -1;\n                                                                                    int64_t rdx_21 = ((r15_9 - 1) - r9_6);\n                                                                                label_40f53d:\n                                                                                    *(rdi_38 + rax_119) = *(r9_6 + rax_119);\n                                                                                    rax_119 = (rax_119 - 1);\n                                                                                    if (rax_119 != rdx_21)\n                                                                                    {\n                                                                                        goto label_40f53d;\n                                                                                    }\n                                                                                }\n                                                                                if (r10_2 != 0)\n                                                                                {\n                                                                                    int64_t r10_3 = (r10_2 + r15_9);\n                                                                                label_40f558:\n                                                                                    r15_9 = (r15_9 + 1);\n                                                                                    *(r15_9 - 1) = 0x30;\n                                                                                    if (r15_9 != r10_3)\n                                                                                    {\n                                                                                        goto label_40f558;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                        else if (r10_2 != 0)\n                                                                        {\n                                                                        label_40f9b0:\n                                                                            r9_6 = (r9_6 + 1);\n                                                                            *(r9_6 - 1) = 0x20;\n                                                                            if (rdi_38 != r9_6)\n                                                                            {\n                                                                                goto label_40f9b0;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                    if (var_698 <= r8_11)\n                                                                    {\n                                                                        goto label_40f08c;\n                                                                    }\n                                                                    uint64_t rax_121 = (r13_1 + r8_11);\n                                                                    int64_t rsi_24;\n                                                                    rsi_24 = (r13_1 + r8_11) < r13_1;\n                                                                    r15_2 = rax_121;\n                                                                    if ((r12_1 - r13_1) > r8_11)\n                                                                    {\n                                                                        goto label_40f61a;\n                                                                    }\n                                                                    if (rsi_24 != 0)\n                                                                    {\n                                                                        if (r12_1 != -1)\n                                                                        {\n                                                                            goto label_40e955;\n                                                                        }\n                                                                        goto label_40f61a;\n                                                                    }\n                                                                    if (r12_1 >= rax_121)\n                                                                    {\n                                                                        goto label_40f61a;\n                                                                    }\n                                                                    bool cond:21_1 = r12_1 < 0;\n                                                                    if (r12_1 != 0)\n                                                                    {\n                                                                        if (cond:21_1)\n                                                                        {\n                                                                            goto label_40e955;\n                                                                        }\n                                                                        r12_1 = (r12_1 + r12_1);\n                                                                        if (r12_1 >= rax_121)\n                                                                        {\n                                                                            goto label_40f5c5;\n                                                                        }\n                                                                    }\n                                                                    else if (rax_121 <= 0xc)\n                                                                    {\n                                                                        r12_1 = 0xc;\n                                                                    label_40f5c5:\n                                                                        void* rdx_23;\n                                                                        rdx_23 = rbx_2 == arg1;\n                                                                        if (rbx_2 == 0)\n                                                                        {\n                                                                        label_40f85e:\n                                                                            var_6b8 = rdx_23;\n                                                                            var_698 = rcx_21;\n                                                                            char* rax_131 = malloc(r12_1);\n                                                                            rcx_21 = var_698;\n                                                                            char rdx_27 = var_6b8;\n                                                                            if (rax_131 == 0)\n                                                                            {\n                                                                                goto label_40e955;\n                                                                            }\n                                                                            if ((r13_1 == 0 || (r13_1 != 0 && rdx_27 == 0)))\n                                                                            {\n                                                                                rbx_2 = rax_131;\n                                                                            }\n                                                                            if ((r13_1 != 0 && rdx_27 != 0))\n                                                                            {\n                                                                                var_698 = rcx_21;\n                                                                                rcx_21 = var_698;\n                                                                                rbx_2 = memcpy(rax_131, rbx_2, r13_1);\n                                                                            }\n                                                                            goto label_40f61a;\n                                                                        }\n                                                                        if (rdx_23 != 0)\n                                                                        {\n                                                                            goto label_40f85e;\n                                                                        }\n                                                                        var_6a8 = r8_11;\n                                                                        var_698 = rcx_21;\n                                                                        char* rax_122 = realloc(rbx_2, r12_1);\n                                                                        if (rax_122 == 0)\n                                                                        {\n                                                                            goto label_40e955;\n                                                                        }\n                                                                        rcx_21 = var_698;\n                                                                        r8_11 = var_6a8;\n                                                                        rbx_2 = rax_122;\n                                                                    label_40f61a:\n                                                                        var_698 = rcx_21;\n                                                                        memcpy((rbx_2 + r13_1), rcx_21, r8_11);\n                                                                        int64_t rcx_25 = var_698;\n                                                                        if (rcx_25 != &var_2f8)\n                                                                        {\n                                                                            free(rcx_25);\n                                                                        }\n                                                                        goto label_40ea57;\n                                                                    }\n                                                                    if (rax_121 == -1)\n                                                                    {\n                                                                        goto label_40e955;\n                                                                    }\n                                                                    r12_1 = rax_121;\n                                                                    goto label_40f5c5;\n                                                                }\n                                                                if (rax_118 != 0x45)\n                                                                {\n                                                                    int32_t var_6f0;\n                                                                    if (rax_118 == 0x47)\n                                                                    {\n                                                                        *r15_9 = 0x30;\n                                                                        if ((r11_3 & 0x10) == 0)\n                                                                        {\n                                                                            goto label_40f4d7;\n                                                                        }\n                                                                        int64_t r9_8 = (r15_9 + 2);\n                                                                        if (rdx_10 == 0)\n                                                                        {\n                                                                            var_6a8 = r11_3;\n                                                                            r11_3 = var_6a8;\n                                                                            char rax_156 = *nl_langinfo(0x10000);\n                                                                            r9_6 = r9_8;\n                                                                            if (rax_156 == 0)\n                                                                            {\n                                                                                rax_156 = 0x2e;\n                                                                            }\n                                                                            *(r15_9 + 1) = rax_156;\n                                                                        }\n                                                                        else\n                                                                        {\n                                                                            char* rsi_32 = (rdx_10 - 1);\n                                                                            var_6f0 = r10_1;\n                                                                            var_6e8 = r9_8;\n                                                                            var_6c8 = r11_3;\n                                                                            var_6b8 = rdx_10;\n                                                                            char rax_134 = *nl_langinfo(0x10000);\n                                                                            r11_3 = var_6c8;\n                                                                            r9_6 = var_6e8;\n                                                                            r10_1 = var_6f0;\n                                                                            if (rax_134 == 0)\n                                                                            {\n                                                                                rax_134 = 0x2e;\n                                                                            }\n                                                                            *(r15_9 + 1) = rax_134;\n                                                                            if (rsi_32 != 0)\n                                                                            {\n                                                                                void* rdx_30 = &var_6b8[(r15_9 + 1)];\n                                                                                int64_t rax_135 = r9_6;\n                                                                            label_40f98e:\n                                                                                rax_135 = (rax_135 + 1);\n                                                                                *(rax_135 - 1) = 0x30;\n                                                                                if (rax_135 != rdx_30)\n                                                                                {\n                                                                                    goto label_40f98e;\n                                                                                }\n                                                                                r9_6 = &rsi_32[r9_6];\n                                                                            }\n                                                                        }\n                                                                        goto label_40f4db;\n                                                                    }\n                                                                    if (rax_118 != 0x41)\n                                                                    {\n                                                                        goto label_40f08c;\n                                                                    }\n                                                                    char* rax_142 = (r15_9 + 2);\n                                                                    *r15_9 = 0x30;\n                                                                    char rax_143 = r14_1[9];\n                                                                    *(r15_9 + 2) = 0x30;\n                                                                    *(r15_9 + 1) = (rax_143 + 0x17);\n                                                                    char* rsi_41;\n                                                                    if ((r11_3 & 0x10) == 0)\n                                                                    {\n                                                                        rsi_41 = (r15_9 + 3);\n                                                                    }\n                                                                    if (((r11_3 & 0x10) != 0 || ((r11_3 & 0x10) == 0 && rdx_10 != 0 != 0)))\n                                                                    {\n                                                                        var_6f0 = r10_1;\n                                                                        var_6e8 = rcx_21;\n                                                                        var_6c8 = r11_3;\n                                                                        rsi_41 = (r15_9 + 4);\n                                                                        char rax_153 = *nl_langinfo(0x10000);\n                                                                        r11_3 = var_6c8;\n                                                                        rcx_21 = var_6e8;\n                                                                        r10_1 = var_6f0;\n                                                                        if (rax_153 == 0)\n                                                                        {\n                                                                            rax_153 = 0x2e;\n                                                                        }\n                                                                        *(r15_9 + 3) = rax_153;\n                                                                        if (rdx_10 != 0)\n                                                                        {\n                                                                            int64_t rdi_53 = ((r15_9 + rdx_10) + 4);\n                                                                            char* rax_154 = rsi_41;\n                                                                        label_40fdd5:\n                                                                            rax_154 = &rax_154[1];\n                                                                            rax_154[-1] = 0x30;\n                                                                            if (rax_154 != rdi_53)\n                                                                            {\n                                                                                goto label_40fdd5;\n                                                                            }\n                                                                            rsi_41 = &rsi_41[rdx_10];\n                                                                        }\n                                                                    }\n                                                                    char rax_145 = r14_1[9];\n                                                                    r9_6 = &rsi_41[3];\n                                                                    *(rsi_41 + 1) = 0x302b;\n                                                                    r15_9 = rax_142;\n                                                                    *rsi_41 = (rax_145 + 0xf);\n                                                                    goto label_40f4db;\n                                                                }\n                                                                *r15_9 = 0x30;\n                                                                char* rsi_27;\n                                                                if ((r11_3 & 0x10) == 0)\n                                                                {\n                                                                    rsi_27 = (r15_9 + 1);\n                                                                }\n                                                                if (((r11_3 & 0x10) != 0 || ((r11_3 & 0x10) == 0 && rdx_10 != 0 != 0)))\n                                                                {\n                                                                    var_6e8 = r10_1;\n                                                                    var_6b8 = r11_3;\n                                                                    rsi_27 = (r15_9 + 2);\n                                                                    char rax_148 = *nl_langinfo(0x10000);\n                                                                    r11_3 = var_6b8;\n                                                                    r10_1 = var_6e8;\n                                                                    if (rax_148 == 0)\n                                                                    {\n                                                                        rax_148 = 0x2e;\n                                                                    }\n                                                                    *(r15_9 + 1) = rax_148;\n                                                                    if (rdx_10 != 0)\n                                                                    {\n                                                                        int64_t rdi_50 = ((r15_9 + rdx_10) + 2);\n                                                                        char* rax_149 = rsi_27;\n                                                                    label_40fcc0:\n                                                                        rax_149 = &rax_149[1];\n                                                                        rax_149[-1] = 0x30;\n                                                                        if (rax_149 != rdi_50)\n                                                                        {\n                                                                            goto label_40fcc0;\n                                                                        }\n                                                                        rsi_27 = &rsi_27[rdx_10];\n                                                                    }\n                                                                }\n                                                                char rax_123 = r14_1[9];\n                                                                r9_6 = &rsi_27[4];\n                                                                rsi_27[3] = 0x30;\n                                                                *rsi_27 = rax_123;\n                                                                *(rsi_27 + 1) = 0x302b;\n                                                                goto label_40f4db;\n                                                            }\n                                                            long double x87_r6_7 = (x87_r6_4 + x87_r6_4);\n                                                            (x87_r6_7 - x87_r6_4);\n                                                            bool cond:15_1 = x87_r6_7 != x87_r6_4;\n                                                            if ((!(FCMP_O(x87_r6_7, x87_r6_4))))\n                                                            {\n                                                                goto label_40f08c;\n                                                            }\n                                                            if (cond:15_1)\n                                                            {\n                                                                goto label_40f08c;\n                                                            }\n                                                            r9_6 = (r15_9 + 3);\n                                                            if ((r14_1[9] - 0x41) > 0x19)\n                                                            {\n                                                                *(r15_9 + 2) = 0x66;\n                                                                *r15_9 = 0x6e69;\n                                                                r15_9 = 0;\n                                                            }\n                                                            else\n                                                            {\n                                                                *(r15_9 + 2) = 0x46;\n                                                                *r15_9 = 0x4e49;\n                                                                r15_9 = 0;\n                                                            }\n                                                            goto label_40f4db;\n                                                        }\n                                                        r9_6 = (rcx_21 + 3);\n                                                        if ((r15_3 - 0x41) > 0x19)\n                                                        {\n                                                            *(rcx_21 + 2) = 0x6e;\n                                                            r15_9 = 0;\n                                                            *rcx_21 = 0x616e;\n                                                        }\n                                                        else\n                                                        {\n                                                            *(rcx_21 + 2) = 0x4e;\n                                                            r15_9 = 0;\n                                                            *rcx_21 = 0x414e;\n                                                        }\n                                                        goto label_40f4ec;\n                                                    }\n                                                    char* rsi_36 = rax_139;\n                                                label_40fb23:\n                                                    char* rdi_49 = &rsi_36[1];\n                                                    int64_t rax_140 = (*rsi_36 - 0x30);\n                                                    int64_t rsi_39 = -1;\n                                                    if (rdx_10 <= 0x1999999999999999)\n                                                    {\n                                                        int64_t rsi_40 = (rdx_10 * 5);\n                                                        rsi_39 = (rsi_40 + rsi_40);\n                                                    }\n                                                    rsi_36 = rdi_49;\n                                                    rdx_10 = (rax_140 + rsi_39);\n                                                    if ((rax_140 + rsi_39) < rax_140)\n                                                    {\n                                                        if (rcx_10 == rdi_49)\n                                                        {\n                                                            goto label_40e955;\n                                                        }\n                                                    label_40fb57:\n                                                        rsi_36 = &rdi_49[1];\n                                                        if (rsi_36[-1] != 0x30)\n                                                        {\n                                                            if (rcx_10 != rsi_36)\n                                                            {\n                                                                rdi_49 = rsi_36;\n                                                                goto label_40fb57;\n                                                            }\n                                                            goto label_40e955;\n                                                        }\n                                                        rdx_10 = -1;\n                                                    }\n                                                    if (rcx_10 != rsi_36)\n                                                    {\n                                                        goto label_40fb23;\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    void* r8_4 = &var_670[(rsi_10 << 5)];\n                                                    if (*r8_4 != 5)\n                                                    {\n                                                        goto label_40f08c;\n                                                    }\n                                                    rdx_10 = *(r8_4 + 0x10);\n                                                    if (rdx_10 < 0)\n                                                    {\n                                                        goto label_40ef90;\n                                                    }\n                                                }\n                                                if (rdx_10 == 0)\n                                                {\n                                                    goto label_40fbc4;\n                                                }\n                                                rcx_11 = (rdx_10 + 0xc);\n                                                if (rdx_10 >= -0xc)\n                                                {\n                                                    goto label_40e955;\n                                                }\n                                                goto label_40efb1;\n                                            }\n                                        label_40ef90:\n                                            bool cond:9_1 = rax_21 != 0x41;\n                                            rcx_11 = 0xc;\n                                            if (rax_21 != 0x41)\n                                            {\n                                                rcx_11 = 0x12;\n                                            }\n                                            rdx_10 = 0;\n                                            if (cond:9_1)\n                                            {\n                                                rdx_10 = 6;\n                                            }\n                                            goto label_40efb1;\n                                        }\n                                        int64_t rcx_12 = r14_1[5];\n                                        if (rcx_12 != -1)\n                                        {\n                                            void* rcx_14 = &var_670[(rcx_12 << 5)];\n                                            if (*rcx_14 != 5)\n                                            {\n                                                goto label_40f08c;\n                                            }\n                                            r10_1 = *(rcx_14 + 0x10);\n                                            if (r10_1 < 0)\n                                            {\n                                                r11_3 = (r11_3 | 2);\n                                                r10_1 = (-r10_1);\n                                            }\n                                            goto label_40e8e0;\n                                        }\n                                        r10_1 = 0;\n                                        var_698 = rcx_12;\n                                    label_40fa91:\n                                        char* rsi_35 = &rdx_11[1];\n                                        int64_t r9_10 = -1;\n                                        int64_t rdx_34 = (*rdx_11 - 0x30);\n                                        if (r10_1 <= 0x1999999999999999)\n                                        {\n                                            int64_t r9_11 = (r10_1 * 5);\n                                            r9_10 = (r9_11 + r9_11);\n                                        }\n                                        r10_1 = (rdx_34 + r9_10);\n                                        rdx_11 = rsi_35;\n                                        if ((rdx_34 + r9_10) < rdx_34)\n                                        {\n                                            int64_t rcx_26 = var_698;\n                                            if (rdi_16 != rsi_35)\n                                            {\n                                            label_40fad6:\n                                                rdx_11 = &rdx_11[1];\n                                                if (rdx_11[-1] == 0x30)\n                                                {\n                                                    var_698 = rcx_26;\n                                                    r10_1 = -1;\n                                                }\n                                                else if (rdi_16 != rdx_11)\n                                                {\n                                                    goto label_40fad6;\n                                                }\n                                            }\n                                            if ((rdi_16 == rsi_35 || (rdi_16 != rsi_35 && rdx_11[-1] != 0x30)))\n                                            {\n                                                r10_1 = rcx_26;\n                                            }\n                                        }\n                                        if ((((((rdx_34 + r9_10) < rdx_34 && rdi_16 != rsi_35) && rdx_11[-1] == 0x30) || (rdx_34 + r9_10) >= rdx_34) && rdi_16 != rdx_11))\n                                        {\n                                            goto label_40fa91;\n                                        }\n                                        goto label_40e8e0;\n                                    }\n                                }\n                            }\n                            if ((r15_7 != arg1 && r15_7 != 0))\n                            {\n                                goto label_40eb7b;\n                            }\n                        }\n                        else\n                        {\n                            if (r12_1 >= rax_8)\n                            {\n                                goto label_40e5d3;\n                            }\n                            bool cond:0_1 = r12_1 < 0;\n                            if ((r12_1 == 0 && rax_8 <= 0xc))\n                            {\n                                r12_1 = 0xc;\n                                rdx_1 = rbx_2 == arg1;\n                                if (rbx_2 == 0)\n                                {\n                                label_40e4ba:\n                                    var_6a8 = rdx_1;\n                                    var_698 = rcx_1;\n                                    char* rax_9 = malloc(r12_1);\n                                    rcx_1 = var_698;\n                                    char rdx_2 = var_6a8;\n                                    if (rax_9 == 0)\n                                    {\n                                        goto label_40e955;\n                                    }\n                                    if ((r15_2 == 0 || (r15_2 != 0 && rdx_2 == 0)))\n                                    {\n                                        rbx_2 = rax_9;\n                                    }\n                                    if ((r15_2 != 0 && rdx_2 != 0))\n                                    {\n                                        var_698 = rcx_1;\n                                        rcx_1 = var_698;\n                                        rbx_2 = memcpy(rax_9, rbx_2, r15_2);\n                                    }\n                                    goto label_40e5d3;\n                                }\n                            }\n                            if (r12_1 != 0)\n                            {\n                                if (cond:0_1)\n                                {\n                                    goto label_40e955;\n                                }\n                                r12_1 = (r12_1 + r12_1);\n                                if (r12_1 >= rax_8)\n                                {\n                                    goto label_40e582;\n                                }\n                            }\n                            if (((r12_1 == 0 && rax_8 > 0xc) || r12_1 != 0))\n                            {\n                                if (rax_8 == -1)\n                                {\n                                    goto label_40e955;\n                                }\n                                r12_1 = rax_8;\n                            label_40e582:\n                                rdx_1 = rbx_2 == arg1;\n                                if (rbx_2 == 0)\n                                {\n                                    goto label_40e4ba;\n                                }\n                            }\n                            if (((((r12_1 == 0 && rax_8 > 0xc) || r12_1 != 0) && rax_8 != -1) || (r12_1 == 0 && rax_8 <= 0xc)))\n                            {\n                                if (rdx_1 != 0)\n                                {\n                                    goto label_40e4ba;\n                                }\n                                var_698 = rcx_1;\n                                char* rax_15 = realloc(rbx_2, r12_1);\n                                if (rax_15 != 0)\n                                {\n                                    rcx_1 = var_698;\n                                    rbx_2 = rax_15;\n                                    goto label_40e5d3;\n                                }\n                            label_40eb6a:\n                                r15_7 = rbx_2;\n                                var_6a8 = __errno_location();\n                            label_40eb7b:\n                                free(r15_7);\n                            }\n                        }\n                        if (var_6e0_1 == 0)\n                        {\n                            break;\n                        }\n                        free(var_6e0_1);\n                        break;\n                    }\n                }\n                if ((rcx == r8_1 || (((rcx != r8_1 && (!/* if (rcx == r8_1 || (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && not(unimplemented  {add rax, rcx} && var_6e0_1 == 0) && not(unimplemented  {add rax, rcx})))... */)) && (!(/* if (rcx == r8_1 || (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && not(unimplemented  {add rax, rcx} && var_6e0_1 == 0) && not(unimplemented  {add rax, rcx})))... */ && var_6e0_1 == 0))) && (!/* if (rcx == r8_1 || (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && not(unimplemented  {add rax, rcx} && var_6e0_1 == 0) && not(unimplemented  {add rax, rcx})))... */))))\n                {\n                    r13_1 = r15_2;\n                    goto label_40e5df;\n                }\n                if ((((rcx != r8_1 && (!/* if (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && unimplemented  {add rax, rcx} && var_6e0_1 == 0)... */)) && /* if (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && unimplemented  {add rax, rcx} && var_6e0_1 == 0)... */) && var_6e0_1 == 0))\n                {\n                    goto label_40ea85;\n                }\n            }\n            else\n            {\n            label_40ea85:\n                var_6a8 = __errno_location();\n            }\n            if (((rax_3 + var_570) < rax_3 || ((((rax_3 + var_570) >= rax_3 && rax_4 < -6) && rcx != r8_1) && /* if (rax_3 + var_570 u< rax_3 || (rax_3 + var_570 u>= rax_3 && rax_4 u< -6 && rcx != r8_1 && unimplemented  {add rax, rcx}))... */)))\n            {\n                if (var_580 != &var_568)\n                {\n                    free(var_580);\n                }\n                if (var_670 == &var_668)\n                {\n                    goto label_40e9ca;\n                }\n                free(var_670);\n            label_40e9ca:\n                *var_6a8 = 0xc;\n            }\n        }\n        else\n        {\n            if (var_580 != &var_568)\n            {\n                free(var_580);\n            }\n            if (var_670 != &var_668)\n            {\n                free(var_670);\n            }\n            *__errno_location() = 0x16;\n        }\n    }\nlabel_40e9e1:\n}\n\n"
        },
        {
            "funcName": "sub_40fe80",
            "funcStartAddr": "0x40fe80",
            "funcEndAddr": "0x40fe8e",
            "decompiledFuncCode": "int64_t sub_40fe80(int32_t arg1)\n{\n    /* tailcall */\n    return sub_40fe90(arg1, 0, 3);\n}\n\n"
        },
        {
            "funcName": "sub_40fe90",
            "funcStartAddr": "0x40fe90",
            "funcEndAddr": "0x40ffc5",
            "decompiledFuncCode": "uint64_t sub_40fe90(int32_t arg1, int32_t arg2, int32_t arg3)\n{\n    void* var_58 = &arg_8;\n    int64_t rcx;\n    int64_t var_30 = rcx;\n    int32_t var_60 = 0x10;\n    void var_48;\n    void* var_50 = &var_48;\n    if (arg2 != 0x406)\n    {\n        return fcntl();\n    }\n    int32_t var_60_1 = 0x18;\n    int32_t rax_2;\n    int32_t rax_5;\n    int32_t* rax_15;\n    int32_t rax_17;\n    int32_t rbx;\n    if (data_6178a0 < 0)\n    {\n        rax_5 = sub_40fe90();\n        rbx = rax_5;\n    }\n    else\n    {\n        rax_2 = fcntl();\n        rbx = rax_2;\n        if (rax_2 < 0)\n        {\n            rax_15 = __errno_location();\n            if (*rax_15 == 0x16)\n            {\n                rax_17 = sub_40fe90(arg1, 0, arg3);\n                rbx = rax_17;\n                if (rax_17 >= 0)\n                {\n                    data_6178a0 = 0xffffffff;\n                }\n            }\n        }\n    }\n    if (((((data_6178a0 >= 0 && rax_2 < 0) && *rax_15 == 0x16) && rax_17 >= 0) || (rax_5 >= 0 && data_6178a0 == 0xffffffff)))\n    {\n        int32_t rax_7 = fcntl(rbx, 1);\n        int32_t rax_10;\n        if (rax_7 >= 0)\n        {\n            rax_10 = fcntl(rbx, 2, (rax_7 | 1));\n        }\n        if ((rax_7 < 0 || (rax_7 >= 0 && rax_10 == 0xffffffff)))\n        {\n            int32_t* rax_11 = __errno_location();\n            int32_t rdi_2 = rbx;\n            rbx = -1;\n            int32_t r12_1 = *rax_11;\n            close(rdi_2);\n            *rax_11 = r12_1;\n        }\n    }\n    if ((data_6178a0 >= 0 && (rax_2 >= 0 || (rax_2 < 0 && *rax_15 != 0x16))))\n    {\n        data_6178a0 = 1;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40ffd0",
            "funcStartAddr": "0x40ffd0",
            "funcEndAddr": "0x4101a6",
            "decompiledFuncCode": "int64_t sub_40ffd0(int64_t, void* arg2)\n{\n    int32_t* rax = *(arg2 + 8);\n    if (*arg2 == 0)\n    {\n        return 0;\n    }\n    if (*rax > 0x16)\n    {\n        return 0xffffffff;\n    }\n    /* jump -> *((*rax << 3) + &data_413ca0) */\n}\n\n"
        },
        {
            "funcName": "sub_4101f0",
            "funcStartAddr": "0x4101f0",
            "funcEndAddr": "0x410ef9",
            "decompiledFuncCode": "int64_t sub_4101f0(char* arg1, int64_t* arg2, int64_t* arg3)\n{\n    void* rcx = &arg2[4];\n    void* rax = &arg3[2];\n    int64_t* r8 = arg2;\n    void* r9 = 7;\n    int64_t r11 = 7;\n    int64_t r13 = 0;\n    *arg2 = 0;\n    arg2[1] = rcx;\n    void* var_60 = rcx;\n    *arg3 = 0;\n    arg3[1] = rax;\n    void* var_70 = nullptr;\n    int64_t var_78 = 0;\n    void* var_68 = nullptr;\n    while (true)\n    {\n        char rax_1 = *arg1;\n        int64_t rax_6;\n        if (rax_1 == 0)\n        {\n            *(rcx + (r13 * 0x58)) = arg1;\n            r8[2] = var_78;\n            r8[3] = var_70;\n            rax_6 = 0;\n        }\n        else\n        {\n            void* rbp_1 = &arg1[1];\n            if (rax_1 != 0x25)\n            {\n                goto label_410268;\n            }\n            void* r14_1 = ffffffffffffffff;\n            char** r12_1 = (rcx + (r13 * 0x58));\n            *r12_1 = arg1;\n            r12_1[2] = 0;\n            r12_1[3] = 0;\n            r12_1[4] = 0;\n            r12_1[5] = -1;\n            r12_1[6] = 0;\n            r12_1[7] = 0;\n            r12_1[8] = -1;\n            r12_1[0xa] = -1;\n            char rbx_1 = arg1[1];\n            if ((rbx_1 - 0x30) > 9)\n            {\n                goto label_410336;\n            }\n            void* rax_29 = rbp_1;\n            char rdx_14;\n            do\n            {\n                rax_29 = (rax_29 + 1);\n                rdx_14 = *rax_29;\n            } while ((rdx_14 - 0x30) <= 9);\n            void* r13_1;\n            if (rdx_14 == 0x24)\n            {\n                int64_t rax_64 = 0;\n                void* rcx_16;\n                int64_t rdx_28;\n                int64_t rdi_16;\n                char rsi_21;\n                do\n                {\n                    int64_t rsi_19 = -1;\n                    int64_t rdx_27 = (rbx_1 - 0x30);\n                    if (rax_64 <= 0x1999999999999999)\n                    {\n                        int64_t rsi_20 = (rax_64 * 5);\n                        rsi_19 = (rsi_20 + rsi_20);\n                    }\n                    rcx_16 = rbp_1;\n                    while (true)\n                    {\n                        rbx_1 = *(rbp_1 + 1);\n                        rdx_28 = (rdx_27 + rsi_19);\n                        rdi_16 = (rdx_27 + rsi_19) < rdx_27;\n                        rax_64 = rdx_28;\n                        rbp_1 = (rbp_1 + 1);\n                        rsi_21 = (rbx_1 - 0x30);\n                        if (rdi_16 == 0)\n                        {\n                            break;\n                        }\n                        if (rsi_21 > 9)\n                        {\n                            break;\n                        }\n                        rsi_19 = -1;\n                        rcx_16 = rbp_1;\n                        rdx_27 = (rbx_1 - 0x30);\n                    }\n                    if (rdi_16 != 0)\n                    {\n                        break;\n                    }\n                } while (rsi_21 <= 9);\n                if (rdi_16 != 0)\n                {\n                    goto label_4109b8;\n                }\n                r14_1 = (rdx_28 - 1);\n                if (r14_1 <= -3)\n                {\n                    rbp_1 = (rcx_16 + 2);\n                    rbx_1 = *(rcx_16 + 2);\n                    goto label_410336;\n                }\n            label_4109b8:\n                r13_1 = arg3[1];\n            }\n            else\n            {\n                r14_1 = ffffffffffffffff;\n            label_410336:\n                void* rcx_1;\n                while (true)\n                {\n                    rcx_1 = (rbp_1 + 1);\n                    if (rbx_1 == 0x27)\n                    {\n                        r12_1[2] = (r12_1[2] | 1);\n                    }\n                    else if (rbx_1 == 0x2d)\n                    {\n                        r12_1[2] = (r12_1[2] | 2);\n                    }\n                    else if (rbx_1 == 0x2b)\n                    {\n                        r12_1[2] = (r12_1[2] | 4);\n                    }\n                    else if (rbx_1 == 0x20)\n                    {\n                        r12_1[2] = (r12_1[2] | 8);\n                    }\n                    else if (rbx_1 == 0x23)\n                    {\n                        r12_1[2] = (r12_1[2] | 0x10);\n                    }\n                    else if (rbx_1 == 0x30)\n                    {\n                        r12_1[2] = (r12_1[2] | 0x20);\n                    }\n                    else\n                    {\n                        if (rbx_1 != 0x49)\n                        {\n                            break;\n                        }\n                        r12_1[2] = (r12_1[2] | 0x40);\n                    }\n                    rbx_1 = *rcx_1;\n                    rbp_1 = rcx_1;\n                }\n                if (rbx_1 != 0x2a)\n                {\n                    if ((rbx_1 - 0x30) <= 9)\n                    {\n                        r12_1[3] = rbp_1;\n                        if ((*rbp_1 - 0x30) <= 9)\n                        {\n                            void* rcx_15 = rbp_1;\n                            void* rdx_21;\n                            while (true)\n                            {\n                                rdx_21 = (rcx_15 + 1);\n                                if ((*(rcx_15 + 1) - 0x30) > 9)\n                                {\n                                    break;\n                                }\n                                rcx_15 = rdx_21;\n                            }\n                            rcx_1 = (rcx_15 + 2);\n                            int64_t rax_57 = (rdx_21 - rbp_1);\n                            rbp_1 = rdx_21;\n                            if (var_78 >= rax_57)\n                            {\n                                rax_57 = var_78;\n                            }\n                            var_78 = rax_57;\n                        }\n                        r12_1[4] = rbp_1;\n                        rbx_1 = *rbp_1;\n                    }\n                    goto label_4103a8;\n                }\n                int64_t rax_12 = 1;\n                r12_1[3] = rbp_1;\n                r12_1[4] = rcx_1;\n                if (var_78 != 0)\n                {\n                    rax_12 = var_78;\n                }\n                var_78 = rax_12;\n                int32_t rax_13 = *(rbp_1 + 1);\n                void* rbx_2;\n                if ((rax_13 - 0x30) <= 9)\n                {\n                    void* rdx_17 = rcx_1;\n                    char rsi_10;\n                    do\n                    {\n                        rdx_17 = (rdx_17 + 1);\n                        rsi_10 = *rdx_17;\n                    } while ((rsi_10 - 0x30) <= 9);\n                    if (rsi_10 == 0x24)\n                    {\n                        void* rsi_11 = nullptr;\n                        void* rdx_20;\n                        int64_t rbp_2;\n                        void* rdi_5;\n                        char rbx_6;\n                        do\n                        {\n                            void* const rdx_18 = ffffffffffffffff;\n                            int64_t rax_43 = (rax_13 - 0x30);\n                            if (rsi_11 <= 0x1999999999999999)\n                            {\n                                void* rdx_19 = (rsi_11 * 5);\n                                rdx_18 = (rdx_19 + rdx_19);\n                            }\n                            rdi_5 = rcx_1;\n                            while (true)\n                            {\n                                rdx_20 = (rdx_18 + rax_43);\n                                rax_13 = *(rcx_1 + 1);\n                                rbp_2 = (rdx_18 + rax_43) < rdx_18;\n                                rsi_11 = rdx_20;\n                                rcx_1 = (rcx_1 + 1);\n                                rbx_6 = (rax_13 - 0x30);\n                                if (rbp_2 == 0)\n                                {\n                                    break;\n                                }\n                                if (rbx_6 > 9)\n                                {\n                                    break;\n                                }\n                                rdx_18 = ffffffffffffffff;\n                                rdi_5 = rcx_1;\n                                rax_43 = (rax_13 - 0x30);\n                            }\n                            if (rbp_2 != 0)\n                            {\n                                break;\n                            }\n                        } while (rbx_6 <= 9);\n                        if (rbp_2 != 0)\n                        {\n                            goto label_4109b8;\n                        }\n                        rbx_2 = (rdx_20 - 1);\n                        if (rbx_2 > -3)\n                        {\n                            goto label_4109b8;\n                        }\n                        r12_1[5] = rbx_2;\n                        rcx_1 = (rdi_5 + 2);\n                        goto label_41044c;\n                    }\n                }\n                rbx_2 = r12_1[5];\n                if (rbx_2 != -1)\n                {\n                    goto label_41044c;\n                }\n                void* rax_41 = (var_68 + 1);\n                r12_1[5] = var_68;\n                if (var_68 == -1)\n                {\n                    goto label_4109b8;\n                }\n                rbx_2 = var_68;\n                var_68 = rax_41;\n            label_41044c:\n                r13_1 = arg3[1];\n                int64_t rdx_4;\n                void* rsi_7;\n                if (r9 <= rbx_2)\n                {\n                    void* r9_1 = (r9 + r9);\n                    void* rax_36 = (rbx_2 + 1);\n                    if (r9_1 <= rbx_2)\n                    {\n                        r9_1 = rax_36;\n                    }\n                    if (r9_1 <= 0x7ffffffffffffff)\n                    {\n                        int64_t rsi_6 = (r9_1 << 5);\n                        if (rax == r13_1)\n                        {\n                            void* rax_63 = malloc(rsi_6);\n                            r9 = r9_1;\n                            if (rax_63 == 0)\n                            {\n                                goto label_410ba9;\n                            }\n                            rdx_4 = *arg3;\n                            rsi_7 = rax;\n                            r13_1 = rax_63;\n                        label_410cc4:\n                            memcpy(r13_1, rsi_7, (rdx_4 << 5));\n                            rdx_4 = *arg3;\n                        label_41077d:\n                            arg3[1] = r13_1;\n                            goto label_41045c;\n                        }\n                        void* rax_37 = realloc(r13_1, rsi_6);\n                        rsi_7 = arg3[1];\n                        r13_1 = rax_37;\n                        r9 = r9_1;\n                        if (rax_37 != 0)\n                        {\n                            rdx_4 = *arg3;\n                            if (rax == rsi_7)\n                            {\n                                goto label_410cc4;\n                            }\n                            goto label_41077d;\n                        }\n                        goto label_410b90;\n                    }\n                label_410b8d:\n                    rsi_7 = r13_1;\n                label_410b90:\n                    if (rax == rsi_7)\n                    {\n                        goto label_410ba9;\n                    }\n                label_410b9f:\n                    free(rsi_7);\n                label_410ba9:\n                    int64_t rdi_12 = r8[1];\n                    if (var_60 != rdi_12)\n                    {\n                        free(rdi_12);\n                    }\n                    break;\n                }\n                rdx_4 = *arg3;\n            label_41045c:\n                if (rdx_4 <= rbx_2)\n                {\n                    do\n                    {\n                        rdx_4 = (rdx_4 + 1);\n                        *((r13_1 + (rdx_4 << 5)) - 0x20) = 0;\n                    } while (rdx_4 <= rbx_2);\n                    *arg3 = rdx_4;\n                    goto label_410488;\n                }\n            label_410488:\n                void* rax_16 = (r13_1 + (rbx_2 << 5));\n                int32_t rdx_5 = *rax_16;\n                if (rdx_5 == 0)\n                {\n                    *rax_16 = 5;\n                    rbx_1 = *rcx_1;\n                    rbp_1 = rcx_1;\n                    rcx_1 = (rcx_1 + 1);\n                    if (rbx_1 == 0x2e)\n                    {\n                        goto label_4104b0;\n                    }\n                    goto label_4103b1;\n                }\n                if (rdx_5 == 5)\n                {\n                    rbx_1 = *rcx_1;\n                    rbp_1 = rcx_1;\n                    rcx_1 = (rcx_1 + 1);\n                label_4103a8:\n                    if (rbx_1 != 0x2e)\n                    {\n                        goto label_4103b1;\n                    }\n                label_4104b0:\n                    bool cond:0_1 = *(rbp_1 + 1) != 0x2a;\n                    r12_1[6] = rbp_1;\n                    if (cond:0_1)\n                    {\n                        void* rax_35;\n                        if ((*(rbp_1 + 1) - 0x30) > 9)\n                        {\n                            rbp_1 = rcx_1;\n                            rax_35 = 1;\n                        }\n                        else\n                        {\n                            do\n                            {\n                                rcx_1 = (rcx_1 + 1);\n                            } while ((*rcx_1 - 0x30) <= 9);\n                            rax_35 = (rcx_1 - rbp_1);\n                            rbp_1 = rcx_1;\n                        }\n                        r12_1[7] = rcx_1;\n                        rbx_1 = *rcx_1;\n                        if (var_70 >= rax_35)\n                        {\n                            rax_35 = var_70;\n                        }\n                        var_70 = rax_35;\n                        goto label_4103b1;\n                    }\n                    void* rax_17 = 2;\n                    char* rcx_4 = (rbp_1 + 2);\n                    r12_1[7] = rcx_4;\n                    if (var_70 >= 2)\n                    {\n                        rax_17 = var_70;\n                    }\n                    var_70 = rax_17;\n                    int32_t rax_18 = *(rbp_1 + 2);\n                    void* rbx_4;\n                    if ((rax_18 - 0x30) <= 9)\n                    {\n                        char* rdx_31 = rcx_4;\n                        char rsi_23;\n                        do\n                        {\n                            rdx_31 = &rdx_31[1];\n                            rsi_23 = *rdx_31;\n                        } while ((rsi_23 - 0x30) <= 9);\n                        if (rsi_23 != 0x24)\n                        {\n                            goto label_4104ef;\n                        }\n                        void* rsi_24 = nullptr;\n                        void* rdx_34;\n                        int64_t rbp_3;\n                        char* rdi_18;\n                        char rbx_7;\n                        do\n                        {\n                            void* const rdx_32 = ffffffffffffffff;\n                            int64_t rax_67 = (rax_18 - 0x30);\n                            if (rsi_24 <= 0x1999999999999999)\n                            {\n                                void* rdx_33 = (rsi_24 * 5);\n                                rdx_32 = (rdx_33 + rdx_33);\n                            }\n                            rdi_18 = rcx_4;\n                            while (true)\n                            {\n                                rdx_34 = (rdx_32 + rax_67);\n                                rbp_3 = (rdx_32 + rax_67) < rdx_32;\n                                rcx_4 = &rcx_4[1];\n                                rax_18 = *rcx_4;\n                                rsi_24 = rdx_34;\n                                rbx_7 = (rax_18 - 0x30);\n                                if (rbp_3 == 0)\n                                {\n                                    break;\n                                }\n                                if (rbx_7 > 9)\n                                {\n                                    break;\n                                }\n                                rdx_32 = ffffffffffffffff;\n                                rdi_18 = rcx_4;\n                                rax_67 = (rax_18 - 0x30);\n                            }\n                            if (rbp_3 != 0)\n                            {\n                                break;\n                            }\n                        } while (rbx_7 <= 9);\n                        if (rbp_3 != 0)\n                        {\n                            goto label_4109b8;\n                        }\n                        rbx_4 = (rdx_34 - 1);\n                        if (rbx_4 > -3)\n                        {\n                            goto label_4109b8;\n                        }\n                        r12_1[8] = rbx_4;\n                        rcx_4 = &rdi_18[2];\n                        goto label_4104fe;\n                    }\n                label_4104ef:\n                    rbx_4 = r12_1[8];\n                    if (rbx_4 != -1)\n                    {\n                        goto label_4104fe;\n                    }\n                    void* rax_65 = (var_68 + 1);\n                    r12_1[8] = var_68;\n                    if (var_68 == -1)\n                    {\n                        goto label_4109b8;\n                    }\n                    rbx_4 = var_68;\n                    var_68 = rax_65;\n                label_4104fe:\n                    r13_1 = arg3[1];\n                    void* var_58;\n                    int64_t rdx_7;\n                    if (r9 <= rbx_4)\n                    {\n                        void* r9_3 = (r9 + r9);\n                        void* rax_61 = (rbx_4 + 1);\n                        if (r9_3 <= rbx_4)\n                        {\n                            r9_3 = rax_61;\n                        }\n                        if (r9_3 > 0x7ffffffffffffff)\n                        {\n                            goto label_410b8d;\n                        }\n                        int64_t rsi_18 = (r9_3 << 5);\n                        var_58 = rcx_4;\n                        if (rax == r13_1)\n                        {\n                            void* rax_69 = malloc(rsi_18);\n                            rcx_4 = var_58;\n                            r9 = r9_3;\n                            if (rax_69 == 0)\n                            {\n                                goto label_410ba9;\n                            }\n                            rdx_7 = *arg3;\n                            rsi_7 = rax;\n                            r13_1 = rax_69;\n                        label_410e76:\n                            memcpy(r13_1, rsi_7, (rdx_7 << 5));\n                            rdx_7 = *arg3;\n                        label_410c5c:\n                            arg3[1] = r13_1;\n                            goto label_41050e;\n                        }\n                        void* rax_62 = realloc(r13_1, rsi_18);\n                        rsi_7 = arg3[1];\n                        rcx_4 = var_58;\n                        r13_1 = rax_62;\n                        r9 = r9_3;\n                        if (rax_62 != 0)\n                        {\n                            rdx_7 = *arg3;\n                            if (rax == rsi_7)\n                            {\n                                goto label_410e76;\n                            }\n                            goto label_410c5c;\n                        }\n                        goto label_410b90;\n                    }\n                    rdx_7 = *arg3;\n                label_41050e:\n                    if (rdx_7 <= rbx_4)\n                    {\n                        do\n                        {\n                            rdx_7 = (rdx_7 + 1);\n                            *((r13_1 + (rdx_7 << 5)) - 0x20) = 0;\n                        } while (rdx_7 <= rbx_4);\n                        *arg3 = rdx_7;\n                        goto label_41053b;\n                    }\n                label_41053b:\n                    void* rax_23 = ((rbx_4 << 5) + r13_1);\n                    int32_t rdx_8 = *rax_23;\n                    if (rdx_8 == 0)\n                    {\n                        *rax_23 = 5;\n                        rbp_1 = rcx_4;\n                        rbx_1 = *rcx_4;\n                    label_4103b1:\n                        int32_t rax_11 = 0;\n                        while (true)\n                        {\n                            rbp_1 = (rbp_1 + 1);\n                            if (rbx_1 == 0x68)\n                            {\n                                rax_11 = (rax_11 | (1 << (rax_11 & 1)));\n                            }\n                            else if (rbx_1 == 0x4c)\n                            {\n                                rax_11 = (rax_11 | 4);\n                            }\n                            else\n                            {\n                                if ((rbx_1 != 0x6c && (rbx_1 != 0x6a && ((rbx_1 & 0xdf) != 0x5a && rbx_1 != 0x74))))\n                                {\n                                    break;\n                                }\n                                rax_11 = (rax_11 + 8);\n                            }\n                            rbx_1 = *rbp_1;\n                        }\n                        char rdx_9 = (rbx_1 - 0x25);\n                        if (rdx_9 > 0x53)\n                        {\n                            goto label_4109b8;\n                        }\n                        int32_t rcx_6;\n                        switch (rdx_9)\n                        {\n                            case 0:\n                            {\n                                goto label_4105e1;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 7:\n                            case 8:\n                            case 9:\n                            case 0xa:\n                            case 0xb:\n                            case 0xc:\n                            case 0xd:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1d:\n                            case 0x1f:\n                            case 0x23:\n                            case 0x24:\n                            case 0x25:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x3b:\n                            case 0x3d:\n                            case 0x46:\n                            case 0x48:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x51:\n                            case 0x52:\n                            {\n                                goto label_4109b8;\n                            }\n                            case 0x1c:\n                            case 0x20:\n                            case 0x21:\n                            case 0x22:\n                            case 0x3c:\n                            case 0x40:\n                            case 0x41:\n                            case 0x42:\n                            {\n                                rcx_6 = 0xc;\n                                if (rax_11 <= 0xf)\n                                {\n                                    int32_t rcx_12;\n                                    rcx_12 = (rax_11 & 4) != 0;\n                                    rcx_6 = (rcx_12 + 0xb);\n                                }\n                                goto label_410589;\n                            }\n                            case 0x1e:\n                            {\n                                rcx_6 = 0xe;\n                                rbx_1 = 0x63;\n                                goto label_410589;\n                            }\n                            case 0x2e:\n                            {\n                                rcx_6 = 0x10;\n                                rbx_1 = 0x73;\n                                goto label_410589;\n                            }\n                            case 0x33:\n                            case 0x4a:\n                            case 0x50:\n                            case 0x53:\n                            {\n                                rcx_6 = 0xa;\n                                if ((rax_11 <= 0xf && (rax_11 & 4) == 0))\n                                {\n                                    rcx_6 = 8;\n                                    if (rax_11 <= 7)\n                                    {\n                                        rcx_6 = 2;\n                                        if ((rax_11 & 2) == 0)\n                                        {\n                                            rcx_6 = (((2 - 2) & 2) + 4);\n                                        }\n                                    }\n                                }\n                                goto label_410589;\n                            }\n                            case 0x3e:\n                            {\n                                int32_t rcx_8;\n                                rcx_8 = rax_11 > 7;\n                                rcx_6 = (rcx_8 + 0xd);\n                                goto label_410589;\n                            }\n                            case 0x3f:\n                            case 0x44:\n                            {\n                                rcx_6 = 9;\n                                if ((rax_11 <= 0xf && (rax_11 & 4) == 0))\n                                {\n                                    rcx_6 = 7;\n                                    if (rax_11 <= 7)\n                                    {\n                                        rcx_6 = 1;\n                                        if ((rax_11 & 2) == 0)\n                                        {\n                                            rcx_6 = (((1 - 1) & 2) + 3);\n                                        }\n                                    }\n                                }\n                                goto label_410589;\n                            }\n                            case 0x49:\n                            {\n                                rcx_6 = 0x16;\n                                if ((rax_11 <= 0xf && (rax_11 & 4) == 0))\n                                {\n                                    rcx_6 = 0x15;\n                                    if (rax_11 <= 7)\n                                    {\n                                        rcx_6 = 0x12;\n                                        if ((rax_11 & 2) == 0)\n                                        {\n                                            int32_t rcx_9;\n                                            rcx_9 = (rax_11 & 1) == 0;\n                                            rcx_6 = (rcx_9 + 0x13);\n                                        }\n                                    }\n                                }\n                                goto label_410589;\n                            }\n                            case 0x4b:\n                            {\n                                rcx_6 = 0x11;\n                                goto label_410589;\n                            }\n                            case 0x4e:\n                            {\n                                int32_t rcx_5;\n                                rcx_5 = rax_11 > 7;\n                                rcx_6 = (rcx_5 + 0xf);\n                            label_410589:\n                                if (r14_1 == -1)\n                                {\n                                    void* rax_51 = (var_68 + 1);\n                                    r12_1[0xa] = var_68;\n                                    if (var_68 == -1)\n                                    {\n                                        goto label_4109b8;\n                                    }\n                                    r14_1 = var_68;\n                                    var_68 = rax_51;\n                                    goto label_410598;\n                                }\n                                r12_1[0xa] = r14_1;\n                            label_410598:\n                                r13_1 = arg3[1];\n                                if (r9 > r14_1)\n                                {\n                                    goto label_4105a5;\n                                }\n                                void* r9_2 = (r9 + r9);\n                                void* rax_48 = (r14_1 + 1);\n                                if (r9_2 <= r14_1)\n                                {\n                                    r9_2 = rax_48;\n                                }\n                                if (r9_2 > 0x7ffffffffffffff)\n                                {\n                                    goto label_410b8d;\n                                }\n                                size_t rsi_13 = (r9_2 << 5);\n                                var_58 = rcx_6;\n                                void* rax_58;\n                                if (rax == r13_1)\n                                {\n                                    rax_58 = malloc(rsi_13);\n                                    rcx_6 = var_58;\n                                    r9 = r9_2;\n                                    if (rax_58 == 0)\n                                    {\n                                        goto label_410ba9;\n                                    }\n                                    goto label_410b49;\n                                }\n                                void* rax_49 = realloc(r13_1, rsi_13);\n                                rcx_6 = var_58;\n                                r13_1 = rax_49;\n                                r9 = r9_2;\n                                if (rax_49 == 0)\n                                {\n                                    goto label_410ee3;\n                                }\n                                if (rax != arg3[1])\n                                {\n                                    goto label_410a8b;\n                                }\n                                rax_58 = r13_1;\n                                r13_1 = rax;\n                            label_410b49:\n                                void* rsi_16 = r13_1;\n                                r13_1 = rax_58;\n                                var_58 = rcx_6;\n                                memcpy(rax_58, rsi_16, (*arg3 << 5));\n                                rcx_6 = var_58;\n                            label_410a8b:\n                                arg3[1] = r13_1;\n                            label_4105a5:\n                                int64_t rax_24 = *arg3;\n                                if (rax_24 <= r14_1)\n                                {\n                                    do\n                                    {\n                                        rax_24 = (rax_24 + 1);\n                                        *((r13_1 + (rax_24 << 5)) - 0x20) = 0;\n                                    } while (rax_24 <= r14_1);\n                                    *arg3 = rax_24;\n                                }\n                                void* rax_25 = (r13_1 + (r14_1 << 5));\n                                int32_t rdx_13 = *rax_25;\n                                if (rdx_13 == 0)\n                                {\n                                    *rax_25 = rcx_6;\n                                label_4105e1:\n                                    r12_1[9] = rbx_1;\n                                    int64_t rax_26 = *r8;\n                                    r12_1[1] = rbp_1;\n                                    r13 = (rax_26 + 1);\n                                    *r8 = r13;\n                                    if (r11 > r13)\n                                    {\n                                        rcx = r8[1];\n                                    label_410268:\n                                        arg1 = rbp_1;\n                                        continue;\n                                    }\n                                    else\n                                    {\n                                        if (r11 >= 0)\n                                        {\n                                            int64_t rbx_5 = (r11 + r11);\n                                            if (rbx_5 > 0x2e8ba2e8ba2e8ba)\n                                            {\n                                                goto label_410ee3;\n                                            }\n                                            int64_t r12_2 = r8[1];\n                                            int64_t rsi_3 = (r11 * 0xb0);\n                                            if (var_60 == r12_2)\n                                            {\n                                                void* rax_38 = malloc(rsi_3);\n                                                rcx = rax_38;\n                                                if (rax_38 != 0)\n                                                {\n                                                label_4107d8:\n                                                    rcx = memcpy(rcx, r12_2, (r13 * 0x58));\n                                                    r13 = *r8;\n                                                label_41067f:\n                                                    r8[1] = rcx;\n                                                    r11 = rbx_5;\n                                                    goto label_410268;\n                                                }\n                                                rsi_7 = arg3[1];\n                                                if (rax == rsi_7)\n                                                {\n                                                    break;\n                                                }\n                                                goto label_410b9f;\n                                            }\n                                            void* rax_28 = realloc(r12_2, rsi_3);\n                                            rcx = rax_28;\n                                            if (rax_28 == 0)\n                                            {\n                                                goto label_410ee3;\n                                            }\n                                            r12_2 = r8[1];\n                                            r13 = *r8;\n                                            if (var_60 == r12_2)\n                                            {\n                                                goto label_4107d8;\n                                            }\n                                            goto label_41067f;\n                                        }\n                                    label_410ee3:\n                                        rsi_7 = arg3[1];\n                                    }\n                                    goto label_410b90;\n                                }\n                                if (rdx_13 == rcx_6)\n                                {\n                                    goto label_4105e1;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                    else if (rdx_8 == 5)\n                    {\n                        rbx_1 = *rcx_4;\n                        rbp_1 = rcx_4;\n                        goto label_4103b1;\n                    }\n                }\n            }\n            if (rax == r13_1)\n            {\n                goto label_4109d5;\n            }\n            free(r13_1);\n        label_4109d5:\n            int64_t rdi_7 = r8[1];\n            if (var_60 != rdi_7)\n            {\n                free(rdi_7);\n            }\n            *__errno_location() = 0x16;\n            rax_6 = 0xffffffff;\n        }\n        return rax_6;\n    }\n    *__errno_location() = 0xc;\n    return 0xffffffff;\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x410f00",
            "funcEndAddr": "0x410f5d",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x410f60",
            "funcEndAddr": "0x410f61",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_410f70",
            "funcStartAddr": "0x410f70",
            "funcEndAddr": "0x410f88",
            "decompiledFuncCode": "int64_t sub_410f70(void (* arg1)(void*))\n{\n    int64_t rdx = data_617308;\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, rdx);\n}\n\n"
        },
        {
            "funcName": "sub_410f88",
            "funcStartAddr": "0x410f88",
            "funcEndAddr": "0x410fa8",
            "decompiledFuncCode": "int64_t sub_410f88(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_616e30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}