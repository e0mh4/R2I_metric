{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tr.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 129,
    "funcInfo": [
        {
            "funcName": "sub_401540",
            "funcStartAddr": "0x401540",
            "funcEndAddr": "0x40154c",
            "decompiledFuncCode": "int64_t sub_401540()\n{\n    int64_t var_8 = data_60d008;\n    /* jump -> data_60d010 */\n}\n\n"
        },
        {
            "funcName": "sub_401556",
            "funcStartAddr": "0x401556",
            "funcEndAddr": "0x401560",
            "decompiledFuncCode": "int64_t sub_401556()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_401566",
            "funcStartAddr": "0x401566",
            "funcEndAddr": "0x401570",
            "decompiledFuncCode": "int64_t sub_401566()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_401576",
            "funcStartAddr": "0x401576",
            "funcEndAddr": "0x401580",
            "decompiledFuncCode": "int64_t sub_401576()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_401586",
            "funcStartAddr": "0x401586",
            "funcEndAddr": "0x401590",
            "decompiledFuncCode": "int64_t sub_401586()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_401596",
            "funcStartAddr": "0x401596",
            "funcEndAddr": "0x4015a0",
            "decompiledFuncCode": "int64_t sub_401596()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_4015a6",
            "funcStartAddr": "0x4015a6",
            "funcEndAddr": "0x4015b0",
            "decompiledFuncCode": "int64_t sub_4015a6()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_4015b6",
            "funcStartAddr": "0x4015b6",
            "funcEndAddr": "0x4015c0",
            "decompiledFuncCode": "int64_t sub_4015b6()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_4015c6",
            "funcStartAddr": "0x4015c6",
            "funcEndAddr": "0x4015d0",
            "decompiledFuncCode": "int64_t sub_4015c6()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_4015d6",
            "funcStartAddr": "0x4015d6",
            "funcEndAddr": "0x4015e0",
            "decompiledFuncCode": "int64_t sub_4015d6()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_4015e6",
            "funcStartAddr": "0x4015e6",
            "funcEndAddr": "0x4015f0",
            "decompiledFuncCode": "int64_t sub_4015e6()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_4015f6",
            "funcStartAddr": "0x4015f6",
            "funcEndAddr": "0x401600",
            "decompiledFuncCode": "int64_t sub_4015f6()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_401606",
            "funcStartAddr": "0x401606",
            "funcEndAddr": "0x401610",
            "decompiledFuncCode": "int64_t sub_401606()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_401616",
            "funcStartAddr": "0x401616",
            "funcEndAddr": "0x401620",
            "decompiledFuncCode": "int64_t sub_401616()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_401626",
            "funcStartAddr": "0x401626",
            "funcEndAddr": "0x401630",
            "decompiledFuncCode": "int64_t sub_401626()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_401636",
            "funcStartAddr": "0x401636",
            "funcEndAddr": "0x401640",
            "decompiledFuncCode": "int64_t sub_401636()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_401646",
            "funcStartAddr": "0x401646",
            "funcEndAddr": "0x401650",
            "decompiledFuncCode": "int64_t sub_401646()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_401656",
            "funcStartAddr": "0x401656",
            "funcEndAddr": "0x401660",
            "decompiledFuncCode": "int64_t sub_401656()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_401666",
            "funcStartAddr": "0x401666",
            "funcEndAddr": "0x401670",
            "decompiledFuncCode": "int64_t sub_401666()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_401676",
            "funcStartAddr": "0x401676",
            "funcEndAddr": "0x401680",
            "decompiledFuncCode": "int64_t sub_401676()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_401686",
            "funcStartAddr": "0x401686",
            "funcEndAddr": "0x401690",
            "decompiledFuncCode": "int64_t sub_401686()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_401696",
            "funcStartAddr": "0x401696",
            "funcEndAddr": "0x4016a0",
            "decompiledFuncCode": "int64_t sub_401696()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_4016a6",
            "funcStartAddr": "0x4016a6",
            "funcEndAddr": "0x4016b0",
            "decompiledFuncCode": "int64_t sub_4016a6()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_4016b6",
            "funcStartAddr": "0x4016b6",
            "funcEndAddr": "0x4016c0",
            "decompiledFuncCode": "int64_t sub_4016b6()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_4016c6",
            "funcStartAddr": "0x4016c6",
            "funcEndAddr": "0x4016d0",
            "decompiledFuncCode": "int64_t sub_4016c6()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_4016d6",
            "funcStartAddr": "0x4016d6",
            "funcEndAddr": "0x4016e0",
            "decompiledFuncCode": "int64_t sub_4016d6()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_4016e6",
            "funcStartAddr": "0x4016e6",
            "funcEndAddr": "0x4016f0",
            "decompiledFuncCode": "int64_t sub_4016e6()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_4016f6",
            "funcStartAddr": "0x4016f6",
            "funcEndAddr": "0x401700",
            "decompiledFuncCode": "int64_t sub_4016f6()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_401706",
            "funcStartAddr": "0x401706",
            "funcEndAddr": "0x401710",
            "decompiledFuncCode": "int64_t sub_401706()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_401716",
            "funcStartAddr": "0x401716",
            "funcEndAddr": "0x401720",
            "decompiledFuncCode": "int64_t sub_401716()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_401726",
            "funcStartAddr": "0x401726",
            "funcEndAddr": "0x401730",
            "decompiledFuncCode": "int64_t sub_401726()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_401736",
            "funcStartAddr": "0x401736",
            "funcEndAddr": "0x401740",
            "decompiledFuncCode": "int64_t sub_401736()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_401746",
            "funcStartAddr": "0x401746",
            "funcEndAddr": "0x401750",
            "decompiledFuncCode": "int64_t sub_401746()\n{\n    int64_t var_8 = 0x1f;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_401756",
            "funcStartAddr": "0x401756",
            "funcEndAddr": "0x401760",
            "decompiledFuncCode": "int64_t sub_401756()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_401766",
            "funcStartAddr": "0x401766",
            "funcEndAddr": "0x401770",
            "decompiledFuncCode": "int64_t sub_401766()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_401776",
            "funcStartAddr": "0x401776",
            "funcEndAddr": "0x401780",
            "decompiledFuncCode": "int64_t sub_401776()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_401786",
            "funcStartAddr": "0x401786",
            "funcEndAddr": "0x401790",
            "decompiledFuncCode": "int64_t sub_401786()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_401796",
            "funcStartAddr": "0x401796",
            "funcEndAddr": "0x4017a0",
            "decompiledFuncCode": "int64_t sub_401796()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_4017a6",
            "funcStartAddr": "0x4017a6",
            "funcEndAddr": "0x4017b0",
            "decompiledFuncCode": "int64_t sub_4017a6()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_4017b6",
            "funcStartAddr": "0x4017b6",
            "funcEndAddr": "0x4017c0",
            "decompiledFuncCode": "int64_t sub_4017b6()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_4017c6",
            "funcStartAddr": "0x4017c6",
            "funcEndAddr": "0x4017d0",
            "decompiledFuncCode": "int64_t sub_4017c6()\n{\n    int64_t var_8 = 0x27;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_4017d6",
            "funcStartAddr": "0x4017d6",
            "funcEndAddr": "0x4017e0",
            "decompiledFuncCode": "int64_t sub_4017d6()\n{\n    int64_t var_8 = 0x28;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "sub_4017e6",
            "funcStartAddr": "0x4017e6",
            "funcEndAddr": "0x4017f0",
            "decompiledFuncCode": "int64_t sub_4017e6()\n{\n    int64_t var_8 = 0x29;\n    /* tailcall */\n    return sub_401540();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x4018ff",
            "funcEndAddr": "0x4025a0",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    char** r12 = argv;\n    int64_t rbx = argc;\n    char* rdi = *argv;\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rcx = sub_403f40(rdi);\n    int32_t var_208;\n    int32_t var_200;\n    setlocale(6, &data_40aa04[0x1b], rdx, rcx, r8, r9, var_208, var_200);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    sub_407e60(sub_403e60);\n    while (true)\n    {\n        int32_t rax_1 = getopt_long(rbx, r12, \"+cCdst\", &data_4082c0, nullptr);\n        if (rax_1 == 0xffffffff)\n        {\n            int32_t rcx_2 = data_60d27c;\n            uint32_t rax_3 = data_60f5c3;\n            char rdx_1 = data_60f5c4;\n            int32_t r15_2 = (rbx - rcx_2);\n            int32_t rax_5;\n            int32_t rsi_1;\n            if (r15_2 != 2)\n            {\n                data_60f5c0 = 0;\n                if (rdx_1 == rax_3)\n                {\n                    rsi_1 = 2;\n                    rax_5 = 2;\n                }\n            }\n            if ((r15_2 == 2 && rax_3 != 0))\n            {\n                data_60f5c0 = 0;\n            }\n            if (((r15_2 != 2 && rdx_1 != rax_3) || ((r15_2 == 2 && rax_3 != 0) && rdx_1 == 0)))\n            {\n                rsi_1 = 1;\n                rax_5 = ((rax_3 - rax_3) + 2);\n            }\n            char const* const rsi_21;\n            if (((((r15_2 != 2 && rdx_1 == rax_3) || (r15_2 != 2 && rdx_1 != rax_3)) || ((r15_2 == 2 && rax_3 != 0) && rdx_1 == 0)) && r15_2 < rsi_1))\n            {\n                if (r15_2 == 0)\n                {\n                    error(0, 0, dcgettext(nullptr, \"missing operand\", 5));\n                    break;\n                }\n                error(0, 0, dcgettext(nullptr, \"missing operand after %s\", 5), sub_405b60(r12[(rbx - 1)]));\n                rsi_21 = \"Two strings must be given when b\u2026\";\n                if (data_60f5c4 == 0)\n                {\n                    rsi_21 = \"Two strings must be given when t\u2026\";\n                }\n                goto label_402413;\n            }\n            void* var_1b8;\n            void* var_1b0_1;\n            void** rbx_1;\n            int64_t* rbp_1;\n            if (r15_2 == 2)\n            {\n                if (rax_3 == 0)\n                {\n                    data_60f5c0 = 1;\n                    rax_5 = 2;\n                }\n                if (((rax_3 != 0 && rdx_1 != 0) || (rax_3 == 0 && rdx_1 == 0)))\n                {\n                    rbp_1 = &var_1b8;\n                    void* rax_34 = sub_406180(0x20);\n                    var_1b0_1 = rax_34;\n                    var_1b8 = rax_34;\n                    *(rax_34 + 8) = 0;\n                    int32_t rax_20;\n                    if (sub_403010(r12[data_60d27c], &var_1b8) == 0)\n                    {\n                    label_401de8:\n                        rax_20 = 1;\n                    label_401c7c:\n                        return rax_20;\n                    }\n                label_401eac:\n                    void* rax_37 = sub_406180(0x20);\n                    void* var_170_1 = rax_37;\n                    void* var_178 = rax_37;\n                    *(rax_37 + 8) = 0;\n                    if (sub_403010(r12[(data_60d27c + 1)], &var_178) == 0)\n                    {\n                        goto label_401de8;\n                    }\n                    rbx_1 = &var_178;\n                label_401ae8:\n                    sub_402a40(&var_1b8);\n                    char** var_1a0;\n                    int32_t var_138;\n                    if (data_60f5c2 != 0)\n                    {\n                        int64_t rcx_4 = 0x20;\n                        int64_t var_1a8_3 = -2;\n                        int32_t* rdi_14 = &var_138;\n                        int32_t r12_1 = 0x100;\n                        for (; rcx_4 != 0; rcx_4 = (rcx_4 - 1))\n                        {\n                            *rdi_14 = 0;\n                            rdi_14 = &rdi_14[2];\n                        }\n                        while (true)\n                        {\n                            int32_t rax_33 = sub_402bc0(&var_1b8, nullptr);\n                            if (rax_33 == 0xffffffff)\n                            {\n                                break;\n                            }\n                            int64_t rax_32 = rax_33;\n                            char rdx_7 = *(&var_138 + rax_32);\n                            *(&var_138 + rax_32) = 1;\n                            r12_1 = (r12_1 - (rdx_7 ^ 1));\n                        }\n                        r12 = r12_1;\n                        var_1a0 = r12;\n                    }\n                    int64_t var_198;\n                    int64_t r14_1 = var_198;\n                    if (r14_1 != 0)\n                    {\n                        goto label_4024f4;\n                    }\n                    int32_t var_1bc;\n                    if (rbx_1 == 0)\n                    {\n                    label_401c26:\n                        sub_403f10(stdin, 2);\n                        char r13_2 = data_60f5c4;\n                        if ((r15_2 == 1 && r13_2 != 0))\n                        {\n                            sub_403860(rbp_1, data_60f5c2, &data_60d4c0);\n                            sub_4038c0(0x402e40);\n                        label_401c5e:\n                            rax_20 = close(0);\n                            if (rax_20 == 0)\n                            {\n                                goto label_401c7c;\n                            }\n                            goto label_402346;\n                        }\n                        if (data_60f5c3 != 0)\n                        {\n                            if (r15_2 == 1)\n                            {\n                                sub_403860(rbp_1, data_60f5c2, &data_60d3c0);\n                                ssize_t rax_63;\n                                uint64_t rax_62;\n                                do\n                                {\n                                    rax_63 = sub_402e70(&data_60d5c0, 0x2000);\n                                    if (rax_63 == 0)\n                                    {\n                                        break;\n                                    }\n                                    rax_62 = fwrite_unlocked(&data_60d5c0, 1, rax_63, stdout);\n                                } while (rax_63 == rax_62);\n                                if (rax_63 == 0)\n                                {\n                                    goto label_401c5e;\n                                }\n                                goto label_402392;\n                            }\n                            if ((r15_2 == 2 && r13_2 != 0))\n                            {\n                                sub_403860(rbp_1, data_60f5c2, &data_60d3c0);\n                                sub_403860(rbx_1, 0, &data_60d4c0);\n                                sub_4038c0(0x402e70);\n                                goto label_401c5e;\n                            }\n                        }\n                        if (data_60f5c0 == 0)\n                        {\n                            goto label_401c5e;\n                        }\n                        void* rax_21 = nullptr;\n                        if (data_60f5c2 != 0)\n                        {\n                            sub_403860(rbp_1, 0, &data_60d3c0);\n                            rbx_1[2] = -2;\n                            void* rax_60 = nullptr;\n                            do\n                            {\n                                *(rax_60 + 0x60d2c0) = rax_60;\n                                rax_60 = (rax_60 + 1);\n                            } while (rax_60 != 0x100);\n                            void* rbp_3 = nullptr;\n                            do\n                            {\n                                if (*(rbp_3 + 0x60d3c0) == 0)\n                                {\n                                    int32_t rax_61 = sub_402bc0(rbx_1, nullptr);\n                                    if (rax_61 == 0xffffffff)\n                                    {\n                                        if (data_60f5c1 == 0)\n                                        {\n                                            __assert_fail(\"ch != -1 || truncate_set1\", \"src/tr.c\", 0x727, \"main\");\n                                            /* no return */\n                                        }\n                                        break;\n                                    }\n                                    *(rbp_3 + 0x60d2c0) = rax_61;\n                                }\n                                rbp_3 = (rbp_3 + 1);\n                            } while (rbp_3 != 0x100);\n                        }\n                        else\n                        {\n                            do\n                            {\n                                *(rax_21 + 0x60d2c0) = rax_21;\n                                rax_21 = (rax_21 + 1);\n                            } while (rax_21 != 0x100);\n                            r12 = &var_138;\n                            int64_t var_1a8_1 = -2;\n                            rbx_1[2] = -2;\n                            int32_t* var_208_1 = &var_1bc;\n                            int64_t r15_3;\n                            while (true)\n                            {\n                                r15_3 = sub_402bc0(rbp_1, var_208_1);\n                                int32_t rax_23 = sub_402bc0(rbx_1, &var_138);\n                                int32_t rdx_5 = var_1bc;\n                                if ((rdx_5 == 0 && var_138 == 1))\n                                {\n                                    void* r14_3 = nullptr;\n                                    uint16_t* r15_5 = *__ctype_b_loc();\n                                    do\n                                    {\n                                        if ((*(&r15_5[r14_3] + 1) & 2) != 0)\n                                        {\n                                            *(r14_3 + 0x60d2c0) = *__ctype_toupper_loc()[r14_3];\n                                        }\n                                        r14_3 = (r14_3 + 1);\n                                    } while (r14_3 != 0x100);\n                                }\n                                if ((rdx_5 == 1 && var_138 == 0))\n                                {\n                                    void* r14_2 = nullptr;\n                                    uint16_t* r15_4 = *__ctype_b_loc();\n                                    do\n                                    {\n                                        if ((*(&r15_4[r14_2] + 1) & 1) != 0)\n                                        {\n                                            *(r14_2 + 0x60d2c0) = *__ctype_tolower_loc()[r14_2];\n                                        }\n                                        r14_2 = (r14_2 + 1);\n                                    } while (r14_2 != 0x100);\n                                }\n                                if ((((rdx_5 == 0 && var_138 != 1) || (rdx_5 != 0 && rdx_5 != 1)) || (rdx_5 == 1 && var_138 != 0)))\n                                {\n                                    if (r15_3 == 0xffffffff)\n                                    {\n                                        break;\n                                    }\n                                    if (rax_23 == 0xffffffff)\n                                    {\n                                        break;\n                                    }\n                                    bool cond:2_1 = var_138 != 2;\n                                    *(r15_3 + 0x60d2c0) = rax_23;\n                                    if ((!cond:2_1))\n                                    {\n                                        continue;\n                                    }\n                                }\n                                int64_t var_1a8_2 = -1;\n                                var_1b0_1 = *(var_1b0_1 + 8);\n                                int64_t rax_31 = *(rbx_1[1] + 8);\n                                rbx_1[2] = -1;\n                                rbx_1[1] = rax_31;\n                            }\n                            r15_2 = (r15_3 + 1);\n                            if ((r15_3 != 0xffffffff && data_60f5c1 == 0))\n                            {\n                                __assert_fail(\"c1 == -1 || truncate_set1\", \"src/tr.c\", 0x75c, \"main\");\n                                /* no return */\n                            }\n                        }\n                        if (r13_2 != 0)\n                        {\n                            sub_403860(rbx_1, 0, &data_60d4c0);\n                            sub_4038c0(0x402f40);\n                            goto label_401c5e;\n                        }\n                        ssize_t rax_59;\n                        uint64_t rax_58;\n                        do\n                        {\n                            rax_59 = sub_402f40(&data_60d5c0, 0x2000);\n                            if (rax_59 == 0)\n                            {\n                                break;\n                            }\n                            rax_58 = fwrite_unlocked(&data_60d5c0, 1, rax_59, stdout);\n                        } while (rax_59 == rax_58);\n                        if (rax_59 == 0)\n                        {\n                            goto label_401c5e;\n                        }\n                        error(1, *__errno_location(), dcgettext(nullptr, \"write error\", 5));\n                    label_4024f4:\n                        error(1, 0, dcgettext(nullptr, \"the [c*] repeat construct may no\u2026\", 5));\n                    label_402516:\n                        error(1, 0, dcgettext(nullptr, \"when translating, the only chara\u2026\", 5));\n                    label_402538:\n                        error(1, 0, dcgettext(nullptr, \"[=c=] expressions may not appear\u2026\", 5));\n                    label_40255a:\n                        error(1, 0, dcgettext(nullptr, \"when not truncating set1, string\u2026\", 5));\n                    label_40255f:\n                        sub_402f90();\n                        /* no return */\n                    }\n                    r12 = var_1a0;\n                    sub_402a40(rbx_1);\n                    int64_t rax_9 = rbx_1[3];\n                    char** rax_13;\n                    int32_t* rcx_3;\n                    int64_t rdx_3;\n                    char r13_1;\n                    bool cond:1_1;\n                    if (r12 >= rax_9)\n                    {\n                        if (rbx_1[4] != 1)\n                        {\n                            goto label_401b32;\n                        }\n                        cond:1_1 = data_60f5c0 == 0;\n                        *(rbx_1[5] + 0x18) = (r12 - rax_9);\n                        rbx_1[3] = r12;\n                        if (cond:1_1)\n                        {\n                        label_401b73:\n                            rax_13 = error(1, 0, dcgettext(nullptr, \"the [c*] construct may appear in\u2026\", 5));\n                        label_401b78:\n                            r13_1 = rcx_3[4];\n                        label_401b85:\n                            r12 = (rax_13 - rdx_3);\n                            int32_t* rax_15 = sub_406180(0x20);\n                            void* rdx_4 = rbx_1[1];\n                            *(rax_15 + 8) = 0;\n                            *rax_15 = 4;\n                            rax_15[4] = r13_1;\n                            *(rax_15 + 0x18) = r12;\n                            if (rdx_4 == 0)\n                            {\n                                goto label_40255f;\n                            }\n                            *(rdx_4 + 8) = rax_15;\n                            rbx_1[1] = rax_15;\n                            rbx_1[3] = var_1a0;\n                        }\n                    }\n                    else\n                    {\n                    label_401b32:\n                        int64_t rax_10 = rbx_1[4];\n                        if (rax_10 > 1)\n                        {\n                            error(1, 0, dcgettext(nullptr, \"only one [c*] repeat construct m\u2026\", 5));\n                        label_402346:\n                            error(1, *__errno_location(), dcgettext(nullptr, \"standard input\", 5));\n                        label_402381:\n                            error(1, 0, dcgettext(nullptr, \"when translating with string1 lo\u2026\", 5));\n                        label_402392:\n                            rax_5 = error(1, *__errno_location(), dcgettext(nullptr, \"write error\", 5));\n                        label_4023b8:\n                            error(0, 0, dcgettext(nullptr, \"extra operand %s\", 5), sub_405b60(r12[(rax_5 + rcx_2)]));\n                            if (r15_2 != 2)\n                            {\n                                break;\n                            }\n                            rsi_21 = \"Only one string may be given whe\u2026\";\n                        label_402413:\n                            __fprintf_chk(stderr, 1, \"%s\\n\", dcgettext(nullptr, rsi_21, 5));\n                            break;\n                        }\n                        if (data_60f5c0 == 0)\n                        {\n                            if (rax_10 == 0)\n                            {\n                                goto label_401c26;\n                            }\n                            goto label_401b73;\n                        }\n                    }\n                    if ((((r12 >= rax_9 && rbx_1[4] == 1) && (!cond:1_1)) || r12 < rax_9))\n                    {\n                        if (rbx_1[6] != 0)\n                        {\n                            goto label_402538;\n                        }\n                        if (*(rbx_1 + 0x32) != 0)\n                        {\n                            goto label_402516;\n                        }\n                        bool r13_3 = *(rbx_1 + 0x31);\n                        if (r13_3 != 0)\n                        {\n                            int64_t rcx_7 = 0;\n                            uint16_t* rdx_11 = *__ctype_b_loc();\n                            void* rdi_18 = &rdx_11[0x100];\n                            do\n                            {\n                                uint16_t rax_45 = *rdx_11;\n                                r14_1 = (r14_1 - -1);\n                                rax_45 = (rax_45 & 0x200);\n                                rcx_7 = (rcx_7 - -1);\n                                rdx_11 = &rdx_11[1];\n                            } while (rdx_11 != rdi_18);\n                            void** var_200_1 = &var_1b8;\n                            char** var_1f0_1 = var_1a0;\n                            int64_t rax_47 = rbx_1[3];\n                            int32_t* var_1f8_1 = &var_138;\n                            void* var_1e0_1 = var_1b0_1;\n                            int64_t rax_49 = rbx_1[1];\n                            rbx_1[2] = -2;\n                            int64_t var_1a8_4 = -2;\n                            int32_t* var_208_2 = &var_1bc;\n                            int64_t rax_50 = (rcx_7 - 1);\n                            int64_t rcx_8 = (r14_1 - 1);\n                            bool r14_4 = r13_3;\n                            int32_t rax_53;\n                            do\n                            {\n                                int32_t rax_52 = sub_402bc0(var_200_1, var_208_2);\n                                rax_53 = sub_402bc0(rbx_1, var_1f8_1);\n                                int32_t rcx_10 = var_138;\n                                if (((r13_3 != 0 && rcx_10 != 2) && (r14_4 == 0 || (r14_4 != 0 && var_1bc == 2))))\n                                {\n                                    void (* rdx_32)();\n                                    int64_t rsi_23;\n                                    int64_t rdi_28;\n                                    rdx_32 = error(1, 0, dcgettext(nullptr, \"misaligned [:upper:] and/or [:lo\u2026\", 5));\n                                    /* tailcall */\n                                    return _start(rdi_28, rsi_23, rdx_32);\n                                }\n                                if (((r13_3 == 0 && rcx_10 != 2) || (r13_3 != 0 && rcx_10 != 2)))\n                                {\n                                    bool cond:3_1 = var_1bc == 1;\n                                    var_1a8_4 = -1;\n                                    var_1b0_1 = *(var_1b0_1 + 8);\n                                    int64_t rsi_13 = *(rbx_1[1] + 8);\n                                    rbx_1[2] = -1;\n                                    rbx_1[1] = rsi_13;\n                                    int64_t rsi_14 = rax_50;\n                                    if (cond:3_1)\n                                    {\n                                        rsi_14 = rcx_8;\n                                    }\n                                    int64_t rcx_9 = rcx_8;\n                                    var_1a0 = (var_1a0 - rsi_14);\n                                    if (rcx_10 != 1)\n                                    {\n                                        rcx_9 = rax_50;\n                                    }\n                                    rbx_1[3] = (rbx_1[3] - rcx_9);\n                                }\n                                r14_4 = var_1a8_4 == -1;\n                                r13_3 = rbx_1[2] == -1;\n                                r12 = (rax_52 + 1);\n                                if (rax_52 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                            } while (rax_53 != 0xffffffff);\n                            rbp_1 = var_200_1;\n                            if ((var_1f0_1 < var_1a0 || (var_1f0_1 >= var_1a0 && rax_47 < rbx_1[3])))\n                            {\n                                __assert_fail(\"old_s1_len >= s1->length && old_\u2026\", \"src/tr.c\", 0x4c5, \"validate_case_classes\");\n                                /* no return */\n                            }\n                            if ((var_1f0_1 >= var_1a0 && rax_47 >= rbx_1[3]))\n                            {\n                                var_1b0_1 = var_1e0_1;\n                                rbx_1[1] = rax_49;\n                            }\n                        }\n                        rax_13 = var_1a0;\n                        rdx_3 = rbx_1[3];\n                        if ((rax_13 > rdx_3 && data_60f5c1 == 0))\n                        {\n                            if (rdx_3 == 0)\n                            {\n                                goto label_40255a;\n                            }\n                            rcx_3 = rbx_1[1];\n                            if (*rcx_3 > 4)\n                            {\n                            label_4018ff:\n                                abort();\n                                /* no return */\n                            }\n                            switch (*rcx_3)\n                            {\n                                case 0:\n                                case 4:\n                                {\n                                    goto label_401b78;\n                                }\n                                case 1:\n                                {\n                                    r13_1 = *(rcx_3 + 0x11);\n                                    goto label_401b85;\n                                }\n                                case 2:\n                                {\n                                    goto label_402381;\n                                }\n                                case 3:\n                                {\n                                    goto label_4018ff;\n                                }\n                            }\n                        }\n                    }\n                    if ((((((r12 >= rax_9 && rbx_1[4] == 1) && (!cond:1_1)) || r12 < rax_9) && rbx_1[6] == 0) || ((r12 >= rax_9 && rbx_1[4] == 1) && cond:1_1)))\n                    {\n                        if (data_60f5c2 == 0)\n                        {\n                            goto label_401c26;\n                        }\n                        char var_187;\n                        if (var_187 == 0)\n                        {\n                            goto label_401c26;\n                        }\n                        if (rbx_1[3] == var_1a0)\n                        {\n                            rbx_1[2] = -2;\n                            int32_t rax_18 = sub_402bc0(rbx_1, nullptr);\n                            r12 = rax_18;\n                            if (rax_18 == 0xffffffff)\n                            {\n                                goto label_40230c;\n                            }\n                            int32_t rax_19;\n                            do\n                            {\n                                rax_19 = sub_402bc0(rbx_1, nullptr);\n                                if (rax_19 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                            } while (r12 == rax_19);\n                            if (rax_19 == 0xffffffff)\n                            {\n                                goto label_401c26;\n                            }\n                            goto label_40230c;\n                        }\n                    label_40230c:\n                        error(1, 0, dcgettext(nullptr, \"when translating with complement\u2026\", 5));\n                    }\n                }\n            }\n            if ((((r15_2 == 2 && rax_3 == 0) && rdx_1 != 0) || ((((r15_2 != 2 && rdx_1 == rax_3) || (r15_2 != 2 && rdx_1 != rax_3)) || ((r15_2 == 2 && rax_3 != 0) && rdx_1 == 0)) && r15_2 >= rsi_1)))\n            {\n                if (r15_2 > rax_5)\n                {\n                    goto label_4023b8;\n                }\n                rbp_1 = &var_1b8;\n                void* rax_6 = sub_406180(0x20);\n                var_1b0_1 = rax_6;\n                var_1b8 = rax_6;\n                *(rax_6 + 8) = 0;\n                if (sub_403010(r12[data_60d27c], &var_1b8) == 0)\n                {\n                    goto label_401de8;\n                }\n                rbx_1 = nullptr;\n                if (r15_2 == 2)\n                {\n                    goto label_401eac;\n                }\n                goto label_401ae8;\n            }\n        }\n        else\n        {\n            bool cond:0_1 = rax_1 <= 0x63;\n            if ((((rax_1 != 0x63 && cond:0_1) && rax_1 != 0xffffff7e) && rax_1 != 0x43))\n            {\n                if (rax_1 == 0xffffff7d)\n                {\n                    sub_406040(stdout, &data_407f4e, \"GNU coreutils\", data_60d210);\n                    exit(0);\n                    /* no return */\n                }\n                break;\n            }\n            if ((rax_1 == 0x63 || ((rax_1 != 0x63 && cond:0_1) && rax_1 != 0xffffff7e)))\n            {\n                data_60f5c2 = 1;\n                continue;\n            }\n            if ((rax_1 != 0x63 && (!cond:0_1)))\n            {\n                if (rax_1 == 0x73)\n                {\n                    data_60f5c4 = 1;\n                    continue;\n                }\n                else if (rax_1 == 0x74)\n                {\n                    data_60f5c1 = 1;\n                    continue;\n                }\n                else\n                {\n                    if (rax_1 != 0x64)\n                    {\n                        break;\n                    }\n                    data_60f5c3 = 1;\n                    continue;\n                }\n            }\n        }\n        sub_403ac0(0);\n        /* no return */\n    }\n    sub_403ac0(1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x4025a0",
            "funcEndAddr": "0x4025ca",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4025cb",
            "funcStartAddr": "0x4025cb",
            "funcEndAddr": "0x4025ea",
            "decompiledFuncCode": "void sub_4025cb()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_4025ea",
            "funcStartAddr": "0x4025ea",
            "funcEndAddr": "0x402621",
            "decompiledFuncCode": "int64_t sub_4025ea()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_402621",
            "funcStartAddr": "0x402621",
            "funcEndAddr": "0x402678",
            "decompiledFuncCode": "void sub_402621()\n{\n    if (data_60d2a8 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_60d2b0;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_60d2b0 = (rax_1 + 1);\n        *(0x60ce40 + ((rax_1 + 1) << 3))();\n    }\n    sub_4025cb();\n    data_60d2a8 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_402678",
            "funcStartAddr": "0x402678",
            "funcEndAddr": "0x40267d",
            "decompiledFuncCode": "int64_t j_sub_4025ea()\n{\n    /* tailcall */\n    return sub_4025ea();\n}\n\n"
        },
        {
            "funcName": "sub_402680",
            "funcStartAddr": "0x402680",
            "funcEndAddr": "0x40270c",
            "decompiledFuncCode": "uint64_t sub_402680(int64_t* arg1, int64_t arg2)\n{\n    char* r8 = *arg1;\n    if (r8[arg2] == 0x2a)\n    {\n        char* r10_1 = arg1[1];\n        if (r10_1[arg2] == 0)\n        {\n            int64_t r9_1 = arg1[2];\n            int64_t rdx_1 = (arg2 + 1);\n            if (rdx_1 < r9_1)\n            {\n                uint32_t rax_1 = r8[(arg2 + 1)];\n                char rdi = rax_1;\n                if ((rax_1 - 0x30) <= 9)\n                {\n                    uint64_t rax_3 = r10_1[(arg2 + 1)];\n                    if (rax_3 != 0)\n                    {\n                        return 0;\n                    }\n                    while (true)\n                    {\n                        rdx_1 = (rdx_1 + 1);\n                        if (rdx_1 >= r9_1)\n                        {\n                            return rax_3;\n                        }\n                        uint32_t rcx_1 = r8[rdx_1];\n                        rdi = rcx_1;\n                        if ((rcx_1 - 0x30) > 9)\n                        {\n                            break;\n                        }\n                        if (r10_1[rdx_1] != 0)\n                        {\n                            return rax_3;\n                        }\n                    }\n                }\n                if (rdi == 0x5d)\n                {\n                    return (r10_1[rdx_1] ^ 1);\n                }\n            }\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_402710",
            "funcStartAddr": "0x402710",
            "funcEndAddr": "0x402775",
            "decompiledFuncCode": "char* sub_402710(char arg1)\n{\n    char* rax = sub_406180(5);\n    if ((*(&*__ctype_b_loc()[arg1] + 1) & 0x40) == 0)\n    {\n        __sprintf_chk(rax, 1, 5, \"\\%03o\", arg1);\n        return rax;\n    }\n    *rax = arg1;\n    rax[1] = 0;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_402780",
            "funcStartAddr": "0x402780",
            "funcEndAddr": "0x4028ae",
            "decompiledFuncCode": "char* sub_402780(char* arg1, void* arg2)\n{\n    char* rbp = arg1;\n    uint64_t rax_1;\n    rax_1 = ((arg2 + 1) >> 0x3e) != 0;\n    int64_t rdi_1 = ((arg2 + 1) << 2);\n    if ((rdi_1 >= 0 && rax_1 == 0))\n    {\n        char* rax_3 = sub_406180(rdi_1);\n        if (arg2 != 0)\n        {\n            void* r13_1 = (arg2 + rbp);\n            char* r12_1 = rax_3;\n            do\n            {\n                char rbx_1 = *rbp;\n                bool cond:0_1 = rbx_1 > 0xa;\n                void* const rsi;\n                if (rbx_1 == 0xa)\n                {\n                    rsi = &data_407ed2;\n                }\n                else if (cond:0_1)\n                {\n                    rsi = &data_407ecf;\n                    bool cond:1_1 = rbx_1 < 0xc;\n                    if (rbx_1 != 0xc)\n                    {\n                        rsi = &data_407edb;\n                        if ((!cond:1_1))\n                        {\n                            rsi = &data_407ed5;\n                            if (rbx_1 != 0xd)\n                            {\n                                rsi = &data_407eca;\n                                if (rbx_1 != 0x5c)\n                                {\n                                    goto label_402837;\n                                }\n                            }\n                        }\n                    }\n                }\n                else\n                {\n                    rsi = &data_407ecc;\n                    bool cond:2_1 = rbx_1 > 8;\n                    if (rbx_1 != 8)\n                    {\n                        rsi = &data_407ed8;\n                        if ((!cond:2_1))\n                        {\n                            rsi = &data_407ede;\n                            if (rbx_1 != 7)\n                            {\n                            label_402837:\n                                char var_2d;\n                                if ((*(&*__ctype_b_loc()[rbx_1] + 1) & 0x40) == 0)\n                                {\n                                    __sprintf_chk(&var_2d, 1, 5, \"\\%03o\", rbx_1);\n                                    rsi = &var_2d;\n                                }\n                                else\n                                {\n                                    var_2d = rbx_1;\n                                    rsi = &var_2d;\n                                    char var_2c_1 = 0;\n                                }\n                            }\n                        }\n                    }\n                }\n                rbp = &rbp[1];\n                r12_1 = stpcpy(r12_1, rsi);\n            } while (r13_1 != rbp);\n        }\n        return rax_3;\n    }\n    sub_4063d0();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4028b0",
            "funcStartAddr": "0x4018f0",
            "funcEndAddr": "0x402a33",
            "decompiledFuncCode": "uint64_t sub_4028b0(int32_t arg1, char arg2)\n{\n    if (arg1 > 0xb)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t rax_3;\n    switch (arg1)\n    {\n        case 0:\n        {\n            rax_3 = (*__ctype_b_loc()[arg2] & 8);\n            break;\n        }\n        case 1:\n        {\n            rax_3 = (*__ctype_b_loc()[arg2] & 0x400);\n            break;\n        }\n        case 2:\n        {\n            rax_3 = (*__ctype_b_loc()[arg2] & 1);\n            break;\n        }\n        case 3:\n        {\n            rax_3 = (*__ctype_b_loc()[arg2] & 2);\n            break;\n        }\n        case 4:\n        {\n            rax_3 = (*__ctype_b_loc()[arg2] & 0x800);\n            break;\n        }\n        case 5:\n        {\n            rax_3 = (*__ctype_b_loc()[arg2] & 0x8000);\n            break;\n        }\n        case 6:\n        {\n            rax_3 = (*__ctype_b_loc()[arg2] & 0x200);\n            break;\n        }\n        case 7:\n        {\n            rax_3 = (*__ctype_b_loc()[arg2] & 0x4000);\n            break;\n        }\n        case 8:\n        {\n            rax_3 = (*__ctype_b_loc()[arg2] & 4);\n            break;\n        }\n        case 9:\n        {\n            rax_3 = (*__ctype_b_loc()[arg2] & 0x2000);\n            break;\n        }\n        case 0xa:\n        {\n            rax_3 = (*__ctype_b_loc()[arg2] & 0x100);\n            break;\n        }\n        case 0xb:\n        {\n            rax_3 = (*__ctype_b_loc()[arg2] & 0x1000);\n            break;\n        }\n    }\n    rax_3 = rax_3 != 0;\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_402a40",
            "funcStartAddr": "0x4018f5",
            "funcEndAddr": "0x402bc0",
            "decompiledFuncCode": "uint64_t sub_402a40(int64_t* arg1)\n{\n    int64_t r13 = 0;\n    arg1[6] = 0;\n    uint64_t rax = *arg1;\n    arg1[4] = 0;\n    int32_t* rbp = *(rax + 8);\n    *(arg1 + 0x32) = 0;\n    if (rbp != 0)\n    {\n        while (true)\n        {\n            if (*rbp > 4)\n            {\n                abort();\n                /* no return */\n            }\n            rax = *rbp;\n            int64_t rbx_1;\n            switch (rax)\n            {\n                case 0:\n                {\n                    rbx_1 = 1;\n                    break;\n                }\n                case 1:\n                {\n                    uint32_t rax_1 = *(rbp + 0x11);\n                    uint32_t rdx_2 = rbp[4];\n                    if (rax_1 < rdx_2)\n                    {\n                        goto label_402bbb;\n                    }\n                    rax = ((rax_1 - rdx_2) + 1);\n                    rbx_1 = rax;\n                    break;\n                }\n                case 2:\n                {\n                    *(arg1 + 0x31) = 1;\n                    int32_t r15_1 = rbp[4];\n                    int32_t r14_1 = 0;\n                    rbx_1 = 0;\n                    do\n                    {\n                        rax = sub_4028b0(r15_1, r14_1);\n                        rbx_1 = (rbx_1 - -1);\n                        r14_1 = (r14_1 + 1);\n                    } while (r14_1 != 0x100);\n                    if ((r15_1 != 6 && r15_1 != 0xa))\n                    {\n                        *(arg1 + 0x32) = 1;\n                    }\n                    break;\n                }\n                case 3:\n                {\n                    char rcx_1 = rbp[4];\n                    rax = 0;\n                    rbx_1 = 0;\n                    do\n                    {\n                        int64_t rdx_1;\n                        rdx_1 = rcx_1 == rax;\n                        rax = (rax + 1);\n                        rbx_1 = (rbx_1 + rdx_1);\n                    } while (rax != 0x100);\n                    arg1[6] = 1;\n                    break;\n                }\n                case 4:\n                {\n                    rbx_1 = *(rbp + 0x18);\n                    if (rbx_1 == 0)\n                    {\n                        arg1[5] = rbp;\n                        arg1[4] = (arg1[4] + 1);\n                    label_402ad0:\n                        rbp = *(rbp + 8);\n                        if (rbp == 0)\n                        {\n                            break;\n                        }\n                        continue;\n                    }\n                    break;\n                }\n            }\n            int64_t rbx_2 = (rbx_1 + r13);\n            bool c_1 = (rbx_1 + r13) < rbx_1;\n            r13 = rbx_2;\n            if (c_1)\n            {\n            label_402ba2:\n                error(1, 0, dcgettext(nullptr, \"too many characters in set\", 5));\n            label_402bbb:\n                __assert_fail(\"p->u.range.last_char >= p->u.ran\u2026\", \"src/tr.c\", 0x4ee, \"get_spec_stats\");\n                /* no return */\n            }\n            if (rbx_2 != -1)\n            {\n                goto label_402ad0;\n            }\n            goto label_402ba2;\n        }\n    }\n    arg1[3] = r13;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_402bc0",
            "funcStartAddr": "0x4018fa",
            "funcEndAddr": "0x402e01",
            "decompiledFuncCode": "uint64_t sub_402bc0(void** arg1, int32_t* arg2)\n{\n    int64_t rax = arg1[2];\n    int32_t* rbp_1;\n    uint32_t r13;\n    while (true)\n    {\n        if (arg2 != 0)\n        {\n            *arg2 = 2;\n        }\n        if (rax == -2)\n        {\n            rbp_1 = *(*arg1 + 8);\n            arg1[2] = -1;\n            arg1[1] = rbp_1;\n        }\n        else\n        {\n            rbp_1 = arg1[1];\n        }\n        if (rbp_1 == 0)\n        {\n            r13 = -1;\n        }\n        else\n        {\n            if (*rbp_1 > 4)\n            {\n                abort();\n                /* no return */\n            }\n            switch (*rbp_1)\n            {\n                case 0:\n                case 3:\n                {\n                    int64_t rax_2 = *(rbp_1 + 8);\n                    r13 = rbp_1[4];\n                    arg1[2] = -1;\n                    arg1[1] = rax_2;\n                    break;\n                }\n                case 1:\n                {\n                    int64_t rdx_1 = arg1[2];\n                    uint64_t rax_9 = (rdx_1 + 1);\n                    if (rdx_1 == -1)\n                    {\n                        rax_9 = rbp_1[4];\n                    }\n                    uint64_t rdx_2 = *(rbp_1 + 0x11);\n                    arg1[2] = rax_9;\n                    r13 = rax_9;\n                    if (rdx_2 == rax_9)\n                    {\n                        break;\n                    }\n                    break;\n                }\n                case 2:\n                {\n                    int32_t r12_1 = rbp_1[4];\n                    if (arg2 != 0)\n                    {\n                        if (r12_1 == 6)\n                        {\n                            *arg2 = 0;\n                        }\n                        else if (r12_1 == 0xa)\n                        {\n                            *arg2 = 1;\n                        }\n                    }\n                    int64_t rbx_1 = arg1[2];\n                    if (rbx_1 == -1)\n                    {\n                        int32_t rbx_4 = 0;\n                        while (true)\n                        {\n                            if (sub_4028b0(r12_1, rbx_4) != 0)\n                            {\n                                rbx_1 = rbx_4;\n                                arg1[2] = rbx_1;\n                                break;\n                            }\n                            rbx_4 = (rbx_4 + 1);\n                            if (rbx_4 == 0x100)\n                            {\n                                __assert_fail(\"i < N_CHARS\", \"src/tr.c\", 0x434, \"get_next\");\n                                /* no return */\n                            }\n                        }\n                    }\n                    if (sub_4028b0(r12_1, rbx_1) == 0)\n                    {\n                        __assert_fail(\"is_char_class_member (p->u.char_\u2026\", \"src/tr.c\", 0x437, \"get_next\");\n                        /* no return */\n                    }\n                    r13 = rbx_1;\n                    int32_t rbx_2 = (rbx_1 + 1);\n                    if (rbx_2 <= 0xff)\n                    {\n                        do\n                        {\n                            if (sub_4028b0(r12_1, rbx_2) != 0)\n                            {\n                                arg1[2] = rbx_2;\n                                return r13;\n                            }\n                            rbx_2 = (rbx_2 + 1);\n                        } while (rbx_2 != 0x100);\n                    }\n                    break;\n                    break;\n                }\n                case 4:\n                {\n                    int64_t rax_4 = *(rbp_1 + 0x18);\n                    if (rax_4 == 0)\n                    {\n                        int64_t rax_5 = *(rbp_1 + 8);\n                        arg1[2] = -1;\n                        arg1[1] = rax_5;\n                        rax = -1;\n                        continue;\n                    }\n                    else\n                    {\n                        int64_t rcx_1 = arg1[2];\n                        r13 = rbp_1[4];\n                        int64_t rdx_3 = (rcx_1 + 1);\n                        if (rcx_1 == -1)\n                        {\n                            rdx_3 = 1;\n                        }\n                        arg1[2] = rdx_3;\n                        if (rax_4 == rdx_3)\n                        {\n                            break;\n                        }\n                    }\n                    break;\n                }\n            }\n        }\n        return r13;\n    }\n    int64_t rax_10 = *(rbp_1 + 8);\n    arg1[2] = -1;\n    arg1[1] = rax_10;\n    return r13;\n}\n\n"
        },
        {
            "funcName": "sub_402e10",
            "funcStartAddr": "0x402e10",
            "funcEndAddr": "0x402e70",
            "decompiledFuncCode": "ssize_t sub_402e10()\n{\n    int64_t rbx;\n    int64_t var_8 = rbx;\n    uint64_t rsi_1;\n    int64_t rdi;\n    rsi_1 = error(1, *__errno_location(), dcgettext(nullptr, \"read error\", 5));\n    ssize_t rax_3 = sub_405b80(0, rdi, rsi_1);\n    if (rax_3 == -1)\n    {\n        uint64_t rsi_3;\n        char* rdi_1;\n        rsi_3 = sub_402e10();\n        /* tailcall */\n        return sub_402e70(rdi_1, rsi_3);\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_402e70",
            "funcStartAddr": "0x402e70",
            "funcEndAddr": "0x402f40",
            "decompiledFuncCode": "ssize_t sub_402e70(char* arg1, uint64_t arg2)\n{\n    ssize_t rax_1;\n    while (true)\n    {\n        rax_1 = sub_405b80(0, arg1, arg2);\n        if (rax_1 == -1)\n        {\n            uint64_t rsi_2;\n            char* rdi_1;\n            rsi_2 = sub_402e10();\n            /* tailcall */\n            return sub_402f40(rdi_1, rsi_2);\n        }\n        if (rax_1 == 0)\n        {\n            break;\n        }\n        int64_t rdx_3;\n        ssize_t rdi;\n        if (*(*arg1 + 0x60d3c0) == 0)\n        {\n            ssize_t rdx_4 = 0;\n            rdi = 1;\n            if (1 != rax_1)\n            {\n                while (*(arg1[(rdx_4 + 1)] + 0x60d3c0) == 0)\n                {\n                    rdx_4 = rdi;\n                    rdi = (rdx_4 + 1);\n                    if (rdi == rax_1)\n                    {\n                        break;\n                    }\n                }\n            }\n            if ((1 == rax_1 || (1 != rax_1 && *(arg1[(rdx_4 + 1)] + 0x60d3c0) == 0)))\n            {\n                rdi = rax_1;\n            }\n            rdx_3 = (rdx_4 + 2);\n            if (rax_1 <= rdx_3)\n            {\n                rax_1 = rdi;\n                break;\n            }\n        }\n        else\n        {\n            rdi = 0;\n            rdx_3 = 1;\n            if (rax_1 == 1)\n            {\n                continue;\n            }\n        }\n        do\n        {\n            uint64_t rsi_1 = arg1[rdx_3];\n            if (*(rsi_1 + 0x60d3c0) == 0)\n            {\n                arg1[rdi] = rsi_1;\n                rdi = (rdi + 1);\n            }\n            rdx_3 = (rdx_3 + 1);\n        } while (rax_1 > rdx_3);\n        if (rdi != 0)\n        {\n            rax_1 = rdi;\n            break;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_402f40",
            "funcStartAddr": "0x402f40",
            "funcEndAddr": "0x402f90",
            "decompiledFuncCode": "ssize_t sub_402f40(char* arg1, uint64_t arg2)\n{\n    ssize_t rax = sub_405b80(0, arg1, arg2);\n    if (rax == -1)\n    {\n        sub_402e10();\n        /* tailcall */\n        return sub_402f90();\n    }\n    char* rdi = arg1;\n    void* rcx = &arg1[rax];\n    if (rax != 0)\n    {\n        do\n        {\n            uint64_t rdx_1 = *rdi;\n            rdi = &rdi[1];\n            rdi[-1] = *(rdx_1 + 0x60d2c0);\n        } while (rcx != rdi);\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_402f90",
            "funcStartAddr": "0x402f90",
            "funcEndAddr": "0x402fad",
            "decompiledFuncCode": "int64_t sub_402f90() __noreturn\n{\n    __assert_fail(\"list->tail\", \"src/tr.c\", 0x2cf, \"append_repeated_char\");\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_402fb0",
            "funcStartAddr": "0x402fb0",
            "funcEndAddr": "0x403008",
            "decompiledFuncCode": "int32_t* sub_402fb0(void* arg1, char arg2)\n{\n    int32_t* rax = sub_406180(0x20);\n    void* rdx = *(arg1 + 8);\n    *(rax + 8) = 0;\n    *rax = 0;\n    rax[4] = arg2;\n    if (rdx == 0)\n    {\n        __assert_fail(\"list->tail\", \"src/tr.c\", 0x287, \"append_normal_char\");\n        /* no return */\n    }\n    *(rdx + 8) = rax;\n    *(arg1 + 8) = rax;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_403010",
            "funcStartAddr": "0x403010",
            "funcEndAddr": "0x40385d",
            "decompiledFuncCode": "uint64_t sub_403010(char* arg1, void* arg2)\n{\n    uint64_t rax = strlen(arg1);\n    char* rax_1 = sub_406180(rax);\n    char* var_58 = rax_1;\n    char* rax_2 = sub_406350(rax, 1);\n    char* rbx_1 = rax_2;\n    char rax_3 = *arg1;\n    uint64_t var_b8_1;\n    if (rax_3 == 0)\n    {\n        var_b8_1 = 0;\n    }\n    else\n    {\n        int32_t rbp_1 = 0;\n        int32_t r10_1 = 0;\n        char* r11_1 = arg1;\n        while (true)\n        {\n            uint64_t rdx_1 = r10_1;\n            uint64_t rsi = (rbp_1 + 1);\n            r10_1 = (r10_1 + 1);\n            uint32_t r13_1 = r11_1[rsi];\n            char* r15_1 = &rax_1[rdx_1];\n            if (rax_3 != 0x5c)\n            {\n                *r15_1 = rax_3;\n                rax_3 = r13_1;\n                rbp_1 = rsi;\n                if (rax_3 == 0)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                char* r14_1 = &rbx_1[rdx_1];\n                *r14_1 = 1;\n                bool cond:1_1 = r13_1 <= 0x62;\n                int32_t rax_4;\n                uint64_t r14_2;\n                if (r13_1 == 0x62)\n                {\n                    r14_2 = 8;\n                    rax_4 = (rbp_1 + 2);\n                }\n                else if ((!cond:1_1))\n                {\n                    bool cond:3_1 = r13_1 > 0x72;\n                    if (r13_1 == 0x72)\n                    {\n                        r14_2 = 0xd;\n                        rax_4 = (rbp_1 + 2);\n                    }\n                    else if (cond:3_1)\n                    {\n                        if (r13_1 == 0x74)\n                        {\n                            r14_2 = 9;\n                            rax_4 = (rbp_1 + 2);\n                        }\n                        else\n                        {\n                            r14_2 = 0xb;\n                            rax_4 = (rbp_1 + 2);\n                            if (r13_1 != 0x76)\n                            {\n                                goto label_403329;\n                            }\n                        }\n                    }\n                    else if (r13_1 == 0x66)\n                    {\n                        r14_2 = 0xc;\n                        rax_4 = (rbp_1 + 2);\n                    }\n                    else\n                    {\n                        r14_2 = 0xa;\n                        rax_4 = (rbp_1 + 2);\n                        if (r13_1 != 0x6e)\n                        {\n                            goto label_403329;\n                        }\n                    }\n                }\n                else if (r13_1 > 0x37)\n                {\n                    if (r13_1 == 0x5c)\n                    {\n                        r14_2 = 0x5c;\n                        rax_4 = (rbp_1 + 2);\n                    }\n                    else\n                    {\n                        r14_2 = 7;\n                        rax_4 = (rbp_1 + 2);\n                        if (r13_1 != 0x61)\n                        {\n                        label_403329:\n                            r14_2 = r13_1;\n                            rax_4 = (rbp_1 + 2);\n                        }\n                    }\n                }\n                else if (r13_1 >= 0x30)\n                {\n                    uint64_t rdx_14 = (rbp_1 + 2);\n                    r14_2 = (r13_1 - 0x30);\n                    int32_t r8_3 = r11_1[rdx_14];\n                    rax_4 = rdx_14;\n                    int32_t rdx_15 = (r8_3 - 0x30);\n                    if (rdx_15 <= 7)\n                    {\n                        r14_2 = (rdx_15 + (r14_2 << 3));\n                        int32_t r9_1 = r11_1[(rbp_1 + 3)];\n                        rax_4 = (rbp_1 + 3);\n                        int32_t rdx_16 = (r9_1 - 0x30);\n                        if (rdx_16 <= 7)\n                        {\n                            if ((rdx_16 + (r14_2 << 3)) > 0xff)\n                            {\n                                char var_98;\n                                var_98 = r11_1;\n                                char var_9c;\n                                var_9c = r10_1;\n                                char* var_a8;\n                                var_a8 = r9_1;\n                                char* rax_45;\n                                int64_t rdx_17;\n                                rax_45 = dcgettext(nullptr, \"warning: the ambiguous octal esc\u2026\", 5);\n                                uint64_t rcx_13 = r13_1;\n                                int64_t var_c0_1 = rdx_17;\n                                uint64_t var_c8_1 = var_a8;\n                                uint64_t var_d0_1 = r8_3;\n                                uint64_t var_d8_1 = rcx_13;\n                                error(0, 0, rax_45, rcx_13);\n                                rax_4 = (rbp_1 + 3);\n                                r10_1 = var_9c;\n                                r11_1 = var_98;\n                            }\n                            else\n                            {\n                                r14_2 = (rdx_16 + (r14_2 << 3));\n                                rax_4 = (rbp_1 + 4);\n                            }\n                        }\n                    }\n                }\n                else\n                {\n                    if (r13_1 != 0)\n                    {\n                        goto label_403329;\n                    }\n                    error(0, 0, dcgettext(nullptr, \"warning: an unescaped backslash \u2026\", 5));\n                    *r14_1 = 0;\n                    rax_4 = (rbp_1 + 1);\n                    r14_2 = 0x5c;\n                }\n                uint64_t rax_5 = rax_4;\n                *r15_1 = r14_2;\n                rbp_1 = rax_5;\n                rax_3 = r11_1[rax_5];\n                if (rax_3 == 0)\n                {\n                    break;\n                }\n            }\n        }\n        var_b8_1 = r10_1;\n    }\n    char* rbp_2 = rax_1;\n    int64_t r15_2 = 0;\n    uint64_t var_48 = var_b8_1;\n    char var_98_1;\n    while (true)\n    {\n        int64_t r8_1 = (r15_2 + 2);\n        if (r8_1 >= var_b8_1)\n        {\n            if (r15_2 < var_b8_1)\n            {\n                void* r14_8 = &rax_1[r15_2];\n                void* r12_8 = &rax_1[var_b8_1];\n                do\n                {\n                    char rsi_10 = *r14_8;\n                    r14_8 = (r14_8 + 1);\n                    sub_402fb0(arg2, rsi_10);\n                } while (r12_8 != r14_8);\n            }\n            var_98_1 = 1;\n            break;\n        }\n        char rax_9 = rbp_2[(r15_2 + 1)];\n        int64_t r13_2 = (r15_2 + 1);\n        if (rbp_2[r15_2] == 0x5b)\n        {\n            char rax_10 = rbx_1[r15_2];\n            var_98_1 = rax_10;\n            if (rax_10 != 0)\n            {\n                goto label_40311a;\n            }\n            char* rax_25;\n            char* rcx_5;\n            char* rsi_9;\n            char* r12_4;\n            char* r13_6;\n            if (((rax_9 == 0x3a || rax_9 == 0x3d) && rbx_1[r13_2] == 0))\n            {\n                char rdx_7 = rax_1[r13_2];\n                int64_t rsi_3 = (var_b8_1 - 1);\n                if (r8_1 < rsi_3)\n                {\n                    int64_t r12_3 = r8_1;\n                    int64_t rax_20;\n                    do\n                    {\n                        rax_20 = (r12_3 + 1);\n                        if ((rdx_7 == rbp_2[r12_3] && (rbp_2[(r12_3 + 1)] == 0x5d && (rbx_1[(rax_20 - 1)] == 0 && rbx_1[rax_20] == 0))))\n                        {\n                            void* rax_22 = &rax_1[r8_1];\n                            uint64_t r14_5 = ((-2 - r15_2) + r12_3);\n                            if ((-2 - r15_2) != (-r12_3))\n                            {\n                                int32_t* rax_40;\n                                void* rdx_12;\n                                if (rdx_7 == 0x3a)\n                                {\n                                    int64_t rbx_2 = 0;\n                                    int32_t rax_35;\n                                    uint64_t rax_36;\n                                    do\n                                    {\n                                        char* rbp_3 = *((rbx_2 << 3) + 0x4083a0);\n                                        rax_35 = strncmp(rax_22, rbp_3, r14_5);\n                                        if (rax_35 == 0)\n                                        {\n                                            rax_36 = strlen(rbp_3);\n                                            if (r14_5 == rax_36)\n                                            {\n                                                break;\n                                            }\n                                        }\n                                        rbx_2 = (rbx_2 + 1);\n                                    } while (rbx_2 != 0xc);\n                                    if ((!(rax_35 == 0 && r14_5 == rax_36)))\n                                    {\n                                        if (sub_402680(&var_58, r8_1) != 0)\n                                        {\n                                            goto label_403180;\n                                        }\n                                        uint64_t rax_38 = sub_402780(rax_22, r14_5);\n                                        r12_4 = rax_38;\n                                        rsi_9 = \"invalid character class %s\";\n                                        r13_6 = sub_405b60(rax_38);\n                                        goto label_403615;\n                                    }\n                                    rax_40 = sub_406180(0x20);\n                                    *(rax_40 + 8) = 0;\n                                    rdx_12 = *(arg2 + 8);\n                                    *rax_40 = 2;\n                                    rax_40[4] = rbx_2;\n                                    if (rdx_12 == 0)\n                                    {\n                                        __assert_fail(\"list->tail\", \"src/tr.c\", 0x2bb, \"append_char_class\");\n                                        /* no return */\n                                    }\n                                }\n                                else\n                                {\n                                    if (r14_5 != 1)\n                                    {\n                                        if (sub_402680(&var_58, r8_1) != 0)\n                                        {\n                                            goto label_403180;\n                                        }\n                                        r12_4 = sub_402780(rax_22, r14_5);\n                                        rax_25 = dcgettext(nullptr, \"%s: equivalence class operand mu\u2026\", 5);\n                                        rcx_5 = r12_4;\n                                        goto label_403465;\n                                    }\n                                    rax_40 = sub_406180(0x20);\n                                    *(rax_40 + 8) = 0;\n                                    char rdx_13 = *rax_22;\n                                    *rax_40 = 3;\n                                    rax_40[4] = rdx_13;\n                                    rdx_12 = *(arg2 + 8);\n                                    if (rdx_12 == 0)\n                                    {\n                                        __assert_fail(\"list->tail\", \"src/tr.c\", 0x2e5, \"append_equiv_class\");\n                                        /* no return */\n                                    }\n                                }\n                                *(rdx_12 + 8) = rax_40;\n                                r13_2 = (r12_3 + 2);\n                                *(arg2 + 8) = rax_40;\n                                goto label_403285;\n                            }\n                            char const* const rsi_12 = \"missing character class name '[:\u2026\";\n                            if (rdx_7 != 0x3a)\n                            {\n                                rsi_12 = \"missing equivalence class charac\u2026\";\n                            }\n                            error(0, 0, dcgettext(nullptr, rsi_12, 5));\n                            goto label_40353e;\n                        }\n                        r12_3 = rax_20;\n                    } while (rsi_3 > rax_20);\n                }\n            }\n        label_403180:\n            if (rbp_2[r8_1] != 0x2a)\n            {\n                goto label_40311a;\n            }\n            if (rbx_1[r8_1] != 0)\n            {\n                goto label_40311a;\n            }\n            int64_t rax_11 = (r15_2 + 3);\n            if (rax_11 >= var_b8_1)\n            {\n                goto label_40311a;\n            }\n            if (rbx_1[(r15_2 + 3)] != 0)\n            {\n                goto label_40311a;\n            }\n            void* r14_3 = &rbp_2[rax_11];\n            bool rdx_2 = *r14_3;\n            int64_t var_68;\n            int64_t r12_2;\n            int64_t r15_3;\n            if (rdx_2 == 0x5d)\n            {\n                r12_2 = rax_11;\n            }\n            else\n            {\n                while (true)\n                {\n                    r12_2 = (rax_11 + 1);\n                    if (r12_2 >= var_b8_1)\n                    {\n                        break;\n                    }\n                    if (rbx_1[(rax_11 + 1)] != 0)\n                    {\n                        break;\n                    }\n                    if (rbp_2[r12_2] == 0x5d)\n                    {\n                        break;\n                    }\n                    rax_11 = r12_2;\n                }\n                if (r12_2 >= var_b8_1)\n                {\n                    goto label_40311a;\n                }\n                int64_t r13_3 = (!r13_2);\n                void* r13_4 = (r13_3 + rax_11);\n                if (r13_3 != (-rax_11))\n                {\n                    uint32_t rdx_3 = rdx_2 != 0x30;\n                    int64_t var_60;\n                    int32_t rax_12 = sub_406410(r14_3, &var_60, ((rdx_3 + rdx_3) + 8), &var_68, nullptr);\n                    if (rax_12 == 0)\n                    {\n                        r15_3 = var_68;\n                    }\n                    if (((rax_12 != 0 || (rax_12 == 0 && r15_3 == -1)) || ((rax_12 == 0 && r15_3 != -1) && var_60 != (r14_3 + r13_4))))\n                    {\n                        char* rax_47 = sub_402780(r14_3, r13_4);\n                        r12_4 = rax_47;\n                        rsi_9 = \"invalid repeat count %s in [c*n]\u2026\";\n                        r13_6 = sub_405b60(rax_47);\n                    label_403615:\n                        rax_25 = dcgettext(nullptr, rsi_9, 5);\n                        rcx_5 = r13_6;\n                    label_403465:\n                        error(0, 0, rax_25, rcx_5);\n                        free(r12_4);\n                        break;\n                    }\n                    goto label_40323d;\n                }\n            }\n            var_68 = 0;\n            r15_3 = 0;\n        label_40323d:\n            int32_t* rax_14 = sub_406180(0x20);\n            *(rax_14 + 8) = 0;\n            rax_14[4] = rax_9;\n            *rax_14 = 4;\n            void* rdx_5 = *(arg2 + 8);\n            *(rax_14 + 0x18) = r15_3;\n            if (rdx_5 == 0)\n            {\n                sub_402f90();\n                /* no return */\n            }\n            *(rdx_5 + 8) = rax_14;\n            r13_2 = (r12_2 + 1);\n            *(arg2 + 8) = rax_14;\n        label_403285:\n            rbp_2 = var_58;\n            rbx_1 = rax_2;\n            var_b8_1 = var_48;\n        }\n        else\n        {\n        label_40311a:\n            char rsi_1 = rax_1[r15_2];\n            char rax_27;\n            if (rax_9 == 0x2d)\n            {\n                rax_27 = rbx_1[r13_2];\n                var_98_1 = rax_27;\n                if (rax_27 == 0)\n                {\n                    char r14_6 = rax_1[r8_1];\n                    if (r14_6 < rsi_1)\n                    {\n                        char* rax_30 = sub_402710(rsi_1);\n                        char* rax_31 = sub_402710(r14_6);\n                        error(0, 0, dcgettext(nullptr, \"range-endpoints of '%s-%s' are i\u2026\", 5), rax_30, rax_31);\n                        free(rax_30);\n                        free(rax_31);\n                        break;\n                    }\n                    int32_t* rax_29 = sub_406180(0x20);\n                    *(rax_29 + 8) = 0;\n                    void* rdx_9 = *(arg2 + 8);\n                    *rax_29 = 1;\n                    rax_29[4] = rsi_1;\n                    *(rax_29 + 0x11) = r14_6;\n                    if (rdx_9 == 0)\n                    {\n                        __assert_fail(\"list->tail\", \"src/tr.c\", 0x2a5, \"append_range\");\n                        /* no return */\n                    }\n                    *(rdx_9 + 8) = rax_29;\n                    r13_2 = (r15_2 + 3);\n                    *(arg2 + 8) = rax_29;\n                }\n            }\n            if ((rax_9 != 0x2d || (rax_9 == 0x2d && rax_27 != 0)))\n            {\n                sub_402fb0(arg2, rsi_1);\n            }\n        }\n        r15_2 = r13_2;\n    }\nlabel_40353e:\n    free(rbp_2);\n    free(rbx_1);\n    return var_98_1;\n}\n\n"
        },
        {
            "funcName": "sub_403860",
            "funcStartAddr": "0x403860",
            "funcEndAddr": "0x4038b9",
            "decompiledFuncCode": "uint64_t sub_403860(void** arg1, char arg2, char* arg3)\n{\n    arg1[2] = -2;\n    uint64_t rax_2;\n    while (true)\n    {\n        rax_2 = sub_402bc0(arg1, nullptr);\n        if (rax_2 == 0xffffffff)\n        {\n            break;\n        }\n        arg3[rax_2] = 1;\n    }\n    if (arg2 != 0)\n    {\n        char* rdx = arg3;\n        rax_2 = &arg3[0x100];\n        do\n        {\n            *rdx = (*rdx ^ 1);\n            rdx = &rdx[1];\n        } while (rdx != rax_2);\n    }\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_4038c0",
            "funcStartAddr": "0x4038c0",
            "funcEndAddr": "0x403ab3",
            "decompiledFuncCode": "char* sub_4038c0(int64_t arg1)\n{\n    char* r13 = nullptr;\n    int32_t rbp = 0x7fffffff;\n    char* rbx = nullptr;\n    char rax_3;\n    char* rax_7;\n    void* rdx_2;\n    char* rdi;\n    void* r14_1;\n    bool cond:2_1;\n    while (true)\n    {\n        if (rbx >= r13)\n        {\n            goto label_4039ed;\n        }\n        if ((rbp != 0x7fffffff && rbp == rbx[0x60d5c0]))\n        {\n            while (true)\n            {\n            label_403a1e:\n                rbx = &rbx[1];\n                if (rbx == r13)\n                {\n                    break;\n                }\n                if (rbx[0x60d5c0] != rbp)\n                {\n                    rbp = 0x7fffffff;\n                    break;\n                }\n            }\n            continue;\n        }\n    label_4038ff:\n        rdi = rbx;\n        uint64_t rdx_1 = rbx[0x60d5c0];\n        rax_3 = rdx_1;\n        if (*(rdx_1 + 0x60d4c0) == 0)\n        {\n            break;\n        }\n        while (true)\n        {\n            rbx = rdi;\n            r14_1 = 1;\n            rdx_2 = nullptr;\n        label_403920:\n            rbp = rax_3;\n            if ((rbx != 0 && rbx[0x60d5bf] == rax_3))\n            {\n                r14_1 = rdx_2;\n            }\n            rbx = &rbx[1];\n            if ((r14_1 != 0 && r14_1 != fwrite_unlocked(&rdi[0x60d5c0], 1, r14_1, stdout)))\n            {\n            label_403974:\n                rbx = dcgettext(nullptr, \"write error\", 5);\n                cond:2_1 = false;\n                rax_7 = error(1, *__errno_location(), rbx);\n            label_40398d:\n                if ((!cond:2_1))\n                {\n                    rbx = &rax_7[1];\n                    uint64_t rdx_5 = rbx[0x60d5c0];\n                    rax_3 = rdx_5;\n                    if (*(rdx_5 + 0x60d4c0) == 0)\n                    {\n                        rbx = r13;\n                    }\n                    else if (rbx < r13)\n                    {\n                        goto label_403a80;\n                    }\n                }\n                uint64_t rbp_2 = (r13 - rdi);\n                if ((r13 != rdi && rbp_2 != fwrite_unlocked(&rdi[0x60d5c0], 1, rbp_2, stdout)))\n                {\n                    goto label_403974;\n                }\n                rbp = 0x7fffffff;\n                if (r13 > rbx)\n                {\n                    goto label_4038ff;\n                }\n            label_4039ed:\n                char* rax_9 = arg1(0x60d5c0, 0x2000);\n                r13 = rax_9;\n                if (rax_9 == 0)\n                {\n                    return rax_9;\n                }\n                rbx = nullptr;\n                if (rbp == 0x7fffffff)\n                {\n                    rdi = nullptr;\n                    uint64_t rdx_7 = data_60d5c0;\n                    rax_3 = rdx_7;\n                    if (*(rdx_7 + 0x60d4c0) == 0)\n                    {\n                        goto label_403a5a;\n                    }\n                    continue;\n                }\n            }\n            if (r13 <= rbx)\n            {\n                break;\n            }\n            if (rbp != rbx[0x60d5c0])\n            {\n                goto label_4038ff;\n            }\n            goto label_403a1e;\n        }\n    }\nlabel_403a5a:\n    rax_7 = rdi;\n    while (true)\n    {\n        rbx = &rax_7[2];\n        cond:2_1 = rbx != r13;\n        if (rbx >= r13)\n        {\n            goto label_40398d;\n        }\n        uint64_t rdx_8 = rbx[0x60d5c0];\n        rax_3 = rdx_8;\n        if (*(rdx_8 + 0x60d4c0) != 0)\n        {\n            break;\n        }\n        rax_7 = rbx;\n    }\nlabel_403a80:\n    rdx_2 = (rbx - rdi);\n    r14_1 = (rdx_2 + 1);\n    goto label_403920;\n}\n\n"
        },
        {
            "funcName": "sub_403ac0",
            "funcStartAddr": "0x403ac0",
            "funcEndAddr": "0x403e3d",
            "decompiledFuncCode": "int64_t sub_403ac0(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_60f5d8;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [OPTION]... SET1 [SET2\u2026\", 5), rbp);\n        fputs_unlocked(dcgettext(nullptr, \"Translate, squeeze, and/or delet\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nSETs are specified as strings \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  \\v              vertical tab\\n\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  [:graph:]       all printable \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nTranslation occurs if -d is no\u2026\", 5), stdout);\n        void* const var_88 = &data_407f51;\n        void* const* rax_11 = &var_88;\n        void* const var_78_1 = \"coreutils\";\n        void* const var_70_1 = \"Multi-call invocation\";\n        void* const var_68_1 = \"sha224sum\";\n        void* const var_60_1 = \"sha2 utilities\";\n        void* const var_58_1 = \"sha256sum\";\n        void* const var_50_1 = \"sha2 utilities\";\n        void* const var_48_1 = \"sha384sum\";\n        void* const var_40_1 = \"sha2 utilities\";\n        void* const var_38_1 = \"sha512sum\";\n        void* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_11 = &rax_11[2];\n            void* const rdi_9 = *rax_11;\n            c_1 = false;\n            z_1 = (rdi_9 & rdi_9) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            void* const rsi_9 = &data_407f4e;\n            int64_t rcx_2 = 3;\n            while (rcx_2 != 0)\n            {\n                char temp0_1 = *rsi_9;\n                char temp1_1 = *rdi_9;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_9 = (rsi_9 + 1);\n                rdi_9 = (rdi_9 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        void* const rbp_1 = rax_11[1];\n        char* rax_22;\n        int32_t rax_23;\n        void* const r12_1;\n        if (rbp_1 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_5;\n            uint64_t r8_2;\n            ssize_t r9_2;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_22 = setlocale(5, nullptr, rdx_5, rcx_5, r8_2, r9_2, var_88, \"test invocation\");\n            if (rax_22 != 0)\n            {\n                rax_23 = strncmp(rax_22, &data_407fd5, 3);\n                if (rax_23 != 0)\n                {\n                    rbp_1 = &data_407f4e;\n                }\n            }\n            if ((rax_22 == 0 || (rax_22 != 0 && rax_23 == 0)))\n            {\n                rbp_1 = &data_407f4e;\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", &data_407f4e);\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_3;\n            uint64_t r8_1;\n            ssize_t r9_1;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_14 = setlocale(5, nullptr, rdx_3, rcx_3, r8_1, r9_1, var_88, \"test invocation\");\n            if (rax_14 == 0)\n            {\n                goto label_403d30;\n            }\n            if (strncmp(rax_14, &data_407fd5, 3) == 0)\n            {\n                goto label_403d30;\n            }\n        }\n        if ((((rbp_1 == 0 && rax_22 != 0) && rax_23 != 0) || rbp_1 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), &data_407f4e);\n        label_403d30:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", &data_407f4e);\n            if (rbp_1 != &data_407f4e)\n            {\n                r12_1 = &data_40aa04[0x1b];\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_1, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_403e40",
            "funcStartAddr": "0x403e40",
            "funcEndAddr": "0x403e48",
            "decompiledFuncCode": "int64_t sub_403e40(int64_t arg1)\n{\n    data_60f5d0 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_403e50",
            "funcStartAddr": "0x403e50",
            "funcEndAddr": "0x403e58",
            "decompiledFuncCode": "int64_t sub_403e50(char arg1)\n{\n    data_60f5c8 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_403e60",
            "funcStartAddr": "0x403e60",
            "funcEndAddr": "0x403efe",
            "decompiledFuncCode": "void sub_403e60(void* arg1)\n{\n    int32_t rax = sub_4076a0(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_60f5c8 == 0 || (data_60f5c8 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_60f5d0;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_4059b0(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_60f5c8 != 0) && *rax_1 == 0x20)) && sub_4076a0(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_60d218);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_403f00",
            "funcStartAddr": "0x403f00",
            "funcEndAddr": "0x403f05",
            "decompiledFuncCode": "int64_t sub_403f00(int32_t arg1, int64_t arg2, off64_t arg3, int32_t arg4)\n{\n    /* tailcall */\n    return posix_fadvise(arg1, arg2, arg3, arg4);\n}\n\n"
        },
        {
            "funcName": "sub_403f10",
            "funcStartAddr": "0x403f10",
            "funcEndAddr": "0x403f31",
            "decompiledFuncCode": "void sub_403f10(FILE* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        return;\n    }\n    /* tailcall */\n    return posix_fadvise(fileno(arg1), 0, 0, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_403f40",
            "funcStartAddr": "0x403f40",
            "funcEndAddr": "0x403fd9",
            "decompiledFuncCode": "char* sub_403f40(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_409488;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_60f5d8 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_403fe0",
            "funcStartAddr": "0x403fe0",
            "funcEndAddr": "0x4040d2",
            "decompiledFuncCode": "char* sub_403fe0(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_407760();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_4040c1:\n                void* const rbx_1 = &data_40948c;\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_4040c1;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_4040c1;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_4040c1;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_4040c1;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_4040c1;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_4040c1;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_4040c1;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_409495;\n            if (cond:2_1)\n            {\n                rbx = &data_409492;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_4040c1;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_4040c1;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_4040c1;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_4040c1;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_4040c1;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_409499;\n            if (cond:1_1)\n            {\n                rbx = &data_40948e;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_4040e0",
            "funcStartAddr": "0x401904",
            "funcEndAddr": "0x405301",
            "decompiledFuncCode": "int64_t sub_4040e0(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    char const* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n    label_404178:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_4044ec:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_404534;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_4040e0(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char const rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_40454b;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_404685;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_4042d5;\n                            }\n                            goto label_4045c0;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_404685;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_4044b0;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_4044b0:\n                            if (var_c0 == 0)\n                            {\n                                goto label_4044bb;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_404317:\n                            if (var_5c == 0)\n                            {\n                                goto label_404328;\n                            }\n                        label_4044e0:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_4044e8;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_40471b;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_40471b:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_40472a:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_4044ec;\n                            }\n                            goto label_4044b0;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_4044b0;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_4044b0;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_40471b;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_4042b6;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_4042b6:\n                            if (var_5c == 0)\n                            {\n                                goto label_4042d5;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_4042d5;\n                            }\n                            goto label_40472a;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_4042ad:\n                            if (r12_1 != 0)\n                            {\n                                goto label_4044bb;\n                            }\n                            goto label_4042b6;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_4046e0:\n                            rdx = r11_1 == 2;\n                        label_4042d5:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_4043dc;\n                            }\n                            goto label_4042df;\n                        }\n                        case 0x27:\n                        {\n                            goto label_40445d;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_40442d;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_40448a;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_40521d;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_4043f4;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_404289;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_404880;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_404880;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_4051d0:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_404534:\n                            rbx_1 = sub_4040e0(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_40454b:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_404685;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_4045d7;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_404685;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_4045a0:\n                                r13 = 0;\n                                goto label_40435b;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_404328:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_40435b:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_404365;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_404365:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_40436d;\n                            }\n                            case 9:\n                            {\n                                goto label_404550;\n                            }\n                            case 0xa:\n                            {\n                                goto label_4044c8;\n                            }\n                            case 0xb:\n                            {\n                                goto label_4045b0;\n                            }\n                            case 0xc:\n                            {\n                                goto label_404590;\n                            }\n                            case 0xd:\n                            {\n                                goto label_404579;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_4048da;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_404565;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_4048ba;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_4048a2;\n                            }\n                            case 0x27:\n                            {\n                                goto label_40445d;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_40442d;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_40448a;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_404289;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_404880:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_404680:\n                            var_b8 = 0;\n                        label_404685:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_4046d4:\n                                if (rdx == 0)\n                                {\n                                    goto label_4046e0;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_404bd1:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_4043f4;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_4044ec;\n                                }\n                                r13 = var_98;\n                                goto label_40436d;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_407620(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_4044ec;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_404bd1;\n                            }\n                            goto label_4046d4;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_4045c0:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_4044ec;\n                                }\n                                var_b8 = 0;\n                            label_4045d7:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_404622;\n                                    }\n                                    rax_8 = r10;\n                                label_40461a:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_404622:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_4043dc;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_404663;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_40461a;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_4043dc;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_404680;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_404595;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_4044cd;\n                            }\n                            case 9:\n                            {\n                            label_404550:\n                                rbp_3 = 0x74;\n                                goto label_4044cd;\n                            }\n                            case 0xa:\n                            {\n                            label_4044c8:\n                                rbp_3 = 0x6e;\n                            label_4044cd:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_4044e0;\n                                }\n                                goto label_404328;\n                            }\n                            case 0xb:\n                            {\n                            label_4045b0:\n                                rbp_3 = 0x76;\n                                goto label_404595;\n                            }\n                            case 0xc:\n                            {\n                            label_404590:\n                                rbp_3 = 0x66;\n                            label_404595:\n                                if (var_5c == 0)\n                                {\n                                    goto label_4045a0;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_4044e8:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_4044ec;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_404579:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_4044b0;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_4048da:\n                                rbp_3 = 0x20;\n                                goto label_4048a2;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_404565:\n                                rdx = 0;\n                            label_4044bb:\n                                r13 = 0;\n                                goto label_4042d5;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_4048ba:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_4042d5;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_4042df:\n                                rax_8 = 0;\n                                goto label_4042e1;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_4048a2:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_4042e1;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_40445d:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_4042d5;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_40521d;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_4043dc;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_40442d:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_40521d:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_4044ec;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_4043dc:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_404317;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_4043f4;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_4042d5;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_4049c0:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_4042d5;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_4049c0;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_4049c0;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_4049c0;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_4049c0;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_4051d0;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_404663:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_4043dc;\n                                }\n                            label_4042e1:\n                                if (arg7 == 0)\n                                {\n                                    goto label_4043dc;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_4043dc;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_404317;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_40448a:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_4044b0;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_4043f4:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_40436d;\n                                }\n                            label_40436d:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_404376;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_404376:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_404289:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_4044bb;\n                                }\n                                goto label_4042ad;\n                            }\n                        }\n                    }\n                }\n            }\n        label_404966:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = \"'\";\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_404178;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = \"'\";\n                goto label_404178;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"'\";\n            goto label_404178;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40948c;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40948c;\n            }\n            goto label_404178;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_40948c;\n            goto label_404178;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_404178;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_403fe0(&data_40949d, r13);\n                arg9 = sub_403fe0(\"'\", r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_404178;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_404966;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n        goto label_404178;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_405310",
            "funcStartAddr": "0x401909",
            "funcEndAddr": "0x4054ae",
            "decompiledFuncCode": "char* sub_405310(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_60d258;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_60d270 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_4063d0();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x60d260)\n        {\n            int64_t rax_9 = sub_4061e0(0, rsi_1);\n            int128_t zmm0 = data_60d260;\n            rbx = rax_9;\n            data_60d258 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_4061e0(rbx, rsi_1);\n            data_60d258 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_60d270;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_60d270 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_4040e0(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        uint64_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x60f5e0)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_406180(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_4040e0(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_4054b0",
            "funcStartAddr": "0x4054b0",
            "funcEndAddr": "0x4054e4",
            "decompiledFuncCode": "int64_t sub_4054b0(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x60f6e0;\n    }\n    int64_t rax_1 = sub_406380(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4054f0",
            "funcStartAddr": "0x4054f0",
            "funcEndAddr": "0x4054ff",
            "decompiledFuncCode": "uint64_t sub_4054f0(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60f6e0;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_405500",
            "funcStartAddr": "0x405500",
            "funcEndAddr": "0x40550f",
            "decompiledFuncCode": "void sub_405500(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60f6e0;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_405510",
            "funcStartAddr": "0x405510",
            "funcEndAddr": "0x405543",
            "decompiledFuncCode": "uint64_t sub_405510(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x60f6e0;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_405550",
            "funcStartAddr": "0x405550",
            "funcEndAddr": "0x405563",
            "decompiledFuncCode": "uint64_t sub_405550(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60f6e0;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405570",
            "funcStartAddr": "0x405570",
            "funcEndAddr": "0x40559b",
            "decompiledFuncCode": "void sub_405570(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60f6e0;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x60f6e0;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4055a0",
            "funcStartAddr": "0x4055a0",
            "funcEndAddr": "0x405612",
            "decompiledFuncCode": "int64_t sub_4055a0(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_60f6e0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_4040e0(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_405620",
            "funcStartAddr": "0x405620",
            "funcEndAddr": "0x405701",
            "decompiledFuncCode": "char* sub_405620(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_60f6e0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_4040e0(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_406180((rax_2 + 1));\n    sub_4040e0(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_405710",
            "funcStartAddr": "0x405710",
            "funcEndAddr": "0x40571a",
            "decompiledFuncCode": "int64_t sub_405710(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_405620(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_405720",
            "funcStartAddr": "0x405720",
            "funcEndAddr": "0x4057b5",
            "decompiledFuncCode": "uint64_t sub_405720()\n{\n    uint64_t rax_2 = data_60d270;\n    int64_t r12 = data_60d258;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x60f5e0)\n    {\n        rax_2 = free(rdi_2);\n        *data_60d260 = 0x100;\n        *(data_60d260 + 8) = 0x60f5e0;\n    }\n    if (r12 != 0x60d260)\n    {\n        rax_2 = free(r12);\n        data_60d258 = 0x60d260;\n    }\n    data_60d270 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_4057c0",
            "funcStartAddr": "0x4057c0",
            "funcEndAddr": "0x4057d1",
            "decompiledFuncCode": "int64_t sub_4057c0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_405310(arg1, arg2, -1, &data_60f6e0);\n}\n\n"
        },
        {
            "funcName": "sub_4057e0",
            "funcStartAddr": "0x4057e0",
            "funcEndAddr": "0x4057ea",
            "decompiledFuncCode": "int64_t sub_4057e0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_405310(arg1, arg2, arg3, &data_60f6e0);\n}\n\n"
        },
        {
            "funcName": "sub_4057f0",
            "funcStartAddr": "0x4057f0",
            "funcEndAddr": "0x405806",
            "decompiledFuncCode": "int64_t sub_4057f0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_405310(0, arg1, -1, &data_60f6e0);\n}\n\n"
        },
        {
            "funcName": "sub_405810",
            "funcStartAddr": "0x405810",
            "funcEndAddr": "0x405822",
            "decompiledFuncCode": "int64_t sub_405810(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_405310(0, arg1, arg2, &data_60f6e0);\n}\n\n"
        },
        {
            "funcName": "sub_405830",
            "funcStartAddr": "0x40190e",
            "funcEndAddr": "0x405898",
            "decompiledFuncCode": "char* sub_405830(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_405310(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_4058a0",
            "funcStartAddr": "0x401913",
            "funcEndAddr": "0x405904",
            "decompiledFuncCode": "char* sub_4058a0(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_405310(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_405910",
            "funcStartAddr": "0x405910",
            "funcEndAddr": "0x40591c",
            "decompiledFuncCode": "int64_t sub_405910(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_405830(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405920",
            "funcStartAddr": "0x405920",
            "funcEndAddr": "0x40592f",
            "decompiledFuncCode": "int64_t sub_405920(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_4058a0(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_405930",
            "funcStartAddr": "0x405930",
            "funcEndAddr": "0x4059a0",
            "decompiledFuncCode": "char* sub_405930(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_60f710;\n    int128_t var_48 = data_60f6e0;\n    int128_t var_38 = data_60f6f0;\n    int128_t var_28 = data_60f700;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_405310(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_4059a0",
            "funcStartAddr": "0x4059a0",
            "funcEndAddr": "0x4059ad",
            "decompiledFuncCode": "int64_t sub_4059a0(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_405930(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_4059b0",
            "funcStartAddr": "0x4059b0",
            "funcEndAddr": "0x4059c1",
            "decompiledFuncCode": "int64_t sub_4059b0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_405930(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_4059d0",
            "funcStartAddr": "0x4059d0",
            "funcEndAddr": "0x4059da",
            "decompiledFuncCode": "int64_t sub_4059d0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_405930(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_4059e0",
            "funcStartAddr": "0x401918",
            "funcEndAddr": "0x405a4e",
            "decompiledFuncCode": "char* sub_4059e0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_405310(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_405a50",
            "funcStartAddr": "0x405a50",
            "funcEndAddr": "0x405abc",
            "decompiledFuncCode": "char* sub_405a50(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_60f6e0;\n    int128_t var_38 = data_60f6f0;\n    int128_t var_28 = data_60f700;\n    int64_t var_18 = data_60f710;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_405310(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_405b60",
            "funcStartAddr": "0x405b60",
            "funcEndAddr": "0x405b76",
            "decompiledFuncCode": "int64_t sub_405b60(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_405310(0, arg1, -1, &data_60d220);\n}\n\n"
        },
        {
            "funcName": "sub_405b80",
            "funcStartAddr": "0x405b80",
            "funcEndAddr": "0x405bde",
            "decompiledFuncCode": "ssize_t sub_405b80(int32_t arg1, int64_t arg2, uint64_t arg3)\n{\n    uint64_t rbx = arg3;\n    ssize_t rax_1;\n    while (true)\n    {\n        rax_1 = read(arg1, arg2, rbx);\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        int32_t rax_3 = *__errno_location();\n        if (rax_3 != 4)\n        {\n            if (rbx <= 0x7fffe000)\n            {\n                break;\n            }\n            if (rax_3 != 0x16)\n            {\n                break;\n            }\n            rbx = 0x7fffe000;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_405be0",
            "funcStartAddr": "0x40191d",
            "funcEndAddr": "0x405fbd",
            "decompiledFuncCode": "int64_t sub_405be0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_40a1eb, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_405fc0",
            "funcStartAddr": "0x405fc0",
            "funcEndAddr": "0x405fe0",
            "decompiledFuncCode": "int64_t sub_405fc0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_405be0(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_405fe0",
            "funcStartAddr": "0x405fe0",
            "funcEndAddr": "0x406040",
            "decompiledFuncCode": "int64_t sub_405fe0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_405be0(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_406040",
            "funcStartAddr": "0x406040",
            "funcEndAddr": "0x4060fc",
            "decompiledFuncCode": "int64_t sub_406040(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_405be0(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_406100",
            "funcStartAddr": "0x406100",
            "funcEndAddr": "0x406174",
            "decompiledFuncCode": "int64_t sub_406100()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_406180",
            "funcStartAddr": "0x406180",
            "funcEndAddr": "0x40619a",
            "decompiledFuncCode": "int64_t sub_406180(uint64_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_4063d0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4061a0",
            "funcStartAddr": "0x4061a0",
            "funcEndAddr": "0x4061c1",
            "decompiledFuncCode": "int64_t sub_4061a0(int64_t arg1, int64_t arg2)\n{\n    uint64_t rax;\n    int64_t rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    uint64_t rdi = rax;\n    rax = ((arg1 * arg2) >> 0x40) != 0;\n    if (rdi >= 0)\n    {\n        rax = rax;\n        if (rax == 0)\n        {\n            /* tailcall */\n            return sub_406180(rdi);\n        }\n    }\n    uint64_t var_8 = rax;\n    sub_4063d0();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4061e0",
            "funcStartAddr": "0x4061e0",
            "funcEndAddr": "0x406216",
            "decompiledFuncCode": "int64_t sub_4061e0(int64_t arg1, uint64_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_4063d0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40632a",
            "funcStartAddr": "0x40632a",
            "funcEndAddr": "0x406330",
            "decompiledFuncCode": "int64_t sub_40632a() __noreturn\n{\n    sub_4063d0();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_406330",
            "funcStartAddr": "0x406330",
            "funcEndAddr": "0x406347",
            "decompiledFuncCode": "int64_t sub_406330(uint64_t arg1)\n{\n    /* tailcall */\n    return memset(sub_406180(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_406350",
            "funcStartAddr": "0x406350",
            "funcEndAddr": "0x40637e",
            "decompiledFuncCode": "int64_t sub_406350(uint64_t arg1, uint64_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_4063d0();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_406380",
            "funcStartAddr": "0x406380",
            "funcEndAddr": "0x4063a8",
            "decompiledFuncCode": "int64_t sub_406380(int64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_406180(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_4063b0",
            "funcStartAddr": "0x4063b0",
            "funcEndAddr": "0x4063c3",
            "decompiledFuncCode": "int64_t sub_4063b0(char* arg1)\n{\n    /* tailcall */\n    return sub_406380(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_4063d0",
            "funcStartAddr": "0x4063d0",
            "funcEndAddr": "0x406401",
            "decompiledFuncCode": "int64_t sub_4063d0() __noreturn\n{\n    error(data_60d218, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_406410",
            "funcStartAddr": "0x406410",
            "funcEndAddr": "0x406844",
            "decompiledFuncCode": "uint64_t sub_406410(char* arg1, int64_t* arg2, int32_t arg3, uint64_t* arg4, \n    char* arg5)\n{\n    if (arg3 > 0x24)\n    {\n        __assert_fail(\"0 <= strtol_base && strtol_base \u2026\", \"lib/xstrtol.c\", 0x60, \"xstrtoumax\");\n        /* no return */\n    }\n    int64_t* r15 = arg2;\n    void var_40;\n    if (arg2 == 0)\n    {\n        r15 = &var_40;\n    }\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char rbx = *arg1;\n    uint16_t* rsi = *__ctype_b_loc();\n    char* rax_2 = arg1;\n    while ((*(&rsi[rbx] + 1) & 0x20) != 0)\n    {\n        rax_2 = &rax_2[1];\n        rbx = *rax_2;\n    }\n    int32_t rbp_1;\n    if (rbx == 0x2d)\n    {\n    label_4064da:\n        rbp_1 = 4;\n    }\n    else\n    {\n        char* r8 = *r15;\n        uint64_t rbx_1 = __strtoul_internal(arg1, r15, arg3, 0);\n        int32_t var_58;\n        void* r8_1;\n        uint32_t r12_1;\n        if (r8 == arg1)\n        {\n            var_58 = r8;\n            if (arg5 == 0)\n            {\n                goto label_4064da;\n            }\n            r12_1 = *arg1;\n            if (r12_1 == 0)\n            {\n                goto label_4064da;\n            }\n            rbp_1 = 0;\n            rbx_1 = 1;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) == 0)\n            {\n                goto label_4064da;\n            }\n        label_406517:\n            uint64_t rdx_1 = (r12_1 - 0x45);\n            int64_t rdx_3;\n            int32_t rsi_3;\n            if (rdx_1 <= 0x2f)\n            {\n                var_58 = rdx_1;\n                if ((!(TEST_BITQ(0x814400308945, rdx_1))))\n                {\n                    goto label_406580;\n                }\n                if (strchr(arg5, 0x30) == 0)\n                {\n                    goto label_406580;\n                }\n                char rax_8 = *(r8_1 + 1);\n                if (rax_8 == 0x44)\n                {\n                label_4067a8:\n                    rsi_3 = 2;\n                    rdx_3 = 0x3e8;\n                    goto label_40658a;\n                }\n                if (rax_8 == 0x69)\n                {\n                    rdx_3 = 0x400;\n                    int32_t rsi_6;\n                    rsi_6 = *(r8_1 + 2) == 0x42;\n                    rsi_3 = ((rsi_6 + rsi_6) + 1);\n                    goto label_40658a;\n                }\n                uint64_t rdx_2 = var_58;\n                if (rax_8 == 0x42)\n                {\n                    goto label_4067a8;\n                }\n                int32_t r9_1;\n                switch (rdx_2)\n                {\n                    case 0:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40672b:\n                        int64_t rcx_6 = rdx_3;\n                        int32_t rdi_8 = 6;\n                        r9_1 = 0;\n                        int32_t temp15_1;\n                        do\n                        {\n                            uint64_t rax_28;\n                            int64_t rdx_11;\n                            rdx_11 = HIGHD((rbx_1 * rcx_6));\n                            rax_28 = LOWD((rbx_1 * rcx_6));\n                            bool o_8 = ((rbx_1 * rcx_6) >> 0x40) != 0;\n                            rbx_1 = rax_28;\n                            if (o_8)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp15_1 = rdi_8;\n                            rdi_8 = (rdi_8 - 1);\n                        } while (temp15_1 != 1);\n                        goto label_406684;\n                    }\n                    case 1:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 7:\n                    case 9:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xe:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1f:\n                    case 0x20:\n                    case 0x21:\n                    case 0x23:\n                    case 0x24:\n                    case 0x25:\n                    case 0x27:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    {\n                        goto label_406625;\n                    }\n                    case 2:\n                    case 0x22:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_406763:\n                        int64_t rcx_7 = rdx_3;\n                        int64_t rax_30;\n                        int64_t rdx_12;\n                        rdx_12 = HIGHD((rbx_1 * rcx_7));\n                        rax_30 = LOWD((rbx_1 * rcx_7));\n                        int64_t rax_31;\n                        if (((rbx_1 * rcx_7) >> 0x40) == 0)\n                        {\n                            int64_t rdx_13;\n                            rdx_13 = HIGHD((rax_30 * rcx_7));\n                            rax_31 = LOWD((rax_30 * rcx_7));\n                            if (((rax_30 * rcx_7) >> 0x40) == 0)\n                            {\n                                uint64_t rax_32;\n                                int64_t rdx_14;\n                                rdx_14 = HIGHD((rax_31 * rcx_7));\n                                rax_32 = LOWD((rax_31 * rcx_7));\n                                if (((rax_31 * rcx_7) >> 0x40) == 0)\n                                {\n                                    rbx_1 = rax_32;\n                                    rbp_1 = (rbp_1 | 0);\n                                }\n                            }\n                        }\n                        if (((((rbx_1 * rcx_7) >> 0x40) != 0 || (((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) != 0)) || ((((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) == 0) && ((rax_31 * rcx_7) >> 0x40) != 0)))\n                        {\n                            rbx_1 = -1;\n                            rbp_1 = (rbp_1 | 1);\n                        }\n                        goto label_4065cd;\n                    }\n                    case 6:\n                    case 0x26:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4065ef:\n                        uint64_t rax_15;\n                        int64_t rdx_6;\n                        rdx_6 = HIGHD((rbx_1 * rdx_3));\n                        rax_15 = LOWD((rbx_1 * rdx_3));\n                        bool o_3 = ((rbx_1 * rdx_3) >> 0x40) != 0;\n                        rbx_1 = rax_15;\n                        if ((!o_3))\n                        {\n                            goto label_4065cd;\n                        }\n                        goto label_4065f7;\n                    }\n                    case 8:\n                    case 0x28:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4065ae:\n                        int64_t rcx_1 = rdx_3;\n                        int64_t rax_10;\n                        int64_t rdx_4;\n                        rdx_4 = HIGHD((rbx_1 * rcx_1));\n                        rax_10 = LOWD((rbx_1 * rcx_1));\n                        if (((rbx_1 * rcx_1) >> 0x40) == 0)\n                        {\n                            uint64_t rax_11;\n                            int64_t rdx_5;\n                            rdx_5 = HIGHD((rax_10 * rcx_1));\n                            rax_11 = LOWD((rax_10 * rcx_1));\n                            if (((rax_10 * rcx_1) >> 0x40) != 0)\n                            {\n                                goto label_4065f7;\n                            }\n                            rbx_1 = rax_11;\n                            goto label_4065cd;\n                        }\n                    label_4065f7:\n                        rbp_1 = 1;\n                        rbx_1 = -1;\n                        goto label_4065cd;\n                    }\n                    case 0xb:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4066f8:\n                        int64_t rcx_5 = rdx_3;\n                        int32_t rdi_7 = 5;\n                        r9_1 = 0;\n                        int32_t temp14_1;\n                        do\n                        {\n                            uint64_t rax_26;\n                            int64_t rdx_10;\n                            rdx_10 = HIGHD((rbx_1 * rcx_5));\n                            rax_26 = LOWD((rbx_1 * rcx_5));\n                            bool o_7 = ((rbx_1 * rcx_5) >> 0x40) != 0;\n                            rbx_1 = rax_26;\n                            if (o_7)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp14_1 = rdi_7;\n                            rdi_7 = (rdi_7 - 1);\n                        } while (temp14_1 != 1);\n                        goto label_406684;\n                    }\n                    case 0xf:\n                    case 0x2f:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4066c8:\n                        int64_t rcx_4 = rdx_3;\n                        int32_t rdi_6 = 4;\n                        r9_1 = 0;\n                        int32_t temp13_1;\n                        do\n                        {\n                            uint64_t rax_24;\n                            int64_t rdx_9;\n                            rdx_9 = HIGHD((rbx_1 * rcx_4));\n                            rax_24 = LOWD((rbx_1 * rcx_4));\n                            bool o_6 = ((rbx_1 * rcx_4) >> 0x40) != 0;\n                            rbx_1 = rax_24;\n                            if (o_6)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp13_1 = rdi_6;\n                            rdi_6 = (rdi_6 - 1);\n                        } while (temp13_1 != 1);\n                        goto label_406684;\n                    }\n                    case 0x14:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_406696:\n                        int64_t rcx_3 = rdx_3;\n                        int32_t rdi_5 = 8;\n                        r9_1 = 0;\n                        int32_t temp12_1;\n                        do\n                        {\n                            uint64_t rax_22;\n                            int64_t rdx_8;\n                            rdx_8 = HIGHD((rbx_1 * rcx_3));\n                            rax_22 = LOWD((rbx_1 * rcx_3));\n                            bool o_5 = ((rbx_1 * rcx_3) >> 0x40) != 0;\n                            rbx_1 = rax_22;\n                            if (o_5)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp12_1 = rdi_5;\n                            rdi_5 = (rdi_5 - 1);\n                        } while (temp12_1 != 1);\n                        goto label_406684;\n                    }\n                    case 0x15:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40665b:\n                        int64_t rcx_2 = rdx_3;\n                        int32_t rdi_4 = 7;\n                        r9_1 = 0;\n                        int32_t temp11_1;\n                        do\n                        {\n                            uint64_t rax_20;\n                            int64_t rdx_7;\n                            rdx_7 = HIGHD((rbx_1 * rcx_2));\n                            rax_20 = LOWD((rbx_1 * rcx_2));\n                            bool o_4 = ((rbx_1 * rcx_2) >> 0x40) != 0;\n                            rbx_1 = rax_20;\n                            if (o_4)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp11_1 = rdi_4;\n                            rdi_4 = (rdi_4 - 1);\n                        } while (temp11_1 != 1);\n                    label_406684:\n                        rbp_1 = (rbp_1 | r9_1);\n                        goto label_4065cd;\n                    }\n                    case 0x1d:\n                    {\n                        rsi_3 = 1;\n                        break;\n                    }\n                    case 0x1e:\n                    {\n                        rsi_3 = 1;\n                        goto label_4065cd;\n                    }\n                }\n            }\n            else\n            {\n            label_406580:\n                rsi_3 = 1;\n                rdx_3 = 0x400;\n            label_40658a:\n                char r12_2 = (r12_1 - 0x42);\n                if (r12_2 > 0x35)\n                {\n                    goto label_406625;\n                }\n                switch (r12_2)\n                {\n                    case 0:\n                    {\n                        if ((rbx_1 >> 0x36) != 0)\n                        {\n                            goto label_4065f7;\n                        }\n                        rbx_1 = (rbx_1 << 0xa);\n                        goto label_4065cd;\n                    }\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x22:\n                    case 0x23:\n                    case 0x24:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x2a:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x33:\n                    case 0x34:\n                    {\n                        goto label_406625;\n                    }\n                    case 3:\n                    {\n                        goto label_40672b;\n                    }\n                    case 5:\n                    case 0x25:\n                    {\n                        goto label_406763;\n                    }\n                    case 9:\n                    case 0x29:\n                    {\n                        goto label_4065ef;\n                    }\n                    case 0xb:\n                    case 0x2b:\n                    {\n                        goto label_4065ae;\n                    }\n                    case 0xe:\n                    {\n                        goto label_4066f8;\n                    }\n                    case 0x12:\n                    case 0x32:\n                    {\n                        goto label_4066c8;\n                    }\n                    case 0x17:\n                    {\n                        goto label_406696;\n                    }\n                    case 0x18:\n                    {\n                        goto label_40665b;\n                    }\n                    case 0x21:\n                    {\n                        goto label_4065cd;\n                    }\n                    case 0x35:\n                    {\n                        if (rbx_1 < 0)\n                        {\n                            goto label_4065f7;\n                        }\n                        rbx_1 = (rbx_1 + rbx_1);\n                    label_4065cd:\n                        void* r8_2 = (r8_1 + rsi_3);\n                        int32_t rax_13 = (rbp_1 | 2);\n                        *r15 = r8_2;\n                        if (*r8_2 != 0)\n                        {\n                            rbp_1 = rax_13;\n                        }\n                        goto label_4064b2;\n                    }\n                }\n            }\n            if ((rbx_1 >> 0x37) != 0)\n            {\n                goto label_4065f7;\n            }\n            rbx_1 = (rbx_1 << 9);\n            goto label_4065cd;\n        }\n        int32_t rax_4 = *rax;\n        if (rax_4 == 0)\n        {\n            rbp_1 = 0;\n        }\n        else\n        {\n            rbp_1 = 1;\n            if (rax_4 != 0x22)\n            {\n                goto label_4064da;\n            }\n        }\n        if (arg5 == 0)\n        {\n        label_4064b2:\n            *arg4 = rbx_1;\n        }\n        else\n        {\n            r12_1 = *r8;\n            if (r12_1 == 0)\n            {\n                goto label_4064b2;\n            }\n            var_58 = r8;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) != 0)\n            {\n                goto label_406517;\n            }\n        label_406625:\n            *arg4 = rbx_1;\n            rbp_1 = (rbp_1 | 2);\n        }\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_406850",
            "funcStartAddr": "0x406850",
            "funcEndAddr": "0x40692f",
            "decompiledFuncCode": "uint64_t sub_406850(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_406930",
            "funcStartAddr": "0x406930",
            "funcEndAddr": "0x406f4c",
            "decompiledFuncCode": "uint64_t sub_406930(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_406b60;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_406a86;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_406a86;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_406a86:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_406b60:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_406b8e;\n                }\n                *arg5 = r12;\n            label_406b8e:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_406bac;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_406bac:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_406bac;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_406b1e;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_406b1e:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_406f50",
            "funcStartAddr": "0x406f50",
            "funcEndAddr": "0x407516",
            "decompiledFuncCode": "uint64_t sub_406f50(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_40718c;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_407018;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_407018:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_406850(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_40aa01;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_406850(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_40718c;\n                }\n                *arg7 = rdx_2;\n            label_40718c:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_407290;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_40aa01;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_407300;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_407290;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_407290;\n                            }\n                            goto label_407251;\n                        }\n                    label_407251:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_406930(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_40aa02);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_407290:\n                            rdx = &r14_1[1];\n                        label_4070d1:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_4072ce;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_4072ce:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_40aa20;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_407300:\n                                        r14_2 = sub_406930(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_4073bd;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_4073bd:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_40718c;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_407018;\n        }\n        goto label_4070d1;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_407580",
            "funcStartAddr": "0x407580",
            "funcEndAddr": "0x407598",
            "decompiledFuncCode": "uint64_t sub_407580(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_407620",
            "funcStartAddr": "0x407620",
            "funcEndAddr": "0x40769a",
            "decompiledFuncCode": "uint64_t sub_407620(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_40aa04[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_40764a;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_40764a:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_407700() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_4076a0",
            "funcStartAddr": "0x4076a0",
            "funcEndAddr": "0x4076fd",
            "decompiledFuncCode": "uint64_t sub_4076a0(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_407cd0(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_407700",
            "funcStartAddr": "0x407700",
            "funcEndAddr": "0x40775e",
            "decompiledFuncCode": "int64_t sub_407700()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_40aa24;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            void* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_407760",
            "funcStartAddr": "0x407760",
            "funcEndAddr": "0x407cc2",
            "decompiledFuncCode": "char* sub_407760()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_60f758;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_40aa04[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        uint64_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            uint64_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_40785c;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_4078a6;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_40785c:\n            r15 = &data_40aa04[0x1b];\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_4078a6:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, &data_407ed6);\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_40795c:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_407aeb;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_407998:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_407998;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_4079d2:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_4079d2;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_40aa04[0x1b];\n                                    free(rdi_26);\n                                    sub_407cd0(rax_12);\n                                    goto label_4078e7;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_407bab:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_407bab;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_407bf9:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_407bf9;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_40795c;\n                        }\n                        break;\n                    }\n                label_407aeb:\n                    sub_407cd0(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_40aa04[0x1b];\n            }\n        label_4078e7:\n            free(rbp_3);\n        }\n        data_60f758 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_407cd0",
            "funcStartAddr": "0x407cd0",
            "funcEndAddr": "0x407d4b",
            "decompiledFuncCode": "int64_t sub_407cd0(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_407d50(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_407d50",
            "funcStartAddr": "0x407d50",
            "funcEndAddr": "0x407d90",
            "decompiledFuncCode": "int64_t sub_407d50(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_407d90(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_407d90",
            "funcStartAddr": "0x407d90",
            "funcEndAddr": "0x407de7",
            "decompiledFuncCode": "off64_t sub_407d90(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x407df0",
            "funcEndAddr": "0x407e4d",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x407e50",
            "funcEndAddr": "0x407e51",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_407e60",
            "funcStartAddr": "0x407e60",
            "funcEndAddr": "0x407e78",
            "decompiledFuncCode": "int64_t sub_407e60(void (* arg1)(void*))\n{\n    int64_t rdx = data_60d208;\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, rdx);\n}\n\n"
        },
        {
            "funcName": "sub_407e78",
            "funcStartAddr": "0x407e78",
            "funcEndAddr": "0x407e98",
            "decompiledFuncCode": "int64_t sub_407e78(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_60ce30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}