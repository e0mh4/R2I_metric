{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_wc.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 156,
    "funcInfo": [
        {
            "funcName": "sub_401900",
            "funcStartAddr": "0x401900",
            "funcEndAddr": "0x40190c",
            "decompiledFuncCode": "int64_t sub_401900()\n{\n    int64_t var_8 = data_60c008;\n    /* jump -> data_60c010 */\n}\n\n"
        },
        {
            "funcName": "sub_401916",
            "funcStartAddr": "0x401916",
            "funcEndAddr": "0x401920",
            "decompiledFuncCode": "int64_t sub_401916()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401926",
            "funcStartAddr": "0x401926",
            "funcEndAddr": "0x401930",
            "decompiledFuncCode": "int64_t sub_401926()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401956",
            "funcStartAddr": "0x401956",
            "funcEndAddr": "0x401960",
            "decompiledFuncCode": "int64_t sub_401956()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401966",
            "funcStartAddr": "0x401966",
            "funcEndAddr": "0x401970",
            "decompiledFuncCode": "int64_t sub_401966()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401976",
            "funcStartAddr": "0x401976",
            "funcEndAddr": "0x401980",
            "decompiledFuncCode": "int64_t sub_401976()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401986",
            "funcStartAddr": "0x401986",
            "funcEndAddr": "0x401990",
            "decompiledFuncCode": "int64_t sub_401986()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401996",
            "funcStartAddr": "0x401996",
            "funcEndAddr": "0x4019a0",
            "decompiledFuncCode": "int64_t sub_401996()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_4019a6",
            "funcStartAddr": "0x4019a6",
            "funcEndAddr": "0x4019b0",
            "decompiledFuncCode": "int64_t sub_4019a6()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_4019b6",
            "funcStartAddr": "0x4019b6",
            "funcEndAddr": "0x4019c0",
            "decompiledFuncCode": "int64_t sub_4019b6()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_4019c6",
            "funcStartAddr": "0x4019c6",
            "funcEndAddr": "0x4019d0",
            "decompiledFuncCode": "int64_t sub_4019c6()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_4019d6",
            "funcStartAddr": "0x4019d6",
            "funcEndAddr": "0x4019e0",
            "decompiledFuncCode": "int64_t sub_4019d6()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_4019e6",
            "funcStartAddr": "0x4019e6",
            "funcEndAddr": "0x4019f0",
            "decompiledFuncCode": "int64_t sub_4019e6()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_4019f6",
            "funcStartAddr": "0x4019f6",
            "funcEndAddr": "0x401a00",
            "decompiledFuncCode": "int64_t sub_4019f6()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401a06",
            "funcStartAddr": "0x401a06",
            "funcEndAddr": "0x401a10",
            "decompiledFuncCode": "int64_t sub_401a06()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401a16",
            "funcStartAddr": "0x401a16",
            "funcEndAddr": "0x401a20",
            "decompiledFuncCode": "int64_t sub_401a16()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401a26",
            "funcStartAddr": "0x401a26",
            "funcEndAddr": "0x401a30",
            "decompiledFuncCode": "int64_t sub_401a26()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401a36",
            "funcStartAddr": "0x401a36",
            "funcEndAddr": "0x401a40",
            "decompiledFuncCode": "int64_t sub_401a36()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401a46",
            "funcStartAddr": "0x401a46",
            "funcEndAddr": "0x401a50",
            "decompiledFuncCode": "int64_t sub_401a46()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401a56",
            "funcStartAddr": "0x401a56",
            "funcEndAddr": "0x401a60",
            "decompiledFuncCode": "int64_t sub_401a56()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401a66",
            "funcStartAddr": "0x401a66",
            "funcEndAddr": "0x401a70",
            "decompiledFuncCode": "int64_t sub_401a66()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401a76",
            "funcStartAddr": "0x401a76",
            "funcEndAddr": "0x401a80",
            "decompiledFuncCode": "int64_t sub_401a76()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401a86",
            "funcStartAddr": "0x401a86",
            "funcEndAddr": "0x401a90",
            "decompiledFuncCode": "int64_t sub_401a86()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401a96",
            "funcStartAddr": "0x401a96",
            "funcEndAddr": "0x401aa0",
            "decompiledFuncCode": "int64_t sub_401a96()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401aa6",
            "funcStartAddr": "0x401aa6",
            "funcEndAddr": "0x401ab0",
            "decompiledFuncCode": "int64_t sub_401aa6()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401ab6",
            "funcStartAddr": "0x401ab6",
            "funcEndAddr": "0x401ac0",
            "decompiledFuncCode": "int64_t sub_401ab6()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401ac6",
            "funcStartAddr": "0x401ac6",
            "funcEndAddr": "0x401ad0",
            "decompiledFuncCode": "int64_t sub_401ac6()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401ad6",
            "funcStartAddr": "0x401ad6",
            "funcEndAddr": "0x401ae0",
            "decompiledFuncCode": "int64_t sub_401ad6()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401ae6",
            "funcStartAddr": "0x401ae6",
            "funcEndAddr": "0x401af0",
            "decompiledFuncCode": "int64_t sub_401ae6()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401af6",
            "funcStartAddr": "0x401af6",
            "funcEndAddr": "0x401b00",
            "decompiledFuncCode": "int64_t sub_401af6()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401b06",
            "funcStartAddr": "0x401b06",
            "funcEndAddr": "0x401b10",
            "decompiledFuncCode": "int64_t sub_401b06()\n{\n    int64_t var_8 = 0x1f;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401b16",
            "funcStartAddr": "0x401b16",
            "funcEndAddr": "0x401b20",
            "decompiledFuncCode": "int64_t sub_401b16()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401b26",
            "funcStartAddr": "0x401b26",
            "funcEndAddr": "0x401b30",
            "decompiledFuncCode": "int64_t sub_401b26()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401b36",
            "funcStartAddr": "0x401b36",
            "funcEndAddr": "0x401b40",
            "decompiledFuncCode": "int64_t sub_401b36()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401b46",
            "funcStartAddr": "0x401b46",
            "funcEndAddr": "0x401b50",
            "decompiledFuncCode": "int64_t sub_401b46()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401b56",
            "funcStartAddr": "0x401b56",
            "funcEndAddr": "0x401b60",
            "decompiledFuncCode": "int64_t sub_401b56()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401b66",
            "funcStartAddr": "0x401b66",
            "funcEndAddr": "0x401b70",
            "decompiledFuncCode": "int64_t sub_401b66()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401b76",
            "funcStartAddr": "0x401b76",
            "funcEndAddr": "0x401b80",
            "decompiledFuncCode": "int64_t sub_401b76()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401b86",
            "funcStartAddr": "0x401b86",
            "funcEndAddr": "0x401b90",
            "decompiledFuncCode": "int64_t sub_401b86()\n{\n    int64_t var_8 = 0x27;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401b96",
            "funcStartAddr": "0x401b96",
            "funcEndAddr": "0x401ba0",
            "decompiledFuncCode": "int64_t sub_401b96()\n{\n    int64_t var_8 = 0x28;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401ba6",
            "funcStartAddr": "0x401ba6",
            "funcEndAddr": "0x401bb0",
            "decompiledFuncCode": "int64_t sub_401ba6()\n{\n    int64_t var_8 = 0x29;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401bb6",
            "funcStartAddr": "0x401bb6",
            "funcEndAddr": "0x401bc0",
            "decompiledFuncCode": "int64_t sub_401bb6()\n{\n    int64_t var_8 = 0x2a;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401bc6",
            "funcStartAddr": "0x401bc6",
            "funcEndAddr": "0x401bd0",
            "decompiledFuncCode": "int64_t sub_401bc6()\n{\n    int64_t var_8 = 0x2b;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401bd6",
            "funcStartAddr": "0x401bd6",
            "funcEndAddr": "0x401be0",
            "decompiledFuncCode": "int64_t sub_401bd6()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401be6",
            "funcStartAddr": "0x401be6",
            "funcEndAddr": "0x401bf0",
            "decompiledFuncCode": "int64_t sub_401be6()\n{\n    int64_t var_8 = 0x2d;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401c16",
            "funcStartAddr": "0x401c16",
            "funcEndAddr": "0x401c20",
            "decompiledFuncCode": "int64_t sub_401c16()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401c26",
            "funcStartAddr": "0x401c26",
            "funcEndAddr": "0x401c30",
            "decompiledFuncCode": "int64_t sub_401c26()\n{\n    int64_t var_8 = 0x31;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401c56",
            "funcStartAddr": "0x401c56",
            "funcEndAddr": "0x401c60",
            "decompiledFuncCode": "int64_t sub_401c56()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401c66",
            "funcStartAddr": "0x401c66",
            "funcEndAddr": "0x401c70",
            "decompiledFuncCode": "int64_t sub_401c66()\n{\n    int64_t var_8 = 0x35;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401c76",
            "funcStartAddr": "0x401c76",
            "funcEndAddr": "0x401c80",
            "decompiledFuncCode": "int64_t sub_401c76()\n{\n    int64_t var_8 = 0x36;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401c86",
            "funcStartAddr": "0x401c86",
            "funcEndAddr": "0x401c90",
            "decompiledFuncCode": "int64_t sub_401c86()\n{\n    int64_t var_8 = 0x37;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401c96",
            "funcStartAddr": "0x401c96",
            "funcEndAddr": "0x401ca0",
            "decompiledFuncCode": "int64_t sub_401c96()\n{\n    int64_t var_8 = 0x38;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401ca6",
            "funcStartAddr": "0x401ca6",
            "funcEndAddr": "0x401cb0",
            "decompiledFuncCode": "int64_t sub_401ca6()\n{\n    int64_t var_8 = 0x39;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401cb6",
            "funcStartAddr": "0x401cb6",
            "funcEndAddr": "0x401cc0",
            "decompiledFuncCode": "int64_t sub_401cb6()\n{\n    int64_t var_8 = 0x3a;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401cc6",
            "funcStartAddr": "0x401cc6",
            "funcEndAddr": "0x401cd0",
            "decompiledFuncCode": "int64_t sub_401cc6()\n{\n    int64_t var_8 = 0x3b;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401cd6",
            "funcStartAddr": "0x401cd6",
            "funcEndAddr": "0x401ce0",
            "decompiledFuncCode": "int64_t sub_401cd6()\n{\n    int64_t var_8 = 0x3c;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401ce6",
            "funcStartAddr": "0x401ce6",
            "funcEndAddr": "0x401cf0",
            "decompiledFuncCode": "int64_t sub_401ce6()\n{\n    int64_t var_8 = 0x3d;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401d16",
            "funcStartAddr": "0x401d16",
            "funcEndAddr": "0x401d20",
            "decompiledFuncCode": "int64_t sub_401d16()\n{\n    int64_t var_8 = 0x40;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "sub_401d26",
            "funcStartAddr": "0x401d26",
            "funcEndAddr": "0x401d30",
            "decompiledFuncCode": "int64_t sub_401d26()\n{\n    int64_t var_8 = 0x41;\n    /* tailcall */\n    return sub_401900();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x401d80",
            "funcEndAddr": "0x402770",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    int64_t* r14;\n    int64_t* var_10 = r14;\n    char** r12 = argv;\n    int64_t rbp = 0;\n    uint64_t rbx = argc;\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rcx = sub_403bb0(*argv);\n    int32_t* var_208;\n    int32_t* var_200;\n    setlocale(6, &data_409bec[0x1b], rdx, rcx, r8, r9, var_208, var_200);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    sub_407e80(sub_403810);\n    data_60c320 = getpagesize();\n    setvbuf(stdout, nullptr, 1, 0);\n    data_60c331 = 0;\n    data_60c332 = 0;\n    data_60c333 = 0;\n    data_60c334 = 0;\n    data_60c330 = 0;\n    data_60c338 = 0;\n    data_60c340 = 0;\n    data_60c348 = 0;\n    data_60c350 = 0;\n    data_60c358 = 0;\n    while (true)\n    {\n        int32_t rax_2 = getopt_long(rbx, r12, \"clLmw\", &data_408200, nullptr);\n        if (rax_2 == 0xffffffff)\n        {\n            if (data_60c334 != 0)\n            {\n                goto label_401f56;\n            }\n            if (data_60c333 != 0)\n            {\n                goto label_401f56;\n            }\n            while (true)\n            {\n                if ((data_60c332 == 0 && (data_60c331 == 0 && data_60c330 == 0)))\n                {\n                    data_60c331 = 1;\n                    data_60c333 = 1;\n                    data_60c334 = 1;\n                }\n            label_401f56:\n                int64_t rax_4 = data_60c2bc;\n                void* var_1f8;\n                char var_1ed;\n                int32_t var_1e8;\n                char* var_158;\n                uint64_t rax_55;\n                int32_t rcx_2;\n                char* rbx_2;\n                int32_t rdi_24;\n                if (rbp == 0)\n                {\n                    if (rbx <= rax_4)\n                    {\n                        int64_t* rax_61 = sub_4036b0(0x60c318);\n                        r14 = rax_61;\n                        if (rax_61 == 0)\n                        {\n                        label_402696:\n                            sub_4063f0();\n                            /* no return */\n                        }\n                        var_1ed = 0;\n                        var_200 = sub_4061a0(0x98);\n                        var_1f8 = &data_60c318;\n                        var_208 = &var_1e8;\n                    label_4025bf:\n                        rcx_2 = ((((data_60c334 + data_60c333) + data_60c332) + data_60c331) + data_60c330);\n                        if (rcx_2 == 1)\n                        {\n                            rbx_2 = 1;\n                            *var_200 = 1;\n                        label_401ff4:\n                            data_60c32c = rcx_2;\n                            r12 = nullptr;\n                            int32_t r13_1 = 1;\n                        label_4020a0:\n                            char* rax_19 = sub_403720(r14, var_208);\n                            char* r15_1 = rax_19;\n                            if (rax_19 != 0)\n                            {\n                                bool c_1 = false;\n                                bool z_1 = (rbp & rbp) == 0;\n                                int32_t rax_12;\n                                uint32_t rdx_3;\n                                if ((!z_1))\n                                {\n                                    void* const rdi_12 = &data_409bea;\n                                    int64_t rcx_3 = 2;\n                                    int64_t rsi_4 = rbp;\n                                label_4020c7:\n                                    if (rcx_3 != 0)\n                                    {\n                                        char temp3_1 = *rsi_4;\n                                        char temp4_1 = *rdi_12;\n                                        c_1 = temp3_1 < temp4_1;\n                                        z_1 = temp3_1 == temp4_1;\n                                        rsi_4 = (rsi_4 + 1);\n                                        rdi_12 = (rdi_12 + 1);\n                                        rcx_3 = (rcx_3 - 1);\n                                        if (z_1)\n                                        {\n                                            goto label_4020c7;\n                                        }\n                                    }\n                                    rax_19 = ((!z_1) && (!c_1));\n                                    rax_19 = (rax_19 - 0);\n                                    if (rax_19 == 0)\n                                    {\n                                        rax_12 = strcmp(r15_1, &data_409bea);\n                                        if (rax_12 == 0)\n                                        {\n                                            error(0, 0, dcgettext(nullptr, \"when reading file names from std\u2026\", 5), sub_405580(4, r15_1));\n                                        }\n                                        else if (*r15_1 != 0)\n                                        {\n                                            if (rbx_2 != 0)\n                                            {\n                                                goto label_4020e7;\n                                            }\n                                            var_1f8 = var_200;\n                                        label_402041:\n                                            int32_t rax_15 = open(r15_1, 0);\n                                            int32_t rax_17;\n                                            if (rax_15 != 0xffffffff)\n                                            {\n                                                var_1f8 = sub_402a20(rax_15, r15_1, var_1f8, 0);\n                                                rax_17 = close(rax_15);\n                                                rdx_3 = var_1f8;\n                                            }\n                                            if ((rax_15 == 0xffffffff || (rax_15 != 0xffffffff && rax_17 != 0)))\n                                            {\n                                                error(0, *__errno_location(), \"%s\", sub_405650(0, 3, r15_1));\n                                                rdx_3 = 0;\n                                            }\n                                            goto label_402082;\n                                        }\n                                    }\n                                    if ((((rax_19 != 0 && *r15_1 == 0) || ((rax_19 == 0 && rax_12 == 0) && *r15_1 == 0)) || (rax_19 == 0 && rax_12 != 0)))\n                                    {\n                                        int64_t rax_27 = sub_4037b0(r14);\n                                        error(0, 0, \"%s:%lu: %s\", sub_405650(0, 3, rbp), rax_27, dcgettext(nullptr, \"invalid zero-length file name\", 5), var_208, var_200, var_1f8);\n                                        r13_1 = 0;\n                                    }\n                                }\n                                if ((z_1 && *rax_19 == 0))\n                                {\n                                    error(0, 0, \"%s\", dcgettext(nullptr, \"invalid zero-length file name\", 5));\n                                }\n                                if (((z_1 && *rax_19 == 0) || ((((!z_1) && rax_19 == 0) && rax_12 == 0) && *r15_1 != 0)))\n                                {\n                                    r13_1 = 0;\n                                }\n                                if (((z_1 && *rax_19 != 0) || (((!z_1) && rax_19 != 0) && *r15_1 != 0)))\n                                {\n                                    void* const rax_20 = nullptr;\n                                    if (rbx_2 == 0)\n                                    {\n                                        goto label_4020fb;\n                                    }\n                                label_4020e7:\n                                    rax_20 = (r12 * 0x98);\n                                label_4020fb:\n                                    var_1f8 = (rax_20 + var_200);\n                                    if (strcmp(r15_1, &data_409bea) != 0)\n                                    {\n                                        goto label_402041;\n                                    }\n                                    data_60c328 = 1;\n                                    rdx_3 = sub_402a20(0, r15_1, var_1f8, -1);\n                                label_402082:\n                                    r13_1 = (r13_1 & rdx_3);\n                                }\n                                if (rbx_2 == 0)\n                                {\n                                    *var_200 = 1;\n                                }\n                                r12 = (r12 + 1);\n                                goto label_4020a0;\n                            }\n                            int32_t rax_33 = var_1e8;\n                            if (rax_33 != 3)\n                            {\n                                if (rax_33 == 4)\n                                {\n                                    r13_1 = 0;\n                                    rbp = sub_405650(0, 3, rbp);\n                                    rbx = dcgettext(nullptr, \"%s: read error\", 5);\n                                    error(0, *__errno_location(), rbx, rbp);\n                                }\n                                else\n                                {\n                                    if (rax_33 != 2)\n                                    {\n                                        __assert_fail(\"!\"unexpected error code from arg\u2026\", \"src/wc.c\", 0x31a, \"main\");\n                                        /* no return */\n                                    }\n                                    rax_33 = rbp == 0;\n                                    rax_33 = (rax_33 & r13_1);\n                                    rbx = rax_33;\n                                    if (rax_33 != 0)\n                                    {\n                                        r13_1 = rbx;\n                                        if (sub_4037b0(r14) == 0)\n                                        {\n                                            data_60c328 = 1;\n                                            r13_1 = sub_402a20(0, nullptr, var_200, -1);\n                                        }\n                                    }\n                                }\n                                if (var_1ed != 0)\n                                {\n                                    sub_405950(&var_158);\n                                }\n                                if (sub_4037b0(r14) > 1)\n                                {\n                                    sub_402850(data_60c358, data_60c350, data_60c348, data_60c340, data_60c338, dcgettext(nullptr, \"total\", 5));\n                                }\n                                sub_4037d0(r14);\n                                free(var_200);\n                                if (data_60c328 == 0)\n                                {\n                                    return (r13_1 ^ 1);\n                                }\n                                if (close(0) == 0)\n                                {\n                                    return (r13_1 ^ 1);\n                                }\n                                error(1, *__errno_location(), &data_409bea);\n                                continue;\n                            }\n                            goto label_402696;\n                        }\n                        rbx_2 = 1;\n                    label_402434:\n                        int64_t r12_1 = 0;\n                        void* r13_5 = &var_200[2];\n                    label_402465:\n                        char* r15_4 = *(var_1f8 + (r12_1 << 3));\n                        int32_t rax_52;\n                        int32_t rax_54;\n                        if (r15_4 != 0)\n                        {\n                            rax_54 = strcmp(r15_4, &data_409bea);\n                            if (rax_54 != 0)\n                            {\n                                rax_52 = __xstat(1, r15_4, r13_5);\n                            }\n                        }\n                        if ((r15_4 == 0 || (r15_4 != 0 && rax_54 == 0)))\n                        {\n                            rax_52 = __fxstat(1, 0, r13_5);\n                        }\n                        r12_1 = (r12_1 + 1);\n                        *(r13_5 - 8) = rax_52;\n                        r13_5 = (r13_5 + 0x98);\n                        if (rbx_2 != r12_1)\n                        {\n                            goto label_402465;\n                        }\n                        int32_t* rdx_15 = var_200;\n                        rcx_2 = 1;\n                        if (*rdx_15 > 0)\n                        {\n                            goto label_401ff4;\n                        }\n                        rdi_24 = 1;\n                        rax_55 = 0;\n                        int64_t rcx_10 = 0;\n                    label_4024c4:\n                        if (*rdx_15 == 0)\n                        {\n                            if ((rdx_15[8] & 0xf000) != 0x8000)\n                            {\n                                rdi_24 = 7;\n                            }\n                            else\n                            {\n                                rax_55 = (rax_55 + *(rdx_15 + 0x38));\n                            }\n                        }\n                        rcx_10 = (rcx_10 + 1);\n                        rdx_15 = &rdx_15[0x26];\n                        if (rbx_2 != rcx_10)\n                        {\n                            goto label_4024c4;\n                        }\n                        goto label_402536;\n                    }\n                    void* rdi_21 = &r12[rax_4];\n                    rbx_2 = (rbx - rax_4);\n                    var_1f8 = rdi_21;\n                    int64_t* rax_49 = sub_4036b0(rdi_21);\n                    r14 = rax_49;\n                    if (rax_49 == 0)\n                    {\n                        goto label_402696;\n                    }\n                    var_1ed = 0;\n                    var_208 = &var_1e8;\n                label_402420:\n                    var_200 = sub_4061a0((rbx_2 * 0x98));\n                    if (rbx_2 == 1)\n                    {\n                        goto label_4025bf;\n                    }\n                    goto label_402434;\n                }\n                if (rbx > rax_4)\n                {\n                    error(0, 0, dcgettext(nullptr, \"extra operand %s\", 5), sub_405580(4, r12[rax_4]));\n                    __fprintf_chk(stderr, 1, \"%s\\n\", dcgettext(nullptr, \"file operands cannot be combined\u2026\", 5));\n                    break;\n                }\n                FILE* rbx_1;\n                if (strcmp(rbp, &data_409bea) == 0)\n                {\n                    rbx_1 = stdin;\n                }\n                else\n                {\n                    FILE* rax_56 = fopen(rbp, \"r\");\n                    rbx_1 = rax_56;\n                    if (rax_56 == 0)\n                    {\n                        rbp = sub_405580(4, rbp);\n                        rbx_2 = dcgettext(nullptr, \"cannot open %s for reading\", 5);\n                        rax_55 = error(1, *__errno_location(), rbx_2, rbp);\n                    label_402536:\n                        rcx_2 = 1;\n                    label_40254a:\n                        if (rax_55 > 9)\n                        {\n                            rcx_2 = (rcx_2 + 1);\n                            rax_55 = (COMBINE(0, rax_55) / 0xa);\n                            goto label_40254a;\n                        }\n                        if (rcx_2 < rdi_24)\n                        {\n                            rcx_2 = rdi_24;\n                        }\n                        goto label_401ff4;\n                    }\n                }\n                var_208 = &var_1e8;\n                int32_t var_1d0;\n                if ((__fxstat(1, fileno(rbx_1), &var_1e8) == 0 && (var_1d0 & 0xf000) == 0x8000))\n                {\n                    int64_t var_1b8;\n                    double zmm2 = var_1b8;\n                    double zmm0_1 = (sub_403ab0() * 0.5);\n                    double zmm1_1 = 10485760.0;\n                    if (((zmm0_1 == zmm1_1 | (FCMP_UO(zmm0_1, zmm1_1))) || (zmm0_1 < zmm1_1 | (FCMP_UO(zmm0_1, zmm1_1)))))\n                    {\n                        zmm1_1 = (0.5 * sub_403ab0());\n                    }\n                    if ((!(zmm1_1 < zmm2 | (FCMP_UO(zmm1_1, zmm2)))))\n                    {\n                        sub_4058e0(&var_158);\n                        char rax_67 = sub_405980(rbx_1, &var_158);\n                        var_1ed = rax_67;\n                        if (rax_67 == 0)\n                        {\n                        label_402739:\n                            void (* rdx_23)();\n                            int64_t rsi_19;\n                            int64_t rdi_31;\n                            rdx_23 = error(1, 0, dcgettext(nullptr, \"cannot read file names from %s\", 5), sub_405580(4, rbp));\n                            /* tailcall */\n                            return _start(rdi_31, rsi_19, rdx_23);\n                        }\n                        if (sub_406430(rbx_1) != 0)\n                        {\n                            goto label_402739;\n                        }\n                        rbx_2 = var_158;\n                        void* var_150;\n                        var_1f8 = var_150;\n                        int64_t* rax_70 = sub_4036b0(var_150);\n                        r14 = rax_70;\n                        if (rax_70 == 0)\n                        {\n                            goto label_402696;\n                        }\n                        if (rbx_2 == 0)\n                        {\n                            goto label_401fdd;\n                        }\n                        int64_t rax_71;\n                        bool rdx_19;\n                        rdx_19 = HIGHD((0x98 * rbx_2));\n                        rax_71 = LOWD((0x98 * rbx_2));\n                        uint64_t rdx_20 = ((0x98 * rbx_2) >> 0x40) != 0;\n                        if (rax_71 < 0)\n                        {\n                            goto label_402696;\n                        }\n                        if (rdx_20 != 0)\n                        {\n                            goto label_402696;\n                        }\n                        goto label_402420;\n                    }\n                }\n                int64_t* rax_10 = sub_4036e0(rbx_1);\n                r14 = rax_10;\n                if (rax_10 == 0)\n                {\n                    goto label_402696;\n                }\n                var_1ed = 0;\n            label_401fdd:\n                rbx_2 = nullptr;\n                int32_t* rax_11 = sub_4061a0(0x98);\n                rcx_2 = 1;\n                var_200 = rax_11;\n                *rax_11 = 1;\n                goto label_401ff4;\n            }\n            break;\n        }\n        bool cond:0_1 = rax_2 <= 0x63;\n        if (rax_2 == 0x63)\n        {\n            data_60c331 = 1;\n        }\n        else if ((!cond:0_1))\n        {\n            bool cond:1_1 = rax_2 <= 0x6d;\n            if (rax_2 == 0x6d)\n            {\n                data_60c332 = 1;\n            }\n            else if (cond:1_1)\n            {\n                if (rax_2 != 0x6c)\n                {\n                    break;\n                }\n                data_60c334 = 1;\n            }\n            else if (rax_2 == 0x77)\n            {\n                data_60c333 = 1;\n            }\n            else\n            {\n                if (rax_2 != 0x80)\n                {\n                    break;\n                }\n                rbp = data_60c500;\n            }\n        }\n        else\n        {\n            if (rax_2 == 0xffffff7e)\n            {\n                sub_403350(0);\n                /* no return */\n            }\n            if (rax_2 != 0x4c)\n            {\n                if (rax_2 == 0xffffff7d)\n                {\n                    int64_t var_218 = 0;\n                    sub_406060(stdout, &data_407ef3, \"GNU coreutils\", data_60c250);\n                    exit(0);\n                    /* no return */\n                }\n                break;\n            }\n            data_60c330 = 1;\n        }\n    }\n    sub_403350(1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x402770",
            "funcEndAddr": "0x40279a",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40279b",
            "funcStartAddr": "0x40279b",
            "funcEndAddr": "0x4027ba",
            "decompiledFuncCode": "void sub_40279b()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_4027ba",
            "funcStartAddr": "0x4027ba",
            "funcEndAddr": "0x4027f1",
            "decompiledFuncCode": "int64_t sub_4027ba()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_4027f1",
            "funcStartAddr": "0x4027f1",
            "funcEndAddr": "0x402848",
            "decompiledFuncCode": "void sub_4027f1()\n{\n    if (data_60c308 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_60c310;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_60c310 = (rax_1 + 1);\n        *(0x60be40 + ((rax_1 + 1) << 3))();\n    }\n    sub_40279b();\n    data_60c308 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_402848",
            "funcStartAddr": "0x402848",
            "funcEndAddr": "0x40284d",
            "decompiledFuncCode": "int64_t j_sub_4027ba()\n{\n    /* tailcall */\n    return sub_4027ba();\n}\n\n"
        },
        {
            "funcName": "sub_402850",
            "funcStartAddr": "0x402850",
            "funcEndAddr": "0x402a1f",
            "decompiledFuncCode": "char* sub_402850(uint64_t arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint64_t arg5, char* arg6)\n{\n    char const* const rbp = \"%*s\";\n    char* rbx = arg6;\n    void var_58;\n    if (data_60c334 != 0)\n    {\n        rbp = \" %*s\";\n        __printf_chk(1, \"%*s\", data_60c32c, sub_4038f0(arg1, &var_58));\n    }\n    if (data_60c333 != 0)\n    {\n        char const* const rsi_7 = rbp;\n        rbp = \" %*s\";\n        __printf_chk(1, rsi_7, data_60c32c, sub_4038f0(arg2, &var_58));\n    }\n    if (data_60c332 != 0)\n    {\n        char const* const rsi_5 = rbp;\n        rbp = \" %*s\";\n        __printf_chk(1, rsi_5, data_60c32c, sub_4038f0(arg3, &var_58));\n    }\n    if (data_60c331 != 0)\n    {\n        char const* const rsi_3 = rbp;\n        rbp = \" %*s\";\n        __printf_chk(1, rsi_3, data_60c32c, sub_4038f0(arg4, &var_58));\n    }\n    if (data_60c330 != 0)\n    {\n        __printf_chk(1, rbp, data_60c32c, sub_4038f0(arg5, &var_58));\n    }\n    if (rbx != 0)\n    {\n        if (strchr(rbx, 0xa) != 0)\n        {\n            rbx = sub_405650(0, 3, rbx);\n        }\n        __printf_chk(1, \" %s\", rbx);\n    }\n    uint64_t* const rdi_1 = stdout;\n    char* rax_4 = stdout[5];\n    if (rax_4 >= stdout[6])\n    {\n        rax_4 = __overflow(rdi_1, 0xa);\n    }\n    else\n    {\n        stdout[5] = &rax_4[1];\n        *rax_4 = 0xa;\n    }\n    return rax_4;\n}\n\n"
        },
        {
            "funcName": "sub_402a20",
            "funcStartAddr": "0x402a20",
            "funcEndAddr": "0x403342",
            "decompiledFuncCode": "uint64_t sub_402a20(int32_t arg1, char* arg2, int32_t* arg3, int64_t arg4)\n{\n    uint64_t var_4060 = arg2;\n    if (arg2 == 0)\n    {\n        var_4060 = dcgettext(nullptr, \"standard input\", 5);\n    }\n    char r12 = data_60c331;\n    char var_4069;\n    if (__ctype_get_mb_cur_max() > 1)\n    {\n        var_4069 = data_60c332;\n    }\n    else\n    {\n        char rax_12 = data_60c332;\n        var_4069 = 0;\n        if (r12 == 0)\n        {\n            r12 = rax_12;\n        }\n    }\n    uint64_t var_40a0;\n    uint64_t var_4080_2;\n    void var_4048;\n    int64_t rbp_2;\n    uint64_t r12_1;\n    uint64_t r14_3;\n    uint32_t r15_1;\n    if (data_60c333 == 0)\n    {\n        r15_1 = data_60c330;\n        if (r15_1 == 0)\n        {\n            if ((r12 != 1 || (r12 == 1 && var_4069 != 0)))\n            {\n                sub_4038b0(arg1, 0, 0, 2);\n                if ((var_4069 != 1 && r12 == 0))\n                {\n                    if (var_4069 != 0)\n                    {\n                        goto label_402b02;\n                    }\n                label_4031b8:\n                    char var_4098_2 = r15_1;\n                    var_4080_2 = 0;\n                    bool r15_4 = false;\n                    var_40a0 = 0;\n                    while (true)\n                    {\n                        ssize_t rax_51 = sub_405ba0(arg1, &var_4048, 0x4000);\n                        if (rax_51 == 0)\n                        {\n                            rbp_2 = 0;\n                            r12_1 = 0;\n                            r14_3 = 0;\n                            r15_1 = 1;\n                            break;\n                        }\n                        if (rax_51 == -1)\n                        {\n                            rbp_2 = 0;\n                            r15_1 = var_4098_2;\n                            r12_1 = 0;\n                            r14_3 = 0;\n                            error(0, *__errno_location(), \"%s\", sub_405650(0, 3, var_4060));\n                            break;\n                        }\n                        var_4080_2 = (var_4080_2 + rax_51);\n                        void* rbp_6 = (&var_4048 + rax_51);\n                        int64_t rax_52;\n                        int64_t rdx_19;\n                        rdx_19 = HIGHD((rax_51 * -0x7777777777777777));\n                        rax_52 = LOWD((rax_51 * -0x7777777777777777));\n                        uint64_t rbx_8 = (rdx_19 >> 3);\n                        if (r15_4 != 0)\n                        {\n                            uint64_t r12_7 = var_40a0;\n                            char* rdi_16 = &var_4048;\n                            while (true)\n                            {\n                                char* rax_56 = sub_4073a0(rdi_16, 0xa, (rbp_6 - rdi_16));\n                                if (rax_56 == 0)\n                                {\n                                    break;\n                                }\n                                rdi_16 = &rax_56[1];\n                                r12_7 = (r12_7 + 1);\n                            }\n                            uint64_t rax_58 = (r12_7 - var_40a0);\n                            var_40a0 = r12_7;\n                            r15_4 = rax_58 <= rbx_8;\n                        }\n                        else if (rbp_6 == &var_4048)\n                        {\n                            r15_4 = true;\n                        }\n                        else\n                        {\n                            uint64_t rdx_20 = var_40a0;\n                            void* rax_53 = &var_4048;\n                            do\n                            {\n                                rax_53 = (rax_53 + 1);\n                                int64_t rcx_11;\n                                rcx_11 = *(rax_53 - 1) == 0xa;\n                                rdx_20 = (rdx_20 + rcx_11);\n                            } while (rbp_6 != rax_53);\n                            uint64_t rax_55 = (rdx_20 - var_40a0);\n                            var_40a0 = rdx_20;\n                            r15_4 = rax_55 <= rbx_8;\n                        }\n                    }\n                }\n                if (var_4069 == 1)\n                {\n                    goto label_402b02;\n                }\n            }\n            if (((r12 == 1 && var_4069 == 0) && data_60c334 != 0))\n            {\n                sub_4038b0(arg1, 0, 0, 2);\n            }\n            if ((((r12 == 1 && var_4069 == 0) && data_60c334 != 0) || (((r12 != 1 || (r12 == 1 && var_4069 != 0)) && var_4069 != 1) && r12 != 0)))\n            {\n                if (data_60c334 == 0)\n                {\n                    goto label_402aa8;\n                }\n                goto label_4031b8;\n            }\n            if (((r12 == 1 && var_4069 == 0) && data_60c334 == 0))\n            {\n            label_402aa8:\n                int32_t rax_3 = *arg3;\n                if (rax_3 > 0)\n                {\n                    rax_3 = __fxstat(1, arg1, &arg3[2]);\n                    *arg3 = rax_3;\n                }\n                uint64_t var_4080_1;\n                if (rax_3 != 0)\n                {\n                label_402aba:\n                    var_4080_1 = 0;\n                label_402ad7:\n                    sub_4038b0(arg1, 0, 0, 2);\n                    uint64_t rbx_1 = var_4080_1;\n                    ssize_t rax_23;\n                    while (true)\n                    {\n                        rax_23 = sub_405ba0(arg1, &var_4048, 0x4000);\n                        if (rax_23 == 0)\n                        {\n                            break;\n                        }\n                        if (rax_23 == -1)\n                        {\n                            break;\n                        }\n                        rbx_1 = (rbx_1 + rax_23);\n                    }\n                    if (rax_23 == -1)\n                    {\n                        rbp_2 = 0;\n                        var_4080_2 = rbx_1;\n                        r12_1 = 0;\n                        r14_3 = 0;\n                        error(0, *__errno_location(), \"%s\", sub_405650(0, 3, var_4060));\n                        var_40a0 = 0;\n                    }\n                    else\n                    {\n                        var_4080_2 = rbx_1;\n                    label_402e26:\n                        rbp_2 = 0;\n                        r12_1 = 0;\n                        r14_3 = 0;\n                        r15_1 = 1;\n                        var_40a0 = 0;\n                    }\n                }\n                else\n                {\n                    if ((arg3[8] & 0xd000) != 0x8000)\n                    {\n                        goto label_402aba;\n                    }\n                    uint64_t r12_3 = *(arg3 + 0x38);\n                    if (r12_3 < 0)\n                    {\n                        goto label_402aba;\n                    }\n                    var_4080_2 = r12_3;\n                    int64_t r13_3 = data_60c320;\n                    off64_t rbp_5;\n                    uint8_t rsi_6;\n                    if (arg4 == -1)\n                    {\n                        rbp_5 = lseek(arg1, 0, 1);\n                        if ((COMBINE(0, r12_3) % r13_3) == 0)\n                        {\n                            rsi_6 = ((!rbp_5) >> 0x3f);\n                        }\n                        else\n                        {\n                            if (rbp_5 <= var_4080_2)\n                            {\n                                var_4080_2 = (var_4080_2 - rbp_5);\n                                goto label_402e26;\n                            }\n                            rbp_2 = 0;\n                            r12_1 = 0;\n                            r14_3 = 0;\n                            r15_1 = 1;\n                            var_4080_2 = 0;\n                            var_40a0 = 0;\n                        }\n                    }\n                    else\n                    {\n                        if ((COMBINE(0, r12_3) % r13_3) != 0)\n                        {\n                            goto label_402e26;\n                        }\n                        rsi_6 = 1;\n                        rbp_5 = 0;\n                    }\n                    if (((arg4 == -1 && (COMBINE(0, r12_3) % r13_3) == 0) || arg4 != -1))\n                    {\n                        int64_t rax_28 = *(arg3 + 0x40);\n                        int64_t rax_29 = (rax_28 + 1);\n                        int64_t rcx_6 = 0x201;\n                        if ((rax_28 - 1) <= 0x1fffffffffffffff)\n                        {\n                            rcx_6 = rax_29;\n                        }\n                        int64_t r12_4 = (r12_3 - (COMBINE(0, r12_3) % rcx_6));\n                        if (r12_4 <= rbp_5)\n                        {\n                            goto label_402aba;\n                        }\n                        if (rsi_6 == 0)\n                        {\n                            goto label_402aba;\n                        }\n                        if (lseek(arg1, r12_4, 1) < 0)\n                        {\n                            goto label_402aba;\n                        }\n                        var_4080_1 = (r12_4 - rbp_5);\n                        goto label_402ad7;\n                    }\n                }\n            }\n        }\n    }\n    if ((data_60c333 != 0 || (data_60c333 == 0 && r15_1 != 0)))\n    {\n        sub_4038b0(arg1, 0, 0, 2);\n    label_402b02:\n        if (__ctype_get_mb_cur_max() <= 1)\n        {\n            int64_t rbp_4 = 0;\n            var_4080_2 = 0;\n            int64_t r15_3 = 0;\n            var_40a0 = 0;\n            void* var_4078_2 = &var_4048;\n            int64_t rbx_3 = 0;\n            int64_t r13_2 = 0;\n            char rbx_5;\n            int64_t r12_6;\n            int64_t r13_6;\n            while (true)\n            {\n                ssize_t rax_19 = sub_405ba0(arg1, var_4078_2, 0x4000);\n                if (rax_19 == 0)\n                {\n                    r12_6 = rbp_4;\n                    r13_6 = rbx_3;\n                    rbp_2 = r15_3;\n                    rbx_5 = r13_2;\n                    r15_1 = 1;\n                    break;\n                }\n                if (rax_19 == -1)\n                {\n                    r13_6 = rbx_3;\n                    rbx_5 = r13_2;\n                    r12_6 = rbp_4;\n                    rbp_2 = r15_3;\n                    r15_1 = 0;\n                    error(0, *__errno_location(), \"%s\", sub_405650(0, 3, var_4060));\n                    break;\n                }\n                var_4080_2 = (var_4080_2 + rax_19);\n                void* r12_2 = var_4078_2;\n                void* r14_2 = (r12_2 + rax_19);\n                while (true)\n                {\n                    r12_2 = (r12_2 + 1);\n                    char rsi_3 = *(r12_2 - 1);\n                    char rdx_5 = (rsi_3 - 9);\n                    switch (rdx_5)\n                    {\n                        case 0:\n                        {\n                            r15_3 = ((r15_3 & 0xfffffffffffffff8) + 8);\n                            goto label_402da8;\n                        }\n                        case 1:\n                        {\n                            var_40a0 = (var_40a0 + 1);\n                            break;\n                        }\n                        case 2:\n                        {\n                            goto label_402da8;\n                        }\n                        case 0x17:\n                        {\n                            r15_3 = (r15_3 + 1);\n                        label_402da8:\n                            rbp_4 = (rbp_4 + r13_2);\n                            r13_2 = 0;\n                            break;\n                        }\n                        default:\n                            int16_t rax_22 = *__ctype_b_loc()[rsi_3];\n                            if ((*rax_22[1] & 0x40) != 0)\n                            {\n                                r15_3 = (r15_3 + 1);\n                                if ((*rax_22[1] & 0x20) != 0)\n                                {\n                                    goto label_402da8;\n                                }\n                                r13_2 = 1;\n                            }\n                    }\n                    if (((rdx_5 == 1 || rdx_5 == 3) || rdx_5 == 4))\n                    {\n                        if (rbx_3 < r15_3)\n                        {\n                            rbx_3 = r15_3;\n                        }\n                        r15_3 = 0;\n                        goto label_402da8;\n                    }\n                    if ((((((((((((((((((((rdx_5 > 0x17 || rdx_5 == 5) || rdx_5 == 6) || rdx_5 == 7) || rdx_5 == 8) || rdx_5 == 9) || rdx_5 == 0xa) || rdx_5 == 0xb) || rdx_5 == 0xc) || rdx_5 == 0xd) || rdx_5 == 0xe) || rdx_5 == 0xf) || rdx_5 == 0x10) || rdx_5 == 0x11) || rdx_5 == 0x12) || rdx_5 == 0x13) || rdx_5 == 0x14) || rdx_5 == 0x15) || rdx_5 == 0x16) || rdx_5 == 0x17))\n                    {\n                        if (r12_2 == r14_2)\n                        {\n                            break;\n                        }\n                    }\n                }\n            }\n            uint64_t r14_5 = rbx_5;\n            if (r13_6 >= rbp_2)\n            {\n                rbp_2 = r13_6;\n            }\n            r14_3 = (r14_5 + r12_6);\n            r12_1 = 0;\n        }\n        else\n        {\n            rbp_2 = 0;\n            mbstate_t var_4050;\n            var_4050.__count = 0;\n            var_4050.__value = 0;\n            int64_t rbx_2 = 0;\n            r12_1 = 0;\n            int64_t var_4088_1 = 0;\n            var_4080_2 = 0;\n            int64_t var_4090_1 = 0;\n            var_40a0 = 0;\n            void* var_4078_1 = &var_4048;\n            uint64_t r13_1 = 0;\n            mbstate_t r15_2;\n            r15_2.__count = 0;\n            r15_2.__value = 0;\n            while (true)\n            {\n                ssize_t rax_6 = sub_405ba0(arg1, (var_4078_1 + r13_1), (0x4000 - r13_1));\n                if (rax_6 == 0)\n                {\n                    r15_1 = 1;\n                }\n                else if (rax_6 == -1)\n                {\n                    r15_1 = 0;\n                    error(0, *__errno_location(), \"%s\", sub_405650(0, 3, var_4060));\n                }\n                else\n                {\n                    var_4080_2 = (var_4080_2 + rax_6);\n                    r13_1 = (r13_1 + rax_6);\n                    void* r14_1 = var_4078_1;\n                    if (r15_2.__count != 0)\n                    {\n                        goto label_402c4d;\n                    }\n                    while (true)\n                    {\n                        int32_t rcx = *r14_1;\n                        int32_t rax_7;\n                        rax_7 = (rcx >> 5);\n                        if (((*(((rax_7 & 7) << 2) + 0x408980) >> rcx) & 1) == 0)\n                        {\n                            goto label_402c4d;\n                        }\n                        int32_t var_4054 = rcx;\n                        r12_1 = (r12_1 + 1);\n                        int64_t rdx_1 = 1;\n                    label_402bd2:\n                        uint64_t rax_11 = (rcx - 9);\n                        r14_1 = (r14_1 + rdx_1);\n                        r13_1 = (r13_1 - rdx_1);\n                        int32_t rdi_5;\n                        if (rax_11 <= 0x17)\n                        {\n                            if (rax_11 == 1)\n                            {\n                                var_40a0 = (var_40a0 + 1);\n                            }\n                            else if (rax_11 == 0x17)\n                            {\n                                rbp_2 = (rbp_2 + 1);\n                            }\n                            else if (rax_11 == 0)\n                            {\n                                rbp_2 = ((rbp_2 & 0xfffffffffffffff8) + 8);\n                            }\n                            if (((rax_11 == 1 || rax_11 == 3) || rax_11 == 4))\n                            {\n                                if (var_4088_1 >= rbp_2)\n                                {\n                                    rbp_2 = var_4088_1;\n                                }\n                                var_4088_1 = rbp_2;\n                                rbp_2 = 0;\n                            }\n                            if ((((rax_11 == 0x17 || rax_11 == 0) || (((rax_11 == 1 || rax_11 == 3) || rax_11 == 4) && (var_4088_1 >= rbp_2 || var_4088_1 < rbp_2))) || rax_11 == 2))\n                            {\n                                while (true)\n                                {\n                                    var_4090_1 = (var_4090_1 + rbx_2);\n                                    rbx_2 = 0;\n                                label_402c30:\n                                    if (r13_1 == 0)\n                                    {\n                                        break;\n                                    }\n                                    if (r15_2.__count == 0)\n                                    {\n                                        break;\n                                    }\n                                label_402c4d:\n                                    r15_2.__count = var_4050.__count;\n                                    r15_2.__value = var_4050.__value;\n                                    uint64_t rax_14 = sub_407320(&var_4054, r14_1, r13_1, &var_4050);\n                                    if (rax_14 == -2)\n                                    {\n                                        var_4050.__count = r15_2.__count;\n                                        var_4050.__value = r15_2.__value;\n                                        if (r13_1 != 0)\n                                        {\n                                            if (r13_1 == 0x4000)\n                                            {\n                                                r14_1 = (r14_1 + 1);\n                                                r13_1 = 0x3fff;\n                                            }\n                                            __memmove_chk(var_4078_1, r14_1, r13_1, 0x4001);\n                                        }\n                                        r15_2.__count = 1;\n                                        r15_2.__value = 0;\n                                        break;\n                                    }\n                                    if (rax_14 == -1)\n                                    {\n                                        r14_1 = (r14_1 + 1);\n                                        r13_1 = (r13_1 - 1);\n                                        r15_2.__count = 1;\n                                        r15_2.__value = 0;\n                                        goto label_402c30;\n                                    }\n                                    char var_4098;\n                                    var_4098 = rax_14;\n                                    rdx_1 = var_4098;\n                                    r15_2.__count = mbsinit(&var_4050) == 0;\n                                    r12_1 = (r12_1 + 1);\n                                    if (rdx_1 != 0)\n                                    {\n                                        rcx = var_4054;\n                                        goto label_402bd2;\n                                    }\n                                    var_4054 = 0;\n                                    r14_1 = (r14_1 + 1);\n                                    rdi_5 = 0;\n                                    rcx = 0;\n                                    r13_1 = (r13_1 - 1);\n                                label_402cab:\n                                    var_4098 = rcx;\n                                    wchar_t rcx_2 = var_4098;\n                                    if (iswprint(rdi_5) == 0)\n                                    {\n                                        goto label_402c30;\n                                    }\n                                    int32_t rax_17 = wcwidth(rcx_2);\n                                    int32_t rdi_7 = var_4054;\n                                    int64_t rdx_4 = (rax_17 + rbp_2);\n                                    if (rax_17 > 0)\n                                    {\n                                        rbp_2 = rdx_4;\n                                    }\n                                    if (iswspace(rdi_7) == 0)\n                                    {\n                                        rbx_2 = 1;\n                                        goto label_402c30;\n                                    }\n                                }\n                                if ((!(r13_1 != 0 && r15_2.__count == 0)))\n                                {\n                                    break;\n                                }\n                                if ((r13_1 != 0 && r15_2.__count == 0))\n                                {\n                                    continue;\n                                }\n                            }\n                            if ((((((((((((((((((rax_11 == 5 || rax_11 == 6) || rax_11 == 7) || rax_11 == 8) || rax_11 == 9) || rax_11 == 0xa) || rax_11 == 0xb) || rax_11 == 0xc) || rax_11 == 0xd) || rax_11 == 0xe) || rax_11 == 0xf) || rax_11 == 0x10) || rax_11 == 0x11) || rax_11 == 0x12) || rax_11 == 0x13) || rax_11 == 0x14) || rax_11 == 0x15) || rax_11 == 0x16))\n                            {\n                                /* nop */\n                            }\n                        }\n                        rdi_5 = rcx;\n                        goto label_402cab;\n                    }\n                    continue;\n                }\n                if (var_4088_1 >= rbp_2)\n                {\n                    rbp_2 = var_4088_1;\n                }\n                r14_3 = (var_4090_1 + rbx_2);\n                break;\n            }\n        }\n    }\n    if (data_60c332 > var_4069)\n    {\n        r12_1 = var_4080_2;\n    }\n    sub_402850(var_40a0, r14_3, r12_1, var_4080_2, rbp_2, arg2);\n    data_60c358 = (data_60c358 + var_40a0);\n    data_60c350 = (data_60c350 + r14_3);\n    data_60c348 = (data_60c348 + r12_1);\n    data_60c340 = (data_60c340 + var_4080_2);\n    if (data_60c338 < rbp_2)\n    {\n        data_60c338 = rbp_2;\n    }\n    return r15_1;\n}\n\n"
        },
        {
            "funcName": "sub_403350",
            "funcStartAddr": "0x403350",
            "funcEndAddr": "0x4036ad",
            "decompiledFuncCode": "int64_t sub_403350(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_60c370;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [OPTION]... [FILE]...\\n\u2026\", 5), rbp, rbp);\n        fputs_unlocked(dcgettext(nullptr, \"Print newline, word, and byte co\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nWith no FILE, or when FILE is \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nThe options below may be used \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --files0-from=F    read in\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        void* const var_88 = &data_407ef6;\n        void* const* rax_10 = &var_88;\n        void* const var_78_1 = \"coreutils\";\n        void* const var_70_1 = \"Multi-call invocation\";\n        void* const var_68_1 = \"sha224sum\";\n        void* const var_60_1 = \"sha2 utilities\";\n        void* const var_58_1 = \"sha256sum\";\n        void* const var_50_1 = \"sha2 utilities\";\n        void* const var_48_1 = \"sha384sum\";\n        void* const var_40_1 = \"sha2 utilities\";\n        void* const var_38_1 = \"sha512sum\";\n        void* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_10 = &rax_10[2];\n            void* const rdi_8 = *rax_10;\n            c_1 = false;\n            z_1 = (rdi_8 & rdi_8) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            void* const rsi_8 = &data_407ef3;\n            int64_t rcx_2 = 3;\n            while (rcx_2 != 0)\n            {\n                char temp0_1 = *rsi_8;\n                char temp1_1 = *rdi_8;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_8 = (rsi_8 + 1);\n                rdi_8 = (rdi_8 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        void* const rbp_1 = rax_10[1];\n        char* rax_21;\n        int32_t rax_22;\n        void* const r12_1;\n        if (rbp_1 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_5;\n            uint64_t r8_2;\n            ssize_t r9_2;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_21 = setlocale(5, nullptr, rdx_5, rcx_5, r8_2, r9_2, var_88, \"test invocation\");\n            if (rax_21 != 0)\n            {\n                rax_22 = strncmp(rax_21, &data_407f7a, 3);\n                if (rax_22 != 0)\n                {\n                    rbp_1 = &data_407ef3;\n                }\n            }\n            if ((rax_21 == 0 || (rax_21 != 0 && rax_22 == 0)))\n            {\n                rbp_1 = &data_407ef3;\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", &data_407ef3);\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_3;\n            uint64_t r8_1;\n            ssize_t r9_1;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_13 = setlocale(5, nullptr, rdx_3, rcx_3, r8_1, r9_1, var_88, \"test invocation\");\n            if (rax_13 == 0)\n            {\n                goto label_4035a0;\n            }\n            if (strncmp(rax_13, &data_407f7a, 3) == 0)\n            {\n                goto label_4035a0;\n            }\n        }\n        if ((((rbp_1 == 0 && rax_21 != 0) && rax_22 != 0) || rbp_1 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), &data_407ef3);\n        label_4035a0:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", &data_407ef3);\n            if (rbp_1 != &data_407ef3)\n            {\n                r12_1 = &data_409bec[0x1b];\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_1, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4036b0",
            "funcStartAddr": "0x4036b0",
            "funcEndAddr": "0x4036d4",
            "decompiledFuncCode": "int64_t* sub_4036b0(int64_t arg1)\n{\n    int64_t* rax = malloc(0x30);\n    if (rax != 0)\n    {\n        *rax = 0;\n        rax[4] = arg1;\n        rax[5] = arg1;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4036e0",
            "funcStartAddr": "0x4036e0",
            "funcEndAddr": "0x403718",
            "decompiledFuncCode": "int64_t* sub_4036e0(int64_t arg1)\n{\n    int64_t* rax = malloc(0x30);\n    if (rax != 0)\n    {\n        *rax = arg1;\n        rax[2] = 0;\n        rax[3] = 0;\n        rax[1] = 0;\n        rax[4] = 0;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_403720",
            "funcStartAddr": "0x403720",
            "funcEndAddr": "0x4037a7",
            "decompiledFuncCode": "int64_t sub_403720(int64_t* arg1, int32_t* arg2)\n{\n    FILE* rcx = *arg1;\n    if (rcx == 0)\n    {\n        int64_t* rdx = arg1[5];\n        int64_t rax_2 = *rdx;\n        if (rax_2 == 0)\n        {\n            *arg2 = 2;\n            return rax_2;\n        }\n        *arg2 = 1;\n        arg1[5] = &rdx[1];\n        return rax_2;\n    }\n    int64_t rax_1;\n    if (getdelim(&arg1[2], &arg1[3], 0, rcx) < 0)\n    {\n        int32_t rax_3 = feof(*arg1);\n        *arg2 = (((rax_3 - rax_3) & 2) + 2);\n        rax_1 = 0;\n    }\n    else\n    {\n        *arg2 = 1;\n        rax_1 = arg1[2];\n        arg1[1] = (arg1[1] + 1);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4037b0",
            "funcStartAddr": "0x4037b0",
            "funcEndAddr": "0x4037cd",
            "decompiledFuncCode": "int64_t sub_4037b0(int64_t* arg1)\n{\n    if (*arg1 == 0)\n    {\n        return ((arg1[5] - arg1[4]) >> 3);\n    }\n    return arg1[1];\n}\n\n"
        },
        {
            "funcName": "sub_4037d0",
            "funcStartAddr": "0x4037d0",
            "funcEndAddr": "0x4037ec",
            "decompiledFuncCode": "int64_t sub_4037d0(void* arg1)\n{\n    if (*arg1 != 0)\n    {\n        free(*(arg1 + 0x10));\n    }\n    /* tailcall */\n    return free(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_4037f0",
            "funcStartAddr": "0x4037f0",
            "funcEndAddr": "0x4037f8",
            "decompiledFuncCode": "int64_t sub_4037f0(int64_t arg1)\n{\n    data_60c368 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_403800",
            "funcStartAddr": "0x403800",
            "funcEndAddr": "0x403808",
            "decompiledFuncCode": "int64_t sub_403800(char arg1)\n{\n    data_60c360 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_403810",
            "funcStartAddr": "0x403810",
            "funcEndAddr": "0x4038ae",
            "decompiledFuncCode": "void sub_403810(void* arg1)\n{\n    int32_t rax = sub_4077e0(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_60c360 == 0 || (data_60c360 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_60c368;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_405620(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_60c360 != 0) && *rax_1 == 0x20)) && sub_4077e0(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_60c258);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4038b0",
            "funcStartAddr": "0x4038b0",
            "funcEndAddr": "0x4038b5",
            "decompiledFuncCode": "int64_t sub_4038b0(int32_t arg1, int64_t arg2, off64_t arg3, int32_t arg4)\n{\n    /* tailcall */\n    return posix_fadvise(arg1, arg2, arg3, arg4);\n}\n\n"
        },
        {
            "funcName": "sub_4038c0",
            "funcStartAddr": "0x4038c0",
            "funcEndAddr": "0x4038e1",
            "decompiledFuncCode": "void sub_4038c0(FILE* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        return;\n    }\n    /* tailcall */\n    return posix_fadvise(fileno(arg1), 0, 0, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_4038f0",
            "funcStartAddr": "0x4038f0",
            "funcEndAddr": "0x403938",
            "decompiledFuncCode": "void* sub_4038f0(uint64_t arg1, void* arg2)\n{\n    void* rcx = (arg2 + 0x14);\n    *(arg2 + 0x14) = 0;\n    while (true)\n    {\n        rcx = (rcx - 1);\n        int64_t rax_2;\n        int64_t rdx_1;\n        rdx_1 = HIGHD((arg1 * -0x3333333333333333));\n        rax_2 = LOWD((arg1 * -0x3333333333333333));\n        uint64_t rdx_2 = (rdx_1 >> 3);\n        char rax_3 = (rdx_2 + (rdx_2 << 2));\n        *rcx = ((arg1 - (rax_3 + rax_3)) + 0x30);\n        if (arg1 <= 9)\n        {\n            break;\n        }\n        arg1 = rdx_2;\n    }\n    return rcx;\n}\n\n"
        },
        {
            "funcName": "sub_403940",
            "funcStartAddr": "0x403940",
            "funcEndAddr": "0x403961",
            "decompiledFuncCode": "uint64_t sub_403940(wchar_t arg1)\n{\n    int64_t rax = wcwidth(arg1);\n    if (rax < 0)\n    {\n        int32_t rax_1;\n        rax_1 = iswcntrl(arg1) == 0;\n        return rax_1;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_403970",
            "funcStartAddr": "0x403970",
            "funcEndAddr": "0x4039c6",
            "decompiledFuncCode": "uint64_t sub_403970(int64_t* arg1, int64_t* arg2)\n{\n    int64_t rsi = *arg2;\n    uint64_t rdx = arg2[1];\n    if (rsi == &arg2[3])\n    {\n        rdx = arg2[1];\n        *arg1 = memcpy(&arg1[3], rsi, rdx);\n    }\n    else\n    {\n        *arg1 = rsi;\n    }\n    uint64_t rax_1 = arg2[2];\n    arg1[1] = rdx;\n    arg1[2] = rax_1;\n    if (rax_1 != 0)\n    {\n        rax_1 = *(arg2 + 0x14);\n        *(arg1 + 0x14) = rax_1;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4039d0",
            "funcStartAddr": "0x4039d0",
            "funcEndAddr": "0x4039e7",
            "decompiledFuncCode": "uint64_t sub_4039d0(int32_t arg1)\n{\n    int32_t rax;\n    rax = (arg1 >> 5);\n    return ((*(((rax & 7) << 2) + 0x408980) >> arg1) & 1);\n}\n\n"
        },
        {
            "funcName": "sub_4039f0",
            "funcStartAddr": "0x4039f0",
            "funcEndAddr": "0x403aab",
            "decompiledFuncCode": "int64_t sub_4039f0()\n{\n    double zmm0 = sysconf(0x55);\n    int64_t rax_1 = sysconf(0x1e);\n    int64_t zmm2 = 0;\n    double zmm1;\n    if ((!(zmm0 < zmm2 | (FCMP_UO(zmm0, zmm2)))))\n    {\n        zmm1 = rax_1;\n    }\n    if (((zmm0 < zmm2 | (FCMP_UO(zmm0, zmm2))) || ((!(zmm0 < zmm2 | (FCMP_UO(zmm0, zmm2)))) && (zmm1 < zmm2 | (FCMP_UO(zmm1, zmm2))))))\n    {\n        void var_78;\n        int64_t rax_2 = sysinfo(&var_78);\n        if (rax_2 != 0)\n        {\n            return rax_2;\n        }\n        int32_t var_10;\n        rax_1 = var_10;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_403ab0",
            "funcStartAddr": "0x403ab0",
            "funcEndAddr": "0x403ba6",
            "decompiledFuncCode": "int64_t sub_403ab0()\n{\n    double zmm0 = sysconf(0x56);\n    int64_t rax_1 = sysconf(0x1e);\n    int64_t zmm2 = 0;\n    double zmm1;\n    if ((!(zmm0 < zmm2 | (FCMP_UO(zmm0, zmm2)))))\n    {\n        zmm1 = rax_1;\n    }\n    if (((zmm0 < zmm2 | (FCMP_UO(zmm0, zmm2))) || ((!(zmm0 < zmm2 | (FCMP_UO(zmm0, zmm2)))) && (zmm1 < zmm2 | (FCMP_UO(zmm1, zmm2))))))\n    {\n        void var_78;\n        if (sysinfo(&var_78) != 0)\n        {\n            return sub_4039f0();\n        }\n        int32_t var_10;\n        rax_1 = var_10;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_403bb0",
            "funcStartAddr": "0x403bb0",
            "funcEndAddr": "0x403c49",
            "decompiledFuncCode": "char* sub_403bb0(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_4089f0;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_60c370 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_403c50",
            "funcStartAddr": "0x403c50",
            "funcEndAddr": "0x403d42",
            "decompiledFuncCode": "char* sub_403c50(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_4078a0();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_403d31:\n                void* const rbx_1 = &data_4089f4;\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_403d31;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_403d31;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_403d31;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_403d31;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_403d31;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_403d31;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_403d31;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_4089fd;\n            if (cond:2_1)\n            {\n                rbx = &data_4089fa;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_403d31;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_403d31;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_403d31;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_403d31;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_403d31;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_408a01;\n            if (cond:1_1)\n            {\n                rbx = &data_4089f6;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_403d50",
            "funcStartAddr": "0x401d50",
            "funcEndAddr": "0x404f71",
            "decompiledFuncCode": "int64_t sub_403d50(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    char const* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n    label_403de8:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_40415c:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_4041a4;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_403d50(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char const rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_4041bb;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_4042f5;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_403f45;\n                            }\n                            goto label_404230;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_4042f5;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_404120;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_404120:\n                            if (var_c0 == 0)\n                            {\n                                goto label_40412b;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_403f87:\n                            if (var_5c == 0)\n                            {\n                                goto label_403f98;\n                            }\n                        label_404150:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_404158;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_40438b;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_40438b:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_40439a:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_40415c;\n                            }\n                            goto label_404120;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_404120;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_404120;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_40438b;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_403f26;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_403f26:\n                            if (var_5c == 0)\n                            {\n                                goto label_403f45;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_403f45;\n                            }\n                            goto label_40439a;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_403f1d:\n                            if (r12_1 != 0)\n                            {\n                                goto label_40412b;\n                            }\n                            goto label_403f26;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_404350:\n                            rdx = r11_1 == 2;\n                        label_403f45:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_40404c;\n                            }\n                            goto label_403f4f;\n                        }\n                        case 0x27:\n                        {\n                            goto label_4040cd;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_40409d;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_4040fa;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_404e8d;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_404064;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_403ef9;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_4044f0;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_4044f0;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_404e40:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_4041a4:\n                            rbx_1 = sub_403d50(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_4041bb:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_4042f5;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_404247;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_4042f5;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_404210:\n                                r13 = 0;\n                                goto label_403fcb;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_403f98:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_403fcb:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_403fd5;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_403fd5:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_403fdd;\n                            }\n                            case 9:\n                            {\n                                goto label_4041c0;\n                            }\n                            case 0xa:\n                            {\n                                goto label_404138;\n                            }\n                            case 0xb:\n                            {\n                                goto label_404220;\n                            }\n                            case 0xc:\n                            {\n                                goto label_404200;\n                            }\n                            case 0xd:\n                            {\n                                goto label_4041e9;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_40454a;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_4041d5;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_40452a;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_404512;\n                            }\n                            case 0x27:\n                            {\n                                goto label_4040cd;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_40409d;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_4040fa;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_403ef9;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_4044f0:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_4042f0:\n                            var_b8 = 0;\n                        label_4042f5:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_404344:\n                                if (rdx == 0)\n                                {\n                                    goto label_404350;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_404841:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_404064;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_40415c;\n                                }\n                                r13 = var_98;\n                                goto label_403fdd;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_407320(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_40415c;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_404841;\n                            }\n                            goto label_404344;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_404230:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_40415c;\n                                }\n                                var_b8 = 0;\n                            label_404247:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_404292;\n                                    }\n                                    rax_8 = r10;\n                                label_40428a:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_404292:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_40404c;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_4042d3;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_40428a;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_40404c;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_4042f0;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_404205;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_40413d;\n                            }\n                            case 9:\n                            {\n                            label_4041c0:\n                                rbp_3 = 0x74;\n                                goto label_40413d;\n                            }\n                            case 0xa:\n                            {\n                            label_404138:\n                                rbp_3 = 0x6e;\n                            label_40413d:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_404150;\n                                }\n                                goto label_403f98;\n                            }\n                            case 0xb:\n                            {\n                            label_404220:\n                                rbp_3 = 0x76;\n                                goto label_404205;\n                            }\n                            case 0xc:\n                            {\n                            label_404200:\n                                rbp_3 = 0x66;\n                            label_404205:\n                                if (var_5c == 0)\n                                {\n                                    goto label_404210;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_404158:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_40415c;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_4041e9:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_404120;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_40454a:\n                                rbp_3 = 0x20;\n                                goto label_404512;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_4041d5:\n                                rdx = 0;\n                            label_40412b:\n                                r13 = 0;\n                                goto label_403f45;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_40452a:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_403f45;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_403f4f:\n                                rax_8 = 0;\n                                goto label_403f51;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_404512:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_403f51;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_4040cd:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_403f45;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_404e8d;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_40404c;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_40409d:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_404e8d:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_40415c;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_40404c:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_403f87;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_404064;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_403f45;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_404630:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_403f45;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_404630;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_404630;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_404630;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_404630;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_404e40;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_4042d3:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_40404c;\n                                }\n                            label_403f51:\n                                if (arg7 == 0)\n                                {\n                                    goto label_40404c;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_40404c;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_403f87;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_4040fa:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_404120;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_404064:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_403fdd;\n                                }\n                            label_403fdd:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_403fe6;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_403fe6:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_403ef9:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_40412b;\n                                }\n                                goto label_403f1d;\n                            }\n                        }\n                    }\n                }\n            }\n        label_4045d6:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = \"'\";\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_403de8;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = \"'\";\n                goto label_403de8;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"'\";\n            goto label_403de8;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_4089f4;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_4089f4;\n            }\n            goto label_403de8;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_4089f4;\n            goto label_403de8;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_403de8;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_403c50(&data_408a05, r13);\n                arg9 = sub_403c50(\"'\", r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_403de8;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_4045d6;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n        goto label_403de8;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_404f80",
            "funcStartAddr": "0x401d55",
            "funcEndAddr": "0x40511e",
            "decompiledFuncCode": "char* sub_404f80(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_60c298;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_60c2b0 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_4063f0();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x60c2a0)\n        {\n            int64_t rax_9 = sub_406200(0, rsi_1);\n            int128_t zmm0 = data_60c2a0;\n            rbx = rax_9;\n            data_60c298 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_406200(rbx, rsi_1);\n            data_60c298 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_60c2b0;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_60c2b0 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_403d50(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        size_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x60c380)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_4061a0(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_403d50(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_405120",
            "funcStartAddr": "0x405120",
            "funcEndAddr": "0x405154",
            "decompiledFuncCode": "int64_t sub_405120(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x60c480;\n    }\n    int64_t rax_1 = sub_4063a0(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_405160",
            "funcStartAddr": "0x405160",
            "funcEndAddr": "0x40516f",
            "decompiledFuncCode": "uint64_t sub_405160(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60c480;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_405170",
            "funcStartAddr": "0x405170",
            "funcEndAddr": "0x40517f",
            "decompiledFuncCode": "void sub_405170(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60c480;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_405180",
            "funcStartAddr": "0x405180",
            "funcEndAddr": "0x4051b3",
            "decompiledFuncCode": "uint64_t sub_405180(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x60c480;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_4051c0",
            "funcStartAddr": "0x4051c0",
            "funcEndAddr": "0x4051d3",
            "decompiledFuncCode": "uint64_t sub_4051c0(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60c480;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4051e0",
            "funcStartAddr": "0x4051e0",
            "funcEndAddr": "0x40520b",
            "decompiledFuncCode": "void sub_4051e0(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60c480;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x60c480;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_405210",
            "funcStartAddr": "0x405210",
            "funcEndAddr": "0x405282",
            "decompiledFuncCode": "int64_t sub_405210(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_60c480;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_403d50(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_405290",
            "funcStartAddr": "0x405290",
            "funcEndAddr": "0x405371",
            "decompiledFuncCode": "char* sub_405290(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_60c480;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_403d50(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_4061a0((rax_2 + 1));\n    sub_403d50(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_405380",
            "funcStartAddr": "0x405380",
            "funcEndAddr": "0x40538a",
            "decompiledFuncCode": "int64_t sub_405380(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_405290(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_405390",
            "funcStartAddr": "0x405390",
            "funcEndAddr": "0x405425",
            "decompiledFuncCode": "uint64_t sub_405390()\n{\n    uint64_t rax_2 = data_60c2b0;\n    int64_t r12 = data_60c298;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x60c380)\n    {\n        rax_2 = free(rdi_2);\n        *data_60c2a0 = 0x100;\n        *(data_60c2a0 + 8) = 0x60c380;\n    }\n    if (r12 != 0x60c2a0)\n    {\n        rax_2 = free(r12);\n        data_60c298 = 0x60c2a0;\n    }\n    data_60c2b0 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_405430",
            "funcStartAddr": "0x405430",
            "funcEndAddr": "0x405441",
            "decompiledFuncCode": "int64_t sub_405430(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_404f80(arg1, arg2, -1, &data_60c480);\n}\n\n"
        },
        {
            "funcName": "sub_405450",
            "funcStartAddr": "0x405450",
            "funcEndAddr": "0x40545a",
            "decompiledFuncCode": "int64_t sub_405450(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_404f80(arg1, arg2, arg3, &data_60c480);\n}\n\n"
        },
        {
            "funcName": "sub_405460",
            "funcStartAddr": "0x405460",
            "funcEndAddr": "0x405476",
            "decompiledFuncCode": "int64_t sub_405460(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_404f80(0, arg1, -1, &data_60c480);\n}\n\n"
        },
        {
            "funcName": "sub_405480",
            "funcStartAddr": "0x405480",
            "funcEndAddr": "0x405492",
            "decompiledFuncCode": "int64_t sub_405480(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_404f80(0, arg1, arg2, &data_60c480);\n}\n\n"
        },
        {
            "funcName": "sub_4054a0",
            "funcStartAddr": "0x401d5a",
            "funcEndAddr": "0x405508",
            "decompiledFuncCode": "char* sub_4054a0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_404f80(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_405510",
            "funcStartAddr": "0x401d5f",
            "funcEndAddr": "0x405574",
            "decompiledFuncCode": "char* sub_405510(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_404f80(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_405580",
            "funcStartAddr": "0x405580",
            "funcEndAddr": "0x40558c",
            "decompiledFuncCode": "int64_t sub_405580(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4054a0(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405590",
            "funcStartAddr": "0x405590",
            "funcEndAddr": "0x40559f",
            "decompiledFuncCode": "int64_t sub_405590(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_405510(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_4055a0",
            "funcStartAddr": "0x4055a0",
            "funcEndAddr": "0x405610",
            "decompiledFuncCode": "char* sub_4055a0(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_60c4b0;\n    int128_t var_48 = data_60c480;\n    int128_t var_38 = data_60c490;\n    int128_t var_28 = data_60c4a0;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_404f80(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_405610",
            "funcStartAddr": "0x405610",
            "funcEndAddr": "0x40561d",
            "decompiledFuncCode": "int64_t sub_405610(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_4055a0(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405620",
            "funcStartAddr": "0x405620",
            "funcEndAddr": "0x405631",
            "decompiledFuncCode": "int64_t sub_405620(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_4055a0(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_405640",
            "funcStartAddr": "0x405640",
            "funcEndAddr": "0x40564a",
            "decompiledFuncCode": "int64_t sub_405640(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4055a0(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_405650",
            "funcStartAddr": "0x401d64",
            "funcEndAddr": "0x4056be",
            "decompiledFuncCode": "char* sub_405650(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_404f80(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_4056c0",
            "funcStartAddr": "0x4056c0",
            "funcEndAddr": "0x40572c",
            "decompiledFuncCode": "char* sub_4056c0(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_60c480;\n    int128_t var_38 = data_60c490;\n    int128_t var_28 = data_60c4a0;\n    int64_t var_18 = data_60c4b0;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_404f80(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4057f0",
            "funcStartAddr": "0x4057f0",
            "funcEndAddr": "0x4058d9",
            "decompiledFuncCode": "void* sub_4057f0(int64_t* arg1)\n{\n    int64_t rdx = arg1[6];\n    int64_t r12 = arg1[5];\n    int64_t rbp_2 = ((rdx - r12) - 1);\n    if (rdx == r12)\n    {\n        arg1[0xd] = (arg1[0xd] | 2);\n    }\n    int64_t rcx = arg1[9];\n    int64_t rdx_1 = arg1[7];\n    int64_t rax_1 = ((rdx + rcx) & (!rcx));\n    int64_t rcx_2 = arg1[4];\n    arg1[6] = rax_1;\n    if ((rax_1 - rcx_2) > (rdx_1 - rcx_2))\n    {\n        arg1[6] = rdx_1;\n        rax_1 = rdx_1;\n    }\n    arg1[5] = rax_1;\n    int64_t* rdx_2 = arg1[0x11];\n    if ((arg1[0x12] - rdx_2) <= 7)\n    {\n        _obstack_newchunk(&arg1[0xe], 8);\n        rdx_2 = arg1[0x11];\n    }\n    *rdx_2 = r12;\n    int64_t* rdx_3 = arg1[0x1c];\n    int64_t rax_4 = arg1[0x1d];\n    arg1[0x11] = (arg1[0x11] + 8);\n    void* rax_5 = (rax_4 - rdx_3);\n    if (rax_5 <= 7)\n    {\n        rax_5 = _obstack_newchunk(&arg1[0x19], 8);\n        rdx_3 = arg1[0x1c];\n    }\n    *rdx_3 = rbp_2;\n    arg1[0x1c] = (arg1[0x1c] + 8);\n    *arg1 = (*arg1 + 1);\n    return rax_5;\n}\n\n"
        },
        {
            "funcName": "sub_4058e0",
            "funcStartAddr": "0x4058e0",
            "funcEndAddr": "0x405947",
            "decompiledFuncCode": "int64_t sub_4058e0(int64_t* arg1)\n{\n    *arg1 = 0;\n    arg1[1] = 0;\n    arg1[2] = 0;\n    _obstack_begin(&arg1[3], 0, 0, 0x401ba0, 0x401930);\n    _obstack_begin(&arg1[0xe], 0, 0, 0x401ba0, 0x401930);\n    /* tailcall */\n    return _obstack_begin(&arg1[0x19], 0, 0, 0x401ba0, 0x401930);\n}\n\n"
        },
        {
            "funcName": "sub_405950",
            "funcStartAddr": "0x405950",
            "funcEndAddr": "0x405979",
            "decompiledFuncCode": "int64_t sub_405950(void* arg1)\n{\n    _obstack_free((arg1 + 0x18), 0);\n    _obstack_free((arg1 + 0x70), 0);\n    /* tailcall */\n    return _obstack_free((arg1 + 0xc8), 0);\n}\n\n"
        },
        {
            "funcName": "sub_405980",
            "funcStartAddr": "0x405980",
            "funcEndAddr": "0x405b93",
            "decompiledFuncCode": "int64_t sub_405980(FILE* arg1, int64_t* arg2)\n{\n    int64_t* r12 = &arg2[3];\n    int32_t rax_1;\n    char* rdx_1;\n    do\n    {\n        rax_1 = fgetc(arg1);\n        if (rax_1 == 0xffffffff)\n        {\n            break;\n        }\n        do\n        {\n            rdx_1 = arg2[6];\n            if (arg2[7] != rdx_1)\n            {\n                arg2[6] = &rdx_1[1];\n                *rdx_1 = rax_1;\n                if (rax_1 != 0)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                _obstack_newchunk(r12, 1);\n                char* rdx_2 = arg2[6];\n                arg2[6] = &rdx_2[1];\n                *rdx_2 = rax_1;\n                if (rax_1 != 0)\n                {\n                    break;\n                }\n            }\n            sub_4057f0(arg2);\n            rax_1 = fgetc(arg1);\n        } while (rax_1 != 0xffffffff);\n    } while ((arg2[7] != rdx_1 && rax_1 != 0));\n    char* rax_3 = arg2[6];\n    if (rax_3 != arg2[5])\n    {\n        if (rax_3 == arg2[7])\n        {\n            _obstack_newchunk(&arg2[3], 1);\n            rax_3 = arg2[6];\n        }\n        arg2[6] = &rax_3[1];\n        *rax_3 = 0;\n        sub_4057f0(arg2);\n    }\n    int64_t* rdx_4 = arg2[0x11];\n    if ((arg2[0x12] - rdx_4) <= 7)\n    {\n        _obstack_newchunk(&arg2[0xe], 8);\n        rdx_4 = arg2[0x11];\n    }\n    *rdx_4 = 0;\n    int64_t rsi = arg2[0x10];\n    int64_t rdx_5 = (arg2[0x11] + 8);\n    arg2[0x11] = rdx_5;\n    if (rdx_5 == rsi)\n    {\n        arg2[0x18] = (arg2[0x18] | 2);\n    }\n    int64_t rcx_3 = arg2[0x14];\n    int64_t rdx_6 = arg2[0xf];\n    int64_t rax_8 = ((rdx_5 + rcx_3) & (!rcx_3));\n    int64_t rcx_5 = arg2[0x12];\n    arg2[0x11] = rax_8;\n    if ((rax_8 - rdx_6) > (rcx_5 - rdx_6))\n    {\n        arg2[0x11] = rcx_5;\n        rax_8 = rcx_5;\n    }\n    arg2[1] = rsi;\n    int64_t rdx_7 = arg2[0x1c];\n    int64_t rsi_1 = arg2[0x1b];\n    arg2[0x10] = rax_8;\n    if (rdx_7 == rsi_1)\n    {\n        arg2[0x23] = (arg2[0x23] | 2);\n    }\n    int64_t rcx_6 = arg2[0x1f];\n    int64_t rdx_8 = arg2[0x1a];\n    int64_t rax_10 = ((rdx_7 + rcx_6) & (!rcx_6));\n    int64_t rcx_8 = arg2[0x1d];\n    arg2[0x1c] = rax_10;\n    if ((rax_10 - rdx_8) > (rcx_8 - rdx_8))\n    {\n        arg2[0x1c] = rcx_8;\n        rax_10 = rcx_8;\n    }\n    arg2[0x1b] = rax_10;\n    arg2[2] = rsi_1;\n    int64_t rax_11;\n    rax_11 = ferror(arg1) == 0;\n    return rax_11;\n}\n\n"
        },
        {
            "funcName": "sub_405ba0",
            "funcStartAddr": "0x405ba0",
            "funcEndAddr": "0x405bfe",
            "decompiledFuncCode": "ssize_t sub_405ba0(int32_t arg1, int64_t arg2, uint64_t arg3)\n{\n    uint64_t rbx = arg3;\n    ssize_t rax_1;\n    while (true)\n    {\n        rax_1 = read(arg1, arg2, rbx);\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        int32_t rax_3 = *__errno_location();\n        if (rax_3 != 4)\n        {\n            if (rbx <= 0x7fffe000)\n            {\n                break;\n            }\n            if (rax_3 != 0x16)\n            {\n                break;\n            }\n            rbx = 0x7fffe000;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_405c00",
            "funcStartAddr": "0x401d69",
            "funcEndAddr": "0x405fdd",
            "decompiledFuncCode": "int64_t sub_405c00(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_40974b, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_405fe0",
            "funcStartAddr": "0x405fe0",
            "funcEndAddr": "0x406000",
            "decompiledFuncCode": "int64_t sub_405fe0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_405c00(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_406000",
            "funcStartAddr": "0x406000",
            "funcEndAddr": "0x406060",
            "decompiledFuncCode": "int64_t sub_406000(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_405c00(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_406060",
            "funcStartAddr": "0x406060",
            "funcEndAddr": "0x40611c",
            "decompiledFuncCode": "int64_t sub_406060(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_405c00(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_406120",
            "funcStartAddr": "0x406120",
            "funcEndAddr": "0x406194",
            "decompiledFuncCode": "int64_t sub_406120()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_4061a0",
            "funcStartAddr": "0x4061a0",
            "funcEndAddr": "0x4061ba",
            "decompiledFuncCode": "int64_t sub_4061a0(size_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_4063f0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_406200",
            "funcStartAddr": "0x406200",
            "funcEndAddr": "0x406236",
            "decompiledFuncCode": "int64_t sub_406200(int64_t arg1, size_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_4063f0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40634a",
            "funcStartAddr": "0x40634a",
            "funcEndAddr": "0x406350",
            "decompiledFuncCode": "int64_t sub_40634a() __noreturn\n{\n    sub_4063f0();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_406350",
            "funcStartAddr": "0x406350",
            "funcEndAddr": "0x406367",
            "decompiledFuncCode": "int64_t sub_406350(size_t arg1)\n{\n    /* tailcall */\n    return memset(sub_4061a0(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_406370",
            "funcStartAddr": "0x406370",
            "funcEndAddr": "0x40639e",
            "decompiledFuncCode": "int64_t sub_406370(size_t arg1, size_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_4063f0();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4063a0",
            "funcStartAddr": "0x4063a0",
            "funcEndAddr": "0x4063c8",
            "decompiledFuncCode": "int64_t sub_4063a0(int64_t arg1, size_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_4061a0(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_4063d0",
            "funcStartAddr": "0x4063d0",
            "funcEndAddr": "0x4063e3",
            "decompiledFuncCode": "int64_t sub_4063d0(char* arg1)\n{\n    /* tailcall */\n    return sub_4063a0(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_4063f0",
            "funcStartAddr": "0x4063f0",
            "funcEndAddr": "0x406421",
            "decompiledFuncCode": "int64_t sub_4063f0() __noreturn\n{\n    error(data_60c258, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_406430",
            "funcStartAddr": "0x406430",
            "funcEndAddr": "0x4064ab",
            "decompiledFuncCode": "int64_t sub_406430(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_4064b0(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_4064b0",
            "funcStartAddr": "0x4064b0",
            "funcEndAddr": "0x4064f0",
            "decompiledFuncCode": "int64_t sub_4064b0(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_4064f0(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_4064f0",
            "funcStartAddr": "0x4064f0",
            "funcEndAddr": "0x406547",
            "decompiledFuncCode": "off64_t sub_4064f0(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_406550",
            "funcStartAddr": "0x406550",
            "funcEndAddr": "0x40662f",
            "decompiledFuncCode": "uint64_t sub_406550(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_406630",
            "funcStartAddr": "0x406630",
            "funcEndAddr": "0x406c4c",
            "decompiledFuncCode": "uint64_t sub_406630(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_406860;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_406786;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_406786;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_406786:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_406860:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_40688e;\n                }\n                *arg5 = r12;\n            label_40688e:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_4068ac;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_4068ac:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_4068ac;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_40681e;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_40681e:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_406c50",
            "funcStartAddr": "0x406c50",
            "funcEndAddr": "0x407216",
            "decompiledFuncCode": "uint64_t sub_406c50(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_406e8c;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_406d18;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_406d18:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_406550(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_409be9;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_406550(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_406e8c;\n                }\n                *arg7 = rdx_2;\n            label_406e8c:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_406f90;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_409be9;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_407000;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_406f90;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_406f90;\n                            }\n                            goto label_406f51;\n                        }\n                    label_406f51:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_406630(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_409bea);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_406f90:\n                            rdx = &r14_1[1];\n                        label_406dd1:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_406fce;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_406fce:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_409c08;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_407000:\n                                        r14_2 = sub_406630(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_4070bd;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_4070bd:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_406e8c;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_406d18;\n        }\n        goto label_406dd1;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_407280",
            "funcStartAddr": "0x407280",
            "funcEndAddr": "0x407298",
            "decompiledFuncCode": "uint64_t sub_407280(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_407320",
            "funcStartAddr": "0x407320",
            "funcEndAddr": "0x40739a",
            "decompiledFuncCode": "uint64_t sub_407320(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_409bec[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_40734a;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_40734a:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_407840() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_4073a0",
            "funcStartAddr": "0x4073a0",
            "funcEndAddr": "0x4074a4",
            "decompiledFuncCode": "char* sub_4073a0(char* arg1, int32_t arg2, int64_t arg3)\n{\n    char r8 = arg2;\n    if (arg3 != 0)\n    {\n        if ((arg1 & 7) != 0)\n        {\n            if (arg2 == *arg1)\n            {\n            label_4074a0:\n                return arg1;\n            }\n            do\n            {\n                arg1 = &arg1[1];\n                int64_t temp0_1 = arg3;\n                arg3 = (arg3 - 1);\n                if (temp0_1 == 1)\n                {\n                    return 0;\n                }\n                if ((arg1 & 7) == 0)\n                {\n                    break;\n                }\n            } while (*arg1 != r8);\n            if ((arg1 & 7) != 0)\n            {\n                goto label_4074a0;\n            }\n        }\n        int64_t r9_5 = ((arg2 << 8) | arg2);\n        int64_t r9_6 = (r9_5 | (r9_5 << 0x10));\n        int64_t r9_7 = (r9_6 | (r9_6 << 0x20));\n        int64_t rax_8;\n        if (arg3 > 7)\n        {\n            rax_8 = (*arg1 ^ r9_7);\n            if ((((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0)\n            {\n                int64_t rax_12;\n                do\n                {\n                    arg3 = (arg3 - 8);\n                    arg1 = &arg1[8];\n                    if (arg3 <= 7)\n                    {\n                        break;\n                    }\n                    rax_12 = (*arg1 ^ r9_7);\n                } while ((((!rax_12) & (rax_12 - 0x101010101010101)) & 0x8080808080808080) == 0);\n            }\n        }\n        if ((((arg3 <= 7 || (arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) != 0)) || (((arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0) && arg3 <= 7) && arg3 != 0)) || ((arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0) && arg3 > 7)))\n        {\n            if (arg2 == *arg1)\n            {\n                goto label_4074a0;\n            }\n            char* rcx_3 = &arg1[1];\n            void* rdi = &arg1[arg3];\n            while (true)\n            {\n                char* rax_15 = rcx_3;\n                if (rcx_3 == rdi)\n                {\n                    return 0;\n                }\n                rcx_3 = &rcx_3[1];\n                if (rcx_3[-1] == r8)\n                {\n                    return rax_15;\n                }\n            }\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_4074b0",
            "funcStartAddr": "0x4074b0",
            "funcEndAddr": "0x4074eb",
            "decompiledFuncCode": "int64_t sub_4074b0() __noreturn\n{\n    __fprintf_chk(stderr, 1, \"%s\\n\", dcgettext(nullptr, \"memory exhausted\", 5));\n    exit(data_60c258);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4074f0",
            "funcStartAddr": "0x4074f0",
            "funcEndAddr": "0x407505",
            "decompiledFuncCode": "int64_t sub_4074f0(void* arg1)\n{\n    int64_t rax = *(arg1 + 0x38);\n    if ((*(arg1 + 0x50) & 1) == 0)\n    {\n        /* jump -> rax */\n    }\n    *(arg1 + 0x48);\n    /* jump -> rax */\n}\n\n"
        },
        {
            "funcName": "sub_407510",
            "funcStartAddr": "0x407510",
            "funcEndAddr": "0x407525",
            "decompiledFuncCode": "int64_t sub_407510(void* arg1)\n{\n    int64_t rax = *(arg1 + 0x40);\n    if ((*(arg1 + 0x50) & 1) == 0)\n    {\n        /* jump -> rax */\n    }\n    *(arg1 + 0x48);\n    /* jump -> rax */\n}\n\n"
        },
        {
            "funcName": "sub_407530",
            "funcStartAddr": "0x407530",
            "funcEndAddr": "0x4075c0",
            "decompiledFuncCode": "int64_t sub_407530(int64_t* arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t rbp;\n    int64_t r12;\n    if (arg3 == 0)\n    {\n        r12 = 0xf;\n        rbp = 0x10;\n    }\n    else\n    {\n        rbp = arg3;\n        r12 = (arg3 - 1);\n    }\n    arg1[6] = r12;\n    if (arg2 == 0)\n    {\n        arg2 = 0xfe0;\n    }\n    *arg1 = arg2;\n    int64_t* rax = sub_4074f0(arg1, arg2);\n    arg1[1] = rax;\n    if (rax == 0)\n    {\n        int64_t rcx;\n        int64_t rdx_3;\n        int64_t rsi;\n        int64_t* rdi_1;\n        int64_t r8;\n        rcx = obstack_alloc_failed_handler();\n        /* tailcall */\n        return _obstack_begin(rdi_1, rsi, rdx_3, rcx, r8);\n    }\n    void* rbp_2 = ((-rbp) & ((rax + r12) + 0x10));\n    void* rdx_1 = *arg1;\n    arg1[2] = rbp_2;\n    void* rdx_2 = (rdx_1 + rax);\n    arg1[3] = rbp_2;\n    *rax = rdx_2;\n    arg1[4] = rdx_2;\n    rax[1] = 0;\n    arg1[0xa] = (arg1[0xa] & 0xf9);\n    return 1;\n}\n\n"
        },
        {
            "funcName": "obstack_begin",
            "funcStartAddr": "0x4075c0",
            "funcEndAddr": "0x4075d1",
            "decompiledFuncCode": "int64_t _obstack_begin(int64_t* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5)\n{\n    arg1[0xa] = (arg1[0xa] & 0xfe);\n    arg1[7] = arg4;\n    arg1[8] = arg5;\n    /* tailcall */\n    return sub_407530(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "obstack_begin_1",
            "funcStartAddr": "0x4075e0",
            "funcEndAddr": "0x4075f5",
            "decompiledFuncCode": "int64_t _obstack_begin_1(int64_t* arg1, int64_t arg2, int64_t arg3, \n    int64_t arg4, int64_t arg5, int64_t arg6)\n{\n    arg1[0xa] = (arg1[0xa] | 1);\n    arg1[7] = arg4;\n    arg1[8] = arg5;\n    arg1[9] = arg6;\n    /* tailcall */\n    return sub_407530(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "obstack_newchunk",
            "funcStartAddr": "0x407600",
            "funcEndAddr": "0x407700",
            "decompiledFuncCode": "void* _obstack_newchunk(int64_t* arg1, int64_t arg2)\n{\n    uint64_t r13_1 = (arg1[3] - arg1[2]);\n    void* rbp = arg1[1];\n    int64_t rsi = (arg2 + r13_1);\n    int64_t rax;\n    rax = (arg2 + r13_1) < arg2;\n    int64_t rsi_1 = (rsi + arg1[6]);\n    bool c_1 = (rsi + arg1[6]) < rsi;\n    int64_t rbx = ((rsi_1 + (r13_1 >> 3)) + 0x64);\n    if (*arg1 >= rsi_1)\n    {\n        rsi_1 = *arg1;\n    }\n    if (rsi_1 >= rbx)\n    {\n        rbx = rsi_1;\n    }\n    if ((rax == 0 && c_1 == 0))\n    {\n        int64_t* rax_1 = sub_4074f0();\n        if (rax_1 != 0)\n        {\n            void* rsi_2 = (rax_1 + rbx);\n            arg1[1] = rax_1;\n            rax_1[1] = rbp;\n            arg1[4] = rsi_2;\n            *rax_1 = rsi_2;\n            int64_t rax_2 = arg1[6];\n            void* rbx_2 = (((rax_1 + rax_2) + 0x10) & (!rax_2));\n            void* rax_4 = memcpy(rbx_2, arg1[2], r13_1);\n            if ((arg1[0xa] & 2) == 0)\n            {\n                int64_t rax_5 = arg1[6];\n                rax_4 = ((!rax_5) & ((rbp + rax_5) + 0x10));\n                if (arg1[2] == rax_4)\n                {\n                    rax_1[1] = *(rbp + 8);\n                    rax_4 = sub_407510(arg1, rbp);\n                }\n            }\n            arg1[2] = rbx_2;\n            arg1[3] = (r13_1 + rbx_2);\n            arg1[0xa] = (arg1[0xa] & 0xfd);\n            return rax_4;\n        }\n    }\n    int64_t rsi_5;\n    void* rdi_2;\n    rsi_5 = obstack_alloc_failed_handler();\n    /* tailcall */\n    return _obstack_allocated_p(rdi_2, rsi_5);\n}\n\n"
        },
        {
            "funcName": "obstack_allocated_p",
            "funcStartAddr": "0x407700",
            "funcEndAddr": "0x407737",
            "decompiledFuncCode": "int64_t* _obstack_allocated_p(void* arg1, int64_t arg2)\n{\n    int64_t* rax = *(arg1 + 8);\n    if (rax == 0)\n    {\n        return rax;\n    }\n    do\n    {\n        if ((arg2 > rax && *rax >= arg2))\n        {\n            return 1;\n        }\n        rax = rax[1];\n    } while (rax != 0);\n    return 0;\n}\n\n"
        },
        {
            "funcName": "obstack_free",
            "funcStartAddr": "0x401d6e",
            "funcEndAddr": "0x4077a5",
            "decompiledFuncCode": "void _obstack_free(void* arg1, int64_t arg2)\n{\n    int64_t* rsi = *(arg1 + 8);\n    if (rsi != 0)\n    {\n        int64_t* r12_1;\n        do\n        {\n            if (rsi < arg2)\n            {\n                int64_t rax_1 = *rsi;\n                if (rax_1 >= arg2)\n                {\n                    *(arg1 + 0x18) = arg2;\n                    *(arg1 + 0x10) = arg2;\n                    *(arg1 + 0x20) = rax_1;\n                    *(arg1 + 8) = rsi;\n                    return;\n                }\n            }\n            r12_1 = rsi[1];\n            sub_407510(arg1);\n            *(arg1 + 0x50) = (*(arg1 + 0x50) | 2);\n            rsi = r12_1;\n        } while (r12_1 != 0);\n    }\n    if (arg2 != 0)\n    {\n        abort();\n        /* no return */\n    }\n}\n\n"
        },
        {
            "funcName": "obstack_memory_used",
            "funcStartAddr": "0x4077b0",
            "funcEndAddr": "0x4077d9",
            "decompiledFuncCode": "void* _obstack_memory_used(void* arg1)\n{\n    int64_t* rdx = *(arg1 + 8);\n    void* rax = nullptr;\n    if (rdx == 0)\n    {\n        return 0;\n    }\n    do\n    {\n        void* rcx_2 = (*rdx - rdx);\n        rdx = rdx[1];\n        rax = (rax + rcx_2);\n    } while (rdx != 0);\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4077e0",
            "funcStartAddr": "0x4077e0",
            "funcEndAddr": "0x40783d",
            "decompiledFuncCode": "uint64_t sub_4077e0(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_406430(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_407840",
            "funcStartAddr": "0x407840",
            "funcEndAddr": "0x40789e",
            "decompiledFuncCode": "int64_t sub_407840()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_409c0c;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            void* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4078a0",
            "funcStartAddr": "0x4078a0",
            "funcEndAddr": "0x407e02",
            "decompiledFuncCode": "char* sub_4078a0()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_60c4f8;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_409bec[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        size_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            size_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_40799c;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_4079e6;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_40799c:\n            r15 = &data_409bec[0x1b];\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_4079e6:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, \"r\");\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_407a9c:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_407c2b;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_407ad8:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_407ad8;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_407b12:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_407b12;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_409bec[0x1b];\n                                    free(rdi_26);\n                                    sub_406430(rax_12);\n                                    goto label_407a27;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_407ceb:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_407ceb;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_407d39:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_407d39;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_407a9c;\n                        }\n                        break;\n                    }\n                label_407c2b:\n                    sub_406430(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_409bec[0x1b];\n            }\n        label_407a27:\n            free(rbp_3);\n        }\n        data_60c4f8 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x407e10",
            "funcEndAddr": "0x407e6d",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x407e70",
            "funcEndAddr": "0x407e71",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_407e80",
            "funcStartAddr": "0x407e80",
            "funcEndAddr": "0x407e98",
            "decompiledFuncCode": "int64_t sub_407e80(void (* arg1)(void*))\n{\n    int64_t rdx = data_60c248;\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, rdx);\n}\n\n"
        },
        {
            "funcName": "sub_407e98",
            "funcStartAddr": "0x407e98",
            "funcEndAddr": "0x407eb8",
            "decompiledFuncCode": "int64_t sub_407e98(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_60be30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}