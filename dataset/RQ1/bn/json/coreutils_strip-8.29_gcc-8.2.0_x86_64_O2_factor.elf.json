{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_factor.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 180,
    "funcInfo": [
        {
            "funcName": "sub_401640",
            "funcStartAddr": "0x401640",
            "funcEndAddr": "0x40164c",
            "decompiledFuncCode": "int64_t sub_401640()\n{\n    int64_t var_8 = data_613008;\n    /* jump -> data_613010 */\n}\n\n"
        },
        {
            "funcName": "sub_401656",
            "funcStartAddr": "0x401656",
            "funcEndAddr": "0x401660",
            "decompiledFuncCode": "int64_t sub_401656()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401666",
            "funcStartAddr": "0x401666",
            "funcEndAddr": "0x401670",
            "decompiledFuncCode": "int64_t sub_401666()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401676",
            "funcStartAddr": "0x401676",
            "funcEndAddr": "0x401680",
            "decompiledFuncCode": "int64_t sub_401676()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401686",
            "funcStartAddr": "0x401686",
            "funcEndAddr": "0x401690",
            "decompiledFuncCode": "int64_t sub_401686()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401696",
            "funcStartAddr": "0x401696",
            "funcEndAddr": "0x4016a0",
            "decompiledFuncCode": "int64_t sub_401696()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4016a6",
            "funcStartAddr": "0x4016a6",
            "funcEndAddr": "0x4016b0",
            "decompiledFuncCode": "int64_t sub_4016a6()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4016b6",
            "funcStartAddr": "0x4016b6",
            "funcEndAddr": "0x4016c0",
            "decompiledFuncCode": "int64_t sub_4016b6()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4016c6",
            "funcStartAddr": "0x4016c6",
            "funcEndAddr": "0x4016d0",
            "decompiledFuncCode": "int64_t sub_4016c6()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4016d6",
            "funcStartAddr": "0x4016d6",
            "funcEndAddr": "0x4016e0",
            "decompiledFuncCode": "int64_t sub_4016d6()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4016e6",
            "funcStartAddr": "0x4016e6",
            "funcEndAddr": "0x4016f0",
            "decompiledFuncCode": "int64_t sub_4016e6()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4016f6",
            "funcStartAddr": "0x4016f6",
            "funcEndAddr": "0x401700",
            "decompiledFuncCode": "int64_t sub_4016f6()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401706",
            "funcStartAddr": "0x401706",
            "funcEndAddr": "0x401710",
            "decompiledFuncCode": "int64_t sub_401706()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401716",
            "funcStartAddr": "0x401716",
            "funcEndAddr": "0x401720",
            "decompiledFuncCode": "int64_t sub_401716()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401726",
            "funcStartAddr": "0x401726",
            "funcEndAddr": "0x401730",
            "decompiledFuncCode": "int64_t sub_401726()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401736",
            "funcStartAddr": "0x401736",
            "funcEndAddr": "0x401740",
            "decompiledFuncCode": "int64_t sub_401736()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401746",
            "funcStartAddr": "0x401746",
            "funcEndAddr": "0x401750",
            "decompiledFuncCode": "int64_t sub_401746()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401756",
            "funcStartAddr": "0x401756",
            "funcEndAddr": "0x401760",
            "decompiledFuncCode": "int64_t sub_401756()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401766",
            "funcStartAddr": "0x401766",
            "funcEndAddr": "0x401770",
            "decompiledFuncCode": "int64_t sub_401766()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401776",
            "funcStartAddr": "0x401776",
            "funcEndAddr": "0x401780",
            "decompiledFuncCode": "int64_t sub_401776()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401786",
            "funcStartAddr": "0x401786",
            "funcEndAddr": "0x401790",
            "decompiledFuncCode": "int64_t sub_401786()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401796",
            "funcStartAddr": "0x401796",
            "funcEndAddr": "0x4017a0",
            "decompiledFuncCode": "int64_t sub_401796()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4017a6",
            "funcStartAddr": "0x4017a6",
            "funcEndAddr": "0x4017b0",
            "decompiledFuncCode": "int64_t sub_4017a6()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4017b6",
            "funcStartAddr": "0x4017b6",
            "funcEndAddr": "0x4017c0",
            "decompiledFuncCode": "int64_t sub_4017b6()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4017c6",
            "funcStartAddr": "0x4017c6",
            "funcEndAddr": "0x4017d0",
            "decompiledFuncCode": "int64_t sub_4017c6()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4017d6",
            "funcStartAddr": "0x4017d6",
            "funcEndAddr": "0x4017e0",
            "decompiledFuncCode": "int64_t sub_4017d6()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4017e6",
            "funcStartAddr": "0x4017e6",
            "funcEndAddr": "0x4017f0",
            "decompiledFuncCode": "int64_t sub_4017e6()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401806",
            "funcStartAddr": "0x401806",
            "funcEndAddr": "0x401810",
            "decompiledFuncCode": "int64_t sub_401806()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401816",
            "funcStartAddr": "0x401816",
            "funcEndAddr": "0x401820",
            "decompiledFuncCode": "int64_t sub_401816()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401826",
            "funcStartAddr": "0x401826",
            "funcEndAddr": "0x401830",
            "decompiledFuncCode": "int64_t sub_401826()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401846",
            "funcStartAddr": "0x401846",
            "funcEndAddr": "0x401850",
            "decompiledFuncCode": "int64_t sub_401846()\n{\n    int64_t var_8 = 0x1f;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401856",
            "funcStartAddr": "0x401856",
            "funcEndAddr": "0x401860",
            "decompiledFuncCode": "int64_t sub_401856()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401866",
            "funcStartAddr": "0x401866",
            "funcEndAddr": "0x401870",
            "decompiledFuncCode": "int64_t sub_401866()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401876",
            "funcStartAddr": "0x401876",
            "funcEndAddr": "0x401880",
            "decompiledFuncCode": "int64_t sub_401876()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401886",
            "funcStartAddr": "0x401886",
            "funcEndAddr": "0x401890",
            "decompiledFuncCode": "int64_t sub_401886()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401896",
            "funcStartAddr": "0x401896",
            "funcEndAddr": "0x4018a0",
            "decompiledFuncCode": "int64_t sub_401896()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4018a6",
            "funcStartAddr": "0x4018a6",
            "funcEndAddr": "0x4018b0",
            "decompiledFuncCode": "int64_t sub_4018a6()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4018b6",
            "funcStartAddr": "0x4018b6",
            "funcEndAddr": "0x4018c0",
            "decompiledFuncCode": "int64_t sub_4018b6()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4018c6",
            "funcStartAddr": "0x4018c6",
            "funcEndAddr": "0x4018d0",
            "decompiledFuncCode": "int64_t sub_4018c6()\n{\n    int64_t var_8 = 0x27;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4018d6",
            "funcStartAddr": "0x4018d6",
            "funcEndAddr": "0x4018e0",
            "decompiledFuncCode": "int64_t sub_4018d6()\n{\n    int64_t var_8 = 0x28;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4018e6",
            "funcStartAddr": "0x4018e6",
            "funcEndAddr": "0x4018f0",
            "decompiledFuncCode": "int64_t sub_4018e6()\n{\n    int64_t var_8 = 0x29;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4018f6",
            "funcStartAddr": "0x4018f6",
            "funcEndAddr": "0x401900",
            "decompiledFuncCode": "int64_t sub_4018f6()\n{\n    int64_t var_8 = 0x2a;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401906",
            "funcStartAddr": "0x401906",
            "funcEndAddr": "0x401910",
            "decompiledFuncCode": "int64_t sub_401906()\n{\n    int64_t var_8 = 0x2b;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401916",
            "funcStartAddr": "0x401916",
            "funcEndAddr": "0x401920",
            "decompiledFuncCode": "int64_t sub_401916()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401926",
            "funcStartAddr": "0x401926",
            "funcEndAddr": "0x401930",
            "decompiledFuncCode": "int64_t sub_401926()\n{\n    int64_t var_8 = 0x2d;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401936",
            "funcStartAddr": "0x401936",
            "funcEndAddr": "0x401940",
            "decompiledFuncCode": "int64_t sub_401936()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401946",
            "funcStartAddr": "0x401946",
            "funcEndAddr": "0x401950",
            "decompiledFuncCode": "int64_t sub_401946()\n{\n    int64_t var_8 = 0x2f;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401956",
            "funcStartAddr": "0x401956",
            "funcEndAddr": "0x401960",
            "decompiledFuncCode": "int64_t sub_401956()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401966",
            "funcStartAddr": "0x401966",
            "funcEndAddr": "0x401970",
            "decompiledFuncCode": "int64_t sub_401966()\n{\n    int64_t var_8 = 0x31;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401976",
            "funcStartAddr": "0x401976",
            "funcEndAddr": "0x401980",
            "decompiledFuncCode": "int64_t sub_401976()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401986",
            "funcStartAddr": "0x401986",
            "funcEndAddr": "0x401990",
            "decompiledFuncCode": "int64_t sub_401986()\n{\n    int64_t var_8 = 0x33;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401996",
            "funcStartAddr": "0x401996",
            "funcEndAddr": "0x4019a0",
            "decompiledFuncCode": "int64_t sub_401996()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4019a6",
            "funcStartAddr": "0x4019a6",
            "funcEndAddr": "0x4019b0",
            "decompiledFuncCode": "int64_t sub_4019a6()\n{\n    int64_t var_8 = 0x35;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4019b6",
            "funcStartAddr": "0x4019b6",
            "funcEndAddr": "0x4019c0",
            "decompiledFuncCode": "int64_t sub_4019b6()\n{\n    int64_t var_8 = 0x36;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4019c6",
            "funcStartAddr": "0x4019c6",
            "funcEndAddr": "0x4019d0",
            "decompiledFuncCode": "int64_t sub_4019c6()\n{\n    int64_t var_8 = 0x37;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4019d6",
            "funcStartAddr": "0x4019d6",
            "funcEndAddr": "0x4019e0",
            "decompiledFuncCode": "int64_t sub_4019d6()\n{\n    int64_t var_8 = 0x38;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4019e6",
            "funcStartAddr": "0x4019e6",
            "funcEndAddr": "0x4019f0",
            "decompiledFuncCode": "int64_t sub_4019e6()\n{\n    int64_t var_8 = 0x39;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401a06",
            "funcStartAddr": "0x401a06",
            "funcEndAddr": "0x401a10",
            "decompiledFuncCode": "int64_t sub_401a06()\n{\n    int64_t var_8 = 0x3b;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401a16",
            "funcStartAddr": "0x401a16",
            "funcEndAddr": "0x401a20",
            "decompiledFuncCode": "int64_t sub_401a16()\n{\n    int64_t var_8 = 0x3c;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401a26",
            "funcStartAddr": "0x401a26",
            "funcEndAddr": "0x401a30",
            "decompiledFuncCode": "int64_t sub_401a26()\n{\n    int64_t var_8 = 0x3d;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x401a80",
            "funcEndAddr": "0x401c34",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rcx = sub_404760(*argv);\n    void var_38;\n    char* var_30;\n    setlocale(6, &data_4105cc[0x1b], rdx, rcx, r8, r9, var_38, var_30);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    if (data_613300 == 0)\n    {\n        int64_t rax_5 = sub_407ee0(0x400);\n        data_613300 = rax_5;\n        data_613308 = rax_5;\n    }\n    sub_40bc60(sub_4045f0);\n    sub_40bc60(sub_4023d0);\n    int32_t rax_1;\n    while (true)\n    {\n        rax_1 = getopt_long(argc, argv, &data_4105cc[0x1b], &data_40f260, nullptr);\n        if (rax_1 == 0xffffffff)\n        {\n            int64_t r12 = data_6132bc;\n            int32_t r13;\n            if (r12 >= argc)\n            {\n                r13 = 1;\n                sub_406f70(&var_38);\n                while (true)\n                {\n                    if (sub_406f80(stdin, &data_40be09, 3, &var_38) == -1)\n                    {\n                        break;\n                    }\n                    r13 = (r13 & sub_404170(var_30));\n                }\n                free(var_30);\n            }\n            else\n            {\n                r13 = 1;\n                do\n                {\n                    if (sub_404170(argv[r12]) == 0)\n                    {\n                        r13 = 0;\n                    }\n                    r12 = (r12 + 1);\n                } while (argc > r12);\n            }\n            return (r13 ^ 1);\n        }\n        if (rax_1 == 0xffffff7e)\n        {\n            sub_4042e0(0);\n            /* no return */\n        }\n        if (rax_1 != 0x80)\n        {\n            break;\n        }\n        data_613310 = 1;\n    }\n    if (rax_1 == 0xffffff7d)\n    {\n        char* rax_2 = sub_405150(\"Niels Moller\", &data_40bdbe);\n        sub_405150(\"Torbjorn Granlund\", &data_40bdd9);\n        int64_t var_40 = 0;\n        char* var_48 = rax_2;\n        sub_407da0(stdout, \"factor\", \"GNU coreutils\", data_613238);\n        exit(0);\n        /* no return */\n    }\n    sub_4042e0(1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x401c40",
            "funcEndAddr": "0x401c6a",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_401c6b",
            "funcStartAddr": "0x401c6b",
            "funcEndAddr": "0x401c8a",
            "decompiledFuncCode": "void sub_401c6b()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_401c8a",
            "funcStartAddr": "0x401c8a",
            "funcEndAddr": "0x401cc1",
            "decompiledFuncCode": "int64_t sub_401c8a()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_401cc1",
            "funcStartAddr": "0x401cc1",
            "funcEndAddr": "0x401d18",
            "decompiledFuncCode": "void sub_401cc1()\n{\n    if (data_6132e8 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_6132f0;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_6132f0 = (rax_1 + 1);\n        *(0x612e40 + ((rax_1 + 1) << 3))();\n    }\n    sub_401c6b();\n    data_6132e8 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_401d18",
            "funcStartAddr": "0x401d18",
            "funcEndAddr": "0x401d1d",
            "decompiledFuncCode": "int64_t j_sub_401c8a()\n{\n    /* tailcall */\n    return sub_401c8a();\n}\n\n"
        },
        {
            "funcName": "sub_401d20",
            "funcStartAddr": "0x401d20",
            "funcEndAddr": "0x401d79",
            "decompiledFuncCode": "uint64_t sub_401d20(uint64_t arg1, uint64_t arg2)\n{\n    uint64_t rax = arg2;\n    if ((arg2 & 1) == 0)\n    {\n        rax = arg1;\n        arg1 = arg2;\n    }\n    if (arg1 == 0)\n    {\n        return rax;\n    }\n    uint64_t rax_1 = (rax >> 1);\n    while (true)\n    {\n        uint64_t rdx_2 = (arg1 >> 1);\n        if ((arg1 & 1) != 0)\n        {\n            uint64_t rdx_4 = (rdx_2 - rax_1);\n            if (rdx_2 == rax_1)\n            {\n                return (arg1 | 1);\n            }\n            int64_t rcx_2 = (rdx_4 >> 0x3f);\n            rax_1 = (rax_1 + (rdx_4 & rcx_2));\n            rdx_2 = ((rdx_4 ^ rcx_2) - rcx_2);\n        }\n        arg1 = rdx_2;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_401d80",
            "funcStartAddr": "0x401d80",
            "funcEndAddr": "0x401e55",
            "decompiledFuncCode": "void sub_401d80(void* arg1, int64_t arg2, char arg3)\n{\n    char* r13 = (arg1 + 0xe0);\n    int64_t* r12 = (arg1 + 0x10);\n    uint32_t rbx = *(arg1 + 0xfa);\n    char rbp = rbx;\n    int32_t rbx_1 = (rbx - 1);\n    if (rbx_1 != 0xffffffff)\n    {\n        int64_t r8_1 = rbx_1;\n        int64_t r11_1 = r12[r8_1];\n        int64_t rax = (r8_1 << 3);\n        bool cond:0_1 = arg2 != r11_1;\n        int64_t r10_1;\n        bool cond:1_1;\n        if (arg2 < r11_1)\n        {\n            int64_t rcx_1 = (r8_1 - 1);\n            rax = rbx_1;\n            r10_1 = rcx_1;\n            while (true)\n            {\n                rax = (rax - 1);\n                if (rax == 0xffffffff)\n                {\n                    break;\n                }\n                int64_t r9_1 = (r10_1 - 1);\n                int64_t temp0_1 = *((arg1 + (r9_1 << 3)) + 0x18);\n                cond:1_1 = temp0_1 == arg2;\n                if (temp0_1 <= arg2)\n                {\n                    break;\n                }\n                r10_1 = r9_1;\n            }\n            if ((rax != 0xffffffff && (!cond:1_1)))\n            {\n                r12 = &r12[(r10_1 + 1)];\n                r13 = &r13[(r10_1 + 1)];\n            }\n            if ((((rax != 0xffffffff && (!cond:1_1)) && rbx_1 > rax) || rax == 0xffffffff))\n            {\n                while (true)\n                {\n                    *((arg1 + (r8_1 << 3)) + 0x18) = r11_1;\n                    *((arg1 + r8_1) + 0xe1) = *((arg1 + r8_1) + 0xe0);\n                    r8_1 = rcx_1;\n                    if (rax >= rcx_1)\n                    {\n                        break;\n                    }\n                    r11_1 = *((arg1 + (rcx_1 << 3)) + 0x10);\n                    rcx_1 = (rcx_1 - 1);\n                }\n            }\n        }\n        else if (cond:0_1)\n        {\n            r12 = ((r12 + rax) + 8);\n            r13 = &r13[(r8_1 + 1)];\n        }\n        else\n        {\n            r10_1 = r8_1;\n        }\n        if (((arg2 >= r11_1 && (!cond:0_1)) || ((arg2 < r11_1 && rax != 0xffffffff) && cond:1_1)))\n        {\n            r13[r10_1] = (r13[r10_1] + arg3);\n            return;\n        }\n    }\n    *r12 = arg2;\n    *r13 = arg3;\n    *(arg1 + 0xfa) = (rbp + 1);\n}\n\n"
        },
        {
            "funcName": "sub_401e60",
            "funcStartAddr": "0x401e60",
            "funcEndAddr": "0x401ec9",
            "decompiledFuncCode": "int64_t sub_401e60(int64_t arg1, uint64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5)\n{\n    if ((arg2 & 1) == 0)\n    {\n        do\n        {\n            if (arg2 == 0)\n            {\n                return arg5;\n            }\n        label_401e73:\n            int64_t rax_2;\n            int64_t rdx;\n            rdx = HIGHD((arg1 * arg1));\n            rax_2 = LOWD((arg1 * arg1));\n            int64_t rax_4;\n            int64_t rdx_1;\n            rdx_1 = HIGHD(((rax_2 * arg4) * arg3));\n            rax_4 = LOWD(((rax_2 * arg4) * arg3));\n            arg1 = (rdx - rdx_1);\n            int64_t rax_5 = (arg1 + arg3);\n            if (rdx < rdx_1)\n            {\n                arg1 = rax_5;\n            }\n            arg2 = (arg2 >> 1);\n        } while ((arg2 & 1) == 0);\n        int64_t rax_7;\n        int64_t rdx_2;\n        rdx_2 = HIGHD((arg5 * arg1));\n        rax_7 = LOWD((arg5 * arg1));\n        int64_t rax_9;\n        int64_t rdx_3;\n        rdx_3 = HIGHD(((rax_7 * arg4) * arg3));\n        rax_9 = LOWD(((rax_7 * arg4) * arg3));\n        arg5 = (rdx_2 - rdx_3);\n        int64_t rax_10 = (arg5 + arg3);\n        if (rdx_2 < rdx_3)\n        {\n            arg5 = rax_10;\n            goto label_401e73;\n        }\n        goto label_401e73;\n    }\n    arg5 = arg1;\n    goto label_401e73;\n}\n\n"
        },
        {
            "funcName": "sub_401ed0",
            "funcStartAddr": "0x401ed0",
            "funcEndAddr": "0x401f5d",
            "decompiledFuncCode": "uint64_t sub_401ed0(int64_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    int32_t arg5, int64_t arg6)\n{\n    int64_t rax;\n    int32_t r8_1;\n    rax = sub_401e60(arg3, arg4, arg1, arg2, arg6);\n    int64_t rdi_2 = (arg1 - arg6);\n    r8_1 = arg6 == rax;\n    r8_1 = (r8_1 | rax == rdi_2);\n    if ((r8_1 == 0 && arg5 > 1))\n    {\n        int32_t rsi_1 = 1;\n        do\n        {\n            int64_t rax_1;\n            int64_t rdx_2;\n            rdx_2 = HIGHD((rax * rax));\n            rax_1 = LOWD((rax * rax));\n            int64_t rax_3;\n            int64_t rdx_3;\n            rdx_3 = HIGHD(((rax_1 * arg2) * arg1));\n            rax_3 = LOWD(((rax_1 * arg2) * arg1));\n            rax = (rdx_2 - rdx_3);\n            int64_t r9 = (rax + arg1);\n            if (rdx_2 < rdx_3)\n            {\n                rax = r9;\n            }\n            if (rdi_2 == rax)\n            {\n                r8_1 = 1;\n                break;\n            }\n            if (arg6 == rax)\n            {\n                break;\n            }\n            rsi_1 = (rsi_1 + 1);\n        } while (arg5 != rsi_1);\n    }\n    return r8_1;\n}\n\n"
        },
        {
            "funcName": "sub_401f60",
            "funcStartAddr": "0x401f60",
            "funcEndAddr": "0x4020c4",
            "decompiledFuncCode": "int64_t sub_401f60(int64_t* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5, int64_t arg6, int64_t arg7, int64_t arg8)\n{\n    int64_t rbx_1 = (-arg8);\n    if (arg2 < 0)\n    {\n        __assert_fail(\"(a1 >> (W_TYPE_SIZE - 1)) == 0\", \"src/factor.c\", 0x3e7, \"mulredc2\");\n        /* no return */\n    }\n    if (arg4 < 0)\n    {\n        __assert_fail(\"(b1 >> (W_TYPE_SIZE - 1)) == 0\", \"src/factor.c\", 0x3e8, \"mulredc2\");\n        /* no return */\n    }\n    if (arg6 < 0)\n    {\n        __assert_fail(\"(m1 >> (W_TYPE_SIZE - 1)) == 0\", \"src/factor.c\", 0x3e9, \"mulredc2\");\n        /* no return */\n    }\n    int64_t rax_1;\n    int64_t rdx;\n    rdx = HIGHD((arg3 * arg5));\n    rax_1 = LOWD((arg3 * arg5));\n    int64_t r15_1 = (rbx_1 * rax_1);\n    int64_t rax_3;\n    int64_t rdx_1;\n    rdx_1 = HIGHD((arg3 * arg4));\n    rax_3 = LOWD((arg3 * arg4));\n    int64_t rax_5;\n    int64_t rdx_2;\n    rdx_2 = HIGHD((r15_1 * arg7));\n    rax_5 = LOWD((r15_1 * arg7));\n    int64_t rax_7;\n    int64_t rdx_3;\n    rdx_3 = HIGHD((r15_1 * arg6));\n    rax_7 = LOWD((r15_1 * arg6));\n    int64_t r12;\n    r12 = rax_1 != 0;\n    int64_t rbp_2 = (rax_3 + r12);\n    int64_t rbp_3 = (rbp_2 + rdx_2);\n    int64_t rbp_4 = (rbp_3 + rdx);\n    int64_t rbp_5 = (rbp_4 + rax_7);\n    int64_t r11_3 = (((rdx_1 + 0) + 0) + rdx_3);\n    int64_t rax_9;\n    int64_t rdx_4;\n    rdx_4 = HIGHD((arg2 * arg5));\n    rax_9 = LOWD((arg2 * arg5));\n    int64_t r12_3 = (rax_9 + rbp_5);\n    int64_t r8_1 = (rdx_4 + 0);\n    int64_t rbx_2 = (rbx_1 * r12_3);\n    int64_t rax_11;\n    int64_t rdx_5;\n    rdx_5 = HIGHD((arg2 * arg4));\n    rax_11 = LOWD((arg2 * arg4));\n    int64_t rax_13;\n    int64_t rdx_6;\n    rdx_6 = HIGHD((rbx_2 * arg7));\n    rax_13 = LOWD((rbx_2 * arg7));\n    int64_t rax_15;\n    int64_t rdx_7;\n    rdx_7 = HIGHD((rbx_2 * arg6));\n    rax_15 = LOWD((rbx_2 * arg6));\n    int64_t rsi;\n    rsi = r12_3 != 0;\n    int64_t rsi_1 = (rsi + (rax_11 + r11_3));\n    int64_t rsi_2 = (rsi_1 + rdx_6);\n    int64_t rsi_3 = (rsi_2 + r8_1);\n    int64_t rsi_4 = (rsi_3 + rax_15);\n    int64_t rcx_4 = ((((rdx_5 + 0) + 0) + 0) + rdx_7);\n    int64_t rdx_8 = rcx_4;\n    int64_t rax_16 = rsi_4;\n    if ((arg6 < rcx_4 || ((arg6 >= rcx_4 && arg6 == rcx_4) && arg7 <= rsi_4)))\n    {\n        rdx_8 = (rcx_4 - arg6);\n        rax_16 = (rsi_4 - arg7);\n    }\n    *arg1 = rdx_8;\n    return rax_16;\n}\n\n"
        },
        {
            "funcName": "sub_4020d0",
            "funcStartAddr": "0x4020d0",
            "funcEndAddr": "0x402234",
            "decompiledFuncCode": "int64_t sub_4020d0(int64_t* arg1, int64_t* arg2, int64_t* arg3, int64_t* arg4, \n    int64_t arg5, int64_t* arg6)\n{\n    int32_t rbp = 0x40;\n    int64_t r10 = *arg2;\n    int64_t r11 = arg2[1];\n    int64_t r13 = *arg4;\n    int64_t r14 = arg4[1];\n    uint64_t r12 = *arg3;\n    int64_t var_58 = *arg6;\n    int64_t var_60 = arg6[1];\n    int32_t temp0_1;\n    do\n    {\n        if ((r12 & 1) != 0)\n        {\n            var_58 = sub_401f60(arg1, var_60, var_58, r11, r10, r14, r13, arg5);\n            var_60 = *arg1;\n        }\n        r12 = (r12 >> 1);\n        r11 = *arg1;\n        r10 = sub_401f60(arg1, r11, r10, r11, r10, r14, r13, arg5);\n        temp0_1 = rbp;\n        rbp = (rbp - 1);\n    } while (temp0_1 != 1);\n    uint64_t rbp_1 = arg3[1];\n    if (rbp_1 != 0)\n    {\n        do\n        {\n            if ((rbp_1 & 1) != 0)\n            {\n                var_58 = sub_401f60(arg1, var_60, var_58, r11, r10, r14, r13, arg5);\n                var_60 = *arg1;\n            }\n            rbp_1 = (rbp_1 >> 1);\n            r11 = *arg1;\n            r10 = sub_401f60(arg1, r11, r10, r11, r10, r14, r13, arg5);\n        } while (rbp_1 != 0);\n    }\n    *arg1 = var_60;\n    return var_58;\n}\n\n"
        },
        {
            "funcName": "sub_402240",
            "funcStartAddr": "0x402240",
            "funcEndAddr": "0x402337",
            "decompiledFuncCode": "uint64_t sub_402240(int64_t* arg1, int64_t arg2, int64_t* arg3, int64_t* arg4, \n    int32_t arg5, int64_t* arg6)\n{\n    int64_t var_40;\n    int64_t rax = sub_4020d0(&var_40, arg3, arg4, arg1, arg2, arg6);\n    int64_t rcx_1 = *arg6;\n    int64_t rsi_1 = var_40;\n    int64_t rdi_1 = arg6[1];\n    char var_49_1;\n    if ((rcx_1 != rax || (rcx_1 == rax && rdi_1 != rsi_1)))\n    {\n        int64_t r9 = arg1[1];\n        int64_t rdx_1 = *arg1;\n        int64_t rbp_2 = (rdx_1 - rcx_1);\n        int64_t r10_2 = (r9 - rdi_1);\n        int64_t r15;\n        r15 = rax == rbp_2;\n        rcx_1 = rsi_1 == r10_2;\n        r15 = (r15 & rcx_1);\n        var_49_1 = r15;\n        if (r15 != 0)\n        {\n            goto label_402330;\n        }\n        int32_t r15_1 = 1;\n        if (arg5 > 1)\n        {\n            while (true)\n            {\n                rax = sub_401f60(&var_40, rsi_1, rax, rsi_1, rax, r9, rdx_1, arg2);\n                rsi_1 = var_40;\n                if ((rbp_2 == rax && r10_2 == rsi_1))\n                {\n                    break;\n                }\n                if ((*arg6 == rax && arg6[1] == rsi_1))\n                {\n                    return var_49_1;\n                }\n                r15_1 = (r15_1 + 1);\n                if (arg5 == r15_1)\n                {\n                    return var_49_1;\n                }\n                rdx_1 = *arg1;\n                r9 = arg1[1];\n            }\n            goto label_402330;\n        }\n    }\n    if ((rcx_1 == rax && rdi_1 == rsi_1))\n    {\n    label_402330:\n        var_49_1 = 1;\n    }\n    return var_49_1;\n}\n\n"
        },
        {
            "funcName": "sub_402340",
            "funcStartAddr": "0x402340",
            "funcEndAddr": "0x4023c1",
            "decompiledFuncCode": "int64_t sub_402340(uint64_t arg1, void* arg2)\n{\n    void var_38;\n    void* rax = sub_404710(arg1, &var_38);\n    int64_t r8_1 = (rax - &var_38);\n    uint64_t rbx = (0x14 - r8_1);\n    void* r8_4;\n    if (rbx >= arg2)\n    {\n        r8_4 = data_613308;\n    }\n    else\n    {\n        char* rdi = data_613308;\n        void* r8_2 = (r8_1 - 0x14);\n        char* rdx_1 = rdi;\n        void* rcx_2 = ((arg2 + rdi) + r8_2);\n        do\n        {\n            *rdx_1 = 0x30;\n            rdx_1 = &rdx_1[1];\n        } while (rdx_1 != rcx_2);\n        r8_4 = ((r8_2 + arg2) + rdi);\n    }\n    int64_t rax_1 = memcpy(r8_4, rax, rbx);\n    data_613308 = (rax_1 + rbx);\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4023d0",
            "funcStartAddr": "0x4023d0",
            "funcEndAddr": "0x402440",
            "decompiledFuncCode": "void sub_4023d0(void* arg1)\n{\n    int64_t rsi = data_613300;\n    int64_t rbx_1 = (data_613308 - rsi);\n    if (sub_404690(1, rsi, rbx_1) != rbx_1)\n    {\n        int64_t rdx_1;\n        int64_t rsi_2;\n        int64_t* rdi;\n        rdx_1 = error(1, *__errno_location(), \"%s\", dcgettext(nullptr, \"write error\", 5));\n        /* tailcall */\n        return sub_402440(rdi, rsi_2, rdx_1);\n    }\n    data_613308 = data_613300;\n}\n\n"
        },
        {
            "funcName": "sub_402440",
            "funcStartAddr": "0x402440",
            "funcEndAddr": "0x402487",
            "decompiledFuncCode": "int64_t sub_402440(int64_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg2 == 0)\n    {\n        /* tailcall */\n        return sub_401d80(arg1, arg3, 1);\n    }\n    if (arg1[1] != 0)\n    {\n        int64_t var_8 = arg3;\n        __assert_fail(\"factors->plarge[1] == 0\", \"src/factor.c\", 0x235, \"factor_insert_large\");\n        /* no return */\n    }\n    *arg1 = arg3;\n    arg1[1] = arg2;\n    return arg3;\n}\n\n"
        },
        {
            "funcName": "sub_402490",
            "funcStartAddr": "0x402490",
            "funcEndAddr": "0x402582",
            "decompiledFuncCode": "int64_t sub_402490(int64_t* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int64_t arg5)\n{\n    if ((arg5 & 1) == 0)\n    {\n        int64_t rax;\n        int64_t var_8 = rax;\n        __assert_fail(\"b0 & 1\", \"src/factor.c\", 0x1e3, \"gcd2_odd\");\n        /* no return */\n    }\n    uint64_t r9 = arg2;\n    if ((arg3 | arg2) == 0)\n    {\n        *arg1 = arg4;\n        return arg5;\n    }\n    while ((arg3 & 1) == 0)\n    {\n        uint64_t rax_4 = (r9 << 0x3f);\n        r9 = (r9 >> 1);\n        arg3 = ((arg3 >> 1) | rax_4);\n    }\n    while ((r9 | arg4) != 0)\n    {\n        do\n        {\n            bool cond:0_1 = r9 == arg4;\n            if (r9 > arg4)\n            {\n                break;\n            }\n            uint64_t rax_6;\n            rax_6 = cond:0_1;\n            if ((arg3 > arg5 && rax_6 != 0))\n            {\n                break;\n            }\n            if ((r9 >= arg4 && (arg3 >= arg5 || (arg3 < arg5 && rax_6 == 0))))\n            {\n                *arg1 = r9;\n                return arg3;\n            }\n            int64_t temp1_1 = arg5;\n            arg5 = (arg5 - arg3);\n            arg4 = (arg4 - r9);\n            do\n            {\n                int64_t rax_8 = (arg4 << 0x3f);\n                arg4 = (arg4 >> 1);\n                arg5 = ((arg5 >> 1) | rax_8);\n            } while ((arg5 & 1) == 0);\n        } while ((r9 | arg4) != 0);\n        if (r9 <= arg4)\n        {\n            break;\n        }\n        uint64_t temp0_1 = arg3;\n        arg3 = (arg3 - arg5);\n        r9 = (r9 - arg4);\n        do\n        {\n            int64_t rax_12 = (r9 << 0x3f);\n            r9 = (r9 >> 1);\n            arg3 = ((arg3 >> 1) | rax_12);\n        } while ((arg3 & 1) == 0);\n    }\n    *arg1 = 0;\n    /* tailcall */\n    return sub_401d20(arg5, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_402590",
            "funcStartAddr": "0x402590",
            "funcEndAddr": "0x402632",
            "decompiledFuncCode": "int64_t sub_402590(uint64_t* arg1, uint64_t arg2, int64_t arg3, uint64_t arg4, \n    int64_t arg5)\n{\n    if (arg4 == 0)\n    {\n        int64_t rax;\n        int64_t var_8 = rax;\n        __assert_fail(\"d1 != 0\", \"src/factor.c\", 0x1a3, \"mod2\");\n        /* no return */\n    }\n    int64_t rax_1 = arg3;\n    if (arg2 == 0)\n    {\n        *arg1 = 0;\n        return rax_1;\n    }\n    uint64_t rflags;\n    int32_t r10;\n    r10 = _bit_scan_reverse(arg4);\n    uint64_t rflags_1;\n    int32_t rdx;\n    rdx = _bit_scan_reverse(arg2);\n    int32_t r10_2 = ((r10 ^ 0x3f) - (rdx ^ 0x3f));\n    uint64_t r9_2 = ((arg5 >> (0x40 - r10_2)) | (arg4 << r10_2));\n    int64_t r8 = (arg5 << r10_2);\n    if (r10_2 > 0)\n    {\n        int32_t rdx_4 = 0;\n        do\n        {\n            if ((r9_2 < arg2 || ((r9_2 >= arg2 && r9_2 == arg2) && rax_1 >= r8)))\n            {\n                int64_t temp0_1 = rax_1;\n                rax_1 = (rax_1 - r8);\n                arg2 = (arg2 - r9_2);\n            }\n            rdx_4 = (rdx_4 + 1);\n            uint64_t rcx_4 = (r9_2 << 0x3f);\n            r9_2 = (r9_2 >> 1);\n            r8 = ((r8 >> 1) | rcx_4);\n        } while (r10_2 != rdx_4);\n    }\n    *arg1 = arg2;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_402640",
            "funcStartAddr": "0x402640",
            "funcEndAddr": "0x4026e4",
            "decompiledFuncCode": "int64_t sub_402640(int64_t arg1, uint64_t arg2)\n{\n    uint64_t r8 = arg2;\n    if (arg1 == 0)\n    {\n        /* tailcall */\n        return sub_402340(r8, nullptr);\n    }\n    int32_t r9 = 0x40;\n    int64_t rsi = 0;\n    int64_t rax_1;\n    int64_t rdx_2;\n    rdx_2 = HIGHD(((arg1 >> 9) * 0x44b82fa09b5a53));\n    rax_1 = LOWD(((arg1 >> 9) * 0x44b82fa09b5a53));\n    uint64_t rcx = 0x3b9aca00;\n    uint64_t rdx_3 = (rdx_2 >> 0xb);\n    int64_t rdi = (arg1 - (rdx_3 * 0x3b9aca00));\n    int64_t rax_3 = 0;\n    int32_t temp1_1;\n    do\n    {\n        rsi = (rsi + rsi);\n        int64_t r10_2 = (rcx << 0x3f);\n        rcx = (rcx >> 1);\n        rax_3 = ((rax_3 >> 1) | r10_2);\n        if ((rcx < rdi || ((rcx >= rdi && rcx == rdi) && rax_3 <= r8)))\n        {\n            rsi = (rsi + 1);\n            uint64_t temp0_1 = r8;\n            r8 = (r8 - rax_3);\n            rdi = (rdi - rcx);\n        }\n        temp1_1 = r9;\n        r9 = (r9 - 1);\n    } while (temp1_1 != 1);\n    sub_402640(rdx_3, rsi);\n    /* tailcall */\n    return sub_402340(r8, 9);\n}\n\n"
        },
        {
            "funcName": "sub_4026f0",
            "funcStartAddr": "0x4026f0",
            "funcEndAddr": "0x4027c2",
            "decompiledFuncCode": "int64_t sub_4026f0(void* arg1)\n{\n    int64_t rax = data_613308;\n    int64_t rbp = (rax + 1);\n    *rax = arg1;\n    data_613308 = rbp;\n    if (arg1 != 0xa)\n    {\n        return rax;\n    }\n    int32_t rax_1 = data_613230;\n    int64_t rbx = data_613300;\n    if (rax_1 == 0xffffffff)\n    {\n        rax_1 = isatty(0);\n        data_613230 = rax_1;\n    }\n    if (rax_1 != 0)\n    {\n        /* tailcall */\n        return sub_4023d0(arg1);\n    }\n    int64_t rax_3 = (rbp - rbx);\n    int64_t rbx_1 = (rbx + 0x200);\n    if (rax_3 <= 0x1ff)\n    {\n        return rax_3;\n    }\n    while (true)\n    {\n        int64_t rax_4 = (rbx_1 - 1);\n        if (*(rbx_1 - 1) == 0xa)\n        {\n            break;\n        }\n        rbx_1 = rax_4;\n    }\n    data_613308 = rbx_1;\n    int64_t rbp_1 = (rbp - rbx_1);\n    sub_4023d0(arg1);\n    int64_t rax_5 = memcpy(data_613300, rbx_1, rbp_1);\n    data_613308 = (rbp_1 + rax_5);\n    return rax_5;\n}\n\n"
        },
        {
            "funcName": "sub_4027d0",
            "funcStartAddr": "0x4027d0",
            "funcEndAddr": "0x402be1",
            "decompiledFuncCode": "int64_t sub_4027d0(uint64_t arg1, int64_t arg2, void* arg3)\n{\n    int64_t var_68 = arg2;\n    if (arg1 > 1)\n    {\n        uint64_t r12_1 = arg1;\n        int64_t var_40_1 = (var_68 + 1);\n        while (true)\n        {\n            uint64_t rcx_1 = r12_1;\n            int32_t rsi = 0x40;\n            int64_t rax_3 = 1;\n            int64_t rdx = 0;\n            uint64_t rdi = 0;\n            int32_t temp4_1;\n            do\n            {\n                int64_t r8_2 = (rcx_1 << 0x3f);\n                rcx_1 = (rcx_1 >> 1);\n                rdx = ((rdx >> 1) | r8_2);\n                if ((rcx_1 < rax_3 || ((rcx_1 >= rax_3 && rcx_1 == rax_3) && rdx <= rdi)))\n                {\n                    uint64_t temp3_1 = rdi;\n                    rdi = (rdi - rdx);\n                    rax_3 = (rax_3 - rcx_1);\n                }\n                temp4_1 = rsi;\n                rsi = (rsi - 1);\n            } while (temp4_1 != 1);\n            uint64_t r13_1 = rdi;\n            int64_t rbp_1;\n            rbp_1 = (r12_1 - rdi) > rdi;\n            uint64_t rbp_4 = (((-rbp_1) & r12_1) + ((rdi + rdi) - r12_1));\n            if (r12_1 > var_68)\n            {\n                uint64_t rbx_1 = rbp_4;\n                uint64_t r15_1 = rbp_4;\n                int64_t rcx_2 = 1;\n                int64_t r14_1 = 1;\n                uint64_t rax_51;\n                while (true)\n                {\n                    int64_t r11_1 = rcx_2;\n                    uint64_t rax_11 = *(((r12_1 >> 1) & 0x7f) + 0x40c220);\n                    int64_t rdx_3 = ((rax_11 + rax_11) - ((rax_11 * rax_11) * r12_1));\n                    int64_t rax_15 = ((rdx_3 + rdx_3) - ((rdx_3 * rdx_3) * r12_1));\n                    int64_t r8_4 = ((rax_15 + rax_15) - ((rax_15 * rax_15) * r12_1));\n                    int64_t r10_2 = (r12_1 - var_68);\n                    int64_t rax_19 = (var_68 - r12_1);\n                    int64_t rdi_5;\n                    while (true)\n                    {\n                        int64_t rax_21;\n                        int64_t rdx_6;\n                        rdx_6 = HIGHD((rbp_4 * rbp_4));\n                        rax_21 = LOWD((rbp_4 * rbp_4));\n                        int64_t rax_23;\n                        int64_t rdx_7;\n                        rdx_7 = HIGHD(((rax_21 * r8_4) * r12_1));\n                        rax_23 = LOWD(((rax_21 * r8_4) * r12_1));\n                        int64_t rsi_2 = (rdx_6 - rdx_7);\n                        int64_t rax_24 = (rsi_2 + r12_1);\n                        if (rdx_6 < rdx_7)\n                        {\n                            rsi_2 = rax_24;\n                        }\n                        rbp_4 = (((rbp_4 - rbp_4) & r12_1) + (rsi_2 + rax_19));\n                        int64_t rax_28;\n                        int64_t rdx_8;\n                        rdx_8 = HIGHD((r13_1 * (((rdx_6 - rdx_6) & r12_1) + (r15_1 - rbp_4))));\n                        rax_28 = LOWD((r13_1 * (((rdx_6 - rdx_6) & r12_1) + (r15_1 - rbp_4))));\n                        int64_t rax_30;\n                        int64_t rdx_9;\n                        rdx_9 = HIGHD(((rax_28 * r8_4) * r12_1));\n                        rax_30 = LOWD(((rax_28 * r8_4) * r12_1));\n                        r13_1 = (rdx_8 - rdx_9);\n                        uint64_t rax_31 = (r13_1 + r12_1);\n                        if (rdx_8 < rdx_9)\n                        {\n                            r13_1 = rax_31;\n                        }\n                        if ((r14_1 & 0x1f) == 1)\n                        {\n                            uint64_t rax_41;\n                            rax_41 = sub_401d20(r13_1, r12_1);\n                            if (rax_41 != 1)\n                            {\n                                break;\n                            }\n                            rbx_1 = rbp_4;\n                        }\n                        int64_t temp5_1 = r14_1;\n                        r14_1 = (r14_1 - 1);\n                        if (temp5_1 == 1)\n                        {\n                            int64_t rcx_8 = (r11_1 + r11_1);\n                            if (r11_1 == 0)\n                            {\n                                r14_1 = r11_1;\n                                rbx_1 = rbp_4;\n                                r11_1 = rcx_8;\n                                r15_1 = rbp_4;\n                            }\n                            else\n                            {\n                                uint64_t rax_34 = rbp_4;\n                                do\n                                {\n                                    int64_t rax_35;\n                                    int64_t rdx_10;\n                                    rdx_10 = HIGHD((rax_34 * rax_34));\n                                    rax_35 = LOWD((rax_34 * rax_34));\n                                    int64_t rax_37;\n                                    int64_t rdx_11;\n                                    rdx_11 = HIGHD(((rax_35 * r8_4) * r12_1));\n                                    rax_37 = LOWD(((rax_35 * r8_4) * r12_1));\n                                    int64_t rdi_2 = (rdx_10 - rdx_11);\n                                    int64_t rax_38 = (rdi_2 + r12_1);\n                                    if (rdx_10 < rdx_11)\n                                    {\n                                        rdi_2 = rax_38;\n                                    }\n                                    r14_1 = (r14_1 + 1);\n                                    rax_34 = (((rax_38 - rax_38) & r12_1) + (rdi_2 + rax_19));\n                                } while (r11_1 != r14_1);\n                                r15_1 = rbp_4;\n                                rbx_1 = rax_34;\n                                r11_1 = rcx_8;\n                                rbp_4 = rax_34;\n                            }\n                        }\n                    }\n                    do\n                    {\n                        int64_t rax_43;\n                        int64_t rdx_12;\n                        rdx_12 = HIGHD((rbx_1 * rbx_1));\n                        rax_43 = LOWD((rbx_1 * rbx_1));\n                        int64_t rax_45;\n                        int64_t rdx_13;\n                        rdx_13 = HIGHD(((rax_43 * r8_4) * r12_1));\n                        rax_45 = LOWD(((rax_43 * r8_4) * r12_1));\n                        int64_t rsi_7 = (rdx_12 - rdx_13);\n                        int64_t rax_46 = (rsi_7 + r12_1);\n                        if (rdx_12 < rdx_13)\n                        {\n                            rsi_7 = rax_46;\n                        }\n                        rbx_1 = (((rax_46 - rax_46) & r12_1) + (rsi_7 + rax_19));\n                        rax_51 = sub_401d20((((rdi_5 - rdi_5) & r12_1) + (r15_1 - rbx_1)), r12_1);\n                    } while (rax_51 == 1);\n                    int64_t rcx_10 = r11_1;\n                    uint64_t r11_2 = rax_51;\n                    if (r12_1 == rax_51)\n                    {\n                        var_68 = (var_68 + 1);\n                        var_40_1 = (var_40_1 + 1);\n                        break;\n                    }\n                    uint64_t temp0_1 = (COMBINE(0, r12_1) / r11_2);\n                    uint64_t r8_5 = temp0_1;\n                    r12_1 = temp0_1;\n                    bool cond:7_1;\n                    if ((r11_2 > 1 && r11_2 > 0x17ded78))\n                    {\n                        cond:7_1 = sub_403840(r11_2) == 0;\n                        r8_5 = temp0_1;\n                    }\n                    int64_t rax_55;\n                    uint64_t r8_6;\n                    bool cond:6_1;\n                    if ((r11_2 <= 1 || ((r11_2 > 1 && r11_2 > 0x17ded78) && cond:7_1)))\n                    {\n                        rax_55 = sub_4027d0(r11_2, var_40_1, arg3, rcx_10);\n                        r8_6 = r8_5;\n                        rcx_2 = rcx_10;\n                        cond:6_1 = r8_6 == 1;\n                    }\n                    if ((r11_2 > 1 && (r11_2 <= 0x17ded78 || (r11_2 > 0x17ded78 && (!cond:7_1)))))\n                    {\n                        rax_55 = sub_401d80(arg3, r11_2, 1);\n                        r8_6 = r8_5;\n                        rcx_2 = rcx_10;\n                        cond:6_1 = r8_6 == 1;\n                    }\n                    if ((((r11_2 <= 1 || ((r11_2 > 1 && r11_2 > 0x17ded78) && cond:7_1)) && r8_6 > 1) || ((r11_2 > 1 && (r11_2 <= 0x17ded78 || (r11_2 > 0x17ded78 && (!cond:7_1)))) && r8_6 > 1)))\n                    {\n                        if (r8_6 <= 0x17ded78)\n                        {\n                        label_402b9f:\n                            /* tailcall */\n                            return sub_401d80(arg3, r8_6, 1);\n                        }\n                        if (sub_403840(r8_6) != 0)\n                        {\n                            goto label_402b9f;\n                        }\n                        rbp_4 = (COMBINE(0, rbp_4) % r8_6);\n                        r15_1 = (COMBINE(0, r15_1) % r8_6);\n                        rbx_1 = (COMBINE(0, rbx_1) % r8_6);\n                    }\n                    if ((((r11_2 <= 1 || ((r11_2 > 1 && r11_2 > 0x17ded78) && cond:7_1)) && r8_6 <= 1) || ((r11_2 > 1 && (r11_2 <= 0x17ded78 || (r11_2 > 0x17ded78 && (!cond:7_1)))) && r8_6 <= 1)))\n                    {\n                        if (cond:6_1)\n                        {\n                            return rax_55;\n                        }\n                        rbx_1 = 0;\n                        r15_1 = 0;\n                        rbp_4 = 0;\n                    }\n                    if ((((((r11_2 <= 1 || ((r11_2 > 1 && r11_2 > 0x17ded78) && cond:7_1)) && r8_6 <= 1) || ((r11_2 > 1 && (r11_2 <= 0x17ded78 || (r11_2 > 0x17ded78 && (!cond:7_1)))) && r8_6 <= 1)) && (!cond:6_1)) || ((((r11_2 <= 1 || ((r11_2 > 1 && r11_2 > 0x17ded78) && cond:7_1)) && r8_6 > 1) || ((r11_2 > 1 && (r11_2 <= 0x17ded78 || (r11_2 > 0x17ded78 && (!cond:7_1)))) && r8_6 > 1)) && r8_6 > 0x17ded78)))\n                    {\n                        if (var_68 >= r8_6)\n                        {\n                            break;\n                        }\n                    }\n                }\n                if (r12_1 == rax_51)\n                {\n                    if (r12_1 <= 1)\n                    {\n                        break;\n                    }\n                    continue;\n                }\n            }\n            __assert_fail(\"a < n\", \"src/factor.c\", 0x5c8, \"factor_using_pollard_rho\");\n            /* no return */\n        }\n    }\n    __assert_fail(\"(1) < (n)\", \"src/factor.c\", 0x5c2, \"factor_using_pollard_rho\");\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_402bf0",
            "funcStartAddr": "0x402bf0",
            "funcEndAddr": "0x403205",
            "decompiledFuncCode": "uint64_t sub_402bf0(uint64_t arg1, int64_t arg2, int64_t arg3, int64_t* arg4, \n    int64_t arg5 @ rax)\n{\n    int64_t r12 = arg2;\n    uint64_t rbp = arg1;\n    int64_t var_90 = arg3;\n    int64_t rcx_2 = (((arg4 - arg4) & 0x40) + 0x3f);\n    bool c_1 = arg1 < 2;\n    uint64_t rdx;\n    rdx = c_1;\n    uint64_t rax_1 = ((arg5 - arg5) + 1);\n    do\n    {\n        uint64_t rsi = rdx;\n        rdx = (rdx + rdx);\n        rax_1 = ((rax_1 + rax_1) | (rsi >> 0x3f));\n        if ((rbp < rax_1 || ((rbp >= rax_1 && rbp == rax_1) && rdx >= r12)))\n        {\n            uint64_t temp0_1 = rdx;\n            rdx = (rdx - r12);\n            rax_1 = (rax_1 - rbp);\n        }\n        rcx_2 = (rcx_2 - 1);\n    } while (rcx_2 != -1);\n    uint64_t var_a8 = rax_1;\n    uint64_t var_a0 = rdx;\n    uint64_t rdx_1 = (rdx + rdx);\n    uint64_t rax_3 = (rax_1 + rax_1);\n    uint64_t var_60 = rax_3;\n    int64_t rbx_1 = rdx_1;\n    uint64_t rsi_2 = rax_3;\n    if ((rax_3 > rbp || ((rax_3 <= rbp && rax_3 == rbp) && r12 <= rdx_1)))\n    {\n        rax_3 = (rax_3 - rbp);\n        var_60 = rax_3;\n        rbx_1 = (rdx_1 - r12);\n        rsi_2 = rax_3;\n    }\n    uint64_t var_58 = rsi_2;\n    uint64_t var_50 = rsi_2;\n    if ((r12 != 1 || (r12 == 1 && rbp != 0)))\n    {\n        int64_t var_98_1 = rbx_1;\n        int64_t r15_1 = rbx_1;\n        int64_t r13_1 = 1;\n        int64_t var_88_1 = 1;\n        while (true)\n        {\n            uint64_t rax_7 = *(((r12 >> 1) & 0x7f) + 0x40c220);\n            int64_t rdx_4 = ((rax_7 + rax_7) - ((rax_7 * rax_7) * r12));\n            int64_t rax_11 = ((rdx_4 + rdx_4) - ((rdx_4 * rdx_4) * r12));\n            int64_t r14_2 = ((rax_11 + rax_11) - ((rax_11 * rax_11) * r12));\n            int64_t var_48;\n            uint64_t var_40;\n            while (true)\n            {\n                int64_t rax_14 = sub_401f60(&var_40, rsi_2, rbx_1, rsi_2, rbx_1, rbp, r12, r14_2);\n                int64_t rax_15 = (rax_14 + var_90);\n                uint64_t rdx_9 = (var_40 + 0);\n                var_60 = rdx_9;\n                rbx_1 = rax_15;\n                uint64_t rsi_3 = rdx_9;\n                if ((rbp < rdx_9 || ((rbp >= rdx_9 && rbp == rdx_9) && r12 <= rax_15)))\n                {\n                    uint64_t rdx_10 = (rdx_9 - rbp);\n                    var_60 = rdx_10;\n                    rbx_1 = (rax_15 - r12);\n                    rsi_3 = rdx_10;\n                }\n                int64_t r8_3 = (var_98_1 - rbx_1);\n                uint64_t rcx_6 = (var_58 - rsi_3);\n                if (rcx_6 < 0)\n                {\n                    int64_t temp7_1 = r8_3;\n                    r8_3 = (r8_3 + r12);\n                    rcx_6 = (rcx_6 + rbp);\n                }\n                var_a0 = sub_401f60(&var_40, var_a8, var_a0, rcx_6, r8_3, rbp, r12, r14_2);\n                var_a8 = var_40;\n                if ((r13_1 & 0x1f) != 1)\n                {\n                    rsi_2 = var_60;\n                }\n                else\n                {\n                    int64_t rax_26 = sub_402490(&var_48, var_a8, var_a0, rbp, r12);\n                    if (var_48 != 0)\n                    {\n                        break;\n                    }\n                    if (rax_26 != 1)\n                    {\n                        break;\n                    }\n                    rsi_2 = var_60;\n                    r15_1 = rbx_1;\n                    var_50 = rsi_2;\n                }\n                int64_t temp8_1 = r13_1;\n                r13_1 = (r13_1 - 1);\n                if (temp8_1 == 1)\n                {\n                    var_58 = rsi_2;\n                    r15_1 = rbx_1;\n                    int64_t rdi_3 = (var_88_1 + var_88_1);\n                    if (var_88_1 != 0)\n                    {\n                        int64_t rdx_12 = r15_1;\n                        int64_t r15_2 = r13_1;\n                        do\n                        {\n                            int64_t rax_22 = sub_401f60(&var_40, rsi_2, rdx_12, rsi_2, rdx_12, rbp, r12, r14_2);\n                            int64_t rax_23 = (rax_22 + var_90);\n                            uint64_t rcx_9 = (var_40 + 0);\n                            var_60 = rcx_9;\n                            rdx_12 = rax_23;\n                            rsi_2 = rcx_9;\n                            if ((rbp < rcx_9 || ((rbp >= rcx_9 && rbp == rcx_9) && r12 <= rax_23)))\n                            {\n                                uint64_t rcx_10 = (rcx_9 - rbp);\n                                var_60 = rcx_10;\n                                rdx_12 = (rax_23 - r12);\n                                rsi_2 = rcx_10;\n                            }\n                            r15_2 = (r15_2 + 1);\n                        } while (var_88_1 != r15_2);\n                        r15_1 = rdx_12;\n                    }\n                    r13_1 = var_88_1;\n                    var_98_1 = rbx_1;\n                    rbx_1 = r15_1;\n                    var_50 = rsi_2;\n                    var_88_1 = rdi_3;\n                }\n            }\n            int64_t r13_3 = var_90;\n            int64_t rax_30;\n            int64_t rdi_9;\n            do\n            {\n                uint64_t rsi_6 = var_50;\n                int64_t rax_27 = sub_401f60(&var_40, rsi_6, r15_1, rsi_6, r15_1, rbp, r12, r14_2);\n                int64_t rax_28 = (rax_27 + r13_3);\n                uint64_t rdx_16 = (var_40 + 0);\n                var_50 = rdx_16;\n                r15_1 = rax_28;\n                uint64_t rcx_13 = rdx_16;\n                if ((rbp < rdx_16 || ((rbp >= rdx_16 && rbp == rdx_16) && r12 <= rax_28)))\n                {\n                    uint64_t rdx_17 = (rdx_16 - rbp);\n                    var_50 = rdx_17;\n                    r15_1 = (rax_28 - r12);\n                    rcx_13 = rdx_17;\n                }\n                uint64_t rdx_19 = (var_98_1 - r15_1);\n                uint64_t rsi_9 = (var_58 - rcx_13);\n                if (rsi_9 < 0)\n                {\n                    uint64_t temp13_1 = rdx_19;\n                    rdx_19 = (rdx_19 + r12);\n                    rsi_9 = (rsi_9 + rbp);\n                }\n                rax_30 = sub_402490(&var_48, rsi_9, rdx_19, rbp, r12);\n                rdi_9 = var_48;\n                if (rdi_9 != 0)\n                {\n                    break;\n                }\n            } while (rax_30 == 1);\n            if (rdi_9 != 0)\n            {\n                var_90 = r13_3;\n                if ((r12 == rax_30 && rbp == rdi_9))\n                {\n                    rax_3 = sub_402bf0(rbp, r12, (r13_3 + 1), arg4);\n                    break;\n                }\n                uint64_t rax_34 = *(((rax_30 >> 1) & 0x7f) + 0x40c220);\n                int64_t rdx_21 = ((rax_34 + rax_34) - ((rax_34 * rax_34) * rax_30));\n                int64_t rax_38 = ((rdx_21 + rdx_21) - ((rdx_21 * rdx_21) * rax_30));\n                r12 = (r12 * ((rax_38 + rax_38) - ((rax_38 * rax_38) * rax_30)));\n                if (sub_404050(rdi_9, rax_30) != 0)\n                {\n                    sub_402440(arg4, var_48, rax_30);\n                }\n                else\n                {\n                    sub_402bf0(var_48, rax_30, (var_90 + 1), arg4);\n                }\n            }\n            else\n            {\n                int64_t r8_11 = rax_30;\n                var_90 = r13_3;\n                uint64_t rax_46 = *(((rax_30 >> 1) & 0x7f) + 0x40c220);\n                int64_t rdx_28 = ((rax_46 + rax_46) - ((rax_46 * rax_46) * r8_11));\n                int64_t rax_50 = ((rdx_28 + rdx_28) - ((rdx_28 * rdx_28) * r8_11));\n                int64_t rcx_17 = ((rax_50 + rax_50) - ((rax_50 * rax_50) * r8_11));\n                r12 = (r12 * rcx_17);\n                if (rbp < r8_11)\n                {\n                    rbp = 0;\n                }\n                else\n                {\n                    int64_t rax_54;\n                    int64_t rdx_31;\n                    rdx_31 = HIGHD((r12 * r8_11));\n                    rax_54 = LOWD((r12 * r8_11));\n                    rbp = ((rbp - rdx_31) * rcx_17);\n                }\n                char rax_55;\n                if ((r8_11 > 1 && r8_11 > 0x17ded78))\n                {\n                    rax_55 = sub_403840(r8_11);\n                }\n                if ((r8_11 <= 1 || ((r8_11 > 1 && r8_11 > 0x17ded78) && rax_55 == 0)))\n                {\n                    sub_4027d0(r8_11, (var_90 + 1), arg4);\n                }\n                if ((r8_11 > 1 && (r8_11 <= 0x17ded78 || (r8_11 > 0x17ded78 && rax_55 != 0))))\n                {\n                    sub_401d80(arg4, r8_11, 1);\n                }\n                if (rbp != 0)\n                {\n                    if (sub_404050(rbp, r12) != 0)\n                    {\n                        return sub_402440(arg4, rbp, r12);\n                    }\n                    rbx_1 = sub_402590(&var_60, var_60, rbx_1, rbp, r12);\n                    var_98_1 = sub_402590(&var_58, var_58, var_98_1, rbp, r12);\n                    rsi_2 = var_60;\n                    r15_1 = sub_402590(&var_50, var_50, r15_1, rbp, r12);\n                    continue;\n                }\n            }\n            if (r12 > 1)\n            {\n                char rax_43;\n                if (r12 > 0x17ded78)\n                {\n                    rax_43 = sub_403840(r12);\n                }\n                if ((r12 <= 0x17ded78 || (r12 > 0x17ded78 && rax_43 != 0)))\n                {\n                    rax_3 = sub_401d80(arg4, r12, 1);\n                    break;\n                }\n            }\n            return sub_4027d0(r12, var_90, arg4);\n        }\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_403210",
            "funcStartAddr": "0x403210",
            "funcEndAddr": "0x403836",
            "decompiledFuncCode": "void sub_403210(uint64_t arg1, uint64_t arg2, int64_t* arg3)\n{\n    uint64_t r14 = arg2;\n    *(arg3 + 0xfa) = 0;\n    uint64_t var_50 = arg1;\n    arg3[1] = 0;\n    if ((arg1 == 0 && arg2 <= 1))\n    {\n    label_403253:\n        return;\n    }\n    if ((r14 & 1) == 0)\n    {\n        if (r14 != 0)\n        {\n            uint64_t rflags_2;\n            char rdx_1;\n            rdx_1 = _bit_scan_forward(r14);\n            uint64_t rax_4 = (var_50 << (0x40 - rdx_1));\n            var_50 = (var_50 >> rdx_1);\n            r14 = ((r14 >> rdx_1) | rax_4);\n            sub_401d80(arg3, 2, rdx_1);\n        }\n        else\n        {\n            uint64_t rflags_1;\n            char rcx_1;\n            rcx_1 = _bit_scan_forward(var_50);\n            r14 = (var_50 >> rcx_1);\n            sub_401d80(arg3, 2, (rcx_1 + 0x40));\n            var_50 = 0;\n        }\n    }\n    int32_t rbp_1;\n    int64_t r12_1;\n    if ((((r14 & 1) == 0 && r14 == 0) || ((((r14 & 1) == 0 && r14 != 0) || (r14 & 1) != 0) && var_50 == 0)))\n    {\n        uint64_t r13_1 = 0x1a;\n        r12_1 = 3;\n        rbp_1 = 0;\n        uint64_t rbx_1 = 0;\n        int64_t r15_1 = 0x5555555555555555;\n        int64_t r8_1 = -0x5555555555555555;\n        while (true)\n        {\n            uint64_t rdx_25 = (r14 * r8_1);\n            void* rbx_4 = ((rbx_1 << 4) + 0x40c2a0);\n            uint64_t rdx_7;\n            if (rdx_25 > r15_1)\n            {\n                rdx_7 = (*(rbx_4 + 0x10) * r14);\n            }\n            else\n            {\n                do\n                {\n                    r14 = rdx_25;\n                    sub_401d80(arg3, r12_1, 1);\n                    rdx_25 = (r14 * r8_1);\n                } while (rdx_25 <= r15_1);\n                rdx_7 = (*(rbx_4 + 0x10) * r14);\n            }\n            uint64_t rdx_9;\n            if (((rdx_25 > r15_1 && rdx_7 <= *(rbx_4 + 0x18)) || (rdx_25 <= r15_1 && rdx_7 <= *(rbx_4 + 0x18))))\n            {\n                int64_t r15_4 = (*((rbp_1 + 1) + 0x40efa0) + r12_1);\n                do\n                {\n                    r14 = rdx_7;\n                    sub_401d80(arg3, r15_4, 1);\n                    rdx_7 = (*(rbx_4 + 0x10) * r14);\n                } while (rdx_7 <= *(rbx_4 + 0x18));\n                rdx_9 = (*(rbx_4 + 0x20) * r14);\n                if (rdx_9 <= *(rbx_4 + 0x28))\n                {\n                    goto label_403570;\n                }\n                goto label_403418;\n            }\n            if (((rdx_25 > r15_1 && rdx_7 > *(rbx_4 + 0x18)) || (rdx_25 <= r15_1 && rdx_7 > *(rbx_4 + 0x18))))\n            {\n                rdx_9 = (*(rbx_4 + 0x20) * r14);\n                uint64_t rdx_11;\n                if (rdx_9 <= *(rbx_4 + 0x28))\n                {\n                label_403570:\n                    int64_t r15_7 = ((*((rbp_1 + 1) + 0x40efa0) + *((rbp_1 + 2) + 0x40efa0)) + r12_1);\n                    do\n                    {\n                        r14 = rdx_9;\n                        sub_401d80(arg3, r15_7, 1);\n                        rdx_9 = (*(rbx_4 + 0x20) * r14);\n                    } while (rdx_9 <= *(rbx_4 + 0x28));\n                    rdx_11 = (*(rbx_4 + 0x30) * r14);\n                    if (*(rbx_4 + 0x38) >= rdx_11)\n                    {\n                        goto label_4035d5;\n                    }\n                    goto label_40342a;\n                }\n            label_403418:\n                rdx_11 = (*(rbx_4 + 0x30) * r14);\n                int64_t var_40;\n                uint64_t rdx_13;\n                if (*(rbx_4 + 0x38) >= rdx_11)\n                {\n                label_4035d5:\n                    int64_t r15_11 = (((*((rbp_1 + 1) + 0x40efa0) + *((rbp_1 + 3) + 0x40efa0)) + r12_1) + *((rbp_1 + 2) + 0x40efa0));\n                    do\n                    {\n                        r14 = rdx_11;\n                        sub_401d80(arg3, r15_11, 1);\n                        rdx_11 = (*(rbx_4 + 0x30) * r14);\n                    } while (rdx_11 <= *(rbx_4 + 0x38));\n                    rdx_13 = (*(rbx_4 + 0x40) * r14);\n                    if (*(rbx_4 + 0x48) >= rdx_13)\n                    {\n                        goto label_403610;\n                    }\n                }\n                else\n                {\n                label_40342a:\n                    rdx_13 = (*(rbx_4 + 0x40) * r14);\n                    if (*(rbx_4 + 0x48) >= rdx_13)\n                    {\n                    label_403610:\n                        r14 = rdx_13;\n                        int32_t r15_12 = (rbp_1 + 1);\n                        int32_t r8_2 = (rbp_1 + 5);\n                        while (true)\n                        {\n                            int32_t rdx_34 = r15_12;\n                            int64_t rsi_17 = r12_1;\n                            do\n                            {\n                                uint64_t rdi_9 = rdx_34;\n                                rdx_34 = (rdx_34 + 1);\n                                rsi_17 = (rsi_17 + *(rdi_9 + 0x40efa0));\n                            } while (r8_2 != rdx_34);\n                            var_40 = r8_2;\n                            sub_401d80(arg3, rsi_17, 1);\n                            r8_2 = var_40;\n                            uint64_t rdx_36 = (*(rbx_4 + 0x40) * r14);\n                            if (rdx_36 > *(rbx_4 + 0x48))\n                            {\n                                break;\n                            }\n                            r14 = rdx_36;\n                        }\n                    }\n                }\n                uint64_t rdx_15 = (*(rbx_4 + 0x50) * r14);\n                if (rdx_15 <= *(rbx_4 + 0x58))\n                {\n                    r14 = rdx_15;\n                    int32_t r15_15 = (rbp_1 + 1);\n                    int32_t r8_6 = (rbp_1 + 6);\n                    while (true)\n                    {\n                        int32_t rdx_45 = r15_15;\n                        int64_t rsi_22 = r12_1;\n                        do\n                        {\n                            uint64_t rdi_20 = rdx_45;\n                            rdx_45 = (rdx_45 + 1);\n                            rsi_22 = (rsi_22 + *(rdi_20 + 0x40efa0));\n                        } while (r8_6 != rdx_45);\n                        var_40 = r8_6;\n                        sub_401d80(arg3, rsi_22, 1);\n                        r8_6 = var_40;\n                        uint64_t rdx_47 = (*(rbx_4 + 0x50) * r14);\n                        if (rdx_47 > *(rbx_4 + 0x58))\n                        {\n                            break;\n                        }\n                        r14 = rdx_47;\n                    }\n                }\n                uint64_t rdx_17 = (*(rbx_4 + 0x60) * r14);\n                if (*(rbx_4 + 0x68) >= rdx_17)\n                {\n                    r14 = rdx_17;\n                    int32_t r15_14 = (rbp_1 + 1);\n                    int32_t r8_5 = (rbp_1 + 7);\n                    while (true)\n                    {\n                        int32_t rdx_42 = r15_14;\n                        int64_t rsi_21 = r12_1;\n                        do\n                        {\n                            uint64_t rdi_17 = rdx_42;\n                            rdx_42 = (rdx_42 + 1);\n                            rsi_21 = (rsi_21 + *(rdi_17 + 0x40efa0));\n                        } while (r8_5 != rdx_42);\n                        var_40 = r8_5;\n                        sub_401d80(arg3, rsi_21, 1);\n                        r8_5 = var_40;\n                        uint64_t rdx_44 = (*(rbx_4 + 0x60) * r14);\n                        if (rdx_44 > *(rbx_4 + 0x68))\n                        {\n                            break;\n                        }\n                        r14 = rdx_44;\n                    }\n                }\n                uint64_t rdx_19 = (*(rbx_4 + 0x70) * r14);\n                if (rdx_19 <= *(rbx_4 + 0x78))\n                {\n                    r14 = rdx_19;\n                    int32_t r15_13 = (rbp_1 + 1);\n                    int32_t r8_4 = (rbp_1 + 8);\n                    while (true)\n                    {\n                        int32_t rdx_39 = r15_13;\n                        int64_t rsi_20 = r12_1;\n                        do\n                        {\n                            uint64_t rdi_14 = rdx_39;\n                            rdx_39 = (rdx_39 + 1);\n                            rsi_20 = (rsi_20 + *(rdi_14 + 0x40efa0));\n                        } while (r8_4 != rdx_39);\n                        var_40 = r8_4;\n                        sub_401d80(arg3, rsi_20, 1);\n                        r8_4 = var_40;\n                        uint64_t rdx_41 = (*(rbx_4 + 0x70) * r14);\n                        if (rdx_41 > *(rbx_4 + 0x78))\n                        {\n                            break;\n                        }\n                        r14 = rdx_41;\n                    }\n                }\n                r12_1 = (r12_1 + r13_1);\n                if (r14 < (r12_1 * r12_1))\n                {\n                    break;\n                }\n                rbp_1 = (rbp_1 + 8);\n                if (rbp_1 > 0x29b)\n                {\n                    break;\n                }\n            label_403490:\n                rbx_1 = rbp_1;\n                r13_1 = *(rbx_1 + 0x40ece0);\n                uint64_t rdx_23 = (rbx_1 << 4);\n                r8_1 = *(rdx_23 + 0x40c2a0);\n                r15_1 = *(rdx_23 + 0x40c2a8);\n            }\n        }\n    }\n    if (((((r14 & 1) == 0 && r14 != 0) || (r14 & 1) != 0) && var_50 != 0))\n    {\n        void* rbx_2 = 1;\n        uint64_t r13_2 = 2;\n        int64_t r15_2 = -0x5555555555555555;\n        r12_1 = 3;\n        while (true)\n        {\n            uint64_t rsi_1 = (r15_2 * r14);\n            uint64_t rax;\n            int64_t rdx_2;\n            rdx_2 = HIGHD((rsi_1 * r12_1));\n            rax = LOWD((rsi_1 * r12_1));\n            if (var_50 >= rdx_2)\n            {\n                rax = ((var_50 - rdx_2) * r15_2);\n                int64_t rbp_2 = *((rbx_2 << 4) + 0x40c298);\n                if (rax <= rbp_2)\n                {\n                    do\n                    {\n                        r14 = rsi_1;\n                        var_50 = rax;\n                        sub_401d80(arg3, r12_1, 1);\n                        rsi_1 = (r15_2 * r14);\n                        int64_t rdx_5;\n                        rdx_5 = HIGHD((rsi_1 * r12_1));\n                        rax = LOWD((rsi_1 * r12_1));\n                        if (rdx_5 > var_50)\n                        {\n                            break;\n                        }\n                        rax = ((var_50 - rdx_5) * r15_2);\n                    } while (rax <= rbp_2);\n                }\n            }\n            rbp_1 = rbx_2;\n            r12_1 = (r12_1 + r13_2);\n            rbx_2 = (rbx_2 + 1);\n            if (var_50 == 0)\n            {\n                break;\n            }\n            if (rbp_1 > 0x29b)\n            {\n                break;\n            }\n            r13_2 = *(rbx_2 + 0x40efa0);\n            r15_2 = *((rbx_2 << 4) + 0x40c290);\n        }\n        if (rbp_1 <= 0x29b)\n        {\n            goto label_403490;\n        }\n    }\n    if (var_50 == 0)\n    {\n        if (r14 <= 1)\n        {\n            goto label_403253;\n        }\n        if (sub_404050(0, r14) == 0)\n        {\n            /* tailcall */\n            return sub_4027d0(r14, 1, arg3);\n        }\n        goto label_4037fb;\n    }\n    int64_t rax_16 = sub_404050(var_50, r14);\n    if (rax_16 == 0)\n    {\n        /* tailcall */\n        return sub_402bf0(var_50, r14, 1, arg3, rax_16);\n    }\nlabel_4037fb:\n    /* tailcall */\n    return sub_402440(arg3, var_50, r14);\n}\n\n"
        },
        {
            "funcName": "sub_403840",
            "funcStartAddr": "0x403840",
            "funcEndAddr": "0x403ade",
            "decompiledFuncCode": "uint64_t sub_403840(uint64_t arg1)\n{\n    uint64_t r14 = (arg1 - 1);\n    uint64_t var_160 = r14;\n    int32_t var_14c;\n    if ((r14 & 1) != 0)\n    {\n        r14 = var_160;\n        var_14c = 0;\n    }\n    else\n    {\n        int32_t rax_1 = 0;\n        do\n        {\n            r14 = (r14 >> 1);\n            rax_1 = (rax_1 + 1);\n        } while ((r14 & 1) == 0);\n        var_14c = rax_1;\n    }\n    uint64_t rcx = arg1;\n    int32_t rsi = 0x40;\n    int64_t r15 = 0;\n    uint64_t rax_5 = *(((arg1 >> 1) & 0x7f) + 0x40c220);\n    int64_t rdx_1 = ((rax_5 + rax_5) - ((rax_5 * rax_5) * arg1));\n    int64_t rax_9 = ((rdx_1 + rdx_1) - ((rdx_1 * rdx_1) * arg1));\n    int64_t rdx_4 = 0;\n    int64_t r13_1 = ((rax_9 + rax_9) - ((rax_9 * rax_9) * arg1));\n    int64_t rax_12 = 1;\n    int32_t temp4_1;\n    do\n    {\n        int64_t rdi_1 = (rcx << 0x3f);\n        rcx = (rcx >> 1);\n        rdx_4 = ((rdx_4 >> 1) | rdi_1);\n        if ((rcx < rax_12 || ((rcx >= rax_12 && rcx == rax_12) && rdx_4 <= r15)))\n        {\n            int64_t temp3_1 = r15;\n            r15 = (r15 - rdx_4);\n            rax_12 = (rax_12 - rcx);\n        }\n        temp4_1 = rsi;\n        rsi = (rsi - 1);\n    } while (temp4_1 != 1);\n    int64_t r10;\n    r10 = (arg1 - r15) > r15;\n    uint64_t rbp = (((-r10) & arg1) + ((r15 + r15) - arg1));\n    char rax_17 = sub_401ed0(arg1, r13_1, rbp, r14, var_14c, r15);\n    char var_139 = rax_17;\n    if (rax_17 != 0)\n    {\n        char* r12_1 = &data_40efa0;\n        void var_138;\n        sub_403210(0, var_160, &var_138);\n        char var_3e;\n        uint32_t rax_18 = var_3e;\n        void var_168;\n        void* rax_20 = ((&var_168 + ((rax_18 - 1) << 3)) + 0x40);\n        int64_t r14_1 = 2;\n        while (true)\n        {\n            if (rax_18 == 0)\n            {\n                return var_139;\n            }\n            void var_128;\n            void* r11_1 = &var_128;\n            int64_t rax_24;\n            do\n            {\n                rax_24 = sub_401e60(rbp, (COMBINE(0, var_160) / *r11_1), arg1, r13_1, r15);\n                if (rax_20 == r11_1)\n                {\n                    break;\n                }\n                r11_1 = (r11_1 + 8);\n            } while (rax_24 != r15);\n            if ((rax_20 == r11_1 && rax_24 != r15))\n            {\n                return var_139;\n            }\n            r14_1 = (r14_1 + *r12_1);\n            uint64_t rax_27;\n            int64_t rdx_10;\n            rdx_10 = HIGHD((r15 * r14_1));\n            rax_27 = LOWD((r15 * r14_1));\n            rbp = rax_27;\n            if (rdx_10 == 0)\n            {\n                rbp = (COMBINE(0, rax_27) % arg1);\n            }\n            else\n            {\n                if (arg1 <= rdx_10)\n                {\n                    __assert_fail(\"(s1) < (n)\", \"src/factor.c\", 0x4f4, \"prime_p\");\n                    /* no return */\n                }\n                uint64_t rsi_5 = arg1;\n                int32_t rax_33 = 0x40;\n                uint64_t rcx_4 = 0;\n                int32_t temp6_1;\n                do\n                {\n                    uint64_t rdi_6 = (rsi_5 << 0x3f);\n                    rsi_5 = (rsi_5 >> 1);\n                    rcx_4 = ((rcx_4 >> 1) | rdi_6);\n                    if ((rsi_5 < rdx_10 || ((rsi_5 >= rdx_10 && rsi_5 == rdx_10) && rcx_4 <= rbp)))\n                    {\n                        uint64_t temp5_1 = rbp;\n                        rbp = (rbp - rcx_4);\n                        rdx_10 = (rdx_10 - rsi_5);\n                    }\n                    temp6_1 = rax_33;\n                    rax_33 = (rax_33 - 1);\n                } while (temp6_1 != 1);\n            }\n            if (sub_401ed0(arg1, r13_1, rbp, r14, var_14c, r15) == 0)\n            {\n                break;\n            }\n            r12_1 = &r12_1[1];\n            if (0x40f23c == r12_1)\n            {\n                error(0, 0, dcgettext(nullptr, \"Lucas prime test failure.  This \u2026\", 5));\n                abort();\n                /* no return */\n            }\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_403ae0",
            "funcStartAddr": "0x403ae0",
            "funcEndAddr": "0x404045",
            "decompiledFuncCode": "uint64_t sub_403ae0(int64_t arg1, int64_t arg2)\n{\n    int64_t rbx = arg1;\n    int64_t rax;\n    rax = arg2 == 0;\n    uint64_t rdi = (arg1 - rax);\n    uint64_t rdi_2 = (arg2 - 1);\n    int32_t var_1a8;\n    uint64_t var_198;\n    uint64_t rcx;\n    if (arg2 != 1)\n    {\n        uint64_t rflags_1;\n        int32_t rax_60;\n        rax_60 = _bit_scan_forward(rdi_2);\n        var_1a8 = rax_60;\n        rcx = rax_60;\n        var_198 = ((rdi << (0x40 - rax_60)) | (rdi_2 >> rcx));\n        uint64_t var_190_1 = (rdi >> rcx);\n    }\n    else\n    {\n        uint64_t rflags;\n        rcx = _bit_scan_forward(rdi);\n        int64_t var_190 = 0;\n        var_198 = (rdi >> rcx);\n        var_1a8 = (rcx + 0x40);\n    }\n    uint64_t rax_7 = *(((arg2 >> 1) & 0x7f) + 0x40c220);\n    int64_t rdx_2 = ((rax_7 + rax_7) - ((rax_7 * rax_7) * arg2));\n    int64_t rax_11 = ((rdx_2 + rdx_2) - ((rdx_2 * rdx_2) * arg2));\n    int64_t rax_13 = ((rax_11 * rax_11) * arg2);\n    int64_t r13_1 = ((rax_11 + rax_11) - rax_13);\n    int64_t rcx_3 = (((rcx - rcx) & 0x40) + 0x3f);\n    bool c_1 = rbx < 2;\n    int64_t rdx_5;\n    rdx_5 = c_1;\n    int64_t rax_15 = ((rax_13 - rax_13) + 1);\n    do\n    {\n        int64_t rsi = rdx_5;\n        rdx_5 = (rdx_5 + rdx_5);\n        rax_15 = ((rax_15 + rax_15) | (rsi >> 0x3f));\n        if ((rbx < rax_15 || ((rbx >= rax_15 && rbx == rax_15) && arg2 <= rdx_5)))\n        {\n            int64_t temp1_1 = rdx_5;\n            rdx_5 = (rdx_5 - arg2);\n            rax_15 = (rax_15 - rbx);\n        }\n        rcx_3 = (rcx_3 - 1);\n    } while (rcx_3 != -1);\n    int64_t var_178 = rdx_5;\n    int64_t rdx_6 = (rdx_5 + rdx_5);\n    int64_t rax_17 = (rax_15 + rax_15);\n    int64_t var_180 = rax_17;\n    int64_t var_188 = rdx_6;\n    if ((rbx < rax_17 || ((rbx >= rax_17 && rbx == rax_17) && arg2 <= rdx_6)))\n    {\n        int64_t var_180_2 = (rax_17 - rbx);\n        var_188 = (rdx_6 - arg2);\n    }\n    int64_t var_168 = arg2;\n    int64_t var_160 = rbx;\n    char rax_18 = sub_402240(&var_168, r13_1, &var_188, &var_198, var_1a8, &var_178);\n    char var_1a1 = rax_18;\n    if (rax_18 != 0)\n    {\n        char* r12_1 = &data_40efa0;\n        int64_t var_138;\n        sub_403210(rdi, rdi_2, &var_138);\n        int64_t rbp_2 = 2;\n        uint64_t rdx_11 = ((rdi << 0x3f) | (rdi_2 >> 1));\n        uint64_t rdi_7 = (rdi >> 1);\n        int64_t var_140;\n        int64_t* var_1a0_1 = &var_140;\n        while (true)\n        {\n            uint64_t var_158;\n            int64_t var_130;\n            char var_3e;\n            uint64_t rax_39;\n            int64_t rcx_13;\n            if (var_130 != 0)\n            {\n                int64_t rcx_18 = var_138;\n                int64_t var_150_4 = 0;\n                uint64_t rax_50 = *(((rcx_18 >> 1) & 0x7f) + 0x40c220);\n                int64_t rdx_20 = ((rax_50 + rax_50) - ((rax_50 * rax_50) * rcx_18));\n                int64_t rax_54 = ((rdx_20 + rdx_20) - ((rdx_20 * rdx_20) * rcx_18));\n                var_158 = (rdi_2 * ((rax_54 + rax_54) - ((rax_54 * rax_54) * rcx_18)));\n                rax_39 = sub_4020d0(var_1a0_1, &var_188, &var_158, &var_168, r13_1, &var_178);\n                uint64_t var_148_2 = rax_39;\n                if (rax_39 == var_178)\n                {\n                    rcx_13 = var_140;\n                    rax_39 = rcx_13 != rax_15;\n                    if ((var_3e != 0 && rcx_13 != rax_15))\n                    {\n                        goto label_403cc0;\n                    }\n                }\n            }\n            int64_t r12_2;\n            if ((var_130 == 0 || (var_130 != 0 && rax_39 != var_178)))\n            {\n                if (var_3e == 0)\n                {\n                    break;\n                }\n            label_403cc0:\n                r12_2 = 1;\n                while (true)\n                {\n                    int64_t rdx_14 = &var_130[r12_2];\n                    if (rdx_14 == 2)\n                    {\n                        var_158 = rdx_11;\n                        uint64_t var_150_2 = rdi_7;\n                    }\n                    else\n                    {\n                        uint64_t rax_24 = *(((rdx_14 >> 1) & 0x7f) + 0x40c220);\n                        int64_t rcx_6 = ((rax_24 + rax_24) - ((rax_24 * rax_24) * rdx_14));\n                        int64_t rax_28 = ((rcx_6 + rcx_6) - ((rcx_6 * rcx_6) * rdx_14));\n                        int64_t rcx_10 = ((rax_28 + rax_28) - ((rax_28 * rax_28) * rdx_14));\n                        uint64_t rsi_5 = (rdi_2 * rcx_10);\n                        if (rdi < rdx_14)\n                        {\n                            var_158 = rsi_5;\n                            int64_t var_150_3 = 0;\n                        }\n                        else\n                        {\n                            var_158 = rsi_5;\n                            int64_t rax_32;\n                            int64_t rdx_12;\n                            rdx_12 = HIGHD((rsi_5 * rdx_14));\n                            rax_32 = LOWD((rsi_5 * rdx_14));\n                            int64_t var_150_1 = (rcx_10 * (rdi - rdx_12));\n                        }\n                    }\n                    int64_t rax_35 = sub_4020d0(&var_140, &var_188, &var_158, &var_168, r13_1, &var_178);\n                    int64_t var_148_1 = rax_35;\n                    if (rax_35 == var_178)\n                    {\n                        rcx_13 = var_140;\n                        if (var_3e <= r12_2)\n                        {\n                            break;\n                        }\n                        if ((var_3e > r12_2 && rcx_13 == rax_15))\n                        {\n                            break;\n                        }\n                    }\n                    else if (var_3e <= r12_2)\n                    {\n                        return var_1a1;\n                    }\n                    r12_2 = (r12_2 + 1);\n                }\n                if (var_3e <= r12_2)\n                {\n                    rax_39 = rcx_13 != rax_15;\n                }\n            }\n            if ((((((var_130 == 0 || (var_130 != 0 && rax_39 != var_178)) && var_3e != 0) && var_3e <= r12_2) || ((var_130 != 0 && rax_39 == var_178) && var_3e == 0)) && rax_39 != 0))\n            {\n                break;\n            }\n            rbp_2 = (rbp_2 + *r12_1);\n            int64_t rax_41 = 0;\n            int64_t rdx_16 = 0;\n            if (rbx <= rbp_2)\n            {\n                rdx_16 = rbp_2;\n            }\n            int64_t rcx_16 = (((rcx_13 - rcx_13) & 0xffffffffffffffc0) + 0x7f);\n            if (rbx > rbp_2)\n            {\n                rax_41 = rbp_2;\n            }\n            do\n            {\n                int64_t rsi_7 = rdx_16;\n                rdx_16 = (rdx_16 + rdx_16);\n                rax_41 = ((rax_41 + rax_41) | (rsi_7 >> 0x3f));\n                if ((rbx < rax_41 || ((rbx >= rax_41 && rbx == rax_41) && arg2 <= rdx_16)))\n                {\n                    int64_t temp4_1 = rdx_16;\n                    rdx_16 = (rdx_16 - arg2);\n                    rax_41 = (rax_41 - rbx);\n                }\n                rcx_16 = (rcx_16 - 1);\n            } while (rcx_16 != -1);\n            var_188 = rdx_16;\n            int64_t var_180_1 = rax_41;\n            if (sub_402240(&var_168, r13_1, &var_188, &var_198, var_1a8, &var_178) == 0)\n            {\n                var_1a1 = 0;\n                break;\n            }\n            r12_1 = &r12_1[1];\n            if (0x40f23c == r12_1)\n            {\n                error(0, 0, dcgettext(nullptr, \"Lucas prime test failure.  This \u2026\", 5));\n                abort();\n                /* no return */\n            }\n        }\n    }\n    return var_1a1;\n}\n\n"
        },
        {
            "funcName": "sub_404050",
            "funcStartAddr": "0x404050",
            "funcEndAddr": "0x404093",
            "decompiledFuncCode": "int64_t sub_404050(int64_t arg1, uint64_t arg2)\n{\n    if (arg1 != 0)\n    {\n        /* tailcall */\n        return sub_403ae0(arg1, arg2);\n    }\n    if (arg2 <= 1)\n    {\n        return 0;\n    }\n    if (arg2 <= 0x17ded78)\n    {\n        return 1;\n    }\n    /* tailcall */\n    return sub_403840(arg2);\n}\n\n"
        },
        {
            "funcName": "sub_4040a0",
            "funcStartAddr": "0x4040a0",
            "funcEndAddr": "0x40416e",
            "decompiledFuncCode": "int64_t sub_4040a0(uint64_t arg1, uint64_t arg2)\n{\n    sub_402640(arg1, arg2);\n    sub_4026f0(0x3a);\n    uint64_t var_128;\n    sub_403210(arg1, arg2, &var_128);\n    char var_2e;\n    if (var_2e != 0)\n    {\n        void var_118;\n        void* r12_1 = &var_118;\n        int64_t* rbp_1 = &var_128;\n        do\n        {\n            int32_t rbx_1 = 0;\n            if (rbp_1[0x1c] != 0)\n            {\n                do\n                {\n                    rbx_1 = (rbx_1 + 1);\n                    sub_4026f0(0x20);\n                    sub_402340(*r12_1, nullptr);\n                } while (rbp_1[0x1c] > rbx_1);\n            }\n            rbp_1 = (rbp_1 + 1);\n            r12_1 = (r12_1 + 8);\n        } while (var_2e > (rbp_1 - &var_128));\n    }\n    int64_t var_120;\n    if (var_120 != 0)\n    {\n        sub_4026f0(0x20);\n        sub_402640(var_120, var_128);\n    }\n    return sub_4026f0(0xa);\n}\n\n"
        },
        {
            "funcName": "sub_404170",
            "funcStartAddr": "0x404170",
            "funcEndAddr": "0x4042de",
            "decompiledFuncCode": "int64_t sub_404170(char* arg1)\n{\n    char* rax = arg1;\n    char rdx = *arg1;\n    if (rdx == 0x20)\n    {\n        do\n        {\n            rax = &rax[1];\n            rdx = *rax;\n        } while (rdx == 0x20);\n    }\n    void* r8 = &rax[1];\n    if (rdx == 0x2b)\n    {\n        void* rdx_1 = &rax[2];\n        rax = r8;\n        r8 = rdx_1;\n    }\n    char* rcx = rax;\n    int32_t rsi = 4;\n    int64_t rax_4;\n    while (true)\n    {\n        rcx = &rcx[1];\n        int32_t rdx_2 = rcx[-1];\n        int64_t rbx;\n        char const* const rsi_1;\n        if ((rdx_2 == 0 && rsi == 0))\n        {\n            int32_t rax_5 = *rax;\n            uint64_t rax_10;\n            uint64_t rbx_1;\n            uint64_t rbx_2;\n            uint64_t rbp_1;\n            if (rax_5 == 0)\n            {\n                rbp_1 = 0;\n                rbx_1 = 0;\n            }\n            else\n            {\n                int32_t rdx_5 = (rax_5 - 0x30);\n                rbp_1 = 0;\n                rbx_1 = 0;\n                do\n                {\n                    uint64_t rsi_2 = (rbp_1 * 5);\n                    uint64_t rsi_3 = (rsi_2 + rsi_2);\n                    uint64_t rax_7 = rdx_5;\n                    uint32_t rcx_4 = ((rbp_1 >> 0x3f) + (rbp_1 >> 0x3d));\n                    int32_t rdx_6;\n                    rdx_6 = (rax_7 + rsi_3) < rax_7;\n                    rbp_1 = (rax_7 + rsi_3);\n                    uint64_t rax_9 = (rbx_1 * 5);\n                    rax_10 = (rax_9 + rax_9);\n                    rbx_2 = (rdx_6 + rcx_4);\n                    rbx_1 = (rbx_2 + rax_10);\n                    if ((rbx_2 + rax_10) < rbx_2)\n                    {\n                        break;\n                    }\n                    r8 = (r8 + 1);\n                    int32_t rax_11 = *(r8 - 1);\n                    if (rax_11 == 0)\n                    {\n                        break;\n                    }\n                    rdx_5 = (rax_11 - 0x30);\n                } while (rbx_1 <= 0x1999999999999999);\n                if ((((rbx_2 + rax_10) >= rbx_2 && rbx_1 < 0) || (rbx_2 + rax_10) < rbx_2))\n                {\n                    rsi_1 = \"%s is too large\";\n                    rbx = sub_406f50(arg1);\n                }\n            }\n            if ((rax_5 == 0 || ((rax_5 != 0 && (rbx_2 + rax_10) >= rbx_2) && rbx_1 >= 0)))\n            {\n                if (data_613310 != 0)\n                {\n                    fwrite(\"[using single-precision arithmet\u2026\", 1, 0x24, stderr);\n                }\n                sub_4040a0(rbx_1, rbp_1);\n                rax_4 = 1;\n                break;\n            }\n        }\n        if (rdx_2 != 0)\n        {\n            rsi = 0;\n            if ((rdx_2 - 0x30) <= 9)\n            {\n                continue;\n            }\n        }\n        if (((rdx_2 == 0 && rsi != 0) || rdx_2 != 0))\n        {\n            rsi_1 = \"%s is not a valid positive integ\u2026\";\n            rbx = sub_406f50(arg1);\n        }\n        error(0, 0, dcgettext(nullptr, rsi_1, 5), rbx);\n        rax_4 = 0;\n        break;\n    }\n    return rax_4;\n}\n\n"
        },
        {
            "funcName": "sub_4042e0",
            "funcStartAddr": "0x4042e0",
            "funcEndAddr": "0x4045cd",
            "decompiledFuncCode": "int64_t sub_4042e0(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_613328;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [NUMBER]...\\n  or:  %s\u2026\", 5), rbp, rbp);\n        fputs_unlocked(dcgettext(nullptr, \"Print the prime factors of each \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        void* const var_88 = &data_40bd36;\n        void* const* rax_7 = &var_88;\n        void* const var_78_1 = \"coreutils\";\n        void* const var_70_1 = \"Multi-call invocation\";\n        void* const var_68_1 = \"sha224sum\";\n        void* const var_60_1 = \"sha2 utilities\";\n        void* const var_58_1 = \"sha256sum\";\n        void* const var_50_1 = \"sha2 utilities\";\n        void* const var_48_1 = \"sha384sum\";\n        void* const var_40_1 = \"sha2 utilities\";\n        void* const var_38_1 = \"sha512sum\";\n        void* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_7 = &rax_7[2];\n            void* const rdi_5 = *rax_7;\n            c_1 = false;\n            z_1 = (rdi_5 & rdi_5) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            void* const rsi_5 = \"factor\";\n            int64_t rcx_2 = 7;\n            while (rcx_2 != 0)\n            {\n                char temp0_1 = *rsi_5;\n                char temp1_1 = *rdi_5;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_5 = (rsi_5 + 1);\n                rdi_5 = (rdi_5 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        void* const rbp_1 = rax_7[1];\n        char* rax_18;\n        int32_t rax_19;\n        void* const r12_1;\n        if (rbp_1 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_5;\n            uint64_t r8_2;\n            ssize_t r9_2;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_18 = setlocale(5, nullptr, rdx_5, rcx_5, r8_2, r9_2, var_88, \"test invocation\");\n            if (rax_18 != 0)\n            {\n                rax_19 = strncmp(rax_18, &data_40bdba, 3);\n                if (rax_19 != 0)\n                {\n                    rbp_1 = \"factor\";\n                }\n            }\n            if ((rax_18 == 0 || (rax_18 != 0 && rax_19 == 0)))\n            {\n                rbp_1 = \"factor\";\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"factor\");\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_3;\n            uint64_t r8_1;\n            ssize_t r9_1;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_10 = setlocale(5, nullptr, rdx_3, rcx_3, r8_1, r9_1, var_88, \"test invocation\");\n            if (rax_10 == 0)\n            {\n                goto label_4044c0;\n            }\n            if (strncmp(rax_10, &data_40bdba, 3) == 0)\n            {\n                goto label_4044c0;\n            }\n        }\n        if ((((rbp_1 == 0 && rax_18 != 0) && rax_19 != 0) || rbp_1 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), \"factor\");\n        label_4044c0:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"factor\");\n            if (rbp_1 != \"factor\")\n            {\n                r12_1 = &data_4105cc[0x1b];\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_1, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4045d0",
            "funcStartAddr": "0x4045d0",
            "funcEndAddr": "0x4045d8",
            "decompiledFuncCode": "int64_t sub_4045d0(int64_t arg1)\n{\n    data_613320 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4045e0",
            "funcStartAddr": "0x4045e0",
            "funcEndAddr": "0x4045e8",
            "decompiledFuncCode": "int64_t sub_4045e0(char arg1)\n{\n    data_613318 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4045f0",
            "funcStartAddr": "0x4045f0",
            "funcEndAddr": "0x40468e",
            "decompiledFuncCode": "void sub_4045f0(void* arg1)\n{\n    int32_t rax = sub_4091b0(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_613318 == 0 || (data_613318 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_613320;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_406da0(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_613318 != 0) && *rax_1 == 0x20)) && sub_4091b0(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_613240);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404690",
            "funcStartAddr": "0x404690",
            "funcEndAddr": "0x404706",
            "decompiledFuncCode": "int64_t sub_404690(int32_t arg1, int64_t arg2, uint64_t arg3)\n{\n    int64_t r12;\n    if (arg3 == 0)\n    {\n        r12 = 0;\n    }\n    else\n    {\n        int64_t rbp_1 = arg2;\n        uint64_t rbx_1 = arg3;\n        r12 = 0;\n        ssize_t rax_1;\n        uint64_t temp0_1;\n        do\n        {\n            rax_1 = sub_4072e0(arg1, rbp_1, rbx_1);\n            if (rax_1 == -1)\n            {\n                break;\n            }\n            if (rax_1 == 0)\n            {\n                *__errno_location() = 0x1c;\n                return r12;\n            }\n            r12 = (r12 + rax_1);\n            rbp_1 = (rbp_1 + rax_1);\n            temp0_1 = rbx_1;\n            rbx_1 = (rbx_1 - rax_1);\n        } while (temp0_1 != rax_1);\n    }\n    return r12;\n}\n\n"
        },
        {
            "funcName": "sub_404710",
            "funcStartAddr": "0x404710",
            "funcEndAddr": "0x404758",
            "decompiledFuncCode": "void* sub_404710(uint64_t arg1, void* arg2)\n{\n    void* rcx = (arg2 + 0x14);\n    *(arg2 + 0x14) = 0;\n    while (true)\n    {\n        rcx = (rcx - 1);\n        int64_t rax_2;\n        int64_t rdx_1;\n        rdx_1 = HIGHD((arg1 * -0x3333333333333333));\n        rax_2 = LOWD((arg1 * -0x3333333333333333));\n        uint64_t rdx_2 = (rdx_1 >> 3);\n        char rax_3 = (rdx_2 + (rdx_2 << 2));\n        *rcx = ((arg1 - (rax_3 + rax_3)) + 0x30);\n        if (arg1 <= 9)\n        {\n            break;\n        }\n        arg1 = rdx_2;\n    }\n    return rcx;\n}\n\n"
        },
        {
            "funcName": "sub_404760",
            "funcStartAddr": "0x404760",
            "funcEndAddr": "0x4047f9",
            "decompiledFuncCode": "char* sub_404760(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_40f330;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_613328 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404800",
            "funcStartAddr": "0x404800",
            "funcEndAddr": "0x40481d",
            "decompiledFuncCode": "int64_t sub_404800() __noreturn\n{\n    __assert_fail(\"iter->cur.wc == 0\", \"lib/mbuiter.h\", 0xb3, \"mbuiter_multi_next\");\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404820",
            "funcStartAddr": "0x401a40",
            "funcEndAddr": "0x4050b4",
            "decompiledFuncCode": "uint64_t sub_404820(char* arg1, char* arg2)\n{\n    char* r13;\n    char* var_18 = r13;\n    char* rbx = arg1;\n    char* rax = sub_4073a0(arg2, 2, r13);\n    int32_t r13_2;\n    while (true)\n    {\n        if (*rbx != 0)\n        {\n            char* rax_1;\n            uint64_t rax_2;\n            do\n            {\n                rax_1 = sub_40a420(rbx, rax);\n                if (rax_1 == 0)\n                {\n                    break;\n                }\n                rax_2 = __ctype_get_mb_cur_max();\n                if (rax_2 > 1)\n                {\n                    break;\n                }\n                void* r13_1 = &rax_1[strlen(rax)];\n                uint16_t* rax_5;\n                if (rbx < rax_1)\n                {\n                    rax_5 = *__ctype_b_loc();\n                }\n                if ((rbx >= rax_1 || (rbx < rax_1 && (rax_5[rax_1[-1]] & 8) == 0)))\n                {\n                    uint64_t rbx_1 = *r13_1;\n                    if (rbx_1 == 0)\n                    {\n                        break;\n                    }\n                    if ((*__ctype_b_loc()[rbx_1] & 8) == 0)\n                    {\n                        break;\n                    }\n                }\n                if (*rax_1 == 0)\n                {\n                    break;\n                }\n                rbx = &rax_1[1];\n            } while (*rbx != 0);\n            if ((rax_1 != 0 && rax_2 > 1))\n            {\n                char* var_a8_1 = rbx;\n                char var_b8_1 = 0;\n                mbstate_t var_b4;\n                var_b4.__count = 0;\n                var_b4.__value = 0;\n                char var_ac_1 = 0;\n                uint64_t var_a0;\n                char var_98;\n                int32_t var_94;\n                uint32_t rax_9;\n                int32_t rax_18;\n                uint32_t rcx_1;\n                if (rbx < rax_1)\n                {\n                    int32_t r15_1;\n                    while (true)\n                    {\n                        if (var_b8_1 == 0)\n                        {\n                            char* rbx_2 = var_a8_1;\n                            rcx_1 = *rbx_2;\n                            rax_9 = (rcx_1 >> 5);\n                            if (((*(((rax_9 & 7) << 2) + 0x410680) >> rcx_1) & 1) != 0)\n                            {\n                                var_a0 = 1;\n                                r15_1 = *rbx_2;\n                                var_98 = 1;\n                                var_94 = r15_1;\n                                char var_ac_2 = 1;\n                            }\n                            else\n                            {\n                                rax_18 = mbsinit(&var_b4);\n                                if (rax_18 == 0)\n                                {\n                                    break;\n                                }\n                                var_b8_1 = 1;\n                            }\n                        }\n                        char* rbx_3;\n                        if ((var_b8_1 != 0 || (var_b8_1 == 0 && ((*(((rax_9 & 7) << 2) + 0x410680) >> rcx_1) & 1) == 0)))\n                        {\n                            uint64_t rax_16 = sub_408fc0(&var_94, var_a8_1, sub_407340(var_a8_1, __ctype_get_mb_cur_max()), &var_b4);\n                            var_a0 = rax_16;\n                            if (rax_16 == -1)\n                            {\n                                r15_1 = var_94;\n                                rbx_3 = var_a8_1;\n                                var_98 = 0;\n                                var_a0 = 1;\n                            label_40496b:\n                                void* rbx_4 = &rbx_3[var_a0];\n                                char var_ac_3 = 0;\n                                var_a8_1 = rbx_4;\n                                if (rbx_4 >= rax_1)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                            else\n                            {\n                                if (rax_16 == -2)\n                                {\n                                    rbx_3 = var_a8_1;\n                                    var_98 = 0;\n                                    r15_1 = var_94;\n                                    var_a0 = strlen(rbx_3);\n                                    goto label_40496b;\n                                }\n                                if (rax_16 != 0)\n                                {\n                                    r15_1 = var_94;\n                                }\n                                else\n                                {\n                                    var_a0 = 1;\n                                    if (*var_a8_1 != 0)\n                                    {\n                                    label_405096:\n                                        __assert_fail(\"*iter->cur.ptr == '\\0'\", \"lib/mbuiter.h\", 0xb2, \"mbuiter_multi_next\");\n                                        /* no return */\n                                    }\n                                    r15_1 = var_94;\n                                    if (r15_1 != 0)\n                                    {\n                                    label_4050af:\n                                        __assert_fail(\"iter->cur.wc == 0\", \"lib/mbuiter.h\", 0xb3, \"mbuiter_multi_next\");\n                                        /* no return */\n                                    }\n                                }\n                                var_98 = 1;\n                                if (mbsinit(&var_b4) != 0)\n                                {\n                                    var_b8_1 = 0;\n                                }\n                                char var_ac_4 = 1;\n                            }\n                        }\n                        if (r15_1 == 0)\n                        {\n                        label_401a40:\n                            abort();\n                            /* no return */\n                        }\n                        rbx_3 = var_a8_1;\n                        goto label_40496b;\n                    }\n                    if (((!((var_b8_1 == 0 && ((*(((rax_9 & 7) << 2) + 0x410680) >> rcx_1) & 1) == 0) && rax_18 == 0)) && var_98 != 0))\n                    {\n                        r13_2 = iswalnum(r15_1) == 0;\n                        goto label_404ab3;\n                    }\n                }\n                if ((rbx >= rax_1 || (rbx < rax_1 && (!((var_b8_1 == 0 && ((*(((rax_9 & 7) << 2) + 0x410680) >> rcx_1) & 1) == 0) && rax_18 == 0)))))\n                {\n                    r13_2 = 1;\n                label_404ab3:\n                    char* var_a8_2 = rax_1;\n                    char var_b8_2 = 0;\n                    var_b4.__count = 0;\n                    var_b4.__value = 0;\n                    char var_ac_5 = 0;\n                    char* var_68_1 = rax;\n                    char var_78_1 = 0;\n                    int64_t var_74 = 0;\n                    char var_6c_1 = 0;\n                    uint32_t rax_22;\n                    int32_t rax_56;\n                    uint32_t rcx_3;\n                    while (true)\n                    {\n                        uint64_t var_60_1;\n                        uint32_t var_54;\n                        if (var_78_1 == 0)\n                        {\n                            char* rdx_3 = var_68_1;\n                            rcx_3 = *rdx_3;\n                            rax_22 = (rcx_3 >> 5);\n                            if (((*(((rax_22 & 7) << 2) + 0x410680) >> rcx_3) & 1) != 0)\n                            {\n                                var_60_1 = 1;\n                                char var_58_1 = 1;\n                                var_54 = *rdx_3;\n                                char var_6c_2 = 1;\n                            }\n                            else\n                            {\n                                rax_56 = mbsinit(&var_74);\n                                if (rax_56 == 0)\n                                {\n                                    break;\n                                }\n                                var_78_1 = 1;\n                            }\n                        }\n                        uint64_t rax_36;\n                        if ((var_78_1 != 0 || (var_78_1 == 0 && ((*(((rax_22 & 7) << 2) + 0x410680) >> rcx_3) & 1) == 0)))\n                        {\n                            rax_36 = sub_408fc0(&var_54, var_68_1, sub_407340(var_68_1, __ctype_get_mb_cur_max()), &var_74);\n                            var_60_1 = rax_36;\n                            if (rax_36 == -1)\n                            {\n                                var_60_1 = 1;\n                                char var_58_3 = 0;\n                                char var_6c_5 = 1;\n                            }\n                            if (rax_36 == -2)\n                            {\n                                char var_58_4 = 0;\n                                var_60_1 = strlen(var_68_1);\n                                char var_6c_6 = 1;\n                            }\n                            if ((rax_36 != -1 && rax_36 != -2))\n                            {\n                                if (rax_36 == 0)\n                                {\n                                    var_60_1 = 1;\n                                    if (*var_68_1 != 0)\n                                    {\n                                        goto label_405096;\n                                    }\n                                    if (var_54 != 0)\n                                    {\n                                        goto label_4050af;\n                                    }\n                                }\n                                char var_58_2 = 1;\n                                if (mbsinit(&var_74) != 0)\n                                {\n                                    var_78_1 = 0;\n                                }\n                                char var_6c_4 = 1;\n                            }\n                        }\n                        if ((((var_78_1 == 0 && ((*(((rax_22 & 7) << 2) + 0x410680) >> rcx_3) & 1) != 0) && var_54 == 0) || ((((var_78_1 != 0 || (var_78_1 == 0 && ((*(((rax_22 & 7) << 2) + 0x410680) >> rcx_3) & 1) == 0)) && rax_36 != -1) && rax_36 != -2) && var_54 == 0)))\n                        {\n                            uint64_t rax_62;\n                            int32_t rbx_7;\n                            if (var_b8_2 != 0)\n                            {\n                            label_404eb7:\n                                char* rbx_9 = var_a8_2;\n                                rax_62 = sub_408fc0(&var_94, rbx_9, sub_407340(rbx_9, __ctype_get_mb_cur_max()), &var_b4);\n                                uint64_t var_a0_2 = rax_62;\n                                if (rax_62 == -1)\n                                {\n                                    int64_t var_a0_3 = 1;\n                                    rbx_7 = var_94;\n                                    var_98 = 0;\n                                    char var_ac_14 = 1;\n                                }\n                                if (rax_62 == -2)\n                                {\n                                    var_98 = 0;\n                                    rbx_7 = var_94;\n                                    uint64_t var_a0_5 = strlen(var_a8_2);\n                                    char var_ac_15 = 1;\n                                }\n                                if ((rax_62 != -1 && rax_62 != -2))\n                                {\n                                    if (rax_62 == 0)\n                                    {\n                                        int64_t var_a0_4 = 1;\n                                        if (*var_a8_2 != 0)\n                                        {\n                                            goto label_405096;\n                                        }\n                                        rbx_7 = var_94;\n                                        if (rbx_7 != 0)\n                                        {\n                                        label_40501f:\n                                            sub_404800();\n                                            /* no return */\n                                        }\n                                        goto label_404f05;\n                                    }\n                                    rbx_7 = var_94;\n                                label_404f05:\n                                    var_98 = 1;\n                                    if (mbsinit(&var_b4) != 0)\n                                    {\n                                        char var_b8_5 = 0;\n                                    }\n                                    char var_ac_12 = 1;\n                                }\n                            }\n                            else\n                            {\n                                uint32_t rcx_8 = *var_a8_2;\n                                uint32_t rax_39;\n                                rax_39 = (rcx_8 >> 5);\n                                if (((*(((rax_39 & 7) << 2) + 0x410680) >> rcx_8) & 1) == 0)\n                                {\n                                    if (mbsinit(&var_b4) == 0)\n                                    {\n                                        break;\n                                    }\n                                    char var_b8_4 = 1;\n                                    goto label_404eb7;\n                                }\n                                int64_t var_a0_1 = 1;\n                                rbx_7 = *var_a8_2;\n                                var_98 = 1;\n                                var_94 = rbx_7;\n                                char var_ac_8 = 1;\n                            }\n                            if ((((((var_b8_2 != 0 && rax_62 == -1) || (var_b8_2 != 0 && rax_62 == -2)) || ((var_b8_2 == 0 || ((var_b8_2 != 0 && rax_62 != -1) && rax_62 != -2)) && rbx_7 != 0)) && var_98 != 0) && iswalnum(rbx_7) != 0))\n                            {\n                            label_404cbb:\n                                char* var_a8_3 = rax_1;\n                                char var_b8_3 = 0;\n                                var_b4.__count = 0;\n                                var_b4.__value = 0;\n                                char var_ac_9 = 0;\n                                uint32_t rcx_9 = *rax_1;\n                                uint32_t rax_44;\n                                rax_44 = (rcx_9 >> 5);\n                                int32_t rax_64;\n                                uint64_t rax_67;\n                                if (((*(((rax_44 & 7) << 2) + 0x410680) >> rcx_9) & 1) == 0)\n                                {\n                                    rax_64 = mbsinit(&var_b4);\n                                    if (rax_64 == 0)\n                                    {\n                                        break;\n                                    }\n                                    char var_b8_6 = 1;\n                                    rax_67 = sub_408fc0(&var_94, var_a8_3, sub_407340(var_a8_3, __ctype_get_mb_cur_max()), &var_b4);\n                                    var_a0 = rax_67;\n                                    if (rax_67 == 0)\n                                    {\n                                        var_a0 = 1;\n                                        if (*var_a8_3 != 0)\n                                        {\n                                            goto label_405096;\n                                        }\n                                    }\n                                    if ((((rax_67 != -1 && rax_67 != -2) && rax_67 != 0) || ((rax_67 == 0 && *var_a8_3 == 0) && var_94 == 0)))\n                                    {\n                                        var_98 = 1;\n                                        if (mbsinit(&var_b4) != 0)\n                                        {\n                                            char var_b8_7 = 0;\n                                        }\n                                        char var_ac_13 = 1;\n                                    }\n                                    if (rax_67 == -2)\n                                    {\n                                        var_a0 = strlen(var_a8_3);\n                                        goto label_404d21;\n                                    }\n                                    if (rax_67 == -1)\n                                    {\n                                        var_a0 = 1;\n                                    label_404d21:\n                                        rbx = &rax_1[var_a0];\n                                        break;\n                                    }\n                                }\n                                else\n                                {\n                                    var_a0 = 1;\n                                    var_98 = 1;\n                                    var_94 = *rax_1;\n                                    char var_ac_10 = 1;\n                                }\n                                if ((((*(((rax_44 & 7) << 2) + 0x410680) >> rcx_9) & 1) != 0 || ((((*(((rax_44 & 7) << 2) + 0x410680) >> rcx_9) & 1) == 0 && rax_64 != 0) && (((rax_67 != -1 && rax_67 != -2) && rax_67 != 0) || ((rax_67 == 0 && *var_a8_3 == 0) && var_94 == 0)))))\n                                {\n                                    if (var_94 == 0)\n                                    {\n                                        goto label_4048c9;\n                                    }\n                                    goto label_404d21;\n                                }\n                                goto label_40501f;\n                            }\n                            if (((((((var_b8_2 != 0 && rax_62 == -1) || (var_b8_2 != 0 && rax_62 == -2)) || ((var_b8_2 == 0 || ((var_b8_2 != 0 && rax_62 != -1) && rax_62 != -2)) && rbx_7 != 0)) && var_98 == 0) || ((var_b8_2 == 0 || ((var_b8_2 != 0 && rax_62 != -1) && rax_62 != -2)) && rbx_7 == 0)) || ((((var_b8_2 != 0 && rax_62 == -1) || (var_b8_2 != 0 && rax_62 == -2)) || ((var_b8_2 == 0 || ((var_b8_2 != 0 && rax_62 != -1) && rax_62 != -2)) && rbx_7 != 0)) && var_98 != 0)))\n                            {\n                                if (r13_2 != 0)\n                                {\n                                    goto label_4048d1;\n                                }\n                                goto label_404cbb;\n                            }\n                        }\n                        if ((((((var_78_1 != 0 || (var_78_1 == 0 && ((*(((rax_22 & 7) << 2) + 0x410680) >> rcx_3) & 1) == 0)) && rax_36 == -1) || ((var_78_1 != 0 || (var_78_1 == 0 && ((*(((rax_22 & 7) << 2) + 0x410680) >> rcx_3) & 1) == 0)) && rax_36 == -2)) || ((var_78_1 == 0 && ((*(((rax_22 & 7) << 2) + 0x410680) >> rcx_3) & 1) != 0) && var_54 != 0)) || ((((var_78_1 != 0 || (var_78_1 == 0 && ((*(((rax_22 & 7) << 2) + 0x410680) >> rcx_3) & 1) == 0)) && rax_36 != -1) && rax_36 != -2) && var_54 != 0)))\n                        {\n                            if (var_b8_2 == 0)\n                            {\n                                uint32_t rcx_5 = *var_a8_2;\n                                uint32_t rax_27;\n                                rax_27 = (rcx_5 >> 5);\n                                if (((*(((rax_27 & 7) << 2) + 0x410680) >> rcx_5) & 1) == 0)\n                                {\n                                    if (mbsinit(&var_b4) == 0)\n                                    {\n                                        break;\n                                    }\n                                    var_b8_2 = 1;\n                                    goto label_404d57;\n                                }\n                                var_a0 = 1;\n                                var_98 = 1;\n                                var_94 = *var_a8_2;\n                                char var_ac_6 = 1;\n                            }\n                            else\n                            {\n                            label_404d57:\n                                uint64_t rax_53 = sub_408fc0(&var_94, var_a8_2, sub_407340(var_a8_2, __ctype_get_mb_cur_max()), &var_b4);\n                                var_a0 = rax_53;\n                                if (rax_53 == -1)\n                                {\n                                    var_a0 = 1;\n                                    var_98 = 0;\n                                label_404b99:\n                                    var_a8_2 = &var_a8_2[var_a0];\n                                    var_68_1 = &var_68_1[var_60_1];\n                                    char var_ac_7 = 0;\n                                    char var_6c_3 = 0;\n                                    continue;\n                                }\n                                else\n                                {\n                                    if (rax_53 == -2)\n                                    {\n                                        var_98 = 0;\n                                        var_a0 = strlen(var_a8_2);\n                                        goto label_404b99;\n                                    }\n                                    if (rax_53 == 0)\n                                    {\n                                        var_a0 = 1;\n                                        if (*var_a8_2 != 0)\n                                        {\n                                            goto label_405096;\n                                        }\n                                        if (var_94 != 0)\n                                        {\n                                            goto label_4050af;\n                                        }\n                                    }\n                                    var_98 = 1;\n                                    if (mbsinit(&var_b4) != 0)\n                                    {\n                                        var_b8_2 = 0;\n                                    }\n                                    char var_ac_11 = 1;\n                                }\n                            }\n                            if (var_94 == 0)\n                            {\n                                goto label_401a40;\n                            }\n                            goto label_404b99;\n                        }\n                    }\n                    if ((!((var_78_1 == 0 && ((*(((rax_22 & 7) << 2) + 0x410680) >> rcx_3) & 1) == 0) && rax_56 == 0)))\n                    {\n                        continue;\n                    }\n                }\n                __assert_fail(\"mbsinit (&iter->state)\", \"lib/mbuiter.h\", 0x96, \"mbuiter_multi_next\");\n                /* no return */\n            }\n            if (rax_1 != 0)\n            {\n                r13_2 = 1;\n                break;\n            }\n        }\n    label_4048c9:\n        r13_2 = 0;\n        break;\n    }\nlabel_4048d1:\n    free(rax);\n    return r13_2;\n}\n\n"
        },
        {
            "funcName": "sub_4050c0",
            "funcStartAddr": "0x4050c0",
            "funcEndAddr": "0x405144",
            "decompiledFuncCode": "char* sub_4050c0(char* arg1)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    if ((arg1 != rax && sub_404820(rax, arg1) == 0))\n    {\n        char* rax_5 = sub_407ee0(((strlen(rax) + strlen(arg1)) + 4));\n        __sprintf_chk(rax_5, 1, -1, \"%s (%s)\", rax, arg1);\n        return rax_5;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405150",
            "funcStartAddr": "0x405150",
            "funcEndAddr": "0x4053d0",
            "decompiledFuncCode": "char* sub_405150(char* arg1, char* arg2)\n{\n    char* rbx = arg2;\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rax_1 = sub_409270();\n    char* r12;\n    char* r14_1;\n    char* r15;\n    if (sub_409150(rax_1, \"UTF-8\") == 0)\n    {\n        if (rbx == 0)\n        {\n            r15 = nullptr;\n            r12 = arg1;\n            r14_1 = nullptr;\n        }\n        else\n        {\n            r15 = rbx;\n            r12 = rbx;\n            r14_1 = nullptr;\n        }\n        goto label_4051a7;\n    }\n    r12 = sub_4081c0(rbx, \"UTF-8\", rax_1);\n    uint64_t rax_13 = strlen(rax_1);\n    char* rax_15 = memcpy(sub_407ee0((rax_13 + 0xb)), rax_1, rax_13);\n    void* r15_2 = &rax_15[rax_13];\n    *r15_2 = 0x4c534e4152542f2f;\n    *(r15_2 + 8) = 0x5449;\n    *(r15_2 + 0xa) = 0;\n    r14_1 = sub_4081c0(rbx, \"UTF-8\", rax_15);\n    free(rax_15);\n    char* rax_17;\n    if (r14_1 != 0)\n    {\n        rax_17 = strchr(r14_1, 0x3f);\n        if (rax_17 == 0)\n        {\n            if (r12 == 0)\n            {\n                r15 = r14_1;\n                rbx = nullptr;\n                r12 = r14_1;\n                goto label_4051a7;\n            }\n            r15 = r14_1;\n            if (strcmp(rax, arg1) != 0)\n            {\n                goto label_405353;\n            }\n            if (r12 != r14_1)\n            {\n                free(r14_1);\n            }\n            goto label_405203;\n        }\n        free(r14_1);\n    }\n    char* rbp_1;\n    if (((r14_1 == 0 && r12 != 0) || ((r14_1 != 0 && rax_17 != 0) && r12 != 0)))\n    {\n        if (strcmp(rax, arg1) == 0)\n        {\n            goto label_405203;\n        }\n        r15 = nullptr;\n        r14_1 = nullptr;\n    label_405353:\n        if (sub_404820(rax, arg1) != 0)\n        {\n            rbp_1 = r12;\n        label_4051dd:\n            free(rbp_1);\n        label_4051e2:\n            r12 = rax;\n            if (r14_1 != 0)\n            {\n            label_4051ed:\n                free(r14_1);\n            }\n            goto label_405203;\n        }\n        rbx = r12;\n        rbp_1 = r12;\n    }\n    if (((r14_1 == 0 && r12 == 0) || ((r14_1 != 0 && rax_17 != 0) && r12 == 0)))\n    {\n        r12 = arg1;\n        r15 = nullptr;\n        rbx = nullptr;\n        r14_1 = nullptr;\n    label_4051a7:\n        if (strcmp(rax, arg1) == 0)\n        {\n        label_405203:\n            return r12;\n        }\n        rbp_1 = nullptr;\n        if (sub_404820(rax, arg1) != 0)\n        {\n            goto label_4051e2;\n        }\n    }\n    if (((((r14_1 == 0 && r12 != 0) || ((r14_1 != 0 && rax_17 != 0) && r12 != 0)) || (r14_1 == 0 && r12 == 0)) || ((r14_1 != 0 && rax_17 != 0) && r12 == 0)))\n    {\n        char rax_5;\n        if (rbx != 0)\n        {\n            rax_5 = sub_404820(rax, rbx);\n        }\n        if ((((rbx == 0 || (rbx != 0 && rax_5 == 0)) && r15 != 0) && sub_404820(rax, r15) == 0))\n        {\n            goto label_40522f;\n        }\n        if (((rbx != 0 && rax_5 != 0) || ((rbx == 0 || (rbx != 0 && rax_5 == 0)) && r15 != 0)))\n        {\n            if (rbp_1 == 0)\n            {\n                goto label_4051e2;\n            }\n            goto label_4051dd;\n        }\n        if (((rbx == 0 || (rbx != 0 && rax_5 == 0)) && r15 == 0))\n        {\n        label_40522f:\n            char* rax_10 = sub_407ee0(((strlen(rax) + strlen(r12)) + 4));\n            __sprintf_chk(rax_10, 1, -1, \"%s (%s)\", rax, r12);\n            if (rbp_1 != 0)\n            {\n                free(rbp_1);\n            }\n            r12 = rax_10;\n            if (r14_1 != 0)\n            {\n                goto label_4051ed;\n            }\n            goto label_405203;\n        }\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4053d0",
            "funcStartAddr": "0x4053d0",
            "funcEndAddr": "0x4054c2",
            "decompiledFuncCode": "char* sub_4053d0(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_409270();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_4054b1:\n                void* const rbx_1 = &data_40f3a3;\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_4054b1;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_4054b1;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_4054b1;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_4054b1;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_4054b1;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_4054b1;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_4054b1;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_40f3ac;\n            if (cond:2_1)\n            {\n                rbx = &data_40f3a9;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_4054b1;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_4054b1;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_4054b1;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_4054b1;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_4054b1;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_40f3b0;\n            if (cond:1_1)\n            {\n                rbx = &data_40f3a5;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_4054d0",
            "funcStartAddr": "0x401a45",
            "funcEndAddr": "0x4066f1",
            "decompiledFuncCode": "int64_t sub_4054d0(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    char const* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n    label_405568:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_4058dc:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_405924;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_4054d0(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char const rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_40593b;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_405a75;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_4056c5;\n                            }\n                            goto label_4059b0;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_405a75;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_4058a0;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_4058a0:\n                            if (var_c0 == 0)\n                            {\n                                goto label_4058ab;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_405707:\n                            if (var_5c == 0)\n                            {\n                                goto label_405718;\n                            }\n                        label_4058d0:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_4058d8;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_405b0b;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_405b0b:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_405b1a:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_4058dc;\n                            }\n                            goto label_4058a0;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_4058a0;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_4058a0;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_405b0b;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_4056a6;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_4056a6:\n                            if (var_5c == 0)\n                            {\n                                goto label_4056c5;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_4056c5;\n                            }\n                            goto label_405b1a;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_40569d:\n                            if (r12_1 != 0)\n                            {\n                                goto label_4058ab;\n                            }\n                            goto label_4056a6;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_405ad0:\n                            rdx = r11_1 == 2;\n                        label_4056c5:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_4057cc;\n                            }\n                            goto label_4056cf;\n                        }\n                        case 0x27:\n                        {\n                            goto label_40584d;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_40581d;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_40587a;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_40660d;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_4057e4;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_405679;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_405c70;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_405c70;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_4065c0:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_405924:\n                            rbx_1 = sub_4054d0(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_40593b:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_405a75;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_4059c7;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_405a75;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_405990:\n                                r13 = 0;\n                                goto label_40574b;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_405718:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_40574b:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_405755;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_405755:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_40575d;\n                            }\n                            case 9:\n                            {\n                                goto label_405940;\n                            }\n                            case 0xa:\n                            {\n                                goto label_4058b8;\n                            }\n                            case 0xb:\n                            {\n                                goto label_4059a0;\n                            }\n                            case 0xc:\n                            {\n                                goto label_405980;\n                            }\n                            case 0xd:\n                            {\n                                goto label_405969;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_405cca;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_405955;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_405caa;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_405c92;\n                            }\n                            case 0x27:\n                            {\n                                goto label_40584d;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_40581d;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_40587a;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_405679;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_405c70:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_405a70:\n                            var_b8 = 0;\n                        label_405a75:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_405ac4:\n                                if (rdx == 0)\n                                {\n                                    goto label_405ad0;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_405fc1:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_4057e4;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_4058dc;\n                                }\n                                r13 = var_98;\n                                goto label_40575d;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_408fc0(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_4058dc;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_405fc1;\n                            }\n                            goto label_405ac4;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_4059b0:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_4058dc;\n                                }\n                                var_b8 = 0;\n                            label_4059c7:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_405a12;\n                                    }\n                                    rax_8 = r10;\n                                label_405a0a:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_405a12:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_4057cc;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_405a53;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_405a0a;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_4057cc;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_405a70;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_405985;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_4058bd;\n                            }\n                            case 9:\n                            {\n                            label_405940:\n                                rbp_3 = 0x74;\n                                goto label_4058bd;\n                            }\n                            case 0xa:\n                            {\n                            label_4058b8:\n                                rbp_3 = 0x6e;\n                            label_4058bd:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_4058d0;\n                                }\n                                goto label_405718;\n                            }\n                            case 0xb:\n                            {\n                            label_4059a0:\n                                rbp_3 = 0x76;\n                                goto label_405985;\n                            }\n                            case 0xc:\n                            {\n                            label_405980:\n                                rbp_3 = 0x66;\n                            label_405985:\n                                if (var_5c == 0)\n                                {\n                                    goto label_405990;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_4058d8:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_4058dc;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_405969:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_4058a0;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_405cca:\n                                rbp_3 = 0x20;\n                                goto label_405c92;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_405955:\n                                rdx = 0;\n                            label_4058ab:\n                                r13 = 0;\n                                goto label_4056c5;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_405caa:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_4056c5;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_4056cf:\n                                rax_8 = 0;\n                                goto label_4056d1;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_405c92:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_4056d1;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_40584d:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_4056c5;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_40660d;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_4057cc;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_40581d:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_40660d:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_4058dc;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_4057cc:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_405707;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_4057e4;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_4056c5;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_405db0:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_4056c5;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_405db0;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_405db0;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_405db0;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_405db0;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_4065c0;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_405a53:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_4057cc;\n                                }\n                            label_4056d1:\n                                if (arg7 == 0)\n                                {\n                                    goto label_4057cc;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_4057cc;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_405707;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_40587a:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_4058a0;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_4057e4:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_40575d;\n                                }\n                            label_40575d:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_405766;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_405766:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_405679:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_4058ab;\n                                }\n                                goto label_40569d;\n                            }\n                        }\n                    }\n                }\n            }\n        label_405d56:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = \"'\";\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_405568;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = \"'\";\n                goto label_405568;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"'\";\n            goto label_405568;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40f3a3;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40f3a3;\n            }\n            goto label_405568;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_40f3a3;\n            goto label_405568;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_405568;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_4053d0(&data_40f3b4, r13);\n                arg9 = sub_4053d0(\"'\", r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_405568;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_405d56;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n        goto label_405568;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_406700",
            "funcStartAddr": "0x401a4a",
            "funcEndAddr": "0x40689e",
            "decompiledFuncCode": "char* sub_406700(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_613298;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_6132b0 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_408130();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x6132a0)\n        {\n            int64_t rax_9 = sub_407f40(0, rsi_1);\n            int128_t zmm0 = data_6132a0;\n            rbx = rax_9;\n            data_613298 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_407f40(rbx, rsi_1);\n            data_613298 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_6132b0;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_6132b0 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_4054d0(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        uint64_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x613340)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_407ee0(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_4054d0(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_4068a0",
            "funcStartAddr": "0x4068a0",
            "funcEndAddr": "0x4068d4",
            "decompiledFuncCode": "int64_t sub_4068a0(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x613440;\n    }\n    int64_t rax_1 = sub_4080e0(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4068e0",
            "funcStartAddr": "0x4068e0",
            "funcEndAddr": "0x4068ef",
            "decompiledFuncCode": "uint64_t sub_4068e0(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_613440;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4068f0",
            "funcStartAddr": "0x4068f0",
            "funcEndAddr": "0x4068ff",
            "decompiledFuncCode": "void sub_4068f0(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_613440;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_406900",
            "funcStartAddr": "0x406900",
            "funcEndAddr": "0x406933",
            "decompiledFuncCode": "uint64_t sub_406900(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x613440;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_406940",
            "funcStartAddr": "0x406940",
            "funcEndAddr": "0x406953",
            "decompiledFuncCode": "uint64_t sub_406940(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_613440;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_406960",
            "funcStartAddr": "0x406960",
            "funcEndAddr": "0x40698b",
            "decompiledFuncCode": "void sub_406960(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_613440;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x613440;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_406990",
            "funcStartAddr": "0x406990",
            "funcEndAddr": "0x406a02",
            "decompiledFuncCode": "int64_t sub_406990(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_613440;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_4054d0(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_406a10",
            "funcStartAddr": "0x406a10",
            "funcEndAddr": "0x406af1",
            "decompiledFuncCode": "char* sub_406a10(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_613440;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_4054d0(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_407ee0((rax_2 + 1));\n    sub_4054d0(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_406b00",
            "funcStartAddr": "0x406b00",
            "funcEndAddr": "0x406b0a",
            "decompiledFuncCode": "int64_t sub_406b00(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_406a10(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_406b10",
            "funcStartAddr": "0x406b10",
            "funcEndAddr": "0x406ba5",
            "decompiledFuncCode": "uint64_t sub_406b10()\n{\n    uint64_t rax_2 = data_6132b0;\n    int64_t r12 = data_613298;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x613340)\n    {\n        rax_2 = free(rdi_2);\n        *data_6132a0 = 0x100;\n        *(data_6132a0 + 8) = 0x613340;\n    }\n    if (r12 != 0x6132a0)\n    {\n        rax_2 = free(r12);\n        data_613298 = 0x6132a0;\n    }\n    data_6132b0 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_406bb0",
            "funcStartAddr": "0x406bb0",
            "funcEndAddr": "0x406bc1",
            "decompiledFuncCode": "int64_t sub_406bb0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_406700(arg1, arg2, -1, &data_613440);\n}\n\n"
        },
        {
            "funcName": "sub_406bd0",
            "funcStartAddr": "0x406bd0",
            "funcEndAddr": "0x406bda",
            "decompiledFuncCode": "int64_t sub_406bd0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_406700(arg1, arg2, arg3, &data_613440);\n}\n\n"
        },
        {
            "funcName": "sub_406be0",
            "funcStartAddr": "0x406be0",
            "funcEndAddr": "0x406bf6",
            "decompiledFuncCode": "int64_t sub_406be0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_406700(0, arg1, -1, &data_613440);\n}\n\n"
        },
        {
            "funcName": "sub_406c00",
            "funcStartAddr": "0x406c00",
            "funcEndAddr": "0x406c12",
            "decompiledFuncCode": "int64_t sub_406c00(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_406700(0, arg1, arg2, &data_613440);\n}\n\n"
        },
        {
            "funcName": "sub_406c20",
            "funcStartAddr": "0x401a4f",
            "funcEndAddr": "0x406c88",
            "decompiledFuncCode": "char* sub_406c20(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_406700(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_406c90",
            "funcStartAddr": "0x401a54",
            "funcEndAddr": "0x406cf4",
            "decompiledFuncCode": "char* sub_406c90(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_406700(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_406d00",
            "funcStartAddr": "0x406d00",
            "funcEndAddr": "0x406d0c",
            "decompiledFuncCode": "int64_t sub_406d00(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_406c20(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_406d10",
            "funcStartAddr": "0x406d10",
            "funcEndAddr": "0x406d1f",
            "decompiledFuncCode": "int64_t sub_406d10(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_406c90(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_406d20",
            "funcStartAddr": "0x406d20",
            "funcEndAddr": "0x406d90",
            "decompiledFuncCode": "char* sub_406d20(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_613470;\n    int128_t var_48 = data_613440;\n    int128_t var_38 = data_613450;\n    int128_t var_28 = data_613460;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_406700(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_406d90",
            "funcStartAddr": "0x406d90",
            "funcEndAddr": "0x406d9d",
            "decompiledFuncCode": "int64_t sub_406d90(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_406d20(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_406da0",
            "funcStartAddr": "0x406da0",
            "funcEndAddr": "0x406db1",
            "decompiledFuncCode": "int64_t sub_406da0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_406d20(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_406dc0",
            "funcStartAddr": "0x406dc0",
            "funcEndAddr": "0x406dca",
            "decompiledFuncCode": "int64_t sub_406dc0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_406d20(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_406dd0",
            "funcStartAddr": "0x401a59",
            "funcEndAddr": "0x406e3e",
            "decompiledFuncCode": "char* sub_406dd0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_406700(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_406e40",
            "funcStartAddr": "0x406e40",
            "funcEndAddr": "0x406eac",
            "decompiledFuncCode": "char* sub_406e40(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_613440;\n    int128_t var_38 = data_613450;\n    int128_t var_28 = data_613460;\n    int64_t var_18 = data_613470;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_406700(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_406f50",
            "funcStartAddr": "0x406f50",
            "funcEndAddr": "0x406f66",
            "decompiledFuncCode": "int64_t sub_406f50(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_406700(0, arg1, -1, &data_613260);\n}\n\n"
        },
        {
            "funcName": "sub_406f70",
            "funcStartAddr": "0x406f70",
            "funcEndAddr": "0x406f80",
            "decompiledFuncCode": "int64_t sub_406f70(int64_t* arg1)\n{\n    *arg1 = 0;\n    arg1[1] = 0;\n}\n\n"
        },
        {
            "funcName": "sub_406f80",
            "funcStartAddr": "0x406f80",
            "funcEndAddr": "0x4070f9",
            "decompiledFuncCode": "int64_t sub_406f80(FILE* arg1, char* arg2, void* arg3, uint64_t* arg4)\n{\n    int128_t zmm0 = 0;\n    int128_t var_58 = zmm0;\n    int128_t var_48 = zmm0;\n    char* rax_4;\n    if (arg3 == 0)\n    {\n        uint64_t rbx_2;\n        do\n        {\n            rax_4 = arg1->_IO_read_ptr;\n            if (rax_4 < arg1->_IO_read_end)\n            {\n            label_406fe4:\n                arg1->_IO_read_ptr = &rax_4[1];\n                rbx_2 = *rax_4;\n            }\n            else\n            {\n            label_407009:\n                int32_t rax_8 = __uflow(arg1);\n                rbx_2 = rax_8;\n                if (rax_8 < 0)\n                {\n                    break;\n                }\n            }\n        } while ((TEST_BITQ(*(&var_58 + ((rbx_2 >> 6) << 3)), rbx_2)));\n        void* r15 = arg4[1];\n        uint64_t r14 = *arg4;\n        int64_t r12 = 0;\n        while (true)\n        {\n            if ((rbx_2 < 0 && r12 == 0))\n            {\n                r12 = -1;\n            label_4070c4:\n                return r12;\n            }\n            char* rdx_2;\n            if (r12 != r14)\n            {\n                rdx_2 = (r15 + r12);\n                if (rbx_2 < 0)\n                {\n                label_4070a8:\n                    *rdx_2 = 0;\n                    arg4[1] = r15;\n                    *arg4 = r14;\n                    goto label_4070c4;\n                }\n            }\n            else\n            {\n                if (r15 == 0)\n                {\n                    bool cond:0_1 = r12 >= 0;\n                    if (r12 == 0)\n                    {\n                        r14 = 0x80;\n                    }\n                    if ((r12 != 0 && (!cond:0_1)))\n                    {\n                        break;\n                    }\n                }\n                else\n                {\n                    if (r12 > 0x5555555555555553)\n                    {\n                        break;\n                    }\n                    r14 = ((r12 + (r12 >> 1)) + 1);\n                }\n                r15 = sub_407f40(r15, r14);\n                rdx_2 = (r15 + r12);\n                if (rbx_2 < 0)\n                {\n                    goto label_4070a8;\n                }\n            }\n            if ((TEST_BITQ(*(&var_58 + ((rbx_2 >> 6) << 3)), rbx_2)))\n            {\n                goto label_4070a8;\n            }\n            *rdx_2 = rbx_2;\n            r12 = (r12 + 1);\n            char* rax_12 = arg1->_IO_read_ptr;\n            if (rax_12 >= arg1->_IO_read_end)\n            {\n                rbx_2 = __uflow(arg1);\n            }\n            else\n            {\n                arg1->_IO_read_ptr = &rax_12[1];\n                rbx_2 = *rax_12;\n            }\n        }\n        sub_408130();\n        /* no return */\n    }\n    void* rdx = (arg3 + arg2);\n    do\n    {\n        uint64_t rcx = *arg2;\n        arg2 = &arg2[1];\n        uint64_t rax_3 = ((rcx >> 3) & 0x18);\n        *(&var_58 + rax_3) = (*(&var_58 + rax_3) | (1 << rcx));\n    } while (rdx != arg2);\n    rax_4 = arg1->_IO_read_ptr;\n    if (rax_4 < arg1->_IO_read_end)\n    {\n        goto label_406fe4;\n    }\n    goto label_407009;\n}\n\n"
        },
        {
            "funcName": "sub_407100",
            "funcStartAddr": "0x407100",
            "funcEndAddr": "0x4072d9",
            "decompiledFuncCode": "int64_t sub_407100(FILE* arg1, int64_t arg2, char* arg3, void* arg4, \n    int64_t* arg5, int64_t* arg6)\n{\n    uint64_t rax_3;\n    int64_t rbx_1;\n    int64_t rbp;\n    if (arg2 == 0)\n    {\n        rbx_1 = 0x200;\n        rbp = 0x40;\n    }\n    else\n    {\n        rbp = (arg2 + 1);\n        uint64_t rax_2;\n        rax_2 = (rbp >> 0x3d) != 0;\n        rbx_1 = (rbp << 3);\n        rax_3 = rax_2;\n    }\n    if ((arg2 == 0 || ((arg2 != 0 && rbx_1 >= 0) && rax_3 == 0)))\n    {\n        int64_t rbx_2 = 0;\n        int64_t r12_1 = sub_407ee0(rbx_1);\n        int64_t var_48 = 0;\n        int64_t r13_1 = sub_407ee0(rbx_1);\n        while (true)\n        {\n            int64_t rax_8 = sub_406f80(arg1, arg3, arg4, &var_48);\n            if (rbx_2 >= rbp)\n            {\n                int64_t rdx_2;\n                if (r12_1 != 0)\n                {\n                    if (rbp > 0xaaaaaaaaaaaaaa9)\n                    {\n                        break;\n                    }\n                    rbp = ((rbp + (rbp >> 1)) + 1);\n                    rdx_2 = (rbp << 3);\n                }\n                else if (rbp == 0)\n                {\n                    rdx_2 = 0x80;\n                    rbp = 0x10;\n                }\n                else\n                {\n                    uint64_t rax_17;\n                    rax_17 = (rbp >> 0x3d) != 0;\n                    rdx_2 = (rbp << 3);\n                    uint64_t rax_18 = rax_17;\n                    if (rdx_2 < 0)\n                    {\n                        break;\n                    }\n                    if ((rdx_2 >= 0 && rax_18 != 0))\n                    {\n                        break;\n                    }\n                }\n                r12_1 = sub_407f40(r12_1, rdx_2);\n                r13_1 = sub_407f40(r13_1, rdx_2);\n            }\n            if (((rbx_2 < rbp && rax_8 == -1) || (rbx_2 >= rbp && rax_8 == -1)))\n            {\n                *(r12_1 + (rbx_2 << 3)) = 0;\n                *(r13_1 + (rbx_2 << 3)) = 0;\n                free(nullptr);\n                *arg5 = r12_1;\n                if (arg6 == 0)\n                {\n                    free(r13_1);\n                }\n                else\n                {\n                    *arg6 = r13_1;\n                }\n                return rbx_2;\n            }\n            if (((rbx_2 < rbp && rax_8 != -1) || (rbx_2 >= rbp && rax_8 != -1)))\n            {\n                uint64_t r15_2 = (rax_8 + 1);\n                if ((rax_8 + 1) < 0)\n                {\n                    break;\n                }\n                int64_t rax_6 = sub_407ee0(r15_2);\n                *(r13_1 + (rbx_2 << 3)) = rax_8;\n                *(r12_1 + (rbx_2 << 3)) = memcpy(rax_6, nullptr, r15_2);\n                rbx_2 = (rbx_2 + 1);\n            }\n        }\n    }\n    sub_408130();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4072e0",
            "funcStartAddr": "0x4072e0",
            "funcEndAddr": "0x40733e",
            "decompiledFuncCode": "ssize_t sub_4072e0(int32_t arg1, int64_t arg2, uint64_t arg3)\n{\n    uint64_t rbx = arg3;\n    ssize_t rax_1;\n    while (true)\n    {\n        rax_1 = write(arg1, arg2, rbx);\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        int32_t rax_3 = *__errno_location();\n        if (rax_3 != 4)\n        {\n            if (rax_3 != 0x16)\n            {\n                break;\n            }\n            if (rbx <= 0x7fffe000)\n            {\n                break;\n            }\n            rbx = 0x7fffe000;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_407340",
            "funcStartAddr": "0x407340",
            "funcEndAddr": "0x407371",
            "decompiledFuncCode": "void* sub_407340(char* arg1, void* arg2)\n{\n    char* rax = sub_409040(arg1, 0, arg2);\n    void* rsi_2 = ((rax - arg1) + 1);\n    void* rax_1 = arg2;\n    if (rax != 0)\n    {\n        rax_1 = rsi_2;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_407380",
            "funcStartAddr": "0x407380",
            "funcEndAddr": "0x40739d",
            "decompiledFuncCode": "int64_t sub_407380() __noreturn\n{\n    __assert_fail(\"iter->cur.wc == 0\", \"lib/mbiter.h\", 0xaa, \"mbiter_multi_next\");\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4073a0",
            "funcStartAddr": "0x4073a0",
            "funcEndAddr": "0x40793c",
            "decompiledFuncCode": "char* sub_4073a0(char* arg1, int32_t arg2, char* arg3 @ r13)\n{\n    char* var_18 = arg3;\n    char* rax = strdup(arg1);\n    if (rax == 0)\n    {\n        sub_408130();\n        /* no return */\n    }\n    if (__ctype_get_mb_cur_max() <= 1)\n    {\n        if (arg2 != 0)\n        {\n            uint64_t rbx_3 = *rax;\n            char* r13_1;\n            if (rbx_3 == 0)\n            {\n                r13_1 = rax;\n            }\n            else\n            {\n                r13_1 = rax;\n                uint16_t* rax_19 = *__ctype_b_loc();\n                while ((*(&rax_19[rbx_3] + 1) & 0x20) != 0)\n                {\n                    r13_1 = &r13_1[1];\n                    rbx_3 = *r13_1;\n                    if (rbx_3 == 0)\n                    {\n                        break;\n                    }\n                }\n            }\n            memmove(rax, r13_1, (strlen(r13_1) + 1));\n        }\n        if ((arg2 == 0 || (arg2 != 0 && arg2 != 1)))\n        {\n            char* rdx_9 = rax;\n            uint32_t rax_23;\n            do\n            {\n                int32_t rcx_3 = *rdx_9;\n                rdx_9 = &rdx_9[4];\n                rax_23 = (((rcx_3 - 0x1010101) & (!rcx_3)) & 0x80808080);\n            } while (rax_23 == 0);\n            uint32_t rcx_6 = (rax_23 >> 0x10);\n            int32_t temp0_1 = (rax_23 & 0x8080);\n            bool cond:0_1 = temp0_1 == 0;\n            if (temp0_1 == 0)\n            {\n                rax_23 = rcx_6;\n            }\n            void* rcx_7 = &rdx_9[2];\n            if (cond:0_1)\n            {\n                rdx_9 = rcx_7;\n            }\n            char rsi_3 = rax_23;\n            char* rbx_4 = ((rdx_9 - 3) - 1);\n            if (rax <= rbx_4)\n            {\n                uint16_t* rdx_11 = *__ctype_b_loc();\n                while ((*(&rdx_11[*rbx_4] + 1) & 0x20) != 0)\n                {\n                    *rbx_4 = 0;\n                    rbx_4 = (rbx_4 - 1);\n                    if (rax > rbx_4)\n                    {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    else\n    {\n        mbstate_t var_7c;\n        int32_t var_5c;\n        int64_t rbx_6;\n        if (arg2 != 0)\n        {\n            char* var_70_2 = rax;\n            char* rbx_5 = rax;\n            uint32_t rax_30;\n            do\n            {\n                int32_t rdx_12 = *rbx_5;\n                rbx_5 = &rbx_5[4];\n                rax_30 = (((rdx_12 - 0x1010101) & (!rdx_12)) & 0x80808080);\n            } while (rax_30 == 0);\n            char var_80_2 = 0;\n            char* r14_2 = rax;\n            uint32_t rdx_15 = (rax_30 >> 0x10);\n            int32_t temp1_1 = (rax_30 & 0x8080);\n            bool cond:2_1 = temp1_1 == 0;\n            char var_74_5 = 0;\n            var_7c.__count = 0;\n            var_7c.__value = 0;\n            if (temp1_1 == 0)\n            {\n                rax_30 = rdx_15;\n            }\n            void* rdx_16 = &rbx_5[2];\n            if (cond:2_1)\n            {\n                rbx_5 = rdx_16;\n            }\n            char rsi_4 = rax_30;\n            rbx_6 = (rbx_5 - 3);\n            int64_t var_88_2 = rbx_6;\n            if (rbx_6 > rax)\n            {\n                uint32_t rax_31;\n                int32_t rax_39;\n                uint32_t rcx_8;\n                while (true)\n                {\n                    uint64_t var_68_6;\n                    if (var_80_2 == 0)\n                    {\n                        rcx_8 = *r14_2;\n                        rax_31 = (rcx_8 >> 5);\n                        if (((*(((rax_31 & 7) << 2) + 0x410680) >> rcx_8) & 1) != 0)\n                        {\n                            var_68_6 = 1;\n                            int32_t rax_35 = *r14_2;\n                            char var_60_2 = 1;\n                            r14_2 = var_70_2;\n                            var_5c = rax_35;\n                            char var_74_6 = 1;\n                        }\n                        else\n                        {\n                            rax_39 = mbsinit(&var_7c);\n                            if (rax_39 == 0)\n                            {\n                                break;\n                            }\n                            var_80_2 = 1;\n                        }\n                    }\n                    if ((var_80_2 != 0 || (var_80_2 == 0 && ((*(((rax_31 & 7) << 2) + 0x410680) >> rcx_8) & 1) == 0)))\n                    {\n                        uint64_t rax_37 = sub_408fc0(&var_5c, r14_2, (rbx_6 - r14_2), &var_7c);\n                        var_68_6 = rax_37;\n                        if (rax_37 == -1)\n                        {\n                            int64_t var_68_7 = 1;\n                            r14_2 = var_70_2;\n                            char var_60_4 = 0;\n                            char var_74_9 = 1;\n                            goto label_4078ca;\n                        }\n                        r14_2 = var_70_2;\n                        if (rax_37 == -2)\n                        {\n                            char var_60_5 = 0;\n                            char var_74_10 = 1;\n                            void* var_68_8 = (var_88_2 - r14_2);\n                            goto label_4078ca;\n                        }\n                        if (rax_37 == 0)\n                        {\n                            var_68_6 = 1;\n                            if (*r14_2 != 0)\n                            {\n                            label_407932:\n                                __assert_fail(\"*iter->cur.ptr == '\\0'\", \"lib/mbiter.h\", 0xa9, \"mbiter_multi_next\");\n                                /* no return */\n                            }\n                            if ((*r14_2 == 0 && var_5c != 0))\n                            {\n                                break;\n                            }\n                        }\n                        char var_60_3 = 1;\n                        if (mbsinit(&var_7c) != 0)\n                        {\n                            var_80_2 = 0;\n                        }\n                        char var_74_8 = 1;\n                    }\n                    if (iswspace(var_5c) == 0)\n                    {\n                        goto label_4078ca;\n                    }\n                    rbx_6 = var_88_2;\n                    r14_2 = &r14_2[var_68_6];\n                    char var_74_7 = 0;\n                    var_70_2 = r14_2;\n                    if (r14_2 >= rbx_6)\n                    {\n                        goto label_4078ca;\n                    }\n                }\n                if (((var_80_2 == 0 && ((*(((rax_31 & 7) << 2) + 0x410680) >> rcx_8) & 1) == 0) && rax_39 == 0))\n                {\n                    goto label_407919;\n                }\n                goto label_407937;\n            }\n        label_4078ca:\n            memmove(rax, r14_2, (strlen(r14_2) + 1));\n        }\n        if ((arg2 == 0 || ((arg2 != 0 && rbx_6 <= rax) && arg2 != 1)))\n        {\n            char* var_70_1 = rax;\n            char* rbp_1 = rax;\n            uint32_t rax_4;\n            do\n            {\n                int32_t rdx_1 = *rbp_1;\n                rbp_1 = &rbp_1[4];\n                rax_4 = (((rdx_1 - 0x1010101) & (!rdx_1)) & 0x80808080);\n            } while (rax_4 == 0);\n            char var_80_1 = 0;\n            char* rbx_1 = rax;\n            uint32_t rdx_4 = (rax_4 >> 0x10);\n            int32_t temp2_1 = (rax_4 & 0x8080);\n            bool cond:4_1 = temp2_1 == 0;\n            char var_74_1 = 0;\n            var_7c.__count = 0;\n            var_7c.__value = 0;\n            if (temp2_1 == 0)\n            {\n                rax_4 = rdx_4;\n            }\n            void* rdx_5 = &rbp_1[2];\n            if (cond:4_1)\n            {\n                rbp_1 = rdx_5;\n            }\n            char rsi = rax_4;\n            char* rbp_2 = (rbp_1 - 3);\n            int32_t r14_1 = 0;\n            char* var_88_1 = rbp_2;\n            if (rbp_2 > rax)\n            {\n                uint32_t rax_6;\n                int32_t rax_13;\n                uint32_t rcx_1;\n                while (true)\n                {\n                    char var_60_1;\n                    char* r15_1;\n                    if (var_80_1 == 0)\n                    {\n                        rcx_1 = *rbx_1;\n                        rax_6 = (rcx_1 >> 5);\n                        if (((*(((rax_6 & 7) << 2) + 0x410680) >> rcx_1) & 1) != 0)\n                        {\n                            int64_t var_68_1 = 1;\n                            r15_1 = var_70_1;\n                            rbp_2 = var_88_1;\n                            var_60_1 = 1;\n                            var_5c = *rbx_1;\n                            rbx_1 = &r15_1[1];\n                        }\n                        else\n                        {\n                            rax_13 = mbsinit(&var_7c);\n                            if (rax_13 == 0)\n                            {\n                                break;\n                            }\n                            var_80_1 = 1;\n                        }\n                    }\n                    if ((var_80_1 != 0 || (var_80_1 == 0 && ((*(((rax_6 & 7) << 2) + 0x410680) >> rcx_1) & 1) == 0)))\n                    {\n                        uint64_t rax_14 = sub_408fc0(&var_5c, rbx_1, (rbp_2 - rbx_1), &var_7c);\n                        uint64_t rbx_2 = rax_14;\n                        uint64_t var_68_2 = rax_14;\n                        if (rax_14 == -1)\n                        {\n                            r15_1 = var_70_1;\n                            rbp_2 = var_88_1;\n                            var_60_1 = 0;\n                            int64_t var_68_4 = 1;\n                            rbx_1 = &r15_1[1];\n                        }\n                        else\n                        {\n                            r15_1 = var_70_1;\n                            if (rax_14 == -2)\n                            {\n                                rbx_1 = var_88_1;\n                                var_60_1 = 0;\n                                rbp_2 = rbx_1;\n                                void* var_68_5 = (rbx_1 - r15_1);\n                            }\n                            else\n                            {\n                                if (rax_14 == 0)\n                                {\n                                    int64_t var_68_3 = 1;\n                                    if (*r15_1 != 0)\n                                    {\n                                        goto label_407932;\n                                    }\n                                    if (var_5c != 0)\n                                    {\n                                        break;\n                                    }\n                                    rbx_2 = 1;\n                                }\n                                var_60_1 = 1;\n                                rbx_1 = &r15_1[rbx_2];\n                                rbp_2 = var_88_1;\n                                if (mbsinit(&var_7c) != 0)\n                                {\n                                    var_80_1 = 0;\n                                }\n                            }\n                        }\n                    }\n                    char var_74_3 = 1;\n                    if ((((r14_1 != 0 && r14_1 != 1) && r14_1 != 2) || (r14_1 == 2 && var_60_1 == 0)))\n                    {\n                        r14_1 = 1;\n                    }\n                    if ((r14_1 == 2 && var_60_1 != 0))\n                    {\n                        var_70_1 = rbx_1;\n                        char var_74_4 = 0;\n                        if (iswspace(var_5c) == 0)\n                        {\n                            r14_1 = 1;\n                        }\n                        if (rbx_1 < rbp_2)\n                        {\n                            continue;\n                        }\n                    }\n                    if ((r14_1 == 1 && var_60_1 != 0))\n                    {\n                        int32_t rax_17 = iswspace(var_5c);\n                        bool cond:7_1 = rax_17 != 0;\n                        if (rax_17 != 0)\n                        {\n                            arg3 = r15_1;\n                        }\n                        if (cond:7_1)\n                        {\n                            r14_1 = 2;\n                        }\n                    }\n                    if (r14_1 == 0)\n                    {\n                        r14_1 = 1;\n                        if (var_60_1 != 0)\n                        {\n                            r14_1 = iswspace(var_5c) == 0;\n                        }\n                    }\n                    if ((((((r14_1 != 0 && r14_1 != 1) && r14_1 != 2) || (r14_1 == 2 && var_60_1 == 0)) || r14_1 == 0) || r14_1 == 1))\n                    {\n                        var_70_1 = rbx_1;\n                        char var_74_2 = 0;\n                        if (rbx_1 < rbp_2)\n                        {\n                            continue;\n                        }\n                    }\n                    if (r14_1 != 2)\n                    {\n                        return rax;\n                    }\n                    *arg3 = 0;\n                    return rax;\n                }\n                if (((var_80_1 == 0 && ((*(((rax_6 & 7) << 2) + 0x410680) >> rcx_1) & 1) == 0) && rax_13 == 0))\n                {\n                label_407919:\n                    __assert_fail(\"mbsinit (&iter->state)\", \"lib/mbiter.h\", 0x8e, \"mbiter_multi_next\");\n                    /* no return */\n                }\n            label_407937:\n                sub_407380();\n                /* no return */\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_407940",
            "funcStartAddr": "0x401a5e",
            "funcEndAddr": "0x407d1d",
            "decompiledFuncCode": "int64_t sub_407940(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_410135, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_407d20",
            "funcStartAddr": "0x407d20",
            "funcEndAddr": "0x407d40",
            "decompiledFuncCode": "int64_t sub_407d20(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_407940(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_407d40",
            "funcStartAddr": "0x407d40",
            "funcEndAddr": "0x407da0",
            "decompiledFuncCode": "int64_t sub_407d40(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_407940(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_407da0",
            "funcStartAddr": "0x407da0",
            "funcEndAddr": "0x407e5c",
            "decompiledFuncCode": "int64_t sub_407da0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_407940(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_407e60",
            "funcStartAddr": "0x407e60",
            "funcEndAddr": "0x407ed4",
            "decompiledFuncCode": "int64_t sub_407e60()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_407ee0",
            "funcStartAddr": "0x407ee0",
            "funcEndAddr": "0x407efa",
            "decompiledFuncCode": "int64_t sub_407ee0(uint64_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_408130();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_407f40",
            "funcStartAddr": "0x407f40",
            "funcEndAddr": "0x407f76",
            "decompiledFuncCode": "int64_t sub_407f40(int64_t arg1, uint64_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_408130();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40808a",
            "funcStartAddr": "0x40808a",
            "funcEndAddr": "0x408090",
            "decompiledFuncCode": "int64_t sub_40808a() __noreturn\n{\n    sub_408130();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_408090",
            "funcStartAddr": "0x408090",
            "funcEndAddr": "0x4080a7",
            "decompiledFuncCode": "int64_t sub_408090(uint64_t arg1)\n{\n    /* tailcall */\n    return memset(sub_407ee0(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_4080b0",
            "funcStartAddr": "0x4080b0",
            "funcEndAddr": "0x4080de",
            "decompiledFuncCode": "int64_t sub_4080b0(uint64_t arg1, uint64_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_408130();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4080e0",
            "funcStartAddr": "0x4080e0",
            "funcEndAddr": "0x408108",
            "decompiledFuncCode": "int64_t sub_4080e0(int64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_407ee0(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_408110",
            "funcStartAddr": "0x408110",
            "funcEndAddr": "0x408123",
            "decompiledFuncCode": "int64_t sub_408110(char* arg1)\n{\n    /* tailcall */\n    return sub_4080e0(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_408130",
            "funcStartAddr": "0x408130",
            "funcEndAddr": "0x408161",
            "decompiledFuncCode": "int64_t sub_408130() __noreturn\n{\n    error(data_613240, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_408170",
            "funcStartAddr": "0x408170",
            "funcEndAddr": "0x40818f",
            "decompiledFuncCode": "uint64_t sub_408170(char* arg1, char* arg2, iconv_t arg3, int64_t* arg4, \n    void** arg5, char** arg6)\n{\n    int32_t rax = sub_40b2f0(arg1, arg2, arg3, arg4, arg5, arg6);\n    if ((rax < 0 && *__errno_location() == 0xc))\n    {\n        sub_408130();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_408190",
            "funcStartAddr": "0x408190",
            "funcEndAddr": "0x4081b7",
            "decompiledFuncCode": "char* sub_408190(char* arg1, iconv_t arg2)\n{\n    char* rax = sub_40b540(arg1, arg2);\n    if ((rax == 0 && *__errno_location() == 0xc))\n    {\n        sub_408130();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4081c0",
            "funcStartAddr": "0x4081c0",
            "funcEndAddr": "0x4081e7",
            "decompiledFuncCode": "char* sub_4081c0(char* arg1, char* arg2, char* arg3)\n{\n    char* rax = sub_40b710(arg1, arg2, arg3);\n    if ((rax == 0 && *__errno_location() == 0xc))\n    {\n        sub_408130();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4081f0",
            "funcStartAddr": "0x4081f0",
            "funcEndAddr": "0x4082cf",
            "decompiledFuncCode": "uint64_t sub_4081f0(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_4082d0",
            "funcStartAddr": "0x4082d0",
            "funcEndAddr": "0x4088ec",
            "decompiledFuncCode": "uint64_t sub_4082d0(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_408500;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_408426;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_408426;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_408426:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_408500:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_40852e;\n                }\n                *arg5 = r12;\n            label_40852e:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_40854c;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_40854c:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_40854c;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_4084be;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_4084be:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_4088f0",
            "funcStartAddr": "0x4088f0",
            "funcEndAddr": "0x408eb6",
            "decompiledFuncCode": "uint64_t sub_4088f0(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_408b2c;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_4089b8;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_4089b8:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_4081f0(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_4105c9;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_4081f0(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_408b2c;\n                }\n                *arg7 = rdx_2;\n            label_408b2c:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_408c30;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_4105c9;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_408ca0;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_408c30;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_408c30;\n                            }\n                            goto label_408bf1;\n                        }\n                    label_408bf1:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_4082d0(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_4105ca);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_408c30:\n                            rdx = &r14_1[1];\n                        label_408a71:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_408c6e;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_408c6e:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_4105e8;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_408ca0:\n                                        r14_2 = sub_4082d0(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_408d5d;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_408d5d:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_408b2c;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_4089b8;\n        }\n        goto label_408a71;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_408f20",
            "funcStartAddr": "0x408f20",
            "funcEndAddr": "0x408f38",
            "decompiledFuncCode": "uint64_t sub_408f20(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_408fc0",
            "funcStartAddr": "0x408fc0",
            "funcEndAddr": "0x40903a",
            "decompiledFuncCode": "uint64_t sub_408fc0(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_4105cc[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_408fea;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_408fea:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_409210() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_409040",
            "funcStartAddr": "0x409040",
            "funcEndAddr": "0x409144",
            "decompiledFuncCode": "char* sub_409040(char* arg1, int32_t arg2, int64_t arg3)\n{\n    char r8 = arg2;\n    if (arg3 != 0)\n    {\n        if ((arg1 & 7) != 0)\n        {\n            if (arg2 == *arg1)\n            {\n            label_409140:\n                return arg1;\n            }\n            do\n            {\n                arg1 = &arg1[1];\n                int64_t temp0_1 = arg3;\n                arg3 = (arg3 - 1);\n                if (temp0_1 == 1)\n                {\n                    return 0;\n                }\n                if ((arg1 & 7) == 0)\n                {\n                    break;\n                }\n            } while (*arg1 != r8);\n            if ((arg1 & 7) != 0)\n            {\n                goto label_409140;\n            }\n        }\n        int64_t r9_5 = ((arg2 << 8) | arg2);\n        int64_t r9_6 = (r9_5 | (r9_5 << 0x10));\n        int64_t r9_7 = (r9_6 | (r9_6 << 0x20));\n        int64_t rax_8;\n        if (arg3 > 7)\n        {\n            rax_8 = (*arg1 ^ r9_7);\n            if ((((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0)\n            {\n                int64_t rax_12;\n                do\n                {\n                    arg3 = (arg3 - 8);\n                    arg1 = &arg1[8];\n                    if (arg3 <= 7)\n                    {\n                        break;\n                    }\n                    rax_12 = (*arg1 ^ r9_7);\n                } while ((((!rax_12) & (rax_12 - 0x101010101010101)) & 0x8080808080808080) == 0);\n            }\n        }\n        if ((((arg3 <= 7 || (arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) != 0)) || (((arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0) && arg3 <= 7) && arg3 != 0)) || ((arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0) && arg3 > 7)))\n        {\n            if (arg2 == *arg1)\n            {\n                goto label_409140;\n            }\n            char* rcx_3 = &arg1[1];\n            void* rdi = &arg1[arg3];\n            while (true)\n            {\n                char* rax_15 = rcx_3;\n                if (rcx_3 == rdi)\n                {\n                    return 0;\n                }\n                rcx_3 = &rcx_3[1];\n                if (rcx_3[-1] == r8)\n                {\n                    return rax_15;\n                }\n            }\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_409150",
            "funcStartAddr": "0x409150",
            "funcEndAddr": "0x4091a9",
            "decompiledFuncCode": "uint64_t sub_409150(void* arg1, void* arg2)\n{\n    uint64_t rax_2 = 0;\n    if (arg1 != arg2)\n    {\n        int64_t rdx_1 = 0;\n        uint32_t r8_1;\n        uint32_t r9_1;\n        uint32_t rax;\n        uint32_t rcx_2;\n        do\n        {\n            r8_1 = *(arg1 + rdx_1);\n            rax = r8_1;\n            if ((r8_1 - 0x41) <= 0x19)\n            {\n                r8_1 = (r8_1 + 0x20);\n                rax = (rax + 0x20);\n            }\n            r9_1 = *(arg2 + rdx_1);\n            rcx_2 = r9_1;\n            if ((r9_1 - 0x41) <= 0x19)\n            {\n                r9_1 = (r9_1 + 0x20);\n                rcx_2 = (rcx_2 + 0x20);\n            }\n            if (rax == 0)\n            {\n                break;\n            }\n            rdx_1 = (rdx_1 + 1);\n        } while (rax == rcx_2);\n        rax_2 = (r8_1 - r9_1);\n    }\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_4091b0",
            "funcStartAddr": "0x4091b0",
            "funcEndAddr": "0x40920d",
            "decompiledFuncCode": "uint64_t sub_4091b0(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_40b800(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_409210",
            "funcStartAddr": "0x409210",
            "funcEndAddr": "0x40926e",
            "decompiledFuncCode": "int64_t sub_409210()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_4105ec;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            void* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_409270",
            "funcStartAddr": "0x409270",
            "funcEndAddr": "0x4097d2",
            "decompiledFuncCode": "char* sub_409270()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_6134b8;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_4105cc[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        uint64_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            uint64_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_40936c;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_4093b6;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_40936c:\n            r15 = &data_4105cc[0x1b];\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_4093b6:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, \"r\");\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_40946c:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_4095fb;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_4094a8:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_4094a8;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_4094e2:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_4094e2;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_4105cc[0x1b];\n                                    free(rdi_26);\n                                    sub_40b800(rax_12);\n                                    goto label_4093f7;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_4096bb:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_4096bb;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_409709:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_409709;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_40946c;\n                        }\n                        break;\n                    }\n                label_4095fb:\n                    sub_40b800(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_4105cc[0x1b];\n            }\n        label_4093f7:\n            free(rbp_3);\n        }\n        data_6134b8 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_4097e0",
            "funcStartAddr": "0x4097e0",
            "funcEndAddr": "0x409801",
            "decompiledFuncCode": "uint64_t sub_4097e0(wchar_t arg1)\n{\n    int64_t rax = wcwidth(arg1);\n    if (rax < 0)\n    {\n        int32_t rax_1;\n        rax_1 = iswcntrl(arg1) == 0;\n        return rax_1;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_409810",
            "funcStartAddr": "0x409810",
            "funcEndAddr": "0x409866",
            "decompiledFuncCode": "uint64_t sub_409810(int64_t* arg1, int64_t* arg2)\n{\n    int64_t rsi = *arg2;\n    uint64_t rdx = arg2[1];\n    if (rsi == &arg2[3])\n    {\n        rdx = arg2[1];\n        *arg1 = memcpy(&arg1[3], rsi, rdx);\n    }\n    else\n    {\n        *arg1 = rsi;\n    }\n    uint64_t rax_1 = arg2[2];\n    arg1[1] = rdx;\n    arg1[2] = rax_1;\n    if (rax_1 != 0)\n    {\n        rax_1 = *(arg2 + 0x14);\n        *(arg1 + 0x14) = rax_1;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_409870",
            "funcStartAddr": "0x409870",
            "funcEndAddr": "0x409887",
            "decompiledFuncCode": "uint64_t sub_409870(int32_t arg1)\n{\n    int32_t rax;\n    rax = (arg1 >> 5);\n    return ((*(((rax & 7) << 2) + 0x410680) >> arg1) & 1);\n}\n\n"
        },
        {
            "funcName": "sub_409890",
            "funcStartAddr": "0x409890",
            "funcEndAddr": "0x409a13",
            "decompiledFuncCode": "int64_t sub_409890(char* arg1, char* arg2, int64_t arg3, int64_t* arg4)\n{\n    char* rbx = arg1;\n    uint64_t rax_1;\n    rax_1 = (arg3 >> 0x3d) != 0;\n    int64_t rdi_1 = (arg3 << 3);\n    if ((rdi_1 >= 0 && rax_1 == 0))\n    {\n        void* rdi_6;\n        void var_38;\n        if (rdi_1 > 0xfaf)\n        {\n            rdi_6 = sub_40b920(rdi_1);\n        }\n        else\n        {\n            rdi_6 = ((((&var_38 - ((rdi_1 + 0x27) & 0xfffffffffffffff0)) + 0xf) & 0xfffffffffffffff0) + 0x10);\n        }\n        if (((rdi_1 > 0xfaf && rdi_6 != 0) || (rdi_1 <= 0xfaf && rdi_6 != 0)))\n        {\n            *(rdi_6 + 8) = 1;\n            int64_t r8 = 0;\n            int64_t r9 = 2;\n            if (arg3 > 2)\n            {\n                do\n                {\n                    char rax_3 = arg2[(r9 - 1)];\n                    if (rax_3 != arg2[r8])\n                    {\n                        while (r8 != 0)\n                        {\n                            r8 = (r8 - *(rdi_6 + (r8 << 3)));\n                            if (arg2[r8] == rax_3)\n                            {\n                                break;\n                            }\n                        }\n                    }\n                    if ((rax_3 == arg2[r8] || (rax_3 != arg2[r8] && r8 != 0)))\n                    {\n                        r8 = (r8 + 1);\n                        *(rdi_6 + (r9 << 3)) = (r9 - r8);\n                    }\n                    if ((rax_3 != arg2[r8] && r8 == 0))\n                    {\n                        *(rdi_6 + (r9 << 3)) = r9;\n                        r8 = 0;\n                    }\n                    r9 = (r9 + 1);\n                } while (arg3 != r9);\n            }\n            *arg4 = 0;\n            char r8_1 = *rbx;\n            char* r9_1 = rbx;\n            int64_t rax_4 = 0;\n            while (r8_1 != 0)\n            {\n                do\n                {\n                    if (arg2[rax_4] == r8_1)\n                    {\n                        rax_4 = (rax_4 + 1);\n                        void* r10_2 = &r9_1[1];\n                        if (arg3 == rax_4)\n                        {\n                            *arg4 = rbx;\n                            break;\n                        }\n                        r8_1 = r9_1[1];\n                        r9_1 = r10_2;\n                        break;\n                    }\n                    if (rax_4 == 0)\n                    {\n                        r8_1 = r9_1[1];\n                        rbx = &rbx[1];\n                        r9_1 = &r9_1[1];\n                        break;\n                    }\n                    int64_t r10_1 = *(rdi_6 + (rax_4 << 3));\n                    rbx = &rbx[r10_1];\n                    rax_4 = (rax_4 - r10_1);\n                } while (r8_1 != 0);\n                if ((arg2[rax_4] == r8_1 && arg3 == rax_4))\n                {\n                    break;\n                }\n            }\n            sub_40b990(rdi_6);\n            return 1;\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_409a20",
            "funcStartAddr": "0x409a20",
            "funcEndAddr": "0x409a3d",
            "decompiledFuncCode": "int64_t sub_409a20() __noreturn\n{\n    __assert_fail(\"iter->cur.wc == 0\", \"lib/mbuiter.h\", 0xb3, \"mbuiter_multi_next\");\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_409a40",
            "funcStartAddr": "0x401a63",
            "funcEndAddr": "0x40a416",
            "decompiledFuncCode": "int64_t sub_409a40(char* arg1, char* arg2, int64_t* arg3)\n{\n    int64_t* var_118 = arg3;\n    uint64_t rax = sub_40ba20(arg2);\n    int64_t rax_1;\n    bool rdx;\n    rdx = HIGHD((0x38 * rax));\n    rax_1 = LOWD((0x38 * rax));\n    if ((rax_1 >= 0 && ((0x38 * rax) >> 0x40) != 0 == 0))\n    {\n        uint64_t rdi_3 = (((rax << 3) - rax) << 3);\n        void* r12_3;\n        if (rdi_3 > 0xfaf)\n        {\n            r12_3 = sub_40b920(rdi_3);\n        }\n        else\n        {\n            r12_3 = ((((&var_118 - ((rdi_3 + 0x27) & 0xfffffffffffffff0)) + 0xf) & 0xfffffffffffffff0) + 0x10);\n        }\n        if (r12_3 != 0)\n        {\n            char* var_e8 = arg2;\n            void* rbx_1 = r12_3;\n            char var_f8 = 0;\n            char var_ec = 0;\n            mbstate_t var_f4;\n            var_f4.__count = 0;\n            var_f4.__value = 0;\n            void* r13_2 = ((rax * 0x30) + r12_3);\n            while (true)\n            {\n                uint64_t var_e0_1;\n                char var_d8_1;\n                uint32_t var_d4;\n                char rax_9;\n                if (var_f8 == 0)\n                {\n                    char* rdx_2 = var_e8;\n                    uint32_t rcx_1 = *rdx_2;\n                    uint32_t rax_4;\n                    rax_4 = (rcx_1 >> 5);\n                    if (((*(((rax_4 & 7) << 2) + 0x410680) >> rcx_1) & 1) != 0)\n                    {\n                        var_e0_1 = 1;\n                        var_d8_1 = 1;\n                        var_d4 = *rdx_2;\n                        char var_ec_1 = 1;\n                        if (var_d4 == 0)\n                        {\n                        label_409c87:\n                            int64_t r15_1 = 0;\n                            void* r14_2 = (r12_3 + 0x30);\n                            *(r13_2 + 8) = 1;\n                            int64_t var_100_1 = 2;\n                            if (rax > 2)\n                            {\n                                do\n                                {\n                                    char rbx_2 = *(r14_2 + 0x10);\n                                    while (true)\n                                    {\n                                        void* rax_19 = ((r15_1 * 0x30) + r12_3);\n                                        if ((rbx_2 == 0 || (rbx_2 != 0 && *(rax_19 + 0x10) == 0)))\n                                        {\n                                            uint64_t rdx_5 = *(r14_2 + 8);\n                                            if ((rdx_5 == *(rax_19 + 8) && memcmp(*r14_2, *rax_19, rdx_5) == 0))\n                                            {\n                                                goto label_409d0c;\n                                            }\n                                        }\n                                        if (((rbx_2 != 0 && *(rax_19 + 0x10) != 0) && *(r14_2 + 0x14) == *(rax_19 + 0x14)))\n                                        {\n                                        label_409d0c:\n                                            r15_1 = (r15_1 + 1);\n                                            *(r13_2 + (var_100_1 << 3)) = (var_100_1 - r15_1);\n                                            break;\n                                        }\n                                        if (r15_1 == 0)\n                                        {\n                                            *(r13_2 + (var_100_1 << 3)) = var_100_1;\n                                            break;\n                                        }\n                                        r15_1 = (r15_1 - *(r13_2 + (r15_1 << 3)));\n                                    }\n                                    var_100_1 = (var_100_1 + 1);\n                                    r14_2 = (r14_2 + 0x30);\n                                } while (rax != var_100_1);\n                            }\n                            char var_b8_1 = 0;\n                            int64_t r15_2 = 0;\n                            char var_ac_1 = 0;\n                            *var_118 = 0;\n                            mbstate_t var_74;\n                            int64_t* var_110_1 = &var_74;\n                            char var_78_1 = 0;\n                            mbstate_t var_b4;\n                            var_b4.__count = 0;\n                            var_b4.__value = 0;\n                            var_74.__count = 0;\n                            var_74.__value = 0;\n                            char var_6c_1 = 0;\n                            int64_t* var_100_2 = &var_b4;\n                            char* var_a8_1 = arg1;\n                            char* var_68_1 = arg1;\n                            char rax_26 = 0;\n                        label_409db0:\n                            char var_58;\n                            if (rax_26 != 0)\n                            {\n                                if (var_58 != 0)\n                                {\n                                    goto label_409eb2;\n                                }\n                                goto label_409dca;\n                            }\n                            while (true)\n                            {\n                                uint64_t var_60;\n                                int32_t var_54;\n                                void* rax_29;\n                                uint32_t rax_37;\n                                uint32_t rcx_4;\n                                if (var_78_1 == 0)\n                                {\n                                    char* rdx_9 = var_68_1;\n                                    rcx_4 = *rdx_9;\n                                    rax_37 = (rcx_4 >> 5);\n                                    if (((*(((rax_37 & 7) << 2) + 0x410680) >> rcx_4) & 1) == 0)\n                                    {\n                                        if (mbsinit(var_110_1) == 0)\n                                        {\n                                            break;\n                                        }\n                                        var_78_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        var_60 = 1;\n                                        var_58 = 1;\n                                        var_54 = *rdx_9;\n                                        var_6c_1 = 1;\n                                    label_409eb2:\n                                        int32_t rdx_10 = var_54;\n                                        if (rdx_10 == 0)\n                                        {\n                                        label_409f04:\n                                            sub_40b990(r12_3);\n                                            return 1;\n                                        }\n                                        rax_29 = ((r15_2 * 0x30) + r12_3);\n                                        if (*(rax_29 + 0x10) == 0)\n                                        {\n                                            goto label_409dcd;\n                                        }\n                                        if (*(rax_29 + 0x14) == rdx_10)\n                                        {\n                                        label_409edb:\n                                            r15_2 = (r15_2 + 1);\n                                            var_68_1 = &var_68_1[var_60];\n                                            char var_6c_3 = 0;\n                                            if (rax != r15_2)\n                                            {\n                                                continue;\n                                            }\n                                            else\n                                            {\n                                                *var_118 = var_a8_1;\n                                            }\n                                            goto label_409f04;\n                                        }\n                                    }\n                                }\n                                uint64_t rdx_6;\n                                if ((var_78_1 != 0 || (var_78_1 == 0 && ((*(((rax_37 & 7) << 2) + 0x410680) >> rcx_4) & 1) == 0)))\n                                {\n                                    uint64_t rax_55 = sub_408fc0(&var_54, var_68_1, sub_407340(var_68_1, __ctype_get_mb_cur_max()), &var_74);\n                                    var_60 = rax_55;\n                                    if (rax_55 == -1)\n                                    {\n                                        var_60 = 1;\n                                        var_58 = 0;\n                                        var_6c_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        if (rax_55 != -2)\n                                        {\n                                            if (rax_55 == 0)\n                                            {\n                                                var_60 = 1;\n                                                if (*var_68_1 != 0)\n                                                {\n                                                    goto label_40a3da;\n                                                }\n                                                if (var_54 != 0)\n                                                {\n                                                    goto label_40a3f8;\n                                                }\n                                            }\n                                            var_58 = 1;\n                                            if (mbsinit(&var_74) != 0)\n                                            {\n                                                var_78_1 = 0;\n                                            }\n                                            var_6c_1 = 1;\n                                            goto label_409eb2;\n                                        }\n                                        var_58 = 0;\n                                        var_60 = strlen(var_68_1);\n                                        var_6c_1 = 1;\n                                    }\n                                label_409dca:\n                                    rax_29 = ((r15_2 * 0x30) + r12_3);\n                                label_409dcd:\n                                    rdx_6 = *(rax_29 + 8);\n                                }\n                                if (((((var_78_1 != 0 || (var_78_1 == 0 && ((*(((rax_37 & 7) << 2) + 0x410680) >> rcx_4) & 1) == 0)) && rdx_6 != var_60) || (var_78_1 == 0 && ((*(((rax_37 & 7) << 2) + 0x410680) >> rcx_4) & 1) != 0)) && r15_2 != 0))\n                                {\n                                    goto label_40a0a5;\n                                }\n                                uint64_t var_a0;\n                                char var_98;\n                                int32_t var_94;\n                                if (((var_78_1 != 0 || (var_78_1 == 0 && ((*(((rax_37 & 7) << 2) + 0x410680) >> rcx_4) & 1) == 0)) && rdx_6 == var_60))\n                                {\n                                    if (memcmp(*rax_29, var_68_1, rdx_6) == 0)\n                                    {\n                                        goto label_409edb;\n                                    }\n                                    if (r15_2 != 0)\n                                    {\n                                    label_40a0a5:\n                                        int64_t rbx_6 = *(r13_2 + (r15_2 << 3));\n                                        rax_26 = var_6c_1;\n                                        int64_t r14_4 = (r15_2 - rbx_6);\n                                        if (rbx_6 == 0)\n                                        {\n                                            goto label_409db0;\n                                        }\n                                    label_40a0ee:\n                                        uint32_t rax_61;\n                                        uint32_t rcx_7;\n                                        if (var_b8_1 == 0)\n                                        {\n                                            rcx_7 = *var_a8_1;\n                                            rax_61 = (rcx_7 >> 5);\n                                            if (((*(((rax_61 & 7) << 2) + 0x410680) >> rcx_7) & 1) != 0)\n                                            {\n                                                var_a0 = 1;\n                                                var_98 = 1;\n                                                var_94 = *var_a8_1;\n                                                char var_ac_5 = 1;\n                                            }\n                                            else\n                                            {\n                                                if (mbsinit(var_100_2) == 0)\n                                                {\n                                                    goto label_40a3f3;\n                                                }\n                                                var_b8_1 = 1;\n                                            }\n                                        }\n                                        if ((var_b8_1 != 0 || (var_b8_1 == 0 && ((*(((rax_61 & 7) << 2) + 0x410680) >> rcx_7) & 1) == 0)))\n                                        {\n                                            uint64_t rax_69 = sub_408fc0(&var_94, var_a8_1, sub_407340(var_a8_1, __ctype_get_mb_cur_max()), &var_b4);\n                                            var_a0 = rax_69;\n                                            if (rax_69 == -1)\n                                            {\n                                                var_a0 = 1;\n                                                var_98 = 0;\n                                            label_40a0d6:\n                                                char var_ac_4 = 0;\n                                                var_a8_1 = &var_a8_1[var_a0];\n                                                int64_t temp1_1 = rbx_6;\n                                                rbx_6 = (rbx_6 - 1);\n                                                if (temp1_1 != 1)\n                                                {\n                                                    goto label_40a0ee;\n                                                }\n                                                rax_26 = var_6c_1;\n                                                r15_2 = r14_4;\n                                                goto label_409db0;\n                                            }\n                                            if (rax_69 == -2)\n                                            {\n                                                var_98 = 0;\n                                                var_a0 = strlen(var_a8_1);\n                                                goto label_40a0d6;\n                                            }\n                                            if (rax_69 == 0)\n                                            {\n                                                var_a0 = 1;\n                                                if (*var_a8_1 != 0)\n                                                {\n                                                    goto label_40a3da;\n                                                }\n                                                if (var_94 != 0)\n                                                {\n                                                    __assert_fail(\"iter->cur.wc == 0\", \"lib/mbuiter.h\", 0xb3, \"mbuiter_multi_next\");\n                                                    /* no return */\n                                                }\n                                            }\n                                            var_98 = 1;\n                                            if (mbsinit(&var_b4) != 0)\n                                            {\n                                                var_b8_1 = 0;\n                                            }\n                                            char var_ac_6 = 1;\n                                        }\n                                        if (var_94 == 0)\n                                        {\n                                            goto label_401a63;\n                                        }\n                                        goto label_40a0d6;\n                                    }\n                                }\n                                if ((((((var_78_1 != 0 || (var_78_1 == 0 && ((*(((rax_37 & 7) << 2) + 0x410680) >> rcx_4) & 1) == 0)) && rdx_6 != var_60) || (var_78_1 == 0 && ((*(((rax_37 & 7) << 2) + 0x410680) >> rcx_4) & 1) != 0)) && r15_2 == 0) || ((var_78_1 != 0 || (var_78_1 == 0 && ((*(((rax_37 & 7) << 2) + 0x410680) >> rcx_4) & 1) == 0)) && rdx_6 == var_60)))\n                                {\n                                    if (var_b8_1 == 0)\n                                    {\n                                        char* rdx_7 = var_a8_1;\n                                        uint32_t rcx_3 = *rdx_7;\n                                        uint32_t rax_30;\n                                        rax_30 = (rcx_3 >> 5);\n                                        if (((*(((rax_30 & 7) << 2) + 0x410680) >> rcx_3) & 1) == 0)\n                                        {\n                                            if (mbsinit(var_100_2) == 0)\n                                            {\n                                                break;\n                                            }\n                                            var_b8_1 = 1;\n                                            goto label_40a2a5;\n                                        }\n                                        var_a0 = 1;\n                                        var_98 = 1;\n                                        var_94 = *rdx_7;\n                                        char var_ac_2 = 1;\n                                    }\n                                    else\n                                    {\n                                    label_40a2a5:\n                                        uint64_t rax_76 = sub_408fc0(&var_94, var_a8_1, sub_407340(var_a8_1, __ctype_get_mb_cur_max()), &var_b4);\n                                        var_a0 = rax_76;\n                                        if (rax_76 == -1)\n                                        {\n                                            var_a0 = 1;\n                                            var_98 = 0;\n                                        label_409e58:\n                                            var_a8_1 = &var_a8_1[var_a0];\n                                            var_68_1 = &var_68_1[var_60];\n                                            char var_ac_3 = 0;\n                                            char var_6c_2 = 0;\n                                            continue;\n                                        }\n                                        else\n                                        {\n                                            if (rax_76 == -2)\n                                            {\n                                                var_98 = 0;\n                                                var_a0 = strlen(var_a8_1);\n                                                goto label_409e58;\n                                            }\n                                            if (rax_76 == 0)\n                                            {\n                                                var_a0 = 1;\n                                                if (*var_a8_1 != 0)\n                                                {\n                                                    goto label_40a3da;\n                                                }\n                                                if (var_94 != 0)\n                                                {\n                                                    goto label_40a3f8;\n                                                }\n                                            }\n                                            var_98 = 1;\n                                            if (mbsinit(&var_b4) != 0)\n                                            {\n                                                var_b8_1 = 0;\n                                            }\n                                            char var_ac_7 = 1;\n                                        }\n                                    }\n                                    if (var_94 == 0)\n                                    {\n                                    label_401a63:\n                                        abort();\n                                        /* no return */\n                                    }\n                                    goto label_409e58;\n                                }\n                            }\n                            break;\n                        }\n                    label_409b75:\n                        rax_9 = 1;\n                        goto label_409b88;\n                    }\n                    if (mbsinit(&var_f4) == 0)\n                    {\n                        break;\n                    }\n                    var_f8 = 1;\n                }\n                uint64_t rax_13 = sub_408fc0(&var_d4, var_e8, sub_407340(var_e8, __ctype_get_mb_cur_max()), &var_f4);\n                var_e0_1 = rax_13;\n                if (rax_13 != -1)\n                {\n                    if (rax_13 == -2)\n                    {\n                        var_d8_1 = 0;\n                        var_e0_1 = strlen(var_e8);\n                        rax_9 = 0;\n                        char var_ec_5 = 1;\n                        goto label_409b88;\n                    }\n                    if (rax_13 == 0)\n                    {\n                        var_e0_1 = 1;\n                        if (*var_e8 != 0)\n                        {\n                        label_40a3da:\n                            __assert_fail(\"*iter->cur.ptr == '\\0'\", \"lib/mbuiter.h\", 0xb2, \"mbuiter_multi_next\");\n                            /* no return */\n                        }\n                        if (var_d4 != 0)\n                        {\n                        label_40a3f8:\n                            sub_409a20();\n                            /* no return */\n                        }\n                    }\n                    var_d8_1 = 1;\n                    if (mbsinit(&var_f4) != 0)\n                    {\n                        var_f8 = 0;\n                    }\n                    char var_ec_3 = 1;\n                    if (var_d4 == 0)\n                    {\n                        goto label_409c87;\n                    }\n                    goto label_409b75;\n                }\n                var_e0_1 = 1;\n                rax_9 = 0;\n                var_d8_1 = 0;\n                char var_ec_4 = 1;\n            label_409b88:\n                uint64_t rdx_3 = var_e0_1;\n                void var_d0;\n                if (var_e8 == &var_d0)\n                {\n                    rdx_3 = var_e0_1;\n                    *rbx_1 = memcpy((rbx_1 + 0x18), var_e8, rdx_3);\n                    rax_9 = var_d8_1;\n                }\n                else\n                {\n                    *rbx_1 = var_e8;\n                }\n                *(rbx_1 + 8) = rdx_3;\n                *(rbx_1 + 0x10) = rax_9;\n                if (rax_9 != 0)\n                {\n                    *(rbx_1 + 0x14) = var_d4;\n                }\n                var_e8 = &var_e8[rdx_3];\n                rbx_1 = (rbx_1 + 0x30);\n                char var_ec_2 = 0;\n            }\n        label_40a3f3:\n            __assert_fail(\"mbsinit (&iter->state)\", \"lib/mbuiter.h\", 0x96, \"mbuiter_multi_next\");\n            /* no return */\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40a420",
            "funcStartAddr": "0x401a68",
            "funcEndAddr": "0x40b2ee",
            "decompiledFuncCode": "char* sub_40a420(char* arg1, char* arg2)\n{\n    char* rbp = arg1;\n    char* var_78;\n    char* rax_1;\n    if (__ctype_get_mb_cur_max() > 1)\n    {\n        int32_t rcx_3 = *arg2;\n        char var_178_1 = 0;\n        char var_16c_1 = 0;\n        mbstate_t var_174;\n        var_174.__count = 0;\n        var_174.__value = 0;\n        int32_t rax_6;\n        rax_6 = (rcx_3 >> 5);\n        int32_t var_154;\n        uint64_t var_160_1;\n        char var_158_1;\n        if (((*(((rax_6 & 7) << 2) + 0x410680) >> rcx_3) & 1) != 0)\n        {\n            var_160_1 = 1;\n            var_154 = rcx_3;\n            var_158_1 = 1;\n            char var_16c_2 = 1;\n        }\n        else\n        {\n            if (mbsinit(&var_174) == 0)\n            {\n            label_40b2d0:\n                __assert_fail(\"mbsinit (&iter->state)\", \"lib/mbuiter.h\", 0x96, \"mbuiter_multi_next\");\n                /* no return */\n            }\n            char var_178_2 = 1;\n            char* r12_3 = arg2;\n            uint64_t rax_94 = sub_408fc0(&var_154, r12_3, sub_407340(r12_3, __ctype_get_mb_cur_max()), &var_174);\n            var_160_1 = rax_94;\n            if (rax_94 == -1)\n            {\n                var_160_1 = 1;\n                var_158_1 = 0;\n                char var_16c_3 = 1;\n            label_40a5f7:\n                char* var_128_1 = arg2;\n                int64_t r12_2 = 0;\n                int64_t rbx_2 = 0;\n                char r14_2 = 1;\n                char var_138_1 = 0;\n                mbstate_t var_134;\n                var_134.__count = 0;\n                var_134.__value = 0;\n                char var_12c_1 = 0;\n                char* var_e8_1 = rbp;\n                char var_f8_1 = 0;\n                mbstate_t var_f4;\n                var_f4.__count = 0;\n                var_f4.__value = 0;\n                char var_ec_1 = 0;\n                int64_t var_180_1 = 0;\n                uint32_t rax_11;\n                int32_t rax_51;\n                uint32_t rcx_6;\n                while (true)\n                {\n                    uint64_t var_e0_1;\n                    char var_d8_1;\n                    int32_t var_d4;\n                    if (var_f8_1 == 0)\n                    {\n                        rcx_6 = *var_e8_1;\n                        rax_11 = (rcx_6 >> 5);\n                        if (((*(((rax_11 & 7) << 2) + 0x410680) >> rcx_6) & 1) != 0)\n                        {\n                            var_e0_1 = 1;\n                            var_d8_1 = 1;\n                            var_d4 = *var_e8_1;\n                            char var_ec_2 = 1;\n                        }\n                        else\n                        {\n                            rax_51 = mbsinit(&var_f4);\n                            if (rax_51 == 0)\n                            {\n                                break;\n                            }\n                            var_f8_1 = 1;\n                        }\n                    }\n                    uint64_t rax_49;\n                    uint64_t r15_4;\n                    if ((var_f8_1 != 0 || (var_f8_1 == 0 && ((*(((rax_11 & 7) << 2) + 0x410680) >> rcx_6) & 1) == 0)))\n                    {\n                        char* r8_2 = var_e8_1;\n                        rax_49 = sub_408fc0(&var_d4, r8_2, sub_407340(r8_2, __ctype_get_mb_cur_max()), &var_f4);\n                        var_e0_1 = rax_49;\n                        if (rax_49 == -1)\n                        {\n                            var_e0_1 = 1;\n                            var_d8_1 = 0;\n                            char var_ec_4 = 1;\n                        }\n                        if (rax_49 == -2)\n                        {\n                            var_d8_1 = 0;\n                            var_e0_1 = strlen(var_e8_1);\n                            char var_ec_6 = 1;\n                        }\n                        if ((rax_49 == -1 || rax_49 == -2))\n                        {\n                            rax_49 = r12_2 > 9;\n                            rax_49 = (rax_49 & r14_2);\n                            if (rax_49 == 0)\n                            {\n                                rbx_2 = (rbx_2 + 1);\n                            label_40abe8:\n                                r15_4 = var_e0_1;\n                                if (r15_4 != var_160_1)\n                                {\n                                    goto label_40aa3a;\n                                }\n                                if (memcmp(var_e8_1, arg2, r15_4) != 0)\n                                {\n                                    goto label_40aa3a;\n                                }\n                            label_40a701:\n                                int32_t rcx_7 = *arg2;\n                                int128_t zmm1 = var_e8_1;\n                                char* var_68_1 = arg2;\n                                var_78 = 0;\n                                int128_t var_a8_1;\n                                var_a8_1 = (zmm1 + *zmm1[8]);\n                                int32_t rax_18;\n                                rax_18 = (rcx_7 >> 5);\n                                int128_t var_b8 = var_f8_1;\n                                int128_t var_98 = var_d8_1;\n                                int128_t var_c8;\n                                int128_t var_88_1 = var_c8;\n                                *var_b8[0xc] = 0;\n                                char var_6c_1 = 0;\n                                var_78 = 0;\n                                int32_t var_54;\n                                int32_t rax_79;\n                                uint64_t rax_82;\n                                uint64_t var_60_1;\n                                if (((*(((rax_18 & 7) << 2) + 0x410680) >> rcx_7) & 1) == 0)\n                                {\n                                    rax_79 = mbsinit(&*var_78[4]);\n                                    if (rax_79 == 0)\n                                    {\n                                        break;\n                                    }\n                                    var_78 = 1;\n                                    rax_82 = sub_408fc0(&var_54, var_68_1, sub_407340(var_68_1, __ctype_get_mb_cur_max()), &*var_78[4]);\n                                    var_60_1 = rax_82;\n                                    if (rax_82 == -1)\n                                    {\n                                        var_60_1 = 1;\n                                        char var_58_4 = 0;\n                                    label_40a7e1:\n                                        char var_6c_3 = 0;\n                                        rbx_2 = (rbx_2 + 1);\n                                        char* var_68_2 = &var_68_1[var_60_1];\n                                        uint32_t rax_23;\n                                        int32_t rax_48;\n                                        uint32_t rcx_8;\n                                        while (true)\n                                        {\n                                            uint64_t var_60_2;\n                                            char var_58_2;\n                                            if (var_78 == 0)\n                                            {\n                                                rcx_8 = *var_68_2;\n                                                rax_23 = (rcx_8 >> 5);\n                                                if (((*(((rax_23 & 7) << 2) + 0x410680) >> rcx_8) & 1) == 0)\n                                                {\n                                                    rax_48 = mbsinit(&*var_78[4]);\n                                                    if (rax_48 == 0)\n                                                    {\n                                                        break;\n                                                    }\n                                                    var_78 = 1;\n                                                }\n                                                else\n                                                {\n                                                    var_60_2 = 1;\n                                                    var_58_2 = 1;\n                                                    var_54 = *var_68_2;\n                                                    char var_6c_4 = 1;\n                                                    if (var_54 == 0)\n                                                    {\n                                                    label_40a9ef:\n                                                        return var_e8_1;\n                                                    }\n                                                }\n                                            }\n                                            if ((var_78 != 0 || (var_78 == 0 && ((*(((rax_23 & 7) << 2) + 0x410680) >> rcx_8) & 1) == 0)))\n                                            {\n                                                uint64_t rax_38 = sub_408fc0(&var_54, var_68_2, sub_407340(var_68_2, __ctype_get_mb_cur_max()), &*var_78[4]);\n                                                var_60_2 = rax_38;\n                                                if (rax_38 == -1)\n                                                {\n                                                    var_60_2 = 1;\n                                                    var_58_2 = 0;\n                                                    char var_6c_7 = 1;\n                                                }\n                                                else if (rax_38 == -2)\n                                                {\n                                                    var_58_2 = 0;\n                                                    var_60_2 = strlen(var_68_2);\n                                                    char var_6c_8 = 1;\n                                                }\n                                                else\n                                                {\n                                                    if (rax_38 == 0)\n                                                    {\n                                                        var_60_2 = 1;\n                                                        if (*var_68_2 != 0)\n                                                        {\n                                                            goto label_40b2e9;\n                                                        }\n                                                        if (var_54 != 0)\n                                                        {\n                                                            goto label_40b1da;\n                                                        }\n                                                    }\n                                                    var_58_2 = 1;\n                                                    if (mbsinit(&*var_78[4]) != 0)\n                                                    {\n                                                        var_78 = 0;\n                                                    }\n                                                    char var_6c_6 = 1;\n                                                    if (var_54 == 0)\n                                                    {\n                                                        goto label_40a9ef;\n                                                    }\n                                                }\n                                            }\n                                            if (*var_b8[0xc] != 0)\n                                            {\n                                                if (var_98 == 0)\n                                                {\n                                                    goto label_40aa1c;\n                                                }\n                                                goto label_40a8bf;\n                                            }\n                                            int32_t rax_33;\n                                            if (var_b8 == 0)\n                                            {\n                                                char* rdx_8 = var_a8_1;\n                                                uint32_t rcx_9 = *rdx_8;\n                                                uint32_t rax_28;\n                                                rax_28 = (rcx_9 >> 5);\n                                                if (((*(((rax_28 & 7) << 2) + 0x410680) >> rcx_9) & 1) == 0)\n                                                {\n                                                    if (mbsinit(&*var_b8[4]) == 0)\n                                                    {\n                                                        break;\n                                                    }\n                                                    var_b8 = 1;\n                                                    goto label_40aa7a;\n                                                }\n                                                *var_a8_1[8] = 1;\n                                                var_98 = 1;\n                                                *var_98[4] = *rdx_8;\n                                                *var_b8[0xc] = 1;\n                                            label_40a8bf:\n                                                rax_33 = *var_98[4];\n                                                if (rax_33 == 0)\n                                                {\n                                                    goto label_40ab38;\n                                                }\n                                            }\n                                            else\n                                            {\n                                            label_40aa7a:\n                                                char* r15_5 = var_a8_1;\n                                                uint64_t rax_44 = sub_408fc0(&*var_98[4], r15_5, sub_407340(r15_5, __ctype_get_mb_cur_max()), &*var_b8[4]);\n                                                *var_a8_1[8] = rax_44;\n                                                if (rax_44 == -1)\n                                                {\n                                                    *var_a8_1[8] = 1;\n                                                    var_98 = 0;\n                                                    *var_b8[0xc] = 1;\n                                                label_40aa1c:\n                                                    uint64_t rdx_12 = *var_a8_1[8];\n                                                    if (rdx_12 != var_60_2)\n                                                    {\n                                                        break;\n                                                    }\n                                                    rax_33 = memcmp(var_a8_1, var_68_2, rdx_12) != 0;\n                                                    goto label_40a8e6;\n                                                }\n                                                if (rax_44 == -2)\n                                                {\n                                                    var_98 = 0;\n                                                    *var_a8_1[8] = strlen(var_a8_1);\n                                                    *var_b8[0xc] = 1;\n                                                    goto label_40aa1c;\n                                                }\n                                                if (rax_44 == 0)\n                                                {\n                                                    char* rax_45 = var_a8_1;\n                                                    *var_a8_1[8] = 1;\n                                                    if (*rax_45 != 0)\n                                                    {\n                                                        goto label_40b2e9;\n                                                    }\n                                                    if (*var_98[4] != 0)\n                                                    {\n                                                        goto label_40b1da;\n                                                    }\n                                                }\n                                                var_98 = 1;\n                                                if (mbsinit(&*var_b8[4]) != 0)\n                                                {\n                                                    var_b8 = 0;\n                                                }\n                                                rax_33 = *var_98[4];\n                                                *var_b8[0xc] = 1;\n                                                if (rax_33 == 0)\n                                                {\n                                                    goto label_40ab38;\n                                                }\n                                            }\n                                            if (var_58_2 == 0)\n                                            {\n                                                goto label_40aa1c;\n                                            }\n                                            rax_33 = var_54 != rax_33;\n                                        label_40a8e6:\n                                            int64_t rdx_9 = (rbx_2 + 1);\n                                            if (rax_33 != 0)\n                                            {\n                                                break;\n                                            }\n                                            var_a8_1 = (var_a8_1 + *var_a8_1[8]);\n                                            rbx_2 = rdx_9;\n                                            var_68_2 = &var_68_2[var_60_2];\n                                            *var_b8[0xc] = 0;\n                                            char var_6c_5 = 0;\n                                        }\n                                        if (((var_78 == 0 && ((*(((rax_23 & 7) << 2) + 0x410680) >> rcx_8) & 1) == 0) && rax_48 == 0))\n                                        {\n                                            break;\n                                        }\n                                    }\n                                    else\n                                    {\n                                        if (rax_82 == -2)\n                                        {\n                                            char var_58_5 = 0;\n                                            var_60_1 = strlen(var_68_1);\n                                            goto label_40a7e1;\n                                        }\n                                        if (rax_82 == 0)\n                                        {\n                                            var_60_1 = 1;\n                                            if (*var_68_1 != 0)\n                                            {\n                                                goto label_40b2e9;\n                                            }\n                                            if (var_54 != 0)\n                                            {\n                                                goto label_40b1da;\n                                            }\n                                        }\n                                        char var_58_3 = 1;\n                                        if (mbsinit(&*var_78[4]) != 0)\n                                        {\n                                            var_78 = 0;\n                                        }\n                                        char var_6c_9 = 1;\n                                    }\n                                }\n                                else\n                                {\n                                    var_60_1 = 1;\n                                    var_54 = rcx_7;\n                                    char var_58_1 = 1;\n                                    char var_6c_2 = 1;\n                                }\n                                if ((((*(((rax_18 & 7) << 2) + 0x410680) >> rcx_7) & 1) != 0 || ((((*(((rax_18 & 7) << 2) + 0x410680) >> rcx_7) & 1) == 0 && rax_79 != 0) && rax_82 != -1)))\n                                {\n                                    if (var_54 == 0)\n                                    {\n                                        abort();\n                                        /* no return */\n                                    }\n                                    goto label_40a7e1;\n                                }\n                                goto label_40aa32;\n                            }\n                            if (rbx_2 < (r12_2 * 5))\n                            {\n                                rbx_2 = (rbx_2 + 1);\n                                r14_2 = rax_49;\n                                goto label_40abe8;\n                            }\n                        label_40ada0:\n                            int64_t r14_4 = (rbx_2 - var_180_1);\n                            char var_118;\n                            if (((rbx_2 == var_180_1 && var_12c_1 != 0) && var_118 == 0))\n                            {\n                                goto label_40afbc;\n                            }\n                            uint64_t var_120;\n                            uint32_t var_114;\n                            if (rbx_2 != var_180_1)\n                            {\n                                if (var_12c_1 != 0)\n                                {\n                                    if (var_118 == 0)\n                                    {\n                                        goto label_40adbb;\n                                    }\n                                    goto label_40ae16;\n                                }\n                                uint32_t rax_60;\n                                int32_t rax_66;\n                                uint32_t rcx_14;\n                                int64_t temp2_1;\n                                do\n                                {\n                                    if (var_138_1 == 0)\n                                    {\n                                        rcx_14 = *var_128_1;\n                                        rax_60 = (rcx_14 >> 5);\n                                        if (((*(((rax_60 & 7) << 2) + 0x410680) >> rcx_14) & 1) == 0)\n                                        {\n                                            rax_66 = mbsinit(&var_134);\n                                            if (rax_66 == 0)\n                                            {\n                                                break;\n                                            }\n                                            var_138_1 = 1;\n                                        }\n                                        else\n                                        {\n                                            var_120 = 1;\n                                            var_118 = 1;\n                                            var_114 = *var_128_1;\n                                            var_12c_1 = 1;\n                                        label_40ae16:\n                                            if (var_114 == 0)\n                                            {\n                                                if (var_12c_1 == 0)\n                                                {\n                                                    break;\n                                                }\n                                                goto label_40ae34;\n                                            }\n                                        }\n                                    }\n                                    if ((var_138_1 != 0 || (var_138_1 == 0 && ((*(((rax_60 & 7) << 2) + 0x410680) >> rcx_14) & 1) == 0)))\n                                    {\n                                        char* r15_6 = var_128_1;\n                                        uint64_t rax_69 = sub_408fc0(&var_114, r15_6, sub_407340(r15_6, __ctype_get_mb_cur_max()), &var_134);\n                                        var_120 = rax_69;\n                                        if (rax_69 == -1)\n                                        {\n                                            var_120 = 1;\n                                            char var_118_1 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (rax_69 != -2)\n                                            {\n                                                if (rax_69 == 0)\n                                                {\n                                                    var_120 = 1;\n                                                    if (*var_128_1 != 0)\n                                                    {\n                                                        goto label_40b2e9;\n                                                    }\n                                                    if (var_114 != 0)\n                                                    {\n                                                        goto label_40b1da;\n                                                    }\n                                                }\n                                                var_118 = 1;\n                                                if (mbsinit(&var_134) != 0)\n                                                {\n                                                    var_138_1 = 0;\n                                                }\n                                                var_12c_1 = 1;\n                                                goto label_40ae16;\n                                            }\n                                            char var_118_2 = 0;\n                                            var_120 = strlen(var_128_1);\n                                        }\n                                    }\n                                label_40adbb:\n                                    char var_12c_2 = 0;\n                                    var_128_1 = &var_128_1[var_120];\n                                    temp2_1 = r14_4;\n                                    r14_4 = (r14_4 - 1);\n                                } while (temp2_1 != 1);\n                                if (((var_138_1 == 0 && ((*(((rax_60 & 7) << 2) + 0x410680) >> rcx_14) & 1) == 0) && rax_66 == 0))\n                                {\n                                    break;\n                                }\n                            }\n                            char rdx_19;\n                            if (((rbx_2 == var_180_1 && var_12c_1 == 0) || rbx_2 != var_180_1))\n                            {\n                                if (var_138_1 == 0)\n                                {\n                                    uint32_t rcx_16 = *var_128_1;\n                                    uint32_t rax_73;\n                                    rax_73 = (rcx_16 >> 5);\n                                    if (((*(((rax_73 & 7) << 2) + 0x410680) >> rcx_16) & 1) == 0)\n                                    {\n                                        if (mbsinit(&var_134) == 0)\n                                        {\n                                            break;\n                                        }\n                                        var_138_1 = 1;\n                                        goto label_40b0cd;\n                                    }\n                                    var_120 = 1;\n                                    var_118 = 1;\n                                    var_114 = *var_128_1;\n                                    var_12c_1 = 1;\n                                }\n                                else\n                                {\n                                label_40b0cd:\n                                    char* r14_5 = var_128_1;\n                                    uint64_t rax_88 = sub_408fc0(&var_114, r14_5, sub_407340(r14_5, __ctype_get_mb_cur_max()), &var_134);\n                                    var_120 = rax_88;\n                                    if (rax_88 == -1)\n                                    {\n                                        var_120 = 1;\n                                        var_118 = 0;\n                                        var_12c_1 = 1;\n                                    label_40afbc:\n                                        rdx_19 = var_d8_1;\n                                        r14_2 = 1;\n                                        goto label_40afce;\n                                    }\n                                    if (rax_88 == -2)\n                                    {\n                                        var_118 = 0;\n                                        var_120 = strlen(var_128_1);\n                                        var_12c_1 = 1;\n                                        goto label_40afbc;\n                                    }\n                                    if (rax_88 == 0)\n                                    {\n                                        var_120 = 1;\n                                        if (*var_128_1 != 0)\n                                        {\n                                            goto label_40b2e9;\n                                        }\n                                        if (var_114 != 0)\n                                        {\n                                            goto label_40b1da;\n                                        }\n                                    }\n                                    var_118 = 1;\n                                    if (mbsinit(&var_134) != 0)\n                                    {\n                                        var_138_1 = 0;\n                                    }\n                                    var_12c_1 = 1;\n                                }\n                            }\n                            if (var_114 != 0)\n                            {\n                                goto label_40afbc;\n                            }\n                        label_40ae34:\n                            char rax_65 = sub_409a40(rbp, arg2, &var_78);\n                            r14_2 = rax_65;\n                            if (rax_65 != 0)\n                            {\n                                break;\n                            }\n                            rdx_19 = var_d8_1;\n                        label_40afce:\n                            var_180_1 = rbx_2;\n                            rbx_2 = (rbx_2 + 1);\n                            if (rdx_19 == 0)\n                            {\n                                goto label_40abe8;\n                            }\n                        }\n                        if ((rax_49 != -1 && rax_49 != -2))\n                        {\n                            if (rax_49 == 0)\n                            {\n                                var_e0_1 = 1;\n                                if (*var_e8_1 != 0)\n                                {\n                                    goto label_40b2e9;\n                                }\n                                if (var_d4 != 0)\n                                {\n                                    goto label_40b1da;\n                                }\n                            }\n                            var_d8_1 = 1;\n                            if (mbsinit(&var_f4) != 0)\n                            {\n                                var_f8_1 = 0;\n                            }\n                            char var_ec_5 = 1;\n                        }\n                    }\n                    if (((var_f8_1 == 0 && ((*(((rax_11 & 7) << 2) + 0x410680) >> rcx_6) & 1) != 0) || (((var_f8_1 != 0 || (var_f8_1 == 0 && ((*(((rax_11 & 7) << 2) + 0x410680) >> rcx_6) & 1) == 0)) && rax_49 != -1) && rax_49 != -2)))\n                    {\n                        if (var_d4 == 0)\n                        {\n                            goto label_40ab38;\n                        }\n                        int32_t rax_15;\n                        rax_15 = r12_2 > 9;\n                        rax_15 = (rax_15 & r14_2);\n                        if (rax_15 == 0)\n                        {\n                            rbx_2 = (rbx_2 + 1);\n                        }\n                        else\n                        {\n                            if (rbx_2 >= (r12_2 * 5))\n                            {\n                                goto label_40ada0;\n                            }\n                            rbx_2 = (rbx_2 + 1);\n                            r14_2 = rax_15;\n                        }\n                    }\n                    if (((((var_f8_1 == 0 && ((*(((rax_11 & 7) << 2) + 0x410680) >> rcx_6) & 1) != 0) || (((var_f8_1 != 0 || (var_f8_1 == 0 && ((*(((rax_11 & 7) << 2) + 0x410680) >> rcx_6) & 1) == 0)) && rax_49 != -1) && rax_49 != -2)) && var_d4 != 0) || ((var_f8_1 != 0 || (var_f8_1 == 0 && ((*(((rax_11 & 7) << 2) + 0x410680) >> rcx_6) & 1) == 0)) && (rax_49 == -1 || rax_49 == -2))))\n                    {\n                        if (var_158_1 == 0)\n                        {\n                            goto label_40abe8;\n                        }\n                        if (var_d4 == var_154)\n                        {\n                            goto label_40a701;\n                        }\n                    label_40aa32:\n                        r15_4 = var_e0_1;\n                    label_40aa3a:\n                        var_e8_1 = &var_e8_1[r15_4];\n                        r12_2 = (r12_2 + 1);\n                        char var_ec_3 = 0;\n                    }\n                }\n                if (((var_f8_1 == 0 && ((*(((rax_11 & 7) << 2) + 0x410680) >> rcx_6) & 1) == 0) && rax_51 == 0))\n                {\n                    goto label_40b2d0;\n                }\n            label_40b261:\n                rax_1 = var_78;\n                goto label_40a58e;\n            }\n            if (rax_94 == -2)\n            {\n                var_158_1 = 0;\n                var_160_1 = strlen(arg2);\n                char var_16c_5 = 1;\n                goto label_40a5f7;\n            }\n            if (rax_94 == 0)\n            {\n                var_160_1 = 1;\n                if (*arg2 != 0)\n                {\n                label_40b2e9:\n                    __assert_fail(\"*iter->cur.ptr == '\\0'\", \"lib/mbuiter.h\", 0xb2, \"mbuiter_multi_next\");\n                    /* no return */\n                }\n                if (var_154 != 0)\n                {\n                label_40b1da:\n                    sub_409a20();\n                    /* no return */\n                }\n            }\n            var_158_1 = 1;\n            if (mbsinit(&var_174) != 0)\n            {\n                char var_178_3 = 0;\n            }\n            char var_16c_4 = 1;\n        }\n        if (var_154 != 0)\n        {\n            goto label_40a5f7;\n        }\n    label_40a57a:\n        rax_1 = rbp;\n        goto label_40a58e;\n    }\n    char r15_1 = *arg2;\n    rax_1 = rbp;\n    if (r15_1 == 0)\n    {\n        goto label_40a58e;\n    }\n    char rcx_1 = *rbp;\n    if (rcx_1 != 0)\n    {\n        char* r9_1 = arg2;\n        int64_t r12_1 = 0;\n        void* rdx_1 = nullptr;\n        char rax_2 = 1;\n        char rcx_4;\n        while (true)\n        {\n            r12_1 = (r12_1 + 1);\n            void* rbx_1 = (rdx_1 + 1);\n            void* r14_1 = &rbp[1];\n            if ((r15_1 != rcx_1 && rbp[1] == 0))\n            {\n                break;\n            }\n            if (r15_1 == rcx_1)\n            {\n                rcx_4 = arg2[1];\n                if (rcx_4 == 0)\n                {\n                    break;\n                }\n                char rsi_3 = *r14_1;\n                if (rsi_3 == 0)\n                {\n                    break;\n                }\n                rbx_1 = (rdx_1 + 2);\n                if (rcx_4 == rsi_3)\n                {\n                    int64_t rdx_3 = (-rdx_1);\n                    char* rdi_3 = &arg2[rdx_3];\n                    rdx_1 = &rbp[rdx_3];\n                    char rcx_5;\n                    char rsi_4;\n                    do\n                    {\n                        rcx_5 = *(rdi_3 + rbx_1);\n                        if (rcx_5 == 0)\n                        {\n                            break;\n                        }\n                        rsi_4 = *(rdx_1 + rbx_1);\n                        if (rsi_4 == 0)\n                        {\n                            break;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                    } while (rcx_5 == rsi_4);\n                    if (rcx_5 == 0)\n                    {\n                        break;\n                    }\n                    if (((rcx_5 != 0 && rcx_5 != 0) && rsi_4 == 0))\n                    {\n                        break;\n                    }\n                }\n            }\n            rdx_1 = r12_1 > 9;\n            rdx_1 = (rdx_1 & rax_2);\n            char rbp_1 = rdx_1;\n            if (rdx_1 != 0)\n            {\n                if ((rbx_1 >= (r12_1 * 5) && r9_1 != 0))\n                {\n                    r9_1 = &r9_1[strnlen(r9_1, (rbx_1 - rbx_1))];\n                }\n                if ((rbx_1 < (r12_1 * 5) || ((rbx_1 >= (r12_1 * 5) && r9_1 != 0) && *r9_1 != 0)))\n                {\n                    rax_2 = rbp_1;\n                }\n                if ((rbx_1 >= (r12_1 * 5) && (r9_1 == 0 || (r9_1 != 0 && *r9_1 == 0))))\n                {\n                    rax_2 = sub_409890(r14_1, arg2, strlen(arg2), &var_78);\n                    if (rax_2 != 0)\n                    {\n                        break;\n                    }\n                    r9_1 = nullptr;\n                }\n            }\n            rcx_1 = *r14_1;\n            rbp = r14_1;\n            rdx_1 = rbx_1;\n        }\n        if ((r15_1 == rcx_1 && rcx_4 == 0))\n        {\n            goto label_40a57a;\n        }\n        if ((r15_1 != rcx_1 && rbp[1] == 0))\n        {\n            goto label_40ab38;\n        }\n        goto label_40b261;\n    }\nlabel_40ab38:\n    rax_1 = nullptr;\nlabel_40a58e:\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40b2f0",
            "funcStartAddr": "0x401a6d",
            "funcEndAddr": "0x40b539",
            "decompiledFuncCode": "uint64_t sub_40b2f0(char* arg1, char* arg2, iconv_t arg3, int64_t* arg4, \n    void** arg5, char** arg6)\n{\n    char* r13 = arg2;\n    char** r9 = iconv(arg3, nullptr, nullptr, nullptr, nullptr, arg6);\n    char* var_1058 = arg1;\n    int64_t r14_1 = 0;\n    char* var_1050 = r13;\n    char* var_1048;\n    uint64_t var_1040;\n    uint64_t var_1038;\n    if (r13 == 0)\n    {\n    label_40b3b1:\n        var_1048 = &var_1038;\n        var_1040 = 0x1000;\n        uint64_t rax_6;\n        char** r9_1;\n        rax_6 = iconv(arg3, nullptr, nullptr, &var_1048, &var_1040, r9);\n        if (rax_6 == -1)\n        {\n            goto label_40b4e0;\n        }\n        void* rax_8 = (var_1048 - &var_1038);\n        void* rax_9 = (rax_8 + r14_1);\n        int32_t rbx_1;\n        if (rax_8 == (-r14_1))\n        {\n            rbx_1 = 0;\n            *arg5 = nullptr;\n        }\n        else\n        {\n            uint64_t r14_2 = *arg4;\n            if (r14_2 == 0)\n            {\n            label_40b4c4:\n                uint64_t rax_19;\n                rax_19 = malloc(rax_9);\n                r14_2 = rax_19;\n                if (rax_19 != 0)\n                {\n                    goto label_40b412;\n                }\n                *__errno_location() = 0xc;\n            label_40b4e0:\n                rbx_1 = -1;\n            }\n            else\n            {\n                if (*arg5 < rax_9)\n                {\n                    goto label_40b4c4;\n                }\n            label_40b412:\n                char** r9_2 = iconv(arg3, nullptr, nullptr, nullptr, nullptr, r9_1);\n                var_1048 = r13;\n                var_1040 = r14_2;\n                var_1050 = arg1;\n                var_1038 = rax_9;\n                while (true)\n                {\n                    uint64_t rax_14;\n                    int32_t* rax_22;\n                    if (r13 != 0)\n                    {\n                        rax_14 = iconv(arg3, &var_1050, &var_1048, &var_1040, &var_1038, r9_2);\n                        if (rax_14 == -1)\n                        {\n                            rax_22 = __errno_location();\n                        }\n                        else\n                        {\n                            r13 = var_1048;\n                            continue;\n                        }\n                    }\n                    if (((r13 == 0 || ((r13 != 0 && rax_14 == -1) && *rax_22 == 0x16)) && iconv(arg3, nullptr, nullptr, &var_1040, &var_1038, r9_2) != -1))\n                    {\n                        if (var_1038 != 0)\n                        {\n                            abort();\n                            /* no return */\n                        }\n                        rbx_1 = 0;\n                        *arg4 = r14_2;\n                        *arg5 = rax_9;\n                        break;\n                    }\n                    if (((((r13 != 0 && rax_14 == -1) && *rax_22 != 0x16) || r13 == 0) || ((r13 != 0 && rax_14 == -1) && *rax_22 == 0x16)))\n                    {\n                        rbx_1 = -1;\n                        if (*arg4 != r14_2)\n                        {\n                            int32_t* rax_24 = __errno_location();\n                            int32_t r12_1 = *rax_24;\n                            free(r14_2);\n                            *rax_24 = r12_1;\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n        return rbx_1;\n    }\n    uint64_t rax_3;\n    int32_t rax_5;\n    do\n    {\n        var_1048 = &var_1038;\n        var_1040 = 0x1000;\n        rax_3 = iconv(arg3, &var_1058, &var_1050, &var_1048, &var_1040, r9);\n        if (rax_3 == -1)\n        {\n            int32_t* rax_4;\n            rax_4 = __errno_location();\n            rax_5 = *rax_4;\n            if (rax_5 != 7)\n            {\n                break;\n            }\n        }\n        r14_1 = (r14_1 + (var_1048 - &var_1038));\n    } while (var_1050 != 0);\n    if ((!(rax_3 == -1 && rax_5 != 7)))\n    {\n        goto label_40b3b1;\n    }\n    if (rax_5 == 0x16)\n    {\n        goto label_40b3b1;\n    }\n    goto label_40b4e0;\n}\n\n"
        },
        {
            "funcName": "sub_40b540",
            "funcStartAddr": "0x40b540",
            "funcEndAddr": "0x40b705",
            "decompiledFuncCode": "char* sub_40b540(char* arg1, iconv_t arg2)\n{\n    char* var_58 = arg1;\n    uint64_t rax = strlen(arg1);\n    uint64_t var_50 = rax;\n    uint64_t rbx_1 = (rax << 4);\n    if (rax >= 0x10000000)\n    {\n        rbx_1 = rax;\n    }\n    uint64_t r13 = (rbx_1 + 1);\n    char* rax_1;\n    char** r9;\n    rax_1 = malloc(r13);\n    char* r12 = rax_1;\n    if (rax_1 == 0)\n    {\n        *__errno_location() = 0xc;\n    }\n    else\n    {\n        char** r9_1 = iconv(arg2, nullptr, nullptr, nullptr, nullptr, r9);\n        char* var_48 = r12;\n        uint64_t var_40 = rbx_1;\n        while (true)\n        {\n            uint64_t rax_5;\n            char** r9_2;\n            rax_5 = iconv(arg2, &var_58, &var_50, &var_48, &var_40, r9_1);\n            int32_t* r15_1;\n            if (rax_5 == -1)\n            {\n                int32_t* rax_2;\n                rax_2 = __errno_location();\n                r15_1 = rax_2;\n                int32_t rax_3 = *rax_2;\n                if (rax_3 != 0x16)\n                {\n                    if (rax_3 != 7)\n                    {\n                        goto label_40b6d7;\n                    }\n                    uint64_t rbp_1 = (r13 + r13);\n                    void* rbx_3 = (var_48 - r12);\n                    if (r13 < rbp_1)\n                    {\n                        char* rax_4;\n                        rax_4 = realloc(r12, rbp_1);\n                        if (rax_4 != 0)\n                        {\n                            r12 = rax_4;\n                            r13 = rbp_1;\n                            var_48 = (rax_4 + rbx_3);\n                            var_40 = ((rbp_1 - 1) - rbx_3);\n                            continue;\n                        }\n                    }\n                    goto label_40b6d0;\n                }\n            }\n            int32_t* rax_6;\n            uint64_t rax_8;\n            while (true)\n            {\n                rax_8 = iconv(arg2, nullptr, nullptr, &var_48, &var_40, r9_2);\n                if (rax_8 != -1)\n                {\n                    break;\n                }\n                rax_6 = __errno_location();\n                r15_1 = rax_6;\n                if (*rax_6 != 7)\n                {\n                    break;\n                }\n                uint64_t rbp_2 = (r13 + r13);\n                void* rbx_5 = (var_48 - r12);\n                if (r13 >= rbp_2)\n                {\n                    break;\n                }\n                char* rax_7;\n                rax_7 = realloc(r12, rbp_2);\n                if (rax_7 == 0)\n                {\n                    break;\n                }\n                r13 = rbp_2;\n                r12 = rax_7;\n                var_48 = (rax_7 + rbx_5);\n                var_40 = ((rbp_2 - 1) - rbx_5);\n            }\n            if (rax_8 != -1)\n            {\n                char* rax_9 = var_48;\n                var_48 = &rax_9[1];\n                *rax_9 = 0;\n                uint64_t rsi_4 = (var_48 - r12);\n                if (r13 > rsi_4)\n                {\n                    char* rax_10 = realloc(r12, rsi_4);\n                    if (rax_10 != 0)\n                    {\n                        r12 = rax_10;\n                    }\n                }\n                break;\n            }\n            if ((rax_8 == -1 && *rax_6 != 7))\n            {\n                goto label_40b6d7;\n            }\n        label_40b6d0:\n            *r15_1 = 0xc;\n        label_40b6d7:\n            char* rdi_7 = r12;\n            r12 = nullptr;\n            free(rdi_7);\n            break;\n        }\n    }\n    return r12;\n}\n\n"
        },
        {
            "funcName": "sub_40b710",
            "funcStartAddr": "0x40b710",
            "funcEndAddr": "0x40b7fc",
            "decompiledFuncCode": "char* sub_40b710(char* arg1, char* arg2, char* arg3)\n{\n    int32_t rax_1;\n    char* rbx_1;\n    if (*arg1 != 0)\n    {\n        rax_1 = sub_409150(arg2, arg3);\n        if (rax_1 != 0)\n        {\n            iconv_t rax_4 = iconv_open(arg3, arg2);\n            if (rax_4 == -1)\n            {\n                rbx_1 = nullptr;\n            }\n            else\n            {\n                char* rax_5 = sub_40b540(arg1, rax_4);\n                rbx_1 = rax_5;\n                if (rax_5 == 0)\n                {\n                    int32_t* rax_10 = __errno_location();\n                    int32_t r13_1 = *rax_10;\n                    iconv_close(rax_4);\n                    *rax_10 = r13_1;\n                }\n                else if (iconv_close(rax_4) < 0)\n                {\n                    int32_t* rax_7 = __errno_location();\n                    char* rdi_5 = rbx_1;\n                    rbx_1 = nullptr;\n                    int32_t r12_2 = *rax_7;\n                    free(rdi_5);\n                    *rax_7 = r12_2;\n                }\n            }\n        }\n    }\n    if ((*arg1 == 0 || (*arg1 != 0 && rax_1 == 0)))\n    {\n        char* rax_2 = strdup(arg1);\n        rbx_1 = rax_2;\n        if (rax_2 == 0)\n        {\n            *__errno_location() = 0xc;\n            return rbx_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_40b800",
            "funcStartAddr": "0x40b800",
            "funcEndAddr": "0x40b87b",
            "decompiledFuncCode": "int64_t sub_40b800(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_40b880(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_40b880",
            "funcStartAddr": "0x40b880",
            "funcEndAddr": "0x40b8c0",
            "decompiledFuncCode": "int64_t sub_40b880(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_40b8c0(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_40b8c0",
            "funcStartAddr": "0x40b8c0",
            "funcEndAddr": "0x40b917",
            "decompiledFuncCode": "off64_t sub_40b8c0(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_40b920",
            "funcStartAddr": "0x40b920",
            "funcEndAddr": "0x40b98c",
            "decompiledFuncCode": "void* sub_40b920(int64_t arg1)\n{\n    uint64_t rdi = (arg1 + 0x10);\n    if (arg1 >= -0x10)\n    {\n        return 0;\n    }\n    int64_t* rax = malloc(rdi);\n    void* rcx = nullptr;\n    if (rax != 0)\n    {\n        rcx = &rax[2];\n        *(rax + 0xc) = 0x1415fb4a;\n        int64_t rax_2;\n        int64_t rdx_1;\n        rdx_1 = HIGHD((rcx * -0xff00ff00ff00ff));\n        rax_2 = LOWD((rcx * -0xff00ff00ff00ff));\n        void* rax_6 = (rcx - ((rdx_1 >> 8) * 0x101));\n        int64_t rax_7 = *((rax_6 << 3) + 0x6134c0);\n        *((rax_6 << 3) + 0x6134c0) = rcx;\n        *rax = rax_7;\n    }\n    return rcx;\n}\n\n"
        },
        {
            "funcName": "sub_40b990",
            "funcStartAddr": "0x40b990",
            "funcEndAddr": "0x40ba16",
            "decompiledFuncCode": "void sub_40b990(void* arg1)\n{\n    if ((arg1 != 0 && *(arg1 - 4) == 0x1415fb4a))\n    {\n        int64_t rax_2;\n        int64_t rdx_1;\n        rdx_1 = HIGHD((arg1 * -0xff00ff00ff00ff));\n        rax_2 = LOWD((arg1 * -0xff00ff00ff00ff));\n        void* rax = (arg1 - ((rdx_1 >> 8) * 0x101));\n        void* rcx_1 = *((rax << 3) + 0x6134c0);\n        if (rcx_1 != 0)\n        {\n            void* rcx_2;\n            if (rcx_1 == arg1)\n            {\n                rcx_2 = ((rax << 3) + 0x6134c0);\n            }\n            else\n            {\n                while (true)\n                {\n                    rax = *(rcx_1 - 0x10);\n                    if (rax == 0)\n                    {\n                        return;\n                    }\n                    if (arg1 == rax)\n                    {\n                        break;\n                    }\n                    rcx_1 = rax;\n                }\n                rcx_2 = (rcx_1 - 0x10);\n            }\n            *rcx_2 = *(arg1 - 0x10);\n            /* tailcall */\n            return free((arg1 - 0x10));\n        }\n    }\n}\n\n"
        },
        {
            "funcName": "sub_40ba20",
            "funcStartAddr": "0x40ba20",
            "funcEndAddr": "0x40bbec",
            "decompiledFuncCode": "uint64_t sub_40ba20(char* arg1)\n{\n    uint64_t rbx_1;\n    if (__ctype_get_mb_cur_max() <= 1)\n    {\n        rbx_1 = strlen(arg1);\n    }\n    else\n    {\n        char* var_48_1 = arg1;\n        rbx_1 = 0;\n        char var_58_1 = 0;\n        mbstate_t var_54;\n        var_54.__count = 0;\n        var_54.__value = 0;\n        char var_4c_1 = 0;\n        while (true)\n        {\n            uint64_t var_40_1;\n            uint32_t var_34;\n            uint32_t rax_3;\n            uint32_t rcx_1;\n            if (var_58_1 == 0)\n            {\n                char* rdx_1 = var_48_1;\n                rcx_1 = *rdx_1;\n                rax_3 = (rcx_1 >> 5);\n                if (((*(((rax_3 & 7) << 2) + 0x410680) >> rcx_1) & 1) != 0)\n                {\n                    var_40_1 = 1;\n                    char var_38_1 = 1;\n                    var_34 = *rdx_1;\n                }\n                else\n                {\n                    if (mbsinit(&var_54) == 0)\n                    {\n                        __assert_fail(\"mbsinit (&iter->state)\", \"lib/mbuiter.h\", 0x96, \"mbuiter_multi_next\");\n                        /* no return */\n                    }\n                    var_58_1 = 1;\n                }\n            }\n            uint64_t rax_12;\n            if ((var_58_1 != 0 || (var_58_1 == 0 && ((*(((rax_3 & 7) << 2) + 0x410680) >> rcx_1) & 1) == 0)))\n            {\n                char* rbp_1 = var_48_1;\n                rax_12 = sub_408fc0(&var_34, rbp_1, sub_407340(rbp_1, __ctype_get_mb_cur_max()), &var_54);\n                var_40_1 = rax_12;\n                if (rax_12 == -1)\n                {\n                    var_40_1 = 1;\n                    char var_38_3 = 0;\n                }\n                if (rax_12 == -2)\n                {\n                    char var_38_4 = 0;\n                    var_40_1 = strlen(var_48_1);\n                }\n                if ((rax_12 != -1 && rax_12 != -2))\n                {\n                    if (rax_12 == 0)\n                    {\n                        var_40_1 = 1;\n                        if (*var_48_1 != 0)\n                        {\n                            __assert_fail(\"*iter->cur.ptr == '\\0'\", \"lib/mbuiter.h\", 0xb2, \"mbuiter_multi_next\");\n                            /* no return */\n                        }\n                        if (var_34 != 0)\n                        {\n                            __assert_fail(\"iter->cur.wc == 0\", \"lib/mbuiter.h\", 0xb3, \"mbuiter_multi_next\");\n                            /* no return */\n                        }\n                    }\n                    char var_38_2 = 1;\n                    if (mbsinit(&var_54) != 0)\n                    {\n                        var_58_1 = 0;\n                    }\n                }\n            }\n            if ((((var_58_1 == 0 && ((*(((rax_3 & 7) << 2) + 0x410680) >> rcx_1) & 1) != 0) || (((var_58_1 != 0 || (var_58_1 == 0 && ((*(((rax_3 & 7) << 2) + 0x410680) >> rcx_1) & 1) == 0)) && rax_12 != -1) && rax_12 != -2)) && var_34 == 0))\n            {\n                break;\n            }\n            var_48_1 = &var_48_1[var_40_1];\n            rbx_1 = (rbx_1 + 1);\n            char var_4c_2 = 0;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x40bbf0",
            "funcEndAddr": "0x40bc4d",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x40bc50",
            "funcEndAddr": "0x40bc51",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_40bc60",
            "funcStartAddr": "0x40bc60",
            "funcEndAddr": "0x40bc78",
            "decompiledFuncCode": "int64_t sub_40bc60(void (* arg1)(void*))\n{\n    int64_t rdx = data_613228;\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, rdx);\n}\n\n"
        },
        {
            "funcName": "sub_40bc78",
            "funcStartAddr": "0x40bc78",
            "funcEndAddr": "0x40bc98",
            "decompiledFuncCode": "int64_t sub_40bc78(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_612e30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}