{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pinky.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 141,
    "funcInfo": [
        {
            "funcName": "sub_401810",
            "funcStartAddr": "0x401810",
            "funcEndAddr": "0x40181c",
            "decompiledFuncCode": "int64_t sub_401810()\n{\n    int64_t var_8 = data_60a008;\n    /* jump -> data_60a010 */\n}\n\n"
        },
        {
            "funcName": "sub_401826",
            "funcStartAddr": "0x401826",
            "funcEndAddr": "0x401830",
            "decompiledFuncCode": "int64_t sub_401826()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401836",
            "funcStartAddr": "0x401836",
            "funcEndAddr": "0x401840",
            "decompiledFuncCode": "int64_t sub_401836()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401846",
            "funcStartAddr": "0x401846",
            "funcEndAddr": "0x401850",
            "decompiledFuncCode": "int64_t sub_401846()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401856",
            "funcStartAddr": "0x401856",
            "funcEndAddr": "0x401860",
            "decompiledFuncCode": "int64_t sub_401856()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401866",
            "funcStartAddr": "0x401866",
            "funcEndAddr": "0x401870",
            "decompiledFuncCode": "int64_t sub_401866()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401896",
            "funcStartAddr": "0x401896",
            "funcEndAddr": "0x4018a0",
            "decompiledFuncCode": "int64_t sub_401896()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_4018a6",
            "funcStartAddr": "0x4018a6",
            "funcEndAddr": "0x4018b0",
            "decompiledFuncCode": "int64_t sub_4018a6()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_4018b6",
            "funcStartAddr": "0x4018b6",
            "funcEndAddr": "0x4018c0",
            "decompiledFuncCode": "int64_t sub_4018b6()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_4018c6",
            "funcStartAddr": "0x4018c6",
            "funcEndAddr": "0x4018d0",
            "decompiledFuncCode": "int64_t sub_4018c6()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_4018d6",
            "funcStartAddr": "0x4018d6",
            "funcEndAddr": "0x4018e0",
            "decompiledFuncCode": "int64_t sub_4018d6()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_4018e6",
            "funcStartAddr": "0x4018e6",
            "funcEndAddr": "0x4018f0",
            "decompiledFuncCode": "int64_t sub_4018e6()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_4018f6",
            "funcStartAddr": "0x4018f6",
            "funcEndAddr": "0x401900",
            "decompiledFuncCode": "int64_t sub_4018f6()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401906",
            "funcStartAddr": "0x401906",
            "funcEndAddr": "0x401910",
            "decompiledFuncCode": "int64_t sub_401906()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401916",
            "funcStartAddr": "0x401916",
            "funcEndAddr": "0x401920",
            "decompiledFuncCode": "int64_t sub_401916()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401926",
            "funcStartAddr": "0x401926",
            "funcEndAddr": "0x401930",
            "decompiledFuncCode": "int64_t sub_401926()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401936",
            "funcStartAddr": "0x401936",
            "funcEndAddr": "0x401940",
            "decompiledFuncCode": "int64_t sub_401936()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401946",
            "funcStartAddr": "0x401946",
            "funcEndAddr": "0x401950",
            "decompiledFuncCode": "int64_t sub_401946()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401956",
            "funcStartAddr": "0x401956",
            "funcEndAddr": "0x401960",
            "decompiledFuncCode": "int64_t sub_401956()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401966",
            "funcStartAddr": "0x401966",
            "funcEndAddr": "0x401970",
            "decompiledFuncCode": "int64_t sub_401966()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401976",
            "funcStartAddr": "0x401976",
            "funcEndAddr": "0x401980",
            "decompiledFuncCode": "int64_t sub_401976()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401986",
            "funcStartAddr": "0x401986",
            "funcEndAddr": "0x401990",
            "decompiledFuncCode": "int64_t sub_401986()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401996",
            "funcStartAddr": "0x401996",
            "funcEndAddr": "0x4019a0",
            "decompiledFuncCode": "int64_t sub_401996()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_4019a6",
            "funcStartAddr": "0x4019a6",
            "funcEndAddr": "0x4019b0",
            "decompiledFuncCode": "int64_t sub_4019a6()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_4019b6",
            "funcStartAddr": "0x4019b6",
            "funcEndAddr": "0x4019c0",
            "decompiledFuncCode": "int64_t sub_4019b6()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_4019c6",
            "funcStartAddr": "0x4019c6",
            "funcEndAddr": "0x4019d0",
            "decompiledFuncCode": "int64_t sub_4019c6()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_4019d6",
            "funcStartAddr": "0x4019d6",
            "funcEndAddr": "0x4019e0",
            "decompiledFuncCode": "int64_t sub_4019d6()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_4019e6",
            "funcStartAddr": "0x4019e6",
            "funcEndAddr": "0x4019f0",
            "decompiledFuncCode": "int64_t sub_4019e6()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_4019f6",
            "funcStartAddr": "0x4019f6",
            "funcEndAddr": "0x401a00",
            "decompiledFuncCode": "int64_t sub_4019f6()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401a06",
            "funcStartAddr": "0x401a06",
            "funcEndAddr": "0x401a10",
            "decompiledFuncCode": "int64_t sub_401a06()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401a16",
            "funcStartAddr": "0x401a16",
            "funcEndAddr": "0x401a20",
            "decompiledFuncCode": "int64_t sub_401a16()\n{\n    int64_t var_8 = 0x1f;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401a26",
            "funcStartAddr": "0x401a26",
            "funcEndAddr": "0x401a30",
            "decompiledFuncCode": "int64_t sub_401a26()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401a36",
            "funcStartAddr": "0x401a36",
            "funcEndAddr": "0x401a40",
            "decompiledFuncCode": "int64_t sub_401a36()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401a46",
            "funcStartAddr": "0x401a46",
            "funcEndAddr": "0x401a50",
            "decompiledFuncCode": "int64_t sub_401a46()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401a56",
            "funcStartAddr": "0x401a56",
            "funcEndAddr": "0x401a60",
            "decompiledFuncCode": "int64_t sub_401a56()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401a66",
            "funcStartAddr": "0x401a66",
            "funcEndAddr": "0x401a70",
            "decompiledFuncCode": "int64_t sub_401a66()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401a76",
            "funcStartAddr": "0x401a76",
            "funcEndAddr": "0x401a80",
            "decompiledFuncCode": "int64_t sub_401a76()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401a86",
            "funcStartAddr": "0x401a86",
            "funcEndAddr": "0x401a90",
            "decompiledFuncCode": "int64_t sub_401a86()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401a96",
            "funcStartAddr": "0x401a96",
            "funcEndAddr": "0x401aa0",
            "decompiledFuncCode": "int64_t sub_401a96()\n{\n    int64_t var_8 = 0x27;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401aa6",
            "funcStartAddr": "0x401aa6",
            "funcEndAddr": "0x401ab0",
            "decompiledFuncCode": "int64_t sub_401aa6()\n{\n    int64_t var_8 = 0x28;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401ab6",
            "funcStartAddr": "0x401ab6",
            "funcEndAddr": "0x401ac0",
            "decompiledFuncCode": "int64_t sub_401ab6()\n{\n    int64_t var_8 = 0x29;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401ac6",
            "funcStartAddr": "0x401ac6",
            "funcEndAddr": "0x401ad0",
            "decompiledFuncCode": "int64_t sub_401ac6()\n{\n    int64_t var_8 = 0x2a;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401ad6",
            "funcStartAddr": "0x401ad6",
            "funcEndAddr": "0x401ae0",
            "decompiledFuncCode": "int64_t sub_401ad6()\n{\n    int64_t var_8 = 0x2b;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401ae6",
            "funcStartAddr": "0x401ae6",
            "funcEndAddr": "0x401af0",
            "decompiledFuncCode": "int64_t sub_401ae6()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401af6",
            "funcStartAddr": "0x401af6",
            "funcEndAddr": "0x401b00",
            "decompiledFuncCode": "int64_t sub_401af6()\n{\n    int64_t var_8 = 0x2d;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401b06",
            "funcStartAddr": "0x401b06",
            "funcEndAddr": "0x401b10",
            "decompiledFuncCode": "int64_t sub_401b06()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401b16",
            "funcStartAddr": "0x401b16",
            "funcEndAddr": "0x401b20",
            "decompiledFuncCode": "int64_t sub_401b16()\n{\n    int64_t var_8 = 0x2f;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401b26",
            "funcStartAddr": "0x401b26",
            "funcEndAddr": "0x401b30",
            "decompiledFuncCode": "int64_t sub_401b26()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401b36",
            "funcStartAddr": "0x401b36",
            "funcEndAddr": "0x401b40",
            "decompiledFuncCode": "int64_t sub_401b36()\n{\n    int64_t var_8 = 0x31;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401b46",
            "funcStartAddr": "0x401b46",
            "funcEndAddr": "0x401b50",
            "decompiledFuncCode": "int64_t sub_401b46()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401b56",
            "funcStartAddr": "0x401b56",
            "funcEndAddr": "0x401b60",
            "decompiledFuncCode": "int64_t sub_401b56()\n{\n    int64_t var_8 = 0x33;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401b66",
            "funcStartAddr": "0x401b66",
            "funcEndAddr": "0x401b70",
            "decompiledFuncCode": "int64_t sub_401b66()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401b76",
            "funcStartAddr": "0x401b76",
            "funcEndAddr": "0x401b80",
            "decompiledFuncCode": "int64_t sub_401b76()\n{\n    int64_t var_8 = 0x35;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401b86",
            "funcStartAddr": "0x401b86",
            "funcEndAddr": "0x401b90",
            "decompiledFuncCode": "int64_t sub_401b86()\n{\n    int64_t var_8 = 0x36;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401b96",
            "funcStartAddr": "0x401b96",
            "funcEndAddr": "0x401ba0",
            "decompiledFuncCode": "int64_t sub_401b96()\n{\n    int64_t var_8 = 0x37;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401ba6",
            "funcStartAddr": "0x401ba6",
            "funcEndAddr": "0x401bb0",
            "decompiledFuncCode": "int64_t sub_401ba6()\n{\n    int64_t var_8 = 0x38;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401bb6",
            "funcStartAddr": "0x401bb6",
            "funcEndAddr": "0x401bc0",
            "decompiledFuncCode": "int64_t sub_401bb6()\n{\n    int64_t var_8 = 0x39;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401bc6",
            "funcStartAddr": "0x401bc6",
            "funcEndAddr": "0x401bd0",
            "decompiledFuncCode": "int64_t sub_401bc6()\n{\n    int64_t var_8 = 0x3a;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401bd6",
            "funcStartAddr": "0x401bd6",
            "funcEndAddr": "0x401be0",
            "decompiledFuncCode": "int64_t sub_401bd6()\n{\n    int64_t var_8 = 0x3b;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401be6",
            "funcStartAddr": "0x401be6",
            "funcEndAddr": "0x401bf0",
            "decompiledFuncCode": "int64_t sub_401be6()\n{\n    int64_t var_8 = 0x3c;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401c16",
            "funcStartAddr": "0x401c16",
            "funcEndAddr": "0x401c20",
            "decompiledFuncCode": "int64_t sub_401c16()\n{\n    int64_t var_8 = 0x3f;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401c26",
            "funcStartAddr": "0x401c26",
            "funcEndAddr": "0x401c30",
            "decompiledFuncCode": "int64_t sub_401c26()\n{\n    int64_t var_8 = 0x40;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401c36",
            "funcStartAddr": "0x401c36",
            "funcEndAddr": "0x401c40",
            "decompiledFuncCode": "int64_t sub_401c36()\n{\n    int64_t var_8 = 0x41;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401c46",
            "funcStartAddr": "0x401c46",
            "funcEndAddr": "0x401c50",
            "decompiledFuncCode": "int64_t sub_401c46()\n{\n    int64_t var_8 = 0x42;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401c56",
            "funcStartAddr": "0x401c56",
            "funcEndAddr": "0x401c60",
            "decompiledFuncCode": "int64_t sub_401c56()\n{\n    int64_t var_8 = 0x43;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "sub_401c66",
            "funcStartAddr": "0x401c66",
            "funcEndAddr": "0x401c70",
            "decompiledFuncCode": "int64_t sub_401c66()\n{\n    int64_t var_8 = 0x44;\n    /* tailcall */\n    return sub_401810();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x401cb0",
            "funcEndAddr": "0x402130",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    char* rdi = *argv;\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rcx = sub_403180(rdi);\n    int64_t var_48;\n    int16_t* var_40;\n    setlocale(6, &data_4087cc[0x1b], rdx, rcx, r8, r9, var_48, var_40);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    sub_406db0(sub_402fe0);\n    while (true)\n    {\n        int32_t rax_1 = getopt_long(argc, argv, \"sfwiqbhlp\", &data_407500, nullptr);\n        if (rax_1 == 0xffffffff)\n        {\n            int64_t rax_3 = data_60a2fc;\n            int32_t rbp_1 = (argc - rax_3);\n            if (data_60a271 == 0)\n            {\n                bool cond:1_1 = rbp_1 <= 0;\n                if (rbp_1 == 0)\n                {\n                    error(0, 0, dcgettext(nullptr, \"no username specified; at least \u2026\", 5));\n                }\n                else if ((!cond:1_1))\n                {\n                    void* r12_1 = &argv[rax_3];\n                    void* rbx_1 = &argv[((rax_3 + (rbp_1 - 1)) + 1)];\n                    do\n                    {\n                        char* rdi_3 = *r12_1;\n                        r12_1 = (r12_1 + 8);\n                        sub_402340(rdi_3);\n                    } while (rbx_1 != r12_1);\n                }\n            }\n            else\n            {\n                var_40 = nullptr;\n                int64_t r14_1 = rax_3;\n                sub_4065c0(\"/var/run/utmp\", &var_48, &var_40, 0);\n                int16_t* r12_2 = var_40;\n                int64_t r13_1 = var_48;\n                if (sub_403080() != 0)\n                {\n                    data_60a398 = \"%Y-%m-%d %H:%M\";\n                    data_60a390 = 0x10;\n                }\n                else\n                {\n                    data_60a398 = \"%b %e %H:%M\";\n                    data_60a390 = 0xc;\n                }\n                if (data_60a276 != 0)\n                {\n                    __printf_chk(1, \"%-8s\", dcgettext(nullptr, \"Login\", 5));\n                    if (data_60a275 != 0)\n                    {\n                        __printf_chk(1, \" %-19s\", dcgettext(nullptr, \"Name\", 5));\n                    }\n                    __printf_chk(1, \" %-9s\", dcgettext(nullptr, \" TTY\", 5));\n                    if (data_60a277 != 0)\n                    {\n                        __printf_chk(1, \" %-6s\", dcgettext(nullptr, \"Idle\", 5));\n                    }\n                    __printf_chk(1, \" %-*s\", data_60a390, dcgettext(nullptr, \"When\", 5));\n                    if (data_60a270 != 0)\n                    {\n                        __printf_chk(1, \" %s\", dcgettext(nullptr, \"Where\", 5));\n                    }\n                    uint64_t* const rdi_7 = stdout;\n                    char* rax_14 = stdout[5];\n                    if (rax_14 >= stdout[6])\n                    {\n                        __overflow(rdi_7, 0xa);\n                    }\n                    else\n                    {\n                        stdout[5] = &rax_14[1];\n                        *rax_14 = 0xa;\n                    }\n                }\n                void* r14_2 = &argv[r14_1];\n                while (true)\n                {\n                    r13_1 = (r13_1 - 1);\n                    if (r13_1 == -1)\n                    {\n                        break;\n                    }\n                    if ((r12_2[0x16] != 0 && *r12_2 == 7))\n                    {\n                        int64_t rbx_2;\n                        if (rbp_1 != 0)\n                        {\n                            rbx_2 = 0;\n                            void* r15_1 = &r12_2[0x16];\n                            while (rbp_1 > rbx_2)\n                            {\n                                char* rsi_2 = *(r14_2 + (rbx_2 << 3));\n                                rbx_2 = (rbx_2 + 1);\n                                if (strncmp(r15_1, rsi_2, 0x20) == 0)\n                                {\n                                    break;\n                                }\n                            }\n                        }\n                        if ((rbp_1 == 0 || (rbp_1 != 0 && rbp_1 > rbx_2)))\n                        {\n                            sub_4026f0(r12_2, r14_2);\n                        }\n                    }\n                    r12_2 = &r12_2[0xc0];\n                }\n            }\n            if ((data_60a271 != 0 || (data_60a271 == 0 && rbp_1 != 0)))\n            {\n                return 0;\n            }\n            break;\n        }\n        bool cond:0_1 = rax_1 <= 0x69;\n        if (rax_1 == 0x69)\n        {\n            data_60a275 = 0;\n            data_60a270 = 0;\n        }\n        else if (cond:0_1)\n        {\n            bool cond:2_1 = rax_1 <= 0x62;\n            if (rax_1 == 0x62)\n            {\n                data_60a272 = 0;\n            }\n            else\n            {\n                if (cond:2_1)\n                {\n                    if (rax_1 == 0xffffff7d)\n                    {\n                        int64_t var_50 = 0;\n                        char const* const var_58 = \"Kaveh Ghazi\";\n                        sub_405220(stdout, \"pinky\", \"GNU coreutils\", data_60a278);\n                        exit(0);\n                        /* no return */\n                    }\n                    if (rax_1 == 0xffffff7e)\n                    {\n                        sub_402bd0(0);\n                        /* no return */\n                    }\n                    break;\n                }\n                if (rax_1 == 0x66)\n                {\n                    data_60a276 = 0;\n                }\n                else\n                {\n                    if (rax_1 != 0x68)\n                    {\n                        break;\n                    }\n                    data_60a274 = 0;\n                }\n            }\n        }\n        else\n        {\n            bool cond:3_1 = rax_1 > 0x71;\n            if (rax_1 == 0x71)\n            {\n                data_60a275 = 0;\n                data_60a270 = 0;\n                data_60a277 = 0;\n            }\n            else if (cond:3_1)\n            {\n                if (rax_1 == 0x73)\n                {\n                    data_60a271 = 1;\n                }\n                else\n                {\n                    if (rax_1 != 0x77)\n                    {\n                        break;\n                    }\n                    data_60a275 = 0;\n                }\n            }\n            else if (rax_1 == 0x6c)\n            {\n                data_60a271 = 0;\n            }\n            else\n            {\n                if (rax_1 != 0x70)\n                {\n                    break;\n                }\n                data_60a273 = 0;\n            }\n        }\n    }\n    sub_402bd0(1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x402130",
            "funcEndAddr": "0x40215a",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40215b",
            "funcStartAddr": "0x40215b",
            "funcEndAddr": "0x40217a",
            "decompiledFuncCode": "void sub_40215b()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_40217a",
            "funcStartAddr": "0x40217a",
            "funcEndAddr": "0x4021b1",
            "decompiledFuncCode": "int64_t sub_40217a()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_4021b1",
            "funcStartAddr": "0x4021b1",
            "funcEndAddr": "0x402208",
            "decompiledFuncCode": "void sub_4021b1()\n{\n    if (data_60a328 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_60a330;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_60a330 = (rax_1 + 1);\n        *(0x609e40 + ((rax_1 + 1) << 3))();\n    }\n    sub_40215b();\n    data_60a328 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_402208",
            "funcStartAddr": "0x402208",
            "funcEndAddr": "0x40220d",
            "decompiledFuncCode": "int64_t j_sub_40217a()\n{\n    /* tailcall */\n    return sub_40217a();\n}\n\n"
        },
        {
            "funcName": "sub_402210",
            "funcStartAddr": "0x402210",
            "funcEndAddr": "0x40233e",
            "decompiledFuncCode": "void* sub_402210(char* arg1, char* arg2)\n{\n    char* r13 = arg1;\n    int64_t rbx = 0;\n    char* rdx = r13;\n    size_t r12 = (strlen(arg1) + 1);\n    while (true)\n    {\n        char rcx_1 = *rdx;\n        rdx = &rdx[1];\n        if (rcx_1 == 0x26)\n        {\n            rbx = (rbx + 1);\n            continue;\n        }\n        if (rcx_1 == 0)\n        {\n            break;\n        }\n        if ((!(rcx_1 != 0x26 && rcx_1 != 0)))\n        {\n            /* nop */\n        }\n    }\n    if (rbx != 0)\n    {\n        int64_t r12_1 = (r12 - rbx);\n        uint64_t rax_1 = strlen(arg2);\n        int64_t rcx_3 = (rax_1 * rbx);\n        r12 = (r12_1 + rcx_3);\n        int64_t rsi;\n        rsi = (r12_1 + rcx_3) < r12_1;\n        bool rax_2;\n        int64_t rdx_1;\n        rdx_1 = HIGHD((rax_1 * rbx));\n        rax_2 = LOWD((rax_1 * rbx));\n        uint64_t rax_3 = ((rax_1 * rbx) >> 0x40) != 0;\n        if (rcx_3 < 0)\n        {\n            rax_3 = 1;\n        }\n        if ((rsi != 0 || (rsi == 0 && rax_3 != 0)))\n        {\n            sub_4055b0();\n            /* no return */\n        }\n    }\n    void* rax_4 = sub_405360(r12);\n    char rax_5 = *r13;\n    void* rbx_1 = rax_4;\n    if (rax_5 != 0)\n    {\n        do\n        {\n            if (rax_5 != 0x26)\n            {\n                *rbx_1 = rax_5;\n                rbx_1 = (rbx_1 + 1);\n            }\n            else\n            {\n                uint64_t r14_1 = *arg2;\n                void* rcx_4 = arg2;\n                char rdx_2 = r14_1;\n                if ((*(&*__ctype_b_loc()[r14_1] + 1) & 2) != 0)\n                {\n                    rdx_2 = arg2[1];\n                    rcx_4 = &arg2[1];\n                    rbx_1 = (rbx_1 + 1);\n                    *(rbx_1 - 1) = *__ctype_toupper_loc()[r14_1];\n                }\n                if (rdx_2 != 0)\n                {\n                    do\n                    {\n                        rcx_4 = (rcx_4 + 1);\n                        rbx_1 = (rbx_1 + 1);\n                        *(rbx_1 - 1) = rdx_2;\n                        rdx_2 = *rcx_4;\n                    } while (rdx_2 != 0);\n                    r13 = &r13[1];\n                    rax_5 = *r13;\n                    if (rax_5 == 0)\n                    {\n                        break;\n                    }\n                    continue;\n                }\n            }\n            r13 = &r13[1];\n            rax_5 = *r13;\n        } while (rax_5 != 0);\n    }\n    *rbx_1 = 0;\n    return rax_4;\n}\n\n"
        },
        {
            "funcName": "sub_402340",
            "funcStartAddr": "0x402340",
            "funcEndAddr": "0x4026ee",
            "decompiledFuncCode": "char* sub_402340(char* arg1)\n{\n    struct passwd* rax = getpwnam(arg1);\n    __printf_chk(1, dcgettext(nullptr, \"Login name: \", 5));\n    __printf_chk(1, \"%-28s\", arg1);\n    __printf_chk(1, dcgettext(nullptr, \"In real life: \", 5));\n    char* rax_10;\n    if (rax == 0)\n    {\n        rax_10 = __printf_chk(1, \" %s\", dcgettext(nullptr, \"???\\n\", 5));\n    }\n    else\n    {\n        char* rbp_1 = rax->pw_gecos;\n        char* rax_6 = strchr(rbp_1, 0x2c);\n        if (rax_6 != 0)\n        {\n            *rax_6 = 0;\n            rbp_1 = rax->pw_gecos;\n        }\n        void* rax_7 = sub_402210(rbp_1, rax->pw_name);\n        __printf_chk(1, \" %s\", rax_7);\n        free(rax_7);\n        uint64_t* const rdi_3 = stdout;\n        char* rax_9 = stdout[5];\n        if (rax_9 >= stdout[6])\n        {\n            __overflow(rdi_3, 0xa);\n        }\n        else\n        {\n            stdout[5] = &rax_9[1];\n            *rax_9 = 0xa;\n        }\n        char* rax_17;\n        bool cond:0_1;\n        if (data_60a272 != 0)\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Directory: \", 5));\n            __printf_chk(1, \"%-29s\", rax->pw_dir);\n            __printf_chk(1, dcgettext(nullptr, \"Shell: \", 5));\n            __printf_chk(1, \" %s\", rax->pw_shell);\n            uint64_t* const rdi_5 = stdout;\n            rax_17 = stdout[5];\n            if (rax_17 >= stdout[6])\n            {\n                __overflow(rdi_5, 0xa);\n            }\n            else\n            {\n                cond:0_1 = data_60a274 == 0;\n                stdout[5] = &rax_17[1];\n                *rax_17 = 0xa;\n            }\n        }\n        void var_428;\n        if ((((data_60a272 != 0 && rax_17 < stdout[6]) && (!cond:0_1)) || (((data_60a272 != 0 && rax_17 >= stdout[6]) || data_60a272 == 0) && data_60a274 != 0)))\n        {\n            char* rax_19 = sub_405360((strlen(rax->pw_dir) + 0xa));\n            char* rax_20 = stpcpy(rax_19, rax->pw_dir);\n            *rax_20 = 0x63656a6f72702e2f;\n            *(rax_20 + 8) = 0x74;\n            FILE* rax_21 = fopen(rax_19, \"r\");\n            if (rax_21 != 0)\n            {\n                __printf_chk(1, dcgettext(nullptr, \"Project: \", 5));\n                while (true)\n                {\n                    uint64_t rax_24 = fread_unlocked(&var_428, 1, 0x400, rax_21);\n                    if (rax_24 == 0)\n                    {\n                        break;\n                    }\n                    fwrite_unlocked(&var_428, 1, rax_24, stdout);\n                }\n                sub_4055f0(rax_21);\n            }\n            free(rax_19);\n            if (data_60a273 != 0)\n            {\n                goto label_4025db;\n            }\n        }\n        if (((((data_60a272 != 0 && rax_17 < stdout[6]) && cond:0_1) || (((data_60a272 != 0 && rax_17 >= stdout[6]) || data_60a272 == 0) && data_60a274 == 0)) && data_60a273 != 0))\n        {\n        label_4025db:\n            char* rax_26 = sub_405360((strlen(rax->pw_dir) + 7));\n            char* rax_27 = stpcpy(rax_26, rax->pw_dir);\n            *rax_27 = 0x6c702e2f;\n            *(rax_27 + 4) = 0x6e61;\n            rax_27[6] = 0;\n            FILE* rax_28 = fopen(rax_26, \"r\");\n            if (rax_28 != 0)\n            {\n                __printf_chk(1, dcgettext(nullptr, \"Plan:\\n\", 5));\n                while (true)\n                {\n                    uint64_t rax_31 = fread_unlocked(&var_428, 1, 0x400, rax_28);\n                    if (rax_31 == 0)\n                    {\n                        break;\n                    }\n                    fwrite_unlocked(&var_428, 1, rax_31, stdout);\n                }\n                sub_4055f0(rax_28);\n            }\n            free(rax_26);\n        }\n        uint64_t* const rdi_4 = stdout;\n        rax_10 = stdout[5];\n        if (rax_10 >= stdout[6])\n        {\n            rax_10 = __overflow(rdi_4, 0xa);\n        }\n        else\n        {\n            stdout[5] = &rax_10[1];\n            *rax_10 = 0xa;\n        }\n    }\n    return rax_10;\n}\n\n"
        },
        {
            "funcName": "sub_4026f0",
            "funcStartAddr": "0x4026f0",
            "funcEndAddr": "0x402bc4",
            "decompiledFuncCode": "char* sub_4026f0(void* arg1, int64_t arg2 @ r14)\n{\n    int64_t var_10 = arg2;\n    char rcx = *(arg1 + 8);\n    void* rax;\n    int32_t* rdx;\n    int32_t* rsi;\n    void* rdi;\n    void* r12;\n    int32_t var_208;\n    if (rcx != 0x2f)\n    {\n        rsi = &var_208;\n        var_208 = 0x7665642f;\n        int16_t var_204 = 0x2f;\n        rax = (arg1 + 8);\n        rdx = &*var_204[1];\n        rdi = (arg1 + 0x28);\n        r12 = rax;\n    }\n    else\n    {\n        rax = (arg1 + 8);\n        rsi = &var_208;\n        rdi = (arg1 + 0x28);\n        r12 = rax;\n        rdx = &var_208;\n    }\n    if ((rcx == 0x2f || (rcx != 0x2f && rcx != 0)))\n    {\n        do\n        {\n            rdx = (rdx + 1);\n            rax = (rax + 1);\n            *(rdx - 1) = rcx;\n            if (rax >= rdi)\n            {\n                break;\n            }\n            rcx = *rax;\n        } while (rcx != 0);\n    }\n    *rdx = 0;\n    void var_1d8;\n    int32_t r14_2;\n    int64_t r15;\n    if (__xstat(1, rsi, &var_1d8) != 0)\n    {\n        r14_2 = 0x3f;\n        r15 = 0;\n    }\n    else\n    {\n        int64_t var_190;\n        r15 = var_190;\n        int32_t var_1c0;\n        r14_2 = (((arg2 - arg2) & 0xa) + 0x20);\n    }\n    void* rbx = (arg1 + 0x2c);\n    __printf_chk(1, \"%-8.*s\", 0x20, rbx);\n    int64_t var_148;\n    if (data_60a275 != 0)\n    {\n        char rdx_2 = *(arg1 + 0x2c);\n        void* rcx_2 = (arg1 + 0x4c);\n        int64_t* rax_5 = &var_148;\n        if (rdx_2 != 0)\n        {\n            do\n            {\n                rax_5 = (rax_5 + 1);\n                rbx = (rbx + 1);\n                *(rax_5 - 1) = rdx_2;\n                if (rcx_2 <= rbx)\n                {\n                    break;\n                }\n                rdx_2 = *rbx;\n            } while (rdx_2 != 0);\n        }\n        *rax_5 = 0;\n        struct passwd* rax_6 = getpwnam(&var_148);\n        if (rax_6 == 0)\n        {\n            __printf_chk(1, \" %19s\", dcgettext(nullptr, \"        ???\", 5));\n        }\n        else\n        {\n            char* rdx_3 = rax_6->pw_gecos;\n            char* rax_7 = strchr(rdx_3, 0x2c);\n            char* rdx_4 = rdx_3;\n            if (rax_7 != 0)\n            {\n                *rax_7 = 0;\n                rdx_4 = rax_6->pw_gecos;\n            }\n            void* rax_8 = sub_402210(rdx_4, rax_6->pw_name);\n            __printf_chk(1, \" %-19.19s\", rax_8);\n            free(rax_8);\n        }\n    }\n    __printf_chk(1, \" %c%-8.*s\", r14_2, 0x20, r12);\n    if (data_60a277 != 0)\n    {\n        char* rdx_7;\n        if (r15 == 0)\n        {\n            rdx_7 = dcgettext(nullptr, \"?????\", 5);\n        }\n        else\n        {\n            int64_t rcx_6 = data_60a388;\n            if (rcx_6 == 0)\n            {\n                time(&data_60a388);\n                rcx_6 = data_60a388;\n            }\n            int64_t rcx_7 = (rcx_6 - r15);\n            rdx_7 = \"     \";\n            if (rcx_7 > 0x3b)\n            {\n                if (rcx_7 > 0x1517f)\n                {\n                    int64_t rax_33;\n                    int64_t rdx_18;\n                    rdx_18 = HIGHD((rcx_7 * 0x1845c8a0ce512957));\n                    rax_33 = LOWD((rcx_7 * 0x1845c8a0ce512957));\n                    __sprintf_chk(&data_60a370, 1, 0x16, \"%lud\", ((rdx_18 >> 0xd) - (rcx_7 >> 0x3f)));\n                    rdx_7 = &data_60a370;\n                }\n                else\n                {\n                    int64_t rax_21;\n                    int64_t rdx_13;\n                    rdx_13 = HIGHD((rcx_7 * 0x48d159e26af37c05));\n                    rax_21 = LOWD((rcx_7 * 0x48d159e26af37c05));\n                    int64_t rax_26;\n                    int64_t rdx_15;\n                    rdx_15 = HIGHD(((rcx_7 - (((rdx_13 >> 0xa) - (rcx_7 >> 0x3f)) * 0xe10)) * -0x7777777777777777));\n                    rax_26 = LOWD(((rcx_7 - (((rdx_13 >> 0xa) - (rcx_7 >> 0x3f)) * 0xe10)) * -0x7777777777777777));\n                    __sprintf_chk(&data_60a370, 1, 0x16, \"%02d:%02d\");\n                    rdx_7 = &data_60a370;\n                }\n            }\n        }\n        __printf_chk(1, \" %-6s\", rdx_7);\n    }\n    var_148 = *(arg1 + 0x154);\n    struct tm* rax_14 = localtime(&var_148);\n    void* rdx_9;\n    if (rax_14 == 0)\n    {\n        rdx_9 = sub_4030e0(var_148, &data_60a340);\n    }\n    else\n    {\n        strftime(&data_60a340, 0x21, data_60a398, rax_14);\n        rdx_9 = &data_60a340;\n    }\n    __printf_chk(1, \" %s\", rdx_9);\n    if (data_60a270 != 0)\n    {\n        char rdx_10 = *(arg1 + 0x4c);\n        if (rdx_10 != 0)\n        {\n            void* rax_16 = (arg1 + 0x4c);\n            int64_t* rcx_4 = &var_148;\n            void* rbp_1 = (arg1 + 0x14c);\n            do\n            {\n                rcx_4 = (rcx_4 + 1);\n                rax_16 = (rax_16 + 1);\n                *(rcx_4 - 1) = rdx_10;\n                if (rbp_1 <= rax_16)\n                {\n                    break;\n                }\n                rdx_10 = *rax_16;\n            } while (rdx_10 != 0);\n            *rcx_4 = 0;\n            char* rax_17 = strchr(&var_148, 0x3a);\n            int64_t* rbx_3;\n            void* rbp_2;\n            if (rax_17 != 0)\n            {\n                *rax_17 = 0;\n                rbp_2 = &rax_17[1];\n                int64_t* rax_35;\n                if (var_148 != 0)\n                {\n                    rax_35 = sub_402fa0(&var_148);\n                    rbx_3 = rax_35;\n                }\n                if ((var_148 == 0 || (var_148 != 0 && rax_35 == 0)))\n                {\n                    rbx_3 = &var_148;\n                }\n                if (rbp_2 != 0)\n                {\n                    __printf_chk(1, \" %s:%s\", rbx_3, rbp_2);\n                }\n            }\n            else\n            {\n                int64_t* rax_36;\n                if (var_148 != 0)\n                {\n                    rax_36 = sub_402fa0(&var_148);\n                    rbx_3 = rax_36;\n                }\n                if ((var_148 == 0 || (var_148 != 0 && rax_36 == 0)))\n                {\n                    rbx_3 = &var_148;\n                }\n            }\n            if (((rax_17 != 0 && rbp_2 == 0) || rax_17 == 0))\n            {\n                __printf_chk(1, \" %s\", rbx_3);\n            }\n            if (rbx_3 != &var_148)\n            {\n                free(rbx_3);\n            }\n        }\n    }\n    uint64_t* const rdi_8 = stdout;\n    char* rax_19 = stdout[5];\n    if (rax_19 >= stdout[6])\n    {\n        rax_19 = __overflow(rdi_8, 0xa);\n    }\n    else\n    {\n        stdout[5] = &rax_19[1];\n        *rax_19 = 0xa;\n    }\n    return rax_19;\n}\n\n"
        },
        {
            "funcName": "sub_402bd0",
            "funcStartAddr": "0x402bd0",
            "funcEndAddr": "0x402f05",
            "decompiledFuncCode": "int64_t sub_402bd0(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_60a3e8;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [OPTION]... [USER]...\\n\", 5), rbp);\n        fputs_unlocked(dcgettext(nullptr, \"\\n  -l              produce long\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -f              omit the line \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        __printf_chk(1, dcgettext(nullptr, \"\\nA lightweight 'finger' program\u2026\", 5), \"/var/run/utmp\");\n        void* const var_88 = &data_406eb8;\n        void* const* rax_10 = &var_88;\n        void* const var_78_1 = \"coreutils\";\n        void* const var_70_1 = \"Multi-call invocation\";\n        void* const var_68_1 = \"sha224sum\";\n        void* const var_60_1 = \"sha2 utilities\";\n        void* const var_58_1 = \"sha256sum\";\n        void* const var_50_1 = \"sha2 utilities\";\n        void* const var_48_1 = \"sha384sum\";\n        void* const var_40_1 = \"sha2 utilities\";\n        void* const var_38_1 = \"sha512sum\";\n        void* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_10 = &rax_10[2];\n            void* const rdi_6 = *rax_10;\n            c_1 = false;\n            z_1 = (rdi_6 & rdi_6) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            void* const rsi_7 = \"pinky\";\n            int64_t rcx_2 = 6;\n            while (rcx_2 != 0)\n            {\n                char temp0_1 = *rsi_7;\n                char temp1_1 = *rdi_6;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_7 = (rsi_7 + 1);\n                rdi_6 = (rdi_6 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        void* const rbp_1 = rax_10[1];\n        char* rax_21;\n        int32_t rax_22;\n        void* const r12_1;\n        if (rbp_1 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_5;\n            uint64_t r8_2;\n            ssize_t r9_2;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_21 = setlocale(5, nullptr, rdx_5, rcx_5, r8_2, r9_2, var_88, \"test invocation\");\n            if (rax_21 != 0)\n            {\n                rax_22 = strncmp(rax_21, &data_406f3c, 3);\n                if (rax_22 != 0)\n                {\n                    rbp_1 = \"pinky\";\n                }\n            }\n            if ((rax_21 == 0 || (rax_21 != 0 && rax_22 == 0)))\n            {\n                rbp_1 = \"pinky\";\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"pinky\");\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_3;\n            uint64_t r8_1;\n            ssize_t r9_1;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_13 = setlocale(5, nullptr, rdx_3, rcx_3, r8_1, r9_1, var_88, \"test invocation\");\n            if (rax_13 == 0)\n            {\n                goto label_402df8;\n            }\n            if (strncmp(rax_13, &data_406f3c, 3) == 0)\n            {\n                goto label_402df8;\n            }\n        }\n        if ((((rbp_1 == 0 && rax_21 != 0) && rax_22 != 0) || rbp_1 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), \"pinky\");\n        label_402df8:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"pinky\");\n            if (rbp_1 != \"pinky\")\n            {\n                r12_1 = &data_4087cc[0x1b];\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_1, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_402f10",
            "funcStartAddr": "0x402f10",
            "funcEndAddr": "0x402f9e",
            "decompiledFuncCode": "char* sub_402f10(char* arg1, int32_t* arg2)\n{\n    data_60a3a0 = 2;\n    struct addrinfo* var_20 = nullptr;\n    int32_t rax = getaddrinfo(arg1, nullptr, &data_60a3a0, &var_20);\n    char* rbx_1;\n    if (rax != 0)\n    {\n        rbx_1 = nullptr;\n        if (arg2 != 0)\n        {\n            *arg2 = rax;\n            return 0;\n        }\n    }\n    else\n    {\n        struct addrinfo* r12_1 = var_20;\n        char* rdi = r12_1->ai_canonname;\n        if (rdi == 0)\n        {\n            rdi = arg1;\n        }\n        char* rax_1 = strdup(rdi);\n        rbx_1 = rax_1;\n        if ((rax_1 == 0 && arg2 != 0))\n        {\n            *arg2 = 0xfffffff6;\n        }\n        freeaddrinfo(r12_1);\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_402fa0",
            "funcStartAddr": "0x402fa0",
            "funcEndAddr": "0x402faa",
            "decompiledFuncCode": "int64_t sub_402fa0(char* arg1)\n{\n    /* tailcall */\n    return sub_402f10(arg1, &data_60a3d0);\n}\n\n"
        },
        {
            "funcName": "sub_402fb0",
            "funcStartAddr": "0x402fb0",
            "funcEndAddr": "0x402fbb",
            "decompiledFuncCode": "int64_t sub_402fb0()\n{\n    /* tailcall */\n    return gai_strerror(data_60a3d0);\n}\n\n"
        },
        {
            "funcName": "sub_402fc0",
            "funcStartAddr": "0x402fc0",
            "funcEndAddr": "0x402fc8",
            "decompiledFuncCode": "int64_t sub_402fc0(int64_t arg1)\n{\n    data_60a3e0 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_402fd0",
            "funcStartAddr": "0x402fd0",
            "funcEndAddr": "0x402fd8",
            "decompiledFuncCode": "int64_t sub_402fd0(char arg1)\n{\n    data_60a3d8 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_402fe0",
            "funcStartAddr": "0x402fe0",
            "funcEndAddr": "0x40307e",
            "decompiledFuncCode": "void sub_402fe0(void* arg1)\n{\n    int32_t rax = sub_406770(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_60a3d8 == 0 || (data_60a3d8 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_60a3e0;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_404bf0(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_60a3d8 != 0) && *rax_1 == 0x20)) && sub_406770(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_60a280);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_403080",
            "funcStartAddr": "0x403080",
            "funcEndAddr": "0x4030de",
            "decompiledFuncCode": "int64_t sub_403080()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_407578;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            void* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4030e0",
            "funcStartAddr": "0x4030e0",
            "funcEndAddr": "0x40317c",
            "decompiledFuncCode": "void* sub_4030e0(uint64_t arg1, void* arg2)\n{\n    void* rcx = (arg2 + 0x14);\n    *(arg2 + 0x14) = 0;\n    if (arg1 < 0)\n    {\n        void* rsi;\n        while (true)\n        {\n            rsi = (rcx - 1);\n            int64_t rax_7;\n            int64_t rdx_3;\n            rdx_3 = HIGHD((arg1 * 0x6666666666666667));\n            rax_7 = LOWD((arg1 * 0x6666666666666667));\n            int64_t rdx_5 = ((rdx_3 >> 2) - (arg1 >> 0x3f));\n            char rax_12 = ((0x30 + (rdx_5 * 0xa)) - arg1);\n            arg1 = rdx_5;\n            *(rcx - 1) = rax_12;\n            if (rdx_5 == 0)\n            {\n                break;\n            }\n            rcx = rsi;\n        }\n        *(rsi - 1) = 0x2d;\n        return (rcx - 2);\n    }\n    uint64_t rdx_2;\n    do\n    {\n        rcx = (rcx - 1);\n        int64_t rax_2;\n        int64_t rdx_1;\n        rdx_1 = HIGHD((arg1 * -0x3333333333333333));\n        rax_2 = LOWD((arg1 * -0x3333333333333333));\n        rdx_2 = (rdx_1 >> 3);\n        char rax_3 = (rdx_2 + (rdx_2 << 2));\n        *rcx = ((arg1 - (rax_3 + rax_3)) + 0x30);\n        arg1 = rdx_2;\n    } while (rdx_2 != 0);\n    return rcx;\n}\n\n"
        },
        {
            "funcName": "sub_403180",
            "funcStartAddr": "0x403180",
            "funcEndAddr": "0x403219",
            "decompiledFuncCode": "char* sub_403180(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_4075c0;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_60a3e8 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_403220",
            "funcStartAddr": "0x403220",
            "funcEndAddr": "0x403312",
            "decompiledFuncCode": "char* sub_403220(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_4067d0();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_403301:\n                void* const rbx_1 = &data_4075c4;\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_403301;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_403301;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_403301;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_403301;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_403301;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_403301;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_403301;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_4075cd;\n            if (cond:2_1)\n            {\n                rbx = &data_4075ca;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_403301;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_403301;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_403301;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_403301;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_403301;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_4075d1;\n            if (cond:1_1)\n            {\n                rbx = &data_4075c6;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_403320",
            "funcStartAddr": "0x401c90",
            "funcEndAddr": "0x404541",
            "decompiledFuncCode": "int64_t sub_403320(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    char const* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n    label_4033b8:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_40372c:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_403774;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_403320(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char const rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_40378b;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_4038c5;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_403515;\n                            }\n                            goto label_403800;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_4038c5;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_4036f0;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_4036f0:\n                            if (var_c0 == 0)\n                            {\n                                goto label_4036fb;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_403557:\n                            if (var_5c == 0)\n                            {\n                                goto label_403568;\n                            }\n                        label_403720:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_403728;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_40395b;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_40395b:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_40396a:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_40372c;\n                            }\n                            goto label_4036f0;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_4036f0;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_4036f0;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_40395b;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_4034f6;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_4034f6:\n                            if (var_5c == 0)\n                            {\n                                goto label_403515;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_403515;\n                            }\n                            goto label_40396a;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_4034ed:\n                            if (r12_1 != 0)\n                            {\n                                goto label_4036fb;\n                            }\n                            goto label_4034f6;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_403920:\n                            rdx = r11_1 == 2;\n                        label_403515:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_40361c;\n                            }\n                            goto label_40351f;\n                        }\n                        case 0x27:\n                        {\n                            goto label_40369d;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_40366d;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_4036ca;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_40445d;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_403634;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_4034c9;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_403ac0;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_403ac0;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_404410:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_403774:\n                            rbx_1 = sub_403320(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_40378b:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_4038c5;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_403817;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_4038c5;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_4037e0:\n                                r13 = 0;\n                                goto label_40359b;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_403568:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_40359b:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_4035a5;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_4035a5:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_4035ad;\n                            }\n                            case 9:\n                            {\n                                goto label_403790;\n                            }\n                            case 0xa:\n                            {\n                                goto label_403708;\n                            }\n                            case 0xb:\n                            {\n                                goto label_4037f0;\n                            }\n                            case 0xc:\n                            {\n                                goto label_4037d0;\n                            }\n                            case 0xd:\n                            {\n                                goto label_4037b9;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_403b1a;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_4037a5;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_403afa;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_403ae2;\n                            }\n                            case 0x27:\n                            {\n                                goto label_40369d;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_40366d;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_4036ca;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_4034c9;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_403ac0:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_4038c0:\n                            var_b8 = 0;\n                        label_4038c5:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_403914:\n                                if (rdx == 0)\n                                {\n                                    goto label_403920;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_403e11:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_403634;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_40372c;\n                                }\n                                r13 = var_98;\n                                goto label_4035ad;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_4064e0(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_40372c;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_403e11;\n                            }\n                            goto label_403914;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_403800:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_40372c;\n                                }\n                                var_b8 = 0;\n                            label_403817:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_403862;\n                                    }\n                                    rax_8 = r10;\n                                label_40385a:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_403862:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_40361c;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_4038a3;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_40385a;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_40361c;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_4038c0;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_4037d5;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_40370d;\n                            }\n                            case 9:\n                            {\n                            label_403790:\n                                rbp_3 = 0x74;\n                                goto label_40370d;\n                            }\n                            case 0xa:\n                            {\n                            label_403708:\n                                rbp_3 = 0x6e;\n                            label_40370d:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_403720;\n                                }\n                                goto label_403568;\n                            }\n                            case 0xb:\n                            {\n                            label_4037f0:\n                                rbp_3 = 0x76;\n                                goto label_4037d5;\n                            }\n                            case 0xc:\n                            {\n                            label_4037d0:\n                                rbp_3 = 0x66;\n                            label_4037d5:\n                                if (var_5c == 0)\n                                {\n                                    goto label_4037e0;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_403728:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_40372c;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_4037b9:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_4036f0;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_403b1a:\n                                rbp_3 = 0x20;\n                                goto label_403ae2;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_4037a5:\n                                rdx = 0;\n                            label_4036fb:\n                                r13 = 0;\n                                goto label_403515;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_403afa:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_403515;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_40351f:\n                                rax_8 = 0;\n                                goto label_403521;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_403ae2:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_403521;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_40369d:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_403515;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_40445d;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_40361c;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_40366d:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_40445d:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_40372c;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_40361c:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_403557;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_403634;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_403515;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_403c00:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_403515;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_403c00;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_403c00;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_403c00;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_403c00;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_404410;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_4038a3:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_40361c;\n                                }\n                            label_403521:\n                                if (arg7 == 0)\n                                {\n                                    goto label_40361c;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_40361c;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_403557;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_4036ca:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_4036f0;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_403634:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_4035ad;\n                                }\n                            label_4035ad:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_4035b6;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_4035b6:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_4034c9:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_4036fb;\n                                }\n                                goto label_4034ed;\n                            }\n                        }\n                    }\n                }\n            }\n        label_403ba6:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = \"'\";\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_4033b8;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = \"'\";\n                goto label_4033b8;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"'\";\n            goto label_4033b8;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_4075c4;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_4075c4;\n            }\n            goto label_4033b8;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_4075c4;\n            goto label_4033b8;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_4033b8;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_403220(&data_4075d5, r13);\n                arg9 = sub_403220(\"'\", r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_4033b8;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_403ba6;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n        goto label_4033b8;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_404550",
            "funcStartAddr": "0x401c95",
            "funcEndAddr": "0x4046ee",
            "decompiledFuncCode": "char* sub_404550(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_60a2d8;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_60a2f0 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_4055b0();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x60a2e0)\n        {\n            int64_t rax_9 = sub_4053c0(0, rsi_1);\n            int128_t zmm0 = data_60a2e0;\n            rbx = rax_9;\n            data_60a2d8 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_4053c0(rbx, rsi_1);\n            data_60a2d8 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_60a2f0;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_60a2f0 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_403320(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        size_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x60a400)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_405360(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_403320(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_4046f0",
            "funcStartAddr": "0x4046f0",
            "funcEndAddr": "0x404724",
            "decompiledFuncCode": "int64_t sub_4046f0(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x60a500;\n    }\n    int64_t rax_1 = sub_405560(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_404730",
            "funcStartAddr": "0x404730",
            "funcEndAddr": "0x40473f",
            "decompiledFuncCode": "uint64_t sub_404730(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60a500;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_404740",
            "funcStartAddr": "0x404740",
            "funcEndAddr": "0x40474f",
            "decompiledFuncCode": "void sub_404740(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60a500;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_404750",
            "funcStartAddr": "0x404750",
            "funcEndAddr": "0x404783",
            "decompiledFuncCode": "uint64_t sub_404750(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x60a500;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_404790",
            "funcStartAddr": "0x404790",
            "funcEndAddr": "0x4047a3",
            "decompiledFuncCode": "uint64_t sub_404790(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60a500;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4047b0",
            "funcStartAddr": "0x4047b0",
            "funcEndAddr": "0x4047db",
            "decompiledFuncCode": "void sub_4047b0(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60a500;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x60a500;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4047e0",
            "funcStartAddr": "0x4047e0",
            "funcEndAddr": "0x404852",
            "decompiledFuncCode": "int64_t sub_4047e0(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_60a500;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_403320(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_404860",
            "funcStartAddr": "0x404860",
            "funcEndAddr": "0x404941",
            "decompiledFuncCode": "char* sub_404860(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_60a500;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_403320(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_405360((rax_2 + 1));\n    sub_403320(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_404950",
            "funcStartAddr": "0x404950",
            "funcEndAddr": "0x40495a",
            "decompiledFuncCode": "int64_t sub_404950(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_404860(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_404960",
            "funcStartAddr": "0x404960",
            "funcEndAddr": "0x4049f5",
            "decompiledFuncCode": "uint64_t sub_404960()\n{\n    uint64_t rax_2 = data_60a2f0;\n    int64_t r12 = data_60a2d8;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x60a400)\n    {\n        rax_2 = free(rdi_2);\n        *data_60a2e0 = 0x100;\n        *(data_60a2e0 + 8) = 0x60a400;\n    }\n    if (r12 != 0x60a2e0)\n    {\n        rax_2 = free(r12);\n        data_60a2d8 = 0x60a2e0;\n    }\n    data_60a2f0 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_404a00",
            "funcStartAddr": "0x404a00",
            "funcEndAddr": "0x404a11",
            "decompiledFuncCode": "int64_t sub_404a00(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_404550(arg1, arg2, -1, &data_60a500);\n}\n\n"
        },
        {
            "funcName": "sub_404a20",
            "funcStartAddr": "0x404a20",
            "funcEndAddr": "0x404a2a",
            "decompiledFuncCode": "int64_t sub_404a20(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_404550(arg1, arg2, arg3, &data_60a500);\n}\n\n"
        },
        {
            "funcName": "sub_404a30",
            "funcStartAddr": "0x404a30",
            "funcEndAddr": "0x404a46",
            "decompiledFuncCode": "int64_t sub_404a30(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_404550(0, arg1, -1, &data_60a500);\n}\n\n"
        },
        {
            "funcName": "sub_404a50",
            "funcStartAddr": "0x404a50",
            "funcEndAddr": "0x404a62",
            "decompiledFuncCode": "int64_t sub_404a50(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_404550(0, arg1, arg2, &data_60a500);\n}\n\n"
        },
        {
            "funcName": "sub_404a70",
            "funcStartAddr": "0x401c9a",
            "funcEndAddr": "0x404ad8",
            "decompiledFuncCode": "char* sub_404a70(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_404550(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_404ae0",
            "funcStartAddr": "0x401c9f",
            "funcEndAddr": "0x404b44",
            "decompiledFuncCode": "char* sub_404ae0(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_404550(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_404b50",
            "funcStartAddr": "0x404b50",
            "funcEndAddr": "0x404b5c",
            "decompiledFuncCode": "int64_t sub_404b50(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_404a70(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_404b60",
            "funcStartAddr": "0x404b60",
            "funcEndAddr": "0x404b6f",
            "decompiledFuncCode": "int64_t sub_404b60(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_404ae0(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_404b70",
            "funcStartAddr": "0x404b70",
            "funcEndAddr": "0x404be0",
            "decompiledFuncCode": "char* sub_404b70(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_60a530;\n    int128_t var_48 = data_60a500;\n    int128_t var_38 = data_60a510;\n    int128_t var_28 = data_60a520;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_404550(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_404be0",
            "funcStartAddr": "0x404be0",
            "funcEndAddr": "0x404bed",
            "decompiledFuncCode": "int64_t sub_404be0(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_404b70(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_404bf0",
            "funcStartAddr": "0x404bf0",
            "funcEndAddr": "0x404c01",
            "decompiledFuncCode": "int64_t sub_404bf0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_404b70(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_404c10",
            "funcStartAddr": "0x404c10",
            "funcEndAddr": "0x404c1a",
            "decompiledFuncCode": "int64_t sub_404c10(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_404b70(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_404c20",
            "funcStartAddr": "0x401ca4",
            "funcEndAddr": "0x404c8e",
            "decompiledFuncCode": "char* sub_404c20(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_404550(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_404c90",
            "funcStartAddr": "0x404c90",
            "funcEndAddr": "0x404cfc",
            "decompiledFuncCode": "char* sub_404c90(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_60a500;\n    int128_t var_38 = data_60a510;\n    int128_t var_28 = data_60a520;\n    int64_t var_18 = data_60a530;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_404550(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404dc0",
            "funcStartAddr": "0x401ca9",
            "funcEndAddr": "0x40519d",
            "decompiledFuncCode": "int64_t sub_404dc0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_40832b, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4051a0",
            "funcStartAddr": "0x4051a0",
            "funcEndAddr": "0x4051c0",
            "decompiledFuncCode": "int64_t sub_4051a0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_404dc0(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_4051c0",
            "funcStartAddr": "0x4051c0",
            "funcEndAddr": "0x405220",
            "decompiledFuncCode": "int64_t sub_4051c0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_404dc0(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_405220",
            "funcStartAddr": "0x405220",
            "funcEndAddr": "0x4052dc",
            "decompiledFuncCode": "int64_t sub_405220(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_404dc0(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_4052e0",
            "funcStartAddr": "0x4052e0",
            "funcEndAddr": "0x405354",
            "decompiledFuncCode": "int64_t sub_4052e0()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_405360",
            "funcStartAddr": "0x405360",
            "funcEndAddr": "0x40537a",
            "decompiledFuncCode": "int64_t sub_405360(size_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_4055b0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4053c0",
            "funcStartAddr": "0x4053c0",
            "funcEndAddr": "0x4053f6",
            "decompiledFuncCode": "int64_t sub_4053c0(int64_t arg1, size_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_4055b0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40550a",
            "funcStartAddr": "0x40550a",
            "funcEndAddr": "0x405510",
            "decompiledFuncCode": "int64_t sub_40550a() __noreturn\n{\n    sub_4055b0();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_405510",
            "funcStartAddr": "0x405510",
            "funcEndAddr": "0x405527",
            "decompiledFuncCode": "int64_t sub_405510(size_t arg1)\n{\n    /* tailcall */\n    return memset(sub_405360(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_405530",
            "funcStartAddr": "0x405530",
            "funcEndAddr": "0x40555e",
            "decompiledFuncCode": "int64_t sub_405530(size_t arg1, size_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_4055b0();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_405560",
            "funcStartAddr": "0x405560",
            "funcEndAddr": "0x405588",
            "decompiledFuncCode": "int64_t sub_405560(int64_t arg1, size_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_405360(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405590",
            "funcStartAddr": "0x405590",
            "funcEndAddr": "0x4055a3",
            "decompiledFuncCode": "int64_t sub_405590(char* arg1)\n{\n    /* tailcall */\n    return sub_405560(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_4055b0",
            "funcStartAddr": "0x4055b0",
            "funcEndAddr": "0x4055e1",
            "decompiledFuncCode": "int64_t sub_4055b0() __noreturn\n{\n    error(data_60a280, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4055f0",
            "funcStartAddr": "0x4055f0",
            "funcEndAddr": "0x40566b",
            "decompiledFuncCode": "int64_t sub_4055f0(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_405670(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_405670",
            "funcStartAddr": "0x405670",
            "funcEndAddr": "0x4056b0",
            "decompiledFuncCode": "int64_t sub_405670(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_4056b0(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_4056b0",
            "funcStartAddr": "0x4056b0",
            "funcEndAddr": "0x405707",
            "decompiledFuncCode": "off64_t sub_4056b0(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_405710",
            "funcStartAddr": "0x405710",
            "funcEndAddr": "0x4057ef",
            "decompiledFuncCode": "uint64_t sub_405710(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_4057f0",
            "funcStartAddr": "0x4057f0",
            "funcEndAddr": "0x405e0c",
            "decompiledFuncCode": "uint64_t sub_4057f0(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_405a20;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_405946;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_405946;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_405946:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_405a20:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_405a4e;\n                }\n                *arg5 = r12;\n            label_405a4e:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_405a6c;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_405a6c:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_405a6c;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_4059de;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_4059de:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_405e10",
            "funcStartAddr": "0x405e10",
            "funcEndAddr": "0x4063d6",
            "decompiledFuncCode": "uint64_t sub_405e10(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_40604c;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_405ed8;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_405ed8:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_405710(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_4087c9;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_405710(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_40604c;\n                }\n                *arg7 = rdx_2;\n            label_40604c:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_406150;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_4087c9;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_4061c0;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_406150;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_406150;\n                            }\n                            goto label_406111;\n                        }\n                    label_406111:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_4057f0(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_4087ca);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_406150:\n                            rdx = &r14_1[1];\n                        label_405f91:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_40618e;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_40618e:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_4087e8;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_4061c0:\n                                        r14_2 = sub_4057f0(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_40627d;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_40627d:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_40604c;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_405ed8;\n        }\n        goto label_405f91;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_406440",
            "funcStartAddr": "0x406440",
            "funcEndAddr": "0x406458",
            "decompiledFuncCode": "uint64_t sub_406440(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_4064e0",
            "funcStartAddr": "0x4064e0",
            "funcEndAddr": "0x40655a",
            "decompiledFuncCode": "uint64_t sub_4064e0(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_4087cc[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_40650a;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_40650a:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_403080() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_406560",
            "funcStartAddr": "0x406560",
            "funcEndAddr": "0x4065be",
            "decompiledFuncCode": "char* sub_406560(void* arg1)\n{\n    char* rax = sub_405360(0x21);\n    strncpy(rax, (arg1 + 0x2c), 0x20);\n    rax[0x20] = 0;\n    void* rax_2 = &rax[strlen(rax)];\n    if (rax < rax_2)\n    {\n        while (*(rax_2 - 1) == 0x20)\n        {\n            rax_2 = (rax_2 - 1);\n            *rax_2 = 0;\n            if (rax == rax_2)\n            {\n                break;\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4065c0",
            "funcStartAddr": "0x4065c0",
            "funcEndAddr": "0x406768",
            "decompiledFuncCode": "int64_t sub_4065c0(char* arg1, int64_t* arg2, int64_t* arg3, int32_t arg4)\n{\n    int64_t r14 = 0;\n    int32_t r13_1 = (arg4 & 1);\n    int32_t r12_1 = (arg4 & 2);\n    int64_t rbp = 0;\n    int64_t rbx = 0;\n    utmpxname(arg1);\n    setutxent();\nlabel_4065f7:\n    struct utmpx* rax_1 = getutxent();\n    struct utmpx* r15_1 = rax_1;\n    if (rax_1 != 0)\n    {\n        while (true)\n        {\n            int32_t rax_12;\n            uint64_t rdi_2;\n            if (((r15_1->ut_type == 7 && r15_1->ut_user[0] != 0) && r13_1 != 0))\n            {\n                rdi_2 = r15_1->ut_pid;\n                if (rdi_2 > 0)\n                {\n                    rax_12 = kill(rdi_2, 0);\n                    if (rax_12 < 0)\n                    {\n                        if (*__errno_location() == 3)\n                        {\n                            goto label_4065f7;\n                        }\n                        if (rbx != rbp)\n                        {\n                            goto label_406624;\n                        }\n                    }\n                }\n            }\n            int64_t rdx;\n            if ((((((((r15_1->ut_user[0] == 0 || (r15_1->ut_user[0] != 0 && r15_1->ut_type != 7)) && r12_1 == 0) || ((r15_1->ut_user[0] != 0 && r15_1->ut_type == 7) && r13_1 == 0)) || (((r15_1->ut_user[0] != 0 && r15_1->ut_type == 7) && r13_1 != 0) && rdi_2 <= 0)) || ((((r15_1->ut_user[0] != 0 && r15_1->ut_type == 7) && r13_1 != 0) && rdi_2 > 0) && rax_12 >= 0)) && rbx == rbp) || ((((r15_1->ut_user[0] != 0 && r15_1->ut_type == 7) && r13_1 != 0) && rdi_2 > 0) && rax_12 < 0)))\n            {\n                int64_t rdx_1;\n                int64_t rsi_5;\n                if (r14 == 0)\n                {\n                    if (rbx == 0)\n                    {\n                        rsi_5 = 0x180;\n                        rbp = 1;\n                        rdx_1 = 1;\n                    label_406717:\n                        rdx = rdx_1;\n                        r14 = sub_4053c0(r14, rsi_5);\n                        goto label_406628;\n                    }\n                    int64_t rax_15;\n                    bool rdx_2;\n                    rdx_2 = HIGHD((0x180 * rbx));\n                    rax_15 = LOWD((0x180 * rbx));\n                    uint64_t rdx_3 = ((0x180 * rbx) >> 0x40) != 0;\n                    if (rax_15 < 0)\n                    {\n                        goto label_406763;\n                    }\n                    if (rdx_3 != 0)\n                    {\n                        goto label_406763;\n                    }\n                    rdx_1 = (rbx + 1);\n                    rsi_5 = (rbx * 0x180);\n                    goto label_406717;\n                }\n                if (rbx > 0x38e38e38e38e37)\n                {\n                label_406763:\n                    sub_4055b0();\n                    /* no return */\n                }\n                rdx_1 = (rbx + 1);\n                rbp = ((rbx >> 1) + rdx_1);\n                rsi_5 = (rbp * 0x180);\n                goto label_406717;\n            }\n            if (((((((r15_1->ut_user[0] == 0 || (r15_1->ut_user[0] != 0 && r15_1->ut_type != 7)) && r12_1 == 0) || ((r15_1->ut_user[0] != 0 && r15_1->ut_type == 7) && r13_1 == 0)) || (((r15_1->ut_user[0] != 0 && r15_1->ut_type == 7) && r13_1 != 0) && rdi_2 <= 0)) || ((((r15_1->ut_user[0] != 0 && r15_1->ut_type == 7) && r13_1 != 0) && rdi_2 > 0) && rax_12 >= 0)) && rbx != rbp))\n            {\n            label_406624:\n                rdx = (rbx + 1);\n            label_406628:\n                int64_t rax_2 = (rbx * 3);\n                int64_t rsi;\n                rsi = r15_1->ut_type;\n                *rsi[4] = r15_1->ut_pid;\n                rbx = rdx;\n                int64_t* rax_4 = ((rax_2 << 7) + r14);\n                *rax_4 = rsi;\n                int64_t rsi_1;\n                rsi_1 = r15_1->__glibc_reserved[0xc];\n                *rsi_1[1] = r15_1->__glibc_reserved[0xd];\n                *rsi_1[2] = r15_1->__glibc_reserved[0xe];\n                *rsi_1[3] = r15_1->__glibc_reserved[0xf];\n                *rsi_1[4] = r15_1->__glibc_reserved[0x10];\n                *rsi_1[5] = r15_1->__glibc_reserved[0x11];\n                *rsi_1[6] = r15_1->__glibc_reserved[0x12];\n                *rsi_1[7] = r15_1->__glibc_reserved[0x13];\n                int64_t* rdi_1 = (&rax_4[1] & 0xfffffffffffffff8);\n                rax_4[0x2f] = rsi_1;\n                void* rax_5 = (rax_4 - rdi_1);\n                void* rsi_3 = (r15_1 - rax_5);\n                for (uint64_t rcx = ((rax_5 + 0x180) >> 3); rcx != 0; rcx = (rcx - 1))\n                {\n                    *rdi_1 = *rsi_3;\n                    rdi_1 = &rdi_1[1];\n                    rsi_3 = (rsi_3 + 8);\n                }\n                struct utmpx* rax_8 = getutxent();\n                r15_1 = rax_8;\n                if (rax_8 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            if (((r15_1->ut_user[0] == 0 || (r15_1->ut_user[0] != 0 && r15_1->ut_type != 7)) && r12_1 != 0))\n            {\n                goto label_4065f7;\n            }\n        }\n    }\n    endutxent();\n    *arg2 = rbx;\n    *arg3 = r14;\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_406770",
            "funcStartAddr": "0x406770",
            "funcEndAddr": "0x4067cd",
            "decompiledFuncCode": "uint64_t sub_406770(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_4055f0(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4067d0",
            "funcStartAddr": "0x4067d0",
            "funcEndAddr": "0x406d32",
            "decompiledFuncCode": "char* sub_4067d0()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_60a578;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_4087cc[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        size_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            size_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_4068cc;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_406916;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_4068cc:\n            r15 = &data_4087cc[0x1b];\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_406916:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, \"r\");\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_4069cc:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_406b5b;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_406a08:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_406a08;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_406a42:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_406a42;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_4087cc[0x1b];\n                                    free(rdi_26);\n                                    sub_4055f0(rax_12);\n                                    goto label_406957;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_406c1b:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_406c1b;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_406c69:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_406c69;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_4069cc;\n                        }\n                        break;\n                    }\n                label_406b5b:\n                    sub_4055f0(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_4087cc[0x1b];\n            }\n        label_406957:\n            free(rbp_3);\n        }\n        data_60a578 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x406d40",
            "funcEndAddr": "0x406d9d",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x406da0",
            "funcEndAddr": "0x406da1",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_406db0",
            "funcStartAddr": "0x406db0",
            "funcEndAddr": "0x406dc8",
            "decompiledFuncCode": "int64_t sub_406db0(void (* arg1)(void*))\n{\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, data_60a268);\n}\n\n"
        },
        {
            "funcName": "sub_406dc8",
            "funcStartAddr": "0x406dc8",
            "funcEndAddr": "0x406de8",
            "decompiledFuncCode": "int64_t sub_406dc8(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_609e30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}