{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_install.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 375,
    "funcInfo": [
        {
            "funcName": "sub_4027f0",
            "funcStartAddr": "0x4027f0",
            "funcEndAddr": "0x4027fc",
            "decompiledFuncCode": "int64_t sub_4027f0()\n{\n    int64_t var_8 = data_61f008;\n    /* jump -> data_61f010 */\n}\n\n"
        },
        {
            "funcName": "sub_402806",
            "funcStartAddr": "0x402806",
            "funcEndAddr": "0x402810",
            "decompiledFuncCode": "int64_t sub_402806()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402816",
            "funcStartAddr": "0x402816",
            "funcEndAddr": "0x402820",
            "decompiledFuncCode": "int64_t sub_402816()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402826",
            "funcStartAddr": "0x402826",
            "funcEndAddr": "0x402830",
            "decompiledFuncCode": "int64_t sub_402826()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402836",
            "funcStartAddr": "0x402836",
            "funcEndAddr": "0x402840",
            "decompiledFuncCode": "int64_t sub_402836()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402846",
            "funcStartAddr": "0x402846",
            "funcEndAddr": "0x402850",
            "decompiledFuncCode": "int64_t sub_402846()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402856",
            "funcStartAddr": "0x402856",
            "funcEndAddr": "0x402860",
            "decompiledFuncCode": "int64_t sub_402856()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402866",
            "funcStartAddr": "0x402866",
            "funcEndAddr": "0x402870",
            "decompiledFuncCode": "int64_t sub_402866()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402876",
            "funcStartAddr": "0x402876",
            "funcEndAddr": "0x402880",
            "decompiledFuncCode": "int64_t sub_402876()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402886",
            "funcStartAddr": "0x402886",
            "funcEndAddr": "0x402890",
            "decompiledFuncCode": "int64_t sub_402886()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402896",
            "funcStartAddr": "0x402896",
            "funcEndAddr": "0x4028a0",
            "decompiledFuncCode": "int64_t sub_402896()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_4028a6",
            "funcStartAddr": "0x4028a6",
            "funcEndAddr": "0x4028b0",
            "decompiledFuncCode": "int64_t sub_4028a6()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_4028b6",
            "funcStartAddr": "0x4028b6",
            "funcEndAddr": "0x4028c0",
            "decompiledFuncCode": "int64_t sub_4028b6()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_4028c6",
            "funcStartAddr": "0x4028c6",
            "funcEndAddr": "0x4028d0",
            "decompiledFuncCode": "int64_t sub_4028c6()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_4028d6",
            "funcStartAddr": "0x4028d6",
            "funcEndAddr": "0x4028e0",
            "decompiledFuncCode": "int64_t sub_4028d6()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_4028e6",
            "funcStartAddr": "0x4028e6",
            "funcEndAddr": "0x4028f0",
            "decompiledFuncCode": "int64_t sub_4028e6()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_4028f6",
            "funcStartAddr": "0x4028f6",
            "funcEndAddr": "0x402900",
            "decompiledFuncCode": "int64_t sub_4028f6()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402906",
            "funcStartAddr": "0x402906",
            "funcEndAddr": "0x402910",
            "decompiledFuncCode": "int64_t sub_402906()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402916",
            "funcStartAddr": "0x402916",
            "funcEndAddr": "0x402920",
            "decompiledFuncCode": "int64_t sub_402916()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402926",
            "funcStartAddr": "0x402926",
            "funcEndAddr": "0x402930",
            "decompiledFuncCode": "int64_t sub_402926()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402936",
            "funcStartAddr": "0x402936",
            "funcEndAddr": "0x402940",
            "decompiledFuncCode": "int64_t sub_402936()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402946",
            "funcStartAddr": "0x402946",
            "funcEndAddr": "0x402950",
            "decompiledFuncCode": "int64_t sub_402946()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402956",
            "funcStartAddr": "0x402956",
            "funcEndAddr": "0x402960",
            "decompiledFuncCode": "int64_t sub_402956()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402966",
            "funcStartAddr": "0x402966",
            "funcEndAddr": "0x402970",
            "decompiledFuncCode": "int64_t sub_402966()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402976",
            "funcStartAddr": "0x402976",
            "funcEndAddr": "0x402980",
            "decompiledFuncCode": "int64_t sub_402976()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402986",
            "funcStartAddr": "0x402986",
            "funcEndAddr": "0x402990",
            "decompiledFuncCode": "int64_t sub_402986()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402996",
            "funcStartAddr": "0x402996",
            "funcEndAddr": "0x4029a0",
            "decompiledFuncCode": "int64_t sub_402996()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_4029a6",
            "funcStartAddr": "0x4029a6",
            "funcEndAddr": "0x4029b0",
            "decompiledFuncCode": "int64_t sub_4029a6()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_4029b6",
            "funcStartAddr": "0x4029b6",
            "funcEndAddr": "0x4029c0",
            "decompiledFuncCode": "int64_t sub_4029b6()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_4029c6",
            "funcStartAddr": "0x4029c6",
            "funcEndAddr": "0x4029d0",
            "decompiledFuncCode": "int64_t sub_4029c6()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_4029d6",
            "funcStartAddr": "0x4029d6",
            "funcEndAddr": "0x4029e0",
            "decompiledFuncCode": "int64_t sub_4029d6()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_4029e6",
            "funcStartAddr": "0x4029e6",
            "funcEndAddr": "0x4029f0",
            "decompiledFuncCode": "int64_t sub_4029e6()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_4029f6",
            "funcStartAddr": "0x4029f6",
            "funcEndAddr": "0x402a00",
            "decompiledFuncCode": "int64_t sub_4029f6()\n{\n    int64_t var_8 = 0x1f;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402a06",
            "funcStartAddr": "0x402a06",
            "funcEndAddr": "0x402a10",
            "decompiledFuncCode": "int64_t sub_402a06()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402a16",
            "funcStartAddr": "0x402a16",
            "funcEndAddr": "0x402a20",
            "decompiledFuncCode": "int64_t sub_402a16()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402a26",
            "funcStartAddr": "0x402a26",
            "funcEndAddr": "0x402a30",
            "decompiledFuncCode": "int64_t sub_402a26()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402a36",
            "funcStartAddr": "0x402a36",
            "funcEndAddr": "0x402a40",
            "decompiledFuncCode": "int64_t sub_402a36()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402a46",
            "funcStartAddr": "0x402a46",
            "funcEndAddr": "0x402a50",
            "decompiledFuncCode": "int64_t sub_402a46()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402a56",
            "funcStartAddr": "0x402a56",
            "funcEndAddr": "0x402a60",
            "decompiledFuncCode": "int64_t sub_402a56()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402a66",
            "funcStartAddr": "0x402a66",
            "funcEndAddr": "0x402a70",
            "decompiledFuncCode": "int64_t sub_402a66()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402a76",
            "funcStartAddr": "0x402a76",
            "funcEndAddr": "0x402a80",
            "decompiledFuncCode": "int64_t sub_402a76()\n{\n    int64_t var_8 = 0x27;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402a86",
            "funcStartAddr": "0x402a86",
            "funcEndAddr": "0x402a90",
            "decompiledFuncCode": "int64_t sub_402a86()\n{\n    int64_t var_8 = 0x28;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402a96",
            "funcStartAddr": "0x402a96",
            "funcEndAddr": "0x402aa0",
            "decompiledFuncCode": "int64_t sub_402a96()\n{\n    int64_t var_8 = 0x29;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402aa6",
            "funcStartAddr": "0x402aa6",
            "funcEndAddr": "0x402ab0",
            "decompiledFuncCode": "int64_t sub_402aa6()\n{\n    int64_t var_8 = 0x2a;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402ab6",
            "funcStartAddr": "0x402ab6",
            "funcEndAddr": "0x402ac0",
            "decompiledFuncCode": "int64_t sub_402ab6()\n{\n    int64_t var_8 = 0x2b;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402ac6",
            "funcStartAddr": "0x402ac6",
            "funcEndAddr": "0x402ad0",
            "decompiledFuncCode": "int64_t sub_402ac6()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402ad6",
            "funcStartAddr": "0x402ad6",
            "funcEndAddr": "0x402ae0",
            "decompiledFuncCode": "int64_t sub_402ad6()\n{\n    int64_t var_8 = 0x2d;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402ae6",
            "funcStartAddr": "0x402ae6",
            "funcEndAddr": "0x402af0",
            "decompiledFuncCode": "int64_t sub_402ae6()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402af6",
            "funcStartAddr": "0x402af6",
            "funcEndAddr": "0x402b00",
            "decompiledFuncCode": "int64_t sub_402af6()\n{\n    int64_t var_8 = 0x2f;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402b06",
            "funcStartAddr": "0x402b06",
            "funcEndAddr": "0x402b10",
            "decompiledFuncCode": "int64_t sub_402b06()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402b16",
            "funcStartAddr": "0x402b16",
            "funcEndAddr": "0x402b20",
            "decompiledFuncCode": "int64_t sub_402b16()\n{\n    int64_t var_8 = 0x31;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402b26",
            "funcStartAddr": "0x402b26",
            "funcEndAddr": "0x402b30",
            "decompiledFuncCode": "int64_t sub_402b26()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402b36",
            "funcStartAddr": "0x402b36",
            "funcEndAddr": "0x402b40",
            "decompiledFuncCode": "int64_t sub_402b36()\n{\n    int64_t var_8 = 0x33;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402b46",
            "funcStartAddr": "0x402b46",
            "funcEndAddr": "0x402b50",
            "decompiledFuncCode": "int64_t sub_402b46()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402b56",
            "funcStartAddr": "0x402b56",
            "funcEndAddr": "0x402b60",
            "decompiledFuncCode": "int64_t sub_402b56()\n{\n    int64_t var_8 = 0x35;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402b66",
            "funcStartAddr": "0x402b66",
            "funcEndAddr": "0x402b70",
            "decompiledFuncCode": "int64_t sub_402b66()\n{\n    int64_t var_8 = 0x36;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402b76",
            "funcStartAddr": "0x402b76",
            "funcEndAddr": "0x402b80",
            "decompiledFuncCode": "int64_t sub_402b76()\n{\n    int64_t var_8 = 0x37;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402b86",
            "funcStartAddr": "0x402b86",
            "funcEndAddr": "0x402b90",
            "decompiledFuncCode": "int64_t sub_402b86()\n{\n    int64_t var_8 = 0x38;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402b96",
            "funcStartAddr": "0x402b96",
            "funcEndAddr": "0x402ba0",
            "decompiledFuncCode": "int64_t sub_402b96()\n{\n    int64_t var_8 = 0x39;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402ba6",
            "funcStartAddr": "0x402ba6",
            "funcEndAddr": "0x402bb0",
            "decompiledFuncCode": "int64_t sub_402ba6()\n{\n    int64_t var_8 = 0x3a;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402bb6",
            "funcStartAddr": "0x402bb6",
            "funcEndAddr": "0x402bc0",
            "decompiledFuncCode": "int64_t sub_402bb6()\n{\n    int64_t var_8 = 0x3b;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402bc6",
            "funcStartAddr": "0x402bc6",
            "funcEndAddr": "0x402bd0",
            "decompiledFuncCode": "int64_t sub_402bc6()\n{\n    int64_t var_8 = 0x3c;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402bd6",
            "funcStartAddr": "0x402bd6",
            "funcEndAddr": "0x402be0",
            "decompiledFuncCode": "int64_t sub_402bd6()\n{\n    int64_t var_8 = 0x3d;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402be6",
            "funcStartAddr": "0x402be6",
            "funcEndAddr": "0x402bf0",
            "decompiledFuncCode": "int64_t sub_402be6()\n{\n    int64_t var_8 = 0x3e;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402bf6",
            "funcStartAddr": "0x402bf6",
            "funcEndAddr": "0x402c00",
            "decompiledFuncCode": "int64_t sub_402bf6()\n{\n    int64_t var_8 = 0x3f;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402c06",
            "funcStartAddr": "0x402c06",
            "funcEndAddr": "0x402c10",
            "decompiledFuncCode": "int64_t sub_402c06()\n{\n    int64_t var_8 = 0x40;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402c16",
            "funcStartAddr": "0x402c16",
            "funcEndAddr": "0x402c20",
            "decompiledFuncCode": "int64_t sub_402c16()\n{\n    int64_t var_8 = 0x41;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402c26",
            "funcStartAddr": "0x402c26",
            "funcEndAddr": "0x402c30",
            "decompiledFuncCode": "int64_t sub_402c26()\n{\n    int64_t var_8 = 0x42;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402c36",
            "funcStartAddr": "0x402c36",
            "funcEndAddr": "0x402c40",
            "decompiledFuncCode": "int64_t sub_402c36()\n{\n    int64_t var_8 = 0x43;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402c46",
            "funcStartAddr": "0x402c46",
            "funcEndAddr": "0x402c50",
            "decompiledFuncCode": "int64_t sub_402c46()\n{\n    int64_t var_8 = 0x44;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402c56",
            "funcStartAddr": "0x402c56",
            "funcEndAddr": "0x402c60",
            "decompiledFuncCode": "int64_t sub_402c56()\n{\n    int64_t var_8 = 0x45;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402c66",
            "funcStartAddr": "0x402c66",
            "funcEndAddr": "0x402c70",
            "decompiledFuncCode": "int64_t sub_402c66()\n{\n    int64_t var_8 = 0x46;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402c76",
            "funcStartAddr": "0x402c76",
            "funcEndAddr": "0x402c80",
            "decompiledFuncCode": "int64_t sub_402c76()\n{\n    int64_t var_8 = 0x47;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402c86",
            "funcStartAddr": "0x402c86",
            "funcEndAddr": "0x402c90",
            "decompiledFuncCode": "int64_t sub_402c86()\n{\n    int64_t var_8 = 0x48;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402c96",
            "funcStartAddr": "0x402c96",
            "funcEndAddr": "0x402ca0",
            "decompiledFuncCode": "int64_t sub_402c96()\n{\n    int64_t var_8 = 0x49;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402ca6",
            "funcStartAddr": "0x402ca6",
            "funcEndAddr": "0x402cb0",
            "decompiledFuncCode": "int64_t sub_402ca6()\n{\n    int64_t var_8 = 0x4a;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402cb6",
            "funcStartAddr": "0x402cb6",
            "funcEndAddr": "0x402cc0",
            "decompiledFuncCode": "int64_t sub_402cb6()\n{\n    int64_t var_8 = 0x4b;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402cc6",
            "funcStartAddr": "0x402cc6",
            "funcEndAddr": "0x402cd0",
            "decompiledFuncCode": "int64_t sub_402cc6()\n{\n    int64_t var_8 = 0x4c;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402cd6",
            "funcStartAddr": "0x402cd6",
            "funcEndAddr": "0x402ce0",
            "decompiledFuncCode": "int64_t sub_402cd6()\n{\n    int64_t var_8 = 0x4d;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402ce6",
            "funcStartAddr": "0x402ce6",
            "funcEndAddr": "0x402cf0",
            "decompiledFuncCode": "int64_t sub_402ce6()\n{\n    int64_t var_8 = 0x4e;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402cf6",
            "funcStartAddr": "0x402cf6",
            "funcEndAddr": "0x402d00",
            "decompiledFuncCode": "int64_t sub_402cf6()\n{\n    int64_t var_8 = 0x4f;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402d06",
            "funcStartAddr": "0x402d06",
            "funcEndAddr": "0x402d10",
            "decompiledFuncCode": "int64_t sub_402d06()\n{\n    int64_t var_8 = 0x50;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402d16",
            "funcStartAddr": "0x402d16",
            "funcEndAddr": "0x402d20",
            "decompiledFuncCode": "int64_t sub_402d16()\n{\n    int64_t var_8 = 0x51;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402d26",
            "funcStartAddr": "0x402d26",
            "funcEndAddr": "0x402d30",
            "decompiledFuncCode": "int64_t sub_402d26()\n{\n    int64_t var_8 = 0x52;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402d36",
            "funcStartAddr": "0x402d36",
            "funcEndAddr": "0x402d40",
            "decompiledFuncCode": "int64_t sub_402d36()\n{\n    int64_t var_8 = 0x53;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402d46",
            "funcStartAddr": "0x402d46",
            "funcEndAddr": "0x402d50",
            "decompiledFuncCode": "int64_t sub_402d46()\n{\n    int64_t var_8 = 0x54;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402d56",
            "funcStartAddr": "0x402d56",
            "funcEndAddr": "0x402d60",
            "decompiledFuncCode": "int64_t sub_402d56()\n{\n    int64_t var_8 = 0x55;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402d66",
            "funcStartAddr": "0x402d66",
            "funcEndAddr": "0x402d70",
            "decompiledFuncCode": "int64_t sub_402d66()\n{\n    int64_t var_8 = 0x56;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402d76",
            "funcStartAddr": "0x402d76",
            "funcEndAddr": "0x402d80",
            "decompiledFuncCode": "int64_t sub_402d76()\n{\n    int64_t var_8 = 0x57;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402d86",
            "funcStartAddr": "0x402d86",
            "funcEndAddr": "0x402d90",
            "decompiledFuncCode": "int64_t sub_402d86()\n{\n    int64_t var_8 = 0x58;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402d96",
            "funcStartAddr": "0x402d96",
            "funcEndAddr": "0x402da0",
            "decompiledFuncCode": "int64_t sub_402d96()\n{\n    int64_t var_8 = 0x59;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402da6",
            "funcStartAddr": "0x402da6",
            "funcEndAddr": "0x402db0",
            "decompiledFuncCode": "int64_t sub_402da6()\n{\n    int64_t var_8 = 0x5a;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402db6",
            "funcStartAddr": "0x402db6",
            "funcEndAddr": "0x402dc0",
            "decompiledFuncCode": "int64_t sub_402db6()\n{\n    int64_t var_8 = 0x5b;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402dc6",
            "funcStartAddr": "0x402dc6",
            "funcEndAddr": "0x402dd0",
            "decompiledFuncCode": "int64_t sub_402dc6()\n{\n    int64_t var_8 = 0x5c;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402dd6",
            "funcStartAddr": "0x402dd6",
            "funcEndAddr": "0x402de0",
            "decompiledFuncCode": "int64_t sub_402dd6()\n{\n    int64_t var_8 = 0x5d;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402de6",
            "funcStartAddr": "0x402de6",
            "funcEndAddr": "0x402df0",
            "decompiledFuncCode": "int64_t sub_402de6()\n{\n    int64_t var_8 = 0x5e;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402df6",
            "funcStartAddr": "0x402df6",
            "funcEndAddr": "0x402e00",
            "decompiledFuncCode": "int64_t sub_402df6()\n{\n    int64_t var_8 = 0x5f;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402e06",
            "funcStartAddr": "0x402e06",
            "funcEndAddr": "0x402e10",
            "decompiledFuncCode": "int64_t sub_402e06()\n{\n    int64_t var_8 = 0x60;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402e16",
            "funcStartAddr": "0x402e16",
            "funcEndAddr": "0x402e20",
            "decompiledFuncCode": "int64_t sub_402e16()\n{\n    int64_t var_8 = 0x61;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402e26",
            "funcStartAddr": "0x402e26",
            "funcEndAddr": "0x402e30",
            "decompiledFuncCode": "int64_t sub_402e26()\n{\n    int64_t var_8 = 0x62;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402e36",
            "funcStartAddr": "0x402e36",
            "funcEndAddr": "0x402e40",
            "decompiledFuncCode": "int64_t sub_402e36()\n{\n    int64_t var_8 = 0x63;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402e46",
            "funcStartAddr": "0x402e46",
            "funcEndAddr": "0x402e50",
            "decompiledFuncCode": "int64_t sub_402e46()\n{\n    int64_t var_8 = 0x64;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402e56",
            "funcStartAddr": "0x402e56",
            "funcEndAddr": "0x402e60",
            "decompiledFuncCode": "int64_t sub_402e56()\n{\n    int64_t var_8 = 0x65;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402e66",
            "funcStartAddr": "0x402e66",
            "funcEndAddr": "0x402e70",
            "decompiledFuncCode": "int64_t sub_402e66()\n{\n    int64_t var_8 = 0x66;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402e76",
            "funcStartAddr": "0x402e76",
            "funcEndAddr": "0x402e80",
            "decompiledFuncCode": "int64_t sub_402e76()\n{\n    int64_t var_8 = 0x67;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402e86",
            "funcStartAddr": "0x402e86",
            "funcEndAddr": "0x402e90",
            "decompiledFuncCode": "int64_t sub_402e86()\n{\n    int64_t var_8 = 0x68;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402e96",
            "funcStartAddr": "0x402e96",
            "funcEndAddr": "0x402ea0",
            "decompiledFuncCode": "int64_t sub_402e96()\n{\n    int64_t var_8 = 0x69;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402ea6",
            "funcStartAddr": "0x402ea6",
            "funcEndAddr": "0x402eb0",
            "decompiledFuncCode": "int64_t sub_402ea6()\n{\n    int64_t var_8 = 0x6a;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402eb6",
            "funcStartAddr": "0x402eb6",
            "funcEndAddr": "0x402ec0",
            "decompiledFuncCode": "int64_t sub_402eb6()\n{\n    int64_t var_8 = 0x6b;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402ec6",
            "funcStartAddr": "0x402ec6",
            "funcEndAddr": "0x402ed0",
            "decompiledFuncCode": "int64_t sub_402ec6()\n{\n    int64_t var_8 = 0x6c;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402ed6",
            "funcStartAddr": "0x402ed6",
            "funcEndAddr": "0x402ee0",
            "decompiledFuncCode": "int64_t sub_402ed6()\n{\n    int64_t var_8 = 0x6d;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402ee6",
            "funcStartAddr": "0x402ee6",
            "funcEndAddr": "0x402ef0",
            "decompiledFuncCode": "int64_t sub_402ee6()\n{\n    int64_t var_8 = 0x6e;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402ef6",
            "funcStartAddr": "0x402ef6",
            "funcEndAddr": "0x402f00",
            "decompiledFuncCode": "int64_t sub_402ef6()\n{\n    int64_t var_8 = 0x6f;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402f06",
            "funcStartAddr": "0x402f06",
            "funcEndAddr": "0x402f10",
            "decompiledFuncCode": "int64_t sub_402f06()\n{\n    int64_t var_8 = 0x70;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402f16",
            "funcStartAddr": "0x402f16",
            "funcEndAddr": "0x402f20",
            "decompiledFuncCode": "int64_t sub_402f16()\n{\n    int64_t var_8 = 0x71;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402f26",
            "funcStartAddr": "0x402f26",
            "funcEndAddr": "0x402f30",
            "decompiledFuncCode": "int64_t sub_402f26()\n{\n    int64_t var_8 = 0x72;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402f36",
            "funcStartAddr": "0x402f36",
            "funcEndAddr": "0x402f40",
            "decompiledFuncCode": "int64_t sub_402f36()\n{\n    int64_t var_8 = 0x73;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402f46",
            "funcStartAddr": "0x402f46",
            "funcEndAddr": "0x402f50",
            "decompiledFuncCode": "int64_t sub_402f46()\n{\n    int64_t var_8 = 0x74;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402f56",
            "funcStartAddr": "0x402f56",
            "funcEndAddr": "0x402f60",
            "decompiledFuncCode": "int64_t sub_402f56()\n{\n    int64_t var_8 = 0x75;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402f66",
            "funcStartAddr": "0x402f66",
            "funcEndAddr": "0x402f70",
            "decompiledFuncCode": "int64_t sub_402f66()\n{\n    int64_t var_8 = 0x76;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402f76",
            "funcStartAddr": "0x402f76",
            "funcEndAddr": "0x402f80",
            "decompiledFuncCode": "int64_t sub_402f76()\n{\n    int64_t var_8 = 0x77;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402f86",
            "funcStartAddr": "0x402f86",
            "funcEndAddr": "0x402f90",
            "decompiledFuncCode": "int64_t sub_402f86()\n{\n    int64_t var_8 = 0x78;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402f96",
            "funcStartAddr": "0x402f96",
            "funcEndAddr": "0x402fa0",
            "decompiledFuncCode": "int64_t sub_402f96()\n{\n    int64_t var_8 = 0x79;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402fa6",
            "funcStartAddr": "0x402fa6",
            "funcEndAddr": "0x402fb0",
            "decompiledFuncCode": "int64_t sub_402fa6()\n{\n    int64_t var_8 = 0x7a;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402fb6",
            "funcStartAddr": "0x402fb6",
            "funcEndAddr": "0x402fc0",
            "decompiledFuncCode": "int64_t sub_402fb6()\n{\n    int64_t var_8 = 0x7b;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402fc6",
            "funcStartAddr": "0x402fc6",
            "funcEndAddr": "0x402fd0",
            "decompiledFuncCode": "int64_t sub_402fc6()\n{\n    int64_t var_8 = 0x7c;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402fd6",
            "funcStartAddr": "0x402fd6",
            "funcEndAddr": "0x402fe0",
            "decompiledFuncCode": "int64_t sub_402fd6()\n{\n    int64_t var_8 = 0x7d;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "sub_402fe6",
            "funcStartAddr": "0x402fe6",
            "funcEndAddr": "0x402ff0",
            "decompiledFuncCode": "int64_t sub_402fe6()\n{\n    int64_t var_8 = 0x7e;\n    /* tailcall */\n    return sub_4027f0();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x403050",
            "funcEndAddr": "0x403cd0",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    char r15 = 0;\n    int32_t r14 = 0;\n    char** r13 = argv;\n    uint64_t r12 = 0;\n    int64_t rbp = 0;\n    uint64_t rbx = argc;\n    char* rdi = *argv;\n    data_621560 = 0;\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rcx = sub_40cfd0(rdi);\n    void var_148;\n    int32_t var_140;\n    setlocale(6, &data_41aa24[0x1b], rdx, rcx, r8, r9, var_148, var_140);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    sub_416fd0(sub_40aa00);\n    int64_t var_118;\n    sub_405700(&var_118);\n    var_118 = 0x400000000;\n    int64_t var_110 = 0x200000004;\n    int32_t var_e4 = 0;\n    int64_t var_108 = 0x10100000180;\n    int16_t var_100 = 0x100;\n    int32_t var_fc = 0;\n    int64_t var_f8 = 0x1000000;\n    int64_t var_f0 = 0x1000000;\n    char var_e8 = 0;\n    int64_t var_e0 = 0;\n    int64_t var_d8 = 0;\n    data_621558 = 0;\n    data_621548 = 0;\n    data_621541 = 0;\n    data_621540 = 0;\n    umask(0, 0x100);\n    char var_121 = 0;\n    int64_t var_120 = 0;\n    char** var_140_1 = nullptr;\n    char* var_138 = nullptr;\n    int64_t var_130 = 0;\n    while (true)\n    {\n        int32_t rax_1 = getopt_long(rbx, r13, \"bcCsDdg:m:o:pt:TvS:Z\", &data_418380, nullptr);\n        if (rax_1 == 0xffffffff)\n        {\n            uint64_t var_c8;\n            int32_t var_b0;\n            int64_t rbx_5;\n            char const* const rsi_3;\n            char const* const rsi_19;\n            if (data_621540 != 0)\n            {\n                if (data_621541 != 0)\n                {\n                label_403c55:\n                    error(1, 0, dcgettext(nullptr, \"the strip option may not be used\u2026\", 5));\n                label_403c62:\n                    error(1, r14, dcgettext(nullptr, \"failed to access %s\", 5), sub_40ea00(4, r12));\n                label_403c98:\n                    void (* rdx_32)();\n                    int64_t rsi_25;\n                    int64_t rdi_30;\n                    rdx_32 = error(1, r14, dcgettext(nullptr, \"target %s is not a directory\", 5), sub_40ea00(4, r12));\n                    /* tailcall */\n                    return _start(rdi_30, rsi_25, rdx_32);\n                }\n                if (r12 == 0)\n                {\n                    goto label_4034bd;\n                }\n                char rax_20 = error(1, 0, dcgettext(nullptr, \"target directory not allowed whe\u2026\", 5));\n                while (true)\n                {\n                    char rax_59;\n                    char rdx_14;\n                    char* rbx_2;\n                    if (rax_20 != 0)\n                    {\n                        r12 = 0;\n                        if (rbx != 1)\n                        {\n                            r13 = 1;\n                            uint64_t* rax_34 = &var_140_1[(rbx - 1)];\n                            r12 = *rax_34;\n                            char* rax_35 = sub_40ad40(r12);\n                            int64_t rcx_7 = -1;\n                            char* rdi_12 = rax_35;\n                            char rax_36 = r14;\n                            while (rcx_7 != 0)\n                            {\n                                bool cond:3_1 = rax_36 != *rdi_12;\n                                rdi_12 = &rdi_12[1];\n                                rcx_7 = (rcx_7 - 1);\n                                if ((!cond:3_1))\n                                {\n                                    break;\n                                }\n                            }\n                            int64_t rax_38 = (!rcx_7);\n                            int64_t rax_39 = (rax_38 - 1);\n                            if (rax_38 != 1)\n                            {\n                                r13 = rax_35[(rax_39 - 1)] == 0x2f;\n                            }\n                            int32_t rax_40 = __xstat(1, r12, &var_c8);\n                            if (rax_40 != 0)\n                            {\n                                r14 = *__errno_location();\n                                if ((r14 != 0 && r14 != 2))\n                                {\n                                    goto label_403c62;\n                                }\n                            }\n                            if ((rax_40 == 0 || (rax_40 != 0 && r14 == 0)))\n                            {\n                                if ((var_b0 & 0xf000) == 0x4000)\n                                {\n                                    rbx = (rbx - 1);\n                                    r12 = var_140_1[rbx];\n                                }\n                                else\n                                {\n                                    r14 = 0;\n                                }\n                            }\n                            if ((((rax_40 == 0 || (rax_40 != 0 && r14 == 0)) && (var_b0 & 0xf000) != 0x4000) || (rax_40 != 0 && r14 != 0)))\n                            {\n                                if (r13 != 0)\n                                {\n                                    goto label_403c98;\n                                }\n                                r12 = 0;\n                                if (rbx != 2)\n                                {\n                                    rbx = sub_40ea00(4, *rax_34);\n                                    error(1, 0, dcgettext(nullptr, \"target %s is not a directory\", 5), rbx);\n                                    if (var_120 != 0)\n                                    {\n                                        uint64_t rax_45 = __errno_location();\n                                        *rax_45 = 0x5f;\n                                        rbx = rax_45;\n                                        rbp = sub_40ec50(var_120);\n                                        error(1, *rbx, dcgettext(nullptr, \"failed to set default file creat\u2026\", 5), rbp);\n                                    label_4037e3:\n                                        sub_409a90();\n                                        if (r12 == 0)\n                                        {\n                                            r12 = var_140_1[1];\n                                            rbx_2 = *var_140_1;\n                                            if (rbp == 0)\n                                            {\n                                                rax_59 = (sub_404090(rbx_2, r12, &var_118) ^ 1);\n                                            label_40392a:\n                                                var_138 = rax_59;\n                                            label_403680:\n                                                return var_138;\n                                            }\n                                            rdx_14 = 0;\n                                            if (sub_403db0(rbx_2, r12, &var_118, 0) != 0)\n                                            {\n                                                goto label_403a5d;\n                                            }\n                                            goto label_40390f;\n                                        }\n                                        int64_t r13_2 = 0;\n                                        sub_4056a0(&var_118);\n                                        var_138 = 0;\n                                        var_130 = rbx;\n                                        do\n                                        {\n                                            r14 = r13_2 == 0;\n                                            char* r15_2 = var_140_1[r13_2];\n                                            r14 = (r14 & rbp);\n                                            char* rax_52 = sub_40b0c0(r12, sub_40ad40(r15_2), nullptr);\n                                            char rax_49;\n                                            if (r14 != 0)\n                                            {\n                                                rax_49 = sub_403db0(r15_2, rax_52, &var_118, 1);\n                                            }\n                                            char rax_53;\n                                            if ((r14 == 0 || (r14 != 0 && rax_49 != 0)))\n                                            {\n                                                rax_53 = sub_404090(r15_2, rax_52, &var_118);\n                                            }\n                                            if (((r14 != 0 && rax_49 == 0) || ((r14 == 0 || (r14 != 0 && rax_49 != 0)) && rax_53 == 0)))\n                                            {\n                                                free(rax_52);\n                                                var_138 = 1;\n                                            }\n                                            if (((r14 == 0 || (r14 != 0 && rax_49 != 0)) && rax_53 != 0))\n                                            {\n                                                free(rax_52);\n                                            }\n                                            r13_2 = (r13_2 + 1);\n                                        } while (var_130 > r13_2);\n                                        goto label_403680;\n                                    }\n                                    int64_t rax_16 = data_61f4dc;\n                                    rbx = (rbx - rax_16);\n                                    var_140_1 = &r13[rax_16];\n                                    rax_20 = ((data_621540 ^ 1) & r12 == 0);\n                                    if (rax_20 < rbx)\n                                    {\n                                        if (r14 == 0)\n                                        {\n                                            continue;\n                                        }\n                                        else if (r12 != 0)\n                                        {\n                                            error(1, 0, dcgettext(nullptr, \"cannot combine --target-director\u2026\", 5));\n                                        }\n                                        else if (rbx > 2)\n                                        {\n                                            goto label_403b47;\n                                        }\n                                    }\n                                    if ((((rax_20 < rbx && r14 != 0) && r12 != 0) || rax_20 >= rbx))\n                                    {\n                                        if (rbx != 1)\n                                        {\n                                            goto label_403bdb;\n                                        }\n                                        rsi_19 = \"missing destination file operand\u2026\";\n                                        rbx_5 = sub_40ea00(4, *var_140_1);\n                                        goto label_403b62;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (var_130 != 0)\n                    {\n                        int16_t* rax_22 = sub_40ca80(var_130);\n                        if (rax_22 == 0)\n                        {\n                            error(1, 0, dcgettext(nullptr, \"invalid mode %s\", 5), sub_40ec50(var_130));\n                            goto label_403c55;\n                        }\n                        data_61f448 = sub_40ce50(0, 0, 0, rax_22, nullptr);\n                        data_61f444 = sub_40ce50(0, 1, 0, rax_22, &data_61f440);\n                        free(rax_22);\n                    }\n                    if ((var_121 != 0 && data_621541 == 0))\n                    {\n                        error(0, 0, dcgettext(nullptr, \"WARNING: ignoring --strip-progra\u2026\", 5));\n                    }\n                    if (data_621542 == 0)\n                    {\n                    label_4035ec:\n                        int64_t rdi_8 = data_621558;\n                        uint64_t rax_28;\n                        if (rdi_8 == 0)\n                        {\n                            data_621550 = 0xffffffff;\n                        label_403618:\n                            char* rdi_9 = data_621548;\n                            if (rdi_9 == 0)\n                            {\n                                data_621544 = 0xffffffff;\n                            }\n                            else\n                            {\n                                struct group* rax_27 = getgrnam(rdi_9);\n                                if (rax_27 == 0)\n                                {\n                                    goto label_4039fa;\n                                }\n                                rax_28 = rax_27->short_end;\n                            label_403639:\n                                data_621544 = rax_28;\n                                endgrent();\n                            }\n                            if (data_621540 == 0)\n                            {\n                                goto label_4037e3;\n                            }\n                            var_138 = sub_40f910(rbx, var_140_1, 0x403f50, &var_118);\n                            goto label_403680;\n                        }\n                        struct passwd* rax_25 = getpwnam(rdi_8);\n                        uint64_t rax_26;\n                        if (rax_25 == 0)\n                        {\n                            if (sub_411570(data_621558, nullptr, 0, &var_c8, nullptr) == 0)\n                            {\n                                rax_26 = var_c8;\n                                if (rax_26 <= 0xffffffff)\n                                {\n                                    goto label_40360d;\n                                }\n                                goto label_4039c8;\n                            }\n                        label_4039c8:\n                            rbx = sub_40ec50(data_621558);\n                            error(1, 0, dcgettext(nullptr, \"invalid user %s\", 5), rbx);\n                        label_4039fa:\n                            if (sub_411570(data_621548, nullptr, 0, &var_c8, nullptr) == 0)\n                            {\n                                rax_28 = var_c8;\n                                if (rax_28 <= 0xffffffff)\n                                {\n                                    goto label_403639;\n                                }\n                                goto label_403a31;\n                            }\n                        label_403a31:\n                            rbx_2 = sub_40ec50(data_621548);\n                            error(1, 0, dcgettext(nullptr, \"invalid group %s\", 5), rbx_2);\n                        label_403a5d:\n                            rdx_14 = sub_404090(rbx_2, r12, &var_118);\n                        label_40390f:\n                            rax_59 = ((rdx_14 & 1) ^ 1);\n                            goto label_40392a;\n                        }\n                        rax_26 = rax_25->pw_uid;\n                    label_40360d:\n                        data_621550 = rax_26;\n                        endpwent();\n                        goto label_403618;\n                    }\n                    rsi_3 = \"options --compare (-C) and --str\u2026\";\n                    if (data_621541 != 0)\n                    {\n                        break;\n                    }\n                    if ((data_61f448 & 0xffff0e00) != 0)\n                    {\n                        error(0, 0, dcgettext(nullptr, \"the --compare (-C) option is ign\u2026\", 5));\n                    }\n                    goto label_4035ec;\n                }\n            label_403bf0:\n                error(0, 0, dcgettext(nullptr, rsi_3, 5));\n                break;\n            }\n            if (r12 != 0)\n            {\n                int32_t rax_12 = __xstat(1, r12, &var_c8);\n                if ((rbp == 0 && rax_12 != 0))\n                {\n                    goto label_403afa;\n                }\n                if (rax_12 != 0)\n                {\n                    goto label_4034bd;\n                }\n                if ((var_b0 & 0xf000) == 0x4000)\n                {\n                    goto label_4034bd;\n                }\n            label_403ac5:\n                error(1, 0, dcgettext(nullptr, \"target %s is not a directory\", 5), sub_40ea00(4, r12));\n            label_403afa:\n                int64_t rax_83 = sub_40ea00(4, r12);\n                error(1, *__errno_location(), dcgettext(nullptr, \"failed to access %s\", 5), rax_83);\n            label_403b47:\n                rsi_19 = \"extra operand %s\";\n                rbx_5 = sub_40ea00(4, var_140_1[2]);\n            label_403b62:\n                error(0, 0, dcgettext(nullptr, rsi_19, 5), rbx_5);\n                break;\n            }\n        label_4034bd:\n            int32_t rax_15 = 0;\n            if (r15 != 0)\n            {\n                rax_15 = sub_40a930(dcgettext(nullptr, \"backup type\", 5), var_140_1);\n            }\n            var_118 = rax_15;\n            sub_40a380(var_138);\n            error(1, 0, dcgettext(nullptr, \"cannot set target context and pr\u2026\", 5));\n        label_403bdb:\n            rsi_3 = \"missing file operand\";\n            goto label_403bf0;\n        }\n        bool cond:0_1 = rax_1 <= 0x64;\n        if (rax_1 == 0x64)\n        {\n            data_621540 = 1;\n            continue;\n        }\n        else\n        {\n            char const* const rsi_1;\n            bool cond:2_1;\n            bool cond:6_1;\n            if ((!cond:0_1))\n            {\n                cond:2_1 = rax_1 > 0x73;\n                if (rax_1 == 0x73)\n                {\n                    data_621541 = 1;\n                    signal(0x11, nullptr);\n                    continue;\n                }\n                if (cond:2_1)\n                {\n                    if (rax_1 != 0x73)\n                    {\n                        cond:6_1 = rax_1 <= 0x76;\n                    }\n                    if (rax_1 == 0x76)\n                    {\n                        *var_f0[6] = 1;\n                        continue;\n                    }\n                    if ((rax_1 != 0x73 && rax_1 != 0x76))\n                    {\n                        if (cond:6_1)\n                        {\n                            if (rax_1 != 0x74)\n                            {\n                                break;\n                            }\n                            if (r12 != 0)\n                            {\n                                error(1, 0, dcgettext(nullptr, \"multiple target directories spec\u2026\", 5));\n                            }\n                            else\n                            {\n                                r12 = data_621b80;\n                                continue;\n                            }\n                        }\n                        else if (rax_1 == 0x80)\n                        {\n                            rsi_1 = \"WARNING: ignoring --preserve-con\u2026\";\n                            if (data_621560 != 0)\n                            {\n                                *var_f8[5] = 1;\n                                data_61f44c = 0;\n                                continue;\n                            }\n                        }\n                        else\n                        {\n                            if (rax_1 != 0x81)\n                            {\n                                break;\n                            }\n                            var_121 = 1;\n                            data_61f438 = sub_411510(data_621b80);\n                            continue;\n                        }\n                    }\n                }\n                if ((rax_1 != 0x73 && (!cond:2_1)))\n                {\n                    bool cond:7_1 = rax_1 <= 0x6d;\n                    if (rax_1 == 0x6d)\n                    {\n                        var_130 = data_621b80;\n                        continue;\n                    }\n                    else if (cond:7_1)\n                    {\n                        if (rax_1 != 0x67)\n                        {\n                            break;\n                        }\n                        data_621548 = data_621b80;\n                        continue;\n                    }\n                    else if (rax_1 == 0x6f)\n                    {\n                        data_621558 = data_621b80;\n                        continue;\n                    }\n                    else\n                    {\n                        if (rax_1 != 0x70)\n                        {\n                            break;\n                        }\n                        *var_fc[3] = 1;\n                        continue;\n                    }\n                }\n            }\n            else\n            {\n                bool cond:1_1 = rax_1 <= 0x53;\n                if (rax_1 == 0x53)\n                {\n                    r15 = 1;\n                    var_138 = data_621b80;\n                    continue;\n                }\n                else if (cond:1_1)\n                {\n                    bool cond:4_1 = rax_1 <= 0xffffff7e;\n                    if (rax_1 == 0xffffff7e)\n                    {\n                        sub_4046f0(0);\n                        /* no return */\n                    }\n                    if (cond:4_1)\n                    {\n                        if (rax_1 == 0xffffff7d)\n                        {\n                            sub_411160(stdout, \"install\", \"GNU coreutils\", data_61f460);\n                            exit(0);\n                            /* no return */\n                        }\n                        break;\n                    }\n                    if (rax_1 == 0x43)\n                    {\n                        data_621542 = 1;\n                        continue;\n                    }\n                    else\n                    {\n                        if (rax_1 != 0x44)\n                        {\n                            break;\n                        }\n                        rbp = 1;\n                        continue;\n                    }\n                }\n                else\n                {\n                    bool cond:5_1 = rax_1 <= 0x5a;\n                    if (rax_1 == 0x5a)\n                    {\n                        int64_t rax_7 = data_621b80;\n                        if (data_621560 != 0)\n                        {\n                            data_61f44c = 0;\n                            if (rax_7 == 0)\n                            {\n                                *var_f8[1] = 1;\n                                continue;\n                            }\n                            else\n                            {\n                                var_120 = rax_7;\n                                continue;\n                            }\n                        }\n                        else if (rax_7 == 0)\n                        {\n                            continue;\n                        }\n                        else\n                        {\n                            rsi_1 = \"warning: ignoring --context; it \u2026\";\n                        }\n                    }\n                    else if (cond:5_1)\n                    {\n                        if (rax_1 != 0x54)\n                        {\n                            break;\n                        }\n                        r14 = 1;\n                        continue;\n                    }\n                    else\n                    {\n                        if ((rax_1 != 0x62 && rax_1 != 0x63))\n                        {\n                            break;\n                        }\n                        if (rax_1 == 0x63)\n                        {\n                            continue;\n                        }\n                        if (rax_1 == 0x62)\n                        {\n                            char** rax_3 = data_621b80;\n                            r15 = 1;\n                            if (rax_3 == 0)\n                            {\n                                rax_3 = var_140_1;\n                            }\n                            var_140_1 = rax_3;\n                            continue;\n                        }\n                    }\n                }\n            }\n            if ((cond:0_1 || (((((!cond:0_1) && rax_1 != 0x73) && cond:2_1) && rax_1 != 0x76) && (!cond:6_1))))\n            {\n                error(0, 0, dcgettext(nullptr, rsi_1, 5));\n                continue;\n            }\n        }\n        goto label_403ac5;\n    }\n    sub_4046f0(1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x403cd0",
            "funcEndAddr": "0x403cfa",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_403cfb",
            "funcStartAddr": "0x403cfb",
            "funcEndAddr": "0x403d1a",
            "decompiledFuncCode": "void sub_403cfb()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_403d1a",
            "funcStartAddr": "0x403d1a",
            "funcEndAddr": "0x403d51",
            "decompiledFuncCode": "int64_t sub_403d1a()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_403d51",
            "funcStartAddr": "0x403d51",
            "funcEndAddr": "0x403da8",
            "decompiledFuncCode": "void sub_403d51()\n{\n    if (data_61f528 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_61f530;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_61f530 = (rax_1 + 1);\n        *(0x61ee40 + ((rax_1 + 1) << 3))();\n    }\n    sub_403cfb();\n    data_61f528 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_403da8",
            "funcStartAddr": "0x403da8",
            "funcEndAddr": "0x403dad",
            "decompiledFuncCode": "int64_t j_sub_403d1a()\n{\n    /* tailcall */\n    return sub_403d1a();\n}\n\n"
        },
        {
            "funcName": "sub_403db0",
            "funcStartAddr": "0x403db0",
            "funcEndAddr": "0x403f4a",
            "decompiledFuncCode": "int64_t sub_403db0(char* arg1, void* arg2, int64_t arg3, char arg4)\n{\n    int32_t var_20;\n    int64_t rax_7;\n    if ((arg4 == 0 && (*arg1 == 0x2f && *arg2 == 0x2f)))\n    {\n        var_20 = 0;\n        sub_40f8a0(&var_20);\n        if (sub_40c5e0(arg2, &var_20, 0x404020, arg3) == -1)\n        {\n            error(0, *__errno_location(), dcgettext(nullptr, \"cannot create directory %s\", 5), sub_40ea00(4, arg2));\n            goto label_403e5a;\n        }\n    label_403e86:\n        rax_7 = 1;\n        goto label_403e93;\n    }\n    var_20 = 0;\n    void* rax = sub_40c5e0(arg2, &var_20, 0x404020, arg3);\n    int32_t* rax_1 = __errno_location();\n    if (rax != -1)\n    {\n        int32_t rax_6 = sub_40f770(&var_20, 0);\n        int32_t r12_2 = *rax_1;\n        sub_40f8a0(&var_20);\n        bool cond:0_1 = rax_6 != 0;\n        if (rax_6 > 0)\n        {\n            goto label_403e5a;\n        }\n        if ((!cond:0_1))\n        {\n            goto label_403e86;\n        }\n        error(0, r12_2, dcgettext(nullptr, \"cannot create directory %s\", 5), sub_40ea00(4, arg2));\n        rax_7 = 0;\n    label_403e93:\n        return rax_7;\n    }\n    error(0, *rax_1, dcgettext(nullptr, \"cannot create directory %s\", 5), sub_40ea00(4, arg2));\n    sub_40f770(&var_20, 1);\n    sub_40f8a0(&var_20);\nlabel_403e5a:\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_403f50",
            "funcStartAddr": "0x403f50",
            "funcEndAddr": "0x403fb2",
            "decompiledFuncCode": "uint64_t sub_403f50(void* arg1, int32_t* arg2, void* arg3)\n{\n    char rax_4 = (sub_40c770(arg1, arg2, 0x404020, arg3, data_61f444, 0x404000, data_61f440, data_621550, data_621544, 0) ^ 1);\n    uint32_t rbp = rax_4;\n    if ((rax_4 == 0 && *(arg3 + 0x21) != 0))\n    {\n        *__errno_location() = 0x5f;\n    }\n    return rbp;\n}\n\n"
        },
        {
            "funcName": "sub_403fc0",
            "funcStartAddr": "0x403fc0",
            "funcEndAddr": "0x403ff7",
            "decompiledFuncCode": "int64_t sub_403fc0(uint64_t arg1)\n{\n    sub_40ea00(4, arg1);\n    /* tailcall */\n    return sub_404ae0(stdout, dcgettext(nullptr, \"creating directory %s\", 5), 0);\n}\n\n"
        },
        {
            "funcName": "sub_404000",
            "funcStartAddr": "0x404000",
            "funcEndAddr": "0x404012",
            "decompiledFuncCode": "void sub_404000(uint64_t arg1, void* arg2)\n{\n    if (*(arg2 + 0x2e) != 0)\n    {\n        /* tailcall */\n        return sub_403fc0(arg1);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_404020",
            "funcStartAddr": "0x404020",
            "funcEndAddr": "0x404081",
            "decompiledFuncCode": "uint64_t sub_404020(uint64_t arg1, int64_t arg2, void* arg3)\n{\n    if (*(arg3 + 0x21) != 0)\n    {\n        *__errno_location() = 0x5f;\n    }\n    int64_t rax_2 = mkdir(arg2, 0x1ed);\n    if ((rax_2 == 0 && *(arg3 + 0x2e) != 0))\n    {\n        sub_403fc0(arg1);\n        return rax_2;\n    }\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_404090",
            "funcStartAddr": "0x404090",
            "funcEndAddr": "0x4046eb",
            "decompiledFuncCode": "uint64_t sub_404090(char* arg1, char* arg2, int32_t* arg3)\n{\n    int32_t* rbp = arg3;\n    char* rbx = arg2;\n    void var_1e8;\n    if ((*(arg3 + 0x1f) != 0 && __xstat(1, arg1, &var_1e8) != 0))\n    {\n        goto label_404442;\n    }\n    int64_t var_c8;\n    int32_t var_b0;\n    if (data_621542 != 0)\n    {\n        int32_t r14_1 = data_61f448;\n        void var_158;\n        int32_t var_140;\n        int64_t var_128;\n        int64_t var_98;\n        if ((((r14_1 & 0xffff0e00) == 0 && __lxstat(1, arg1, &var_158) == 0) && (__lxstat(1, rbx, &var_c8) == 0 && ((var_140 & 0xf000) == 0x8000 && ((var_b0 & 0xf000) == 0x8000 && (((var_140 | var_b0) & 0xffff0e00) == 0 && (var_128 == var_98 && r14_1 == (var_b0 & 0xfff))))))))\n        {\n            int32_t rax_7 = data_621550;\n            if (rax_7 == 0xffffffff)\n            {\n                *__errno_location() = 0;\n                rax_7 = getuid();\n            }\n            int32_t var_ac;\n            if (rax_7 == var_ac)\n            {\n                int32_t rax_8 = data_621544;\n                if (rax_8 == 0xffffffff)\n                {\n                    *__errno_location() = 0;\n                    rax_8 = getgid();\n                }\n                int32_t var_a8;\n                if (rax_8 == var_a8)\n                {\n                    if ((data_621560 != 0 && *(rbp + 0x25) != 0))\n                    {\n                        goto label_4046cb;\n                    }\n                    int32_t rax_10 = open(arg1, 0);\n                    if (rax_10 >= 0)\n                    {\n                        int32_t rax_12 = open(rbx, 0);\n                        if (rax_12 < 0)\n                        {\n                            close(rax_10);\n                        }\n                        else\n                        {\n                            while (true)\n                            {\n                                int64_t rax_15 = sub_40b1c0(rax_10, 0x61f540, 0x1000);\n                                if (rax_15 == 0)\n                                {\n                                    close(rax_10);\n                                    close(rax_12);\n                                    goto label_404279;\n                                }\n                                uint64_t rax_13 = sub_40b1c0(rax_12, 0x620540, 0x1000);\n                                if ((rax_13 == rax_15 && memcmp(&data_61f540, &data_620540, rax_13) == 0))\n                                {\n                                    continue;\n                                }\n                                close(rax_10);\n                                close(rax_12);\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    char rax_29;\n    pid_t rax_31;\n    while (true)\n    {\n        rax_29 = sub_409810(arg1, rbx, 0, rbp, &var_c8, nullptr);\n        if (rax_29 == 0)\n        {\n            break;\n        }\n    label_404279:\n        if (data_621541 == 0)\n        {\n            break;\n        }\n        rax_31 = fork();\n        if (rax_31 == 0xffffffff)\n        {\n            break;\n        }\n        if (rax_31 != 0)\n        {\n            break;\n        }\n        uint64_t rbp_6 = data_61f438;\n        execlp(rbp_6, rbp_6, rbx, 0);\n        rbp = sub_40ea00(4, rbp_6);\n        rbx = dcgettext(nullptr, \"cannot run %s\", 5);\n        error(1, *__errno_location(), rbx, rbp);\n    label_4046cb:\n        *__errno_location() = 0x5f;\n    }\n    int32_t rbp_1;\n    int64_t rbp_4;\n    char const* const rsi_13;\n    if ((rax_29 != 0 && data_621541 == 0))\n    {\n        if (*(rbp + 0x1f) == 0)\n        {\n        label_4042f3:\n            char const* const rsi_17;\n            int64_t r12_1;\n            if ((data_621550 & data_621544) != 0xffffffff)\n            {\n                if (lchown(rbx) == 0)\n                {\n                    goto label_404311;\n                }\n                rsi_17 = \"cannot change ownership of %s\";\n                r12_1 = sub_40ea00(4, rbx);\n            label_4044dc:\n                rbp_1 = 0;\n                error(0, *__errno_location(), dcgettext(nullptr, rsi_17, 5), r12_1);\n            label_404323:\n                if (data_61f44c == 0)\n                {\n                label_4043ab:\n                    return rbp_1;\n                }\n                if ((data_621560 == 1 && __lxstat(1, rbx, &var_c8) == 0))\n                {\n                    if ((data_61f430 != 0 && *rbx == 0x2f))\n                    {\n                        char rax_55 = rbx[1];\n                        char* r12_2 = &rbx[1];\n                        char* rdx_17;\n                        if (rax_55 != 0x2f)\n                        {\n                            rdx_17 = r12_2;\n                            r12_2 = rbx;\n                        }\n                        else\n                        {\n                            while (true)\n                            {\n                                rax_55 = r12_2[1];\n                                rdx_17 = &r12_2[1];\n                                if (rax_55 != 0x2f)\n                                {\n                                    break;\n                                }\n                                r12_2 = rdx_17;\n                            }\n                        }\n                        if (rax_55 != 0)\n                        {\n                            while (true)\n                            {\n                                rdx_17 = &rdx_17[1];\n                                char rax_56 = *rdx_17;\n                                if (rax_56 == 0)\n                                {\n                                    break;\n                                }\n                                if (rax_56 == 0x2f)\n                                {\n                                    break;\n                                }\n                                if ((!(rax_56 != 0 && rax_56 != 0x2f)))\n                                {\n                                    /* nop */\n                                }\n                            }\n                            uint64_t rbx_4 = (rdx_17 - r12_2);\n                            char* rax_57 = malloc((rbx_4 + 2));\n                            if (rax_57 != 0)\n                            {\n                                *stpncpy(rax_57, r12_2, rbx_4) = 0x2f;\n                                free(rax_57);\n                            }\n                        }\n                    }\n                    data_61f430 = 0;\n                    *__errno_location() = 0x5f;\n                }\n                goto label_4043ab;\n            }\n        label_404311:\n            rbp_1 = 1;\n            if (chmod(rbx, data_61f448) != 0)\n            {\n                rsi_17 = \"cannot change permissions of %s\";\n                r12_1 = sub_40ea00(4, rbx);\n                goto label_4044dc;\n            }\n            goto label_404323;\n        }\n    label_404295:\n        int32_t var_1d0;\n        if ((var_1d0 & 0xf000) == 0x8000)\n        {\n            goto label_4042f3;\n        }\n    label_4042a7:\n        int64_t var_1a0;\n        var_c8 = var_1a0;\n        int64_t var_198;\n        int64_t var_c0_1 = var_198;\n        int64_t var_190;\n        int64_t var_b8_1 = var_190;\n        int64_t var_188;\n        var_b0 = var_188;\n        if (sub_410aa0(rbx, &var_c8) != 0)\n        {\n            rsi_13 = \"cannot set timestamps for %s\";\n            rbp_4 = sub_40ea00(4, rbx);\n            goto label_40444c;\n        }\n        goto label_4042f3;\n    }\n    char const* const rsi_8;\n    if (((rax_29 != 0 && data_621541 != 0) && rax_31 == 0xffffffff))\n    {\n        rsi_8 = \"fork system call failed\";\n    label_4043ca:\n        error(0, *__errno_location(), dcgettext(nullptr, rsi_8, 5));\n    label_4043e8:\n        if (unlink(rbx) == 0)\n        {\n            goto label_404396;\n        }\n        int64_t rax_36 = sub_40ea00(4, rbx);\n        error(1, *__errno_location(), dcgettext(nullptr, \"cannot unlink %s\", 5), rax_36);\n    label_404442:\n        rsi_13 = \"cannot stat %s\";\n        rbp_4 = sub_40ea00(4, arg1);\n    label_40444c:\n        error(0, *__errno_location(), dcgettext(nullptr, rsi_13, 5), rbp_4);\n    label_404396:\n        rbp_1 = 0;\n        goto label_4043ab;\n    }\n    if (rax_29 == 0)\n    {\n        goto label_404396;\n    }\n    if (waitpid(rax_31, &var_c8, 0) < 0)\n    {\n        rsi_8 = \"waiting for strip\";\n        goto label_4043ca;\n    }\n    int32_t rax_45 = var_c8;\n    if ((*rax_45[1] | (rax_45 & 0x7f)) != 0)\n    {\n        error(0, 0, dcgettext(nullptr, \"strip process terminated abnorma\u2026\", 5));\n        goto label_4043e8;\n    }\n    if (*(rbp + 0x1f) == 0)\n    {\n        goto label_4042f3;\n    }\n    if (data_621541 != 0)\n    {\n        goto label_4042a7;\n    }\n    goto label_404295;\n}\n\n"
        },
        {
            "funcName": "sub_4046f0",
            "funcStartAddr": "0x4046f0",
            "funcEndAddr": "0x404add",
            "decompiledFuncCode": "int64_t sub_4046f0(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_6219c0;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [OPTION]... [-T] SOURC\u2026\", 5), rbp, rbp, rbp, rbp);\n        fputs_unlocked(dcgettext(nullptr, \"\\nThis install program copies fi\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nMandatory arguments to long op\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --backup[=CONTROL]  make a\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -D                  create all\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -p, --preserve-timestamps   ap\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --preserve-context  preser\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nThe backup suffix is '~', unle\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  none, off       never make bac\u2026\", 5), stdout);\n        void* const var_88 = &data_4170f0;\n        void* const* rax_14 = &var_88;\n        char const* const var_78_1 = \"coreutils\";\n        char const* const var_70_1 = \"Multi-call invocation\";\n        char const* const var_68_1 = \"sha224sum\";\n        char const* const var_60_1 = \"sha2 utilities\";\n        char const* const var_58_1 = \"sha256sum\";\n        char const* const var_50_1 = \"sha2 utilities\";\n        char const* const var_48_1 = \"sha384sum\";\n        char const* const var_40_1 = \"sha2 utilities\";\n        char const* const var_38_1 = \"sha512sum\";\n        char const* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_14 = &rax_14[2];\n            void* const rdi_12 = *rax_14;\n            c_1 = false;\n            z_1 = (rdi_12 & rdi_12) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            char const* const rsi_12 = \"install\";\n            int64_t rcx_2 = 8;\n            while (rcx_2 != 0)\n            {\n                char const temp0_1 = *rsi_12;\n                char temp1_1 = *rdi_12;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_12 = &rsi_12[1];\n                rdi_12 = (rdi_12 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        char const* const rbp_1 = rax_14[1];\n        char* rax_25;\n        int32_t rax_26;\n        char const* const r12_1;\n        if (rbp_1 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_5;\n            uint64_t r8_3;\n            ssize_t r9_3;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_25 = setlocale(5, nullptr, rdx_5, rcx_5, r8_3, r9_3, var_88, \"test invocation\");\n            if (rax_25 != 0)\n            {\n                rax_26 = strncmp(rax_25, &data_417174, 3);\n                if (rax_26 != 0)\n                {\n                    rbp_1 = \"install\";\n                }\n            }\n            if ((rax_25 == 0 || (rax_25 != 0 && rax_26 == 0)))\n            {\n                rbp_1 = \"install\";\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"install\");\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_3;\n            uint64_t r8_2;\n            ssize_t r9_2;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_17 = setlocale(5, nullptr, rdx_3, rcx_3, r8_2, r9_2, var_88, \"test invocation\");\n            if (rax_17 == 0)\n            {\n                goto label_4049d0;\n            }\n            if (strncmp(rax_17, &data_417174, 3) == 0)\n            {\n                goto label_4049d0;\n            }\n        }\n        if ((((rbp_1 == 0 && rax_25 != 0) && rax_26 != 0) || rbp_1 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), \"install\");\n        label_4049d0:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"install\");\n            if (rbp_1 != \"install\")\n            {\n                r12_1 = &data_41aa24[0x1b];\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_1, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404ae0",
            "funcStartAddr": "0x404ae0",
            "funcEndAddr": "0x404bcf",
            "decompiledFuncCode": "char* sub_404ae0(FILE* arg1, char* arg2, char arg3 @ rax)\n{\n    int64_t rdx;\n    int64_t var_b8 = rdx;\n    int64_t rcx;\n    int64_t var_b0 = rcx;\n    int64_t r8;\n    int64_t var_a8 = r8;\n    int64_t r9;\n    int64_t var_a0 = r9;\n    if (arg3 != 0)\n    {\n        int128_t zmm0;\n        int128_t var_98_1 = zmm0;\n        int128_t zmm1;\n        int128_t var_88_1 = zmm1;\n        int128_t zmm2;\n        int128_t var_78_1 = zmm2;\n        int128_t zmm3;\n        int128_t var_68_1 = zmm3;\n        int128_t zmm4;\n        int128_t var_58_1 = zmm4;\n        int128_t zmm5;\n        int128_t var_48_1 = zmm5;\n        int128_t zmm6;\n        int128_t var_38_1 = zmm6;\n        int128_t zmm7;\n        int128_t var_28_1 = zmm7;\n    }\n    fputs_unlocked(data_6219c0, arg1);\n    fwrite_unlocked(&data_4185c0, 1, 2, arg1);\n    int32_t var_e0 = 0x10;\n    void* var_d8 = &arg_8;\n    int32_t var_dc = 0x30;\n    void var_c8;\n    void* var_d0 = &var_c8;\n    sub_412a70(arg1, arg2, &var_e0);\n    char* rax = arg1->_IO_write_ptr;\n    if (rax >= arg1->_IO_write_end)\n    {\n        rax = __overflow(arg1, 0xa);\n    }\n    else\n    {\n        arg1->_IO_write_ptr = &rax[1];\n        *rax = 0xa;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404bd0",
            "funcStartAddr": "0x404bd0",
            "funcEndAddr": "0x404c14",
            "decompiledFuncCode": "int64_t sub_404bd0(char* arg1, int32_t arg2)\n{\n    if ((arg2 & 0xf000) == 0xa000)\n    {\n        return 1;\n    }\n    if (sub_4112a0() == 0)\n    {\n        int64_t rax_3;\n        rax_3 = euidaccess(arg1, 2) == 0;\n        return rax_3;\n    }\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_404c20",
            "funcStartAddr": "0x404c20",
            "funcEndAddr": "0x404cc2",
            "decompiledFuncCode": "int64_t sub_404c20(int32_t arg1, uint64_t arg2)\n{\n    uint64_t rbx = arg2;\n    if (data_621980 == 0)\n    {\n        int64_t rax_4 = calloc(data_61f458, 1);\n        if (rax_4 == 0)\n        {\n            data_621980 = 0x621580;\n            data_61f458 = 0x400;\n        }\n        else\n        {\n            data_621980 = rax_4;\n        }\n    }\n    if (rbx != 0)\n    {\n        int64_t rax_1;\n        uint64_t temp0_1;\n        do\n        {\n            uint64_t rbp_1 = rbx;\n            int64_t rsi = data_621980;\n            if (data_61f458 <= rbx)\n            {\n                rbp_1 = data_61f458;\n            }\n            rax_1 = sub_40b240(arg1, rsi, rbp_1);\n            if (rax_1 != rbp_1)\n            {\n                return 0;\n            }\n            temp0_1 = rbx;\n            rbx = (rbx - rax_1);\n        } while (temp0_1 != rax_1);\n    }\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_404cd0",
            "funcStartAddr": "0x404cd0",
            "funcEndAddr": "0x404d07",
            "decompiledFuncCode": "uint64_t sub_404cd0(int32_t arg1, __off64_t arg2, __off64_t arg3)\n{\n    int32_t rax = fallocate(arg1, 3, arg2, arg3);\n    if (rax < 0)\n    {\n        int32_t rax_3 = *__errno_location();\n        if ((rax_3 == 0x26 || rax_3 == 0x5f))\n        {\n            return 0;\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404d10",
            "funcStartAddr": "0x404d10",
            "funcEndAddr": "0x404d2d",
            "decompiledFuncCode": "int64_t sub_404d10(int64_t arg1, int64_t arg2, int32_t arg3)\n{\n    uint64_t rsi = arg3;\n    if (arg1 >= 0)\n    {\n        /* tailcall */\n        return fchmod(arg1, rsi);\n    }\n    /* tailcall */\n    return chmod(arg2, rsi);\n}\n\n"
        },
        {
            "funcName": "sub_404d30",
            "funcStartAddr": "0x404d30",
            "funcEndAddr": "0x404d70",
            "decompiledFuncCode": "int64_t sub_404d30()\n{\n    int32_t* rax = __errno_location();\n    *rax = 0x5f;\n    int64_t rdx_1;\n    int64_t rsi_1;\n    int64_t rdi;\n    rdx_1 = error(1, *rax, dcgettext(nullptr, \"failed to restore the default fi\u2026\", 5));\n    /* tailcall */\n    return sub_404d70(rdi, rsi_1, rdx_1);\n}\n\n"
        },
        {
            "funcName": "sub_404d70",
            "funcStartAddr": "0x404d70",
            "funcEndAddr": "0x404e1e",
            "decompiledFuncCode": "char* sub_404d70(uint64_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    __printf_chk(1, \"%s -> %s\", sub_40e920(0, 4, arg1), sub_40e920(1, 4, arg2));\n    if (arg3 != 0)\n    {\n        __printf_chk(1, dcgettext(nullptr, \" (backup: %s)\", 5), sub_40ea00(4, arg3));\n    }\n    uint64_t* const rdi = stdout;\n    char* rax_6 = stdout[5];\n    if (rax_6 >= stdout[6])\n    {\n        /* tailcall */\n        return __overflow(rdi, 0xa);\n    }\n    stdout[5] = &rax_6[1];\n    *rax_6 = 0xa;\n    return rax_6;\n}\n\n"
        },
        {
            "funcName": "sub_404e20",
            "funcStartAddr": "0x404e20",
            "funcEndAddr": "0x404f4c",
            "decompiledFuncCode": "uint64_t sub_404e20(void* arg1, char* arg2, int32_t* arg3)\n{\n    if (sub_404bd0(arg2, *arg3) != 0)\n    {\n        int64_t rbx_2 = data_6219c0;\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: overwrite %s? \", 5), rbx_2, sub_40ea00(4, arg2));\n        return sub_4119a0();\n    }\n    void var_34;\n    sub_40af30(*arg3, &var_34);\n    int32_t rbp_1 = *arg3;\n    char var_2a = 0;\n    int64_t rax_1 = sub_40ea00(4, arg2);\n    uint64_t rbp_2 = (rbp_1 & 0xfff);\n    int64_t rbx_1 = data_6219c0;\n    char* rdx;\n    if ((*(arg1 + 0x18) != 0 || (*(arg1 + 0x18) == 0 && (*(arg1 + 0x14) & 0xffff00) != 0)))\n    {\n        rdx = dcgettext(nullptr, \"%s: replace %s, overriding mode \u2026\", 5);\n    }\n    if ((*(arg1 + 0x18) == 0 && (*(arg1 + 0x14) & 0xffff00) == 0))\n    {\n        rdx = dcgettext(nullptr, \"%s: unwritable %s (mode %04lo, %\u2026\", 5);\n    }\n    void var_33;\n    __fprintf_chk(stderr, 1, rdx, rbx_1, rax_1, rbp_2, &var_33);\n    return sub_4119a0();\n}\n\n"
        },
        {
            "funcName": "sub_404f50",
            "funcStartAddr": "0x404f50",
            "funcEndAddr": "0x405053",
            "decompiledFuncCode": "uint64_t sub_404f50(uint64_t arg1, char* arg2, char arg3, char arg4, bool arg5)\n{\n    arg5 = arg5 != 0;\n    int32_t rax = sub_409e90(0xffffff9c, arg1, 0xffffff9c, arg2, (arg5 << 0xa), arg3);\n    bool cond:0 = rax > 0;\n    if (rax < 0)\n    {\n        error(0, *__errno_location(), dcgettext(nullptr, \"cannot create hard link %s to %s\", 5), sub_40e920(0, 4, arg2), sub_40e920(1, 4, arg1));\n        return 0;\n    }\n    uint64_t rbx;\n    rbx = cond:0;\n    rbx = (rbx & arg4);\n    if (rbx != 0)\n    {\n        __printf_chk(1, dcgettext(nullptr, \"removed %s\\n\", 5), sub_40ea00(4, arg2));\n        return rbx;\n    }\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_405060",
            "funcStartAddr": "0x405060",
            "funcEndAddr": "0x405117",
            "decompiledFuncCode": "int64_t sub_405060(int32_t arg1, int64_t arg2, char arg3, int64_t arg4)\n{\n    off64_t rax = lseek(arg1, arg4, 1);\n    int64_t rbp_1;\n    char const* const rsi_3;\n    if (rax < 0)\n    {\n        rsi_3 = \"cannot lseek %s\";\n        rbp_1 = sub_40ea00(4, arg2);\n    }\n    else\n    {\n        int32_t rax_3;\n        if (arg3 != 0)\n        {\n            rax_3 = sub_404cd0(arg1, (rax - arg4), arg4);\n            if (rax_3 < 0)\n            {\n                rsi_3 = \"error deallocating %s\";\n                rbp_1 = sub_40ea00(4, arg2);\n            }\n        }\n        if ((arg3 == 0 || (arg3 != 0 && rax_3 >= 0)))\n        {\n            return 1;\n        }\n    }\n    error(0, *__errno_location(), dcgettext(nullptr, rsi_3, 5), rbp_1);\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_405120",
            "funcStartAddr": "0x405120",
            "funcEndAddr": "0x405543",
            "decompiledFuncCode": "uint64_t sub_405120(int32_t arg1, int32_t arg2, char* arg3, ssize_t arg4, \n    ssize_t arg5, char arg6, int64_t arg7, int64_t arg8, uint64_t arg9, \n    int64_t* arg10, char* arg11)\n{\n    uint64_t rbp;\n    uint64_t var_28 = rbp;\n    *arg11 = 0;\n    uint64_t var_80 = arg9;\n    *arg10 = 0;\n    if (arg9 != 0)\n    {\n        ssize_t var_50_1 = arg5;\n        if (arg5 == 0)\n        {\n            arg5 = arg4;\n        }\n        int32_t r14_1 = 0;\n        ssize_t r15_1 = 0;\n        ssize_t r13_2;\n        while (true)\n        {\n            uint64_t rdx = var_80;\n            if (arg4 <= rdx)\n            {\n                rdx = arg4;\n            }\n            ssize_t rax_4;\n            ssize_t rdx_2;\n            uint32_t r9;\n            rax_4 = read(arg1, arg3, rdx);\n            bool cond:1_1 = rax_4 == 0;\n            if (rax_4 < 0)\n            {\n                int32_t* rax_5 = __errno_location();\n                if (*rax_5 != 4)\n                {\n                    error(0, *rax_5, dcgettext(nullptr, \"error reading %s\", 5), sub_40ea00(4, arg7));\n                    return 0;\n                }\n            }\n            else\n            {\n                if (cond:1_1)\n                {\n                    r13_2 = r15_1;\n                    rbp = r14_1;\n                    break;\n                }\n                char* r13_1 = arg3;\n                ssize_t r12_1 = rax_4;\n                ssize_t rbx_2 = arg5;\n                *arg10 = (*arg10 + r12_1);\n                bool cond:2_1 = var_50_1 != 0;\n                char* r11_1 = r13_1;\n                while (true)\n                {\n                    if (rbx_2 > r12_1)\n                    {\n                        rbx_2 = r12_1;\n                    }\n                    rbp = rbx_2 != 0;\n                    rbp = (rbp & cond:2_1);\n                    int32_t rax_11;\n                    char* rsi_3;\n                    if (rbp != 0)\n                    {\n                        rsi_3 = r13_1;\n                        rdx_2 = rbx_2;\n                        int32_t var_a0;\n                        while (true)\n                        {\n                            if (*rsi_3 != 0)\n                            {\n                                rax_11 = rbp;\n                                rdx_2 = r14_1;\n                                rbp = 0;\n                                break;\n                            }\n                            rsi_3 = &rsi_3[1];\n                            ssize_t temp1_1 = rdx_2;\n                            rdx_2 = (rdx_2 - 1);\n                            if (temp1_1 == 1)\n                            {\n                                int64_t* rax_10;\n                                rax_10 = r15_1 != 0;\n                                r9 = ((r14_1 ^ 1) & rax_10);\n                                break;\n                            }\n                            if ((rdx_2 & 0xf) == 0)\n                            {\n                                var_a0 = r11_1;\n                                rax_11 = memcmp(r13_1, rsi_3, rdx_2);\n                                r11_1 = var_a0;\n                                rbp = rax_11 == 0;\n                                rdx_2 = (rbp ^ r14_1);\n                                rax_11 = rax_11 != 0;\n                                break;\n                            }\n                        }\n                        char var_8a_1;\n                        if (*rsi_3 != 0)\n                        {\n                            r9 = r15_1 != 0;\n                            r9 = (r9 & rdx_2);\n                            if ((rbx_2 == r12_1 && rax_11 != 0))\n                            {\n                                if (r9 != 0)\n                                {\n                                    var_a0 = 1;\n                                    rbp = 0;\n                                    goto label_4052fb;\n                                }\n                                rbp = 0;\n                            label_405373:\n                                r15_1 = (r15_1 + rbx_2);\n                                var_a0 = 1;\n                                var_8a_1 = 0;\n                                if (r14_1 == 0)\n                                {\n                                label_405313:\n                                    int64_t rax_12;\n                                    rax_12 = sub_40b240(arg2, r11_1, r15_1);\n                                    r9 = var_8a_1;\n                                    if (r15_1 != rax_12)\n                                    {\n                                        error(0, *__errno_location(), dcgettext(nullptr, \"error writing %s\", 5), sub_40ea00(4, arg8));\n                                        return r14_1;\n                                    }\n                                }\n                                else\n                                {\n                                label_40539d:\n                                    int32_t rax_15;\n                                    rax_15 = sub_405060(arg2, arg8, arg6, r15_1);\n                                    r9 = var_8a_1;\n                                    if (rax_15 == 0)\n                                    {\n                                        return rax_15;\n                                    }\n                                }\n                                if (var_a0 == 0)\n                                {\n                                    r11_1 = r13_1;\n                                    r12_1 = (r12_1 - rbx_2);\n                                    r14_1 = rbp;\n                                    r13_1 = &r13_1[rbx_2];\n                                    r15_1 = rbx_2;\n                                }\n                                else\n                                {\n                                    if (rbx_2 == 0)\n                                    {\n                                        r15_1 = 0;\n                                        break;\n                                    }\n                                    if (r9 == 0)\n                                    {\n                                        r11_1 = r13_1;\n                                        r12_1 = (r12_1 - rbx_2);\n                                        r14_1 = rbp;\n                                        r13_1 = &r13_1[rbx_2];\n                                        r15_1 = 0;\n                                    }\n                                    else\n                                    {\n                                        r15_1 = rbx_2;\n                                        r11_1 = r13_1;\n                                        r14_1 = rbp;\n                                        rbx_2 = 0;\n                                        continue;\n                                    }\n                                }\n                            }\n                        }\n                        if (((((*rsi_3 != 0 && rbx_2 != r12_1) || ((*rsi_3 != 0 && rbx_2 == r12_1) && rax_11 == 0)) || *rsi_3 == 0) && r9 != 0))\n                        {\n                            var_a0 = 0;\n                        label_4052fb:\n                            var_8a_1 = r9;\n                            if (r14_1 == 0)\n                            {\n                                goto label_405313;\n                            }\n                            goto label_40539d;\n                        }\n                    }\n                    else\n                    {\n                        rbp = r14_1;\n                        rdx_2 = rbx_2 == r12_1;\n                        if ((rdx_2 & (r14_1 ^ 1)) != 0)\n                        {\n                            goto label_405373;\n                        }\n                        if (rbx_2 == 0)\n                        {\n                            goto label_405373;\n                        }\n                    }\n                    if (((((rbp != 0 && (((*rsi_3 != 0 && rbx_2 != r12_1) || ((*rsi_3 != 0 && rbx_2 == r12_1) && rax_11 == 0)) || *rsi_3 == 0)) && r9 == 0) || rbp == 0) && (0x7fffffffffffffff - rbx_2) >= r15_1))\n                    {\n                        r15_1 = (r15_1 + rbx_2);\n                        r12_1 = (r12_1 - rbx_2);\n                        r13_1 = &r13_1[rbx_2];\n                        r14_1 = rbp;\n                    }\n                    if ((((((rbp != 0 && (((*rsi_3 != 0 && rbx_2 != r12_1) || ((*rsi_3 != 0 && rbx_2 == r12_1) && rax_11 == 0)) || *rsi_3 == 0)) && r9 == 0) || rbp == 0) && (0x7fffffffffffffff - rbx_2) >= r15_1) || (((rbp != 0 && *rsi_3 != 0) && rbx_2 == r12_1) && rax_11 != 0)))\n                    {\n                        if (r12_1 == 0)\n                        {\n                            break;\n                        }\n                        continue;\n                    }\n                    if (((((rbp != 0 && (((*rsi_3 != 0 && rbx_2 != r12_1) || ((*rsi_3 != 0 && rbx_2 == r12_1) && rax_11 == 0)) || *rsi_3 == 0)) && r9 == 0) || rbp == 0) && (0x7fffffffffffffff - rbx_2) < r15_1))\n                    {\n                        error(0, 0, dcgettext(nullptr, \"overflow reading %s\", 5), sub_40ea00(4, arg7));\n                        return 0;\n                    }\n                }\n                uint64_t temp2_1 = var_80;\n                var_80 = (var_80 - rax_4);\n                *arg11 = rbp;\n                if (temp2_1 == rax_4)\n                {\n                    r13_2 = r15_1;\n                    break;\n                }\n                r14_1 = rbp;\n            }\n        }\n        if (rbp != 0)\n        {\n            /* tailcall */\n            return sub_405060(arg2, arg8, arg6, r13_2);\n        }\n    }\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_405550",
            "funcStartAddr": "0x405550",
            "funcEndAddr": "0x405618",
            "decompiledFuncCode": "uint64_t sub_405550(int64_t arg1, int64_t arg2, int64_t arg3, int32_t arg4, \n    void* arg5)\n{\n    if (*(arg5 + 0x25) == 0)\n    {\n        int32_t rbx_4;\n        rbx_4 = (arg4 & *(arg5 + 0x21));\n        if (rbx_4 != 0)\n        {\n            *__errno_location() = 0x5f;\n            return rbx_4;\n        }\n        return 1;\n    }\n    int32_t* rax = __errno_location();\n    uint32_t rbx_2;\n    if (*(arg5 + 0x23) != 0)\n    {\n        rbx_2 = *(arg5 + 0x26);\n        if (rbx_2 == 0)\n        {\n            *rax = 0x5f;\n        }\n    }\n    if ((*(arg5 + 0x23) == 0 || (*(arg5 + 0x23) != 0 && rbx_2 != 0)))\n    {\n        *rax = 0x5f;\n        error(0, *rax, dcgettext(nullptr, \"failed to get security context o\u2026\", 5), sub_40ea00(4, arg1));\n        rbx_2 = *(arg5 + 0x26);\n    }\n    return (rbx_2 ^ 1);\n}\n\n"
        },
        {
            "funcName": "sub_405620",
            "funcStartAddr": "0x405620",
            "funcEndAddr": "0x405693",
            "decompiledFuncCode": "int64_t sub_405620(uint64_t arg1, int64_t arg2, int64_t arg3, void* arg4)\n{\n    int32_t* rax = __errno_location();\n    if ((*(arg4 + 0x23) != 0 && *(arg4 + 0x26) == 0))\n    {\n        *rax = 0x5f;\n        return 0;\n    }\n    *rax = 0x5f;\n    error(0, *rax, dcgettext(nullptr, \"failed to set the security conte\u2026\", 5), sub_40e920(0, 4, arg1));\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_4056a0",
            "funcStartAddr": "0x4056a0",
            "funcEndAddr": "0x4056c6",
            "decompiledFuncCode": "int64_t* sub_4056a0(void* arg1)\n{\n    int64_t* rax = sub_40bb50(0x3d, nullptr, 0x40c510, 0x40c550, 0x40c5c0);\n    *(arg1 + 0x38) = rax;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4056d0",
            "funcStartAddr": "0x4056d0",
            "funcEndAddr": "0x4056f6",
            "decompiledFuncCode": "int64_t* sub_4056d0(void* arg1)\n{\n    int64_t* rax = sub_40bb50(0x3d, nullptr, 0x40c540, 0x40c550, 0x40c5c0);\n    *(arg1 + 0x40) = rax;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405700",
            "funcStartAddr": "0x405700",
            "funcEndAddr": "0x405731",
            "decompiledFuncCode": "int64_t sub_405700(int128_t* arg1)\n{\n    int128_t zmm0 = 0;\n    arg1[4] = 0;\n    *arg1 = zmm0;\n    arg1[1] = zmm0;\n    arg1[2] = zmm0;\n    arg1[3] = zmm0;\n    int64_t rax;\n    rax = geteuid() == 0;\n    *(arg1 + 0x1b) = rax;\n    *(arg1 + 0x1a) = rax;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405740",
            "funcStartAddr": "0x405740",
            "funcEndAddr": "0x405764",
            "decompiledFuncCode": "int32_t* sub_405740(void* arg1)\n{\n    int32_t rdx = *__errno_location();\n    int32_t* rax;\n    rax = rdx == 1;\n    rdx = rdx == 0x16;\n    rax = (rax | rdx);\n    if (rax != 0)\n    {\n        rax = (*(arg1 + 0x1a) ^ 1);\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405770",
            "funcStartAddr": "0x405770",
            "funcEndAddr": "0x40595b",
            "decompiledFuncCode": "uint64_t sub_405770(void* arg1, int64_t arg2, int32_t arg3, void* arg4, \n    char arg5, void* arg6)\n{\n    int32_t r14 = *(arg4 + 0x1c);\n    int32_t r13 = *(arg4 + 0x20);\n    if (arg5 != 0)\n    {\n    label_4057e0:\n        uint64_t rdx_3 = r13;\n        uint64_t rsi_2 = r14;\n        if (arg3 == 0xffffffff)\n        {\n            int32_t rdx_4;\n            if (lchown(arg2, rsi_2, rdx_3) == 0)\n            {\n            label_405850:\n                rdx_4 = 1;\n            }\n            else\n            {\n                int32_t* rax_10 = __errno_location();\n                int32_t rbx_1 = *rax_10;\n                if ((rbx_1 == 1 || rbx_1 == 0x16))\n                {\n                    lchown(arg2, 0xffffffff, r13);\n                    *rax_10 = rbx_1;\n                }\n            label_405818:\n                rdx_4 = 0;\n                if (sub_405740(arg1) == 0)\n                {\n                    error(0, *__errno_location(), dcgettext(nullptr, \"failed to preserve ownership for\u2026\", 5), sub_40ea00(4, arg2));\n                label_4058d6:\n                    rdx_4 = (-*(arg1 + 0x24));\n                }\n            }\n            return rdx_4;\n        }\n        if (fchown(arg3, rsi_2, rdx_3) == 0)\n        {\n            goto label_405850;\n        }\n        int32_t* rax_6 = __errno_location();\n        int32_t r14_1 = *rax_6;\n        if ((r14_1 == 1 || r14_1 == 0x16))\n        {\n            fchown(arg3, 0xffffffff, r13);\n            *rax_6 = r14_1;\n        }\n        goto label_405818;\n    }\n    int32_t rdx;\n    int32_t rsi;\n    if ((*(arg1 + 0x18) & 0xff0000000000ff) != 0)\n    {\n        rsi = *(arg6 + 0x18);\n        rdx = *(arg4 + 0x18);\n    }\n    else\n    {\n        if (*(arg1 + 0x2b) == 0)\n        {\n            goto label_4057e0;\n        }\n        rsi = *(arg6 + 0x18);\n        rdx = *(arg1 + 0x10);\n    }\n    int32_t rax_2;\n    *rax_2[1] = (*(!rdx)[1] | 0xe);\n    if (((rax_2 & rsi) & 0xfff) == 0)\n    {\n        goto label_4057e0;\n    }\n    if (sub_40d0b0(arg2, arg3, ((rdx & rsi) & 0x1c0)) == 0)\n    {\n        goto label_4057e0;\n    }\n    int32_t* rax_15 = __errno_location();\n    int32_t rax_16 = *rax_15;\n    if (((rax_16 != 1 && rax_16 != 0x16) || ((rax_16 == 1 || rax_16 == 0x16) && *(arg1 + 0x1b) != 0)))\n    {\n        error(0, *rax_15, dcgettext(nullptr, \"clearing permissions for %s\", 5), sub_40ea00(4, arg2));\n    }\n    goto label_4058d6;\n}\n\n"
        },
        {
            "funcName": "sub_405960",
            "funcStartAddr": "0x405960",
            "funcEndAddr": "0x40598a",
            "decompiledFuncCode": "uint64_t sub_405960()\n{\n    int32_t rbx = data_61f450;\n    if (rbx == 0xffffffff)\n    {\n        int32_t rax_1 = umask(0);\n        data_61f450 = rax_1;\n        umask(rax_1);\n        return rax_1;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_405990",
            "funcStartAddr": "0x405990",
            "funcEndAddr": "0x40980c",
            "decompiledFuncCode": "uint64_t sub_405990(char* arg1, char* arg2, int32_t arg3, char* arg4, \n    char* arg5, int32_t* arg6, int32_t arg7, char* arg8, char* arg9, \n    char* arg10)\n{\n    int64_t rbp;\n    int64_t __saved_rbp = rbp;\n    uint64_t r15;\n    uint64_t __saved_r15 = r15;\n    int64_t r14;\n    int64_t __saved_r14 = r14;\n    char* r14_1 = arg1;\n    int64_t r13;\n    int64_t __saved_r13 = r13;\n    int32_t* r13_1 = arg6;\n    int64_t r12;\n    int64_t __saved_r12 = r12;\n    int64_t rbx;\n    int64_t __saved_rbx = rbx;\n    void var_378;\n    void* rsp_1 = &var_378;\n    bool cond:0 = arg10 != 0;\n    uint64_t rbx_1 = arg7;\n    if ((arg6[6] != 0 && cond:0 != 0))\n    {\n        *arg10 = 0;\n    }\n    bool cond:2 = r13_1[1] == 2;\n    *arg9 = 0;\n    int64_t var_278;\n    int64_t* var_2e0 = &var_278;\n    int64_t* rdx = &var_278;\n    char* rsi_1;\n    if (cond:2)\n    {\n        rsi_1 = r14_1;\n        r15 = __lxstat(1, r14_1, rdx) != 0;\n        if (r15 != 0)\n        {\n            goto label_40623c;\n        }\n    label_405a38:\n        int32_t var_260;\n        int32_t rax_5 = (var_260 & 0xf000);\n        char* rax_135;\n        int32_t rdx_46;\n        char* rsi_57;\n        if (rax_5 == 0x4000)\n        {\n            if (*(r13_1 + 0x2a) == 0)\n            {\n                rdx_46 = 5;\n                rbx_1 = sub_40ea00(4, rsi_1);\n                if (*(r13_1 + 0x19) == 0)\n                {\n                    goto label_406e1f;\n                }\n                rsi_57 = \"omitting directory %s\";\n            label_406cd4:\n                rax_135 = dcgettext(nullptr, rsi_57, 5);\n                goto label_406ce5;\n            }\n            if (rbx_1 == 0)\n            {\n                goto label_405a72;\n            }\n            goto label_4066ad;\n        }\n        if (rbx_1 == 0)\n        {\n            goto label_405a72;\n        }\n        int64_t* rdi = *(r13_1 + 0x40);\n        if (*r13_1 == 0)\n        {\n            char rax_84 = sub_40aef0(rdi, r14_1, var_2e0);\n            if (rax_84 == 0)\n            {\n            label_4066ad:\n                sub_40ae60(*(r13_1 + 0x40), r14_1, var_2e0);\n                goto label_405a72;\n            }\n            char* var_2c0;\n            var_2c0 = rax_84;\n            error(0, 0, dcgettext(nullptr, \"warning: source file %s specifie\u2026\", 5), sub_40ea00(4, r14_1));\n            r15 = var_2c0;\n            goto label_406282;\n        }\n        sub_40ae60(rdi, r14_1, var_2e0);\n    label_405a72:\n        int32_t var_2e8_1 = 1;\n        int32_t rax_6 = r13_1[1];\n        if (rax_6 != 4)\n        {\n            rax_6 = rax_6 == 3;\n            var_2e8_1 = (rax_6 & rbx_1);\n        }\n        dev_t* var_328;\n        dev_t* var_318;\n        uint64_t var_308_1;\n        char* var_2f8_2;\n        bool var_2d8_1;\n        bool var_2c8;\n        int64_t var_270;\n        int64_t var_1e8;\n        int64_t var_1e0;\n        int32_t var_1d0;\n        dev_t var_158;\n        int64_t var_150;\n        int32_t var_140;\n        int128_t var_128;\n        int64_t var_118;\n        dev_t var_c8;\n        int64_t var_c0;\n        int128_t var_b8;\n        int32_t var_b0;\n        int32_t var_a8;\n        int128_t var_98;\n        int128_t var_88;\n        char rcx_1;\n        char* rcx_2;\n        char* rdx_13;\n        char* rbx_2;\n        char* rsi_7;\n        int64_t rdi_15;\n        char* r8_1;\n        char* r12_4;\n        if (arg3 != 0)\n        {\n        label_405dd0:\n            var_2d8_1 = true;\n            rcx_1 = 0;\n            var_308_1 = 0;\n        label_405de4:\n            int64_t var_268;\n            if (rbx_1 != 0)\n            {\n                if (*(r13_1 + 0x38) == 0)\n                {\n                    goto label_405dec;\n                }\n            label_405d20:\n                if (r13_1[6] != 0)\n                {\n                    if (*(r13_1 + 0x2e) == 0)\n                    {\n                        goto label_4062b0;\n                    }\n                    goto label_406470;\n                }\n                if (*r13_1 == 0)\n                {\n                    int64_t* rdx_10 = &var_1e8;\n                    if (rcx_1 != 0)\n                    {\n                        goto label_405d4e;\n                    }\n                    if (__lxstat(1, arg2, &var_c8) != 0)\n                    {\n                        goto label_405dec;\n                    }\n                    rdx_10 = &var_c8;\n                label_405d4e:\n                    if ((rdx_10[3] & 0xf000) != 0xa000)\n                    {\n                        goto label_405dec;\n                    }\n                    if (sub_40aef0(*(r13_1 + 0x38), arg2, rdx_10) == 0)\n                    {\n                        goto label_405dec;\n                    }\n                    r12_4 = sub_40e920(1, 4, arg2);\n                    rsi_7 = \"will not copy %s through just-cr\u2026\";\n                    rbx_2 = sub_40e920(0, 4, r14_1);\n                label_405daf:\n                    r8_1 = r12_4;\n                    rcx_2 = rbx_2;\n                    rdx_13 = dcgettext(nullptr, rsi_7, 5);\n                label_405dbe:\n                    error(0, 0, rdx_13, rcx_2, r8_1);\n                    goto label_405dc3;\n                }\n                if (*(r13_1 + 0x2e) != 0)\n                {\n                    goto label_405e02;\n                }\n                if (rax_5 == 0x4000)\n                {\n                    goto label_4067f0;\n                }\n            label_405e33:\n                if (*(r13_1 + 0x22) == 0)\n                {\n                    var_2f8_2 = nullptr;\n                    var_2c8 = var_2d8_1;\n                label_405e5d:\n                    char* r12_6 = (var_260 & 0xfff);\n                    if (*(r13_1 + 0x2b) != 0)\n                    {\n                        r12_6 = (r13_1[4] & 0xfff);\n                    }\n                    int32_t var_34c;\n                    bool var_329_1;\n                    int32_t var_310_1;\n                    char* var_2f0;\n                    char var_2a8;\n                    int32_t rdx_16;\n                    char const* const rsi_38;\n                    char const* const rsi_41;\n                    bool r8_4;\n                    if (*(r13_1 + 0x1d) != 0)\n                    {\n                        char rax_89;\n                        rax_89 = sub_405550(r14_1, arg2, var_260, var_2c8, r13_1);\n                        if (rax_89 == 0)\n                        {\n                            goto label_406282;\n                        }\n                        var_310_1 = (r12_6 & 0x3f);\n                        if (rax_5 == 0x4000)\n                        {\n                            goto label_406761;\n                        }\n                    label_405ec1:\n                        char rax_28 = r13_1[0xb];\n                        var_2f0 = rax_28;\n                        int32_t var_25c;\n                        int32_t var_258;\n                        dev_t var_230;\n                        int64_t var_228;\n                        int64_t var_220;\n                        int64_t var_218;\n                        if (rax_28 == 0)\n                        {\n                            bool rax_96 = *(r13_1 + 0x17);\n                            var_329_1 = rax_96;\n                            if (rax_96 != 0)\n                            {\n                                char rax_152 = sub_404f50(r14_1, arg2, *(r13_1 + 0x16), 0, var_2e8_1);\n                                r8_4 = false;\n                                var_329_1 = false;\n                                var_2e8_1 = rax_152;\n                                if (rax_152 != 0)\n                                {\n                                    goto label_405f4f;\n                                }\n                                goto label_406910;\n                            }\n                            if (rax_5 != 0x8000)\n                            {\n                                bool r8_3 = (rax_5 != 0xa000 & r13_1[5]);\n                                if (r8_3 != 0)\n                                {\n                                    goto label_407258;\n                                }\n                                if (rax_5 == 0x1000)\n                                {\n                                    var_c8 = 0;\n                                    mode_t rax_296 = ((!var_310_1) & var_260);\n                                    r12_6 = rax_296;\n                                    r8_4 = r8_3;\n                                    if (__xmknod(0, arg2, rax_296, &var_c8) != 0)\n                                    {\n                                        r8_4 = r8_3;\n                                        if (mkfifo(arg2, (r12_6 & 0xffffefff)) == 0)\n                                        {\n                                            goto label_408048;\n                                        }\n                                        rsi_41 = \"cannot create fifo %s\";\n                                        rbx_1 = sub_40ea00(4, arg2);\n                                        goto label_4068f2;\n                                    }\n                                label_408048:\n                                    var_2f0 = r8_4;\n                                    var_329_1 = r8_4;\n                                    var_2e8_1 = 1;\n                                    goto label_405f4f;\n                                }\n                                r12_6 = (var_260 & 0xb000) == 0x2000;\n                                int32_t rax_99;\n                                rax_99 = rax_5 == 0xc000;\n                                r12_6 = (r12_6 | rax_99);\n                                var_2e8_1 = r12_6;\n                                if (r12_6 != 0)\n                                {\n                                    dev_t var_250;\n                                    var_c8 = var_250;\n                                    r8_4 = r8_3;\n                                    var_2f0 = r8_4;\n                                    var_329_1 = r8_4;\n                                    if (__xmknod(0, arg2, ((!var_310_1) & var_260), &var_c8) == 0)\n                                    {\n                                        goto label_405f4f;\n                                    }\n                                    rsi_41 = \"cannot create special file %s\";\n                                    rbx_1 = sub_40ea00(4, arg2);\n                                    goto label_4068f2;\n                                }\n                                if (rax_5 != 0xa000)\n                                {\n                                    rsi_38 = \"%s has unknown file type\";\n                                    rbx_1 = sub_40ea00(4, r14_1);\n                                    goto label_4067c5;\n                                }\n                                int64_t var_248;\n                                char* rax_272 = sub_40a1c0(r14_1, var_248);\n                                r12_6 = rax_272;\n                                if (rax_272 == 0)\n                                {\n                                    rsi_41 = \"cannot read symbolic link %s\";\n                                    rbx_1 = sub_40ea00(4, r14_1);\n                                    goto label_4068f2;\n                                }\n                                if (sub_409fd0(rax_272, 0xffffff9c, arg2, *(r13_1 + 0x16)) >= 0)\n                                {\n                                    goto label_407daa;\n                                }\n                                int32_t rax_336 = *__errno_location();\n                                bool var_2c8_3;\n                                var_2c8_3 = rax_336;\n                                if (rax_336 == 0)\n                                {\n                                    goto label_407daa;\n                                }\n                                if (*(r13_1 + 0x2d) != 1)\n                                {\n                                    goto label_4084e0;\n                                }\n                                if (var_2d8_1 != 0)\n                                {\n                                    goto label_4084e0;\n                                }\n                                if ((var_1d0 & 0xf000) != 0xa000)\n                                {\n                                    goto label_4084e0;\n                                }\n                                int64_t rcx_79 = -1;\n                                char* rdi_122 = r12_6;\n                                while (rcx_79 != 0)\n                                {\n                                    bool cond:36_1 = var_2d8_1 != *rdi_122;\n                                    rdi_122 = &rdi_122[1];\n                                    rcx_79 = (rcx_79 - 1);\n                                    if ((!cond:36_1))\n                                    {\n                                        break;\n                                    }\n                                }\n                                int64_t var_1b8;\n                                if (var_1b8 != ((!rcx_79) - 1))\n                                {\n                                    goto label_4084e0;\n                                }\n                                char* rax_458 = sub_40a1c0(arg2, var_1b8);\n                                if (rax_458 == 0)\n                                {\n                                    goto label_4084e0;\n                                }\n                                var_2e8_1 = rax_458;\n                                int64_t rdx_157 = var_2e8_1;\n                                if (strcmp(rax_458, r12_6) != 0)\n                                {\n                                    free(rdx_157);\n                                label_4084e0:\n                                    free(r12_6);\n                                    error(0, var_2c8_3, dcgettext(nullptr, \"cannot create symbolic link %s\", 5), sub_40ea00(4, arg2));\n                                    goto label_406910;\n                                }\n                                free(rdx_157);\n                            label_407daa:\n                                free(r12_6);\n                                bool rax_274 = *(r13_1 + 0x25);\n                                var_329_1 = rax_274;\n                                if (rax_274 != 0)\n                                {\n                                    goto label_406e0d;\n                                }\n                                r8_4 = *(r13_1 + 0x1d);\n                                if (r8_4 != 0)\n                                {\n                                    if (lchown(arg2, var_25c, var_258) == 0)\n                                    {\n                                        var_2f0 = r8_4;\n                                        var_2e8_1 = r8_4;\n                                        r8_4 = false;\n                                        goto label_405f4f;\n                                    }\n                                    char rax_375 = sub_405740(r13_1);\n                                    var_2f0 = rax_375;\n                                    if (rax_375 == 0)\n                                    {\n                                        error(0, *__errno_location(), dcgettext(nullptr, \"failed to preserve ownership for\u2026\", 5), arg2);\n                                        bool rax_453 = r13_1[9];\n                                        var_329_1 = rax_453;\n                                        if (rax_453 != 0)\n                                        {\n                                            goto label_406910;\n                                        }\n                                        var_2f0 = r8_4;\n                                        var_2e8_1 = r8_4;\n                                        r8_4 = false;\n                                        goto label_405f4f;\n                                    }\n                                    r8_4 = false;\n                                    var_2e8_1 = var_2f0;\n                                    goto label_405f4f;\n                                }\n                                var_329_1 = r8_4;\n                                var_2f0 = 1;\n                                var_2e8_1 = 1;\n                                goto label_405f4f;\n                            }\n                        label_407258:\n                            int32_t rsi_74;\n                            rsi_74 = r13_1[1] == 2;\n                            uint64_t var_320;\n                            var_320 = var_260;\n                            var_318 = *(r13_1 + 0x23);\n                            int32_t rax_181 = sub_40ae10(r14_1, (rsi_74 << 0x11), rdx_16);\n                            var_2c8 = rax_181;\n                            if (rax_181 < 0)\n                            {\n                                rsi_41 = \"cannot open %s for reading\";\n                                rbx_1 = sub_40ea00(4, r14_1);\n                            label_4068f2:\n                                error(0, *__errno_location(), dcgettext(nullptr, rsi_41, 5), rbx_1);\n                                goto label_406910;\n                            }\n                            int32_t rax_182;\n                            int32_t rdx_66;\n                            int32_t rsi_77;\n                            rax_182 = __fxstat(1, var_2c8, &var_158);\n                            char r8_15;\n                            char* rcx_31;\n                            char* rdx_70;\n                            uint64_t rsi_82;\n                            if (rax_182 != 0)\n                            {\n                                var_2e8_1 = sub_40ea00(4, r14_1);\n                                rcx_31 = var_2e8_1;\n                                rdx_70 = dcgettext(nullptr, \"cannot fstat %s\", 5);\n                                rsi_82 = *__errno_location();\n                            label_407434:\n                                error(0, rsi_82, rdx_70, rcx_31);\n                                r8_15 = 0;\n                                var_2e8_1 = 0;\n                            }\n                            else\n                            {\n                                if ((var_270 != var_150 || (var_270 == var_150 && var_278 != var_158)))\n                                {\n                                    rcx_31 = sub_40ea00(4, r14_1);\n                                    rsi_82 = 0;\n                                    rdx_70 = dcgettext(nullptr, \"skipping file %s, as it was repl\u2026\", 5);\n                                    goto label_407434;\n                                }\n                                if ((var_270 == var_150 && var_278 == var_158))\n                                {\n                                    int32_t r12_18 = (r12_6 & 0x1ff);\n                                    int32_t var_350_1;\n                                    char* var_300;\n                                    if (var_2d8_1 == 0)\n                                    {\n                                        int32_t rax_186 = sub_40ae10(arg2, (((rsi_77 - rsi_77) & 0xfffffe00) + 0x201), rdx_66);\n                                        var_2f0 = rax_186;\n                                        bool rax_400;\n                                        bool r8_30;\n                                        if (((*(r13_1 + 0x20) & 0xff000000ff00) != 0 && rax_186 >= 0))\n                                        {\n                                            sub_405620(arg2, *(r13_1 + 0x25), 0, r13_1);\n                                            r8_30 = false;\n                                            rax_400 = *(r13_1 + 0x26);\n                                            var_2d8_1 = rax_400;\n                                        }\n                                        if ((((*(r13_1 + 0x20) & 0xff000000ff00) == 0 && var_2f0 >= 0) || (((*(r13_1 + 0x20) & 0xff000000ff00) != 0 && rax_186 >= 0) && rax_400 == 0)))\n                                        {\n                                            var_350_1 = 0;\n                                        label_408622:\n                                            int64_t* var_328_2 = &var_c8;\n                                            int32_t rax_346 = __fxstat(1, var_2f0, &var_c8);\n                                            var_300 = rax_346;\n                                            if (rax_346 != 0)\n                                            {\n                                                var_2e8_1 = sub_40ea00(4, arg2);\n                                                error(0, *__errno_location(), dcgettext(nullptr, \"cannot fstat %s\", 5), var_2e8_1);\n                                                r8_30 = false;\n                                                var_2e8_1 = 0;\n                                            }\n                                            else if (var_318 == 0)\n                                            {\n                                            label_408af0:\n                                                var_2e8_1 = 0;\n                                            label_40887f:\n                                                if (*(r13_1 + 0x1f) != 0)\n                                                {\n                                                    var_2a8 = var_230;\n                                                    int64_t var_2a0_1 = var_228;\n                                                    int64_t var_298_1 = var_220;\n                                                    int64_t var_290_1 = var_218;\n                                                    if (sub_410660(var_2f0, arg2, &var_2a8) != 0)\n                                                    {\n                                                        char* rax_396 = sub_40ea00(4, arg2);\n                                                        error(0, *__errno_location(), dcgettext(nullptr, \"preserving times for %s\", 5), rax_396);\n                                                        if (r13_1[9] != 0)\n                                                        {\n                                                            goto label_408c2e;\n                                                        }\n                                                    }\n                                                    goto label_40888a;\n                                                }\n                                            label_40888a:\n                                                if (*(r13_1 + 0x1d) != 0)\n                                                {\n                                                    int32_t var_ac;\n                                                    if (var_25c != var_ac)\n                                                    {\n                                                    label_4088d3:\n                                                        int32_t rax_368 = sub_405770(r13_1, arg2, var_2f0, var_2e0, var_2d8_1, var_328_2);\n                                                        if (rax_368 == 0xffffffff)\n                                                        {\n                                                            goto label_408c2e;\n                                                        }\n                                                        if (rax_368 == 0)\n                                                        {\n                                                            var_320 = (var_320 & 0xfffff1ff);\n                                                        }\n                                                    }\n                                                    else if (var_258 != var_a8)\n                                                    {\n                                                        goto label_4088d3;\n                                                    }\n                                                    goto label_4088ef;\n                                                }\n                                            label_4088ef:\n                                                if (*(r13_1 + 0x27) != 0)\n                                                {\n                                                    if ((((var_b0 & 0x80) == 0 && geteuid() != 0) && sub_404d10(var_2f0, arg2, 0x180) == 0))\n                                                    {\n                                                        sub_404d10(var_2f0, arg2, ((!var_350_1) & r12_18));\n                                                    }\n                                                    goto label_40890d;\n                                                }\n                                            label_40890d:\n                                                if ((*(r13_1 + 0x18) & 0xff0000000000ff) != 0)\n                                                {\n                                                    r8_30 = true;\n                                                    if (sub_40a0d0(r14_1, var_2c8, arg2) != 0)\n                                                    {\n                                                        goto label_408d83;\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    int32_t rdx_144;\n                                                    if (*(r13_1 + 0x2b) != 0)\n                                                    {\n                                                        rdx_144 = r13_1[4];\n                                                    label_40915b:\n                                                        r8_30 = sub_40a160(arg2, var_2f0, rdx_144) == 0;\n                                                    }\n                                                    else\n                                                    {\n                                                        if (r13_1[8] != 0)\n                                                        {\n                                                            rdx_144 = ((!sub_405960()) & 0x1b6);\n                                                            goto label_40915b;\n                                                        }\n                                                        r8_30 = true;\n                                                        if (var_350_1 != 0)\n                                                        {\n                                                            var_300 = 1;\n                                                            r8_30 = true;\n                                                            if ((var_350_1 & (!sub_405960())) != 0)\n                                                            {\n                                                                r8_30 = true;\n                                                                if (sub_404d10(var_2f0, arg2, r12_18) != 0)\n                                                                {\n                                                                    char* rax_479 = sub_40ea00(4, arg2);\n                                                                    error(0, *__errno_location(), dcgettext(nullptr, \"preserving permissions for %s\", 5), rax_479);\n                                                                label_408d83:\n                                                                    r8_30 = (r13_1[9] ^ 1);\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                            else if (r13_1[0xd] != 0)\n                                            {\n                                                if (ioctl(var_2f0, 0x40049409, var_2c8) == 0)\n                                                {\n                                                    goto label_408af0;\n                                                }\n                                                if (r13_1[0xd] != 2)\n                                                {\n                                                    goto label_408659;\n                                                }\n                                                char* rax_445 = sub_40e920(1, 4, r14_1);\n                                                char* rax_446 = sub_40e920(0, 4, arg2);\n                                                var_2e8_1 = dcgettext(nullptr, \"failed to clone %s from %s\", 5);\n                                                error(0, *__errno_location(), var_2e8_1, rax_446, rax_445);\n                                                r8_30 = false;\n                                                var_2e8_1 = 0;\n                                            }\n                                            else\n                                            {\n                                            label_408659:\n                                                r12_6 = getpagesize();\n                                                void* rax_348 = *var_98[8];\n                                                void* var_348_2 = rax_348;\n                                                void* var_338_2 = rax_348;\n                                                if ((rax_348 - 0x20000) > 0x1ffffffffffe0000)\n                                                {\n                                                    var_338_2 = 0x20000;\n                                                    void* rax_349 = 0x200;\n                                                    if ((var_348_2 - 1) <= 0x1fffffffffffffff)\n                                                    {\n                                                        rax_349 = var_348_2;\n                                                    }\n                                                    var_348_2 = rax_349;\n                                                }\n                                                sub_40add0(var_2c8, 0, 0, 2);\n                                                int32_t r9_7 = (var_140 & 0xf000);\n                                                if (r9_7 == 0x8000)\n                                                {\n                                                    int64_t rax_351;\n                                                    int64_t rdx_117;\n                                                    rdx_117 = HIGHD(var_128);\n                                                    rax_351 = LOWD(var_128);\n                                                    int64_t rax_352;\n                                                    rax_352 = var_118 < (COMBINE(rdx_117, rax_351) / 0x200);\n                                                    var_300 = rax_352;\n                                                }\n                                                var_2e8_1 = &r12_6[-1];\n                                                void* var_358_1;\n                                                char var_340;\n                                                int32_t var_330_2;\n                                                char var_32b_1;\n                                                uint64_t rdx_124;\n                                                int64_t r9_9;\n                                                if ((var_b0 & 0xf000) != 0x8000)\n                                                {\n                                                label_40872b:\n                                                    uint64_t rdi_95 = *var_128[8];\n                                                    uint64_t r8_26 = (0x7fffffffffffffff - r12_6);\n                                                    var_340 = r9_7;\n                                                    var_2e8_1 = r8_26;\n                                                    if ((rdi_95 - 0x20000) > 0x1ffffffffffe0000)\n                                                    {\n                                                        rdi_95 = 0x20000;\n                                                    }\n                                                    uint64_t rax_357 = sub_40a980(rdi_95, var_338_2, r8_26);\n                                                    int64_t r8_27 = var_2e8_1;\n                                                    if (var_340 == 0x8000)\n                                                    {\n                                                        void* rax_434 = var_128;\n                                                        if (var_338_2 > rax_434)\n                                                        {\n                                                            var_338_2 = (rax_434 + 1);\n                                                        }\n                                                    }\n                                                    uint64_t temp1_2 = (COMBINE(0, ((rax_357 + var_338_2) - 1)) % rax_357);\n                                                    void* rsi_134 = (((rax_357 + var_338_2) - 1) - temp1_2);\n                                                    bool cond:42_1 = ((rax_357 + var_338_2) - 1) == temp1_2;\n                                                    var_338_2 = rsi_134;\n                                                    if ((cond:42_1 || ((!cond:42_1) && r8_27 < rsi_134)))\n                                                    {\n                                                        var_338_2 = rax_357;\n                                                    }\n                                                    int64_t rax_362 = sub_4112e0((r12_6 + var_338_2));\n                                                    void* rcx_55 = &r12_6[(-1 + rax_362)];\n                                                    var_2e8_1 = rax_362;\n                                                    rdx_124 = (COMBINE(0, rcx_55) % r12_6);\n                                                    var_358_1 = (rcx_55 - rdx_124);\n                                                    if (var_300 != 0)\n                                                    {\n                                                        var_32b_1 = 0;\n                                                        var_330_2 = 1;\n                                                        goto label_408dd0;\n                                                    }\n                                                    var_348_2 = nullptr;\n                                                    var_300 = &var_2a8;\n                                                    r9_9 = r13_1[3] == 3;\n                                                    goto label_40882e;\n                                                }\n                                                int32_t rax_436 = r13_1[3];\n                                                if (rax_436 != 3)\n                                                {\n                                                    if (rax_436 != 2)\n                                                    {\n                                                        goto label_40872b;\n                                                    }\n                                                    if ((var_300 & 1) == 0)\n                                                    {\n                                                        goto label_40872b;\n                                                    }\n                                                    int64_t rax_438 = sub_4112e0((var_338_2 + r12_6));\n                                                    void* rcx_75 = &r12_6[(-1 + rax_438)];\n                                                    var_2e8_1 = rax_438;\n                                                    var_358_1 = (rcx_75 - (COMBINE(0, rcx_75) % r12_6));\n                                                    goto label_4092b8;\n                                                }\n                                                int64_t rax_462 = sub_4112e0((var_338_2 + r12_6));\n                                                void* rcx_82 = &r12_6[(-1 + rax_462)];\n                                                var_2e8_1 = rax_462;\n                                                rdx_124 = (COMBINE(0, rcx_82) % r12_6);\n                                                var_358_1 = (rcx_82 - rdx_124);\n                                                char var_2b0;\n                                                char* rsi_163;\n                                                if (var_300 != 0)\n                                                {\n                                                label_4092b8:\n                                                    var_330_2 = r13_1[3];\n                                                    var_32b_1 = var_318;\n                                                label_408dd0:\n                                                    char* rax_408 = var_128;\n                                                    r12_6 = nullptr;\n                                                    var_300 = &var_2a8;\n                                                    sub_409ae0(var_2c8, &var_2a8);\n                                                    int32_t var_360_1 = rbx_1;\n                                                    void* rcx_65 = nullptr;\n                                                    char var_32a_1 = r15;\n                                                    char r15_2 = var_318;\n                                                    var_340 = r14_1;\n                                                    void* r14_4 = nullptr;\n                                                    int64_t var_290;\n                                                    char var_287;\n                                                    int64_t var_280;\n                                                    char rax_409;\n                                                    do\n                                                    {\n                                                        rax_409 = sub_409b10(var_300);\n                                                        if (rax_409 == 0)\n                                                        {\n                                                            break;\n                                                        }\n                                                        if (var_290 != 0)\n                                                        {\n                                                            break;\n                                                        }\n                                                    label_409008:\n                                                        free(var_280);\n                                                        var_280 = 0;\n                                                        var_290 = 0;\n                                                    } while (var_287 == 0);\n                                                    if ((rax_409 != 0 && var_290 != 0))\n                                                    {\n                                                        void* rdx_138 = r14_4;\n                                                        char* rsi_155 = r12_6;\n                                                        int32_t r13_4 = 0;\n                                                        uint64_t rax_410 = 0;\n                                                        while (true)\n                                                        {\n                                                            char** rax_414 = (var_280 + (rax_410 * 0x18));\n                                                            r12_6 = *rax_414;\n                                                            r14_4 = rax_414[1];\n                                                            if (rax_408 < (r12_6 + r14_4))\n                                                            {\n                                                                if (r12_6 > rax_408)\n                                                                {\n                                                                    r12_6 = rax_408;\n                                                                }\n                                                                r14_4 = (rax_408 - r12_6);\n                                                            }\n                                                            r15_2 = 0;\n                                                            void* rcx_69 = (r12_6 - rsi_155);\n                                                            void* rcx_70 = (rcx_69 - rdx_138);\n                                                            void* r8_35;\n                                                            if (rcx_69 != rdx_138)\n                                                            {\n                                                                off64_t rax_416 = lseek(var_2c8, r12_6, 0);\n                                                                char rax_418;\n                                                                char* rsi_178;\n                                                                if (rax_416 < 0)\n                                                                {\n                                                                    r14_1 = var_340;\n                                                                    r15 = var_32a_1;\n                                                                    rbx_1 = var_360_1;\n                                                                    rsi_178 = \"cannot lseek %s\";\n                                                                    var_300 = sub_40ea00(4, r14_1);\n                                                                }\n                                                                else if (var_330_2 != 1)\n                                                                {\n                                                                    rax_418 = sub_405060(var_2f0, arg2, var_330_2 == 3, rcx_70);\n                                                                    r15_2 = rax_418;\n                                                                    if (rax_418 == 0)\n                                                                    {\n                                                                    label_408fa8:\n                                                                        r15 = var_32a_1;\n                                                                        r14_1 = var_340;\n                                                                        rbx_1 = var_360_1;\n                                                                    }\n                                                                }\n                                                                else\n                                                                {\n                                                                    if (sub_404c20(var_2f0, rcx_70) != 0)\n                                                                    {\n                                                                        r8_35 = nullptr;\n                                                                    label_408e9e:\n                                                                        char var_2b1;\n                                                                        *(rsp_1 - 0x10) = &var_2b1;\n                                                                        *(rsp_1 - 0x18) = &var_2b0;\n                                                                        *(rsp_1 - 0x20) = r14_4;\n                                                                        *(rsp_1 - 0x28) = arg2;\n                                                                        *(rsp_1 - 0x30) = var_340;\n                                                                        if (sub_405120(var_2c8, var_2f0, var_358_1, var_338_2, r8_35, 1) != 0)\n                                                                        {\n                                                                            int64_t rax_412 = var_2b0;\n                                                                            rcx_65 = &r12_6[rax_412];\n                                                                            if (rax_412 != 0)\n                                                                            {\n                                                                                r15_2 = var_2b1;\n                                                                            }\n                                                                            if (rax_408 == rcx_65)\n                                                                            {\n                                                                                var_287 = 1;\n                                                                                goto label_409008;\n                                                                            }\n                                                                            rax_410 = (r13_4 + 1);\n                                                                            rsi_155 = r12_6;\n                                                                            rdx_138 = r14_4;\n                                                                            r13_4 = rax_410;\n                                                                            if (rax_410 >= var_290)\n                                                                            {\n                                                                                goto label_409008;\n                                                                            }\n                                                                            continue;\n                                                                        }\n                                                                        goto label_408fa8;\n                                                                    }\n                                                                    r15 = var_32a_1;\n                                                                    r14_1 = var_340;\n                                                                    rbx_1 = var_360_1;\n                                                                    rsi_178 = \"%s: write failed\";\n                                                                    var_300 = sub_40ead0(0, 3, arg2);\n                                                                }\n                                                                if ((rax_416 < 0 || (rax_416 >= 0 && var_330_2 == 1)))\n                                                                {\n                                                                    error(0, *__errno_location(), dcgettext(nullptr, rsi_178, 5), var_300);\n                                                                }\n                                                                if (((rax_416 < 0 || (rax_416 >= 0 && var_330_2 == 1)) || ((rax_416 >= 0 && var_330_2 != 1) && rax_418 == 0)))\n                                                                {\n                                                                    free(var_280);\n                                                                    break;\n                                                                }\n                                                            }\n                                                            r8_35 = nullptr;\n                                                            if (var_330_2 == 3)\n                                                            {\n                                                                r8_35 = var_348_2;\n                                                            }\n                                                            goto label_408e9e;\n                                                        }\n                                                        goto label_408c2e;\n                                                    }\n                                                    void* var_318_2;\n                                                    if (rax_409 == 0)\n                                                    {\n                                                        var_318_2 = r15_2;\n                                                        r14_1 = var_340;\n                                                        r15 = var_32a_1;\n                                                        rbx_1 = var_360_1;\n                                                        if (var_287 != 0)\n                                                        {\n                                                            goto label_409061;\n                                                        }\n                                                        char var_288;\n                                                        if (var_288 == 0)\n                                                        {\n                                                            rsi_163 = \"%s: failed to get extents info\";\n                                                            var_300 = sub_40ead0(0, 3, r14_1);\n                                                            goto label_409103;\n                                                        }\n                                                        void* rax_485 = nullptr;\n                                                        r9_9 = r13_1[3] == 3;\n                                                        if (var_32b_1 != 0)\n                                                        {\n                                                            rax_485 = var_348_2;\n                                                        }\n                                                        var_348_2 = rax_485;\n                                                        goto label_40882e;\n                                                    }\n                                                    var_318_2 = r15_2;\n                                                    r14_1 = var_340;\n                                                    r15 = var_32a_1;\n                                                    rbx_1 = var_360_1;\n                                                label_409061:\n                                                    r12_6 = rax_408 > rcx_65;\n                                                    if ((rax_408 > rcx_65 || (rax_408 <= rcx_65 && var_318_2 != 0)))\n                                                    {\n                                                        if (var_330_2 == 1)\n                                                        {\n                                                            if (sub_404c20(var_2f0, (rax_408 - rcx_65)) == 0)\n                                                            {\n                                                                goto label_40951a;\n                                                            }\n                                                        }\n                                                        else\n                                                        {\n                                                            __off64_t rcx_72 = rcx_65;\n                                                            if (ftruncate(var_2f0) != 0)\n                                                            {\n                                                                goto label_40951a;\n                                                            }\n                                                            if (((var_330_2 == 3 && r12_6 != 0) && sub_404cd0(var_2f0, rcx_72, (rax_408 - rcx_72)) < 0))\n                                                            {\n                                                                rsi_163 = \"error deallocating %s\";\n                                                                var_300 = sub_40ea00(4, arg2);\n                                                                goto label_409103;\n                                                            }\n                                                        }\n                                                    }\n                                                    goto label_40887f;\n                                                }\n                                                r9_9 = r13_1[3] == 3;\n                                                var_300 = &var_2a8;\n                                            label_40882e:\n                                                *(rsp_1 - 8) = rdx_124;\n                                                *(rsp_1 - 0x10) = &var_2b0;\n                                                *(rsp_1 - 0x18) = var_300;\n                                                *(rsp_1 - 0x20) = -1;\n                                                *(rsp_1 - 0x28) = arg2;\n                                                *(rsp_1 - 0x30) = r14_1;\n                                                if (sub_405120(var_2c8, var_2f0, var_358_1, var_338_2, var_348_2, r9_9) == 0)\n                                                {\n                                                    goto label_408c2e;\n                                                }\n                                                if (var_2b0 == 0)\n                                                {\n                                                    goto label_40887f;\n                                                }\n                                                if (ftruncate(var_2f0) >= 0)\n                                                {\n                                                    goto label_40887f;\n                                                }\n                                            label_40951a:\n                                                rsi_163 = \"failed to extend %s\";\n                                                var_300 = sub_40ea00(4, arg2);\n                                            label_409103:\n                                                error(0, *__errno_location(), dcgettext(nullptr, rsi_163, 5), var_300);\n                                            label_408c2e:\n                                                r8_30 = false;\n                                            }\n                                            goto label_408946;\n                                        }\n                                        if ((((*(r13_1 + 0x20) & 0xff000000ff00) != 0 && rax_186 >= 0) && rax_400 != 0))\n                                        {\n                                            var_2d8_1 = false;\n                                            var_2e8_1 = 0;\n                                        label_408946:\n                                            var_300 = r8_30;\n                                            r8_15 = var_300;\n                                            if (close(var_2f0) < 0)\n                                            {\n                                                char* rax_370 = sub_40ea00(4, arg2);\n                                                error(0, *__errno_location(), dcgettext(nullptr, \"failed to close %s\", 5), rax_370);\n                                                r8_15 = 0;\n                                            }\n                                        }\n                                        if ((((*(r13_1 + 0x20) & 0xff000000ff00) == 0 && var_2f0 < 0) || ((*(r13_1 + 0x20) & 0xff000000ff00) != 0 && rax_186 < 0)))\n                                        {\n                                            r12_6 = __errno_location();\n                                            if (*(r13_1 + 0x16) == 0)\n                                            {\n                                                r12_6 = *r12_6;\n                                                if ((r12_6 == 2 && r13_1[6] == 0))\n                                                {\n                                                    var_350_1 = 0;\n                                                    goto label_407398;\n                                                }\n                                                var_2d8_1 = false;\n                                            label_407417:\n                                                var_2e8_1 = sub_40ea00(4, arg2);\n                                                rcx_31 = var_2e8_1;\n                                                rsi_82 = r12_6;\n                                                rdx_70 = dcgettext(nullptr, \"cannot create regular file %s\", 5);\n                                                goto label_407434;\n                                            }\n                                            if (unlink(arg2) != 0)\n                                            {\n                                                var_2e8_1 = sub_40ea00(4, arg2);\n                                                rcx_31 = var_2e8_1;\n                                                rsi_82 = *r12_6;\n                                                rdx_70 = dcgettext(nullptr, \"cannot remove %s\", 5);\n                                                goto label_407434;\n                                            }\n                                            if (*(r13_1 + 0x2e) != 0)\n                                            {\n                                                __printf_chk(1, dcgettext(nullptr, \"removed %s\\n\", 5), sub_40ea00(4, arg2));\n                                            }\n                                            bool rax_189 = *(r13_1 + 0x21);\n                                            var_2d8_1 = rax_189;\n                                            var_350_1 = var_310_1;\n                                            if (rax_189 == 0)\n                                            {\n                                                goto label_407398;\n                                            }\n                                            char rax_460 = sub_405550(r14_1, arg2, r12_18, 1, r13_1);\n                                            r8_15 = rax_460;\n                                            if (rax_460 != 0)\n                                            {\n                                                goto label_4083d9;\n                                            }\n                                            var_2e8_1 = 0;\n                                        }\n                                    }\n                                    else\n                                    {\n                                    label_4083d9:\n                                        var_350_1 = var_310_1;\n                                    label_407398:\n                                        int32_t r12_21 = ((!var_350_1) & r12_18);\n                                        var_2f0 = sub_40ae10(arg2, 0xc1, r12_21);\n                                        int32_t* rax_192 = __errno_location();\n                                        r12_6 = *rax_192;\n                                        var_300 = rax_192;\n                                        rax_192 = r12_6 == 0x11;\n                                        rax_192 = (rax_192 & (var_2f0 >> 0x1f));\n                                        var_328 = rax_192;\n                                        if (rax_192 == 0)\n                                        {\n                                            goto label_408a98;\n                                        }\n                                        bool rax_193 = r13_1[6];\n                                        r12_6 = 0x11;\n                                        var_2d8_1 = rax_193;\n                                        if (rax_193 != 0)\n                                        {\n                                            goto label_407417;\n                                        }\n                                        if (__lxstat(1, arg2, &var_c8) != 0)\n                                        {\n                                            goto label_408a98;\n                                        }\n                                        if ((var_b0 & 0xf000) != 0xa000)\n                                        {\n                                            goto label_408a98;\n                                        }\n                                        char r8_32 = r13_1[0xc];\n                                        if (r8_32 != 0)\n                                        {\n                                            var_2f0 = sub_40ae10(arg2, 0x41, r12_21);\n                                            r12_6 = *var_300;\n                                        label_408a98:\n                                            bool rdx_69 = (r12_6 == 0x15 & (var_2f0 >> 0x1f));\n                                            var_2d8_1 = rdx_69;\n                                            if (rdx_69 == 0)\n                                            {\n                                                var_2d8_1 = true;\n                                                if (var_2f0 >= 0)\n                                                {\n                                                    goto label_408622;\n                                                }\n                                                goto label_407417;\n                                            }\n                                            r12_6 = 0x15;\n                                            char* rdi_103 = arg2;\n                                            if (*arg2 != 0)\n                                            {\n                                                int64_t rcx_60 = -1;\n                                                while (rcx_60 != 0)\n                                                {\n                                                    bool cond:35_1 = 0 != *rdi_103;\n                                                    rdi_103 = &rdi_103[1];\n                                                    rcx_60 = (rcx_60 - 1);\n                                                    if ((!cond:35_1))\n                                                    {\n                                                        break;\n                                                    }\n                                                }\n                                                int32_t r12_33;\n                                                r12_33 = arg2[((!rcx_60) - 2)] != 0x2f;\n                                                r12_6 = (r12_33 + 0x14);\n                                            }\n                                            goto label_407417;\n                                        }\n                                        var_2f0 = r8_32;\n                                        error(0, 0, dcgettext(nullptr, \"not writing through dangling sym\u2026\", 5), sub_40ea00(4, arg2));\n                                        var_2e8_1 = 0;\n                                        r8_15 = var_2f0;\n                                        var_2d8_1 = var_328;\n                                    }\n                                }\n                            }\n                            var_2f0 = r8_15;\n                            bool r8_16 = var_2f0;\n                            if (close(var_2c8) < 0)\n                            {\n                                rbx_1 = sub_40ea00(4, r14_1);\n                                error(0, *__errno_location(), dcgettext(nullptr, \"failed to close %s\", 5), rbx_1);\n                                free(var_2e8_1);\n                                goto label_406910;\n                            }\n                            free(var_2e8_1);\n                            r8_4 = r8_16;\n                            var_2f0 = 0;\n                            var_2e8_1 = r8_4;\n                            if (r8_4 != 0)\n                            {\n                                goto label_405f4f;\n                            }\n                            goto label_406910;\n                        }\n                        char temp3_1 = *r14_1;\n                        bool c_1 = temp3_1 < 0x2f;\n                        bool z_1 = temp3_1 == 0x2f;\n                        if (z_1)\n                        {\n                            goto label_405f21;\n                        }\n                        char* rax_29 = sub_40ac60(arg2);\n                        void* const rsi_10 = &data_418d7b;\n                        int64_t rcx_4 = 2;\n                        char* rdi_7 = rax_29;\n                        r12_6 = rax_29;\n                        while (rcx_4 != 0)\n                        {\n                            char temp4_1 = *rsi_10;\n                            char temp5_1 = *rdi_7;\n                            c_1 = temp4_1 < temp5_1;\n                            z_1 = temp4_1 == temp5_1;\n                            rsi_10 = (rsi_10 + 1);\n                            rdi_7 = &rdi_7[1];\n                            rcx_4 = (rcx_4 - 1);\n                            if ((!z_1))\n                            {\n                                break;\n                            }\n                        }\n                        rax_29 = ((!z_1) && (!c_1));\n                        rax_29 = (rax_29 - 0);\n                        if (rax_29 != 0)\n                        {\n                            if (__xstat(1, &data_418d7b, &var_158) != 0)\n                            {\n                                goto label_405f08;\n                            }\n                            if (__xstat(1, r12_6, &var_c8) != 0)\n                            {\n                                goto label_405f08;\n                            }\n                            if (var_150 != var_c0)\n                            {\n                            label_4077e1:\n                                free(r12_6);\n                                rsi_38 = \"%s: can make relative symbolic l\u2026\";\n                                rbx_1 = sub_40ead0(0, 3, arg2);\n                                goto label_4067c5;\n                            }\n                            if (var_158 == var_c8)\n                            {\n                                goto label_405f08;\n                            }\n                            goto label_4077e1;\n                        }\n                    label_405f08:\n                        free(r12_6);\n                    label_405f21:\n                        if (sub_409fd0(r14_1, 0xffffff9c, arg2, *(r13_1 + 0x16)) < 0)\n                        {\n                            rbx_1 = sub_40e920(1, 4, r14_1);\n                            char* rax_268 = sub_40e920(0, 4, arg2);\n                            error(0, *__errno_location(), dcgettext(nullptr, \"cannot create symbolic link %s t\u2026\", 5), rax_268, rbx_1);\n                        label_406910:\n                            if (*(r13_1 + 0x25) != 0)\n                            {\n                                goto label_406e0d;\n                            }\n                            if (var_2f8_2 == 0)\n                            {\n                                sub_409980();\n                            }\n                            goto label_4063ba;\n                        }\n                        var_329_1 = false;\n                        r8_4 = false;\n                        var_2e8_1 = var_2f0;\n                    label_405f4f:\n                        r12_6 = rax_5 != 0x4000;\n                        if (var_2d8_1 == 0)\n                        {\n                            if (r13_1[5] == 1)\n                            {\n                                goto label_405fb0;\n                            }\n                            if (r12_6 == 0)\n                            {\n                                goto label_405fb0;\n                            }\n                            if ((*(r13_1 + 0x20) & 0xff000000ff00) == 0)\n                            {\n                                goto label_405fb0;\n                            }\n                            sub_405620(arg2, *(r13_1 + 0x25), 0, r13_1);\n                            if (*(r13_1 + 0x26) != 0)\n                            {\n                                goto label_406910;\n                            }\n                            goto label_405fb0;\n                        }\n                    label_405fb0:\n                        if (rbx_1 != 0)\n                        {\n                            if (*(r13_1 + 0x38) != 0)\n                            {\n                                bool var_2c8_2 = r8_4;\n                                r8_4 = var_2c8_2;\n                                if (__lxstat(1, arg2, &var_c8) == 0)\n                                {\n                                    sub_40ae60(*(r13_1 + 0x38), arg2, &var_c8);\n                                    r8_4 = var_2c8_2;\n                                }\n                            }\n                            goto label_406008;\n                        }\n                    label_406008:\n                        if (*(r13_1 + 0x17) != 0)\n                        {\n                            if (r12_6 == 0)\n                            {\n                                goto label_406018;\n                            }\n                        label_406700:\n                            r15 = var_2e8_1;\n                            goto label_406282;\n                        }\n                    label_406018:\n                        if (r8_4 != 0)\n                        {\n                            goto label_406700;\n                        }\n                        if (*(r13_1 + 0x1f) != 0)\n                        {\n                            int128_t* rsi_14 = &var_c8;\n                            var_c8 = var_230;\n                            int64_t var_c0_1 = var_228;\n                            var_b8 = var_220;\n                            var_b0 = var_218;\n                            if (var_2f0 == 0)\n                            {\n                                if (sub_410aa0(arg2, rsi_14) == 0)\n                                {\n                                    goto label_4060ed;\n                                }\n                            label_40609e:\n                                error(0, *__errno_location(), dcgettext(nullptr, \"preserving times for %s\", 5), sub_40ea00(4, arg2));\n                                if (r13_1[9] == 0)\n                                {\n                                    goto label_4060e0;\n                                }\n                            label_405dc3:\n                                r15 = 0;\n                                goto label_406282;\n                            }\n                            if (sub_410ab0(arg2, rsi_14) == 0)\n                            {\n                                goto label_4060e0;\n                            }\n                            if (*__errno_location() != 0x26)\n                            {\n                                goto label_40609e;\n                            }\n                            goto label_4060e0;\n                        }\n                    label_4060e0:\n                        if (var_2f0 != 0)\n                        {\n                            goto label_406700;\n                        }\n                    label_4060ed:\n                        if (*(r13_1 + 0x1d) != 0)\n                        {\n                            if (var_2d8_1 != 0)\n                            {\n                            label_406134:\n                                int32_t rax_44 = sub_405770(r13_1, arg2, 0xffffffff, var_2e0, var_2d8_1, &var_1e8);\n                                if (rax_44 == 0xffffffff)\n                                {\n                                    goto label_405dc3;\n                                }\n                                int32_t rdx_21;\n                                *rdx_21[1] = (*var_260[1] & 0xf1);\n                                if (rax_44 != 0)\n                                {\n                                    rdx_21 = var_260;\n                                }\n                                int32_t var_2d0_1 = rdx_21;\n                                goto label_406162;\n                            }\n                            int32_t var_1cc;\n                            if (var_25c != var_1cc)\n                            {\n                                goto label_406134;\n                            }\n                            int32_t var_1c8;\n                            if (var_258 != var_1c8)\n                            {\n                                goto label_406134;\n                            }\n                            goto label_406162;\n                        }\n                    label_406162:\n                        if ((*(r13_1 + 0x18) & 0xff0000000000ff) != 0)\n                        {\n                            if (sub_40a0d0(r14_1, 0xffffffff, arg2) == 0)\n                            {\n                                goto label_406700;\n                            }\n                            goto label_4061fb;\n                        }\n                        int32_t rdx_95;\n                        if (*(r13_1 + 0x2b) != 0)\n                        {\n                            rdx_95 = r13_1[4];\n                        label_407e52:\n                            uint32_t rax_278 = var_2e8_1;\n                            if (sub_40a160(arg2, 0xffffffff, rdx_95) != 0)\n                            {\n                                rax_278 = r15;\n                            }\n                            r15 = rax_278;\n                            goto label_406282;\n                        }\n                        if (r13_1[8] != 0)\n                        {\n                            rdx_95 = ((!sub_405960()) & 0x1ff);\n                            goto label_407e52;\n                        }\n                        if (var_310_1 != 0)\n                        {\n                            int32_t temp7_1 = (var_310_1 & (!sub_405960()));\n                            var_310_1 = temp7_1;\n                            if (temp7_1 == 0)\n                            {\n                                goto label_406190;\n                            }\n                            if (var_329_1 == 1)\n                            {\n                            label_4061b0:\n                                if (chmod(arg2, (var_34c | var_310_1)) == 0)\n                                {\n                                    goto label_406700;\n                                }\n                                int64_t rax_47 = sub_40ea00(4, arg2);\n                                error(0, *__errno_location(), dcgettext(nullptr, \"preserving permissions for %s\", 5), rax_47);\n                            label_4061fb:\n                                uint32_t rax_51 = var_2e8_1;\n                                if (r13_1[9] != 0)\n                                {\n                                    rax_51 = r15;\n                                }\n                                r15 = rax_51;\n                                goto label_406282;\n                            }\n                            if (var_2d8_1 != 0)\n                            {\n                                if (__lxstat(1, arg2, &var_1e8) == 0)\n                                {\n                                    goto label_4066ea;\n                                }\n                                rsi_1 = arg2;\n                            label_40623c:\n                                r15 = 0;\n                                int64_t rax_53 = sub_40ea00(4, rsi_1);\n                                error(0, *__errno_location(), dcgettext(nullptr, \"cannot stat %s\", 5), rax_53);\n                            label_406282:\n                                return r15;\n                            }\n                        label_4066ea:\n                            var_34c = var_1d0;\n                            if ((var_310_1 & (!var_1d0)) == 0)\n                            {\n                                goto label_406700;\n                            }\n                            goto label_4061b0;\n                        }\n                    label_406190:\n                        if (var_329_1 == 0)\n                        {\n                            goto label_406700;\n                        }\n                        goto label_4061b0;\n                    }\n                    if (rax_5 == 0x4000)\n                    {\n                        if (sub_405550(r14_1, arg2, var_260, var_2c8, r13_1) == 0)\n                        {\n                            goto label_406282;\n                        }\n                        var_310_1 = (r12_6 & 0x12);\n                    label_406761:\n                        int64_t rcx_16 = var_278;\n                        char* rax_92 = arg5;\n                        if (arg5 == 0)\n                        {\n                        label_406948:\n                            void* rsp_2 = (rsp_1 - 0x20);\n                            char** rax_107 = ((rsp_2 + 0xf) & 0xfffffffffffffff0);\n                            *rax_107 = arg5;\n                            rax_107[1] = var_270;\n                            rax_107[2] = rcx_16;\n                            if (var_2d8_1 != 0)\n                            {\n                            label_40699f:\n                                if (mkdir(arg2, ((!var_310_1) & r12_6)) != 0)\n                                {\n                                    rsi_41 = \"cannot create directory %s\";\n                                    rbx_1 = sub_40ea00(4, arg2);\n                                    goto label_4068f2;\n                                }\n                                if (__lxstat(1, arg2, &var_1e8) != 0)\n                                {\n                                    rsi_41 = \"cannot stat %s\";\n                                    rbx_1 = sub_40ea00(4, arg2);\n                                    goto label_4068f2;\n                                }\n                                r12_6 = var_1d0;\n                                var_329_1 = false;\n                                if ((r12_6 & 0x1c0) != 0x1c0)\n                                {\n                                    var_34c = r12_6;\n                                    var_329_1 = true;\n                                    if (chmod(arg2, (r12_6 | 0x1c0)) == 0)\n                                    {\n                                        goto label_406a18;\n                                    }\n                                    rsi_41 = \"setting permissions for %s\";\n                                    rbx_1 = sub_40ea00(4, arg2);\n                                    goto label_4068f2;\n                                }\n                            label_406a18:\n                                if (*arg8 != 0)\n                                {\n                                    goto label_406a21;\n                                }\n                                sub_409a10(arg2, var_1e0, var_1e8);\n                                *arg8 = 1;\n                            label_406a21:\n                                if (*(r13_1 + 0x2e) == 0)\n                                {\n                                    goto label_406a7a;\n                                }\n                                if (r13_1[6] == 0)\n                                {\n                                    sub_404d70(r14_1, arg2, 0);\n                                }\n                                else\n                                {\n                                    __printf_chk(1, dcgettext(nullptr, \"created directory %s\\n\", 5), sub_40ea00(4, arg2));\n                                }\n                                goto label_406a7a;\n                            }\n                            if ((var_1d0 & 0xf000) != 0x4000)\n                            {\n                                goto label_40699f;\n                            }\n                            if ((*(r13_1 + 0x20) & 0xff000000ff00) != 0)\n                            {\n                                sub_405620(arg2, *(r13_1 + 0x25), 0, r13_1);\n                                if (*(r13_1 + 0x26) == 0)\n                                {\n                                    goto label_407b84;\n                                }\n                                goto label_406910;\n                            }\n                        label_407b84:\n                            var_329_1 = false;\n                            var_310_1 = 0;\n                        label_406a7a:\n                            r12_6 = arg4 != 0;\n                            r12_6 = (r12_6 & r13_1[7]);\n                            var_2e8_1 = r12_6;\n                            if (r12_6 != 0)\n                            {\n                                var_2f0 = 0;\n                                r8_4 = false;\n                            }\n                            if ((r12_6 == 0 || (r12_6 != 0 && *arg4 == var_278)))\n                            {\n                                var_c8 = *r13_1;\n                                var_b8 = *(r13_1 + 0x10);\n                                int128_t var_a8_1 = *(r13_1 + 0x20);\n                                int128_t var_98_1 = *(r13_1 + 0x30);\n                                var_88 = *(r13_1 + 0x40);\n                                char* rax_121 = sub_40f480(r14_1, 2);\n                                if (rax_121 == 0)\n                                {\n                                    var_2c8 = sub_40ea00(4, r14_1);\n                                    error(0, *__errno_location(), dcgettext(nullptr, \"cannot access %s\", 5), var_2c8);\n                                    var_2e8_1 = 0;\n                                }\n                                else\n                                {\n                                    if (r13_1[1] == 3)\n                                    {\n                                        *var_c8[4] = 2;\n                                    }\n                                    if (*rax_121 == 0)\n                                    {\n                                        r12_6 = nullptr;\n                                        var_2e8_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        char var_340_1 = r15;\n                                        char* r12_15 = rax_121;\n                                        dev_t* var_318_1 = &var_158;\n                                        int32_t r15_1 = 0;\n                                        dev_t* var_328_1 = &var_c8;\n                                        var_2e8_1 = 1;\n                                        char* var_300_1 = &var_2a8;\n                                        var_2f0 = r14_1;\n                                        int32_t var_330_1 = rbx_1;\n                                        do\n                                        {\n                                            int64_t rax_124 = sub_40b0c0(var_2f0, r12_15, nullptr);\n                                            int64_t rax_125 = sub_40b0c0(arg2, r12_15, nullptr);\n                                            char rax_127 = *arg8;\n                                            *(rsp_2 - 8) = 0;\n                                            *(rsp_2 - 0x10) = var_300_1;\n                                            *(rsp_2 - 0x18) = var_318_1;\n                                            *(rsp_2 - 0x20) = 0;\n                                            var_158 = rax_127;\n                                            var_2e8_1 = (var_2e8_1 & sub_405990(rax_124, rax_125, var_2c8, var_2e0, rax_107, var_328_1));\n                                            *arg9 = (*arg9 | var_2a8);\n                                            free(rax_125);\n                                            free(rax_124);\n                                            if (var_2a8 != 0)\n                                            {\n                                                break;\n                                            }\n                                            r15_1 = (r15_1 | var_158);\n                                            r12_15 = &r12_15[(strlen(r12_15) + 1)];\n                                        } while (*r12_15 != 0);\n                                        r12_6 = r15_1;\n                                        r14_1 = var_2f0;\n                                        r15 = var_340_1;\n                                        rbx_1 = var_330_1;\n                                    }\n                                    free(rax_121);\n                                    *arg8 = r12_6;\n                                }\n                                var_2f0 = 0;\n                                r8_4 = false;\n                            }\n                            goto label_405f4f;\n                        }\n                        while ((!(*(rax_92 + 8) == var_270 && *(rax_92 + 0x10) == rcx_16)))\n                        {\n                            rax_92 = *rax_92;\n                            if (rax_92 == 0)\n                            {\n                                break;\n                            }\n                        }\n                        if ((!(*(rax_92 + 8) == var_270 && *(rax_92 + 0x10) == rcx_16)))\n                        {\n                            goto label_406948;\n                        }\n                        rsi_38 = \"cannot copy cyclic symbolic link\u2026\";\n                        rbx_1 = sub_40ea00(4, r14_1);\n                    label_4067c5:\n                        error(0, 0, dcgettext(nullptr, rsi_38, 5), rbx_1);\n                        goto label_406910;\n                    }\n                    char rax_27;\n                    rax_27 = sub_405550(r14_1, arg2, var_260, var_2c8, r13_1);\n                    var_310_1 = 0;\n                    if (rax_27 == 0)\n                    {\n                        goto label_406282;\n                    }\n                    goto label_405ec1;\n                }\n            label_406440:\n                if (*(r13_1 + 0x17) != 0)\n                {\n                    var_2f8_2 = nullptr;\n                label_406456:\n                    if (r13_1[6] != 0)\n                    {\n                        goto label_4064b1;\n                    }\n                    var_2c8 = var_2d8_1;\n                    goto label_405e5d;\n                }\n                if (var_268 <= 1)\n                {\n                    int32_t rax_81 = r13_1[1];\n                    if (rbx_1 == 0)\n                    {\n                    label_4065f7:\n                        var_2f8_2 = nullptr;\n                        if (rax_81 == 4)\n                        {\n                            goto label_406625;\n                        }\n                        goto label_406456;\n                    }\n                    if (rax_81 != 3)\n                    {\n                        goto label_4065f7;\n                    }\n                    goto label_406625;\n                }\n            label_406625:\n                var_2f8_2 = sub_409a10(arg2, var_270, var_278);\n                goto label_40662c;\n            }\n        label_405dec:\n            if (*(r13_1 + 0x2e) != 0)\n            {\n                if (r13_1[6] != 0)\n                {\n                label_406470:\n                    if (rax_5 == 0x4000)\n                    {\n                        if (*(r13_1 + 0x2a) != 0)\n                        {\n                            goto label_4062cb;\n                        }\n                        goto label_406487;\n                    }\n                label_406487:\n                    if (var_268 == 1)\n                    {\n                        var_2f8_2 = sub_4099d0(var_270);\n                    label_40662c:\n                        if (var_2f8_2 == 0)\n                        {\n                            goto label_406456;\n                        }\n                        if (rax_5 == 0x4000)\n                        {\n                            goto label_40630f;\n                        }\n                        if (sub_404f50(var_2f8_2, arg2, 1, *(r13_1 + 0x2e), var_2e8_1) != 0)\n                        {\n                            goto label_406676;\n                        }\n                        goto label_4063a8;\n                    }\n                    if (*(r13_1 + 0x22) != 0)\n                    {\n                        goto label_406440;\n                    }\n                    var_2f8_2 = nullptr;\n                label_4064b1:\n                    if (rename(r14_1, arg2) != 0)\n                    {\n                        int32_t* rax_73 = __errno_location();\n                        int32_t rax_74 = *rax_73;\n                        if (rax_74 == 0x16)\n                        {\n                            r15 = 1;\n                            char* rax_262 = sub_40e920(1, 4, data_621988);\n                            error(0, 0, dcgettext(nullptr, \"cannot move %s to a subdirectory\u2026\", 5), sub_40e920(0, 4, data_621990), rax_262);\n                            *arg9 = 1;\n                            goto label_406282;\n                        }\n                        char* rbx_10;\n                        char* rsi_64;\n                        char* r13_3;\n                        if (rax_74 != 0x12)\n                        {\n                            r13_3 = sub_40e920(1, 4, arg2);\n                            rsi_64 = \"cannot move %s to %s\";\n                            rbx_10 = sub_40e920(0, 4, r14_1);\n                        label_406f95:\n                            error(0, *rax_73, dcgettext(nullptr, rsi_64, 5), rbx_10, r13_3);\n                            sub_409980();\n                            goto label_406282;\n                        }\n                        if (rax_5 == 0x4000)\n                        {\n                            if (rmdir(arg2) == 0)\n                            {\n                            label_406522:\n                                var_2c8 = 1;\n                                var_2d8_1 = true;\n                                goto label_405e5d;\n                            }\n                            if (*rax_73 == 2)\n                            {\n                                goto label_406522;\n                            }\n                        label_406f68:\n                            r13_3 = sub_40e920(1, 4, arg2);\n                            rsi_64 = \"inter-device move failed: %s to \u2026\";\n                            rbx_10 = sub_40e920(0, 4, r14_1);\n                            goto label_406f95;\n                        }\n                        if (unlink(arg2) == 0)\n                        {\n                        label_40650f:\n                            int32_t rax_75;\n                            rax_75 = rax_5 != 0x4000;\n                            rax_75 = (rax_75 & *(r13_1 + 0x2e));\n                            var_2d8_1 = rax_75;\n                            if (rax_75 == 0)\n                            {\n                                goto label_406522;\n                            }\n                            __printf_chk(1, dcgettext(nullptr, \"copied \", 5));\n                            sub_404d70(r14_1, arg2, var_308_1);\n                            var_2c8 = 1;\n                            goto label_405e5d;\n                        }\n                        if (*rax_73 == 2)\n                        {\n                            goto label_40650f;\n                        }\n                        goto label_406f68;\n                    }\n                    if (*(r13_1 + 0x2e) != 0)\n                    {\n                        __printf_chk(1, dcgettext(nullptr, \"renamed \", 5));\n                        sub_404d70(r14_1, arg2, var_308_1);\n                    }\n                    if (*(r13_1 + 0x21) != 0)\n                    {\n                        sub_405620(arg2, 0, 1, r13_1);\n                    }\n                    if (arg10 != 0)\n                    {\n                        *arg10 = 1;\n                    }\n                    if (rbx_1 == 0)\n                    {\n                        goto label_406676;\n                    }\n                    r15 = rbx_1;\n                    sub_40ae60(*(r13_1 + 0x38), arg2, var_2e0);\n                    goto label_406282;\n                }\n            label_405e02:\n                if (rax_5 != 0x4000)\n                {\n                    sub_404d70(r14_1, arg2, var_308_1);\n                label_405e28:\n                    if (r13_1[6] != 0)\n                    {\n                        goto label_406487;\n                    }\n                    goto label_405e33;\n                }\n            label_4067f0:\n                if (*(r13_1 + 0x2a) != 0)\n                {\n                    goto label_4062cb;\n                }\n                goto label_405e33;\n            }\n        label_4062b0:\n            if (*(r13_1 + 0x2a) == 0)\n            {\n                goto label_405e28;\n            }\n            if (rax_5 != 0x4000)\n            {\n                goto label_405e28;\n            }\n        label_4062cb:\n            int64_t rdx_48 = var_278;\n            rdi_15 = var_270;\n            if (rbx_1 == 0)\n            {\n                goto label_406d18;\n            }\n            var_2f8_2 = sub_409a10(arg2, rdi_15, rdx_48);\n        label_4062f7:\n            if (var_2f8_2 == 0)\n            {\n                goto label_406456;\n            }\n        label_40630f:\n            if (sub_40ef80(r14_1, var_2f8_2) != 0)\n            {\n                rbx_1 = sub_40e920(1, 4, data_621988);\n                error(0, 0, dcgettext(nullptr, \"cannot copy a directory, %s, int\u2026\", 5), sub_40e920(0, 4, data_621990), rbx_1);\n                *arg9 = 1;\n            label_4063a8:\n                if (*(r13_1 + 0x25) != 0)\n                {\n                label_406e0d:\n                    rdx_46 = sub_404d30();\n                label_406e1f:\n                    rax_135 = dcgettext(nullptr, \"-r not specified; omitting direc\u2026\", rdx_46);\n                label_406ce5:\n                    r15 = 0;\n                    error(0, 0, rax_135, rbx_1);\n                    goto label_406282;\n                }\n            label_4063ba:\n                if (var_308_1 == 0)\n                {\n                    goto label_406282;\n                }\n                if (rename(var_308_1, arg2) != 0)\n                {\n                    int64_t rax_172 = sub_40ea00(4, arg2);\n                    error(0, *__errno_location(), dcgettext(nullptr, \"cannot un-backup %s\", 5), rax_172);\n                }\n                else if (*(r13_1 + 0x2e) != 0)\n                {\n                    char* rax_67 = sub_40e920(1, 4, arg2);\n                    __printf_chk(1, dcgettext(nullptr, \"%s -> %s (unbackup)\\n\", 5), sub_40e920(0, 4, var_308_1), rax_67);\n                }\n                goto label_406282;\n            }\n            if (sub_40ef80(arg2, var_2f8_2) != 0)\n            {\n                error(0, 0, dcgettext(nullptr, \"warning: source directory %s spe\u2026\", 5), sub_40ea00(4, data_621990));\n                if (r13_1[6] == 0)\n                {\n                    goto label_406676;\n                }\n                if (cond:0 == 0)\n                {\n                    goto label_406676;\n                }\n                goto label_4071af;\n            }\n            int32_t rax_61 = r13_1[1];\n            if (rax_61 == 4)\n            {\n                goto label_406456;\n            }\n            if (rax_61 != 3)\n            {\n            label_406362:\n                char* rax_62 = sub_40e920(1, 4, var_2f8_2);\n                rbx_1 = sub_40e920(0, 4, arg2);\n                error(0, 0, dcgettext(nullptr, \"will not create hard link %s to \u2026\", 5), rbx_1, rax_62);\n                goto label_4063a8;\n            }\n            if (rbx_1 == 0)\n            {\n                goto label_406362;\n            }\n            goto label_406456;\n        }\n        int64_t* var_2f8_1;\n        char r8;\n        if (rax_5 != 0x8000)\n        {\n            if (r13_1[5] == 0)\n            {\n            label_406556:\n                var_2f8_1 = &var_1e8;\n                r8 = arg3;\n                var_2d8_1 = __lxstat(1, arg2, &var_1e8) != 0;\n                if (var_2d8_1 != 0)\n                {\n                label_40657b:\n                    int32_t* rax_77 = __errno_location();\n                    if (*rax_77 == 2)\n                    {\n                        goto label_405dd0;\n                    }\n                    var_2c8 = rax_77;\n                    r15 = arg3;\n                    int32_t* r8_7 = var_2c8;\n                    error(0, *r8_7, dcgettext(nullptr, \"cannot stat %s\", 5), sub_40ea00(4, arg2), r8_7);\n                    goto label_406282;\n                }\n            label_405b4b:\n                int32_t var_310;\n                dev_t* var_308;\n                int32_t rcx_26;\n                dev_t* rdx_51;\n                dev_t* r9_3;\n                bool r12_16;\n                if (var_270 == var_1e0)\n                {\n                    if (var_278 != var_1e8)\n                    {\n                        goto label_405b58;\n                    }\n                    r12_16 = *(r13_1 + 0x17);\n                    if (r12_16 != 0)\n                    {\n                    label_407660:\n                        var_2d8_1 = true;\n                    label_405b63:\n                        int32_t rax_12;\n                        if (rax_5 == 0x4000)\n                        {\n                            if (r13_1[6] != 0)\n                            {\n                                rax_12 = r13_1[2];\n                            label_40711f:\n                                if (rax_12 != 2)\n                                {\n                                    if (rax_12 == 3)\n                                    {\n                                    label_407177:\n                                        var_308 = r8;\n                                        r8 = var_308;\n                                        if (sub_404e20(r13_1, arg2, &var_2f8_1[3]) != 0)\n                                        {\n                                            goto label_405b9f;\n                                        }\n                                        goto label_4071a0;\n                                    }\n                                    if ((rax_12 == 4 && *(r13_1 + 0x2f) != 0))\n                                    {\n                                        var_308 = r8;\n                                        r8 = var_308;\n                                        if (sub_404bd0(arg2, var_1d0) == 0)\n                                        {\n                                            goto label_407177;\n                                        }\n                                    }\n                                    goto label_405b9f;\n                                }\n                            label_4071a0:\n                                if (arg10 == 0)\n                                {\n                                    goto label_406676;\n                                }\n                            label_4071af:\n                                r15 = 1;\n                                *arg10 = 1;\n                                goto label_406282;\n                            }\n                        label_405b9f:\n                            if (var_2d8_1 == 0)\n                            {\n                                int32_t rax_13 = var_1d0;\n                                rcx_1 = (r8 ^ 1);\n                                char rax_15;\n                                char* r8_19;\n                                int32_t r12_2;\n                                if ((rax_13 & 0xf000) == 0x4000)\n                                {\n                                    if (rax_5 == 0x4000)\n                                    {\n                                    label_405c40:\n                                        r12_2 = *r13_1;\n                                    label_405c44:\n                                        rax_15 = r13_1[6];\n                                        if (rax_15 != 0)\n                                        {\n                                            if ((var_260 & 0xf000) == 0x4000)\n                                            {\n                                                rax_13 = var_1d0;\n                                            label_40806d:\n                                                if ((rax_13 & 0xf000) != 0x4000)\n                                                {\n                                                    if (r12_2 != 0)\n                                                    {\n                                                        goto label_407943;\n                                                    }\n                                                    r12_4 = sub_40ead0(0, 3, arg2);\n                                                    rsi_7 = \"cannot move directory onto non-d\u2026\";\n                                                    rbx_2 = sub_40ead0(0, 3, r14_1);\n                                                    goto label_405daf;\n                                                }\n                                                goto label_407f05;\n                                            }\n                                        label_407f05:\n                                            if (r12_2 != 0)\n                                            {\n                                                goto label_407943;\n                                            }\n                                        label_407edf:\n                                            var_308_1 = 0;\n                                            goto label_405de4;\n                                        }\n                                        int64_t rbx_15;\n                                        char* rsi_115;\n                                        int32_t* r12_3;\n                                        if (r12_2 == 0)\n                                        {\n                                        label_405c60:\n                                            var_308_1 = 0;\n                                            int32_t rdx_9;\n                                            rdx_9 = (var_1d0 & 0xf000) == 0x4000;\n                                            rdx_9 = (rdx_9 | rax_15);\n                                            if (rdx_9 != 0)\n                                            {\n                                                goto label_405de4;\n                                            }\n                                            bool rax_16 = *(r13_1 + 0x15);\n                                            var_2d8_1 = rax_16;\n                                            if (rax_16 != 0)\n                                            {\n                                            label_405cb1:\n                                                char var_2d8_2 = rcx_1;\n                                                rcx_1 = var_2d8_2;\n                                                if (unlink(arg2) == 0)\n                                                {\n                                                label_405cdf:\n                                                    bool rax_342 = *(r13_1 + 0x2e);\n                                                    var_2d8_1 = rax_342;\n                                                    if (rax_342 != 0)\n                                                    {\n                                                        var_2f8_1 = rcx_1;\n                                                        __printf_chk(1, dcgettext(nullptr, \"removed %s\\n\", 5), sub_40ea00(4, arg2));\n                                                        rcx_1 = var_2f8_1;\n                                                        var_308_1 = 0;\n                                                        goto label_405de4;\n                                                    }\n                                                    if (rbx_1 == 0)\n                                                    {\n                                                        rax_342 = (rax_5 == 0x4000 & *(r13_1 + 0x2a));\n                                                        var_2d8_1 = rax_342;\n                                                        if (rax_342 == 0)\n                                                        {\n                                                            var_2d8_1 = true;\n                                                            var_308_1 = 0;\n                                                            goto label_405e28;\n                                                        }\n                                                        rdi_15 = var_270;\n                                                        var_308_1 = 0;\n                                                    label_406d18:\n                                                        var_2f8_2 = sub_4099d0(rdi_15);\n                                                        goto label_4062f7;\n                                                    }\n                                                    var_2d8_1 = rbx_1;\n                                                    var_308_1 = 0;\n                                                    if (*(r13_1 + 0x38) != 0)\n                                                    {\n                                                        goto label_405d20;\n                                                    }\n                                                    goto label_4062b0;\n                                                }\n                                                int32_t* rax_18 = __errno_location();\n                                                rcx_1 = var_2d8_2;\n                                                r12_3 = rax_18;\n                                                if (*rax_18 == 2)\n                                                {\n                                                    goto label_405cdf;\n                                                }\n                                                rsi_115 = \"cannot remove %s\";\n                                                rbx_15 = sub_40ea00(4, arg2);\n                                            label_408205:\n                                                r15 = 0;\n                                                error(0, *r12_3, dcgettext(nullptr, rsi_115, 5), rbx_15);\n                                                goto label_406282;\n                                            }\n                                            if (*(r13_1 + 0x22) != 0)\n                                            {\n                                                int64_t var_1d8;\n                                                if (var_1d8 > 1)\n                                                {\n                                                    goto label_405cb1;\n                                                }\n                                                goto label_40829d;\n                                            }\n                                        label_40829d:\n                                            var_308_1 = 0;\n                                            if ((r13_1[1] == 2 && (var_260 & 0xf000) != 0x8000))\n                                            {\n                                                goto label_405cb1;\n                                            }\n                                            goto label_405de4;\n                                        }\n                                    label_407eab:\n                                        var_2f8_1 = rcx_1;\n                                        char* rax_280 = sub_40ad40(r14_1);\n                                        rcx_1 = var_2f8_1;\n                                        r8_19 = rax_280;\n                                        char rdx_108;\n                                        if (*rax_280 == 0x2e)\n                                        {\n                                            rax_15 = 0;\n                                        label_4082da:\n                                            int64_t rdx_107;\n                                            rdx_107 = r8_19[1] == 0x2e;\n                                            rdx_108 = r8_19[(rdx_107 + 1)];\n                                            if (rdx_108 == 0x2f)\n                                            {\n                                                goto label_405c60;\n                                            }\n                                            if (rdx_108 == 0)\n                                            {\n                                                goto label_405c60;\n                                            }\n                                        }\n                                        if (((*rax_280 != 0x2e || (((*rax_280 == 0x2e && rdx_108 != 0) && rdx_108 != 0x2f) && rax_15 == 0)) && (var_1d0 & 0xf000) == 0x4000))\n                                        {\n                                            goto label_407edf;\n                                        }\n                                    label_407961:\n                                        if (r12_2 != 3)\n                                        {\n                                            var_2f8_1 = rcx_1;\n                                            var_310 = r8_19;\n                                            var_2d8_1 = strlen(r8_19);\n                                            char* rax_237 = sub_40ad40(arg2);\n                                            uint64_t rax_238 = strlen(rax_237);\n                                            dev_t* rcx_37 = data_6219a0;\n                                            uint64_t rax_239 = strlen(rcx_37);\n                                            rcx_1 = var_2f8_1;\n                                            if (var_2d8_1 != (rax_238 + rax_239))\n                                            {\n                                                goto label_407af9;\n                                            }\n                                            int64_t* r8_20 = var_310;\n                                            char var_2d8_3 = rcx_1;\n                                            rcx_1 = var_2d8_3;\n                                            if (memcmp(r8_20, rax_237, rax_238) != 0)\n                                            {\n                                                goto label_407af9;\n                                            }\n                                            rcx_1 = var_2d8_3;\n                                            if (strcmp((r8_20 + rax_238), rcx_37) != 0)\n                                            {\n                                                goto label_407af9;\n                                            }\n                                            char* var_308_2;\n                                            var_308_2 = rcx_1;\n                                            uint64_t rax_243 = strlen(arg2);\n                                            char* rax_244 = sub_4112e0(((rax_239 + rax_243) + 1));\n                                            var_2d8_3 = data_6219a0;\n                                            strcpy(mempcpy(rax_244, arg2, rax_243), var_2d8_3);\n                                            var_2d8_3 = __xstat(1, rax_244, &var_c8);\n                                            free(rax_244);\n                                            rcx_1 = var_308_2;\n                                            if (var_2d8_3 != 0)\n                                            {\n                                                goto label_407af9;\n                                            }\n                                            if (var_270 != var_c0)\n                                            {\n                                                goto label_407af9;\n                                            }\n                                            if (var_278 != var_c8)\n                                            {\n                                                goto label_407af9;\n                                            }\n                                            char* rbx_17;\n                                            if (r13_1[6] == 0)\n                                            {\n                                                rbx_17 = dcgettext(nullptr, \"backing up %s might destroy sour\u2026\", 5);\n                                            }\n                                            else\n                                            {\n                                                rbx_17 = dcgettext(nullptr, \"backing up %s might destroy sour\u2026\", 5);\n                                            }\n                                            r8_1 = sub_40e920(1, 4, r14_1);\n                                            rdx_13 = rbx_17;\n                                            rcx_2 = sub_40e920(0, 4, arg2);\n                                            goto label_405dbe;\n                                        }\n                                    label_407af9:\n                                        uint64_t rax_250 = sub_40a8b0(arg2, *r13_1);\n                                        var_308_1 = rax_250;\n                                        var_2f8_1 = rcx_1;\n                                        if (rax_250 != 0)\n                                        {\n                                            uint64_t rax_251 = strlen(rax_250);\n                                            rsp_1 = (&var_378 - ((rax_251 + 0x18) & 0xfffffffffffffff0));\n                                            uint64_t rax_254 = memcpy(((rsp_1 + 0xf) & 0xfffffffffffffff0), rax_250, (rax_251 + 1));\n                                            free(var_308_1);\n                                            var_308_1 = rax_254;\n                                            rcx_1 = var_2f8_1;\n                                            var_2d8_1 = true;\n                                        }\n                                        else\n                                        {\n                                            int32_t* rax_311 = __errno_location();\n                                            var_2d8_1 = true;\n                                            rcx_1 = var_2f8_1;\n                                            r12_3 = rax_311;\n                                            if (*rax_311 != 2)\n                                            {\n                                                rsi_115 = \"cannot backup %s\";\n                                                rbx_15 = sub_40ea00(4, arg2);\n                                                goto label_408205;\n                                            }\n                                        }\n                                        goto label_405de4;\n                                    }\n                                label_407910:\n                                    if (r13_1[6] == 0)\n                                    {\n                                    label_40823b:\n                                        rsi_57 = \"cannot overwrite directory %s wi\u2026\";\n                                        rbx_1 = sub_40ea00(4, arg2);\n                                        goto label_406cd4;\n                                    }\n                                    r12_2 = *r13_1;\n                                    if (r12_2 == 0)\n                                    {\n                                        goto label_40823b;\n                                    }\n                                    goto label_407934;\n                                }\n                                if (rax_5 == 0x4000)\n                                {\n                                    if (r13_1[6] == 0)\n                                    {\n                                    label_408161:\n                                        r12_4 = sub_40e920(1, 4, r14_1);\n                                        rsi_7 = \"cannot overwrite non-directory %\u2026\";\n                                        rbx_2 = sub_40e920(0, 4, arg2);\n                                        goto label_405daf;\n                                    }\n                                    r12_2 = *r13_1;\n                                    if (r12_2 == 0)\n                                    {\n                                        goto label_408161;\n                                    }\n                                    if (rbx_1 != 0)\n                                    {\n                                    label_405be4:\n                                        if (r12_2 != 3)\n                                        {\n                                            var_308 = rcx_1;\n                                            rcx_1 = var_308;\n                                            if (sub_40aef0(*(r13_1 + 0x38), arg2, var_2f8_1) != 0)\n                                            {\n                                                r12_4 = sub_40e920(1, 4, r14_1);\n                                                rsi_7 = \"will not overwrite just-created \u2026\";\n                                                rbx_2 = sub_40e920(0, 4, arg2);\n                                                goto label_405daf;\n                                            }\n                                            if (rax_5 == 0x4000)\n                                            {\n                                                goto label_405c40;\n                                            }\n                                            rax_13 = var_1d0;\n                                            if ((rax_13 & 0xf000) != 0x4000)\n                                            {\n                                                goto label_405c40;\n                                            }\n                                            goto label_407910;\n                                        }\n                                        if (r13_1[6] == 0)\n                                        {\n                                            goto label_407eab;\n                                        }\n                                        goto label_407934;\n                                    }\n                                label_407934:\n                                    if ((var_260 & 0xf000) == 0x4000)\n                                    {\n                                        goto label_40806d;\n                                    }\n                                label_407943:\n                                    var_2f8_1 = rcx_1;\n                                    char* rax_235 = sub_40ad40(r14_1);\n                                    rcx_1 = var_2f8_1;\n                                    r8_19 = rax_235;\n                                    if (*rax_235 == 0x2e)\n                                    {\n                                        rax_15 = 1;\n                                        goto label_4082da;\n                                    }\n                                    goto label_407961;\n                                }\n                                r12_2 = *r13_1;\n                                if (rbx_1 == 0)\n                                {\n                                    goto label_405c44;\n                                }\n                                goto label_405be4;\n                            }\n                        label_406676:\n                            r15 = 1;\n                            goto label_406282;\n                        }\n                        if (*(r13_1 + 0x2d) != 0)\n                        {\n                            int32_t rcx_24 = 0;\n                            if (*(r13_1 + 0x1f) != 0)\n                            {\n                                rcx_24 = 1;\n                                if (r13_1[6] != 0)\n                                {\n                                    rcx_24 = var_1e8 != var_278;\n                                }\n                            }\n                            var_308 = r8;\n                            r8 = var_308;\n                            if (sub_40fd60(arg2, var_2f8_1, var_2e0, rcx_24) < 0)\n                            {\n                                goto label_405b83;\n                            }\n                            if (arg10 != 0)\n                            {\n                                *arg10 = 1;\n                            }\n                            uint64_t rax_142 = sub_409a10(arg2, var_270, var_278);\n                            if (rax_142 == 0)\n                            {\n                                goto label_406676;\n                            }\n                            if (sub_404f50(rax_142, arg2, 1, *(r13_1 + 0x2e), var_2e8_1) != 0)\n                            {\n                                goto label_406676;\n                            }\n                            if (*(r13_1 + 0x25) == 0)\n                            {\n                                goto label_406282;\n                            }\n                            goto label_406e0d;\n                        }\n                    label_405b83:\n                        rax_12 = r13_1[2];\n                        if (r13_1[6] != 0)\n                        {\n                            goto label_40711f;\n                        }\n                        if (rax_12 == 2)\n                        {\n                            goto label_406676;\n                        }\n                        if (rax_12 != 3)\n                        {\n                            goto label_405b9f;\n                        }\n                        var_308 = r8;\n                        r8 = var_308;\n                        if (sub_404e20(r13_1, arg2, &var_2f8_1[3]) == 0)\n                        {\n                            goto label_406676;\n                        }\n                        goto label_405b9f;\n                    }\n                    if (r13_1[1] == 2)\n                    {\n                        r12_16 = true;\n                        rcx_26 = 1;\n                        goto label_406e3b;\n                    }\n                    var_308 = r8;\n                    var_318 = &var_158;\n                    r8 = var_308;\n                    if (__lxstat(1, arg2, &var_158) != 0)\n                    {\n                        goto label_405b63;\n                    }\n                    var_328 = &var_c8;\n                    r8 = var_308;\n                    if (__lxstat(1, r14_1, &var_c8) != 0)\n                    {\n                        goto label_405b63;\n                    }\n                    if (var_c0 == var_150)\n                    {\n                        r12_16 = var_c8 == var_158;\n                    }\n                    r9_3 = var_318;\n                    rdx_51 = var_328;\n                    if ((var_b0 & 0xf000) != 0xa000)\n                    {\n                        goto label_406e5d;\n                    }\n                    if ((var_140 & 0xf000) != 0xa000)\n                    {\n                        goto label_406e5d;\n                    }\n                    if (*(r13_1 + 0x15) != 0)\n                    {\n                        goto label_405b63;\n                    }\n                    goto label_406e5d;\n                }\n            label_405b58:\n                if (r13_1[1] != 2)\n                {\n                    goto label_405b63;\n                }\n                r12_16 = false;\n                rcx_26 = 0;\n            label_406e3b:\n                r9_3 = var_2f8_1;\n                rdx_51 = var_2e0;\n                bool rax_259;\n                if ((var_260 & 0xf000) == 0xa000)\n                {\n                    if ((var_1d0 & 0xf000) != 0xa000)\n                    {\n                        goto label_406e5d;\n                    }\n                    var_308 = r8;\n                    if (sub_40ef80(r14_1, arg2) != 0)\n                    {\n                    label_406ed0:\n                        r12_4 = sub_40e920(1, 4, arg2);\n                        rsi_7 = \"%s and %s are the same file\";\n                        rbx_2 = sub_40e920(0, 4, r14_1);\n                        goto label_405daf;\n                    }\n                    r8 = var_308;\n                    if (*r13_1 != 0)\n                    {\n                        goto label_405b63;\n                    }\n                    if (rcx_26 == 0)\n                    {\n                        goto label_405b63;\n                    }\n                    rax_259 = true;\n                    r12_16 = (r13_1[6] ^ 1);\n                    goto label_407c3b;\n                }\n            label_406e5d:\n                if (*r13_1 == 0)\n                {\n                    char rcx_32 = r13_1[6];\n                    if (rcx_32 == 0)\n                    {\n                        if (*(r13_1 + 0x15) != 0)\n                        {\n                            goto label_407819;\n                        }\n                        if ((rdx_51[3] & 0xf000) == 0xa000)\n                        {\n                        label_4074fa:\n                            if (r13_1[0xb] != 0)\n                            {\n                            label_408136:\n                                r12_16 = *r9_3 == *rdx_51;\n                                rax_259 = false;\n                                goto label_407c3b;\n                            }\n                            if (((r13_1[5] & 0xff00ff00) != 0 && (r9_3[3] & 0xf000) == 0xa000))\n                            {\n                                goto label_408136;\n                            }\n                            if (r13_1[1] != 2)\n                            {\n                                goto label_406ed0;\n                            }\n                            int32_t rax_402;\n                            if ((rdx_51[3] & 0xf000) == 0xa000)\n                            {\n                                var_310 = r8;\n                                rax_402 = __xstat(1, r14_1, &var_c8);\n                                r8 = var_310;\n                            }\n                            else\n                            {\n                                var_c8 = *rdx_51;\n                                var_b8 = *(rdx_51 + 0x10);\n                                var_a8 = *(rdx_51 + 0x20);\n                                var_98 = *(rdx_51 + 0x30);\n                                var_88 = *(rdx_51 + 0x40);\n                                int128_t var_78_1 = *(rdx_51 + 0x50);\n                                int128_t var_68_1 = *(rdx_51 + 0x60);\n                                int128_t var_58_1 = *(rdx_51 + 0x70);\n                                int128_t var_48_1 = *(rdx_51 + 0x80);\n                            }\n                            if (((rdx_51[3] & 0xf000) != 0xa000 || ((rdx_51[3] & 0xf000) == 0xa000 && rax_402 == 0)))\n                            {\n                                int32_t rax_401;\n                                if ((r9_3[3] & 0xf000) == 0xa000)\n                                {\n                                    var_308 = r8;\n                                    rax_401 = __xstat(1, arg2, &var_158);\n                                    r8 = var_308;\n                                }\n                                else\n                                {\n                                    var_158 = *r9_3;\n                                    int128_t var_148_1 = *(r9_3 + 0x10);\n                                    int128_t var_138_1 = *(r9_3 + 0x20);\n                                    var_128 = *(r9_3 + 0x30);\n                                    var_118 = *(r9_3 + 0x40);\n                                    int128_t var_108_1 = *(r9_3 + 0x50);\n                                    int128_t var_f8_1 = *(r9_3 + 0x60);\n                                    int128_t var_e8_1 = *(r9_3 + 0x70);\n                                    int128_t var_d8_1 = *(r9_3 + 0x80);\n                                }\n                                if (((((r9_3[3] & 0xf000) != 0xa000 || ((r9_3[3] & 0xf000) == 0xa000 && rax_401 == 0)) && var_c0 == var_150) && var_c8 == var_158))\n                                {\n                                    if (*(r13_1 + 0x17) != 0)\n                                    {\n                                        goto label_407660;\n                                    }\n                                    goto label_406ed0;\n                                }\n                            }\n                            goto label_405b63;\n                        }\n                    label_4074d0:\n                        if ((r9_3[3] & 0xf000) == 0xa000)\n                        {\n                        label_4074db:\n                            rcx_32 = r13_1[6];\n                        label_4074e0:\n                            if (rcx_32 == 0)\n                            {\n                                goto label_4074fa;\n                            }\n                            if ((var_260 & 0xf000) != 0xa000)\n                            {\n                                goto label_4074fa;\n                            }\n                            if (r9_3[2] <= 1)\n                            {\n                                goto label_4074fa;\n                            }\n                            var_318 = r8;\n                            var_310 = r9_3;\n                            char* rax_330 = canonicalize_file_name(r14_1);\n                            r9_3 = var_310;\n                            r8 = var_318;\n                            if (rax_330 == 0)\n                            {\n                                goto label_4074fa;\n                            }\n                            var_308 = r8;\n                            var_2d8_1 = rax_330;\n                            r12_16 = (sub_40ef80(rax_330, arg2) ^ 1);\n                            free(var_2d8_1);\n                            rax_259 = false;\n                            r8 = var_308;\n                            goto label_407c3b;\n                        }\n                    label_40784b:\n                        if (rdx_51[1] != r9_3[1])\n                        {\n                            goto label_405b63;\n                        }\n                        if (*rdx_51 == *r9_3)\n                        {\n                            if (*(r13_1 + 0x17) != 0)\n                            {\n                                goto label_407660;\n                            }\n                            goto label_4074db;\n                        }\n                        goto label_405b63;\n                    }\n                label_407819:\n                    if ((r9_3[3] & 0xf000) == 0xa000)\n                    {\n                        goto label_405b63;\n                    }\n                    if (r12_16 != 0)\n                    {\n                        if (r9_3[2] <= 1)\n                        {\n                            goto label_40783c;\n                        }\n                        var_318 = r8;\n                        var_310 = r9_3;\n                        rax_259 = sub_40ef80(r14_1, arg2);\n                        r9_3 = var_310;\n                        r8 = var_318;\n                        if (rax_259 == 0)\n                        {\n                            r12_16 = (r13_1[6] ^ 1);\n                            goto label_407c3b;\n                        }\n                        if ((rdx_51[3] & 0xf000) == 0xa000)\n                        {\n                            goto label_4074db;\n                        }\n                        goto label_4074d0;\n                    }\n                label_40783c:\n                    if ((rdx_51[3] & 0xf000) != 0xa000)\n                    {\n                        goto label_40784b;\n                    }\n                    goto label_4074e0;\n                }\n                if (r12_16 != 0)\n                {\n                    r12_16 = (sub_40ef80(r14_1, arg2) ^ 1);\n                    rax_259 = false;\n                label_407c3b:\n                    if (r12_16 == 0)\n                    {\n                        goto label_406ed0;\n                    }\n                    var_2d8_1 = rax_259;\n                    goto label_405b63;\n                }\n                if ((r13_1[6] == 0 && (r13_1[1] != 2 && ((rdx_51[3] & 0xf000) == 0xa000 && (r9_3[3] & 0xf000) != 0xa000))))\n                {\n                    goto label_406ed0;\n                }\n                goto label_405b63;\n            }\n            if (rax_5 == 0x4000)\n            {\n                goto label_406556;\n            }\n            if (rax_5 == 0xa000)\n            {\n                goto label_406556;\n            }\n            goto label_405acd;\n        }\n    label_405acd:\n        if (r13_1[6] != 0)\n        {\n            goto label_406556;\n        }\n        if (r13_1[0xb] != 0)\n        {\n            goto label_406556;\n        }\n        if (*(r13_1 + 0x17) != 0)\n        {\n            goto label_406556;\n        }\n        if (*r13_1 != 0)\n        {\n            goto label_406556;\n        }\n        if (*(r13_1 + 0x15) != 0)\n        {\n            goto label_406556;\n        }\n        var_2f8_1 = &var_1e8;\n        r8 = 1;\n        var_2d8_1 = __xstat(1, arg2, &var_1e8) != 0;\n        if (var_2d8_1 != 0)\n        {\n            goto label_40657b;\n        }\n        goto label_405b4b;\n    }\n    rsi_1 = r14_1;\n    r15 = __xstat(1, r14_1, rdx) != 0;\n    if (r15 == 0)\n    {\n        goto label_405a38;\n    }\n    goto label_40623c;\n}\n\n"
        },
        {
            "funcName": "sub_409810",
            "funcStartAddr": "0x409810",
            "funcEndAddr": "0x40992c",
            "decompiledFuncCode": "uint64_t sub_409810(char* arg1, char* arg2, char arg3, int32_t* arg4, \n    char* arg5, char* arg6)\n{\n    if (arg4 == 0)\n    {\n        __assert_fail(\"co != NULL\", \"src/copy.c\", 0xb60, \"valid_options\");\n        /* no return */\n    }\n    if (*arg4 > 3)\n    {\n        __assert_fail(\"VALID_BACKUP_TYPE (co->backup_ty\u2026\", \"src/copy.c\", 0xb61, \"valid_options\");\n        /* no return */\n    }\n    int32_t rax = arg4[3];\n    if ((rax - 1) > 2)\n    {\n        __assert_fail(\"VALID_SPARSE_MODE (co->sparse_mo\u2026\", \"src/copy.c\", 0xb62, \"valid_options\");\n        /* no return */\n    }\n    int32_t r10_1 = arg4[0xd];\n    if (r10_1 > 2)\n    {\n        __assert_fail(\"VALID_REFLINK_MODE (co->reflink_\u2026\", \"src/copy.c\", 0xb63, \"valid_options\");\n        /* no return */\n    }\n    if ((*(arg4 + 0x17) != 0 && arg4[0xb] != 0))\n    {\n        __assert_fail(\"!(co->hard_link && co->symbolic_\u2026\", \"src/copy.c\", 0xb64, \"valid_options\");\n        /* no return */\n    }\n    if ((rax != 2 && r10_1 == 2))\n    {\n        __assert_fail(\"! (co->reflink_mode == REFLINK_A\u2026\", \"src/copy.c\", 0xb67, \"valid_options\");\n        /* no return */\n    }\n    char var_9 = 0;\n    data_621990 = arg1;\n    data_621988 = arg2;\n    return sub_405990(arg1, arg2, arg3, nullptr, nullptr, arg4, 1, &var_9, arg5, arg6);\n}\n\n"
        },
        {
            "funcName": "sub_409940",
            "funcStartAddr": "0x409940",
            "funcEndAddr": "0x40995c",
            "decompiledFuncCode": "int64_t sub_409940(int64_t* arg1, int64_t* arg2)\n{\n    if (*arg1 == *arg2)\n    {\n        int64_t rax;\n        rax = arg1[1] == arg2[1];\n        return rax;\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_409960",
            "funcStartAddr": "0x409960",
            "funcEndAddr": "0x409976",
            "decompiledFuncCode": "int64_t sub_409960(void* arg1)\n{\n    free(*(arg1 + 0x10));\n    /* tailcall */\n    return free(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_409980",
            "funcStartAddr": "0x409980",
            "funcEndAddr": "0x4099c5",
            "decompiledFuncCode": "void* sub_409980()\n{\n    int64_t rdi;\n    int64_t var_28 = rdi;\n    int64_t rsi;\n    int64_t var_20 = rsi;\n    int64_t var_18 = 0;\n    void* rax = sub_40c330(data_621998);\n    if (rax != 0)\n    {\n        free(*(rax + 0x10));\n        rax = free(rax);\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4099d0",
            "funcStartAddr": "0x4099d0",
            "funcEndAddr": "0x409a07",
            "decompiledFuncCode": "int64_t sub_4099d0(int64_t arg1)\n{\n    int64_t var_28 = arg1;\n    int64_t rsi;\n    int64_t var_20 = rsi;\n    void* rax = sub_40b8e0(data_621998, &var_28);\n    if (rax == 0)\n    {\n        return 0;\n    }\n    return *(rax + 0x10);\n}\n\n"
        },
        {
            "funcName": "sub_409a10",
            "funcStartAddr": "0x409a10",
            "funcEndAddr": "0x409a86",
            "decompiledFuncCode": "int64_t sub_409a10(char* arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rax = sub_4112e0(0x18);\n    int64_t rax_1 = sub_411510(arg1);\n    int64_t rdi_1 = data_621998;\n    *rax = arg2;\n    rax[2] = rax_1;\n    rax[1] = arg3;\n    int64_t rax_2 = sub_40c2f0(rdi_1, rax);\n    if (rax_2 == 0)\n    {\n        sub_411530();\n        /* no return */\n    }\n    int64_t rax_3 = 0;\n    if (rax != rax_2)\n    {\n        free(rax[2]);\n        free(rax);\n        rax_3 = *(rax_2 + 0x10);\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_409a90",
            "funcStartAddr": "0x409a90",
            "funcEndAddr": "0x409ac6",
            "decompiledFuncCode": "int64_t* sub_409a90()\n{\n    int64_t* rax = sub_40bb50(0x67, nullptr, 0x409930, 0x409940, 0x409960);\n    data_621998 = rax;\n    if (rax == 0)\n    {\n        sub_411530();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_409ae0",
            "funcStartAddr": "0x409ae0",
            "funcEndAddr": "0x409b08",
            "decompiledFuncCode": "void sub_409ae0(int32_t arg1, int32_t* arg2)\n{\n    *arg2 = arg1;\n    *(arg2 + 0x28) = 0;\n    *(arg2 + 8) = 0;\n    *(arg2 + 0x18) = 0;\n    arg2[8] = 0;\n    arg2[4] = 1;\n}\n\n"
        },
        {
            "funcName": "sub_409b10",
            "funcStartAddr": "0x409b10",
            "funcEndAddr": "0x409dd5",
            "decompiledFuncCode": "uint64_t sub_409b10(int32_t* arg1)\n{\n    int32_t r13 = 0;\n    int64_t* rbx = *(arg1 + 0x28);\n    int64_t rdx = *(arg1 + 8);\n    uint64_t r8;\n    while (true)\n    {\n        int64_t rcx_1 = 0x200;\n        int64_t var_1038;\n        int64_t* rdi = &var_1038;\n        for (; rcx_1 != 0; rcx_1 = (rcx_1 - 1))\n        {\n            *rdi = 0;\n            rdi = &rdi[1];\n        }\n        var_1038 = rdx;\n        int32_t var_1020_1 = 0x48;\n        int32_t var_1028_1 = arg1[4];\n        int64_t var_1030_1 = (!rdx);\n        uint64_t rax_4;\n        if (ioctl(*arg1, 0xc020660b, &var_1038, rcx_1, r8) >= 0)\n        {\n            int32_t var_1024;\n            rax_4 = var_1024;\n            if (rax_4 == 0)\n            {\n                bool cond:0_1 = *(arg1 + 8) != 0;\n                *(arg1 + 0x21) = 1;\n                rax_4 = cond:0_1;\n            }\n            else\n            {\n                int64_t rcx_2 = *(arg1 + 0x18);\n                if (rcx_2 > (!rax_4))\n                {\n                    __assert_fail(\"scan->ei_count <= SIZE_MAX - fie\u2026\", \"src/extent-scan.c\", 0x7e, \"extent_scan_read\");\n                    /* no return */\n                }\n                int64_t rdi_2 = *(arg1 + 0x28);\n                int64_t rcx_3 = (rcx_2 + rax_4);\n                *(arg1 + 0x18) = rcx_3;\n                void* rbx_1 = (rbx - rdi_2);\n                int64_t rax_5;\n                bool rdx_5;\n                rdx_5 = HIGHD((0x18 * rcx_3));\n                rax_5 = LOWD((0x18 * rcx_3));\n                uint64_t rdx_6 = ((0x18 * rcx_3) >> 0x40) != 0;\n                if ((rax_5 < 0 || (rax_5 >= 0 && rdx_6 != 0)))\n                {\n                    sub_411530();\n                    /* no return */\n                }\n                if ((rax_5 >= 0 && rdx_6 == 0))\n                {\n                    int64_t rax_6 = sub_411340(rdi_2, (rcx_3 * 0x18));\n                    r8 = var_1024;\n                    *(arg1 + 0x28) = rax_6;\n                    rbx = (rbx_1 + rax_6);\n                    if (r8 != 0)\n                    {\n                        break;\n                    }\n                label_409cd5:\n                    char rax_10;\n                    if ((rbx[2] & 1) != 0)\n                    {\n                        *(arg1 + 0x21) = 1;\n                    }\n                    else\n                    {\n                        rax_10 = *(arg1 + 0x21);\n                    }\n                    if (((rbx[2] & 1) != 0 || (((rbx[2] & 1) == 0 && r13 > 0x48) && rax_10 != 0)))\n                    {\n                        *(arg1 + 0x18) = r13;\n                    }\n                    if ((rbx[2] & 1) == 0)\n                    {\n                        if ((r13 > 0x48 && rax_10 == 0))\n                        {\n                            uint64_t rax_11 = (r13 - 1);\n                            int64_t rdx_11 = *(arg1 + 0x28);\n                            uint64_t rcx_8 = (rax_11 * 3);\n                            *(arg1 + 0x18) = rax_11;\n                            *(arg1 + 8) = (*((rdx_11 + (rcx_8 << 3)) - 0x10) + *((rdx_11 + (rcx_8 << 3)) - 0x18));\n                        }\n                        if (r13 <= 0x48)\n                        {\n                            *(arg1 + 0x18) = r13;\n                            if (rax_10 == 0)\n                            {\n                                rdx = (rbx[1] + *rbx);\n                                *(arg1 + 8) = rdx;\n                                if (r13 != 0x48)\n                                {\n                                    continue;\n                                }\n                            }\n                        }\n                    }\n                    rax_4 = 1;\n                }\n            }\n        }\n        else\n        {\n        label_409d30:\n            rax_4 = 0;\n            if (*(arg1 + 8) == 0)\n            {\n                arg1[8] = 1;\n                rax_4 = 0;\n            }\n        }\n        return rax_4;\n    }\n    int64_t var_1008;\n    int64_t rax_7 = var_1008;\n    int64_t var_1018;\n    int64_t rdx_7 = var_1018;\n    if (rdx_7 <= (0x7fffffffffffffff - rax_7))\n    {\n        int32_t rdi_3 = 0;\n        int64_t* rcx_5 = &var_1018;\n        while (true)\n        {\n            int64_t rsi_4;\n            int32_t r9_1;\n            if (r13 == 0)\n            {\n                rsi_4 = *(arg1 + 8);\n                if (rsi_4 <= rdx_7)\n                {\n                    r9_1 = rcx_5[5];\n                }\n            }\n            else\n            {\n                r9_1 = rcx_5[5];\n                int64_t r10_1 = rbx[1];\n                rsi_4 = (*rbx + r10_1);\n                if ((rbx[2] == (r9_1 & 0xfffffffe) && rdx_7 == rsi_4))\n                {\n                    rbx[2] = r9_1;\n                    rdi_3 = (rdi_3 + 1);\n                    rbx[1] = (rax_7 + r10_1);\n                }\n            }\n            if (((r13 == 0 && rsi_4 <= rdx_7) || ((r13 != 0 && (rbx[2] != (r9_1 & 0xfffffffe) || (rbx[2] == (r9_1 & 0xfffffffe) && rdx_7 != rsi_4))) && rsi_4 <= rdx_7)))\n            {\n                uint64_t rcx_6 = r13;\n                rdi_3 = (rdi_3 + 1);\n                r13 = (r13 + 1);\n                rbx = (*(arg1 + 0x28) + (rcx_6 * 0x18));\n                *rbx = rdx_7;\n                rbx[1] = rax_7;\n                rbx[2] = r9_1;\n                if (rdi_3 >= r8)\n                {\n                    goto label_409cd5;\n                }\n                goto label_409c63;\n            }\n            if ((((r13 == 0 && rsi_4 > rdx_7) || ((r13 != 0 && (rbx[2] != (r9_1 & 0xfffffffe) || (rbx[2] == (r9_1 & 0xfffffffe) && rdx_7 != rsi_4))) && rsi_4 > rdx_7)) && (rsi_4 - rdx_7) >= rax_7))\n            {\n                *rcx_5 = rsi_4;\n                rcx_5[2] = ((rdx_7 + rax_7) - rsi_4);\n            }\n            if ((((r13 != 0 && rbx[2] == (r9_1 & 0xfffffffe)) && rdx_7 == rsi_4) || (((r13 == 0 && rsi_4 > rdx_7) || ((r13 != 0 && (rbx[2] != (r9_1 & 0xfffffffe) || (rbx[2] == (r9_1 & 0xfffffffe) && rdx_7 != rsi_4))) && rsi_4 > rdx_7)) && (rsi_4 - rdx_7) >= rax_7)))\n            {\n                if (rdi_3 >= r8)\n                {\n                    goto label_409cd5;\n                }\n            label_409c63:\n                uint64_t rdx_10 = rdi_3;\n                rcx_5 = &&var_1018[((rdx_10 << 3) - rdx_10)];\n                rax_7 = rcx_5[2];\n                rdx_7 = *rcx_5;\n                if (rdx_7 > (0x7fffffffffffffff - rax_7))\n                {\n                    break;\n                }\n                continue;\n            }\n            if ((((r13 == 0 && rsi_4 > rdx_7) || ((r13 != 0 && (rbx[2] != (r9_1 & 0xfffffffe) || (rbx[2] == (r9_1 & 0xfffffffe) && rdx_7 != rsi_4))) && rsi_4 > rdx_7)) && (rsi_4 - rdx_7) < rax_7))\n            {\n                goto label_409d30;\n            }\n        }\n    }\n    __assert_fail(\"fm_extents[i].fe_logical <= OFF_\u2026\", \"src/extent-scan.c\", 0x8d, \"extent_scan_read\");\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_409e00",
            "funcStartAddr": "0x409e00",
            "funcEndAddr": "0x409e64",
            "decompiledFuncCode": "int64_t sub_409e00(char* arg1, int64_t arg2)\n{\n    int64_t rbx = arg2;\n    void* rax_1 = (sub_40ad40(arg1) - arg1);\n    void* rdi = (rax_1 + 9);\n    int64_t rax_2;\n    int64_t rax_4;\n    if (rdi > 0x100)\n    {\n        rax_2 = malloc(rdi);\n        rbx = rax_2;\n        if (rax_2 == 0)\n        {\n            rax_4 = 0;\n        }\n    }\n    if ((rdi <= 0x100 || (rdi > 0x100 && rax_2 != 0)))\n    {\n        int64_t* rax_3 = mempcpy(rbx, arg1, rax_1);\n        *rax_3 = 0x5858585858587543;\n        rax_3[1] = 0;\n        rax_4 = rbx;\n    }\n    return rax_4;\n}\n\n"
        },
        {
            "funcName": "sub_409e70",
            "funcStartAddr": "0x409e70",
            "funcEndAddr": "0x409e81",
            "decompiledFuncCode": "int64_t sub_409e70(int64_t arg1, int64_t* arg2)\n{\n    /* tailcall */\n    return symlinkat(*arg2, arg2[1], arg1);\n}\n\n"
        },
        {
            "funcName": "sub_409e90",
            "funcStartAddr": "0x409e90",
            "funcEndAddr": "0x409fc5",
            "decompiledFuncCode": "uint64_t sub_409e90(int32_t arg1, int64_t arg2, int32_t arg3, char* arg4, \n    int32_t arg5, int32_t arg6)\n{\n    int32_t rax = linkat();\n    int32_t rbx = rax;\n    if ((arg6 == 1 && rax != 0))\n    {\n        int32_t* rax_1 = __errno_location();\n        if (*rax_1 == 0x11)\n        {\n            int32_t var_160;\n            var_160 = rax_1;\n            void var_138;\n            char* rax_3 = sub_409e00(arg4, &var_138);\n            if (rax_3 == 0)\n            {\n                rbx = -1;\n            }\n            else\n            {\n                int32_t var_158 = arg1;\n                int64_t var_150_1 = arg2;\n                int32_t var_148_1 = arg3;\n                int32_t var_144_1 = arg5;\n                int32_t* r9_1 = var_160;\n                int32_t r12_1;\n                if (sub_40fb10(rax_3, 0, &var_158, 0x409de0, 6) != 0)\n                {\n                    r12_1 = *r9_1;\n                }\n                else\n                {\n                    var_160 = r9_1;\n                    int32_t rax_5 = renameat(arg3, rax_3, arg3, arg4);\n                    int32_t* r9_2 = var_160;\n                    r12_1 = rax_5;\n                    if (rax_5 != 0)\n                    {\n                        r12_1 = *r9_2;\n                    }\n                    var_160 = r9_2;\n                    unlinkat(arg3, rax_3, 0);\n                    r9_1 = var_160;\n                }\n                if (rax_3 != &var_138)\n                {\n                    var_160 = r9_1;\n                    free(rax_3);\n                    r9_1 = var_160;\n                }\n                rbx = 1;\n                if (r12_1 != 0)\n                {\n                    *r9_1 = r12_1;\n                    rbx = -1;\n                }\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_409fd0",
            "funcStartAddr": "0x409fd0",
            "funcEndAddr": "0x40a0d0",
            "decompiledFuncCode": "uint64_t sub_409fd0(int64_t arg1, int32_t arg2, char* arg3, char arg4)\n{\n    int32_t rax = symlinkat();\n    int32_t rbx = rax;\n    if ((arg4 == 1 && rax != 0))\n    {\n        int32_t* rax_1 = __errno_location();\n        if (*rax_1 == 0x11)\n        {\n            void var_138;\n            char* rax_3 = sub_409e00(arg3, &var_138);\n            if (rax_3 == 0)\n            {\n                rbx = -1;\n            }\n            else\n            {\n                int64_t var_148 = arg1;\n                int32_t var_140_1 = arg2;\n                int32_t rax_4 = sub_40fb10(rax_3, 0, &var_148, 0x409e70, 6);\n                int32_t rax_5;\n                int32_t r12_1;\n                if (rax_4 == 0)\n                {\n                    rax_5 = renameat(arg2, rax_3, arg2, arg3);\n                    if (rax_5 != 0)\n                    {\n                        r12_1 = *rax_1;\n                        unlinkat(arg2, rax_3, 0);\n                    }\n                    else if (rax_3 != &var_138)\n                    {\n                        free(rax_3);\n                    }\n                }\n                else\n                {\n                    r12_1 = *rax_1;\n                }\n                if (((rax_4 != 0 || (rax_4 == 0 && rax_5 != 0)) && rax_3 != &var_138))\n                {\n                    free(rax_3);\n                }\n                if ((((rax_4 != 0 || (rax_4 == 0 && rax_5 != 0)) && r12_1 == 0) || (rax_4 == 0 && rax_5 == 0)))\n                {\n                    rbx = 1;\n                }\n                if (((rax_4 != 0 || (rax_4 == 0 && rax_5 != 0)) && r12_1 != 0))\n                {\n                    *rax_1 = r12_1;\n                    rbx = -1;\n                }\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40a0d0",
            "funcStartAddr": "0x40a0d0",
            "funcEndAddr": "0x40a15a",
            "decompiledFuncCode": "uint64_t sub_40a0d0(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int32_t rcx;\n    int32_t r8;\n    int32_t rax = sub_40d070(arg1, arg2, arg3, rcx, r8);\n    if (rax == 0xfffffffe)\n    {\n        error(0, *__errno_location(), \"%s\", sub_40ec50(arg1));\n        return rax;\n    }\n    if (rax == 0xffffffff)\n    {\n        error(0, *__errno_location(), dcgettext(nullptr, \"preserving permissions for %s\", 5), sub_40ec50(arg3));\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40a160",
            "funcStartAddr": "0x40a160",
            "funcEndAddr": "0x40a1bc",
            "decompiledFuncCode": "uint64_t sub_40a160(int64_t arg1, int32_t arg2, int32_t arg3)\n{\n    int32_t rax = sub_40d0b0(arg1, arg2, arg3);\n    if (rax != 0)\n    {\n        error(0, *__errno_location(), dcgettext(nullptr, \"setting permissions for %s\", 5), sub_40ec50(arg1));\n        return rax;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40a1c0",
            "funcStartAddr": "0x40a1c0",
            "funcEndAddr": "0x40a2af",
            "decompiledFuncCode": "char* sub_40a1c0(int64_t arg1, int64_t arg2)\n{\n    size_t rbx = (arg2 + 1);\n    if (arg2 >= 0x401)\n    {\n        rbx = 0x401;\n    }\n    char* rbp_1;\n    while (true)\n    {\n        char* rax_1 = malloc(rbx);\n        rbp_1 = rax_1;\n        if (rax_1 == 0)\n        {\n            break;\n        }\n        while (true)\n        {\n            int64_t rax_2 = readlink(arg1, rax_1, rbx);\n            if ((rax_2 < 0 && *__errno_location() != 0x22))\n            {\n                free(rbp_1);\n                return nullptr;\n            }\n            if (rbx > rax_2)\n            {\n                rbp_1[rax_2] = 0;\n                return rbp_1;\n            }\n            free(rbp_1);\n            if (rbx > 0x3fffffffffffffff)\n            {\n                break;\n            }\n            rbx = (rbx + rbx);\n            rax_1 = malloc(rbx);\n            rbp_1 = rax_1;\n            if (rax_1 == 0)\n            {\n                return rbp_1;\n            }\n        }\n        if (rbx > 0x7ffffffffffffffe)\n        {\n            rbp_1 = nullptr;\n            *__errno_location() = 0xc;\n            break;\n        }\n        rbx = 0x7fffffffffffffff;\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_40a2b0",
            "funcStartAddr": "0x40a2b0",
            "funcEndAddr": "0x40a37e",
            "decompiledFuncCode": "uint64_t sub_40a2b0(char* arg1, int64_t arg2)\n{\n    char* rbx = arg1;\n    char* rax = sub_40ad40(arg1);\n    uint64_t rax_1 = sub_40ada0(rax);\n    if (rax_1 > 0xe)\n    {\n        int16_t r14_1 = *rax;\n        uint64_t r12_1 = rax_1;\n        *rax = 0x2e;\n        int32_t* rax_2 = __errno_location();\n        *rax_2 = 0;\n        rax_1 = pathconf(rbx, 3);\n        uint64_t rdx_1;\n        if (rax_1 < 0)\n        {\n            rdx_1 = 0xff;\n        }\n        if ((rax_1 >= 0 || (rax_1 < 0 && *rax_2 == 0)))\n        {\n            rdx_1 = rax_1;\n        }\n        *rax = r14_1;\n        if (r12_1 > rdx_1)\n        {\n            void* rsi = &rbx[arg2];\n            int64_t rax_4 = (rsi - rax);\n            if (rax_4 >= rdx_1)\n            {\n                rsi = &rax[(rdx_1 - 1)];\n            }\n            else\n            {\n                rdx_1 = (rax_4 + 1);\n            }\n            *rsi = 0x7e;\n            rax[rdx_1] = 0;\n            return rax_4;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40a380",
            "funcStartAddr": "0x40a380",
            "funcEndAddr": "0x40a3d4",
            "decompiledFuncCode": "void sub_40a380(char* arg1)\n{\n    char* rbx = arg1;\n    char* rax;\n    if (arg1 == 0)\n    {\n        rax = getenv(\"SIMPLE_BACKUP_SUFFIX\");\n        rbx = rax;\n    }\n    if ((((arg1 != 0 || (arg1 == 0 && rax != 0)) && *rbx != 0) && sub_40ad40(rbx) == rbx))\n    {\n        data_6219a0 = rbx;\n        return;\n    }\n    data_6219a0 = &data_418fb6;\n}\n\n"
        },
        {
            "funcName": "sub_40a3e0",
            "funcStartAddr": "0x40a3e0",
            "funcEndAddr": "0x40a8a1",
            "decompiledFuncCode": "char* sub_40a3e0(char* arg1, int32_t arg2, char arg3)\n{\n    char* var_88 = arg1;\n    int32_t var_58 = arg2;\n    char* rax = sub_40ad40(arg1);\n    void* r14_1 = (rax - arg1);\n    int64_t rdi_1 = data_6219a0;\n    void* rax_2 = (strlen(rax) + r14_1);\n    if (rdi_1 == 0)\n    {\n        sub_40a380(rdi_1);\n        rdi_1 = data_6219a0;\n    }\n    uint64_t rax_4 = (strlen(rdi_1) + 1);\n    void* rbx_1 = (rax_2 + 1);\n    uint64_t rax_5 = 9;\n    if (rax_4 >= 9)\n    {\n        rax_5 = rax_4;\n    }\n    void* rax_6 = (rax_5 + rbx_1);\n    char* rax_7 = malloc(rax_6);\n    char* r15 = rax_7;\n    if (rax_7 != 0)\n    {\n        DIR* r12_1 = nullptr;\n        while (true)\n        {\n            memcpy(r15, var_88, rbx_1);\n            if (var_58 == 1)\n            {\n                memcpy((r15 + rax_2), data_6219a0, rax_4);\n            }\n            else\n            {\n                char* rbx_2 = (r15 + r14_1);\n                uint64_t rax_8 = sub_40ada0(rbx_2);\n                DIR* rax_32;\n                uint32_t rbp_1;\n                if (r12_1 == 0)\n                {\n                    int16_t rax_31 = *rbx_2;\n                    *rbx_2 = 0x2e;\n                    rax_32 = sub_40abc0();\n                    int32_t* rcx_7 = &rbx_2[rax_8];\n                    r12_1 = rax_32;\n                    if (rax_32 == 0)\n                    {\n                        int32_t rbp_3;\n                        rbp_3 = *__errno_location() == 0xc;\n                        *rbx_2 = rax_31;\n                        rbp_1 = (rbp_3 + 2);\n                        *rcx_7 = 0x7e317e2e;\n                        rcx_7[1] = 0;\n                    }\n                    else\n                    {\n                        *rbx_2 = rax_31;\n                        *rcx_7 = 0x7e317e2e;\n                        rcx_7[1] = 0;\n                    }\n                }\n                else\n                {\n                    rewinddir(r12_1);\n                }\n                if ((r12_1 != 0 || (r12_1 == 0 && rax_32 != 0)))\n                {\n                    rbp_1 = 2;\n                    uint64_t var_78_1 = 1;\n                    void* var_70_1 = rax_6;\n                    int64_t rax_10 = (rax_8 + 4);\n                    uint64_t rax_12;\n                    do\n                    {\n                        struct dirent64* rax_11 = readdir(r12_1);\n                        if (rax_11 == 0)\n                        {\n                            break;\n                        }\n                        do\n                        {\n                            char (* rbx_3)[0x100] = &rax_11->d_name;\n                            rax_12 = strlen(rbx_3);\n                            if (rax_12 < rax_10)\n                            {\n                                break;\n                            }\n                            int16_t var_80;\n                            var_80 = (rax_8 + 2);\n                            int32_t rax_13;\n                            uint32_t r8_1;\n                            rax_13 = memcmp((r15 + r14_1), rbx_3, (rax_8 + 2));\n                            if (rax_13 != 0)\n                            {\n                                break;\n                            }\n                            void* rbx_4 = &*rbx_3[var_80];\n                            char rax_14 = *rbx_4;\n                            if ((rax_14 - 0x31) > 8)\n                            {\n                                break;\n                            }\n                            int32_t rdx_3 = *(rbx_4 + 1);\n                            int64_t rcx_3 = 1;\n                            r8_1 = rax_14 == 0x39;\n                            int32_t rax_15 = rdx_3;\n                            if ((rdx_3 - 0x30) <= 9)\n                            {\n                                int32_t rdx_5;\n                                do\n                                {\n                                    rax_15 = rax_15 == 0x39;\n                                    rcx_3 = (rcx_3 + 1);\n                                    rdx_5 = *(rbx_4 + rcx_3);\n                                    r8_1 = (r8_1 & rax_15);\n                                    rax_15 = rdx_5;\n                                } while ((rdx_5 - 0x30) <= 9);\n                            }\n                            if (rax_15 != 0x7e)\n                            {\n                                break;\n                            }\n                            if (*((rbx_4 + rcx_3) + 1) != 0)\n                            {\n                                break;\n                            }\n                            bool cond:4_1 = var_78_1 != rcx_3;\n                            if (var_78_1 >= rcx_3)\n                            {\n                                var_80 = r8_1;\n                                if (cond:4_1)\n                                {\n                                    break;\n                                }\n                                r8_1 = var_80;\n                                if (memcmp(((r15 + rax_2) + 2), rbx_4, var_78_1) > 0)\n                                {\n                                    break;\n                                }\n                            }\n                            uint64_t rdx_8 = r8_1;\n                            rbp_1 = r8_1;\n                            uint64_t rax_18 = (rdx_8 + rcx_3);\n                            var_78_1 = rax_18;\n                            void* rax_19 = ((rax_2 + rax_18) + 4);\n                            char* r8_2;\n                            if (rax_19 <= var_70_1)\n                            {\n                                r8_2 = r15;\n                            }\n                            else\n                            {\n                                int64_t rsi_6;\n                                rsi_6 = rax_19 < 0;\n                                void* rdi_11 = (rax_19 + rax_19);\n                                if (((rax_19 + rax_19) < 0 || ((rax_19 + rax_19) >= 0 && rsi_6 != 0)))\n                                {\n                                    var_70_1 = rax_19;\n                                }\n                                if (((rax_19 + rax_19) >= 0 && rsi_6 == 0))\n                                {\n                                    var_70_1 = rdi_11;\n                                }\n                                var_80 = rcx_3;\n                                char* rax_20 = realloc(r15, var_70_1);\n                                rcx_3 = var_80;\n                                r8_2 = rax_20;\n                                if (rax_20 == 0)\n                                {\n                                    goto label_40a808;\n                                }\n                            }\n                            var_80 = rcx_3;\n                            void* rax_22 = (rax_2 + r8_2);\n                            *rax_22 = 0x7e2e;\n                            *(rax_22 + 2) = 0x30;\n                            void* rcx_5 = (var_80 + memcpy(((rax_22 + rdx_8) + 2), rbx_4, (rcx_3 + 2)));\n                            char rdx_10 = *(rcx_5 - 1);\n                            void* rax_24 = (rcx_5 - 1);\n                            if (rdx_10 == 0x39)\n                            {\n                                do\n                                {\n                                    *rax_24 = 0x30;\n                                    rax_24 = (rax_24 - 1);\n                                    rdx_10 = *rax_24;\n                                } while (rdx_10 == 0x39);\n                            }\n                            r15 = r8_2;\n                            *rax_24 = (rdx_10 + 1);\n                            rax_11 = readdir(r12_1);\n                        } while (rax_11 != 0);\n                    } while (rax_12 < rax_10);\n                }\n                if (rbp_1 == 3)\n                {\n                label_40a808:\n                    char* rdi_22 = r15;\n                    r15 = nullptr;\n                    free(rdi_22);\n                    *__errno_location() = 0xc;\n                    break;\n                }\n                if ((rbp_1 == 2 && var_58 == 2))\n                {\n                    memcpy((r15 + rax_2), data_6219a0, rax_4);\n                    var_58 = 1;\n                }\n                if ((rbp_1 == 1 || rbp_1 == 2))\n                {\n                    sub_40a2b0(r15, rax_2);\n                }\n            }\n            if (arg3 != 0)\n            {\n                int32_t rax_25;\n                char* rcx_6;\n                int32_t rdx_12;\n                if (r12_1 != 0)\n                {\n                    rax_25 = dirfd(r12_1);\n                    rcx_6 = (r15 + r14_1);\n                    rdx_12 = rax_25;\n                }\n                if ((r12_1 == 0 || (r12_1 != 0 && rax_25 < 0)))\n                {\n                    rcx_6 = r15;\n                    rdx_12 = -0x64;\n                    r14_1 = nullptr;\n                }\n                int32_t r8_4;\n                r8_4 = var_58 != 1;\n                if (sub_40ec70(0xffffff9c, var_88, rdx_12, rcx_6, r8_4) != 0)\n                {\n                    int32_t* rax_27 = __errno_location();\n                    int32_t rbp_2 = *rax_27;\n                    if (rbp_2 != 0x11)\n                    {\n                        if (r12_1 != 0)\n                        {\n                            closedir(r12_1);\n                        }\n                        char* rdi_17 = r15;\n                        r15 = nullptr;\n                        free(rdi_17);\n                        *rax_27 = rbp_2;\n                        break;\n                    }\n                    continue;\n                }\n            }\n            if (r12_1 == 0)\n            {\n                break;\n            }\n            closedir(r12_1);\n            break;\n        }\n    }\n    return r15;\n}\n\n"
        },
        {
            "funcName": "sub_40a8b0",
            "funcStartAddr": "0x40a8b0",
            "funcEndAddr": "0x40a8ba",
            "decompiledFuncCode": "int64_t sub_40a8b0(char* arg1, int32_t arg2)\n{\n    /* tailcall */\n    return sub_40a3e0(arg1, arg2, 1);\n}\n\n"
        },
        {
            "funcName": "sub_40a8c0",
            "funcStartAddr": "0x40a8c0",
            "funcEndAddr": "0x40a8ec",
            "decompiledFuncCode": "uint64_t sub_40a8c0(int64_t arg1, char* arg2)\n{\n    return *((sub_412e60(arg1, arg2, &data_419040, 0x419020, 4, data_61f4e0) << 2) + 0x419020);\n}\n\n"
        },
        {
            "funcName": "sub_40a8f0",
            "funcStartAddr": "0x40a8f0",
            "funcEndAddr": "0x40a90a",
            "decompiledFuncCode": "char* sub_40a8f0(char* arg1, int32_t arg2)\n{\n    char* rax = sub_40a3e0(arg1, arg2, 0);\n    if (rax == 0)\n    {\n        sub_411530();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40a910",
            "funcStartAddr": "0x40a910",
            "funcEndAddr": "0x40a922",
            "decompiledFuncCode": "int64_t sub_40a910(int64_t arg1, char* arg2)\n{\n    if ((arg2 != 0 && *arg2 != 0))\n    {\n        /* tailcall */\n        return sub_40a8c0(arg1, arg2);\n    }\n    return 2;\n}\n\n"
        },
        {
            "funcName": "sub_40a930",
            "funcStartAddr": "0x40a930",
            "funcEndAddr": "0x40a971",
            "decompiledFuncCode": "int64_t sub_40a930(char const* const arg1, char* arg2)\n{\n    if ((arg2 == 0 || (arg2 != 0 && *arg2 == 0)))\n    {\n        char* rax_1 = getenv(\"VERSION_CONTROL\");\n        if ((rax_1 == 0 || (rax_1 != 0 && *rax_1 == 0)))\n        {\n            return 2;\n        }\n        if ((rax_1 != 0 && *rax_1 != 0))\n        {\n            arg2 = rax_1;\n            arg1 = \"$VERSION_CONTROL\";\n        }\n    }\n    /* tailcall */\n    return sub_40a8c0(arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40a980",
            "funcStartAddr": "0x40a980",
            "funcEndAddr": "0x40a9f0",
            "decompiledFuncCode": "uint64_t sub_40a980(uint64_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    uint64_t rcx = arg3;\n    uint64_t r8_1;\n    if (arg1 == 0)\n    {\n        arg1 = 0x2000;\n        if (arg2 != 0)\n        {\n            arg1 = arg2;\n        }\n    }\n    else if (arg2 != 0)\n    {\n        uint64_t r8_2 = arg2;\n        uint64_t rax_2 = arg1;\n        while (true)\n        {\n            uint64_t temp1_1 = (COMBINE(0, rax_2) % r8_2);\n            if (temp1_1 == 0)\n            {\n                break;\n            }\n            rax_2 = r8_2;\n            r8_2 = temp1_1;\n        }\n        uint64_t temp0_2 = (COMBINE(0, arg1) / r8_2);\n        r8_1 = (arg2 * temp0_2);\n        if ((r8_1 <= rcx && (COMBINE(0, r8_1) / arg2) == temp0_2))\n        {\n        label_40a9a1:\n            return r8_1;\n        }\n    }\n    if (arg1 > rcx)\n    {\n        goto label_40a99b;\n    }\n    rcx = arg1;\nlabel_40a99b:\n    r8_1 = rcx;\n    goto label_40a9a1;\n}\n\n"
        },
        {
            "funcName": "sub_40a9f0",
            "funcStartAddr": "0x40a9f0",
            "funcEndAddr": "0x40a9f8",
            "decompiledFuncCode": "int64_t sub_40a9f0(int64_t arg1)\n{\n    data_6219a8 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_40aa00",
            "funcStartAddr": "0x40aa00",
            "funcEndAddr": "0x40aafd",
            "decompiledFuncCode": "void sub_40aa00(void* arg1)\n{\n    if (sub_411b90(stdin) != 0)\n    {\n        int32_t rax_8 = sub_411bc0(stdin, 0, 1);\n        uint64_t* const rdi_3 = stdin;\n        int32_t rax_3;\n        if (rax_8 == 0)\n        {\n            rax_3 = sub_411b50(rdi_3);\n            rdi_3 = stdin;\n            if (rax_3 != 0)\n            {\n                sub_412f20(rdi_3);\n            }\n        }\n        if (((rax_8 != 0 || (rax_8 == 0 && rax_3 == 0)) && sub_412f20(rdi_3) == 0))\n        {\n            /* tailcall */\n            return sub_40ab20();\n        }\n    }\n    else if (sub_412f20(stdin) == 0)\n    {\n        /* tailcall */\n        return sub_40ab20();\n    }\n    char* rax_4 = dcgettext(nullptr, \"error closing file\", 5);\n    int64_t rbx = data_6219a8;\n    int32_t* rax_5 = __errno_location();\n    if (rbx == 0)\n    {\n        error(0, *rax_5, \"%s\", rax_4);\n    }\n    else\n    {\n        error(0, *rax_5, \"%s: %s\", sub_40eaa0(rbx), rax_4);\n    }\n    sub_40ab20();\n    _exit(data_61f468);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40ab00",
            "funcStartAddr": "0x40ab00",
            "funcEndAddr": "0x40ab08",
            "decompiledFuncCode": "int64_t sub_40ab00(int64_t arg1)\n{\n    data_6219b8 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_40ab10",
            "funcStartAddr": "0x40ab10",
            "funcEndAddr": "0x40ab18",
            "decompiledFuncCode": "int64_t sub_40ab10(char arg1)\n{\n    data_6219b0 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_40ab20",
            "funcStartAddr": "0x40ab20",
            "funcEndAddr": "0x40abbe",
            "decompiledFuncCode": "uint64_t sub_40ab20()\n{\n    int32_t rax = sub_412f20(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_6219b0 == 0 || (data_6219b0 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_6219b8;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_40eaa0(rdi_2), rax_3);\n            }\n        }\n    }\n    if ((rax == 0 || ((rax != 0 && data_6219b0 != 0) && *rax_1 == 0x20)))\n    {\n        uint64_t rax_2 = sub_412f20(stderr);\n        if (rax_2 == 0)\n        {\n            return rax_2;\n        }\n    }\n    _exit(data_61f468);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40abc0",
            "funcStartAddr": "0x40abc0",
            "funcEndAddr": "0x40ac56",
            "decompiledFuncCode": "DIR* sub_40abc0()\n{\n    char* rdi;\n    DIR* rax = opendir(rdi);\n    if (rax != 0)\n    {\n        int32_t rax_1 = dirfd(rax);\n        if (rax_1 <= 2)\n        {\n            int32_t rax_4 = sub_411a10(rax_1, 0x406, 3);\n            int32_t* rax_5 = __errno_location();\n            DIR* r13;\n            int32_t r14;\n            if (rax_4 < 0)\n            {\n                r14 = *rax_5;\n                r13 = nullptr;\n            }\n            else\n            {\n                DIR* rax_7 = fdopendir(rax_4);\n                r14 = *rax_5;\n                r13 = rax_7;\n                if (rax_7 == 0)\n                {\n                    close(rax_4);\n                }\n            }\n            closedir(rax);\n            *rax_5 = r14;\n            return r13;\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40ac60",
            "funcStartAddr": "0x40ac60",
            "funcEndAddr": "0x40ac78",
            "decompiledFuncCode": "char* sub_40ac60(char* arg1)\n{\n    char* rax = sub_40ace0(arg1);\n    if (rax == 0)\n    {\n        sub_411530();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40ac80",
            "funcStartAddr": "0x40ac80",
            "funcEndAddr": "0x40acdd",
            "decompiledFuncCode": "void* sub_40ac80(char* arg1)\n{\n    int64_t rbp;\n    rbp = *arg1 == 0x2f;\n    char* rax = sub_40ad40(arg1);\n    void* rcx_1 = (rax - arg1);\n    if (rcx_1 > rbp)\n    {\n        void* rdx_1 = (rcx_1 - 1);\n        if (rax[-1] == 0x2f)\n        {\n            void* rax_1;\n            for (; rbp != rdx_1; rdx_1 = rax_1)\n            {\n                rax_1 = (rdx_1 - 1);\n                if (*((arg1 + rdx_1) - 1) != 0x2f)\n                {\n                    break;\n                }\n            }\n            return rdx_1;\n        }\n    }\n    return rcx_1;\n}\n\n"
        },
        {
            "funcName": "sub_40ace0",
            "funcStartAddr": "0x40ace0",
            "funcEndAddr": "0x40ad3a",
            "decompiledFuncCode": "char* sub_40ace0(char* arg1)\n{\n    void* rax = sub_40ac80(arg1);\n    void* rbx = rax;\n    rax = rax == 0;\n    char* rax_2 = malloc(((rbx + rax) + 1));\n    char* rcx = rax_2;\n    if (rax_2 != 0)\n    {\n        char* rax_3 = memcpy(rax_2, arg1, rbx);\n        rcx = rax_3;\n        if (rbx == 0)\n        {\n            *rax_3 = 0x2e;\n            rbx = 1;\n        }\n        *(rcx + rbx) = 0;\n    }\n    return rcx;\n}\n\n"
        },
        {
            "funcName": "sub_40ad40",
            "funcStartAddr": "0x40ad40",
            "funcEndAddr": "0x40ad9b",
            "decompiledFuncCode": "char* sub_40ad40(char* arg1)\n{\n    char rdx = *arg1;\n    char* rax = arg1;\n    if (rdx == 0x2f)\n    {\n        do\n        {\n            rax = &rax[1];\n            rdx = *rax;\n        } while (rdx == 0x2f);\n    }\n    if (rdx != 0)\n    {\n        char* rcx_1 = rax;\n        char rsi_1 = 0;\n        while (true)\n        {\n            if (rdx == 0x2f)\n            {\n                rcx_1 = &rcx_1[1];\n                rdx = *rcx_1;\n                rsi_1 = 1;\n                if (rdx == 0)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                if (rsi_1 != 0)\n                {\n                    rax = rcx_1;\n                    rsi_1 = 0;\n                }\n                rcx_1 = &rcx_1[1];\n                rdx = *rcx_1;\n                if (rdx == 0)\n                {\n                    break;\n                }\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40ada0",
            "funcStartAddr": "0x40ada0",
            "funcEndAddr": "0x40adcb",
            "decompiledFuncCode": "uint64_t sub_40ada0(char* arg1)\n{\n    uint64_t rax = strlen(arg1);\n    if (rax > 1)\n    {\n        while (true)\n        {\n            uint64_t rdx_1 = (rax - 1);\n            if (arg1[(rax - 1)] != 0x2f)\n            {\n                break;\n            }\n            rax = rdx_1;\n            if (rdx_1 == 1)\n            {\n                return rax;\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40add0",
            "funcStartAddr": "0x40add0",
            "funcEndAddr": "0x40add5",
            "decompiledFuncCode": "int64_t sub_40add0(int32_t arg1, int64_t arg2, off64_t arg3, int32_t arg4)\n{\n    /* tailcall */\n    return posix_fadvise(arg1, arg2, arg3, arg4);\n}\n\n"
        },
        {
            "funcName": "sub_40ade0",
            "funcStartAddr": "0x40ade0",
            "funcEndAddr": "0x40ae01",
            "decompiledFuncCode": "void sub_40ade0(FILE* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        return;\n    }\n    /* tailcall */\n    return posix_fadvise(fileno(arg1), 0, 0, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40ae10",
            "funcStartAddr": "0x40ae10",
            "funcEndAddr": "0x40ae5a",
            "decompiledFuncCode": "uint64_t sub_40ae10(char* arg1, int64_t arg2, int32_t arg3)\n{\n    uint64_t rdx = 0;\n    if ((arg2 & 0x40) != 0)\n    {\n        int32_t var_50_1 = 0x10;\n        rdx = arg3;\n        void* var_48_1 = &arg_8;\n        void var_38;\n        void* var_40_1 = &var_38;\n    }\n    return sub_40fcf0(open(arg1, arg2, rdx));\n}\n\n"
        },
        {
            "funcName": "sub_40ae60",
            "funcStartAddr": "0x40ae60",
            "funcEndAddr": "0x40aee6",
            "decompiledFuncCode": "void sub_40ae60(int64_t* arg1, char* arg2, int64_t* arg3)\n{\n    if (arg1 == 0)\n    {\n        return;\n    }\n    int64_t* rax = sub_4112e0(0x18);\n    *rax = sub_411510(arg2);\n    rax[1] = arg3[1];\n    rax[2] = *arg3;\n    int64_t rax_4 = sub_40c2f0(arg1, rax);\n    if (rax_4 == 0)\n    {\n        sub_411530();\n        /* no return */\n    }\n    if (rax == rax_4)\n    {\n        return;\n    }\n    /* tailcall */\n    return sub_40c5c0(rax);\n}\n\n"
        },
        {
            "funcName": "sub_40aef0",
            "funcStartAddr": "0x40aef0",
            "funcEndAddr": "0x40af2b",
            "decompiledFuncCode": "int64_t sub_40aef0(void* arg1, int64_t arg2, int64_t* arg3)\n{\n    if (arg1 == 0)\n    {\n        return 0;\n    }\n    int64_t var_28 = arg2;\n    int64_t var_20 = arg3[1];\n    int64_t var_18 = *arg3;\n    int64_t rax_2;\n    rax_2 = sub_40b8e0(arg1, &var_28) != 0;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_40af30",
            "funcStartAddr": "0x40af30",
            "funcEndAddr": "0x40b0a3",
            "decompiledFuncCode": "uint64_t sub_40af30(int32_t arg1, char* arg2)\n{\n    char rax = 0x2d;\n    int32_t rdx = (arg1 & 0xf000);\n    if (rdx != 0x8000)\n    {\n        rax = 0x64;\n        if (rdx != 0x4000)\n        {\n            rax = 0x62;\n            if (rdx != 0x6000)\n            {\n                rax = 0x63;\n                if (rdx != 0x2000)\n                {\n                    rax = 0x6c;\n                    if (rdx != 0xa000)\n                    {\n                        rax = 0x70;\n                        if (rdx != 0x1000)\n                        {\n                            rax = 0x73;\n                            if (rdx != 0xc000)\n                            {\n                                rax = 0x3f;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    *arg2 = rax;\n    int32_t rax_2 = (arg1 & 0x100);\n    arg2[1] = (((rax_2 - rax_2) & 0xbb) + 0x72);\n    int32_t rax_7 = (arg1 & 0x80);\n    arg2[2] = (((rax_7 - rax_7) & 0xb6) + 0x77);\n    int32_t rax_12 = (arg1 & 0x40);\n    char rax_13 = (rax_12 - rax_12);\n    char rax_15;\n    if ((arg1 & 0x800) == 0)\n    {\n        rax_15 = ((rax_13 & 0xb5) + 0x78);\n    }\n    else\n    {\n        rax_15 = ((rax_13 & 0xe0) + 0x73);\n    }\n    arg2[3] = rax_15;\n    int32_t rax_17 = (arg1 & 0x20);\n    arg2[4] = (((rax_17 - rax_17) & 0xbb) + 0x72);\n    int32_t rax_22 = (arg1 & 0x10);\n    arg2[5] = (((rax_22 - rax_22) & 0xb6) + 0x77);\n    int32_t rax_27 = (arg1 & 8);\n    char rax_28 = (rax_27 - rax_27);\n    char rax_30;\n    if ((arg1 & 0x400) == 0)\n    {\n        rax_30 = ((rax_28 & 0xb5) + 0x78);\n    }\n    else\n    {\n        rax_30 = ((rax_28 & 0xe0) + 0x73);\n    }\n    arg2[6] = rax_30;\n    int32_t rax_32 = (arg1 & 4);\n    arg2[7] = (((rax_32 - rax_32) & 0xbb) + 0x72);\n    int32_t rax_37 = (arg1 & 2);\n    arg2[8] = (((rax_37 - rax_37) & 0xb6) + 0x77);\n    int32_t rax_42 = (arg1 & 1);\n    int32_t rax_43 = (rax_42 - rax_42);\n    if ((arg1 & 0x200) == 0)\n    {\n        uint64_t rax_49 = ((rax_43 & 0xffffffb5) + 0x78);\n        arg2[9] = rax_49;\n        *(arg2 + 0xa) = 0x20;\n        return rax_49;\n    }\n    uint64_t rax_45 = ((rax_43 & 0xffffffe0) + 0x74);\n    arg2[9] = rax_45;\n    *(arg2 + 0xa) = 0x20;\n    return rax_45;\n}\n\n"
        },
        {
            "funcName": "sub_40b0b0",
            "funcStartAddr": "0x40b0b0",
            "funcEndAddr": "0x40b0b8",
            "decompiledFuncCode": "int64_t sub_40b0b0(void* arg1, char* arg2)\n{\n    /* tailcall */\n    return sub_40af30(*(arg1 + 0x18), arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40b0c0",
            "funcStartAddr": "0x40b0c0",
            "funcEndAddr": "0x40b0d8",
            "decompiledFuncCode": "int64_t sub_40b0c0(char* arg1, char* arg2, void** arg3)\n{\n    int64_t rax = sub_40b0e0(arg1, arg2, arg3);\n    if (rax == 0)\n    {\n        sub_411530();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40b0e0",
            "funcStartAddr": "0x40b0e0",
            "funcEndAddr": "0x40b1b9",
            "decompiledFuncCode": "int64_t sub_40b0e0(char* arg1, char* arg2, void** arg3)\n{\n    char* r12 = arg2;\n    char* rax = sub_40ad40(arg1);\n    uint64_t rax_1 = sub_40ada0(rax);\n    uint64_t rbx = rax_1;\n    void* rbp_2 = ((rax - arg1) + rax_1);\n    if (rax_1 != 0)\n    {\n        rbx = rax[(rax_1 - 1)] != 0x2f;\n        rbx = rbx;\n    }\n    char rax_2 = *r12;\n    if (rax_2 == 0x2f)\n    {\n        do\n        {\n            r12 = &r12[1];\n        } while (*r12 == 0x2f);\n    }\n    uint64_t rax_3 = strlen(r12);\n    int64_t rax_4 = malloc((((rbx + rbp_2) + 1) + rax_3));\n    if (rax_4 != 0)\n    {\n        char* rax_5 = mempcpy(rax_4, arg1, rbp_2);\n        *rax_5 = 0x2f;\n        void* rdi_5 = &rax_5[rbx];\n        if (arg3 != 0)\n        {\n            int64_t rax_6;\n            rax_6 = rax_2 == 0x2f;\n            *arg3 = (rdi_5 - rax_6);\n        }\n        *mempcpy(rdi_5, r12, rax_3) = 0;\n    }\n    return rax_4;\n}\n\n"
        },
        {
            "funcName": "sub_40b1c0",
            "funcStartAddr": "0x40b1c0",
            "funcEndAddr": "0x40b236",
            "decompiledFuncCode": "int64_t sub_40b1c0(int32_t arg1, int64_t arg2, uint64_t arg3)\n{\n    int64_t r12;\n    if (arg3 == 0)\n    {\n        r12 = 0;\n    }\n    else\n    {\n        int64_t rbp_1 = arg2;\n        uint64_t rbx_1 = arg3;\n        r12 = 0;\n        ssize_t rax_1;\n        uint64_t temp0_1;\n        do\n        {\n            rax_1 = sub_40eec0(arg1, rbp_1, rbx_1);\n            if (rax_1 == -1)\n            {\n                break;\n            }\n            if (rax_1 == 0)\n            {\n                *__errno_location() = 0;\n                return r12;\n            }\n            r12 = (r12 + rax_1);\n            rbp_1 = (rbp_1 + rax_1);\n            temp0_1 = rbx_1;\n            rbx_1 = (rbx_1 - rax_1);\n        } while (temp0_1 != rax_1);\n    }\n    return r12;\n}\n\n"
        },
        {
            "funcName": "sub_40b240",
            "funcStartAddr": "0x40b240",
            "funcEndAddr": "0x40b2b6",
            "decompiledFuncCode": "int64_t sub_40b240(int32_t arg1, int64_t arg2, uint64_t arg3)\n{\n    int64_t r12;\n    if (arg3 == 0)\n    {\n        r12 = 0;\n    }\n    else\n    {\n        int64_t rbp_1 = arg2;\n        uint64_t rbx_1 = arg3;\n        r12 = 0;\n        ssize_t rax_1;\n        uint64_t temp0_1;\n        do\n        {\n            rax_1 = sub_40ef20(arg1, rbp_1, rbx_1);\n            if (rax_1 == -1)\n            {\n                break;\n            }\n            if (rax_1 == 0)\n            {\n                *__errno_location() = 0x1c;\n                return r12;\n            }\n            r12 = (r12 + rax_1);\n            rbp_1 = (rbp_1 + rax_1);\n            temp0_1 = rbx_1;\n            rbx_1 = (rbx_1 - rax_1);\n        } while (temp0_1 != rax_1);\n    }\n    return r12;\n}\n\n"
        },
        {
            "funcName": "sub_40b2c0",
            "funcStartAddr": "0x40b2c0",
            "funcEndAddr": "0x40b353",
            "decompiledFuncCode": "int64_t sub_40b2c0(int64_t arg1)\n{\n    int64_t rsi = 0xa;\n    if (arg1 >= 0xa)\n    {\n        rsi = arg1;\n    }\n    int64_t rsi_1 = (rsi | 1);\n    if (rsi_1 != -1)\n    {\n        do\n        {\n            int64_t rax_2;\n            int64_t rdx_1;\n            rdx_1 = HIGHD((rsi_1 * -0x5555555555555555));\n            rax_2 = LOWD((rsi_1 * -0x5555555555555555));\n            uint64_t rcx_2 = (rsi_1 - ((rdx_1 >> 1) * 3));\n            uint64_t rax_6 = rcx_2;\n            int64_t rdi;\n            if ((rsi_1 > 9 && rcx_2 != 0))\n            {\n                int64_t r8_1 = 0x10;\n                rdi = 9;\n                int64_t rcx_3 = 3;\n                uint64_t temp1_1;\n                do\n                {\n                    rcx_3 = (rcx_3 + 2);\n                    rdi = (rdi + r8_1);\n                    temp1_1 = (COMBINE(0, rsi_1) % rcx_3);\n                    rax_6 = temp1_1;\n                    if (rdi >= rsi_1)\n                    {\n                        break;\n                    }\n                    r8_1 = (r8_1 + 8);\n                } while (temp1_1 != 0);\n            }\n            if (((rsi_1 <= 9 || ((rsi_1 > 9 && rcx_2 != 0) && rdi >= rsi_1)) && rax_6 != 0))\n            {\n                break;\n            }\n            rsi_1 = (rsi_1 + 2);\n        } while (rsi_1 != -1);\n    }\n    return rsi_1;\n}\n\n"
        },
        {
            "funcName": "sub_40b360",
            "funcStartAddr": "0x40b360",
            "funcEndAddr": "0x40b370",
            "decompiledFuncCode": "uint64_t sub_40b360(int64_t arg1, int64_t arg2)\n{\n    return (COMBINE(0, (RORQ(arg1, 3))) % arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40b370",
            "funcStartAddr": "0x40b370",
            "funcEndAddr": "0x40b377",
            "decompiledFuncCode": "int64_t sub_40b370(int64_t arg1, int64_t arg2)\n{\n    int64_t rax;\n    rax = arg1 == arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40b380",
            "funcStartAddr": "0x403010",
            "funcEndAddr": "0x40b3a1",
            "decompiledFuncCode": "int64_t sub_40b380(void* arg1, int64_t arg2)\n{\n    int64_t rax = *(arg1 + 0x30)(arg2, *(arg1 + 0x10));\n    if (*(arg1 + 0x10) <= rax)\n    {\n        abort();\n        /* no return */\n    }\n    return ((rax << 4) + *arg1);\n}\n\n"
        },
        {
            "funcName": "sub_40b3b0",
            "funcStartAddr": "0x40b3b0",
            "funcEndAddr": "0x40b4c9",
            "decompiledFuncCode": "int64_t sub_40b3b0(void* arg1, int64_t arg2, int64_t* arg3, char arg4)\n{\n    int64_t* rax = sub_40b380(arg1, arg2);\n    *arg3 = rax;\n    int64_t rsi = *rax;\n    if (rsi != 0)\n    {\n        int64_t* rbx_1 = rax;\n        char rax_1;\n        if (rsi != arg2)\n        {\n            rax_1 = *(arg1 + 0x38)(arg2, rsi);\n            if (rax_1 != 0)\n            {\n                rsi = *rbx_1;\n            }\n            else\n            {\n                int64_t* rax_2 = rbx_1[1];\n                if (rax_2 != 0)\n                {\n                    rsi = *rax_2;\n                    if (arg2 != rsi)\n                    {\n                        do\n                        {\n                            if (*(arg1 + 0x38)(arg2, rsi) != 0)\n                            {\n                                rax_2 = rbx_1[1];\n                                rsi = *rax_2;\n                                break;\n                            }\n                            rbx_1 = rbx_1[1];\n                            rax_2 = rbx_1[1];\n                            if (rax_2 == 0)\n                            {\n                                return 0;\n                            }\n                            rsi = *rax_2;\n                        } while (rsi != arg2);\n                    }\n                    if (arg4 != 0)\n                    {\n                        rbx_1[1] = rax_2[1];\n                        *rax_2 = 0;\n                        rax_2[1] = *(arg1 + 0x48);\n                        *(arg1 + 0x48) = rax_2;\n                    }\n                    goto label_40b469;\n                }\n            }\n        }\n        if (((rsi != arg2 && rax_1 != 0) || rsi == arg2))\n        {\n            if (arg4 == 0)\n            {\n            label_40b469:\n                return rsi;\n            }\n            int128_t* rax_5 = rbx_1[1];\n            if (rax_5 != 0)\n            {\n                *rbx_1 = *rax_5;\n                *rax_5 = 0;\n                *(rax_5 + 8) = *(arg1 + 0x48);\n                *(arg1 + 0x48) = rax_5;\n                return rsi;\n            }\n            *rbx_1 = 0;\n            goto label_40b469;\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40b4d0",
            "funcStartAddr": "0x40b4d0",
            "funcEndAddr": "0x40b54e",
            "decompiledFuncCode": "int64_t sub_40b4d0(int64_t* arg1)\n{\n    int32_t* rax_3 = *arg1;\n    if (rax_3 != 0x419120)\n    {\n        int32_t zmm0 = rax_3[2];\n        if (((zmm0 == 0.100000001f | (FCMP_UO(zmm0, 0.100000001f))) || (zmm0 < 0.100000001f | (FCMP_UO(zmm0, 0.100000001f)))))\n        {\n        label_40b53a:\n            *arg1 = 0x419120;\n            return 0;\n        }\n        if (((0.899999976f == zmm0 | (FCMP_UO(0.899999976f, zmm0))) || (0.899999976f < zmm0 | (FCMP_UO(0.899999976f, zmm0)))))\n        {\n            goto label_40b53a;\n        }\n        float zmm1 = rax_3[3];\n        if (((zmm1 == 1.10000002f | (FCMP_UO(zmm1, 1.10000002f))) || (zmm1 < 1.10000002f | (FCMP_UO(zmm1, 1.10000002f)))))\n        {\n            goto label_40b53a;\n        }\n        zmm1 = *rax_3;\n        if ((zmm1 < 0f | (FCMP_UO(zmm1, 0f))))\n        {\n            goto label_40b53a;\n        }\n        zmm1 = (zmm1 + 0.100000001f);\n        int32_t zmm2 = rax_3[1];\n        if (((zmm2 == zmm1 | (FCMP_UO(zmm2, zmm1))) || (zmm2 < zmm1 | (FCMP_UO(zmm2, zmm1)))))\n        {\n            goto label_40b53a;\n        }\n        int512_t zmm3;\n        zmm3 = 0x3f800000;\n        if ((1f < zmm2 | (FCMP_UO(1f, zmm2))))\n        {\n            goto label_40b53a;\n        }\n        if ((!((!(zmm0 == zmm1 | (FCMP_UO(zmm0, zmm1)))) && (!(zmm0 < zmm1 | (FCMP_UO(zmm0, zmm1)))))))\n        {\n            goto label_40b53a;\n        }\n    }\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_40b550",
            "funcStartAddr": "0x40b550",
            "funcEndAddr": "0x40b69a",
            "decompiledFuncCode": "int64_t sub_40b550(void* arg1, int64_t* arg2, char arg3)\n{\n    int64_t* r12 = *arg2;\n    if (r12 < arg2[1])\n    {\n        do\n        {\n            int64_t r15_2 = *r12;\n            if (r15_2 != 0)\n            {\n                int64_t* rbx_1 = r12[1];\n                if (rbx_1 != 0)\n                {\n                    while (true)\n                    {\n                        int64_t r15_1 = *rbx_1;\n                        int64_t* rax_1 = sub_40b380(arg1, r15_1);\n                        int64_t* rdx = rbx_1[1];\n                        if (*rax_1 != 0)\n                        {\n                            rbx_1[1] = rax_1[1];\n                            rax_1[1] = rbx_1;\n                            rbx_1 = rdx;\n                            if (rdx == 0)\n                            {\n                                break;\n                            }\n                        }\n                        else\n                        {\n                            *rax_1 = r15_1;\n                            *(arg1 + 0x18) = (*(arg1 + 0x18) + 1);\n                            *rbx_1 = 0;\n                            rbx_1[1] = *(arg1 + 0x48);\n                            *(arg1 + 0x48) = rbx_1;\n                            rbx_1 = rdx;\n                            if (rdx == 0)\n                            {\n                                break;\n                            }\n                        }\n                    }\n                    r15_2 = *r12;\n                }\n                r12[1] = 0;\n                if (arg3 == 0)\n                {\n                    int64_t* rax_3 = sub_40b380(arg1, r15_2);\n                    if (*rax_3 == 0)\n                    {\n                        *rax_3 = r15_2;\n                        *(arg1 + 0x18) = (*(arg1 + 0x18) + 1);\n                    }\n                    else\n                    {\n                        int64_t* rax_4 = *(arg1 + 0x48);\n                        if (rax_4 != 0)\n                        {\n                            *(arg1 + 0x48) = rax_4[1];\n                        }\n                        else\n                        {\n                            rax_4 = malloc(0x10);\n                            if (rax_4 == 0)\n                            {\n                                return 0;\n                            }\n                        }\n                        int64_t rdx_2 = rax_3[1];\n                        *rax_4 = r15_2;\n                        rax_4[1] = rdx_2;\n                        rax_3[1] = rax_4;\n                    }\n                    *r12 = 0;\n                    r12 = &r12[2];\n                    arg2[3] = (arg2[3] - 1);\n                    if (arg2[1] <= r12)\n                    {\n                        break;\n                    }\n                    continue;\n                }\n            }\n            r12 = &r12[2];\n        } while (arg2[1] > r12);\n    }\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_40b6a0",
            "funcStartAddr": "0x40b6a0",
            "funcEndAddr": "0x40b6a5",
            "decompiledFuncCode": "int64_t sub_40b6a0(void* arg1)\n{\n    return *(arg1 + 0x10);\n}\n\n"
        },
        {
            "funcName": "sub_40b6b0",
            "funcStartAddr": "0x40b6b0",
            "funcEndAddr": "0x40b6b5",
            "decompiledFuncCode": "int64_t sub_40b6b0(void* arg1)\n{\n    return *(arg1 + 0x18);\n}\n\n"
        },
        {
            "funcName": "sub_40b6c0",
            "funcStartAddr": "0x40b6c0",
            "funcEndAddr": "0x40b6c5",
            "decompiledFuncCode": "int64_t sub_40b6c0(void* arg1)\n{\n    return *(arg1 + 0x20);\n}\n\n"
        },
        {
            "funcName": "sub_40b6d0",
            "funcStartAddr": "0x40b6d0",
            "funcEndAddr": "0x40b71f",
            "decompiledFuncCode": "int64_t sub_40b6d0(int64_t* arg1)\n{\n    int64_t* rsi = *arg1;\n    int64_t rdi = arg1[1];\n    int64_t rax = 0;\n    if (rsi >= rdi)\n    {\n        return 0;\n    }\n    while (true)\n    {\n        if (*rsi == 0)\n        {\n            rsi = &rsi[2];\n            if (rsi >= rdi)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rdx_1 = rsi[1];\n            int64_t rcx_1 = 1;\n            if (rdx_1 != 0)\n            {\n                do\n                {\n                    rdx_1 = *(rdx_1 + 8);\n                    rcx_1 = (rcx_1 + 1);\n                } while (rdx_1 != 0);\n            }\n            if (rax < rcx_1)\n            {\n                rax = rcx_1;\n            }\n            rsi = &rsi[2];\n            if (rsi >= rdi)\n            {\n                break;\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40b720",
            "funcStartAddr": "0x40b720",
            "funcEndAddr": "0x40b787",
            "decompiledFuncCode": "int64_t sub_40b720(int64_t* arg1)\n{\n    int64_t* rcx = *arg1;\n    int64_t rsi = arg1[1];\n    int64_t rdx = 0;\n    int64_t r8 = 0;\n    if (rcx < rsi)\n    {\n        do\n        {\n            if (*rcx != 0)\n            {\n                void* rax_1 = rcx[1];\n                r8 = (r8 + 1);\n                rdx = (rdx + 1);\n                if (rax_1 != 0)\n                {\n                    do\n                    {\n                        rax_1 = *(rax_1 + 8);\n                        rdx = (rdx + 1);\n                    } while (rax_1 != 0);\n                    rcx = &rcx[2];\n                    if (rcx >= rsi)\n                    {\n                        break;\n                    }\n                    continue;\n                }\n            }\n            rcx = &rcx[2];\n        } while (rcx < rsi);\n    }\n    if (arg1[3] == r8)\n    {\n        int64_t rax_2;\n        rax_2 = arg1[4] == rdx;\n        return rax_2;\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40b790",
            "funcStartAddr": "0x40b790",
            "funcEndAddr": "0x40b8d8",
            "decompiledFuncCode": "int64_t sub_40b790(int64_t* arg1, FILE* arg2)\n{\n    int64_t rbx = 0;\n    int64_t r12 = arg1[2];\n    int64_t r13 = arg1[3];\n    int64_t* rsi = *arg1;\n    int64_t rdi = arg1[1];\n    if (rsi < rdi)\n    {\n        while (true)\n        {\n            if (*rsi == 0)\n            {\n                rsi = &rsi[2];\n                if (rsi >= rdi)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                void* rax_1 = rsi[1];\n                int64_t rdx_1 = 1;\n                if (rax_1 != 0)\n                {\n                    do\n                    {\n                        rax_1 = *(rax_1 + 8);\n                        rdx_1 = (rdx_1 + 1);\n                    } while (rax_1 != 0);\n                }\n                if (rbx < rdx_1)\n                {\n                    rbx = rdx_1;\n                }\n                rsi = &rsi[2];\n                if (rsi >= rdi)\n                {\n                    break;\n                }\n            }\n        }\n    }\n    __fprintf_chk(arg2, 1, \"# entries:         %lu\\n\");\n    __fprintf_chk(arg2, 1, \"# buckets:         %lu\\n\", r12);\n    __fprintf_chk(arg2, 1, \"# buckets used:    %lu (%.2f%%)\\n\", r13);\n    /* tailcall */\n    return __fprintf_chk(arg2, 1, \"max bucket length: %lu\\n\", rbx);\n}\n\n"
        },
        {
            "funcName": "sub_40b8e0",
            "funcStartAddr": "0x40b8e0",
            "funcEndAddr": "0x40b933",
            "decompiledFuncCode": "int64_t sub_40b8e0(void* arg1, int64_t arg2)\n{\n    int64_t rbp = arg2;\n    int64_t* rax = sub_40b380(arg1, arg2);\n    int64_t rsi = *rax;\n    if (rsi != 0)\n    {\n        int64_t* rbx_1 = rax;\n        while (true)\n        {\n            if (rsi != rbp)\n            {\n                if (*(arg1 + 0x38)(rbp, rsi) != 0)\n                {\n                    rbp = *rbx_1;\n                }\n                else\n                {\n                    rbx_1 = rbx_1[1];\n                    if (rbx_1 == 0)\n                    {\n                        break;\n                    }\n                    rsi = *rbx_1;\n                    continue;\n                }\n            }\n            return rbp;\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40b940",
            "funcStartAddr": "0x403015",
            "funcEndAddr": "0x40b988",
            "decompiledFuncCode": "int64_t sub_40b940(int64_t* arg1)\n{\n    if (arg1[4] == 0)\n    {\n        return 0;\n    }\n    int64_t* rdx = *arg1;\n    int64_t rcx = arg1[1];\n    if (rdx < rcx)\n    {\n        do\n        {\n            int64_t rax_1 = *rdx;\n            if (rax_1 != 0)\n            {\n                return rax_1;\n            }\n            rdx = &rdx[2];\n        } while (rdx < rcx);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40b990",
            "funcStartAddr": "0x40b990",
            "funcEndAddr": "0x40b9fa",
            "decompiledFuncCode": "int64_t sub_40b990(void* arg1, int64_t arg2)\n{\n    int64_t* rax = sub_40b380(arg1, arg2);\n    int64_t* rcx = rax;\n    int64_t* rdx = rax;\n    do\n    {\n        int64_t rax_1 = *rdx;\n        rdx = rdx[1];\n        if (rax_1 == arg2)\n        {\n            if (rdx != 0)\n            {\n                return *rdx;\n            }\n            break;\n        }\n    } while (rdx != 0);\n    int64_t rdx_1 = *(arg1 + 8);\n    int64_t rax_2;\n    do\n    {\n        rcx = &rcx[2];\n        if (rdx_1 <= rcx)\n        {\n            rax_2 = 0;\n            break;\n        }\n        rax_2 = *rcx;\n    } while (rax_2 == 0);\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_40ba00",
            "funcStartAddr": "0x40ba00",
            "funcEndAddr": "0x40ba64",
            "decompiledFuncCode": "int64_t sub_40ba00(int64_t* arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rdx = *arg1;\n    if (arg1[1] <= rdx)\n    {\n        return 0;\n    }\n    int64_t r9 = 0;\n    do\n    {\n        int64_t r8_1 = *rdx;\n        if (r8_1 != 0)\n        {\n            if (arg3 <= r9)\n            {\n                break;\n            }\n            *(arg2 + (r9 << 3)) = r8_1;\n            int64_t* r8_2 = rdx[1];\n            int64_t rcx_1 = (r9 + 1);\n            if (r8_2 != 0)\n            {\n                do\n                {\n                    if (arg3 == rcx_1)\n                    {\n                        return arg3;\n                    }\n                    rcx_1 = (rcx_1 + 1);\n                    *((arg2 + (rcx_1 << 3)) - 8) = *r8_2;\n                    r8_2 = r8_2[1];\n                } while (r8_2 != 0);\n            }\n            r9 = rcx_1;\n        }\n        rdx = &rdx[2];\n    } while (arg1[1] > rdx);\n    return r9;\n}\n\n"
        },
        {
            "funcName": "sub_40ba70",
            "funcStartAddr": "0x40ba70",
            "funcEndAddr": "0x40bae8",
            "decompiledFuncCode": "int64_t sub_40ba70(int64_t* arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* r14 = *arg1;\n    int64_t rbp;\n    if (arg1[1] <= r14)\n    {\n        rbp = 0;\n    }\n    else\n    {\n        rbp = 0;\n        do\n        {\n            int64_t rdi = *r14;\n            if (rdi != 0)\n            {\n                int64_t* rbx_1 = r14;\n                while (true)\n                {\n                    if (arg2(rdi, arg3) == 0)\n                    {\n                        return rbp;\n                    }\n                    rbx_1 = rbx_1[1];\n                    rbp = (rbp + 1);\n                    if (rbx_1 == 0)\n                    {\n                        break;\n                    }\n                    rdi = *rbx_1;\n                }\n            }\n            r14 = &r14[2];\n        } while (arg1[1] > r14);\n    }\n    return rbp;\n}\n\n"
        },
        {
            "funcName": "sub_40baf0",
            "funcStartAddr": "0x40baf0",
            "funcEndAddr": "0x40bb21",
            "decompiledFuncCode": "uint64_t sub_40baf0(char* arg1, int64_t arg2)\n{\n    uint64_t rcx = *arg1;\n    uint64_t rdx = 0;\n    if (rcx != 0)\n    {\n        do\n        {\n            arg1 = &arg1[1];\n            int64_t rax_4 = (((rdx << 5) - rdx) + rcx);\n            rcx = *arg1;\n            rdx = (COMBINE(0, rax_4) % arg2);\n        } while (rcx != 0);\n    }\n    return rdx;\n}\n\n"
        },
        {
            "funcName": "sub_40bb30",
            "funcStartAddr": "0x40bb30",
            "funcEndAddr": "0x40bb50",
            "decompiledFuncCode": "void sub_40bb30(int64_t* arg1)\n{\n    arg1[2] = 0;\n    *arg1 = 0x3f80000000000000;\n    arg1[1] = 0x3fb4fdf43f4ccccd;\n}\n\n"
        },
        {
            "funcName": "sub_40bb50",
            "funcStartAddr": "0x40bb50",
            "funcEndAddr": "0x40bcda",
            "decompiledFuncCode": "int64_t* sub_40bb50(int64_t arg1, void* arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5)\n{\n    int64_t r13 = arg4;\n    int64_t r12 = arg3;\n    int64_t rbp = arg1;\n    if (arg3 == 0)\n    {\n        r12 = 0x40b360;\n    }\n    if (arg4 == 0)\n    {\n        r13 = 0x40b370;\n    }\n    int64_t* rax = malloc(0x50);\n    int64_t* rbx = rax;\n    if (rax != 0)\n    {\n        int64_t* rdi = &rax[5];\n        float zmm1_1;\n        if (arg2 == 0)\n        {\n            rax[5] = 0x419120;\n            zmm1_1 = 0.800000012f;\n            if (sub_40b4d0(rdi) != 0)\n            {\n                float zmm0_1;\n                if (rbp < 0)\n                {\n                label_40bcc3:\n                    zmm0_1 = ((rbp >> 1) | (rbp & 1));\n                    zmm0_1 = (zmm0_1 + zmm0_1);\n                label_40bc77:\n                    zmm0_1 = (zmm0_1 / zmm1_1);\n                    if ((!(zmm0_1 < 1.84467441e+19f | (FCMP_UO(zmm0_1, 1.84467441e+19f)))))\n                    {\n                        goto label_40bc30;\n                    }\n                    if ((zmm0_1 < 9.22337204e+18f | (FCMP_UO(zmm0_1, 9.22337204e+18f))))\n                    {\n                        rbp = (truncf(zmm0_1, arg4));\n                    }\n                    else\n                    {\n                        zmm0_1 = (zmm0_1 - 9.22337204e+18f);\n                        rbp = ((truncf(zmm0_1, arg4)) ^ 0x8000000000000000);\n                    }\n                    goto label_40bbc3;\n                }\n            label_40bc72:\n                zmm0_1 = rbp;\n                goto label_40bc77;\n            }\n        label_40bc30:\n            int64_t* rdi_3 = rbx;\n            rbx = nullptr;\n            free(rdi_3);\n        }\n        else\n        {\n            rax[5] = arg2;\n            if (sub_40b4d0(rdi) == 0)\n            {\n                goto label_40bc30;\n            }\n            if (*(arg2 + 0x10) == 0)\n            {\n                zmm1_1 = *(arg2 + 8);\n                if (rbp < 0)\n                {\n                    goto label_40bcc3;\n                }\n                goto label_40bc72;\n            }\n        label_40bbc3:\n            size_t rax_2 = sub_40b2c0(rbp);\n            uint64_t rax_3;\n            rax_3 = (rax_2 >> 0x3d) != 0;\n            uint64_t rax_4 = rax_3;\n            if ((TEST_BITQ(rax_2, 0x3c)))\n            {\n                goto label_40bc30;\n            }\n            if (rax_4 != 0)\n            {\n                goto label_40bc30;\n            }\n            rbx[2] = rax_2;\n            if (rax_2 == 0)\n            {\n                goto label_40bc30;\n            }\n            int64_t rax_5 = calloc(rax_2, 0x10);\n            *rbx = rax_5;\n            if (rax_5 == 0)\n            {\n                goto label_40bc30;\n            }\n            rbx[3] = 0;\n            rbx[4] = 0;\n            rbx[1] = ((rax_2 << 4) + rax_5);\n            rbx[6] = r12;\n            rbx[7] = r13;\n            rbx[8] = arg5;\n            rbx[9] = 0;\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40bce0",
            "funcStartAddr": "0x40bce0",
            "funcEndAddr": "0x40bd88",
            "decompiledFuncCode": "void sub_40bce0(int64_t* arg1)\n{\n    int64_t* r12 = *arg1;\n    if (r12 < arg1[1])\n    {\n        while (true)\n        {\n            if (*r12 == 0)\n            {\n                r12 = &r12[2];\n                if (arg1[1] <= r12)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                int64_t* rbx_1 = r12[1];\n                int64_t rax = arg1[8];\n                if (rbx_1 != 0)\n                {\n                    int64_t* rdx_1;\n                    do\n                    {\n                        if (rax != 0)\n                        {\n                            rax(*rbx_1);\n                            rax = arg1[8];\n                        }\n                        rdx_1 = rbx_1[1];\n                        int64_t rcx_1 = arg1[9];\n                        *rbx_1 = 0;\n                        rbx_1[1] = rcx_1;\n                        arg1[9] = rbx_1;\n                        rbx_1 = rdx_1;\n                    } while (rdx_1 != 0);\n                }\n                if (rax != 0)\n                {\n                    rax(*r12);\n                }\n                *r12 = 0;\n                r12 = &r12[2];\n                r12[-1] = 0;\n                if (arg1[1] <= r12)\n                {\n                    break;\n                }\n            }\n        }\n    }\n    arg1[3] = 0;\n    arg1[4] = 0;\n}\n\n"
        },
        {
            "funcName": "sub_40bd90",
            "funcStartAddr": "0x40bd90",
            "funcEndAddr": "0x40be66",
            "decompiledFuncCode": "int64_t sub_40bd90(int64_t* arg1)\n{\n    int64_t* rbp = *arg1;\n    int64_t rax = arg1[1];\n    if (((arg1[8] != 0 && arg1[4] != 0) && rbp < rax))\n    {\n        while (true)\n        {\n            int64_t rdi = *rbp;\n            if (rdi == 0)\n            {\n                rbp = &rbp[2];\n                if (rax <= rbp)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                int64_t* rbx_1 = rbp;\n                while (true)\n                {\n                    arg1[8](rdi);\n                    rbx_1 = rbx_1[1];\n                    if (rbx_1 == 0)\n                    {\n                        break;\n                    }\n                    rdi = *rbx_1;\n                }\n                rax = arg1[1];\n                rbp = &rbp[2];\n                if (rax <= rbp)\n                {\n                    break;\n                }\n            }\n        }\n        rbp = *arg1;\n    }\n    if ((((arg1[8] == 0 || (arg1[8] != 0 && arg1[4] == 0)) || ((arg1[8] != 0 && arg1[4] != 0) && rbp < rax)) && rbp < rax))\n    {\n        do\n        {\n            void* rdi_1 = rbp[1];\n            if (rdi_1 != 0)\n            {\n                void* rbx_2;\n                do\n                {\n                    rbx_2 = *(rdi_1 + 8);\n                    free(rdi_1);\n                    rdi_1 = rbx_2;\n                } while (rbx_2 != 0);\n            }\n            rbp = &rbp[2];\n        } while (arg1[1] > rbp);\n    }\n    void* rdi_2 = arg1[9];\n    if (rdi_2 != 0)\n    {\n        void* rbx_3;\n        do\n        {\n            rbx_3 = *(rdi_2 + 8);\n            free(rdi_2);\n            rdi_2 = rbx_3;\n        } while (rbx_3 != 0);\n    }\n    free(*arg1);\n    /* tailcall */\n    return free(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_40be70",
            "funcStartAddr": "0x40301a",
            "funcEndAddr": "0x40c06a",
            "decompiledFuncCode": "uint64_t sub_40be70(int64_t* arg1, int64_t arg2)\n{\n    void* r12 = arg1[5];\n    int32_t rbx_4;\n    if (*(r12 + 0x10) == 0)\n    {\n        float zmm0;\n        if (arg2 < 0)\n        {\n            zmm0 = ((arg2 >> 1) | (arg2 & 1));\n            zmm0 = (zmm0 + zmm0);\n        }\n        else\n        {\n            zmm0 = arg2;\n        }\n        zmm0 = (zmm0 / *(r12 + 8));\n        if ((!(zmm0 < 1.84467441e+19f | (FCMP_UO(zmm0, 1.84467441e+19f)))))\n        {\n        label_40bfe0:\n            rbx_4 = 0;\n        label_40bfec:\n            return rbx_4;\n        }\n        if ((zmm0 < 9.22337204e+18f | (FCMP_UO(zmm0, 9.22337204e+18f))))\n        {\n            arg2 = (truncf(zmm0, 0x28));\n        }\n        else\n        {\n            zmm0 = (zmm0 - 9.22337204e+18f);\n            arg2 = ((truncf(zmm0, 0x28)) ^ 0x8000000000000000);\n        }\n    }\n    size_t rax_1 = sub_40b2c0(arg2);\n    uint64_t rax_2;\n    rax_2 = (rax_1 >> 0x3d) != 0;\n    uint64_t rax_3 = rax_2;\n    if ((rax_1 << 3) < 0)\n    {\n        rax_3 = 1;\n    }\n    if (rax_1 == 0)\n    {\n        goto label_40bfe0;\n    }\n    if (rax_3 != 0)\n    {\n        goto label_40bfe0;\n    }\n    if (arg1[2] == rax_1)\n    {\n        return 1;\n    }\n    int64_t rax_4 = calloc(rax_1, 0x10);\n    int64_t var_68 = rax_4;\n    if (rax_4 == 0)\n    {\n        goto label_40bfe0;\n    }\n    int64_t rbx_3 = ((rax_1 << 4) + rax_4);\n    int64_t var_38_1 = arg1[6];\n    int64_t var_48_1 = 0;\n    int64_t var_30_1 = arg1[7];\n    void* var_40_1 = r12;\n    int64_t var_28_1 = arg1[8];\n    int64_t rax_8 = arg1[9];\n    int32_t rax_9 = sub_40b550(&var_68, arg1, 0);\n    rbx_4 = rax_9;\n    if (rax_9 == 0)\n    {\n        arg1[9] = rax_8;\n        if ((sub_40b550(arg1, &var_68, 1) != 0 && sub_40b550(arg1, &var_68, 0) != 0))\n        {\n            free(var_68);\n            return rbx_4;\n        }\n        abort();\n        /* no return */\n    }\n    free(*arg1);\n    *arg1 = var_68;\n    arg1[1] = rbx_3;\n    arg1[2] = rax_1;\n    arg1[3] = 0;\n    arg1[9] = rax_8;\n    goto label_40bfec;\n}\n\n"
        },
        {
            "funcName": "sub_40c070",
            "funcStartAddr": "0x40301f",
            "funcEndAddr": "0x40c2e4",
            "decompiledFuncCode": "int64_t sub_40c070(int64_t* arg1, int64_t arg2, int64_t* arg3)\n{\n    if (arg2 != 0)\n    {\n        int64_t* var_20;\n        int64_t rax_1 = sub_40b3b0(arg1, arg2, &var_20, 0);\n        if (rax_1 != 0)\n        {\n            if (arg3 != 0)\n            {\n                *arg3 = rax_1;\n            }\n            return 0;\n        }\n        int64_t rax_3 = arg1[3];\n        int64_t rax_4;\n        void* rdx_2;\n        float zmm1;\n        if (rax_3 < 0)\n        {\n            rax_4 = arg1[2];\n            zmm1 = ((rax_3 >> 1) | (rax_3 & 1));\n            rdx_2 = arg1[5];\n            zmm1 = (zmm1 + zmm1);\n        }\n        else\n        {\n            rdx_2 = arg1[5];\n            zmm1 = rax_3;\n            rax_4 = arg1[2];\n        }\n        float zmm0_1;\n        if (((rax_3 < 0 && rax_4 >= 0) || (rax_3 >= 0 && rax_4 >= 0)))\n        {\n            zmm0_1 = (rax_4 * *(rdx_2 + 8));\n            if ((!((!(zmm1 == zmm0_1 | (FCMP_UO(zmm1, zmm0_1)))) && (!(zmm1 < zmm0_1 | (FCMP_UO(zmm1, zmm0_1)))))))\n            {\n            label_40c0f2:\n                int64_t* r12_2 = var_20;\n                if (*r12_2 == 0)\n                {\n                    *r12_2 = arg2;\n                    arg1[4] = (arg1[4] + 1);\n                    arg1[3] = (arg1[3] + 1);\n                    return 1;\n                }\n                int64_t* rax_5 = arg1[9];\n                if (rax_5 == 0)\n                {\n                    rax_5 = malloc(0x10);\n                }\n                else\n                {\n                    arg1[9] = rax_5[1];\n                }\n                int64_t rdx_4 = r12_2[1];\n                *rax_5 = arg2;\n                rax_5[1] = rdx_4;\n                r12_2[1] = rax_5;\n                arg1[4] = (arg1[4] + 1);\n                return 1;\n                goto label_40c204;\n            }\n        label_40c195:\n            sub_40b4d0(&arg1[5]);\n            void* rdx_8 = arg1[5];\n            int64_t rax_9 = arg1[2];\n            float zmm2_1 = *(rdx_8 + 8);\n            float zmm0_2;\n            if (rax_9 < 0)\n            {\n                zmm0_2 = ((rax_9 >> 1) | (rax_9 & 1));\n                zmm0_2 = (zmm0_2 + zmm0_2);\n            }\n            else\n            {\n                zmm0_2 = rax_9;\n            }\n            int64_t rax_10 = arg1[3];\n            float zmm1_1;\n            if (rax_10 < 0)\n            {\n                zmm1_1 = ((rax_10 >> 1) | (rax_10 & 1));\n                zmm1_1 = (zmm1_1 + zmm1_1);\n            }\n            else\n            {\n                zmm1_1 = rax_10;\n            }\n            float zmm3_1 = (zmm2_1 * zmm0_2);\n            if (((zmm1_1 == zmm3_1 | (FCMP_UO(zmm1_1, zmm3_1))) || (zmm1_1 < zmm3_1 | (FCMP_UO(zmm1_1, zmm3_1)))))\n            {\n                goto label_40c0f2;\n            }\n            zmm0_2 = (zmm0_2 * *(rdx_8 + 0xc));\n            if (*(rdx_8 + 0x10) == 0)\n            {\n                zmm0_2 = (zmm0_2 * zmm2_1);\n            }\n            if ((!(zmm0_2 < 1.84467441e+19f | (FCMP_UO(zmm0_2, 1.84467441e+19f)))))\n            {\n            label_40c204:\n                return 0xffffffff;\n            }\n            int64_t rsi;\n            if ((!(zmm0_2 < 9.22337204e+18f | (FCMP_UO(zmm0_2, 9.22337204e+18f)))))\n            {\n                zmm0_2 = (zmm0_2 - 9.22337204e+18f);\n                rsi = ((truncf(zmm0_2, arg1)) ^ 0x8000000000000000);\n            }\n            else\n            {\n                rsi = (truncf(zmm0_2, arg1));\n            }\n            if (sub_40be70(arg1, rsi) == 0)\n            {\n                goto label_40c204;\n            }\n            if (sub_40b3b0(arg1, arg2, &var_20, 0) == 0)\n            {\n                goto label_40c0f2;\n            }\n        }\n        if (((rax_3 < 0 && rax_4 < 0) || (rax_3 >= 0 && rax_4 < 0)))\n        {\n            zmm0_1 = ((rax_4 >> 1) | (rax_4 & 1));\n            zmm0_1 = (zmm0_1 + zmm0_1);\n            zmm0_1 = (zmm0_1 * *(rdx_2 + 8));\n            if ((!((zmm1 == zmm0_1 | (FCMP_UO(zmm1, zmm0_1))) || (zmm1 < zmm0_1 | (FCMP_UO(zmm1, zmm0_1))))))\n            {\n                goto label_40c195;\n            }\n            goto label_40c0f2;\n        }\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40c2f0",
            "funcStartAddr": "0x40c2f0",
            "funcEndAddr": "0x40c32b",
            "decompiledFuncCode": "int64_t sub_40c2f0(int64_t* arg1, int64_t arg2)\n{\n    int64_t rbx = arg2;\n    int64_t var_10;\n    int32_t rax = sub_40c070(arg1, arg2, &var_10);\n    if (rax == 0xffffffff)\n    {\n        return 0;\n    }\n    if (rax == 0)\n    {\n        rbx = var_10;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40c330",
            "funcStartAddr": "0x40c330",
            "funcEndAddr": "0x40c507",
            "decompiledFuncCode": "int64_t sub_40c330(int64_t* arg1)\n{\n    int64_t* var_20;\n    int64_t rsi;\n    int64_t rax = sub_40b3b0(arg1, rsi, &var_20, 1);\n    if (rax != 0)\n    {\n        int64_t* rax_1 = var_20;\n        arg1[4] = (arg1[4] - 1);\n        if (*rax_1 == 0)\n        {\n            int64_t rax_3 = arg1[3];\n            int64_t rax_4 = (rax_3 - 1);\n            arg1[3] = rax_4;\n            int64_t rax_5;\n            float* rdx_1;\n            float zmm0_1;\n            if ((rax_3 - 1) < 0)\n            {\n                rax_5 = arg1[2];\n                zmm0_1 = ((rax_4 >> 1) | (rax_4 & 1));\n                rdx_1 = arg1[5];\n                zmm0_1 = (zmm0_1 + zmm0_1);\n            }\n            else\n            {\n                rdx_1 = arg1[5];\n                zmm0_1 = rax_4;\n                rax_5 = arg1[2];\n            }\n            float zmm1;\n            if ((((rax_3 - 1) < 0 && rax_5 >= 0) || ((rax_3 - 1) >= 0 && rax_5 >= 0)))\n            {\n                zmm1 = rax_5;\n            }\n            if ((((rax_3 - 1) < 0 && rax_5 < 0) || ((rax_3 - 1) >= 0 && rax_5 < 0)))\n            {\n                zmm1 = ((rax_5 >> 1) | (rax_5 & 1));\n                zmm1 = (zmm1 + zmm1);\n            }\n            zmm1 = (zmm1 * *rdx_1);\n            if ((!((zmm1 == zmm0_1 | (FCMP_UO(zmm1, zmm0_1))) || (zmm1 < zmm0_1 | (FCMP_UO(zmm1, zmm0_1))))))\n            {\n                sub_40b4d0(&arg1[5]);\n                int64_t rax_6 = arg1[2];\n                int32_t* rdx_2 = arg1[5];\n                float zmm0_2;\n                if (rax_6 < 0)\n                {\n                    zmm0_2 = ((rax_6 >> 1) | (rax_6 & 1));\n                    zmm0_2 = (zmm0_2 + zmm0_2);\n                }\n                else\n                {\n                    zmm0_2 = rax_6;\n                }\n                int64_t rax_7 = arg1[3];\n                float zmm1_1;\n                if (rax_7 < 0)\n                {\n                    zmm1_1 = ((rax_7 >> 1) | (rax_7 & 1));\n                    zmm1_1 = (zmm1_1 + zmm1_1);\n                }\n                else\n                {\n                    zmm1_1 = rax_7;\n                }\n                float zmm2_1 = (*rdx_2 * zmm0_2);\n                if ((!((zmm2_1 == zmm1_1 | (FCMP_UO(zmm2_1, zmm1_1))) || (zmm2_1 < zmm1_1 | (FCMP_UO(zmm2_1, zmm1_1))))))\n                {\n                    zmm0_2 = (zmm0_2 * rdx_2[1]);\n                    if (rdx_2[4] == 0)\n                    {\n                        zmm0_2 = (zmm0_2 * rdx_2[2]);\n                    }\n                    int64_t rsi_1;\n                    if ((!(zmm0_2 < 9.22337204e+18f | (FCMP_UO(zmm0_2, 9.22337204e+18f)))))\n                    {\n                        zmm0_2 = (zmm0_2 - 9.22337204e+18f);\n                        rsi_1 = ((truncf(zmm0_2, arg1)) ^ 0x8000000000000000);\n                    }\n                    else\n                    {\n                        rsi_1 = (truncf(zmm0_2, arg1));\n                    }\n                    if (sub_40be70(arg1, rsi_1) == 0)\n                    {\n                        void* rdi_2 = arg1[9];\n                        if (rdi_2 != 0)\n                        {\n                            void* r12_1;\n                            do\n                            {\n                                r12_1 = *(rdi_2 + 8);\n                                free(rdi_2);\n                                rdi_2 = r12_1;\n                            } while (r12_1 != 0);\n                        }\n                        arg1[9] = 0;\n                    }\n                }\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40c510",
            "funcStartAddr": "0x40c510",
            "funcEndAddr": "0x40c537",
            "decompiledFuncCode": "uint64_t sub_40c510(int64_t* arg1, int64_t arg2)\n{\n    return (COMBINE(0, (sub_413020(*arg1, arg2) ^ arg1[1])) % arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40c540",
            "funcStartAddr": "0x40c540",
            "funcEndAddr": "0x40c54d",
            "decompiledFuncCode": "uint64_t sub_40c540(void* arg1, int64_t arg2)\n{\n    return (COMBINE(0, *(arg1 + 8)) % arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40c550",
            "funcStartAddr": "0x40c550",
            "funcEndAddr": "0x40c575",
            "decompiledFuncCode": "int64_t sub_40c550(int64_t* arg1, int64_t* arg2)\n{\n    if ((arg1[1] == arg2[1] && arg1[2] == arg2[2]))\n    {\n        /* tailcall */\n        return sub_40ef80(*arg1, *arg2);\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40c580",
            "funcStartAddr": "0x40c580",
            "funcEndAddr": "0x40c5b3",
            "decompiledFuncCode": "int64_t sub_40c580(int64_t* arg1, int64_t* arg2)\n{\n    if ((arg1[1] == arg2[1] && arg1[2] == arg2[2]))\n    {\n        int64_t rax;\n        rax = strcmp(*arg1, *arg2) == 0;\n        return rax;\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40c5c0",
            "funcStartAddr": "0x40c5c0",
            "funcEndAddr": "0x40c5d5",
            "decompiledFuncCode": "int64_t sub_40c5c0(int64_t* arg1)\n{\n    free(*arg1);\n    /* tailcall */\n    return free(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_40c5e0",
            "funcStartAddr": "0x40c5e0",
            "funcEndAddr": "0x40c768",
            "decompiledFuncCode": "void* sub_40c5e0(void* arg1, int32_t* arg2, int64_t arg3, int64_t arg4)\n{\n    uint64_t r15;\n    uint64_t var_8 = r15;\n    void* r13 = arg1;\n    void* r12 = arg1;\n    char* rbp = nullptr;\n    char var_44 = 0;\n    void* rax_7;\n    bool rax_1;\n    char rdx;\n    do\n    {\n        r12 = (r12 + 1);\n        rdx = *(r12 - 1);\n        if (rdx == 0)\n        {\n            break;\n        }\n        do\n        {\n            rax_1 = *r12;\n            if (rax_1 == 0x2f)\n            {\n                if (rdx == 0x2f)\n                {\n                    break;\n                }\n                rbp = r12;\n                break;\n            }\n            rax_1 = rax_1 != 0;\n            r15 = rdx == 0x2f;\n            r15 = (r15 & rax_1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            if (rbp == 0)\n            {\n                break;\n            }\n            void* rax_3 = (rbp - r13);\n            int32_t rdx_2;\n            if (rax_3 != 1)\n            {\n                *rbp = 0;\n                if (rax_3 != 2)\n                {\n                    goto label_40c66e;\n                }\n                if (*r13 != 0x2e)\n                {\n                    goto label_40c66e;\n                }\n                if (*(r13 + 1) != 0x2e)\n                {\n                    goto label_40c66e;\n                }\n                r15 = 0;\n                var_44 = 0;\n                rdx_2 = 0;\n            label_40c690:\n                int32_t rax_5 = sub_40f520(arg2, r13, rdx_2, nullptr);\n                if (rax_5 != 0xffffffff)\n                {\n                    *rbp = 0x2f;\n                }\n                if ((rax_5 == 0xffffffff || (rax_5 != 0xffffffff && rax_5 != 0)))\n                {\n                    if (r15 != 0)\n                    {\n                        int32_t* rax_9 = __errno_location();\n                        if (*rax_9 == 2)\n                        {\n                            *rax_9 = r15;\n                        }\n                    }\n                    rax_7 = rax_5;\n                    goto label_40c6dc;\n                }\n            }\n            else if (*r13 != 0x2e)\n            {\n                *rbp = 0;\n            label_40c66e:\n                if (arg3(arg1, r13, arg4) < 0)\n                {\n                    r15 = *__errno_location();\n                    rdx_2 = (var_44 & 1);\n                }\n                else\n                {\n                    var_44 = r15;\n                    rdx_2 = 1;\n                    r15 = 0;\n                }\n                goto label_40c690;\n            }\n            r13 = r12;\n            r12 = (r12 + 1);\n            rdx = *(r12 - 1);\n        } while (rdx != 0);\n    } while ((rax_1 == 0x2f && rdx != 0x2f));\n    rax_7 = (r13 - arg1);\nlabel_40c6dc:\n    return rax_7;\n}\n\n"
        },
        {
            "funcName": "sub_40c770",
            "funcStartAddr": "0x40c770",
            "funcEndAddr": "0x40ca78",
            "decompiledFuncCode": "int64_t sub_40c770(void* arg1, int32_t* arg2, int64_t arg3, int64_t arg4, \n    int32_t arg5, int64_t arg6, int32_t arg7, int32_t arg8, int32_t arg9, \n    char arg10)\n{\n    int32_t r15_1;\n    if ((*arg1 != 0x2f && *arg2 == 4))\n    {\n        r15_1 = arg2[1];\n        if (r15_1 != 0)\n        {\n            goto label_40c873;\n        }\n        if (arg3 == 0)\n        {\n            goto label_40c8b8;\n        }\n        goto label_40c7c5;\n    }\n    int64_t rax_13;\n    char* rbp_2;\n    if (arg3 == 0)\n    {\n    label_40c8b8:\n        rbp_2 = arg1;\n    label_40c7f0:\n        int32_t rcx_2 = (arg8 & arg9);\n        int32_t rax_4 = ((arg7 & 0xc00) | (arg5 & 0x200));\n        int32_t var_dc_1;\n        int32_t var_c8;\n        int32_t rdx_5;\n        if (rcx_2 != 0xffffffff)\n        {\n            var_dc_1 = (arg5 & 0xffffffc0);\n        label_40c81c:\n            int32_t rax_7 = mkdir(rbp_2, var_dc_1);\n            r15_1 = rax_7;\n            if (rax_7 != 0)\n            {\n                goto label_40c836;\n            }\n            arg6(arg1, arg4);\n            rdx_5 = 3;\n        label_40c968:\n            int32_t rax_21 = sub_40f520(arg2, rbp_2, rdx_5, &var_c8);\n            if (rax_21 < 0xffffffff)\n            {\n                goto label_40c915;\n            }\n            if (rax_21 == 0)\n            {\n                rbp_2 = &data_418d7b;\n            }\n            if (sub_4135d0(var_c8, rbp_2, var_dc_1, arg8, arg9, arg5, arg7) == 0)\n            {\n                goto label_40c915;\n            }\n            if (r15_1 != 0)\n            {\n                if (r15_1 == 2)\n                {\n                    goto label_40c873;\n                }\n                if (arg3 == 0)\n                {\n                    goto label_40c873;\n                }\n                if (*__errno_location() == 0x14)\n                {\n                    goto label_40c873;\n                }\n                goto label_40c9db;\n            }\n        label_40c9db:\n            int32_t* rax_25 = __errno_location();\n            int64_t rax_26 = sub_40ec50(arg1);\n            char const* const rsi_8 = \"cannot change permissions of %s\";\n            if (rcx_2 != 0xffffffff)\n            {\n                rsi_8 = \"cannot change owner and permissi\u2026\";\n            }\n            error(0, *rax_25, dcgettext(nullptr, rsi_8, 5), rax_26);\n            rax_13 = 0;\n        }\n        else\n        {\n            if (rax_4 != 0)\n            {\n                var_dc_1 = (arg5 & 0xffffffed);\n                goto label_40c81c;\n            }\n            int32_t rax_14 = mkdir(rbp_2, arg5);\n            r15_1 = rax_14;\n            if (rax_14 != 0)\n            {\n            label_40c836:\n                r15_1 = *__errno_location();\n                if (arg10 == 0)\n                {\n                    var_dc_1 = 0xffffffff;\n                    rdx_5 = 2;\n                    goto label_40c968;\n                }\n                if (r15_1 == 0)\n                {\n                    goto label_40c915;\n                }\n                if (r15_1 == 2)\n                {\n                    goto label_40c873;\n                }\n                if (arg3 == 0)\n                {\n                    goto label_40c873;\n                }\n                if (__xstat(1, rbp_2, &var_c8) != 0)\n                {\n                    goto label_40c873;\n                }\n                int32_t var_b0;\n                if ((var_b0 & 0xf000) != 0x4000)\n                {\n                    goto label_40c873;\n                }\n                goto label_40c915;\n            }\n            arg6(arg1, arg4);\n            if (((arg7 & arg5) & 0x1ff) != 0)\n            {\n                var_dc_1 = arg5;\n                rdx_5 = 3;\n                goto label_40c968;\n            }\n        label_40c915:\n            rax_13 = 1;\n        }\n    }\n    else\n    {\n    label_40c7c5:\n        void* rax_1 = sub_40c5e0(arg1, arg2, arg3, arg4);\n        if (rax_1 >= 0)\n        {\n            rbp_2 = (rax_1 + arg1);\n            goto label_40c7f0;\n        }\n        rax_13 = 1;\n        if (rax_1 == -1)\n        {\n            r15_1 = *__errno_location();\n        label_40c873:\n            error(0, r15_1, dcgettext(nullptr, \"cannot create directory %s\", 5), sub_40ec50(arg1));\n            rax_13 = 0;\n        }\n    }\n    return rax_13;\n}\n\n"
        },
        {
            "funcName": "sub_40ca80",
            "funcStartAddr": "0x40ca80",
            "funcEndAddr": "0x40cde1",
            "decompiledFuncCode": "int16_t* sub_40ca80(char* arg1)\n{\n    char* rcx = arg1;\n    char* rbx = arg1;\n    int32_t rdx = *arg1;\n    int64_t rax_8;\n    if ((rdx - 0x30) <= 7)\n    {\n        uint64_t rbp_1 = 0;\n        do\n        {\n            rbp_1 = ((rdx + (rbp_1 << 3)) - 0x30);\n            rcx = &rcx[1];\n            if (rbp_1 > 0xfff)\n            {\n                return 0;\n            }\n            rdx = *rcx;\n        } while ((rdx - 0x30) <= 7);\n        rax_8 = 0;\n        if (rdx == 0)\n        {\n            int32_t rbx_4 = ((rbp_1 & 0xc00) | 0x3ff);\n            if ((rcx - rbx) >= 5)\n            {\n                rbx_4 = 0xfff;\n            }\n            int16_t* rax_11 = sub_4112e0(0x20);\n            *rax_11 = 0x13d;\n            *(rax_11 + 4) = 0xfff;\n            *(rax_11 + 8) = rbp_1;\n            *(rax_11 + 0xc) = rbx_4;\n            *(rax_11 + 0x11) = 0;\n            return rax_11;\n        }\n    }\n    else\n    {\n        int64_t rdi = 1;\n        int64_t rdi_1;\n        if (rdx == 0)\n        {\n            rdi_1 = 0x10;\n        }\n        else\n        {\n            do\n            {\n                bool rax_2 = (rdx & 0xef) == 0x2d;\n                rdx = rdx == 0x2b;\n                rcx = &rcx[1];\n                char rax_3 = (rax_2 | rdx);\n                rdx = *rcx;\n                rdi = (rdi + rax_3);\n            } while (rdx != 0);\n            uint64_t rax_6;\n            rax_6 = (rdi >> 0x3c) != 0;\n            rdi_1 = (rdi << 4);\n            if ((rdi_1 < 0 || (rdi_1 >= 0 && rax_6 != 0)))\n            {\n                sub_411530();\n                /* no return */\n            }\n        }\n        rax_8 = sub_4112e0(rdi_1);\n        int64_t r10_1 = 0;\n        char r9_1;\n        do\n        {\n            int32_t rdi_2 = 0;\n            bool cond:1_1;\n            while (true)\n            {\n                r9_1 = *rbx;\n                cond:1_1 = r9_1 <= 0x61;\n                if (r9_1 == 0x61)\n                {\n                    rdi_2 = 0xfff;\n                }\n                else\n                {\n                    if (cond:1_1)\n                    {\n                        break;\n                    }\n                    if (r9_1 == 0x6f)\n                    {\n                        rdi_2 = (rdi_2 | 0x207);\n                    }\n                    else if (r9_1 == 0x75)\n                    {\n                        rdi_2 = (rdi_2 | 0x9c0);\n                    }\n                    else\n                    {\n                        if (r9_1 != 0x67)\n                        {\n                            break;\n                        }\n                        rdi_2 = (rdi_2 | 0x438);\n                    }\n                }\n                rbx = &rbx[1];\n            }\n            if ((!cond:1_1))\n            {\n                break;\n            }\n            if ((r9_1 != 0x2d && (r9_1 != 0x3d && r9_1 != 0x2b)))\n            {\n                break;\n            }\n            int64_t r11_1 = (r10_1 + 1);\n            char* r10_3 = ((r10_1 << 4) + rax_8);\n            while (true)\n            {\n                uint32_t rdx_5 = rbx[1];\n                void* r8_1 = &rbx[1];\n                bool cond:2_1 = rdx_5 <= 0x67;\n                int32_t rcx_1;\n                void* rsi_1;\n                if (rdx_5 == 0x67)\n                {\n                    rsi_1 = &rbx[2];\n                    rcx_1 = 0x38;\n                }\n                else\n                {\n                    if ((!cond:2_1))\n                    {\n                        rsi_1 = &rbx[2];\n                        if (rdx_5 != 0x6f)\n                        {\n                            rcx_1 = 0x1c0;\n                        }\n                        else\n                        {\n                            rcx_1 = 7;\n                        }\n                    }\n                    else if ((rdx_5 - 0x30) <= 7)\n                    {\n                        uint64_t rcx_4 = 0;\n                        do\n                        {\n                            rcx_4 = ((rdx_5 + (rcx_4 << 3)) - 0x30);\n                            r8_1 = (r8_1 + 1);\n                            if (rcx_4 > 0xfff)\n                            {\n                                break;\n                            }\n                            rdx_5 = *r8_1;\n                        } while ((rdx_5 - 0x30) <= 7);\n                        if (rcx_4 > 0xfff)\n                        {\n                            goto label_40cb2e;\n                        }\n                        if (rdi_2 != 0)\n                        {\n                            goto label_40cb2e;\n                        }\n                        if ((rdx_5 != 0 && rdx_5 != 0x2c))\n                        {\n                            goto label_40cb2e;\n                        }\n                        *r10_3 = r9_1;\n                        rbx = r8_1;\n                        r9_1 = rdx_5;\n                        rdi_2 = 0xfff;\n                        *(r10_3 + 8) = rcx_4;\n                        rcx_1 = 0xfff;\n                        r10_3[1] = 1;\n                        *(r10_3 + 4) = 0xfff;\n                    label_40cbc2:\n                        *(r10_3 + 0xc) = rcx_1;\n                        int64_t rcx_2 = (r11_1 + 1);\n                        r10_3 = &r10_3[0x10];\n                        if (((r9_1 & 0xef) != 0x2d && r9_1 != 0x2b))\n                        {\n                            if (r9_1 == 0x2c)\n                            {\n                                rbx = &rbx[1];\n                                r10_1 = r11_1;\n                                break;\n                            }\n                            if (r9_1 != 0)\n                            {\n                                break;\n                            }\n                            *((rax_8 + (r11_1 << 4)) + 1) = 0;\n                            return rax_8;\n                        }\n                        r11_1 = rcx_2;\n                        continue;\n                    }\n                    if (((((!cond:2_1) && rdx_5 != 0x6f) && rdx_5 != 0x75) || cond:2_1))\n                    {\n                        char rsi_4 = (rdx_5 - 0x58);\n                        char rbx_1 = 1;\n                        rcx_1 = 0;\n                        if (rsi_4 <= 0x20)\n                        {\n                            do\n                            {\n                                switch (rsi_4)\n                                {\n                                    case 0:\n                                    {\n                                        rbx_1 = 2;\n                                        break;\n                                    }\n                                    case 1:\n                                    case 2:\n                                    case 3:\n                                    case 4:\n                                    case 5:\n                                    case 6:\n                                    case 7:\n                                    case 8:\n                                    case 9:\n                                    case 0xa:\n                                    case 0xb:\n                                    case 0xc:\n                                    case 0xd:\n                                    case 0xe:\n                                    case 0xf:\n                                    case 0x10:\n                                    case 0x11:\n                                    case 0x12:\n                                    case 0x13:\n                                    case 0x14:\n                                    case 0x15:\n                                    case 0x16:\n                                    case 0x17:\n                                    case 0x18:\n                                    case 0x19:\n                                    case 0x1d:\n                                    case 0x1e:\n                                    {\n                                        break;\n                                        break;\n                                    }\n                                    case 0x1a:\n                                    {\n                                        rcx_1 = (rcx_1 | 0x124);\n                                        break;\n                                    }\n                                    case 0x1b:\n                                    {\n                                        *rcx_1[1] = (*rcx_1[1] | 0xc);\n                                        break;\n                                    }\n                                    case 0x1c:\n                                    {\n                                        *rcx_1[1] = (*rcx_1[1] | 2);\n                                        break;\n                                    }\n                                    case 0x1f:\n                                    {\n                                        rcx_1 = (rcx_1 | 0x92);\n                                        break;\n                                    }\n                                    case 0x20:\n                                    {\n                                        rcx_1 = (rcx_1 | 0x49);\n                                        break;\n                                    }\n                                }\n                                r8_1 = (r8_1 + 1);\n                                rdx_5 = *r8_1;\n                                rsi_4 = (rdx_5 - 0x58);\n                            } while (rsi_4 <= 0x20);\n                        }\n                        *r10_3 = r9_1;\n                        r9_1 = rdx_5;\n                        r10_3[1] = rbx_1;\n                        rbx = r8_1;\n                        *(r10_3 + 4) = rdi_2;\n                        *(r10_3 + 8) = rcx_1;\n                        goto label_40cbb8;\n                    }\n                }\n                r10_3[1] = 3;\n                *(r10_3 + 4) = rdi_2;\n                *(r10_3 + 8) = rcx_1;\n                *r10_3 = r9_1;\n                r9_1 = rbx[2];\n                rbx = rsi_1;\n            label_40cbb8:\n                int32_t rdx_2 = (rcx_1 & rdi_2);\n                if (rdi_2 != 0)\n                {\n                    rcx_1 = rdx_2;\n                }\n                goto label_40cbc2;\n            }\n        } while (r9_1 == 0x2c);\n    label_40cb2e:\n        free(rax_8);\n        rax_8 = 0;\n    }\n    return rax_8;\n}\n\n"
        },
        {
            "funcName": "sub_40cdf0",
            "funcStartAddr": "0x40cdf0",
            "funcEndAddr": "0x40ce44",
            "decompiledFuncCode": "int16_t* sub_40cdf0(char* arg1)\n{\n    int16_t* rax_1 = nullptr;\n    void var_98;\n    if (__xstat(1, arg1, &var_98) == 0)\n    {\n        rax_1 = sub_4112e0(0x20);\n        *rax_1 = 0x13d;\n        *(rax_1 + 4) = 0xfff;\n        int32_t var_80;\n        *(rax_1 + 8) = var_80;\n        *(rax_1 + 0xc) = 0xfff;\n        *(rax_1 + 0x11) = 0;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40ce50",
            "funcStartAddr": "0x40ce50",
            "funcEndAddr": "0x40cfcd",
            "decompiledFuncCode": "uint64_t sub_40ce50(int32_t arg1, char arg2, int32_t arg3, void* arg4, \n    int32_t* arg5)\n{\n    char r11_6 = *(arg4 + 1);\n    uint64_t rax_1 = (arg1 & 0xfff);\n    int32_t rbx = 0;\n    if (r11_6 != 0)\n    {\n        int32_t rdx = (!arg3);\n        while (true)\n        {\n            int32_t r12_1 = *(arg4 + 4);\n            int32_t r9_2 = *(arg4 + 8);\n            int32_t rdi;\n            int32_t r9_3;\n            int32_t r10_1;\n            char r11_5;\n            if (arg2 == 0)\n            {\n                r10_1 = -1;\n                rdi = 0;\n                if ((r11_6 == 2 && (rax_1 & 0x49) == 0))\n                {\n                label_40ced4:\n                    r11_5 = *arg4;\n                    r9_3 = (r9_2 & r10_1);\n                    if (r12_1 == 0)\n                    {\n                        goto label_40cee0;\n                    }\n                    goto label_40cf50;\n                }\n            }\n            else\n            {\n                int32_t r10_2 = *(arg4 + 0xc);\n                r10_1 = (r10_2 | 0xfffff3ff);\n                rdi = ((!r10_2) & 0xc00);\n            }\n            if (((arg2 != 0 && r11_6 == 2) || (arg2 == 0 && r11_6 == 2)))\n            {\n                r11_5 = *arg4;\n                r9_3 = ((r9_2 | 0x49) & r10_1);\n                int32_t r9_4;\n                if (r12_1 == 0)\n                {\n                label_40cee0:\n                    r9_4 = (r9_3 & rdx);\n                    if (r11_5 == 0x2d)\n                    {\n                    label_40cfa0:\n                        rbx = (rbx | r9_4);\n                        rax_1 = (rax_1 & (!r9_4));\n                    label_40cefd:\n                        arg4 = (arg4 + 0x10);\n                        r11_6 = *(arg4 + 1);\n                        if (r11_6 == 0)\n                        {\n                            break;\n                        }\n                        continue;\n                    }\n                    else if (r11_5 == 0x3d)\n                    {\n                        goto label_40cf6b;\n                    }\n                }\n                else\n                {\n                label_40cf50:\n                    r9_4 = (r9_3 & r12_1);\n                    if (r11_5 == 0x2d)\n                    {\n                        goto label_40cfa0;\n                    }\n                    if (r11_5 == 0x3d)\n                    {\n                        rdi = (rdi | (!r12_1));\n                        r10_1 = (!rdi);\n                    label_40cf6b:\n                        arg4 = (arg4 + 0x10);\n                        r11_6 = *(arg4 + 1);\n                        rbx = (rbx | (r10_1 & 0xfff));\n                        rax_1 = ((rax_1 & rdi) | r9_4);\n                        if (r11_6 == 0)\n                        {\n                            break;\n                        }\n                        continue;\n                    }\n                }\n                if (r11_5 != 0x2b)\n                {\n                    goto label_40cefd;\n                }\n                rbx = (rbx | r9_4);\n                rax_1 = (rax_1 | r9_4);\n                goto label_40cefd;\n            }\n            if (((arg2 == 0 && r11_6 != 2) || (arg2 != 0 && r11_6 != 2)))\n            {\n                if (r11_6 != 3)\n                {\n                    goto label_40ced4;\n                }\n                int32_t r9_1 = (r9_2 & rax_1);\n                int32_t r11_1 = (r9_1 & 0x124);\n                int32_t r11_4 = ((!(r11_1 - r11_1)) & 0x124);\n                int32_t r13_1;\n                r13_1 = (r11_4 | 0x92);\n                if ((r9_1 & 0x92) != 0)\n                {\n                    r11_4 = r13_1;\n                }\n                int32_t r13_3 = (r11_4 | 0x49);\n                if ((r9_1 & 0x49) != 0)\n                {\n                    r11_4 = r13_3;\n                }\n                r9_2 = (r9_1 | r11_4);\n                goto label_40ced4;\n            }\n        }\n    }\n    if (arg5 != 0)\n    {\n        *arg5 = rbx;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40cfd0",
            "funcStartAddr": "0x40cfd0",
            "funcEndAddr": "0x40d069",
            "decompiledFuncCode": "char* sub_40cfd0(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            char const* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char const temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = &rdi[1];\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_4192d8;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_6219c0 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40d070",
            "funcStartAddr": "0x40d070",
            "funcEndAddr": "0x40d0af",
            "decompiledFuncCode": "uint64_t sub_40d070(int64_t arg1, int64_t arg2, int64_t arg3, int32_t arg4, \n    int32_t arg5)\n{\n    void var_1c;\n    sub_412b30(arg1, arg2, arg5, &var_1c);\n    return sub_412b60(&var_1c, arg3, arg4);\n}\n\n"
        },
        {
            "funcName": "sub_40d0b0",
            "funcStartAddr": "0x40d0b0",
            "funcEndAddr": "0x40d0cc",
            "decompiledFuncCode": "uint64_t sub_40d0b0(int64_t arg1, int32_t arg2, int32_t arg3)\n{\n    int32_t var_c = arg3;\n    return sub_412b60(&var_c, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40d0d0",
            "funcStartAddr": "0x40d0d0",
            "funcEndAddr": "0x40d1c2",
            "decompiledFuncCode": "char* sub_40d0d0(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_413060();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_40d1b1:\n                void* const rbx_1 = &data_4192dc;\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_40d1b1;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_40d1b1;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_40d1b1;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_40d1b1;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_40d1b1;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_40d1b1;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_40d1b1;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_4192e5;\n            if (cond:2_1)\n            {\n                rbx = &data_4192e2;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_40d1b1;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_40d1b1;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_40d1b1;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_40d1b1;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_40d1b1;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_4192e9;\n            if (cond:1_1)\n            {\n                rbx = &data_4192de;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40d1d0",
            "funcStartAddr": "0x403024",
            "funcEndAddr": "0x40e3f1",
            "decompiledFuncCode": "int64_t sub_40d1d0(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    char const* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n    label_40d268:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_40d5dc:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_40d624;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_40d1d0(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char const rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_40d63b;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_40d775;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_40d3c5;\n                            }\n                            goto label_40d6b0;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_40d775;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_40d5a0;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_40d5a0:\n                            if (var_c0 == 0)\n                            {\n                                goto label_40d5ab;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_40d407:\n                            if (var_5c == 0)\n                            {\n                                goto label_40d418;\n                            }\n                        label_40d5d0:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_40d5d8;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_40d80b;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_40d80b:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_40d81a:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_40d5dc;\n                            }\n                            goto label_40d5a0;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_40d5a0;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_40d5a0;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_40d80b;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_40d3a6;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_40d3a6:\n                            if (var_5c == 0)\n                            {\n                                goto label_40d3c5;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_40d3c5;\n                            }\n                            goto label_40d81a;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_40d39d:\n                            if (r12_1 != 0)\n                            {\n                                goto label_40d5ab;\n                            }\n                            goto label_40d3a6;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_40d7d0:\n                            rdx = r11_1 == 2;\n                        label_40d3c5:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_40d4cc;\n                            }\n                            goto label_40d3cf;\n                        }\n                        case 0x27:\n                        {\n                            goto label_40d54d;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_40d51d;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_40d57a;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_40e30d;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_40d4e4;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_40d379;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_40d970;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_40d970;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_40e2c0:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_40d624:\n                            rbx_1 = sub_40d1d0(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_40d63b:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_40d775;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_40d6c7;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_40d775;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_40d690:\n                                r13 = 0;\n                                goto label_40d44b;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_40d418:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_40d44b:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_40d455;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_40d455:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_40d45d;\n                            }\n                            case 9:\n                            {\n                                goto label_40d640;\n                            }\n                            case 0xa:\n                            {\n                                goto label_40d5b8;\n                            }\n                            case 0xb:\n                            {\n                                goto label_40d6a0;\n                            }\n                            case 0xc:\n                            {\n                                goto label_40d680;\n                            }\n                            case 0xd:\n                            {\n                                goto label_40d669;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_40d9ca;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_40d655;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_40d9aa;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_40d992;\n                            }\n                            case 0x27:\n                            {\n                                goto label_40d54d;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_40d51d;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_40d57a;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_40d379;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_40d970:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_40d770:\n                            var_b8 = 0;\n                        label_40d775:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_40d7c4:\n                                if (rdx == 0)\n                                {\n                                    goto label_40d7d0;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_40dcc1:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_40d4e4;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_40d5dc;\n                                }\n                                r13 = var_98;\n                                goto label_40d45d;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_4129f0(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_40d5dc;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_40dcc1;\n                            }\n                            goto label_40d7c4;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_40d6b0:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_40d5dc;\n                                }\n                                var_b8 = 0;\n                            label_40d6c7:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_40d712;\n                                    }\n                                    rax_8 = r10;\n                                label_40d70a:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_40d712:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_40d4cc;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_40d753;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_40d70a;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_40d4cc;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_40d770;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_40d685;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_40d5bd;\n                            }\n                            case 9:\n                            {\n                            label_40d640:\n                                rbp_3 = 0x74;\n                                goto label_40d5bd;\n                            }\n                            case 0xa:\n                            {\n                            label_40d5b8:\n                                rbp_3 = 0x6e;\n                            label_40d5bd:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_40d5d0;\n                                }\n                                goto label_40d418;\n                            }\n                            case 0xb:\n                            {\n                            label_40d6a0:\n                                rbp_3 = 0x76;\n                                goto label_40d685;\n                            }\n                            case 0xc:\n                            {\n                            label_40d680:\n                                rbp_3 = 0x66;\n                            label_40d685:\n                                if (var_5c == 0)\n                                {\n                                    goto label_40d690;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_40d5d8:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_40d5dc;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_40d669:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_40d5a0;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_40d9ca:\n                                rbp_3 = 0x20;\n                                goto label_40d992;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_40d655:\n                                rdx = 0;\n                            label_40d5ab:\n                                r13 = 0;\n                                goto label_40d3c5;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_40d9aa:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_40d3c5;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_40d3cf:\n                                rax_8 = 0;\n                                goto label_40d3d1;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_40d992:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_40d3d1;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_40d54d:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_40d3c5;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_40e30d;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_40d4cc;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_40d51d:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_40e30d:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_40d5dc;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_40d4cc:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_40d407;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_40d4e4;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_40d3c5;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_40dab0:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_40d3c5;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_40dab0;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_40dab0;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_40dab0;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_40dab0;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_40e2c0;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_40d753:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_40d4cc;\n                                }\n                            label_40d3d1:\n                                if (arg7 == 0)\n                                {\n                                    goto label_40d4cc;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_40d4cc;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_40d407;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_40d57a:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_40d5a0;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_40d4e4:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_40d45d;\n                                }\n                            label_40d45d:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_40d466;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_40d466:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_40d379:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_40d5ab;\n                                }\n                                goto label_40d39d;\n                            }\n                        }\n                    }\n                }\n            }\n        label_40da56:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = \"'\";\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_40d268;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = \"'\";\n                goto label_40d268;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"'\";\n            goto label_40d268;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_4192dc;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_4192dc;\n            }\n            goto label_40d268;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_4192dc;\n            goto label_40d268;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_40d268;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_40d0d0(&data_4192ed, r13);\n                arg9 = sub_40d0d0(\"'\", r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_40d268;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_40da56;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n        goto label_40d268;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_40e400",
            "funcStartAddr": "0x403029",
            "funcEndAddr": "0x40e59e",
            "decompiledFuncCode": "char* sub_40e400(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_61f4b8;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_61f4d0 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_411530();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x61f4c0)\n        {\n            int64_t rax_9 = sub_411340(0, rsi_1);\n            int128_t zmm0 = data_61f4c0;\n            rbx = rax_9;\n            data_61f4b8 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_411340(rbx, rsi_1);\n            data_61f4b8 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_61f4d0;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_61f4d0 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_40d1d0(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        size_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x6219e0)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_4112e0(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_40d1d0(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_40e5a0",
            "funcStartAddr": "0x40e5a0",
            "funcEndAddr": "0x40e5d4",
            "decompiledFuncCode": "int64_t sub_40e5a0(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x621ae0;\n    }\n    int64_t rax_1 = sub_4114e0(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40e5e0",
            "funcStartAddr": "0x40e5e0",
            "funcEndAddr": "0x40e5ef",
            "decompiledFuncCode": "uint64_t sub_40e5e0(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_621ae0;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_40e5f0",
            "funcStartAddr": "0x40e5f0",
            "funcEndAddr": "0x40e5ff",
            "decompiledFuncCode": "void sub_40e5f0(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_621ae0;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_40e600",
            "funcStartAddr": "0x40e600",
            "funcEndAddr": "0x40e633",
            "decompiledFuncCode": "uint64_t sub_40e600(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x621ae0;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_40e640",
            "funcStartAddr": "0x40e640",
            "funcEndAddr": "0x40e653",
            "decompiledFuncCode": "uint64_t sub_40e640(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_621ae0;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40e660",
            "funcStartAddr": "0x40e660",
            "funcEndAddr": "0x40e68b",
            "decompiledFuncCode": "void sub_40e660(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_621ae0;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x621ae0;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40e690",
            "funcStartAddr": "0x40e690",
            "funcEndAddr": "0x40e702",
            "decompiledFuncCode": "int64_t sub_40e690(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_621ae0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_40d1d0(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_40e710",
            "funcStartAddr": "0x40e710",
            "funcEndAddr": "0x40e7f1",
            "decompiledFuncCode": "char* sub_40e710(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_621ae0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_40d1d0(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_4112e0((rax_2 + 1));\n    sub_40d1d0(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_40e800",
            "funcStartAddr": "0x40e800",
            "funcEndAddr": "0x40e80a",
            "decompiledFuncCode": "int64_t sub_40e800(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_40e710(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_40e810",
            "funcStartAddr": "0x40e810",
            "funcEndAddr": "0x40e8a5",
            "decompiledFuncCode": "uint64_t sub_40e810()\n{\n    uint64_t rax_2 = data_61f4d0;\n    int64_t r12 = data_61f4b8;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x6219e0)\n    {\n        rax_2 = free(rdi_2);\n        *data_61f4c0 = 0x100;\n        *(data_61f4c0 + 8) = 0x6219e0;\n    }\n    if (r12 != 0x61f4c0)\n    {\n        rax_2 = free(r12);\n        data_61f4b8 = 0x61f4c0;\n    }\n    data_61f4d0 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_40e8b0",
            "funcStartAddr": "0x40e8b0",
            "funcEndAddr": "0x40e8c1",
            "decompiledFuncCode": "int64_t sub_40e8b0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_40e400(arg1, arg2, -1, &data_621ae0);\n}\n\n"
        },
        {
            "funcName": "sub_40e8d0",
            "funcStartAddr": "0x40e8d0",
            "funcEndAddr": "0x40e8da",
            "decompiledFuncCode": "int64_t sub_40e8d0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_40e400(arg1, arg2, arg3, &data_621ae0);\n}\n\n"
        },
        {
            "funcName": "sub_40e8e0",
            "funcStartAddr": "0x40e8e0",
            "funcEndAddr": "0x40e8f6",
            "decompiledFuncCode": "int64_t sub_40e8e0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_40e400(0, arg1, -1, &data_621ae0);\n}\n\n"
        },
        {
            "funcName": "sub_40e900",
            "funcStartAddr": "0x40e900",
            "funcEndAddr": "0x40e912",
            "decompiledFuncCode": "int64_t sub_40e900(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_40e400(0, arg1, arg2, &data_621ae0);\n}\n\n"
        },
        {
            "funcName": "sub_40e920",
            "funcStartAddr": "0x40302e",
            "funcEndAddr": "0x40e988",
            "decompiledFuncCode": "char* sub_40e920(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_40e400(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_40e990",
            "funcStartAddr": "0x403033",
            "funcEndAddr": "0x40e9f4",
            "decompiledFuncCode": "char* sub_40e990(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_40e400(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_40ea00",
            "funcStartAddr": "0x40ea00",
            "funcEndAddr": "0x40ea0c",
            "decompiledFuncCode": "int64_t sub_40ea00(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_40e920(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40ea10",
            "funcStartAddr": "0x40ea10",
            "funcEndAddr": "0x40ea1f",
            "decompiledFuncCode": "int64_t sub_40ea10(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_40e990(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_40ea20",
            "funcStartAddr": "0x40ea20",
            "funcEndAddr": "0x40ea90",
            "decompiledFuncCode": "char* sub_40ea20(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_621b10;\n    int128_t var_48 = data_621ae0;\n    int128_t var_38 = data_621af0;\n    int128_t var_28 = data_621b00;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_40e400(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_40ea90",
            "funcStartAddr": "0x40ea90",
            "funcEndAddr": "0x40ea9d",
            "decompiledFuncCode": "int64_t sub_40ea90(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_40ea20(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40eaa0",
            "funcStartAddr": "0x40eaa0",
            "funcEndAddr": "0x40eab1",
            "decompiledFuncCode": "int64_t sub_40eaa0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_40ea20(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_40eac0",
            "funcStartAddr": "0x40eac0",
            "funcEndAddr": "0x40eaca",
            "decompiledFuncCode": "int64_t sub_40eac0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_40ea20(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_40ead0",
            "funcStartAddr": "0x403038",
            "funcEndAddr": "0x40eb3e",
            "decompiledFuncCode": "char* sub_40ead0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_40e400(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_40eb40",
            "funcStartAddr": "0x40eb40",
            "funcEndAddr": "0x40ebac",
            "decompiledFuncCode": "char* sub_40eb40(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_621ae0;\n    int128_t var_38 = data_621af0;\n    int128_t var_28 = data_621b00;\n    int64_t var_18 = data_621b10;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_40e400(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40ec00",
            "funcStartAddr": "0x40ec00",
            "funcEndAddr": "0x40ec0a",
            "decompiledFuncCode": "int64_t sub_40ec00(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_40e400(arg1, arg2, arg3, &data_61f480);\n}\n\n"
        },
        {
            "funcName": "sub_40ec10",
            "funcStartAddr": "0x40ec10",
            "funcEndAddr": "0x40ec22",
            "decompiledFuncCode": "int64_t sub_40ec10(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_40e400(0, arg1, arg2, &data_61f480);\n}\n\n"
        },
        {
            "funcName": "sub_40ec30",
            "funcStartAddr": "0x40ec30",
            "funcEndAddr": "0x40ec41",
            "decompiledFuncCode": "int64_t sub_40ec30(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_40e400(arg1, arg2, -1, &data_61f480);\n}\n\n"
        },
        {
            "funcName": "sub_40ec50",
            "funcStartAddr": "0x40ec50",
            "funcEndAddr": "0x40ec66",
            "decompiledFuncCode": "int64_t sub_40ec50(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_40e400(0, arg1, -1, &data_61f480);\n}\n\n"
        },
        {
            "funcName": "sub_40ec70",
            "funcStartAddr": "0x40ec70",
            "funcEndAddr": "0x40eeb2",
            "decompiledFuncCode": "uint64_t sub_40ec70(int32_t arg1, char* arg2, int32_t arg3, char* arg4, \n    int32_t arg5)\n{\n    int32_t rax_1 = syscall(0x13c, arg1, arg2, arg3, arg4, arg5);\n    int32_t rdx_1 = rax_1;\n    if (rax_1 < 0)\n    {\n        int32_t* rax_2 = __errno_location();\n        rdx_1 = rax_1;\n        int32_t* r9_1 = rax_2;\n        int32_t rax_3 = *rax_2;\n        int64_t r15;\n        r15 = ((rax_3 - 0x16) & 0xffffffef) != 0;\n        rax_3 = rax_3 != 0x5f;\n        r15 = (r15 & rax_3);\n        if (r15 == 0)\n        {\n            int32_t var_160_1;\n            void var_c8;\n            int32_t rax_5;\n            int32_t rax_6;\n            if (((arg5 & 0xfffffffe) == 0 && arg5 != 0))\n            {\n                var_160_1 = r9_1;\n                rax_5 = __fxstatat(1, arg3, arg4, &var_c8, 0x100);\n                r9_1 = var_160_1;\n                if (rax_5 != 0)\n                {\n                    rax_6 = *r9_1;\n                    if (rax_6 != 0x4b)\n                    {\n                        if (rax_6 != 2)\n                        {\n                            goto label_40ee10;\n                        }\n                        r15 = 1;\n                    }\n                }\n            }\n            if ((arg5 == 0 || (((arg5 != 0 && (arg5 & 0xfffffffe) == 0) && rax_5 != 0) && rax_6 != 0x4b)))\n            {\n                var_160_1 = r9_1;\n                uint64_t rax_7 = strlen(arg2);\n                uint64_t rax_8 = strlen(arg4);\n                if (rax_7 == 0)\n                {\n                label_40ee79:\n                    rdx_1 = renameat(arg1, arg2, arg3, arg4);\n                }\n                else\n                {\n                    int64_t r9_2 = var_160_1;\n                    if (rax_8 == 0)\n                    {\n                        goto label_40ee79;\n                    }\n                    if ((arg2[(rax_7 - 1)] != 0x2f && arg4[(rax_8 - 1)] != 0x2f))\n                    {\n                        goto label_40ee79;\n                    }\n                    var_160_1 = r9_2;\n                    void var_158;\n                    if (__fxstatat(1, arg1, arg2, &var_158, 0x100) != 0)\n                    {\n                        goto label_40ee10;\n                    }\n                    int32_t* r9_3 = var_160_1;\n                    int32_t var_140;\n                    if (r15 == 0)\n                    {\n                        var_160_1 = r9_3;\n                        int32_t* r9_4 = var_160_1;\n                        if (__fxstatat(1, arg3, arg4, &var_c8, 0x100) != 0)\n                        {\n                            if (*r9_4 != 2)\n                            {\n                                goto label_40ee10;\n                            }\n                            if ((var_140 & 0xf000) == 0x4000)\n                            {\n                                goto label_40ee79;\n                            }\n                            goto label_40ee10;\n                        }\n                        int32_t var_b0;\n                        if ((var_b0 & 0xf000) != 0x4000)\n                        {\n                            *r9_4 = 0x14;\n                        label_40ee10:\n                            rdx_1 = -1;\n                        }\n                        else\n                        {\n                            if ((var_140 & 0xf000) == 0x4000)\n                            {\n                                goto label_40ee79;\n                            }\n                            *r9_4 = 0x15;\n                            rdx_1 = -1;\n                        }\n                    }\n                    else\n                    {\n                        if ((var_140 & 0xf000) == 0x4000)\n                        {\n                            goto label_40ee79;\n                        }\n                        *r9_3 = 2;\n                        rdx_1 = -1;\n                    }\n                }\n            }\n            if (arg5 != 0)\n            {\n                if (((arg5 & 0xfffffffe) == 0 && (rax_5 == 0 || (rax_5 != 0 && rax_6 == 0x4b))))\n                {\n                    *r9_1 = 0x11;\n                    rdx_1 = -1;\n                }\n                if ((arg5 & 0xfffffffe) != 0)\n                {\n                    *r9_1 = 0x5f;\n                    rdx_1 = -1;\n                }\n            }\n        }\n    }\n    return rdx_1;\n}\n\n"
        },
        {
            "funcName": "sub_40eec0",
            "funcStartAddr": "0x40eec0",
            "funcEndAddr": "0x40ef1e",
            "decompiledFuncCode": "ssize_t sub_40eec0(int32_t arg1, int64_t arg2, uint64_t arg3)\n{\n    uint64_t rbx = arg3;\n    ssize_t rax_1;\n    while (true)\n    {\n        rax_1 = read(arg1, arg2, rbx);\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        int32_t rax_3 = *__errno_location();\n        if (rax_3 != 4)\n        {\n            if (rbx <= 0x7fffe000)\n            {\n                break;\n            }\n            if (rax_3 != 0x16)\n            {\n                break;\n            }\n            rbx = 0x7fffe000;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40ef20",
            "funcStartAddr": "0x40ef20",
            "funcEndAddr": "0x40ef7e",
            "decompiledFuncCode": "ssize_t sub_40ef20(int32_t arg1, int64_t arg2, uint64_t arg3)\n{\n    uint64_t rbx = arg3;\n    ssize_t rax_1;\n    while (true)\n    {\n        rax_1 = write(arg1, arg2, rbx);\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        int32_t rax_3 = *__errno_location();\n        if (rax_3 != 4)\n        {\n            if (rax_3 != 0x16)\n            {\n                break;\n            }\n            if (rbx <= 0x7fffe000)\n            {\n                break;\n            }\n            rbx = 0x7fffe000;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40ef80",
            "funcStartAddr": "0x40ef80",
            "funcEndAddr": "0x40f0b0",
            "decompiledFuncCode": "uint64_t sub_40ef80(char* arg1, char* arg2)\n{\n    char* r15 = arg1;\n    int32_t rbx = 0;\n    char* rax = sub_40ad40(arg1);\n    char* rax_1 = sub_40ad40(arg2);\n    uint64_t rax_2 = sub_40ada0(rax);\n    if ((rax_2 == sub_40ada0(rax_1) && memcmp(rax, rax_1, rax_2) == 0))\n    {\n        char* rax_6 = sub_40ac60(r15);\n        char* rax_7 = sub_40ac60(arg2);\n        int64_t var_158;\n        if (__xstat(1, rax_6, &var_158) != 0)\n        {\n            error(1, *__errno_location(), \"%s\", rax_6);\n        }\n        int64_t var_c8;\n        if (__xstat(1, rax_7, &var_c8) != 0)\n        {\n            error(1, *__errno_location(), \"%s\", rax_7);\n        }\n        rbx = 0;\n        int64_t var_150;\n        int64_t var_c0;\n        if (var_150 == var_c0)\n        {\n            rbx = var_158 == var_c8;\n        }\n        free(rax_6);\n        free(rax_7);\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40f0d0",
            "funcStartAddr": "0x40f0d0",
            "funcEndAddr": "0x40f0db",
            "decompiledFuncCode": "int64_t sub_40f0d0(int64_t* arg1, int64_t* arg2)\n{\n    /* tailcall */\n    return strcmp(*arg1, *arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40f0e0",
            "funcStartAddr": "0x40f0e0",
            "funcEndAddr": "0x40f474",
            "decompiledFuncCode": "char* sub_40f0e0(DIR* arg1, int32_t arg2)\n{\n    __compar_fn_t rax = *((arg2 << 3) + 0x41a020);\n    char* r13;\n    if (arg1 == 0)\n    {\n        r13 = nullptr;\n    }\n    else\n    {\n        size_t r15_1 = 0;\n        uint64_t r12_1 = 0;\n        int64_t* r14_1 = nullptr;\n        int32_t* rax_1 = __errno_location();\n        r13 = nullptr;\n        uint64_t var_58_1 = 0;\n        size_t var_68_1 = 0;\n        while (true)\n        {\n            *rax_1 = 0;\n            struct dirent64* rax_3 = readdir(arg1);\n            if (rax_3 == 0)\n            {\n                break;\n            }\n            char (* r8_1)[0x100] = &rax_3->d_name;\n            char rax_2 = rax_3->d_name[0];\n            if (rax_2 == 0x2e)\n            {\n                if (rax_3->d_name[1] == 0x2e)\n                {\n                    rax_2 = rax_3->d_name[2];\n                }\n                if (rax_3->d_name[1] == 0)\n                {\n                    continue;\n                }\n            }\n            if ((((rax_2 == 0x2e && rax_3->d_name[1] == 0x2e) || rax_2 != 0x2e) && rax_2 == 0))\n            {\n                continue;\n            }\n            uint64_t rdx_1 = (strlen(r8_1) + 1);\n            if (rax == 0)\n            {\n                size_t rsi_4 = (r15_1 + rdx_1);\n                uint64_t rcx_6 = (r15_1 + rdx_1) < r15_1;\n                if ((var_68_1 - r15_1) > rdx_1)\n                {\n                    goto label_40f344;\n                }\n                if (rcx_6 == 0)\n                {\n                    size_t rax_18;\n                    bool cond:3_1;\n                    if (r13 == 0)\n                    {\n                        rax_18 = rsi_4;\n                        cond:3_1 = rsi_4 >= 0;\n                        if (rsi_4 == 0)\n                        {\n                            var_68_1 = 0x80;\n                        }\n                    }\n                    if ((r13 != 0 && rsi_4 <= 0x5555555555555553))\n                    {\n                        rax_18 = ((rsi_4 + (rsi_4 >> 1)) + 1);\n                    }\n                    if (((r13 != 0 && rsi_4 <= 0x5555555555555553) || ((r13 == 0 && rsi_4 != 0) && cond:3_1)))\n                    {\n                        var_68_1 = rax_18;\n                    }\n                    if ((((r13 == 0 && rsi_4 == 0) || (r13 != 0 && rsi_4 <= 0x5555555555555553)) || ((r13 == 0 && rsi_4 != 0) && cond:3_1)))\n                    {\n                        r13 = sub_411340(r13, var_68_1);\n                    label_40f344:\n                        memcpy(&r13[r15_1], r8_1, rdx_1);\n                        r15_1 = rsi_4;\n                        continue;\n                    }\n                }\n            }\n            else\n            {\n                struct dirent64* rcx_3 = rax_3;\n                uint64_t var_60_2 = (r12_1 + 1);\n                if (r12_1 != var_58_1)\n                {\n                    goto label_40f1c7;\n                }\n                int64_t rsi_9;\n                if (r14_1 == 0)\n                {\n                    if (r12_1 == 0)\n                    {\n                        var_58_1 = 8;\n                        rsi_9 = 0x80;\n                        var_60_2 = 1;\n                    label_40f3bd:\n                        r14_1 = sub_411340(r14_1, rsi_9);\n                    label_40f1c7:\n                        int64_t* r12_3 = &r14_1[(r12_1 * 2)];\n                        *r12_3 = sub_411510(r8_1);\n                        r15_1 = (r15_1 + rdx_1);\n                        r12_3[1] = rcx_3->d_ino;\n                        r12_1 = var_60_2;\n                        continue;\n                    }\n                    else\n                    {\n                        uint64_t rax_26;\n                        rax_26 = (r12_1 >> 0x3c) != 0;\n                        rsi_9 = (r12_1 << 4);\n                        if ((rsi_9 >= 0 && rax_26 == 0))\n                        {\n                            goto label_40f3bd;\n                        }\n                    }\n                }\n                else if (r12_1 <= 0x555555555555554)\n                {\n                    uint64_t rax_22 = ((r12_1 >> 1) + var_60_2);\n                    var_58_1 = rax_22;\n                    rsi_9 = (rax_22 << 4);\n                    goto label_40f3bd;\n                }\n            }\n            sub_411530();\n            /* no return */\n        }\n        int32_t rbx_2 = *rax_1;\n        if (rbx_2 != 0)\n        {\n            free(r14_1);\n            char* rdi_14 = r13;\n            r13 = nullptr;\n            free(rdi_14);\n            *rax_1 = rbx_2;\n        }\n        else\n        {\n            char* rbp_2;\n            if (rax != 0)\n            {\n                size_t rbx_3 = (r15_1 + 1);\n                if (r12_1 == 0)\n                {\n                    char* rax_9 = sub_4112e0(rbx_3);\n                    r13 = rax_9;\n                    rbp_2 = rax_9;\n                }\n                else\n                {\n                    void* rbp_3 = nullptr;\n                    qsort(r14_1, r12_1, 0x10, rax);\n                    void* r12_5 = &r14_1[(r12_1 * 2)];\n                    int64_t* rbx_4 = r14_1;\n                    r13 = sub_4112e0(rbx_3);\n                    do\n                    {\n                        void* r15_2 = (r13 + rbp_3);\n                        char* rsi_2 = *rbx_4;\n                        rbx_4 = &rbx_4[2];\n                        rbp_3 = ((rbp_3 + (stpcpy(r15_2, rsi_2) - r15_2)) + 1);\n                        free(rbx_4[-2]);\n                    } while (rbx_4 != r12_5);\n                    rbp_2 = (rbp_3 + r13);\n                }\n                free(r14_1);\n            }\n            else if (var_68_1 == r15_1)\n            {\n                char* rax_24 = sub_411340(r13, (var_68_1 + 1));\n                r13 = rax_24;\n                rbp_2 = &rax_24[var_68_1];\n            }\n            else\n            {\n                rbp_2 = &r13[r15_1];\n            }\n            *rbp_2 = 0;\n        }\n    }\n    return r13;\n}\n\n"
        },
        {
            "funcName": "sub_40f480",
            "funcStartAddr": "0x40f480",
            "funcEndAddr": "0x40f4e8",
            "decompiledFuncCode": "char* sub_40f480(int64_t arg1, int32_t arg2)\n{\n    DIR* rax = sub_40abc0();\n    if (rax == 0)\n    {\n        return 0;\n    }\n    char* rax_1 = sub_40f0e0(rax, arg2);\n    if (closedir(rax) != 0)\n    {\n        int32_t* rax_5 = __errno_location();\n        int32_t r12 = *rax_5;\n        free(rax_1);\n        *rax_5 = r12;\n        return 0;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40f4f0",
            "funcStartAddr": "0x40f4f0",
            "funcEndAddr": "0x40f4f7",
            "decompiledFuncCode": "int64_t sub_40f4f0(int32_t* arg1)\n{\n    *arg1 = 0;\n}\n\n"
        },
        {
            "funcName": "sub_40f500",
            "funcStartAddr": "0x40f500",
            "funcEndAddr": "0x40f514",
            "decompiledFuncCode": "uint64_t sub_40f500(int32_t* arg1)\n{\n    if (*arg1 == 4)\n    {\n        return arg1[1];\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40f520",
            "funcStartAddr": "0x40f520",
            "funcEndAddr": "0x40f769",
            "decompiledFuncCode": "uint64_t sub_40f520(int32_t* arg1, char* arg2, int32_t arg3, int32_t* arg4)\n{\n    int32_t r12_1;\n    int32_t r13;\n    if (arg4 == 0)\n    {\n        r13 = -1;\n    label_40f574:\n        int32_t rcx = *arg1;\n        if (rcx > 5)\n        {\n        label_40f764:\n            __assert_fail(&data_41a084, \"lib/savewd.c\", 0x63, \"savewd_save\");\n            /* no return */\n        }\n        char rax_4 = (1 << rcx);\n        if ((rax_4 & 0x36) != 0)\n        {\n            goto label_40f5c0;\n        }\n        if ((rax_4 & 8) != 0)\n        {\n            if (arg1[1] < 0)\n            {\n                goto label_40f68b;\n            }\n            goto label_40f5c0;\n        }\n        if (rcx != 0)\n        {\n            goto label_40f764;\n        }\n        int32_t rax_6 = sub_40ae10(&data_418d7b, 0, arg3);\n        uint64_t rax_7;\n        if (rax_6 < 0)\n        {\n            int32_t rax_16 = *__errno_location();\n            if (rax_16 == 0xd)\n            {\n            label_40f71a:\n                *arg1 = -0xfffffffd;\n            label_40f68b:\n                pid_t rax_12 = fork();\n                arg1[1] = rax_12;\n                bool cond:0_1 = rax_12 > 0;\n                if (rax_12 == 0)\n                {\n                    goto label_40f5c0;\n                }\n                if (cond:0_1)\n                {\n                    rax_7 = 1;\n                    r12_1 = -2;\n                    goto label_40f640;\n                }\n                *arg1 = 4;\n                arg1[1] = *__errno_location();\n                goto label_40f5c0;\n            }\n            if (rax_16 == 0x74)\n            {\n                goto label_40f71a;\n            }\n            *arg1 = 4;\n            arg1[1] = rax_16;\n            goto label_40f5c0;\n        }\n        *arg1 = 1;\n        arg1[1] = rax_6;\n    label_40f5c0:\n        if (r13 < 0)\n        {\n            int32_t rax_9 = chdir(arg2);\n            r12_1 = rax_9;\n            if (rax_9 == 0)\n            {\n            label_40f617:\n                if (*arg1 > 5)\n                {\n                label_40f737:\n                    __assert_fail(&data_41a084, \"lib/savewd.c\", 0x9f, \"savewd_chdir\");\n                    /* no return */\n                }\n                switch (*arg1)\n                {\n                    case 0:\n                    {\n                        goto label_40f737;\n                    }\n                    case 1:\n                    {\n                        *arg1 = 2;\n                    label_40f63a:\n                        rax_7 = arg4 == 0;\n                        r12_1 = 0;\n                        break;\n                    }\n                    case 2:\n                    case 4:\n                    case 5:\n                    {\n                        goto label_40f63a;\n                    }\n                    case 3:\n                    {\n                        if (arg1[1] != 0)\n                        {\n                            __assert_fail(\"wd->val.child == 0\", \"lib/savewd.c\", 0x9b, \"savewd_chdir\");\n                            /* no return */\n                        }\n                        goto label_40f63a;\n                    }\n                }\n                goto label_40f640;\n            }\n        }\n        else\n        {\n            rax_7 = fchdir(r13);\n            r12_1 = rax_7;\n            if (rax_7 == 0)\n            {\n                goto label_40f617;\n            }\n            rax_7 = arg4 == 0;\n        label_40f640:\n            if ((r13 >= 0 && rax_7 != 0))\n            {\n                int32_t* rax_10 = __errno_location();\n                int32_t rbp_1 = *rax_10;\n                close(r13);\n                *rax_10 = rbp_1;\n                return r12_1;\n            }\n        }\n    }\n    else\n    {\n        int32_t r14_1 = arg3;\n        int32_t rax_1 = __open_2(arg2, (((arg3 << 0x11) & 0x20000) | 0x10900));\n        *arg4 = rax_1;\n        r13 = rax_1;\n        int32_t* rax_2;\n        rax_2 = __errno_location();\n        int32_t rax_3 = *rax_2;\n        arg4[1] = rax_3;\n        if (r13 < 0)\n        {\n            if (rax_3 == 0xd)\n            {\n                goto label_40f574;\n            }\n            r12_1 = -1;\n        }\n        else\n        {\n            if ((r14_1 & 2) == 0)\n            {\n                goto label_40f574;\n            }\n            r12_1 = 0;\n        }\n    }\n    return r12_1;\n}\n\n"
        },
        {
            "funcName": "sub_40f770",
            "funcStartAddr": "0x40f770",
            "funcEndAddr": "0x40f896",
            "decompiledFuncCode": "uint64_t sub_40f770(int32_t* arg1, int32_t arg2)\n{\n    if (*arg1 > 4)\n    {\n        __assert_fail(&data_41a084, \"lib/savewd.c\", 0xe2, \"savewd_restore\");\n        /* no return */\n    }\n    int32_t* rbp_2;\n    int32_t r12;\n    if (*arg1 == 4)\n    {\n        r12 = arg1[1];\n        rbp_2 = __errno_location();\n    }\n    else if (*arg1 == 3)\n    {\n        pid_t rbp_1 = arg1[1];\n        bool cond:0_1 = rbp_1 > 0;\n        if (rbp_1 == 0)\n        {\n            _exit(arg2);\n            /* no return */\n        }\n        if (cond:0_1)\n        {\n            int32_t var_1c;\n            while (true)\n            {\n                if (waitpid(rbp_1, &var_1c, 0) >= 0)\n                {\n                    break;\n                }\n                if (*__errno_location() != 4)\n                {\n                    __assert_fail(\"(*__errno_location ()) == 4\", \"lib/savewd.c\", 0xd8, \"savewd_restore\");\n                    /* no return */\n                }\n            }\n            int32_t rax_6 = var_1c;\n            arg1[1] = 0xffffffff;\n            int32_t rdi_2 = (rax_6 & 0x7f);\n            if (rdi_2 != 0)\n            {\n                raise(rdi_2);\n                rax_6 = var_1c;\n            }\n            return *rax_6[1];\n        }\n    }\n    else if (*arg1 == 2)\n    {\n        int64_t rax_8 = fchdir(arg1[1]);\n        if (rax_8 == 0)\n        {\n            *arg1 = 1;\n            return rax_8;\n        }\n        int32_t* rax_9 = __errno_location();\n        r12 = *rax_9;\n        rbp_2 = rax_9;\n        close(arg1[1]);\n        *arg1 = 4;\n        arg1[1] = r12;\n    }\n    if (((*arg1 == 0 || *arg1 == 1) || *arg1 == 3))\n    {\n        return 0;\n    }\n    else if ((*arg1 == 2 || *arg1 == 4))\n    {\n        *rbp_2 = r12;\n        return 0xffffffff;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_40f8a0",
            "funcStartAddr": "0x40f8a0",
            "funcEndAddr": "0x40f909",
            "decompiledFuncCode": "int64_t sub_40f8a0(int32_t* arg1)\n{\n    if (*arg1 > 4)\n    {\n        __assert_fail(&data_41a084, \"lib/savewd.c\", 0xfb, \"savewd_finish\");\n        /* no return */\n    }\n    /* jump -> jump_table_41a0e0[*arg1] */\n}\n\n"
        },
        {
            "funcName": "sub_40f910",
            "funcStartAddr": "0x40f910",
            "funcEndAddr": "0x40fa58",
            "decompiledFuncCode": "uint64_t sub_40f910(int32_t arg1, int64_t* arg2, int64_t arg3, int64_t arg4)\n{\n    int32_t rax = (arg1 - 1);\n    int32_t var_40 = 0;\n    int32_t rbp_1;\n    int32_t r14;\n    if (rax >= 0)\n    {\n        rbp_1 = rax;\n        if (*arg2[rax] == 0x2f)\n        {\n            int64_t rax_4 = (arg1 - 2);\n            char* rdx;\n            do\n            {\n                rbp_1 = rax_4;\n                if (rax_4 < 0)\n                {\n                    break;\n                }\n                rdx = arg2[rax_4];\n                rax_4 = (rax_4 - 1);\n            } while (*rdx == 0x2f);\n        }\n        if (rbp_1 > 0)\n        {\n            int64_t* r15_1 = arg2;\n            r14 = 0;\n            void* rax_6 = &arg2[((rbp_1 - 1) + 1)];\n            int32_t rax_7 = 0;\n            while (true)\n            {\n                int32_t var_3c;\n                if ((rax_7 != 3 || (rax_7 == 3 && var_3c <= 0)))\n                {\n                    int32_t rax_8 = arg3(*r15_1, &var_40, arg4);\n                    if (r14 < rax_8)\n                    {\n                        r14 = rax_8;\n                    }\n                }\n                if (*r15_1[1] != 0x2f)\n                {\n                    int32_t rax_10 = sub_40f770(&var_40, r14);\n                    if (r14 < rax_10)\n                    {\n                        r14 = rax_10;\n                    }\n                }\n                r15_1 = &r15_1[1];\n                if (r15_1 == rax_6)\n                {\n                    break;\n                }\n                rax_7 = var_40;\n            }\n        }\n    }\n    if ((rax < 0 || (rax >= 0 && rbp_1 <= 0)))\n    {\n        r14 = 0;\n        rbp_1 = 0;\n    }\n    sub_40f8a0(&var_40);\n    if (arg1 > rbp_1)\n    {\n        int64_t rdx_2 = rbp_1;\n        void* r15_2 = &arg2[rdx_2];\n        void* rbp_2 = &arg2[(((rax - rbp_1) + rdx_2) + 1)];\n        do\n        {\n            int32_t rax_15 = arg3(*r15_2, &var_40, arg4);\n            if (r14 < rax_15)\n            {\n                r14 = rax_15;\n            }\n            r15_2 = (r15_2 + 8);\n        } while (r15_2 != rbp_2);\n    }\n    return r14;\n}\n\n"
        },
        {
            "funcName": "sub_40fa60",
            "funcStartAddr": "0x40fa60",
            "funcEndAddr": "0x40fab4",
            "decompiledFuncCode": "uint64_t sub_40fa60(char* arg1)\n{\n    void var_98;\n    int32_t rax = __lxstat(1, arg1, &var_98);\n    int32_t* rax_1 = __errno_location();\n    if (rax != 0)\n    {\n        int32_t rdx_1 = *rax_1;\n        if (rdx_1 != 0x4b)\n        {\n            int32_t rax_2;\n            rax_2 = rdx_1 != 2;\n            return (-rax_2);\n        }\n    }\n    *rax_1 = 0x11;\n    return 0xffffffff;\n}\n\n"
        },
        {
            "funcName": "sub_40fac0",
            "funcStartAddr": "0x40fac0",
            "funcEndAddr": "0x40faca",
            "decompiledFuncCode": "int64_t sub_40fac0(int64_t arg1)\n{\n    /* tailcall */\n    return mkdir(arg1, 0x1c0);\n}\n\n"
        },
        {
            "funcName": "sub_40fad0",
            "funcStartAddr": "0x40fad0",
            "funcEndAddr": "0x40fae6",
            "decompiledFuncCode": "int64_t sub_40fad0(char* arg1, int32_t* arg2)\n{\n    uint64_t rsi;\n    rsi = (*arg2 & 0x3c);\n    rsi = (rsi | 0xc2);\n    /* tailcall */\n    return open(arg1, rsi, 0x180);\n}\n\n"
        },
        {
            "funcName": "sub_40faf0",
            "funcStartAddr": "0x40faf0",
            "funcEndAddr": "0x40fb0d",
            "decompiledFuncCode": "int64_t sub_40faf0() __noreturn\n{\n    __assert_fail(\"! \"invalid KIND in __gen_tempnam\u2026\", \"lib/tempname.c\", 0x147, \"gen_tempname_len\");\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40fb10",
            "funcStartAddr": "0x40fb10",
            "funcEndAddr": "0x40fc6d",
            "decompiledFuncCode": "uint64_t sub_40fb10(char* arg1, int32_t arg2, int64_t arg3, int64_t arg4, \n    uint64_t arg5)\n{\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    uint64_t rax_2 = strlen(arg1);\n    int64_t rdx_1 = (arg2 + arg5);\n    uint64_t rax_5;\n    int32_t rdx_3;\n    if (rdx_1 <= rax_2)\n    {\n        int64_t rax_3 = (rax_2 - rdx_1);\n        void* rax_4 = &arg1[rax_3];\n        rax_5 = strspn(rax_4, \"X\");\n        if (arg5 <= rax_5)\n        {\n            FILE*** rax_6 = sub_413800(nullptr, arg5);\n            if (rax_6 == 0)\n            {\n                rdx_3 = -1;\n            }\n            else\n            {\n                int32_t r12_1 = 0x3a2f8;\n                void* rbx_2 = &arg1[(arg5 + rax_3)];\n                while (true)\n                {\n                    void* r14_1 = rax_4;\n                    if (arg5 != 0)\n                    {\n                        do\n                        {\n                            r14_1 = (r14_1 + 1);\n                            *(r14_1 - 1) = *\"abcdefghijklmnopqrstuvwxyzABCDEF\u2026\"[sub_413840(rax_6, 0x3d)];\n                        } while (r14_1 != rbx_2);\n                    }\n                    int32_t rax_12 = arg4(arg1, arg3);\n                    int32_t rdx_2 = rax_12;\n                    int32_t rcx;\n                    if (rax_12 >= 0)\n                    {\n                        *rax = rax_1;\n                        rcx = rax_1;\n                    }\n                    else\n                    {\n                        rcx = *rax;\n                        if (rcx != 0x11)\n                        {\n                            rdx_2 = -1;\n                        }\n                        else\n                        {\n                            int32_t temp0_1 = r12_1;\n                            r12_1 = (r12_1 - 1);\n                            if (temp0_1 == 1)\n                            {\n                                sub_413960(rax_6);\n                                *rax = 0x11;\n                                rdx_3 = -1;\n                                break;\n                            }\n                            continue;\n                        }\n                    }\n                    void* var_58_1;\n                    var_58_1 = rdx_2;\n                    char* var_60;\n                    var_60 = rcx;\n                    sub_413960(rax_6);\n                    rdx_3 = var_58_1;\n                    *rax = var_60;\n                    break;\n                }\n            }\n        }\n    }\n    if ((rdx_1 > rax_2 || (rdx_1 <= rax_2 && arg5 > rax_5)))\n    {\n        *rax = 0x16;\n        rdx_3 = -1;\n    }\n    return rdx_3;\n}\n\n"
        },
        {
            "funcName": "sub_40fc70",
            "funcStartAddr": "0x40fc70",
            "funcEndAddr": "0x40fc9b",
            "decompiledFuncCode": "uint64_t sub_40fc70(char* arg1, int32_t arg2, int32_t arg3, int32_t arg4, \n    uint64_t arg5)\n{\n    int32_t var_c = arg3;\n    if (arg4 > 2)\n    {\n        sub_40faf0();\n        /* no return */\n    }\n    return sub_40fb10(arg1, arg2, &var_c, *((arg4 << 3) + 0x41a180), arg5);\n}\n\n"
        },
        {
            "funcName": "sub_40fca0",
            "funcStartAddr": "0x40fca0",
            "funcEndAddr": "0x40fcd1",
            "decompiledFuncCode": "uint64_t sub_40fca0(char* arg1, int32_t arg2, int32_t arg3, int32_t arg4)\n{\n    int32_t var_c = arg3;\n    if (arg4 > 2)\n    {\n        sub_40faf0();\n        /* no return */\n    }\n    return sub_40fb10(arg1, arg2, &var_c, *((arg4 << 3) + 0x41a180), 6);\n}\n\n"
        },
        {
            "funcName": "sub_40fcf0",
            "funcStartAddr": "0x40fcf0",
            "funcEndAddr": "0x40fd3e",
            "decompiledFuncCode": "uint64_t sub_40fcf0(int32_t arg1)\n{\n    if (arg1 <= 2)\n    {\n        int32_t rax_1 = sub_4143d0(arg1);\n        int32_t* rax_2 = __errno_location();\n        int32_t r13 = *rax_2;\n        close(arg1);\n        *rax_2 = r13;\n        return rax_1;\n    }\n    return arg1;\n}\n\n"
        },
        {
            "funcName": "sub_40fd40",
            "funcStartAddr": "0x40fd40",
            "funcEndAddr": "0x40fd4c",
            "decompiledFuncCode": "uint64_t sub_40fd40(int64_t* arg1, int64_t arg2)\n{\n    return (COMBINE(0, *arg1) % arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40fd50",
            "funcStartAddr": "0x40fd50",
            "funcEndAddr": "0x40fd5a",
            "decompiledFuncCode": "int64_t sub_40fd50(int64_t* arg1, int64_t* arg2)\n{\n    int64_t rax;\n    rax = *arg1 == *arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40fd60",
            "funcStartAddr": "0x40fd60",
            "funcEndAddr": "0x4104c9",
            "decompiledFuncCode": "uint64_t sub_40fd60(char* arg1, int64_t* arg2, void* arg3, int32_t arg4)\n{\n    int32_t r13 = *(arg3 + 0x60);\n    int64_t r12 = arg2[0xb];\n    int64_t rbp = *(arg3 + 0x58);\n    int32_t r14 = arg2[0xc];\n    int32_t r15 = r13;\n    uint64_t rbx_1 = (arg4 & 1);\n    if (rbx_1 == 0)\n    {\n        goto label_40fe50;\n    }\n    bool var_148_1 = r12 == rbp;\n    bool rax = (r14 == r13 & var_148_1);\n    bool var_140_1 = rax;\n    if (rax != 0)\n    {\n        rbx_1 = 0;\n    }\n    else\n    {\n        if ((rbp - 1) > r12)\n        {\n            goto label_40fea0;\n        }\n        if ((r12 - 1) <= rbp)\n        {\n            int64_t rdx = data_621b20;\n            int64_t var_130;\n            int64_t var_f8;\n            int64_t rax_17;\n            int64_t rdx_5;\n            int64_t r9_1;\n            if (rdx == 0)\n            {\n                rax_17 = sub_40bb50(0x10, nullptr, 0x40fd40, 0x40fd50, 0x402860);\n                rdx = rax_17;\n                data_621b20 = rax_17;\n                if (rax_17 == 0)\n                {\n                label_40fedf:\n                    rdx_5 = &var_f8;\n                label_40fee4:\n                    int32_t var_f0_1 = 0x77359400;\n                    r9_1 = rdx_5;\n                    char var_ec_1 = 0;\n                    var_130 = 0x77359400;\n                label_40ff07:\n                    int32_t rdi_2 = arg2[0xa];\n                    int32_t rcx_1 = arg2[0xe];\n                    int32_t temp2_1;\n                    int32_t temp3_1;\n                    temp2_1 = HIGHW((rdi_2 * 0x66666667));\n                    temp3_1 = LOWW((rdi_2 * 0x66666667));\n                    uint64_t rdx_8 = ((temp2_1 >> 2) - (rdi_2 >> 0x1f));\n                    uint32_t rax_20 = (rdx_8 * 5);\n                    int32_t r11_1 = rdx_8;\n                    int32_t temp4_1;\n                    int32_t temp5_1;\n                    temp4_1 = HIGHW((rcx_1 * 0x66666667));\n                    temp5_1 = LOWW((rcx_1 * 0x66666667));\n                    uint64_t rdx_11 = ((temp4_1 >> 2) - (rcx_1 >> 0x1f));\n                    uint32_t rax_23 = (rdx_11 * 5);\n                    int32_t r10_1 = rdx_11;\n                    int32_t temp6_1;\n                    int32_t temp7_1;\n                    temp6_1 = HIGHW((r14 * 0x66666667));\n                    temp7_1 = LOWW((r14 * 0x66666667));\n                    uint64_t rdx_14 = ((temp6_1 >> 2) - (r14 >> 0x1f));\n                    uint32_t rax_26 = (rdx_14 * 5);\n                    int32_t rdi_7 = rdx_14;\n                    int32_t var_120_1 = rdx_14;\n                    if ((((rcx_1 - (rax_23 + rax_23)) | (rdi_2 - (rax_20 + rax_20))) | (r14 - (rax_26 + rax_26))) == 0)\n                    {\n                        int32_t rcx_5 = r11_1;\n                        int32_t rsi_7 = r10_1;\n                        int64_t rax_29 = arg2[9];\n                        int64_t rax_67;\n                        uint64_t r8_2;\n                        if (var_130 <= 0xa)\n                        {\n                            *(r9_1 + 8) = 0xa;\n                            rax_67 = rbp;\n                            r8_2 = 0xa;\n                        }\n                        else\n                        {\n                            int32_t temp14_1;\n                            int32_t temp15_1;\n                            temp14_1 = HIGHW((r11_1 * 0x66666667));\n                            temp15_1 = LOWW((r11_1 * 0x66666667));\n                            uint32_t rax_33 = (((temp14_1 >> 2) - (r11_1 >> 0x1f)) * 5);\n                            int32_t temp16_1;\n                            int32_t temp17_1;\n                            temp16_1 = HIGHW((r10_1 * 0x66666667));\n                            temp17_1 = LOWW((r10_1 * 0x66666667));\n                            uint32_t rax_38 = (((temp16_1 >> 2) - (r10_1 >> 0x1f)) * 5);\n                            int32_t temp18_1;\n                            int32_t temp19_1;\n                            temp18_1 = HIGHW((var_120_1 * 0x66666667));\n                            temp19_1 = LOWW((var_120_1 * 0x66666667));\n                            uint32_t rax_43 = (((temp18_1 >> 2) - (var_120_1 >> 0x1f)) * 5);\n                            r8_2 = 0xa;\n                            if ((((r11_1 - (rax_33 + rax_33)) | (r10_1 - (rax_38 + rax_38))) | (var_120_1 - (rax_43 + rax_43))) != 0)\n                            {\n                                *(r9_1 + 8) = 0xa;\n                                rax_67 = rbp;\n                            }\n                            else\n                            {\n                                var_120_1 = rbp;\n                                int32_t r9_2 = var_130;\n                                int32_t r15_2 = 8;\n                                while (true)\n                                {\n                                    int32_t r11_5 = (r8_2 * 5);\n                                    int32_t temp20_1;\n                                    int32_t temp21_1;\n                                    temp20_1 = HIGHW((rcx_5 * 0x66666667));\n                                    temp21_1 = LOWW((rcx_5 * 0x66666667));\n                                    int32_t r11_6 = (r11_5 + r11_5);\n                                    r8_2 = r11_6;\n                                    rcx_5 = ((temp20_1 >> 2) - (rcx_5 >> 0x1f));\n                                    int32_t temp22_1;\n                                    int32_t temp23_1;\n                                    temp22_1 = HIGHW((rsi_7 * 0x66666667));\n                                    temp23_1 = LOWW((rsi_7 * 0x66666667));\n                                    rsi_7 = ((temp22_1 >> 2) - (rsi_7 >> 0x1f));\n                                    int32_t temp24_1;\n                                    int32_t temp25_1;\n                                    temp24_1 = HIGHW((rdi_7 * 0x66666667));\n                                    temp25_1 = LOWW((rdi_7 * 0x66666667));\n                                    rdi_7 = ((temp24_1 >> 2) - (rdi_7 >> 0x1f));\n                                    if (r11_6 < r9_2)\n                                    {\n                                        int32_t temp26_1;\n                                        int32_t temp27_1;\n                                        temp26_1 = HIGHW((rcx_5 * 0x66666667));\n                                        temp27_1 = LOWW((rcx_5 * 0x66666667));\n                                        uint32_t rax_52 = (((temp26_1 >> 2) - (rcx_5 >> 0x1f)) * 5);\n                                        int32_t temp28_1;\n                                        int32_t temp29_1;\n                                        temp28_1 = HIGHW((rsi_7 * 0x66666667));\n                                        temp29_1 = LOWW((rsi_7 * 0x66666667));\n                                        uint32_t rax_57 = (((temp28_1 >> 2) - (rsi_7 >> 0x1f)) * 5);\n                                        int32_t temp30_1;\n                                        int32_t temp31_1;\n                                        temp30_1 = HIGHW((rdi_7 * 0x66666667));\n                                        temp31_1 = LOWW((rdi_7 * 0x66666667));\n                                        uint32_t rax_62 = (((temp30_1 >> 2) - (rdi_7 >> 0x1f)) * 5);\n                                        if ((((rcx_5 - (rax_52 + rax_52)) | (rsi_7 - (rax_57 + rax_57))) | (rdi_7 - (rax_62 + rax_62))) == 0)\n                                        {\n                                            int32_t temp32_1 = r15_2;\n                                            r15_2 = (r15_2 - 1);\n                                            if (temp32_1 == 1)\n                                            {\n                                                rbp = var_120_1;\n                                                if ((((rax_29 | r12) | arg2[0xd]) & 1) == 0)\n                                                {\n                                                    *(r9_1 + 8) = 0x77359400;\n                                                    r8_2 = 0x77359400;\n                                                    rax_67 = (rbp & 0xfffffffffffffffe);\n                                                    var_140_1 = true;\n                                                }\n                                                else\n                                                {\n                                                    *(r9_1 + 8) = 0x3b9aca00;\n                                                    rax_67 = rbp;\n                                                    r8_2 = 0x3b9aca00;\n                                                }\n                                                break;\n                                            }\n                                            continue;\n                                        }\n                                    }\n                                    rbp = var_120_1;\n                                    var_140_1 = r11_6 == 0x77359400;\n                                    *(r9_1 + 8) = r11_6;\n                                    rax_67 = ((!var_140_1) & rbp);\n                                    break;\n                                }\n                            }\n                        }\n                        if (r12 <= rbp)\n                        {\n                            if (r14 < r13)\n                            {\n                            label_41010d:\n                                bool cond:8_1 = r12 == rax_67;\n                                if (r12 < rax_67)\n                                {\n                                    goto label_40fea0;\n                                }\n                                if (cond:8_1)\n                                {\n                                    int32_t temp33_1;\n                                    int32_t temp34_1;\n                                    temp33_1 = HIGHW(r15);\n                                    temp34_1 = LOWW(r15);\n                                    if ((r13 - (COMBINE(temp33_1, temp34_1) % r8_2)) > r14)\n                                    {\n                                        goto label_40fea0;\n                                    }\n                                    goto label_410126;\n                                }\n                            label_410126:\n                                var_130 = r8_2;\n                                int64_t var_e8 = rax_29;\n                                int64_t var_e0_1 = rdi_2;\n                                int64_t var_d8_1 = (var_140_1 | r12);\n                                int32_t temp39_1;\n                                int32_t temp40_1;\n                                temp39_1 = HIGHW((r8_2 * 0x38e38e39));\n                                temp40_1 = LOWW((r8_2 * 0x38e38e39));\n                                int64_t var_d0_1 = ((temp39_1 >> 1) + r14);\n                                int32_t rax_76 = arg2[3];\n                                var_148_1 = rax_76;\n                                var_148_1 = r9_1;\n                                var_140_1 = &var_e8;\n                                int64_t* rsi_9 = &var_e8;\n                                int32_t rax_78;\n                                int32_t r8_3;\n                                int64_t r9_3;\n                                if ((rax_76 & 0xf000) == 0xa000)\n                                {\n                                    r9_3 = var_148_1;\n                                    r8_3 = var_130;\n                                    rax_78 = sub_410ab0(arg1, rsi_9) != 0;\n                                }\n                                else\n                                {\n                                    r8_3 = var_130;\n                                    r9_3 = var_148_1;\n                                    rax_78 = sub_410aa0(arg1, rsi_9) != 0;\n                                }\n                                if (rax_78 == 0)\n                                {\n                                    var_130 = r8_3;\n                                    void var_c8;\n                                    struct stat* rdx_50 = &var_c8;\n                                    int32_t rax_80 = arg2[3];\n                                    var_148_1 = rax_80;\n                                    var_148_1 = r9_3;\n                                    int32_t r8_4;\n                                    int32_t r10_3;\n                                    if ((rax_80 & 0xf000) == 0xa000)\n                                    {\n                                        r9_1 = var_148_1;\n                                        r8_4 = var_130;\n                                        r10_3 = __lxstat(1, arg1, rdx_50);\n                                    }\n                                    else\n                                    {\n                                        r8_4 = var_130;\n                                        r9_1 = var_148_1;\n                                        r10_3 = __xstat(1, arg1, rdx_50);\n                                    }\n                                    int64_t var_70;\n                                    int64_t rax_86 = var_70;\n                                    int64_t var_68;\n                                    int64_t rcx_7 = var_68;\n                                    int64_t rdi_11 = r14;\n                                    if ((((rdi_11 ^ rcx_7) | (rax_86 ^ r12)) | r10_3) == 0)\n                                    {\n                                        goto label_410290;\n                                    }\n                                    int64_t var_d0_2 = rdi_11;\n                                    int64_t var_d8_2 = r12;\n                                    int128_t* rsi_14 = var_140_1;\n                                    var_130 = r8_4;\n                                    int64_t* var_138_1;\n                                    var_138_1 = r10_3;\n                                    var_148_1 = r9_1;\n                                    int32_t r10_4;\n                                    if ((arg2[3] & 0xf000) == 0xa000)\n                                    {\n                                        sub_410ab0(arg1, rsi_14);\n                                        r9_1 = var_148_1;\n                                        r10_4 = var_138_1;\n                                        r8_4 = var_130;\n                                    }\n                                    else\n                                    {\n                                        sub_410aa0(arg1, rsi_14);\n                                        r8_4 = var_130;\n                                        r10_4 = var_138_1;\n                                        r9_1 = var_148_1;\n                                    }\n                                    if (r10_4 != 0)\n                                    {\n                                        goto label_410268;\n                                    }\n                                    rax_86 = var_70;\n                                    rcx_7 = var_68;\n                                label_410290:\n                                    int32_t rcx_8 = (rcx_7 + ((rax_86 & 1) * 0x3b9aca00));\n                                    int32_t temp41_1;\n                                    int32_t temp42_1;\n                                    temp41_1 = HIGHW((rcx_8 * 0x66666667));\n                                    temp42_1 = LOWW((rcx_8 * 0x66666667));\n                                    uint32_t rax_93 = (((temp41_1 >> 2) - (rcx_8 >> 0x1f)) * 5);\n                                    if ((rcx_8 == (rax_93 + rax_93) && r8_4 == 0xa))\n                                    {\n                                        rbx_1 = 0xa;\n                                    }\n                                    int64_t rax_101;\n                                    if (((rcx_8 == (rax_93 + rax_93) && r8_4 == 0xa) || rcx_8 != (rax_93 + rax_93)))\n                                    {\n                                        rax_101 = -1;\n                                    }\n                                    if ((rcx_8 == (rax_93 + rax_93) && r8_4 != 0xa))\n                                    {\n                                        int32_t rsi_15 = 9;\n                                        rbx_1 = 0xa;\n                                        while (true)\n                                        {\n                                            int32_t temp49_1;\n                                            int32_t temp50_1;\n                                            temp49_1 = HIGHW((rcx_8 * 0x66666667));\n                                            temp50_1 = LOWW((rcx_8 * 0x66666667));\n                                            int32_t rdx_60 = ((temp49_1 >> 2) - (rcx_8 >> 0x1f));\n                                            rcx_8 = rdx_60;\n                                            int32_t temp51_1;\n                                            int32_t temp52_1;\n                                            temp51_1 = HIGHW((rdx_60 * 0x66666667));\n                                            temp52_1 = LOWW((rdx_60 * 0x66666667));\n                                            uint32_t rax_99 = (((temp51_1 >> 2) - (rcx_8 >> 0x1f)) * 5);\n                                            if (rcx_8 == (rax_99 + rax_99))\n                                            {\n                                                int32_t temp53_1 = rsi_15;\n                                                rsi_15 = (rsi_15 - 1);\n                                                if (temp53_1 == 1)\n                                                {\n                                                    rax_101 = -2;\n                                                    rbx_1 = 0x77359400;\n                                                    break;\n                                                }\n                                                uint32_t rbx_2 = (rbx_1 * 5);\n                                                rbx_1 = (rbx_2 + rbx_2);\n                                                if (rbx_1 != r8_4)\n                                                {\n                                                    continue;\n                                                }\n                                            }\n                                            int32_t rax_114;\n                                            rax_114 = rbx_1 == 0x77359400;\n                                            rax_101 = (!rax_114);\n                                            break;\n                                        }\n                                    }\n                                    rbp = (rbp & rax_101);\n                                    int32_t temp43_1;\n                                    int32_t temp44_1;\n                                    temp43_1 = HIGHW(r15);\n                                    temp44_1 = LOWW(r15);\n                                    r15 = (r13 - (COMBINE(temp43_1, temp44_1) % rbx_1));\n                                    goto label_410330;\n                                }\n                            label_410268:\n                                rbx_1 = 0xfffffffe;\n                            }\n                            else if (var_148_1 == 0)\n                            {\n                                goto label_41010d;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_410330:\n                        *(r9_1 + 8) = rbx_1;\n                        *(r9_1 + 0xc) = 1;\n                    label_40fe50:\n                        bool cond:2_1 = rbp != r12;\n                        if (rbp > r12)\n                        {\n                        label_40fea0:\n                            rbx_1 = 0xffffffff;\n                        }\n                        else\n                        {\n                            rbx_1 = 1;\n                            if ((!cond:2_1))\n                            {\n                                bool cond:3_1 = r15 < r14;\n                                if (r15 > r14)\n                                {\n                                    goto label_40fea0;\n                                }\n                                rbx_1 = cond:3_1;\n                                rbx_1 = rbx_1;\n                            }\n                        }\n                    }\n                }\n            }\n            if ((rdx != 0 || (rdx == 0 && rax_17 != 0)))\n            {\n                int64_t rsi = data_621b18;\n                int64_t rdi_13;\n                if (rsi == 0)\n                {\n                    int64_t rax_105 = malloc(0x10);\n                    rsi = rax_105;\n                    data_621b18 = rax_105;\n                    if (rax_105 == 0)\n                    {\n                        rdi_13 = data_621b20;\n                    label_4103a5:\n                        var_f8 = *arg2;\n                        int64_t rax_108 = sub_40b8e0(rdi_13, &var_f8);\n                        rdx_5 = &var_f8;\n                        r9_1 = rax_108;\n                        if (rax_108 == 0)\n                        {\n                            goto label_40fee4;\n                        }\n                    label_40fe1d:\n                        int32_t rdi_1 = *(r9_1 + 8);\n                        var_130 = rdi_1;\n                        if (*(r9_1 + 0xc) == 0)\n                        {\n                            goto label_40ff07;\n                        }\n                        int32_t rax_6;\n                        rax_6 = rdi_1 == 0x77359400;\n                        rbp = (rbp & (!rax_6));\n                        int32_t temp8_1;\n                        int32_t temp9_1;\n                        temp8_1 = HIGHW(r15);\n                        temp9_1 = LOWW(r15);\n                        r15 = (r13 - (COMBINE(temp8_1, temp9_1) % rdi_1));\n                        goto label_40fe50;\n                    }\n                    *(rax_105 + 8) = 0x77359400;\n                    *(rax_105 + 0xc) = 0;\n                }\n                *rsi = *arg2;\n                int64_t rax_5 = sub_40c2f0(rdx, rsi);\n                r9_1 = rax_5;\n                if (rax_5 == 0)\n                {\n                    rdi_13 = data_621b20;\n                    if (rdi_13 == 0)\n                    {\n                        goto label_40fedf;\n                    }\n                    goto label_4103a5;\n                }\n                if (data_621b18 == rax_5)\n                {\n                    data_621b18 = 0;\n                }\n                goto label_40fe1d;\n            }\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_4104d0",
            "funcStartAddr": "0x4104d0",
            "funcEndAddr": "0x41059e",
            "decompiledFuncCode": "__syscall_slong_t sub_4104d0(void* arg1, int64_t* arg2)\n{\n    struct timespec* rbx = *arg2;\n    __syscall_slong_t rax = rbx->tv_nsec;\n    int64_t rdx = *(rbx + 0x18);\n    if (rax == 0x3ffffffe)\n    {\n        rax = 1;\n        if (rdx == 0x3ffffffe)\n        {\n            goto label_410515;\n        }\n        rax = *(arg1 + 0x50);\n        rbx->tv_sec = *(arg1 + 0x48);\n        rbx->tv_nsec = rax;\n    }\n    else\n    {\n        if (rax == 0x3fffffff)\n        {\n            if (rdx == 0x3fffffff)\n            {\n                *arg2 = 0;\n                rax = 0;\n            label_410515:\n                return rax;\n            }\n            rax = sub_412f80(rbx);\n            rdx = *(rbx + 0x18);\n        }\n        if (((rax != 0x3fffffff && rdx == 0x3ffffffe) || (rax == 0x3fffffff && rdx == 0x3ffffffe)))\n        {\n            int64_t rax_1 = *(arg1 + 0x60);\n            *(rbx + 0x10) = *(arg1 + 0x58);\n            *(rbx + 0x18) = rax_1;\n            rax = 0;\n            goto label_410515;\n        }\n    }\n    if (rdx == 0x3fffffff)\n    {\n        char var_19 = 0;\n        sub_412f80(&rbx[1]);\n        return 0;\n    }\n    goto label_410515;\n}\n\n"
        },
        {
            "funcName": "sub_4105a0",
            "funcStartAddr": "0x4105a0",
            "funcEndAddr": "0x410649",
            "decompiledFuncCode": "uint64_t sub_4105a0(int64_t* arg1)\n{\n    int64_t r9 = arg1[1];\n    int64_t rsi = (r9 - 0x3ffffffe);\n    if ((rsi <= 1 || (rsi > 1 && r9 <= 0x3b9ac9ff)))\n    {\n        int64_t rdx_1 = arg1[3];\n        int64_t r8_1 = (rdx_1 - 0x3ffffffe);\n        if ((r8_1 <= 1 || (r8_1 > 1 && rdx_1 <= 0x3b9ac9ff)))\n        {\n            int32_t rcx = 0;\n            int32_t r10 = 0;\n            if (rsi <= 1)\n            {\n                *arg1 = 0;\n                r10 = 1;\n                rcx = r9 == 0x3ffffffe;\n            }\n            if (r8_1 <= 1)\n            {\n                arg1[2] = 0;\n                r10 = 1;\n                int32_t rax_1;\n                rax_1 = rdx_1 == 0x3ffffffe;\n                rcx = (rcx + rax_1);\n            }\n            int32_t rax_2;\n            rax_2 = rcx == 1;\n            return (rax_2 + r10);\n        }\n    }\n    *__errno_location() = 0x16;\n    return 0xffffffff;\n}\n\n"
        },
        {
            "funcName": "sub_410650",
            "funcStartAddr": "0x410650",
            "funcEndAddr": "0x41065a",
            "decompiledFuncCode": "int64_t sub_410650(int32_t arg1, char* arg2, struct timespec* arg3)\n{\n    /* tailcall */\n    return utimensat(arg1, arg2, arg3, 0x100);\n}\n\n"
        },
        {
            "funcName": "sub_410660",
            "funcStartAddr": "0x410660",
            "funcEndAddr": "0x410a9e",
            "decompiledFuncCode": "uint64_t sub_410660(int32_t arg1, char* arg2, int128_t* arg3)\n{\n    int128_t* var_120;\n    int32_t r13;\n    if (arg3 == 0)\n    {\n        var_120 = nullptr;\n        r13 = 0;\n    }\n    else\n    {\n        int128_t var_118;\n        var_120 = &var_118;\n        var_118 = *arg3;\n        int128_t var_108_1 = arg3[1];\n        int32_t rax_1 = sub_4105a0(&var_118);\n        r13 = rax_1;\n        if (rax_1 < 0)\n        {\n            goto label_410a53;\n        }\n    }\n    int32_t r12_1;\n    if ((arg1 < 0 && arg2 == 0))\n    {\n        *__errno_location() = 9;\n    label_410a53:\n        r12_1 = -1;\n    }\n    if ((arg1 >= 0 || (arg1 < 0 && arg2 != 0)))\n    {\n        if (data_621b2c < 0)\n        {\n            goto label_4106f5;\n        }\n        void var_b8;\n        int64_t var_70;\n        int64_t var_68;\n        int64_t var_60;\n        int64_t var_58;\n        int128_t* rsi;\n        if (r13 != 2)\n        {\n            rsi = var_120;\n        }\n        else\n        {\n            struct stat* rdx_7 = &var_b8;\n            int32_t rax_19;\n            if (arg1 < 0)\n            {\n                rax_19 = __xstat(1, arg2, rdx_7) != 0;\n            }\n            else\n            {\n                rax_19 = __fxstat(1, arg1, rdx_7) != 0;\n            }\n            if (rax_19 != 0)\n            {\n                goto label_410a53;\n            }\n            rsi = var_120;\n            if (*(rsi + 8) == 0x3ffffffe)\n            {\n                r13 = 3;\n                *rsi = var_70;\n                *(rsi + 8) = var_68;\n            }\n            else\n            {\n                r13 = 3;\n                if (*(rsi + 0x18) == 0x3ffffffe)\n                {\n                    *(rsi + 0x18) = var_58;\n                    rsi[1] = var_60;\n                }\n            }\n        }\n        int32_t rax_3;\n        int32_t rax_21;\n        bool cond:0_1;\n        if (arg1 < 0)\n        {\n            rax_21 = utimensat(0xffffff9c, arg2, rsi, 0);\n            r12_1 = rax_21;\n            cond:0_1 = rax_21 != 0;\n        }\n        else\n        {\n            rax_3 = futimens(arg1, rsi);\n            r12_1 = rax_3;\n            cond:0_1 = rax_3 != 0;\n        }\n        if (((arg1 < 0 && rax_21 > 0) || (arg1 >= 0 && rax_3 > 0)))\n        {\n            *__errno_location() = 0x26;\n        label_4106f5:\n            data_621b2c = 0xffffffff;\n            data_621b28 = 0xffffffff;\n            if (r13 == 0)\n            {\n            label_410760:\n                int128_t* rsi_3 = var_120;\n                struct timeval* rdx_5;\n                int64_t* r13_1;\n                if (rsi_3 == 0)\n                {\n                label_410830:\n                    r13_1 = nullptr;\n                    rdx_5 = nullptr;\n                    if (arg1 < 0)\n                    {\n                        goto label_410847;\n                    }\n                    goto label_4107d0;\n                }\n                int64_t rdi_3 = *(rsi_3 + 8);\n                int64_t var_f8;\n                r13_1 = &var_f8;\n                var_f8 = *rsi_3;\n                int64_t rax_9;\n                int64_t rdx_1;\n                rdx_1 = HIGHD((rdi_3 * 0x20c49ba5e353f7cf));\n                rax_9 = LOWD((rdi_3 * 0x20c49ba5e353f7cf));\n                int64_t rsi_4 = *(rsi_3 + 0x18);\n                int64_t var_e8_1 = rsi_3[1];\n                int64_t var_f0_1 = ((rdx_1 >> 7) - (rdi_3 >> 0x3f));\n                int64_t rax_12;\n                int64_t rdx_4;\n                rdx_4 = HIGHD((rsi_4 * 0x20c49ba5e353f7cf));\n                rax_12 = LOWD((rsi_4 * 0x20c49ba5e353f7cf));\n                rdx_5 = &var_f8;\n                int64_t var_e0_1 = ((rdx_4 >> 7) - (rsi_4 >> 0x3f));\n                if (arg1 < 0)\n                {\n                label_410847:\n                    r12_1 = futimesat(0xffffff9c, arg2, rdx_5);\n                }\n                else\n                {\n                label_4107d0:\n                    int32_t rax_13 = futimesat(arg1, nullptr, rdx_5);\n                    r12_1 = rax_13;\n                    int64_t var_d8;\n                    if (rax_13 != 0)\n                    {\n                        r12_1 = -1;\n                        if (arg2 != 0)\n                        {\n                            int128_t* rax_14 = var_120;\n                            int64_t* rsi_6 = nullptr;\n                            if (rax_14 != 0)\n                            {\n                                rsi_6 = &var_d8;\n                                var_d8 = *rax_14;\n                                int64_t var_d0_1 = rax_14[1];\n                            }\n                            r12_1 = utime(arg2, rsi_6);\n                        }\n                    }\n                    else if (r13_1 != 0)\n                    {\n                        char* rbp;\n                        rbp = r13_1[1] > 0x7a11f;\n                        int64_t r14;\n                        r14 = r13_1[3] > 0x7a11f;\n                        if (((rbp != 0 || (rbp == 0 && r14 != 0)) && __fxstat(1, arg1, &var_b8) == 0))\n                        {\n                            int64_t rdx_12;\n                            rdx_12 = (var_60 - r13_1[2]) == 1;\n                            var_d8 = *r13_1;\n                            int128_t var_c8_1 = *(r13_1 + 0x10);\n                            char r14_1 = (r14 & rdx_12);\n                            if (((var_70 - *r13_1) == 1 && (rbp != 0 && var_68 == 0)))\n                            {\n                                int64_t var_d0_2 = 0;\n                                if (r14_1 == 0)\n                                {\n                                    goto label_4109f0;\n                                }\n                                if (var_58 == 0)\n                                {\n                                    goto label_410a90;\n                                }\n                                goto label_4109f0;\n                            }\n                            if ((r14_1 != 0 && var_58 == 0))\n                            {\n                            label_410a90:\n                                *var_c8_1[8] = 0;\n                            label_4109f0:\n                                futimesat(arg1, nullptr, &var_d8);\n                            }\n                            r12_1 = 0;\n                        }\n                    }\n                }\n            }\n            else\n            {\n                if (r13 != 3)\n                {\n                    struct stat* rdx = &var_b8;\n                    int32_t rax_5;\n                    if (arg1 < 0)\n                    {\n                        rax_5 = __xstat(1, arg2, rdx) != 0;\n                    }\n                    else\n                    {\n                        rax_5 = __fxstat(1, arg1, rdx) != 0;\n                    }\n                    if (rax_5 != 0)\n                    {\n                        goto label_410a53;\n                    }\n                }\n                if (var_120 == 0)\n                {\n                    goto label_410830;\n                }\n                r12_1 = 0;\n                if (sub_4104d0(&var_b8, &var_120) == 0)\n                {\n                    goto label_410760;\n                }\n            }\n        }\n        if (((arg1 < 0 && rax_21 <= 0) || (arg1 >= 0 && rax_3 <= 0)))\n        {\n            if (cond:0_1)\n            {\n                if (*__errno_location() == 0x26)\n                {\n                    goto label_4106f5;\n                }\n                goto label_410913;\n            }\n        label_410913:\n            data_621b2c = 1;\n        }\n    }\n    if (((arg1 < 0 && arg2 == 0) || ((arg1 >= 0 || (arg1 < 0 && arg2 != 0)) && data_621b2c >= 0)))\n    {\n        return r12_1;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_410aa0",
            "funcStartAddr": "0x410aa0",
            "funcEndAddr": "0x410ab0",
            "decompiledFuncCode": "int64_t sub_410aa0(char* arg1, int128_t* arg2)\n{\n    /* tailcall */\n    return sub_410660(0xffffffff, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_410ab0",
            "funcStartAddr": "0x410ab0",
            "funcEndAddr": "0x410cf8",
            "decompiledFuncCode": "uint64_t sub_410ab0(char* arg1, int128_t* arg2)\n{\n    int128_t* var_d0;\n    int32_t rbp_2;\n    void var_a8;\n    int128_t* rdx_1;\n    int32_t rbx;\n    if (arg2 == 0)\n    {\n        rdx_1 = nullptr;\n        rbx = 0;\n        var_d0 = nullptr;\n        if (data_621b28 >= 0)\n        {\n            goto label_410b18;\n        }\n        data_621b28 = 0xffffffff;\n    label_410bd2:\n        if (__lxstat(1, arg1, &var_a8) != 0)\n        {\n            goto label_410be0;\n        }\n    }\n    else\n    {\n        int128_t var_c8;\n        var_d0 = &var_c8;\n        var_c8 = *arg2;\n        int128_t var_b8_1 = arg2[1];\n        int32_t rax_1 = sub_4105a0(&var_c8);\n        rbx = rax_1;\n        if (rax_1 < 0)\n        {\n            goto label_410be0;\n        }\n        if (data_621b28 >= 0)\n        {\n            if (rbx == 2)\n            {\n                if (__lxstat(1, arg1, &var_a8) != 0)\n                {\n                    goto label_410be0;\n                }\n                rdx_1 = var_d0;\n                if (*(rdx_1 + 8) == 0x3ffffffe)\n                {\n                    rbx = 3;\n                    int64_t var_60;\n                    *rdx_1 = var_60;\n                    int64_t var_58;\n                    *(rdx_1 + 8) = var_58;\n                }\n                else\n                {\n                    rbx = 3;\n                    if (*(rdx_1 + 0x18) == 0x3ffffffe)\n                    {\n                        int64_t var_48;\n                        *(rdx_1 + 0x18) = var_48;\n                        int64_t var_50;\n                        rdx_1[1] = var_50;\n                    }\n                }\n                goto label_410b18;\n            }\n            rdx_1 = var_d0;\n        label_410b18:\n            int32_t rax_3 = utimensat(0xffffff9c, arg1, rdx_1, 0x100);\n            bool cond:0_1 = rax_3 != 0;\n            if (rax_3 > 0)\n            {\n                *__errno_location() = 0x26;\n            }\n            else\n            {\n                int32_t* rax_16;\n                if (cond:0_1)\n                {\n                    rax_16 = __errno_location();\n                }\n                if (((!cond:0_1) || (cond:0_1 && *rax_16 != 0x26)))\n                {\n                    data_621b2c = 1;\n                    data_621b28 = 1;\n                    return rax_3;\n                }\n            }\n            goto label_410b32;\n        }\n    label_410b32:\n        data_621b28 = 0xffffffff;\n        if (rbx == 0)\n        {\n            goto label_410bd2;\n        }\n        if (rbx != 3)\n        {\n            if (__lxstat(1, arg1, &var_a8) != 0)\n            {\n                goto label_410be0;\n            }\n            if (var_d0 != 0)\n            {\n                goto label_410b5f;\n            }\n        }\n        else if (var_d0 != 0)\n        {\n        label_410b5f:\n            rbp_2 = 0;\n            if (sub_4104d0(&var_a8, &var_d0) != 0)\n            {\n                goto label_410b9f;\n            }\n        }\n    }\n    int32_t var_90;\n    if ((var_90 & 0xf000) != 0xa000)\n    {\n        rbp_2 = sub_410660(0xffffffff, arg1, var_d0);\n    label_410b9f:\n        return rbp_2;\n    }\n    *__errno_location() = 0x26;\nlabel_410be0:\n    rbp_2 = -1;\n    goto label_410b9f;\n}\n\n"
        },
        {
            "funcName": "sub_410d00",
            "funcStartAddr": "0x40303d",
            "funcEndAddr": "0x4110dd",
            "decompiledFuncCode": "int64_t sub_410d00(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_41a212, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4110e0",
            "funcStartAddr": "0x4110e0",
            "funcEndAddr": "0x411100",
            "decompiledFuncCode": "int64_t sub_4110e0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_410d00(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_411100",
            "funcStartAddr": "0x411100",
            "funcEndAddr": "0x411160",
            "decompiledFuncCode": "int64_t sub_411100(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_410d00(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_411160",
            "funcStartAddr": "0x411160",
            "funcEndAddr": "0x41121c",
            "decompiledFuncCode": "int64_t sub_411160(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_410d00(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_411220",
            "funcStartAddr": "0x411220",
            "funcEndAddr": "0x411294",
            "decompiledFuncCode": "int64_t sub_411220()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_4112a0",
            "funcStartAddr": "0x4112a0",
            "funcEndAddr": "0x4112d8",
            "decompiledFuncCode": "uint64_t sub_4112a0()\n{\n    if (data_621b31 == 0)\n    {\n        int64_t rax_1 = geteuid();\n        data_621b31 = 1;\n        rax_1 = rax_1 == 0;\n        data_621b30 = rax_1;\n        return rax_1;\n    }\n    return data_621b30;\n}\n\n"
        },
        {
            "funcName": "sub_4112e0",
            "funcStartAddr": "0x4112e0",
            "funcEndAddr": "0x4112fa",
            "decompiledFuncCode": "int64_t sub_4112e0(size_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_411530();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_411340",
            "funcStartAddr": "0x411340",
            "funcEndAddr": "0x411376",
            "decompiledFuncCode": "int64_t sub_411340(int64_t arg1, size_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_411530();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_41148a",
            "funcStartAddr": "0x41148a",
            "funcEndAddr": "0x411490",
            "decompiledFuncCode": "int64_t sub_41148a() __noreturn\n{\n    sub_411530();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_411490",
            "funcStartAddr": "0x411490",
            "funcEndAddr": "0x4114a7",
            "decompiledFuncCode": "int64_t sub_411490(size_t arg1)\n{\n    /* tailcall */\n    return memset(sub_4112e0(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_4114b0",
            "funcStartAddr": "0x4114b0",
            "funcEndAddr": "0x4114de",
            "decompiledFuncCode": "int64_t sub_4114b0(size_t arg1, size_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_411530();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4114e0",
            "funcStartAddr": "0x4114e0",
            "funcEndAddr": "0x411508",
            "decompiledFuncCode": "int64_t sub_4114e0(int64_t arg1, size_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_4112e0(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_411510",
            "funcStartAddr": "0x411510",
            "funcEndAddr": "0x411523",
            "decompiledFuncCode": "int64_t sub_411510(char* arg1)\n{\n    /* tailcall */\n    return sub_4114e0(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_411530",
            "funcStartAddr": "0x411530",
            "funcEndAddr": "0x411561",
            "decompiledFuncCode": "int64_t sub_411530() __noreturn\n{\n    error(data_61f468, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_411570",
            "funcStartAddr": "0x411570",
            "funcEndAddr": "0x411994",
            "decompiledFuncCode": "uint64_t sub_411570(char* arg1, int64_t* arg2, int32_t arg3, uint64_t* arg4, \n    char* arg5)\n{\n    if (arg3 > 0x24)\n    {\n        __assert_fail(\"0 <= strtol_base && strtol_base \u2026\", \"lib/xstrtol.c\", 0x60, \"xstrtoul\");\n        /* no return */\n    }\n    int64_t* r15 = arg2;\n    void var_40;\n    if (arg2 == 0)\n    {\n        r15 = &var_40;\n    }\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char rbx = *arg1;\n    uint16_t* rsi = *__ctype_b_loc();\n    char* rax_2 = arg1;\n    while ((*(&rsi[rbx] + 1) & 0x20) != 0)\n    {\n        rax_2 = &rax_2[1];\n        rbx = *rax_2;\n    }\n    int32_t rbp_1;\n    if (rbx == 0x2d)\n    {\n    label_411632:\n        rbp_1 = 4;\n    }\n    else\n    {\n        char* r8 = *r15;\n        uint64_t rbx_1 = strtoul(arg1, r15, arg3);\n        int32_t var_58;\n        void* r8_1;\n        uint32_t r12_1;\n        if (r8 == arg1)\n        {\n            var_58 = r8;\n            if (arg5 == 0)\n            {\n                goto label_411632;\n            }\n            r12_1 = *arg1;\n            if (r12_1 == 0)\n            {\n                goto label_411632;\n            }\n            rbp_1 = 0;\n            rbx_1 = 1;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) == 0)\n            {\n                goto label_411632;\n            }\n        label_41166f:\n            uint64_t rdx_1 = (r12_1 - 0x45);\n            int64_t rdx_3;\n            int32_t rsi_3;\n            if (rdx_1 <= 0x2f)\n            {\n                var_58 = rdx_1;\n                if ((!(TEST_BITQ(0x814400308945, rdx_1))))\n                {\n                    goto label_4116d0;\n                }\n                if (strchr(arg5, 0x30) == 0)\n                {\n                    goto label_4116d0;\n                }\n                char rax_8 = *(r8_1 + 1);\n                if (rax_8 == 0x44)\n                {\n                label_4118f8:\n                    rsi_3 = 2;\n                    rdx_3 = 0x3e8;\n                    goto label_4116da;\n                }\n                if (rax_8 == 0x69)\n                {\n                    rdx_3 = 0x400;\n                    int32_t rsi_6;\n                    rsi_6 = *(r8_1 + 2) == 0x42;\n                    rsi_3 = ((rsi_6 + rsi_6) + 1);\n                    goto label_4116da;\n                }\n                uint64_t rdx_2 = var_58;\n                if (rax_8 == 0x42)\n                {\n                    goto label_4118f8;\n                }\n                int32_t r9_1;\n                switch (rdx_2)\n                {\n                    case 0:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_41187b:\n                        int64_t rcx_6 = rdx_3;\n                        int32_t rdi_8 = 6;\n                        r9_1 = 0;\n                        int32_t temp15_1;\n                        do\n                        {\n                            uint64_t rax_28;\n                            int64_t rdx_11;\n                            rdx_11 = HIGHD((rbx_1 * rcx_6));\n                            rax_28 = LOWD((rbx_1 * rcx_6));\n                            bool o_8 = ((rbx_1 * rcx_6) >> 0x40) != 0;\n                            rbx_1 = rax_28;\n                            if (o_8)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp15_1 = rdi_8;\n                            rdi_8 = (rdi_8 - 1);\n                        } while (temp15_1 != 1);\n                        goto label_4117d4;\n                    }\n                    case 1:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 7:\n                    case 9:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xe:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1f:\n                    case 0x20:\n                    case 0x21:\n                    case 0x23:\n                    case 0x24:\n                    case 0x25:\n                    case 0x27:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    {\n                        goto label_411775;\n                    }\n                    case 2:\n                    case 0x22:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4118b3:\n                        int64_t rcx_7 = rdx_3;\n                        int64_t rax_30;\n                        int64_t rdx_12;\n                        rdx_12 = HIGHD((rbx_1 * rcx_7));\n                        rax_30 = LOWD((rbx_1 * rcx_7));\n                        int64_t rax_31;\n                        if (((rbx_1 * rcx_7) >> 0x40) == 0)\n                        {\n                            int64_t rdx_13;\n                            rdx_13 = HIGHD((rax_30 * rcx_7));\n                            rax_31 = LOWD((rax_30 * rcx_7));\n                            if (((rax_30 * rcx_7) >> 0x40) == 0)\n                            {\n                                uint64_t rax_32;\n                                int64_t rdx_14;\n                                rdx_14 = HIGHD((rax_31 * rcx_7));\n                                rax_32 = LOWD((rax_31 * rcx_7));\n                                if (((rax_31 * rcx_7) >> 0x40) == 0)\n                                {\n                                    rbx_1 = rax_32;\n                                    rbp_1 = (rbp_1 | 0);\n                                }\n                            }\n                        }\n                        if (((((rbx_1 * rcx_7) >> 0x40) != 0 || (((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) != 0)) || ((((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) == 0) && ((rax_31 * rcx_7) >> 0x40) != 0)))\n                        {\n                            rbx_1 = -1;\n                            rbp_1 = (rbp_1 | 1);\n                        }\n                        goto label_41171d;\n                    }\n                    case 6:\n                    case 0x26:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_41173f:\n                        uint64_t rax_15;\n                        int64_t rdx_6;\n                        rdx_6 = HIGHD((rbx_1 * rdx_3));\n                        rax_15 = LOWD((rbx_1 * rdx_3));\n                        bool o_3 = ((rbx_1 * rdx_3) >> 0x40) != 0;\n                        rbx_1 = rax_15;\n                        if ((!o_3))\n                        {\n                            goto label_41171d;\n                        }\n                        goto label_411747;\n                    }\n                    case 8:\n                    case 0x28:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4116fe:\n                        int64_t rcx_1 = rdx_3;\n                        int64_t rax_10;\n                        int64_t rdx_4;\n                        rdx_4 = HIGHD((rbx_1 * rcx_1));\n                        rax_10 = LOWD((rbx_1 * rcx_1));\n                        if (((rbx_1 * rcx_1) >> 0x40) == 0)\n                        {\n                            uint64_t rax_11;\n                            int64_t rdx_5;\n                            rdx_5 = HIGHD((rax_10 * rcx_1));\n                            rax_11 = LOWD((rax_10 * rcx_1));\n                            if (((rax_10 * rcx_1) >> 0x40) != 0)\n                            {\n                                goto label_411747;\n                            }\n                            rbx_1 = rax_11;\n                            goto label_41171d;\n                        }\n                    label_411747:\n                        rbp_1 = 1;\n                        rbx_1 = -1;\n                        goto label_41171d;\n                    }\n                    case 0xb:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_411848:\n                        int64_t rcx_5 = rdx_3;\n                        int32_t rdi_7 = 5;\n                        r9_1 = 0;\n                        int32_t temp14_1;\n                        do\n                        {\n                            uint64_t rax_26;\n                            int64_t rdx_10;\n                            rdx_10 = HIGHD((rbx_1 * rcx_5));\n                            rax_26 = LOWD((rbx_1 * rcx_5));\n                            bool o_7 = ((rbx_1 * rcx_5) >> 0x40) != 0;\n                            rbx_1 = rax_26;\n                            if (o_7)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp14_1 = rdi_7;\n                            rdi_7 = (rdi_7 - 1);\n                        } while (temp14_1 != 1);\n                        goto label_4117d4;\n                    }\n                    case 0xf:\n                    case 0x2f:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_411818:\n                        int64_t rcx_4 = rdx_3;\n                        int32_t rdi_6 = 4;\n                        r9_1 = 0;\n                        int32_t temp13_1;\n                        do\n                        {\n                            uint64_t rax_24;\n                            int64_t rdx_9;\n                            rdx_9 = HIGHD((rbx_1 * rcx_4));\n                            rax_24 = LOWD((rbx_1 * rcx_4));\n                            bool o_6 = ((rbx_1 * rcx_4) >> 0x40) != 0;\n                            rbx_1 = rax_24;\n                            if (o_6)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp13_1 = rdi_6;\n                            rdi_6 = (rdi_6 - 1);\n                        } while (temp13_1 != 1);\n                        goto label_4117d4;\n                    }\n                    case 0x14:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4117e6:\n                        int64_t rcx_3 = rdx_3;\n                        int32_t rdi_5 = 8;\n                        r9_1 = 0;\n                        int32_t temp12_1;\n                        do\n                        {\n                            uint64_t rax_22;\n                            int64_t rdx_8;\n                            rdx_8 = HIGHD((rbx_1 * rcx_3));\n                            rax_22 = LOWD((rbx_1 * rcx_3));\n                            bool o_5 = ((rbx_1 * rcx_3) >> 0x40) != 0;\n                            rbx_1 = rax_22;\n                            if (o_5)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp12_1 = rdi_5;\n                            rdi_5 = (rdi_5 - 1);\n                        } while (temp12_1 != 1);\n                        goto label_4117d4;\n                    }\n                    case 0x15:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4117ab:\n                        int64_t rcx_2 = rdx_3;\n                        int32_t rdi_4 = 7;\n                        r9_1 = 0;\n                        int32_t temp11_1;\n                        do\n                        {\n                            uint64_t rax_20;\n                            int64_t rdx_7;\n                            rdx_7 = HIGHD((rbx_1 * rcx_2));\n                            rax_20 = LOWD((rbx_1 * rcx_2));\n                            bool o_4 = ((rbx_1 * rcx_2) >> 0x40) != 0;\n                            rbx_1 = rax_20;\n                            if (o_4)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp11_1 = rdi_4;\n                            rdi_4 = (rdi_4 - 1);\n                        } while (temp11_1 != 1);\n                    label_4117d4:\n                        rbp_1 = (rbp_1 | r9_1);\n                        goto label_41171d;\n                    }\n                    case 0x1d:\n                    {\n                        rsi_3 = 1;\n                        break;\n                    }\n                    case 0x1e:\n                    {\n                        rsi_3 = 1;\n                        goto label_41171d;\n                    }\n                }\n            }\n            else\n            {\n            label_4116d0:\n                rsi_3 = 1;\n                rdx_3 = 0x400;\n            label_4116da:\n                char r12_2 = (r12_1 - 0x42);\n                if (r12_2 > 0x35)\n                {\n                    goto label_411775;\n                }\n                switch (r12_2)\n                {\n                    case 0:\n                    {\n                        if ((rbx_1 >> 0x36) != 0)\n                        {\n                            goto label_411747;\n                        }\n                        rbx_1 = (rbx_1 << 0xa);\n                        goto label_41171d;\n                    }\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x22:\n                    case 0x23:\n                    case 0x24:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x2a:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x33:\n                    case 0x34:\n                    {\n                        goto label_411775;\n                    }\n                    case 3:\n                    {\n                        goto label_41187b;\n                    }\n                    case 5:\n                    case 0x25:\n                    {\n                        goto label_4118b3;\n                    }\n                    case 9:\n                    case 0x29:\n                    {\n                        goto label_41173f;\n                    }\n                    case 0xb:\n                    case 0x2b:\n                    {\n                        goto label_4116fe;\n                    }\n                    case 0xe:\n                    {\n                        goto label_411848;\n                    }\n                    case 0x12:\n                    case 0x32:\n                    {\n                        goto label_411818;\n                    }\n                    case 0x17:\n                    {\n                        goto label_4117e6;\n                    }\n                    case 0x18:\n                    {\n                        goto label_4117ab;\n                    }\n                    case 0x21:\n                    {\n                        goto label_41171d;\n                    }\n                    case 0x35:\n                    {\n                        if (rbx_1 < 0)\n                        {\n                            goto label_411747;\n                        }\n                        rbx_1 = (rbx_1 + rbx_1);\n                    label_41171d:\n                        void* r8_2 = (r8_1 + rsi_3);\n                        int32_t rax_13 = (rbp_1 | 2);\n                        *r15 = r8_2;\n                        if (*r8_2 != 0)\n                        {\n                            rbp_1 = rax_13;\n                        }\n                        goto label_411610;\n                    }\n                }\n            }\n            if ((rbx_1 >> 0x37) != 0)\n            {\n                goto label_411747;\n            }\n            rbx_1 = (rbx_1 << 9);\n            goto label_41171d;\n        }\n        int32_t rax_4 = *rax;\n        if (rax_4 == 0)\n        {\n            rbp_1 = 0;\n        }\n        else\n        {\n            rbp_1 = 1;\n            if (rax_4 != 0x22)\n            {\n                goto label_411632;\n            }\n        }\n        if (arg5 == 0)\n        {\n        label_411610:\n            *arg4 = rbx_1;\n        }\n        else\n        {\n            r12_1 = *r8;\n            if (r12_1 == 0)\n            {\n                goto label_411610;\n            }\n            var_58 = r8;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) != 0)\n            {\n                goto label_41166f;\n            }\n        label_411775:\n            *arg4 = rbx_1;\n            rbp_1 = (rbp_1 | 2);\n        }\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_4119a0",
            "funcStartAddr": "0x4119a0",
            "funcEndAddr": "0x411a09",
            "decompiledFuncCode": "uint64_t sub_4119a0()\n{\n    int32_t rbx = 0;\n    char* var_18 = nullptr;\n    uint64_t var_10 = 0;\n    ssize_t rax = __getdelim(&var_18, &var_10, 0xa, stdin);\n    if (rax > 0)\n    {\n        char* rdi_1 = var_18;\n        void* rax_1 = &rdi_1[(rax - 1)];\n        if (*rax_1 == 0xa)\n        {\n            *rax_1 = 0;\n            rdi_1 = var_18;\n        }\n        rbx = rpmatch(rdi_1) > 0;\n    }\n    free(var_18);\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_411a10",
            "funcStartAddr": "0x411a10",
            "funcEndAddr": "0x411b45",
            "decompiledFuncCode": "uint64_t sub_411a10(int32_t arg1, int32_t arg2, int32_t arg3)\n{\n    void* var_58 = &arg_8;\n    int64_t rcx;\n    int64_t var_30 = rcx;\n    int32_t var_60 = 0x10;\n    void var_48;\n    void* var_50 = &var_48;\n    if (arg2 != 0x406)\n    {\n        return fcntl();\n    }\n    int32_t var_60_1 = 0x18;\n    int32_t rax_2;\n    int32_t rax_5;\n    int32_t* rax_15;\n    int32_t rax_17;\n    int32_t rbx;\n    if (data_621b34 < 0)\n    {\n        rax_5 = sub_411a10();\n        rbx = rax_5;\n    }\n    else\n    {\n        rax_2 = fcntl();\n        rbx = rax_2;\n        if (rax_2 < 0)\n        {\n            rax_15 = __errno_location();\n            if (*rax_15 == 0x16)\n            {\n                rax_17 = sub_411a10(arg1, 0, arg3);\n                rbx = rax_17;\n                if (rax_17 >= 0)\n                {\n                    data_621b34 = 0xffffffff;\n                }\n            }\n        }\n    }\n    if (((((data_621b34 >= 0 && rax_2 < 0) && *rax_15 == 0x16) && rax_17 >= 0) || (rax_5 >= 0 && data_621b34 == 0xffffffff)))\n    {\n        int32_t rax_7 = fcntl(rbx, 1);\n        int32_t rax_10;\n        if (rax_7 >= 0)\n        {\n            rax_10 = fcntl(rbx, 2, (rax_7 | 1));\n        }\n        if ((rax_7 < 0 || (rax_7 >= 0 && rax_10 == 0xffffffff)))\n        {\n            int32_t* rax_11 = __errno_location();\n            int32_t rdi_2 = rbx;\n            rbx = -1;\n            int32_t r12_1 = *rax_11;\n            close(rdi_2);\n            *rax_11 = r12_1;\n        }\n    }\n    if ((data_621b34 >= 0 && (rax_2 >= 0 || (rax_2 < 0 && *rax_15 != 0x16))))\n    {\n        data_621b34 = 1;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_411b50",
            "funcStartAddr": "0x411b50",
            "funcEndAddr": "0x411b90",
            "decompiledFuncCode": "int64_t sub_411b50(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_411bc0(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_411b90",
            "funcStartAddr": "0x411b90",
            "funcEndAddr": "0x411bb8",
            "decompiledFuncCode": "int64_t sub_411b90(int32_t* arg1)\n{\n    int64_t rax_1 = 0;\n    if (*(arg1 + 0x28) <= *(arg1 + 0x20))\n    {\n        rax_1 = (*(arg1 + 0x10) - *(arg1 + 8));\n        if ((*arg1 & 0x100) != 0)\n        {\n            rax_1 = (rax_1 + (*(arg1 + 0x58) - *(arg1 + 0x48)));\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_411bc0",
            "funcStartAddr": "0x411bc0",
            "funcEndAddr": "0x411c17",
            "decompiledFuncCode": "off64_t sub_411bc0(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_411c20",
            "funcStartAddr": "0x411c20",
            "funcEndAddr": "0x411cff",
            "decompiledFuncCode": "uint64_t sub_411c20(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_411d00",
            "funcStartAddr": "0x411d00",
            "funcEndAddr": "0x41231c",
            "decompiledFuncCode": "uint64_t sub_411d00(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_411f30;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_411e56;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_411e56;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_411e56:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_411f30:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_411f5e;\n                }\n                *arg5 = r12;\n            label_411f5e:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_411f7c;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_411f7c:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_411f7c;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_411eee;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_411eee:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_412320",
            "funcStartAddr": "0x412320",
            "funcEndAddr": "0x4128e6",
            "decompiledFuncCode": "uint64_t sub_412320(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_41255c;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_4123e8;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_4123e8:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_411c20(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_41aa21;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_411c20(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_41255c;\n                }\n                *arg7 = rdx_2;\n            label_41255c:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_412660;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_41aa21;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_4126d0;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_412660;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_412660;\n                            }\n                            goto label_412621;\n                        }\n                    label_412621:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_411d00(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_41aa22);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_412660:\n                            rdx = &r14_1[1];\n                        label_4124a1:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_41269e;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_41269e:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_41aa40;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_4126d0:\n                                        r14_2 = sub_411d00(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_41278d;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_41278d:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_41255c;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_4123e8;\n        }\n        goto label_4124a1;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_412950",
            "funcStartAddr": "0x412950",
            "funcEndAddr": "0x412968",
            "decompiledFuncCode": "uint64_t sub_412950(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_4129f0",
            "funcStartAddr": "0x4129f0",
            "funcEndAddr": "0x412a6a",
            "decompiledFuncCode": "uint64_t sub_4129f0(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_41aa24[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_412a1a;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_412a1a:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_412fc0() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_412a70",
            "funcStartAddr": "0x412a70",
            "funcEndAddr": "0x412b2d",
            "decompiledFuncCode": "uint64_t sub_412a70(FILE* arg1, char* arg2, int64_t arg3)\n{\n    uint64_t var_800 = 0x7d0;\n    void var_7f8;\n    char* rax;\n    uint16_t x87control;\n    int80_t st0;\n    rax = sub_414470(&var_7f8, &var_800, arg2, arg3, x87control);\n    uint64_t rbx = var_800;\n    uint64_t rax_1;\n    if (rax != 0)\n    {\n        rax_1 = fwrite(rax, 1, rbx, arg1);\n        if (rax_1 < rbx)\n        {\n            rbx = 0xffffffff;\n            if (rax != &var_7f8)\n            {\n                int32_t* rax_3 = __errno_location();\n                int32_t r13_1 = *rax_3;\n                free(rax);\n                *rax_3 = r13_1;\n            }\n        }\n        else\n        {\n            if (rax != &var_7f8)\n            {\n                free(rax);\n            }\n            if (rbx > 0x7fffffff)\n            {\n                *__errno_location() = 0x4b;\n            }\n        }\n    }\n    if ((((rax != 0 && rax_1 >= rbx) && rbx > 0x7fffffff) || rax == 0))\n    {\n        rbx = 0xffffffff;\n        sub_414460(arg1);\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_412b30",
            "funcStartAddr": "0x412b30",
            "funcEndAddr": "0x412b35",
            "decompiledFuncCode": "int64_t sub_412b30(int64_t, int64_t, int32_t arg3, int32_t* arg4)\n{\n    *arg4 = arg3;\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_412b40",
            "funcStartAddr": "0x412b40",
            "funcEndAddr": "0x412b55",
            "decompiledFuncCode": "int64_t sub_412b40(int64_t arg1, int32_t arg2, int32_t arg3)\n{\n    uint64_t rsi = arg3;\n    if (arg2 == 0xffffffff)\n    {\n        /* tailcall */\n        return chmod(arg1, rsi);\n    }\n    /* tailcall */\n    return fchmod(arg2, rsi);\n}\n\n"
        },
        {
            "funcName": "sub_412b60",
            "funcStartAddr": "0x412b60",
            "funcEndAddr": "0x412b82",
            "decompiledFuncCode": "uint64_t sub_412b60(int32_t* arg1, int64_t arg2, int32_t arg3)\n{\n    int32_t rax_1;\n    rax_1 = sub_412b40(arg2, arg3, *arg1) != 0;\n    return (-rax_1);\n}\n\n"
        },
        {
            "funcName": "sub_412b90",
            "funcStartAddr": "0x412b90",
            "funcEndAddr": "0x412b9a",
            "decompiledFuncCode": "int64_t sub_412b90() __noreturn\n{\n    /* tailcall */\n    return sub_4046f0(1);\n}\n\n"
        },
        {
            "funcName": "sub_412ba0",
            "funcStartAddr": "0x412ba0",
            "funcEndAddr": "0x412cb6",
            "decompiledFuncCode": "int64_t sub_412ba0(char* arg1, int64_t* arg2, int64_t arg3, uint64_t arg4)\n{\n    int64_t rbp = arg3;\n    uint64_t rax = strlen(arg1);\n    char* r14 = *arg2;\n    int64_t var_58 = -1;\n    if (r14 != 0)\n    {\n        char var_41_1 = 0;\n        int64_t rbx_1 = 0;\n        while (true)\n        {\n            if (strncmp(r14, arg1, rax) == 0)\n            {\n                if (strlen(r14) == rax)\n                {\n                    var_58 = rbx_1;\n                    break;\n                }\n                if (var_58 == -1)\n                {\n                    var_58 = rbx_1;\n                    rbx_1 = (rbx_1 + 1);\n                    rbp = (rbp + arg4);\n                    r14 = arg2[rbx_1];\n                    if (r14 != 0)\n                    {\n                        continue;\n                    }\n                    goto label_412c7d;\n                }\n                if (arg3 == 0)\n                {\n                    var_41_1 = 1;\n                }\n                else\n                {\n                    char rax_3 = var_41_1;\n                    if (memcmp(((var_58 * arg4) + arg3), rbp, arg4) != 0)\n                    {\n                        rax_3 = 1;\n                    }\n                    var_41_1 = rax_3;\n                }\n            }\n            rbx_1 = (rbx_1 + 1);\n            rbp = (rbp + arg4);\n            r14 = arg2[rbx_1];\n            if (r14 == 0)\n            {\n            label_412c7d:\n                int64_t rax_6 = -2;\n                if (var_41_1 == 0)\n                {\n                    rax_6 = var_58;\n                }\n                var_58 = rax_6;\n                break;\n            }\n        }\n    }\n    return var_58;\n}\n\n"
        },
        {
            "funcName": "sub_412cc0",
            "funcStartAddr": "0x412cc0",
            "funcEndAddr": "0x412d31",
            "decompiledFuncCode": "int64_t sub_412cc0(uint64_t arg1, uint64_t arg2, int64_t arg3)\n{\n    char* rbx;\n    if (arg3 == -1)\n    {\n        rbx = dcgettext(nullptr, \"invalid argument %s for %s\", 5);\n    }\n    else\n    {\n        rbx = dcgettext(nullptr, \"ambiguous argument %s for %s\", 5);\n    }\n    /* tailcall */\n    return error(0, 0, rbx, sub_40e920(0, 8, arg2), sub_40ec30(1, arg1));\n}\n\n"
        },
        {
            "funcName": "sub_412d40",
            "funcStartAddr": "0x412d40",
            "funcEndAddr": "0x412e58",
            "decompiledFuncCode": "char* sub_412d40(int64_t* arg1, int64_t arg2, uint64_t arg3)\n{\n    int64_t r14 = 0;\n    int64_t rbp = arg2;\n    int64_t rbx = 0;\n    fputs_unlocked(dcgettext(nullptr, \"Valid arguments are:\", 5), stderr);\n    uint64_t r12 = *arg1;\n    if (r12 != 0)\n    {\n        do\n        {\n            if ((rbx != 0 && memcmp(r14, rbp, arg3) == 0))\n            {\n                rbx = (rbx + 1);\n                rbp = (rbp + arg3);\n                __fprintf_chk(stderr, 1, \", %s\", sub_40ec50(r12));\n                r12 = arg1[rbx];\n                if (r12 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = (rbx + 1);\n            r14 = rbp;\n            rbp = (rbp + arg3);\n            __fprintf_chk(stderr, 1, \"\\n  - %s\", sub_40ec50(r12));\n            r12 = arg1[rbx];\n        } while (r12 != 0);\n    }\n    uint64_t* const rdi_6 = stderr;\n    char* rax_6 = stderr[5];\n    if (rax_6 >= stderr[6])\n    {\n        /* tailcall */\n        return __overflow(rdi_6, 0xa);\n    }\n    stderr[5] = &rax_6[1];\n    *rax_6 = 0xa;\n    return rax_6;\n}\n\n"
        },
        {
            "funcName": "sub_412e60",
            "funcStartAddr": "0x412e60",
            "funcEndAddr": "0x412ed0",
            "decompiledFuncCode": "int64_t sub_412e60(uint64_t arg1, char* arg2, int64_t* arg3, int64_t arg4, \n    uint64_t arg5, int64_t arg6)\n{\n    int64_t rax = sub_412ba0(arg2, arg3, arg4, arg5);\n    if (rax < 0)\n    {\n        sub_412cc0(arg1, arg2, rax);\n        sub_412d40(arg3, arg4, arg5);\n        arg6();\n        rax = -1;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_412ed0",
            "funcStartAddr": "0x412ed0",
            "funcEndAddr": "0x412f1d",
            "decompiledFuncCode": "int64_t sub_412ed0(int64_t arg1, int64_t* arg2, int64_t arg3, uint64_t arg4)\n{\n    int64_t r14 = *arg2;\n    if (r14 != 0)\n    {\n        void* rbx_1 = &arg2[1];\n        int64_t rbp_1 = arg3;\n        do\n        {\n            if (memcmp(arg1, rbp_1, arg4) == 0)\n            {\n                break;\n            }\n            r14 = *rbx_1;\n            rbp_1 = (rbp_1 + arg4);\n            rbx_1 = (rbx_1 + 8);\n        } while (r14 != 0);\n    }\n    return r14;\n}\n\n"
        },
        {
            "funcName": "sub_412f20",
            "funcStartAddr": "0x412f20",
            "funcEndAddr": "0x412f7d",
            "decompiledFuncCode": "uint64_t sub_412f20(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_4143e0(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_412f80",
            "funcStartAddr": "0x412f80",
            "funcEndAddr": "0x412fba",
            "decompiledFuncCode": "__syscall_slong_t sub_412f80(struct timespec* arg1)\n{\n    __syscall_slong_t rax = clock_gettime(0, arg1);\n    if (rax != 0)\n    {\n        int64_t var_18;\n        gettimeofday(&var_18, nullptr);\n        arg1->tv_sec = var_18;\n        int64_t var_10;\n        rax = (var_10 * 0x3e8);\n        arg1->tv_nsec = rax;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_412fc0",
            "funcStartAddr": "0x412fc0",
            "funcEndAddr": "0x41301e",
            "decompiledFuncCode": "int64_t sub_412fc0()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_41aa9e;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            char const* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char const temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = &rdi_2[1];\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_413020",
            "funcStartAddr": "0x413020",
            "funcEndAddr": "0x413056",
            "decompiledFuncCode": "uint64_t sub_413020(char* arg1, int64_t arg2)\n{\n    int64_t rcx = *arg1;\n    if (rcx == 0)\n    {\n        return 0;\n    }\n    int64_t rax = 0;\n    do\n    {\n        arg1 = &arg1[1];\n        rax = ((ROLQ(rax, 9)) + rcx);\n        rcx = *arg1;\n    } while (rcx != 0);\n    return (COMBINE(0, rax) % arg2);\n}\n\n"
        },
        {
            "funcName": "sub_413060",
            "funcStartAddr": "0x413060",
            "funcEndAddr": "0x4135c2",
            "decompiledFuncCode": "char* sub_413060()\n{\n    char* rax = nl_langinfo(0xe);\n    int64_t r15 = data_621b78;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_41aa24[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        size_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            size_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_41315c;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_4131a6;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_41315c:\n            r15 = 0x41aa3f;\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_4131a6:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = 0;\n                rax_12 = fdopen(rax_11, &data_417263);\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_41325c:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_4133eb;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_413298:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_413298;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_4132d2:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_4132d2;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                int64_t rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    int64_t rdi_26 = r15;\n                                    r15 = 0x41aa3f;\n                                    free(rdi_26);\n                                    sub_4143e0(rax_12);\n                                    goto label_4131e7;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                char* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = (&rsi_13[8] & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_4134ab:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_4134ab;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_4134f9:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_4134f9;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_41325c;\n                        }\n                        break;\n                    }\n                label_4133eb:\n                    sub_4143e0(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = 0x41aa3f;\n            }\n        label_4131e7:\n            free(rbp_3);\n        }\n        data_621b78 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && *(r15 + 1) != 0))))\n            {\n                char* rbp_1 = ((r15 + strlen(r15)) + 1);\n                r15 = &rbp_1[(strlen(rbp_1) + 1)];\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = ((r15 + strlen(r15)) + 1);\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_4135d0",
            "funcStartAddr": "0x4135d0",
            "funcEndAddr": "0x4137c9",
            "decompiledFuncCode": "uint64_t sub_4135d0(int32_t arg1, char* arg2, int32_t arg3, int32_t arg4, \n    int32_t arg5, int32_t arg6, int32_t arg7)\n{\n    void var_c8;\n    void* rdx = &var_c8;\n    int32_t rcx;\n    int32_t rbx;\n    int32_t var_b0;\n    if (arg1 < 0)\n    {\n        int32_t rax_4 = __xstat(1, arg2, rdx);\n        rbx = rax_4;\n        if (rax_4 != 0)\n        {\n            goto label_4136af;\n        }\n        rcx = var_b0;\n        if ((rcx & 0xf000) != 0x4000)\n        {\n            rbx = -1;\n            *__errno_location() = 0x14;\n        label_4136af:\n            return rbx;\n        }\n    }\n    else\n    {\n        int32_t rax = __fxstat(1, arg1, rdx);\n        rbx = rax;\n        int32_t* rbp_1;\n        int32_t r12_1;\n        if (rax != 0)\n        {\n        label_413750:\n            int32_t* rax_12 = __errno_location();\n            rbp_1 = rax_12;\n            r12_1 = *rax_12;\n        label_4136cc:\n            close(arg1);\n            *rbp_1 = r12_1;\n            goto label_4136af;\n        }\n        rcx = var_b0;\n        if ((rcx & 0xf000) != 0x4000)\n        {\n            int32_t* rax_6 = __errno_location();\n            r12_1 = 0x14;\n            rbx = -1;\n            *rax_6 = 0x14;\n            rbp_1 = rax_6;\n            goto label_4136cc;\n        }\n    }\n    int32_t var_ac;\n    int32_t rdx_3;\n    if ((arg4 == 0xffffffff || (arg4 != 0xffffffff && var_ac == arg4)))\n    {\n        int32_t var_a8;\n        if (arg5 == 0xffffffff)\n        {\n        label_4136f1:\n            rdx_3 = 0;\n        }\n        else if (var_a8 == arg5)\n        {\n            goto label_4136f1;\n        }\n    }\n    if (((arg4 != 0xffffffff && var_ac != arg4) || ((arg4 == 0xffffffff || (arg4 != 0xffffffff && var_ac == arg4)) && arg5 != 0xffffffff)))\n    {\n        if (arg1 >= 0)\n        {\n            int32_t rax_11 = fchown(arg1, arg4, arg5);\n            rbx = rax_11;\n            if (rax_11 != 0)\n            {\n                goto label_413750;\n            }\n        }\n        else\n        {\n            uint64_t rdx_1 = arg5;\n            uint64_t rsi_1 = arg4;\n            if (arg3 == 0xffffffff)\n            {\n                rbx = chown(arg2, rsi_1, rdx_1);\n            }\n            else\n            {\n                rbx = lchown(arg2, rsi_1, rdx_1);\n            }\n            if (rbx != 0)\n            {\n                goto label_4136af;\n            }\n        }\n        if ((rcx & 0x49) != 0)\n        {\n            rdx_3 = (rcx & 0xc00);\n        }\n    }\n    if ((((arg4 == 0xffffffff || (arg4 != 0xffffffff && var_ac == arg4)) && arg5 == 0xffffffff) || (((arg4 != 0xffffffff && var_ac != arg4) || ((arg4 == 0xffffffff || (arg4 != 0xffffffff && var_ac == arg4)) && arg5 != 0xffffffff)) && (rcx & 0x49) != 0)))\n    {\n        if ((arg7 & ((rcx ^ arg6) | rdx_3)) == 0)\n        {\n            rbx = 0;\n            if (arg1 >= 0)\n            {\n            label_413778:\n                rbx = close(arg1);\n            }\n            goto label_4136af;\n        }\n        uint64_t rsi_6 = ((((!arg7) & rcx) & 0xfff) | arg6);\n        if (arg1 >= 0)\n        {\n            int32_t rax_15 = fchmod(arg1, rsi_6);\n            rbx = rax_15;\n            if (rax_15 != 0)\n            {\n                goto label_413750;\n            }\n            goto label_413778;\n        }\n        rbx = chmod(arg2, rsi_6);\n        goto label_4136af;\n    }\n    if ((((arg4 != 0xffffffff && var_ac != arg4) || ((arg4 == 0xffffffff || (arg4 != 0xffffffff && var_ac == arg4)) && arg5 != 0xffffffff)) && (rcx & 0x49) == 0))\n    {\n        goto label_4136f1;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4137d0",
            "funcStartAddr": "0x4137d0",
            "funcEndAddr": "0x4137f3",
            "decompiledFuncCode": "int64_t* sub_4137d0(int64_t arg1)\n{\n    int64_t* rax = sub_4112e0(0x18);\n    *rax = arg1;\n    rax[2] = 0;\n    rax[1] = 0;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_413800",
            "funcStartAddr": "0x413800",
            "funcEndAddr": "0x41382f",
            "decompiledFuncCode": "FILE*** sub_413800(char* arg1, uint64_t arg2)\n{\n    FILE** rax = sub_413a20(arg1, arg2);\n    FILE*** rax_1 = nullptr;\n    if (rax != 0)\n    {\n        rax_1 = sub_4112e0(0x18);\n        *rax_1 = rax;\n        rax_1[2] = 0;\n        rax_1[1] = 0;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_413830",
            "funcStartAddr": "0x413830",
            "funcEndAddr": "0x413834",
            "decompiledFuncCode": "int64_t sub_413830(int64_t* arg1)\n{\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_413840",
            "funcStartAddr": "0x413840",
            "funcEndAddr": "0x413935",
            "decompiledFuncCode": "int64_t sub_413840(int64_t* arg1, int64_t arg2)\n{\n    int64_t r14 = (arg2 + 1);\n    int64_t* r12 = *arg1;\n    int64_t rbp = arg1[1];\n    int64_t rbx = arg1[2];\n    while (true)\n    {\n        if (rbx < arg2)\n        {\n            int64_t rax_6 = rbx;\n            uint64_t rdx_5 = 0;\n            do\n            {\n                rdx_5 = (rdx_5 + 1);\n                rax_6 = ((rax_6 << 8) + 0xff);\n            } while (arg2 > rax_6);\n            void var_40;\n            sub_413d30(r12, &var_40, rdx_5);\n            void* rax_8 = &var_40;\n            do\n            {\n                uint64_t rdx_6 = *rax_8;\n                rax_8 = (rax_8 + 1);\n                rbx = ((rbx << 8) + 0xff);\n                rbp = ((rbp << 8) + rdx_6);\n            } while (arg2 > rbx);\n        }\n        if (((rbx >= arg2 && rbx == arg2) || (rbx < arg2 && rbx == arg2)))\n        {\n            arg1[2] = 0;\n            arg1[1] = 0;\n            break;\n        }\n        if (((rbx >= arg2 && rbx != arg2) || (rbx < arg2 && rbx != arg2)))\n        {\n            int64_t rdx_1 = 0;\n            int64_t rax_2 = (rbx - arg2);\n            uint64_t temp0_1 = (COMBINE(rdx_1, rax_2) / r14);\n            uint64_t temp1_1 = (COMBINE(rdx_1, rax_2) % r14);\n            int64_t rdx_3 = 0;\n            uint64_t temp0_2 = (COMBINE(rdx_3, rbp) / r14);\n            uint64_t temp1_2 = (COMBINE(rdx_3, rbp) % r14);\n            if (rbp <= (rbx - temp1_1))\n            {\n                arg1[1] = temp0_2;\n                rbp = temp1_2;\n                arg1[2] = temp0_1;\n                break;\n            }\n            rbx = (temp1_1 - 1);\n            rbp = temp1_2;\n        }\n    }\n    return rbp;\n}\n\n"
        },
        {
            "funcName": "sub_413940",
            "funcStartAddr": "0x413940",
            "funcEndAddr": "0x41395e",
            "decompiledFuncCode": "int64_t sub_413940(int64_t arg1)\n{\n    __explicit_bzero_chk(arg1, 0x18, -1);\n    /* tailcall */\n    return free(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_413960",
            "funcStartAddr": "0x413960",
            "funcEndAddr": "0x4139b1",
            "decompiledFuncCode": "uint64_t sub_413960(int64_t* arg1)\n{\n    int32_t rax = sub_413e90(*arg1);\n    int32_t* rax_1 = __errno_location();\n    int32_t r13 = *rax_1;\n    __explicit_bzero_chk(arg1, 0x18, -1);\n    free(arg1);\n    *rax_1 = r13;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4139c0",
            "funcStartAddr": "0x403042",
            "funcEndAddr": "0x413a1d",
            "decompiledFuncCode": "int64_t sub_4139c0(uint64_t arg1) __noreturn\n{\n    if (arg1 != 0)\n    {\n        int64_t rax_1 = sub_40ec50(arg1);\n        int32_t* rax_2 = __errno_location();\n        char* rax_3;\n        if (*rax_2 == 0)\n        {\n            rax_3 = dcgettext(nullptr, \"%s: end of file\", 5);\n        }\n        else\n        {\n            rax_3 = dcgettext(nullptr, \"%s: read error\", 5);\n        }\n        error(data_61f468, *rax_2, rax_3, rax_1);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_413a20",
            "funcStartAddr": "0x413a20",
            "funcEndAddr": "0x413d0f",
            "decompiledFuncCode": "FILE** sub_413a20(char* arg1, uint64_t arg2)\n{\n    FILE** rbx;\n    if (arg2 == 0)\n    {\n        FILE** rax_7 = sub_4112e0(0x1038);\n        rbx = rax_7;\n        *rax_7 = nullptr;\n        rax_7[1] = 0x4139c0;\n        rax_7[2] = 0;\n    }\n    else\n    {\n        ssize_t r12_1 = arg1;\n        if (arg1 == 0)\n        {\n            FILE** rax_3 = sub_4112e0(0x1038);\n            *rax_3 = nullptr;\n            rbx = rax_3;\n            void* r13_2 = &rax_3[4];\n            rax_3[1] = 0x4139c0;\n            rax_3[2] = 0;\n            rax_3[3] = 0;\n            int32_t rax_5 = open(\"/dev/urandom\", 0);\n            int128_t var_48;\n            ssize_t rbp_2;\n            int64_t rbp_6;\n            int64_t r14_1;\n            if (rax_5 < 0)\n            {\n                r14_1 = 0x14;\n                gettimeofday(&var_48, nullptr);\n                *(rbx + 0x20) = var_48;\n                int32_t rax_8 = getpid();\n                var_48 = rax_8;\n                rbx[6] = rax_8;\n            }\n            else\n            {\n                uint64_t rdx_1 = arg2;\n                if (arg2 > 0x800)\n                {\n                    rdx_1 = 0x800;\n                }\n                rbp_2 = __read_chk(rax_5, r13_2, rdx_1, 0x1018);\n                close(rax_5);\n                if (rbp_2 <= 0x7ff)\n                {\n                    if (rbp_2 < 0)\n                    {\n                        rbp_2 = r12_1;\n                    }\n                    int128_t* rdi_8 = &var_48;\n                    int64_t rcx_5 = (0x800 - rbp_2);\n                    void* r15_2 = (r13_2 + rbp_2);\n                    if (rcx_5 > 0x10)\n                    {\n                        rcx_5 = 0x10;\n                    }\n                    rbp_6 = (rbp_2 + rcx_5);\n                    gettimeofday(rdi_8, nullptr);\n                    void* rdi_9 = r15_2;\n                    void* rsi_5 = &var_48;\n                    for (uint64_t rcx_7 = rcx_5; rcx_7 != 0; rcx_7 = (rcx_7 - 1))\n                    {\n                        *rdi_9 = *rsi_5;\n                        rdi_9 = (rdi_9 + 1);\n                        rsi_5 = (rsi_5 + 1);\n                    }\n                    if (rbp_6 <= 0x7ff)\n                    {\n                        int64_t r14_3 = (0x800 - rbp_6);\n                        if (r14_3 > 4)\n                        {\n                            r14_3 = 4;\n                        }\n                        void* rsi_6 = &var_48;\n                        var_48 = getpid(rdi_9, rsi_5);\n                        uint64_t rcx_8 = r14_3;\n                        r14_1 = (r14_3 + rbp_6);\n                        void* rdi_10 = (r13_2 + rbp_6);\n                        for (; rcx_8 != 0; rcx_8 = (rcx_8 - 1))\n                        {\n                            *rdi_10 = *rsi_6;\n                            rdi_10 = (rdi_10 + 1);\n                            rsi_6 = (rsi_6 + 1);\n                        }\n                    }\n                }\n            }\n            if ((rax_5 < 0 || (((rax_5 >= 0 && rbp_2 <= 0x7ff) && rbp_6 <= 0x7ff) && r14_1 <= 0x7ff)))\n            {\n                int64_t rbp_3 = (0x800 - r14_1);\n                if (rbp_3 > 4)\n                {\n                    rbp_3 = 4;\n                }\n                void* rsi_2 = (r13_2 + r14_1);\n                var_48 = getppid();\n                int32_t rdi_5 = rbp_3;\n                if (rbp_3 != 0)\n                {\n                    int32_t rax_10 = 0;\n                    do\n                    {\n                        uint64_t rdx_2 = rax_10;\n                        rax_10 = (rax_10 + 1);\n                        *(rsi_2 + rdx_2) = *(&var_48 + rdx_2);\n                    } while (rax_10 < rdi_5);\n                }\n                int64_t rbp_4 = (rbp_3 + r14_1);\n                if (rbp_4 <= 0x7ff)\n                {\n                    int64_t r14_2 = (0x800 - rbp_4);\n                    if (r14_2 > 4)\n                    {\n                        r14_2 = 4;\n                    }\n                    void* rsi_3 = (r13_2 + rbp_4);\n                    var_48 = getuid();\n                    int32_t rdi_6 = r14_2;\n                    if (r14_2 != 0)\n                    {\n                        int32_t rax_12 = 0;\n                        do\n                        {\n                            uint64_t rdx_3 = rax_12;\n                            rax_12 = (rax_12 + 1);\n                            *(rsi_3 + rdx_3) = *(&var_48 + rdx_3);\n                        } while (rax_12 < rdi_6);\n                    }\n                    int64_t rbp_5 = (rbp_4 + r14_2);\n                    if (rbp_5 <= 0x7ff)\n                    {\n                        void* rsi_4 = (r13_2 + rbp_5);\n                        var_48 = getgid();\n                        int64_t rax_14 = (0x800 - rbp_5);\n                        if (rax_14 > 4)\n                        {\n                            rax_14 = 4;\n                        }\n                        int32_t rdi_7 = rax_14;\n                        if (rax_14 != 0)\n                        {\n                            int32_t rax_15 = 0;\n                            do\n                            {\n                                uint64_t rdx_4 = rax_15;\n                                rax_15 = (rax_15 + 1);\n                                *(rsi_4 + rdx_4) = *(&var_48 + rdx_4);\n                            } while (rax_15 < rdi_7);\n                        }\n                    }\n                }\n            }\n            sub_414190(r13_2);\n        }\n        else\n        {\n            FILE* rax = sub_415f90(arg1, &data_41ab5c);\n            if (rax == 0)\n            {\n                rbx = nullptr;\n            }\n            else\n            {\n                FILE** rax_1 = sub_4112e0(0x1038);\n                uint64_t rcx_1 = 0x1000;\n                *rax_1 = rax;\n                if (arg2 <= 0x1000)\n                {\n                    rcx_1 = arg2;\n                }\n                rax_1[1] = 0x4139c0;\n                rbx = rax_1;\n                rax_1[2] = r12_1;\n                setvbuf(rax, &rax_1[3], 0, rcx_1);\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_413d10",
            "funcStartAddr": "0x413d10",
            "funcEndAddr": "0x413d15",
            "decompiledFuncCode": "int64_t sub_413d10(void* arg1, int64_t arg2)\n{\n    *(arg1 + 8) = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_413d20",
            "funcStartAddr": "0x413d20",
            "funcEndAddr": "0x413d25",
            "decompiledFuncCode": "int64_t sub_413d20(void* arg1, int64_t arg2)\n{\n    *(arg1 + 0x10) = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_413d30",
            "funcStartAddr": "0x413d30",
            "funcEndAddr": "0x413e8c",
            "decompiledFuncCode": "uint64_t sub_413d30(int64_t* arg1, int64_t* arg2, uint64_t arg3)\n{\n    int64_t* rbp = arg2;\n    uint64_t rbx = arg3;\n    FILE* r13 = *arg1;\n    uint64_t rax_3;\n    if (r13 == 0)\n    {\n        uint64_t r15_1 = arg1[3];\n        int64_t* r13_1 = &arg1[0x107];\n        void* r14_1 = &arg1[4];\n        if (arg3 <= r15_1)\n        {\n            r13_1 = ((r13_1 - r15_1) + 0x800);\n        }\n        else\n        {\n            do\n            {\n                int64_t* rdi_2 = rbp;\n                rbp = (rbp + r15_1);\n                rbx = (rbx - r15_1);\n                memcpy(rdi_2, ((0x800 - r15_1) + r13_1), r15_1);\n                if ((rbp & 7) == 0)\n                {\n                    while (rbx > 0x7ff)\n                    {\n                        int64_t* rsi_3 = rbp;\n                        rbp = &rbp[0x100];\n                        int64_t* rax_4 = sub_413ee0(r14_1, rsi_3);\n                        uint64_t temp1_1 = rbx;\n                        rbx = (rbx - 0x800);\n                        if (temp1_1 == 0x800)\n                        {\n                            arg1[3] = 0;\n                            return rax_4;\n                        }\n                    }\n                    sub_413ee0(r14_1, r13_1);\n                    break;\n                }\n                r15_1 = 0x800;\n                sub_413ee0(r14_1, r13_1);\n            } while (rbx > 0x800);\n            r15_1 = 0x800;\n        }\n        rax_3 = memcpy(rbp, r13_1, rbx);\n        arg1[3] = (r15_1 - rbx);\n    }\n    else\n    {\n        int32_t* rax_1 = __errno_location();\n        while (true)\n        {\n            rax_3 = fread_unlocked(rbp, 1, rbx, r13);\n            int32_t rdx = *rax_1;\n            rbp = (rbp + rax_3);\n            uint64_t temp0_1 = rbx;\n            rbx = (rbx - rax_3);\n            if (temp0_1 == rax_3)\n            {\n                break;\n            }\n            int64_t rdi = arg1[2];\n            if ((**arg1 & 0x20) == 0)\n            {\n                rdx = 0;\n            }\n            *rax_1 = rdx;\n            arg1[1](rdi);\n            r13 = *arg1;\n        }\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_413e90",
            "funcStartAddr": "0x413e90",
            "funcEndAddr": "0x413ed9",
            "decompiledFuncCode": "int64_t sub_413e90(int64_t* arg1)\n{\n    FILE* rbp = *arg1;\n    __explicit_bzero_chk(arg1, 0x1038, -1);\n    free(arg1);\n    if (rbp == 0)\n    {\n        return 0;\n    }\n    /* tailcall */\n    return sub_4143e0(rbp);\n}\n\n"
        },
        {
            "funcName": "sub_413ee0",
            "funcStartAddr": "0x413ee0",
            "funcEndAddr": "0x414185",
            "decompiledFuncCode": "int64_t* sub_413ee0(int64_t* arg1, int64_t* arg2)\n{\n    int64_t r11 = arg1[0x101];\n    void* r10 = &arg1[0x80];\n    int64_t rdx = arg1[0x100];\n    int64_t* r9 = arg2;\n    int64_t r8 = (arg1[0x102] + 1);\n    int64_t* rax = arg1;\n    arg1[0x102] = r8;\n    int64_t r11_1 = (r11 + r8);\n    do\n    {\n        int64_t rcx_3 = *rax;\n        int64_t rdx_3 = ((!(rdx ^ (rdx << 0x15))) + rax[0x80]);\n        int64_t r8_4 = ((*(arg1 + (rcx_3 & 0x7f8)) + rdx_3) + r11_1);\n        *rax = r8_4;\n        int64_t rbx_4 = (*(arg1 + ((r8_4 >> 8) & 0x7f8)) + rcx_3);\n        *r9 = rbx_4;\n        int64_t r8_7 = rax[1];\n        int64_t rdx_5 = ((rdx_3 ^ (rdx_3 >> 5)) + rax[0x81]);\n        int64_t rcx_6 = ((*(arg1 + (r8_7 & 0x7f8)) + rdx_5) + rbx_4);\n        rax[1] = rcx_6;\n        int64_t rbx_6 = (*(arg1 + ((rcx_6 >> 8) & 0x7f8)) + r8_7);\n        r9[1] = rbx_6;\n        int64_t rcx_9 = rax[2];\n        int64_t rdx_11 = (((rdx_5 << 0xc) ^ rdx_5) + rax[0x82]);\n        int64_t r8_11 = ((*(arg1 + (rcx_9 & 0x7f8)) + rdx_11) + rbx_6);\n        rax[2] = r8_11;\n        int64_t rcx_10 = (rcx_9 + *(arg1 + ((r8_11 >> 8) & 0x7f8)));\n        r9[2] = rcx_10;\n        int64_t r8_14 = rax[3];\n        rdx = ((rdx_11 ^ (rdx_11 >> 0x21)) + rax[0x83]);\n        int64_t rcx_16 = ((*(arg1 + (r8_14 & 0x7f8)) + rdx) + rcx_10);\n        rax = &rax[4];\n        r9 = &r9[4];\n        rax[-1] = rcx_16;\n        r11_1 = (*(arg1 + ((rcx_16 >> 8) & 0x7f8)) + r8_14);\n        r9[-1] = r11_1;\n    } while (rax != r10);\n    void* rsi = &arg2[0x80];\n    void* r9_1 = &arg1[0x100];\n    do\n    {\n        int64_t rcx_21 = *rax;\n        int64_t rdx_15 = ((!(rdx ^ (rdx << 0x15))) + rax[-0x80]);\n        int64_t r8_18 = ((*(arg1 + (rcx_21 & 0x7f8)) + rdx_15) + r11_1);\n        *rax = r8_18;\n        int64_t rcx_22 = (rcx_21 + *(arg1 + ((r8_18 >> 8) & 0x7f8)));\n        *rsi = rcx_22;\n        int64_t r8_21 = rax[1];\n        int64_t rdx_17 = ((rdx_15 ^ (rdx_15 >> 5)) + rax[-0x7f]);\n        int64_t rcx_25 = ((*(arg1 + (r8_21 & 0x7f8)) + rdx_17) + rcx_22);\n        rax[1] = rcx_25;\n        int64_t r11_11 = (*(arg1 + ((rcx_25 >> 8) & 0x7f8)) + r8_21);\n        *(rsi + 8) = r11_11;\n        int64_t rcx_28 = rax[2];\n        int64_t rdx_23 = (((rdx_17 << 0xc) ^ rdx_17) + rax[-0x7e]);\n        int64_t r8_25 = ((*(arg1 + (rcx_28 & 0x7f8)) + rdx_23) + r11_11);\n        rax[2] = r8_25;\n        int64_t rcx_29 = (rcx_28 + *(arg1 + ((r8_25 >> 8) & 0x7f8)));\n        *(rsi + 0x10) = rcx_29;\n        int64_t r8_28 = rax[3];\n        rdx = ((rdx_23 ^ (rdx_23 >> 0x21)) + rax[-0x7d]);\n        int64_t rcx_35 = ((*(arg1 + (r8_28 & 0x7f8)) + rdx) + rcx_29);\n        rax = &rax[4];\n        rsi = (rsi + 0x20);\n        rax[-1] = rcx_35;\n        r11_1 = (*(arg1 + ((rcx_35 >> 8) & 0x7f8)) + r8_28);\n        *(rsi - 8) = r11_1;\n    } while (rax != r9_1);\n    arg1[0x100] = rdx;\n    arg1[0x101] = r11_1;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_414190",
            "funcStartAddr": "0x414190",
            "funcEndAddr": "0x4143c4",
            "decompiledFuncCode": "int64_t sub_414190(int64_t* arg1)\n{\n    int64_t* rdx = arg1;\n    int64_t* rax = arg1;\n    int64_t rcx = -0x670a8fb093bb3f55;\n    int64_t rsi = -0x7d0fac247caa1f32;\n    int64_t r11 = -0x4d64d17db5a6aadc;\n    int64_t r12 = -0x5167a40d34037613;\n    int64_t r10 = -0x73f15afac2b8ed60;\n    int64_t r9 = -0x46074cdd38c5379e;\n    void* rbp = &arg1[0x100];\n    int64_t r8 = 0x647c4677a2884b7c;\n    int64_t rbx = 0x48fe4a0fa5a09315;\n    do\n    {\n        int64_t rsi_1 = (rsi + rax[4]);\n        int64_t rcx_1 = (rcx + rax[7]);\n        int64_t r8_1 = (r8 + (*rax - rsi_1));\n        int64_t rbx_2 = ((rbx + rax[5]) ^ (rcx_1 >> 9));\n        int64_t r9_1 = (r9 + (rax[1] - rbx_2));\n        int64_t r12_2 = ((r12 + rax[6]) ^ (r8_1 << 9));\n        int64_t r10_1 = (r10 + (rax[2] - r12_2));\n        int64_t rcx_3 = ((rcx_1 + r8_1) ^ (r9_1 >> 0x17));\n        int64_t r11_1 = (r11 + (rax[3] - rcx_3));\n        r8 = ((r8_1 + r9_1) ^ (r10_1 << 0xf));\n        int64_t rsi_2 = (rsi_1 - r8);\n        *rax = r8;\n        r9 = ((r9_1 + r10_1) ^ (r11_1 >> 0xe));\n        int64_t rbx_3 = (rbx_2 - r9);\n        rax[1] = r9;\n        r10 = ((r10_1 + r11_1) ^ (rsi_2 << 0x14));\n        int64_t r12_3 = (r12_2 - r10);\n        rax[2] = r10;\n        rax = &rax[8];\n        r11 = ((r11_1 + rsi_2) ^ (rbx_3 >> 0x11));\n        rbx = (rbx_3 + r12_3);\n        rcx = (rcx_3 - r11);\n        rax[-5] = r11;\n        rsi = ((r12_3 << 0xe) ^ (rsi_2 + rbx_3));\n        r12 = (r12_3 + rcx);\n        rax[-3] = rbx;\n        rax[-4] = rsi;\n        rax[-2] = r12;\n        rax[-1] = rcx;\n    } while (rbp != rax);\n    int64_t rax_13;\n    do\n    {\n        int64_t rcx_4 = (rcx + rdx[7]);\n        int64_t rsi_7 = (rsi + rdx[4]);\n        int64_t r8_4 = ((r8 + *rdx) - rsi_7);\n        int64_t rbx_5 = ((rbx + rdx[5]) ^ (rcx_4 >> 9));\n        int64_t r9_4 = ((r9 + rdx[1]) - rbx_5);\n        int64_t r12_5 = ((r12 + rdx[6]) ^ (r8_4 << 9));\n        int64_t r10_4 = ((r10 + rdx[2]) - r12_5);\n        int64_t rcx_6 = ((rcx_4 + r8_4) ^ (r9_4 >> 0x17));\n        int64_t r11_4 = ((r11 + rdx[3]) - rcx_6);\n        r8 = ((r8_4 + r9_4) ^ (r10_4 << 0xf));\n        int64_t rsi_8 = (rsi_7 - r8);\n        *rdx = r8;\n        r9 = ((r9_4 + r10_4) ^ (r11_4 >> 0xe));\n        int64_t rbx_6 = (rbx_5 - r9);\n        rdx[1] = r9;\n        r10 = ((r10_4 + r11_4) ^ (rsi_8 << 0x14));\n        rax_13 = (rsi_8 + rbx_6);\n        int64_t r12_6 = (r12_5 - r10);\n        rdx[2] = r10;\n        rdx = &rdx[8];\n        r11 = ((r11_4 + rsi_8) ^ (rbx_6 >> 0x11));\n        rbx = (rbx_6 + r12_6);\n        rcx = (rcx_6 - r11);\n        rdx[-5] = r11;\n        rsi = ((r12_6 << 0xe) ^ rax_13);\n        r12 = (r12_6 + rcx);\n        rdx[-3] = rbx;\n        rdx[-4] = rsi;\n        rdx[-2] = r12;\n        rdx[-1] = rcx;\n    } while (rbp != rdx);\n    arg1[0x102] = 0;\n    arg1[0x101] = 0;\n    arg1[0x100] = 0;\n    return rax_13;\n}\n\n"
        },
        {
            "funcName": "sub_4143d0",
            "funcStartAddr": "0x4143d0",
            "funcEndAddr": "0x4143de",
            "decompiledFuncCode": "int64_t sub_4143d0(int32_t arg1)\n{\n    /* tailcall */\n    return sub_411a10(arg1, 0, 3);\n}\n\n"
        },
        {
            "funcName": "sub_4143e0",
            "funcStartAddr": "0x4143e0",
            "funcEndAddr": "0x41445b",
            "decompiledFuncCode": "int64_t sub_4143e0(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_411b50(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_414460",
            "funcStartAddr": "0x414460",
            "funcEndAddr": "0x414464",
            "decompiledFuncCode": "int64_t sub_414460(int32_t* arg1)\n{\n    *arg1 = (*arg1 | 0x20);\n}\n\n"
        },
        {
            "funcName": "sub_414470",
            "funcStartAddr": "0x403047",
            "funcEndAddr": "0x415f89",
            "decompiledFuncCode": "char* sub_414470(char* arg1, uint64_t* arg2, char* arg3, int64_t arg4, \n    uint16_t arg5 @ x87control)\n{\n    int64_t rbp;\n    int64_t __saved_rbp = rbp;\n    int64_t r15;\n    int64_t __saved_r15 = r15;\n    int64_t r14;\n    int64_t __saved_r14 = r14;\n    int64_t r13;\n    int64_t __saved_r13 = r13;\n    int64_t r12;\n    int64_t __saved_r12 = r12;\n    int64_t rbx;\n    int64_t __saved_rbx = rbx;\n    void var_6f8;\n    void* rsp_1 = &var_6f8;\n    void var_678;\n    int64_t var_588;\n    char* rbx_2;\n    if (sub_416250(arg3, &var_588, &var_678) < 0)\n    {\n        rbx_2 = nullptr;\n    }\n    else\n    {\n        char* var_670;\n        void var_668;\n        int64_t* var_580;\n        void var_568;\n        if (sub_416030(arg4, &var_678) >= 0)\n        {\n            int64_t var_578;\n            int64_t rax_3 = (var_578 + 7);\n            if (rax_3 <= 6)\n            {\n                rax_3 = -1;\n            }\n            int64_t var_570;\n            int64_t rax_4 = (rax_3 + var_570);\n            char* var_6a8;\n            int64_t rcx;\n            char* r8_1;\n            if ((rax_3 + var_570) >= rax_3)\n            {\n                size_t rdi_3 = (rax_4 + 6);\n                if (rax_4 >= -6)\n                {\n                    goto label_414b95;\n                }\n                char* var_6e0_1;\n                char* var_6b0_1;\n                int32_t* rdx_1;\n                if (rdi_3 <= 0xf9f)\n                {\n                    var_6e0_1 = nullptr;\n                    rsp_1 = (&var_6f8 - ((rax_4 + 0x1d) & 0xfffffffffffffff0));\n                    var_6b0_1 = ((rsp_1 + 0xf) & 0xfffffffffffffff0);\n                }\n                else\n                {\n                    if (rdi_3 == -1)\n                    {\n                        goto label_414b95;\n                    }\n                    char* rax_5;\n                    rax_5 = malloc(rdi_3);\n                    var_6b0_1 = rax_5;\n                    if (rax_5 == 0)\n                    {\n                        goto label_414b95;\n                    }\n                    var_6e0_1 = rax_5;\n                }\n                size_t r12_1 = 0;\n                if (arg1 != 0)\n                {\n                    r12_1 = *arg2;\n                }\n                int64_t* r14_1 = var_580;\n                r8_1 = arg3;\n                rbx_2 = arg1;\n                int64_t var_6c0_1 = 0;\n                uint64_t r15_2 = 0;\n                rcx = *r14_1;\n                void* r13_1;\n                if (rcx != r8_1)\n                {\n                    while (true)\n                    {\n                        void* rcx_1 = (rcx - r8_1);\n                        void* rax_8 = (r15_2 + rcx_1);\n                        r13_1 = rax_8;\n                        int32_t var_698;\n                        char* r15_7;\n                        if ((r15_2 + rcx_1) < r15_2)\n                        {\n                            if (r12_1 != -1)\n                            {\n                            label_414a65:\n                                r15_7 = rbx_2;\n                                var_6a8 = __errno_location();\n                            }\n                            else\n                            {\n                                r13_1 = ffffffffffffffff;\n                            label_4146e3:\n                                memcpy(&rbx_2[r15_2], r8_1, rcx_1);\n                            label_4146ef:\n                                if (var_588 == var_6c0_1)\n                                {\n                                    uint64_t r15_11 = r13_1;\n                                    size_t r14_3 = (r13_1 + 1);\n                                    if (r13_1 >= -1)\n                                    {\n                                        if (r12_1 != -1)\n                                        {\n                                            goto label_414a65;\n                                        }\n                                    }\n                                    else if (r12_1 < r14_3)\n                                    {\n                                        bool cond:2_1 = r12_1 < 0;\n                                        if ((r12_1 == 0 && r14_3 <= 0xc))\n                                        {\n                                            r12_1 = 0xc;\n                                        label_415845:\n                                            r13_1 = rbx_2 == arg1;\n                                            if ((rbx_2 == 0 || (rbx_2 != 0 && r13_1 != 0)))\n                                            {\n                                                char* rax_150 = malloc(r12_1);\n                                                if (rax_150 == 0)\n                                                {\n                                                    goto label_414a65;\n                                                }\n                                                if ((r15_11 == 0 || (r15_11 != 0 && r13_1 == 0)))\n                                                {\n                                                    rbx_2 = rax_150;\n                                                }\n                                                if ((r15_11 != 0 && r13_1 != 0))\n                                                {\n                                                    rbx_2 = memcpy(rax_150, rbx_2, r15_11);\n                                                }\n                                            }\n                                            if ((rbx_2 != 0 && r13_1 == 0))\n                                            {\n                                                char* rax_126 = realloc(rbx_2, r12_1);\n                                                if (rax_126 == 0)\n                                                {\n                                                    goto label_414c7a;\n                                                }\n                                                rbx_2 = rax_126;\n                                            }\n                                        }\n                                        if (r12_1 != 0)\n                                        {\n                                            if (cond:2_1)\n                                            {\n                                                goto label_414a65;\n                                            }\n                                            r12_1 = (r12_1 + r12_1);\n                                            if (r12_1 >= r14_3)\n                                            {\n                                                goto label_415845;\n                                            }\n                                        }\n                                        if (((r12_1 == 0 && r14_3 > 0xc) || r12_1 != 0))\n                                        {\n                                            if (r14_3 == -1)\n                                            {\n                                                goto label_414a65;\n                                            }\n                                            r12_1 = r14_3;\n                                            goto label_415845;\n                                        }\n                                    }\n                                    rbx_2[r15_11] = 0;\n                                    if ((r12_1 > r14_3 && rbx_2 != arg1))\n                                    {\n                                        char* rax_127 = realloc(rbx_2, r14_3);\n                                        if (rax_127 != 0)\n                                        {\n                                            rbx_2 = rax_127;\n                                        }\n                                    }\n                                    if (var_6e0_1 != 0)\n                                    {\n                                        free(var_6e0_1);\n                                    }\n                                    if (var_580 != &var_568)\n                                    {\n                                        free(var_580);\n                                    }\n                                    if (var_670 != &var_668)\n                                    {\n                                        free(var_670);\n                                    }\n                                    *arg2 = r15_11;\n                                    goto label_414af1;\n                                }\n                                char r15_3 = r14_1[9];\n                                int64_t rax_17 = r14_1[0xa];\n                                if (r15_3 == 0x25)\n                                {\n                                    if (rax_17 != -1)\n                                    {\n                                    label_41519c:\n                                        abort();\n                                        /* no return */\n                                    }\n                                    uint64_t rax_47 = (r13_1 + 1);\n                                    r15_2 = rax_47;\n                                    if (r13_1 < -1)\n                                    {\n                                        if (r12_1 >= rax_47)\n                                        {\n                                            goto label_414b62;\n                                        }\n                                        bool cond:4_1 = r12_1 < 0;\n                                        if (r12_1 != 0)\n                                        {\n                                            if (cond:4_1)\n                                            {\n                                                goto label_414a65;\n                                            }\n                                            r12_1 = (r12_1 + r12_1);\n                                            if (r12_1 >= rax_47)\n                                            {\n                                                goto label_414b37;\n                                            }\n                                        }\n                                        else if (rax_47 <= 0xc)\n                                        {\n                                            r12_1 = 0xc;\n                                        label_414b37:\n                                            rdx_1 = rbx_2 == arg1;\n                                            if (rbx_2 == 0)\n                                            {\n                                            label_415353:\n                                                var_698 = rdx_1;\n                                                char* rax_107 = malloc(r12_1);\n                                                rdx_1 = var_698;\n                                                if (rax_107 == 0)\n                                                {\n                                                    goto label_414a65;\n                                                }\n                                                if ((r13_1 == 0 || (r13_1 != 0 && rdx_1 == 0)))\n                                                {\n                                                    rbx_2 = rax_107;\n                                                }\n                                                if ((r13_1 != 0 && rdx_1 != 0))\n                                                {\n                                                    char* rax_108;\n                                                    rax_108 = memcpy(rax_107, rbx_2, r13_1);\n                                                    rbx_2 = rax_108;\n                                                }\n                                                goto label_414b62;\n                                            }\n                                            if (rdx_1 != 0)\n                                            {\n                                                goto label_415353;\n                                            }\n                                            char* rax_48;\n                                            rax_48 = realloc(rbx_2, r12_1);\n                                            if (rax_48 == 0)\n                                            {\n                                                goto label_414c7a;\n                                            }\n                                            rbx_2 = rax_48;\n                                            goto label_414b62;\n                                        }\n                                        if (rax_47 == -1)\n                                        {\n                                            goto label_414a65;\n                                        }\n                                        r12_1 = rax_47;\n                                        goto label_414b37;\n                                    }\n                                    if (r12_1 != -1)\n                                    {\n                                        goto label_414a65;\n                                    }\n                                    r15_2 = -1;\n                                label_414b62:\n                                    *(rbx_2 + r13_1) = 0x25;\n                                label_414b67:\n                                    r8_1 = r14_1[1];\n                                    r14_1 = &r14_1[0xb];\n                                    rcx = *r14_1;\n                                    var_6c0_1 = (var_6c0_1 + 1);\n                                    if (rcx == r8_1)\n                                    {\n                                        break;\n                                    }\n                                    continue;\n                                }\n                                else\n                                {\n                                    if (rax_17 == -1)\n                                    {\n                                        goto label_41519c;\n                                    }\n                                    rdx_1 = &var_670[(rax_17 << 5)];\n                                    int32_t rax_19 = *rdx_1;\n                                    if (r15_3 == 0x6e)\n                                    {\n                                        uint64_t rax_50 = (rax_19 - 0x12);\n                                        if (rax_50 > 4)\n                                        {\n                                        label_403047:\n                                            abort();\n                                            /* no return */\n                                        }\n                                        switch (rax_50)\n                                        {\n                                            case 0:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                            case 1:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                            case 2:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                            case 3:\n                                            case 4:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                        }\n                                        goto label_414b67;\n                                    }\n                                    char rax_21 = (r15_3 & 0xdf);\n                                    int64_t var_6c8;\n                                    char* var_6b8;\n                                    int16_t var_680;\n                                    if (((rax_21 - 0x45) > 2 && rax_21 != 0x41))\n                                    {\n                                    label_414777:\n                                        char rax_22 = r14_1[2];\n                                        void* r15_4 = &var_6b0_1[1];\n                                        *var_6b0_1 = 0x25;\n                                        if ((rax_22 & 1) != 0)\n                                        {\n                                            var_6b0_1[1] = 0x27;\n                                            r15_4 = &var_6b0_1[2];\n                                        }\n                                        if ((rax_22 & 2) != 0)\n                                        {\n                                            *r15_4 = 0x2d;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 4) != 0)\n                                        {\n                                            *r15_4 = 0x2b;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 8) != 0)\n                                        {\n                                            *r15_4 = 0x20;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 0x10) != 0)\n                                        {\n                                            *r15_4 = 0x23;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 0x40) != 0)\n                                        {\n                                            *r15_4 = 0x49;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 0x20) != 0)\n                                        {\n                                            *r15_4 = 0x30;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        int64_t rsi_6 = r14_1[3];\n                                        int64_t rdx_5 = r14_1[4];\n                                        if (rsi_6 != rdx_5)\n                                        {\n                                            uint64_t rcx_4 = (rdx_5 - rsi_6);\n                                            memcpy(r15_4, rsi_6, rcx_4);\n                                            r15_4 = (r15_4 + rcx_4);\n                                        }\n                                        int64_t rsi_7 = r14_1[6];\n                                        uint64_t rdx_7 = r14_1[7];\n                                        if (rsi_7 != rdx_7)\n                                        {\n                                            uint64_t rcx_7 = (rdx_7 - rsi_7);\n                                            memcpy(r15_4, rsi_7, rcx_7);\n                                            r15_4 = (r15_4 + rcx_7);\n                                        }\n                                        if (rax_19 <= 0x10)\n                                        {\n                                            int32_t rax_23 = (1 << rax_19);\n                                            if ((rax_23 & 0x14180) == 0)\n                                            {\n                                                if ((*rax_23[1] & 0x10) != 0)\n                                                {\n                                                    *r15_4 = 0x4c;\n                                                    r15_4 = (r15_4 + 1);\n                                                }\n                                                if (((*rax_23[1] & 0x10) == 0 && (*rax_23[1] & 6) != 0))\n                                                {\n                                                    *r15_4 = 0x6c;\n                                                    r15_4 = (r15_4 + 1);\n                                                }\n                                            }\n                                            if (((((rax_23 & 0x14180) == 0 && (*rax_23[1] & 0x10) == 0) && (*rax_23[1] & 6) != 0) || (rax_23 & 0x14180) != 0))\n                                            {\n                                                *r15_4 = 0x6c;\n                                                r15_4 = (r15_4 + 1);\n                                            }\n                                        }\n                                        char rax_24 = r14_1[9];\n                                        *(r15_4 + 1) = 0;\n                                        *r15_4 = rax_24;\n                                        int64_t rax_25 = r14_1[5];\n                                        if (rax_25 != -1)\n                                        {\n                                            void* rax_27 = &var_670[(rax_25 << 5)];\n                                            if (*rax_27 != 5)\n                                            {\n                                                goto label_41519c;\n                                            }\n                                            var_6b8 = 1;\n                                            var_680 = *(rax_27 + 0x10);\n                                            goto label_4148ce;\n                                        }\n                                        var_6b8 = 0;\n                                    label_4148ce:\n                                        int64_t rax_29 = r14_1[8];\n                                        if (rax_29 == -1)\n                                        {\n                                            goto label_414906;\n                                        }\n                                        void* r8_3 = &var_670[(rax_29 << 5)];\n                                        if (*r8_3 != 5)\n                                        {\n                                            goto label_41519c;\n                                        }\n                                        uint64_t rax_31 = var_6b8;\n                                        *(&var_680 + (rax_31 << 2)) = *(r8_3 + 0x10);\n                                        var_6b8 = (rax_31 + 1);\n                                    label_414906:\n                                        void* rax_34 = (r13_1 + 2);\n                                        char* r11_1;\n                                        if (r13_1 < -2)\n                                        {\n                                            if (r12_1 >= rax_34)\n                                            {\n                                                goto label_415348;\n                                            }\n                                            bool cond:22_1 = r12_1 < 0;\n                                            if (r12_1 != 0)\n                                            {\n                                                if (cond:22_1)\n                                                {\n                                                    goto label_414a65;\n                                                }\n                                                r12_1 = (r12_1 + r12_1);\n                                                if (r12_1 >= rax_34)\n                                                {\n                                                    goto label_414939;\n                                                }\n                                            }\n                                            else if (rax_34 <= 0xc)\n                                            {\n                                                r12_1 = 0xc;\n                                            label_414939:\n                                                rdx_7 = rbx_2 == arg1;\n                                                if (rbx_2 == 0)\n                                                {\n                                                label_4152f3:\n                                                    var_6a8 = rdx_7;\n                                                    char* rax_105 = malloc(r12_1);\n                                                    char rdx_17 = var_6a8;\n                                                    r11_1 = rax_105;\n                                                    if (rax_105 == 0)\n                                                    {\n                                                        goto label_414a65;\n                                                    }\n                                                    if ((r13_1 != 0 && rdx_17 != 0))\n                                                    {\n                                                        r11_1 = memcpy(rax_105, rbx_2, r13_1);\n                                                    }\n                                                    goto label_414964;\n                                                }\n                                                if (rdx_7 != 0)\n                                                {\n                                                    goto label_4152f3;\n                                                }\n                                                char* rax_35 = realloc(rbx_2, r12_1);\n                                                r11_1 = rax_35;\n                                                if (rax_35 == 0)\n                                                {\n                                                    goto label_414a65;\n                                                }\n                                                goto label_414964;\n                                            }\n                                            if (rax_34 == -1)\n                                            {\n                                                goto label_414a65;\n                                            }\n                                            r12_1 = rax_34;\n                                            goto label_414939;\n                                        }\n                                        if (r12_1 != -1)\n                                        {\n                                            goto label_414a65;\n                                        }\n                                    label_415348:\n                                        r11_1 = rbx_2;\n                                    label_414964:\n                                        *(r11_1 + r13_1) = 0;\n                                        int32_t* rax_36 = __errno_location();\n                                        char* r11_2 = r11_1;\n                                        var_6c8 = r15_4;\n                                        var_6a8 = rax_36;\n                                        int32_t rax_37 = *rax_36;\n                                    label_4149a2:\n                                        void* rbx_3 = 0x7fffffff;\n                                        int32_t var_684 = 0xffffffff;\n                                        void* r15_6 = (r12_1 - r13_1);\n                                        *var_6a8 = 0;\n                                        uint64_t rax_39 = rax_19;\n                                        if (r15_6 <= 0x7fffffff)\n                                        {\n                                            rbx_3 = r15_6;\n                                        }\n                                        if (rax_39 > 0x11)\n                                        {\n                                            goto label_403047;\n                                        }\n                                        char* var_6d0_1;\n                                        int32_t var_67c;\n                                        int32_t rax_56;\n                                        int32_t rax_58;\n                                        void* rsp_3;\n                                        void* rsp_6;\n                                        void* rsp_10;\n                                        void* rsp_11;\n                                        int64_t rdi_18;\n                                        int32_t* r9_2;\n                                        uint64_t r9_3;\n                                        switch (rax_39)\n                                        {\n                                            case 0:\n                                            {\n                                                goto label_403047;\n                                            }\n                                            case 1:\n                                            {\n                                                r9_3 = var_670[((r14_1[0xa] << 5) + 0x10)];\n                                                goto label_414deb;\n                                            }\n                                            case 2:\n                                            {\n                                                r9_3 = var_670[((r14_1[0xa] << 5) + 0x10)];\n                                                goto label_414deb;\n                                            }\n                                            case 3:\n                                            {\n                                                r9_3 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                goto label_414deb;\n                                            }\n                                            case 4:\n                                            {\n                                                r9_3 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                goto label_414deb;\n                                            }\n                                            case 5:\n                                            case 6:\n                                            case 0xd:\n                                            case 0xe:\n                                            {\n                                                r9_3 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                            label_414deb:\n                                                int32_t rax_66 = var_6b8;\n                                                rdi_18 = (r11_2 + r13_1);\n                                                var_6d0_1 = r11_2;\n                                                if (rax_66 == 1)\n                                                {\n                                                    *(rsp_1 - 8) = &var_684;\n                                                    *(rsp_1 - 0x10) = r9_3;\n                                                    rsp_6 = (rsp_1 - 0x10);\n                                                    goto label_415272;\n                                                }\n                                                if (rax_66 == 2)\n                                                {\n                                                    *(rsp_1 - 0x10) = &var_684;\n                                                    *(rsp_1 - 0x18) = r9_3;\n                                                    rsp_10 = (rsp_1 - 0x18);\n                                                    goto label_41522c;\n                                                }\n                                                *(rsp_1 - 0x10) = &var_684;\n                                                rsp_6 = (rsp_1 - 0x10);\n                                                goto label_414e32;\n                                            }\n                                            case 7:\n                                            case 8:\n                                            case 9:\n                                            case 0xa:\n                                            case 0xf:\n                                            case 0x10:\n                                            case 0x11:\n                                            {\n                                                rdi_18 = (r11_2 + r13_1);\n                                                r9_2 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                rax_56 = var_6b8;\n                                                var_6d0_1 = r11_2;\n                                                break;\n                                            }\n                                            case 0xb:\n                                            {\n                                                int512_t zmm0;\n                                                zmm0 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                int32_t rax_83 = var_6b8;\n                                                void* rsp_17;\n                                                if (rax_83 == 1)\n                                                {\n                                                    *(rsp_1 - 0x10) = &var_684;\n                                                    rsp_17 = (rsp_1 - 0x10);\n                                                }\n                                                if (rax_83 == 2)\n                                                {\n                                                    *(rsp_1 - 8) = &var_684;\n                                                    *(rsp_1 - 0x10) = var_67c;\n                                                    rsp_17 = (rsp_1 - 0x10);\n                                                }\n                                                if ((rax_83 == 1 || rax_83 == 2))\n                                                {\n                                                    rax_58 = __snprintf_chk();\n                                                    *rsp_17;\n                                                    *(rsp_17 + 8);\n                                                    rsp_1 = (rsp_17 + 0x10);\n                                                }\n                                                if ((rax_83 != 1 && rax_83 != 2))\n                                                {\n                                                    rax_58 = __snprintf_chk();\n                                                }\n                                                goto label_414d00;\n                                            }\n                                            case 0xc:\n                                            {\n                                                rdi_18 = (r11_2 + r13_1);\n                                                var_6d0_1 = r11_2;\n                                                int80_t x87_r7_2 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                int32_t rax_76 = var_6b8;\n                                                if (rax_76 != 1)\n                                                {\n                                                    if (rax_76 == 2)\n                                                    {\n                                                        *(rsp_1 - 0x10) = &var_684;\n                                                        *(rsp_1 - 0x20) = x87_r7_2;\n                                                        *(rsp_1 - 0x30) = var_67c;\n                                                        rax_58 = __snprintf_chk();\n                                                        r11_2 = var_6d0_1;\n                                                        goto label_414d00;\n                                                    }\n                                                    rsp_3 = (rsp_1 - 0x10);\n                                                    r9_2 = &var_684;\n                                                    *rsp_3 = x87_r7_2;\n                                                    goto label_414cf2;\n                                                }\n                                                *(rsp_1 - 0x10) = &var_684;\n                                                rsp_11 = (rsp_1 - 0x20);\n                                                *rsp_11 = x87_r7_2;\n                                            label_41524c:\n                                                rax_58 = __snprintf_chk(rdi_18, rbx_3, 1, -1, var_6b0_1, var_680);\n                                                rsp_1 = (rsp_11 + 0x20);\n                                                r11_2 = var_6d0_1;\n                                            label_414d00:\n                                                rdx_1 = var_684;\n                                                if (rdx_1 >= 0)\n                                                {\n                                                    goto label_414d0e;\n                                                }\n                                                break;\n                                            }\n                                        }\n                                        if (((((((rax_39 == 7 || rax_39 == 8) || rax_39 == 9) || rax_39 == 0xa) || rax_39 == 0xf) || rax_39 == 0x10) || rax_39 == 0x11))\n                                        {\n                                            if (rax_56 != 1)\n                                            {\n                                                if (rax_56 == 2)\n                                                {\n                                                    *(rsp_1 - 0x10) = &var_684;\n                                                    *(rsp_1 - 0x18) = r9_2;\n                                                    rsp_10 = (rsp_1 - 0x18);\n                                                label_41522c:\n                                                    *(rsp_10 - 8) = var_67c;\n                                                    rsp_11 = (rsp_10 - 8);\n                                                    goto label_41524c;\n                                                }\n                                                *(rsp_1 - 0x10) = &var_684;\n                                                rsp_3 = (rsp_1 - 0x10);\n                                            label_414cf2:\n                                                rax_58 = __snprintf_chk(rdi_18, rbx_3, 1, -1, var_6b0_1, r9_2);\n                                                r11_2 = var_6d0_1;\n                                                *rsp_3;\n                                                *(rsp_3 + 8);\n                                                rsp_1 = (rsp_3 + 0x10);\n                                                goto label_414d00;\n                                            }\n                                            *(rsp_1 - 8) = &var_684;\n                                            *(rsp_1 - 0x10) = r9_2;\n                                            rsp_6 = (rsp_1 - 0x10);\n                                        label_415272:\n                                            r9_3 = var_680;\n                                        label_414e32:\n                                            rax_58 = __snprintf_chk(rdi_18, rbx_3, 1, -1, var_6b0_1, r9_3);\n                                            rdx_1 = var_684;\n                                            *(rsp_6 + 8);\n                                            rsp_1 = (rsp_6 + 0x10);\n                                            r11_2 = var_6d0_1;\n                                            if (rdx_1 >= 0)\n                                            {\n                                            label_414d0e:\n                                                int64_t rcx_16 = rdx_1;\n                                                if ((rcx_16 < rbx_3 && *(&r11_2[rcx_16] + r13_1) != 0))\n                                                {\n                                                    goto label_41519c;\n                                                }\n                                                if (rdx_1 < rax_58)\n                                                {\n                                                label_414d28:\n                                                    var_684 = rax_58;\n                                                    rdx_1 = rax_58;\n                                                }\n                                                if ((rdx_1 + 1) < rbx_3)\n                                                {\n                                                    rbx_2 = r11_2;\n                                                    r15_2 = (rdx_1 + r13_1);\n                                                    *var_6a8 = rax_37;\n                                                    goto label_414b67;\n                                                }\n                                                if (r15_6 > 0x7ffffffe)\n                                                {\n                                                    if ((r11_2 != arg1 && r11_2 != 0))\n                                                    {\n                                                        free(r11_2);\n                                                    }\n                                                    if (var_6e0_1 != 0)\n                                                    {\n                                                        free(var_6e0_1);\n                                                    }\n                                                    if (var_580 != &var_568)\n                                                    {\n                                                        free(var_580);\n                                                    }\n                                                    if (var_670 != &var_668)\n                                                    {\n                                                        free(var_670);\n                                                    }\n                                                    rbx_2 = nullptr;\n                                                    *var_6a8 = 0x4b;\n                                                    break;\n                                                }\n                                                uint64_t rax_60 = (rdx_1 + 2);\n                                                void* rax_61 = (rax_60 + r13_1);\n                                                int64_t rcx_18;\n                                                rcx_18 = (rax_60 + r13_1) < rax_60;\n                                                if (r12_1 >= 0)\n                                                {\n                                                    void* rdx_13 = (r12_1 + r12_1);\n                                                    if (rcx_18 == 0)\n                                                    {\n                                                        if (rdx_13 >= rax_61)\n                                                        {\n                                                            rax_61 = rdx_13;\n                                                        }\n                                                        if (r12_1 >= rax_61)\n                                                        {\n                                                            goto label_4149a2;\n                                                        }\n                                                        r12_1 = (r12_1 + r12_1);\n                                                        if ((r12_1 < rax_61 && rax_61 != -1))\n                                                        {\n                                                            r12_1 = rax_61;\n                                                        }\n                                                        if (((r12_1 < rax_61 && rax_61 != -1) || r12_1 >= rax_61))\n                                                        {\n                                                            rbx_3 = r11_2 == arg1;\n                                                            if ((r11_2 == 0 || (r11_2 != 0 && rbx_3 != 0)))\n                                                            {\n                                                                char* rax_101 = malloc(r12_1);\n                                                                if (rax_101 != 0)\n                                                                {\n                                                                    if ((r13_1 != 0 && rbx_3 != 0))\n                                                                    {\n                                                                        r11_2 = memcpy(rax_101, r11_2, r13_1);\n                                                                        goto label_4149a2;\n                                                                    }\n                                                                    r11_2 = rax_101;\n                                                                    goto label_4149a2;\n                                                                }\n                                                            }\n                                                            if ((r11_2 != 0 && rbx_3 == 0))\n                                                            {\n                                                                char* rax_62 = realloc(r11_2, r12_1);\n                                                                if (rax_62 != 0)\n                                                                {\n                                                                    r11_2 = rax_62;\n                                                                    goto label_4149a2;\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                                else if (r12_1 == -1)\n                                                {\n                                                    goto label_4149a2;\n                                                }\n                                                r15_7 = r11_2;\n                                            }\n                                        }\n                                        if ((((((((((rax_39 == 7 || rax_39 == 8) || rax_39 == 9) || rax_39 == 0xa) || rax_39 == 0xf) || rax_39 == 0x10) || rax_39 == 0x11) && rax_56 == 1) && rdx_1 < 0) || rax_39 == 0xc))\n                                        {\n                                            if (*(var_6c8 + 1) != 0)\n                                            {\n                                                *(var_6c8 + 1) = 0;\n                                                goto label_4149a2;\n                                            }\n                                            if (rax_58 < 0)\n                                            {\n                                                int32_t rbx_4 = *var_6a8;\n                                                if (rbx_4 == 0)\n                                                {\n                                                    rbx_4 = 0x54;\n                                                    if ((r14_1[9] & 0xef) != 0x63)\n                                                    {\n                                                        rbx_4 = 0x16;\n                                                    }\n                                                }\n                                                if ((r11_2 != arg1 && r11_2 != 0))\n                                                {\n                                                    free(r11_2);\n                                                }\n                                                if (var_6e0_1 != 0)\n                                                {\n                                                    free(var_6e0_1);\n                                                }\n                                                if (var_580 != &var_568)\n                                                {\n                                                    free(var_580);\n                                                }\n                                                if (var_670 != &var_668)\n                                                {\n                                                    free(var_670);\n                                                }\n                                                *var_6a8 = rbx_4;\n                                                rbx_2 = nullptr;\n                                                break;\n                                            }\n                                            goto label_414d28;\n                                        }\n                                    }\n                                    if (((rax_21 - 0x45) <= 2 || ((rax_21 - 0x45) > 2 && rax_21 == 0x41)))\n                                    {\n                                        if (rax_19 != 0xc)\n                                        {\n                                            goto label_414777;\n                                        }\n                                        long double x87_r7_1 = *(rdx_1 + 0x10);\n                                        if ((!(FCMP_UO(x87_r7_1, x87_r7_1))))\n                                        {\n                                            long double x87_r6_3 = x87_r7_1;\n                                            x87_r7_1 = (x87_r7_1 + x87_r7_1);\n                                            (x87_r6_3 - x87_r7_1);\n                                            bool cond:7_1 = x87_r6_3 != x87_r7_1;\n                                            if ((FCMP_UO(x87_r6_3, x87_r7_1)))\n                                            {\n                                                goto label_414777;\n                                            }\n                                            if (cond:7_1)\n                                            {\n                                                goto label_414777;\n                                            }\n                                            goto label_414bfd;\n                                        }\n                                    label_414bfd:\n                                        char* rdx_11 = r14_1[3];\n                                        int64_t rdi_16 = r14_1[4];\n                                        int32_t r11_3 = r14_1[2];\n                                        int64_t r10_1;\n                                        if (rdx_11 == rdi_16)\n                                        {\n                                            r10_1 = 0;\n                                        label_4149f0:\n                                            void* rdx_9 = r14_1[6];\n                                            int64_t rcx_10 = r14_1[7];\n                                            int64_t rcx_11;\n                                            int64_t rdx_10;\n                                            if (rdx_9 != rcx_10)\n                                            {\n                                                int64_t rsi_10 = r14_1[8];\n                                                if (rsi_10 == -1)\n                                                {\n                                                    char* rax_139 = (rdx_9 + 1);\n                                                    rdx_10 = 0;\n                                                    if (rcx_10 == rax_139)\n                                                    {\n                                                    label_415cd4:\n                                                        rcx_11 = 0xc;\n                                                    label_4150c1:\n                                                        int64_t rax_97 = rcx_11;\n                                                        if (r10_1 >= rcx_11)\n                                                        {\n                                                            rax_97 = r10_1;\n                                                        }\n                                                        size_t rax_98 = (rax_97 + 1);\n                                                        var_698 = rax_98;\n                                                        if (rax_97 >= -1)\n                                                        {\n                                                            goto label_414a65;\n                                                        }\n                                                        void var_2f8;\n                                                        int64_t rcx_21;\n                                                        if (rax_98 <= 0x2bc)\n                                                        {\n                                                            rcx_21 = &var_2f8;\n                                                        }\n                                                        else\n                                                        {\n                                                            var_6b8 = r11_3;\n                                                            var_6a8 = x87_r7_1;\n                                                            if (rax_98 == -1)\n                                                            {\n                                                                goto label_414a65;\n                                                            }\n                                                            int64_t rax_99 = malloc(rax_98);\n                                                            r11_3 = var_6b8;\n                                                            x87_r7_1 = var_6a8;\n                                                            rcx_21 = rax_99;\n                                                            if (rax_99 == 0)\n                                                            {\n                                                                goto label_414a65;\n                                                            }\n                                                        }\n                                                        int64_t r9_6;\n                                                        int64_t r15_9;\n                                                        if ((!(FCMP_UO(x87_r7_1, x87_r7_1))))\n                                                        {\n                                                            uint16_t x87status_1;\n                                                            int16_t temp0_2;\n                                                            temp0_2 = __fnstcw_memmem16(arg5);\n                                                            var_680 = temp0_2;\n                                                            int32_t r8_7 = var_680;\n                                                            int16_t rax_100;\n                                                            *rax_100[1] = (*r8_7[1] | 3);\n                                                            var_680 = rax_100;\n                                                            uint16_t x87control;\n                                                            uint16_t x87status_2;\n                                                            x87control = __fldcw_memmem16(var_680);\n                                                            bool c0_1;\n                                                            bool c1_1;\n                                                            bool c2_1;\n                                                            bool c3_1;\n                                                            c0_1 = __fxam(x87_r7_1);\n                                                            if ((*((((c0_1) ? 1 : 0) << 8) | ((((c1_1) ? 1 : 0) << 9) | ((((c2_1) ? 1 : 0) << 0xa) | ((((c3_1) ? 1 : 0) << 0xe) | 0x3800))))[1] & 2) != 0)\n                                                            {\n                                                                *rcx_21 = 0x2d;\n                                                                x87_r7_1 = (-x87_r7_1);\n                                                                r15_9 = (rcx_21 + 1);\n                                                            }\n                                                            else if ((r11_3 & 4) != 0)\n                                                            {\n                                                                r15_9 = (rcx_21 + 1);\n                                                                *rcx_21 = 0x2b;\n                                                            }\n                                                            else\n                                                            {\n                                                                r15_9 = rcx_21;\n                                                                if ((r11_3 & 8) != 0)\n                                                                {\n                                                                    r15_9 = (rcx_21 + 1);\n                                                                    *rcx_21 = 0x20;\n                                                                }\n                                                            }\n                                                            long double x87_r6_4 = 0;\n                                                            if (x87_r7_1 <= x87_r6_4)\n                                                            {\n                                                                (x87_r7_1 - x87_r6_4);\n                                                                bool cond:14_1 = x87_r7_1 != x87_r6_4;\n                                                                if ((FCMP_UO(x87_r7_1, x87_r6_4)))\n                                                                {\n                                                                    goto label_41519c;\n                                                                }\n                                                                if (cond:14_1)\n                                                                {\n                                                                    goto label_41519c;\n                                                                }\n                                                                bool rax_118 = (r14_1[9] & 0xdf);\n                                                                int32_t var_6e8;\n                                                                if (rax_118 == 0x46)\n                                                                {\n                                                                    *r15_9 = 0x30;\n                                                                    if ((r11_3 & 0x10) != 0)\n                                                                    {\n                                                                    label_415af9:\n                                                                        var_6e8 = r10_1;\n                                                                        var_6b8 = r11_3;\n                                                                        r9_6 = (r15_9 + 2);\n                                                                        char rax_137 = *nl_langinfo(0x10000);\n                                                                        r11_3 = var_6b8;\n                                                                        r10_1 = var_6e8;\n                                                                        if (rax_137 == 0)\n                                                                        {\n                                                                            rax_137 = 0x2e;\n                                                                        }\n                                                                        *(r15_9 + 1) = rax_137;\n                                                                        if (rdx_10 != 0)\n                                                                        {\n                                                                            int64_t rsi_34 = ((r15_9 + rdx_10) + 2);\n                                                                            int64_t rax_138 = r9_6;\n                                                                        label_415b70:\n                                                                            rax_138 = (rax_138 + 1);\n                                                                            *(rax_138 - 1) = 0x30;\n                                                                            if (rax_138 != rsi_34)\n                                                                            {\n                                                                                goto label_415b70;\n                                                                            }\n                                                                            r9_6 = (r9_6 + rdx_10);\n                                                                        }\n                                                                        goto label_4155eb;\n                                                                    }\n                                                                    if (rdx_10 != 0)\n                                                                    {\n                                                                        goto label_415af9;\n                                                                    }\n                                                                label_4155e7:\n                                                                    r9_6 = (r15_9 + 1);\n                                                                label_4155eb:\n                                                                    var_680 = r8_7;\n                                                                    uint16_t x87status_3;\n                                                                    arg5 = __fldcw_memmem16(var_680);\n                                                                label_4155fc:\n                                                                    uint64_t r8_11 = (r9_6 - rcx_21);\n                                                                    if (r10_1 > r8_11)\n                                                                    {\n                                                                        int64_t r10_2 = (r10_1 - r8_11);\n                                                                        int64_t rdi_38 = (r9_6 + r10_2);\n                                                                        r8_11 = (rdi_38 - rcx_21);\n                                                                        if ((r11_3 & 2) == 0)\n                                                                        {\n                                                                            if (((r11_3 & 0x20) == 0 || ((r11_3 & 0x20) != 0 && r15_9 == 0)))\n                                                                            {\n                                                                                int64_t rax_130 = -1;\n                                                                                int64_t rdx_26 = ((rcx_21 - 1) - r9_6);\n                                                                                if (rcx_21 < r9_6)\n                                                                                {\n                                                                                label_415935:\n                                                                                    *(rdi_38 + rax_130) = *(r9_6 + rax_130);\n                                                                                    rax_130 = (rax_130 - 1);\n                                                                                    if (rdx_26 != rax_130)\n                                                                                    {\n                                                                                        goto label_415935;\n                                                                                    }\n                                                                                    r9_6 = rcx_21;\n                                                                                }\n                                                                                if (r10_2 != 0)\n                                                                                {\n                                                                                    int64_t r10_4 = (r10_2 + r9_6);\n                                                                                label_415958:\n                                                                                    r9_6 = (r9_6 + 1);\n                                                                                    *(r9_6 - 1) = 0x20;\n                                                                                    if (r9_6 != r10_4)\n                                                                                    {\n                                                                                        goto label_415958;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                            if (((r11_3 & 0x20) != 0 && r15_9 != 0))\n                                                                            {\n                                                                                if (r15_9 >= r9_6)\n                                                                                {\n                                                                                    r15_9 = r9_6;\n                                                                                }\n                                                                                else\n                                                                                {\n                                                                                    int64_t rax_119 = -1;\n                                                                                    int64_t rdx_21 = ((r15_9 - 1) - r9_6);\n                                                                                label_41564d:\n                                                                                    *(rdi_38 + rax_119) = *(r9_6 + rax_119);\n                                                                                    rax_119 = (rax_119 - 1);\n                                                                                    if (rax_119 != rdx_21)\n                                                                                    {\n                                                                                        goto label_41564d;\n                                                                                    }\n                                                                                }\n                                                                                if (r10_2 != 0)\n                                                                                {\n                                                                                    int64_t r10_3 = (r10_2 + r15_9);\n                                                                                label_415668:\n                                                                                    r15_9 = (r15_9 + 1);\n                                                                                    *(r15_9 - 1) = 0x30;\n                                                                                    if (r15_9 != r10_3)\n                                                                                    {\n                                                                                        goto label_415668;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                        else if (r10_2 != 0)\n                                                                        {\n                                                                        label_415ac0:\n                                                                            r9_6 = (r9_6 + 1);\n                                                                            *(r9_6 - 1) = 0x20;\n                                                                            if (rdi_38 != r9_6)\n                                                                            {\n                                                                                goto label_415ac0;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                    if (var_698 <= r8_11)\n                                                                    {\n                                                                        goto label_41519c;\n                                                                    }\n                                                                    uint64_t rax_121 = (r13_1 + r8_11);\n                                                                    int64_t rsi_24;\n                                                                    rsi_24 = (r13_1 + r8_11) < r13_1;\n                                                                    r15_2 = rax_121;\n                                                                    if ((r12_1 - r13_1) > r8_11)\n                                                                    {\n                                                                        goto label_41572a;\n                                                                    }\n                                                                    if (rsi_24 != 0)\n                                                                    {\n                                                                        if (r12_1 != -1)\n                                                                        {\n                                                                            goto label_414a65;\n                                                                        }\n                                                                        goto label_41572a;\n                                                                    }\n                                                                    if (r12_1 >= rax_121)\n                                                                    {\n                                                                        goto label_41572a;\n                                                                    }\n                                                                    bool cond:21_1 = r12_1 < 0;\n                                                                    if (r12_1 != 0)\n                                                                    {\n                                                                        if (cond:21_1)\n                                                                        {\n                                                                            goto label_414a65;\n                                                                        }\n                                                                        r12_1 = (r12_1 + r12_1);\n                                                                        if (r12_1 >= rax_121)\n                                                                        {\n                                                                            goto label_4156d5;\n                                                                        }\n                                                                    }\n                                                                    else if (rax_121 <= 0xc)\n                                                                    {\n                                                                        r12_1 = 0xc;\n                                                                    label_4156d5:\n                                                                        void* rdx_23;\n                                                                        rdx_23 = rbx_2 == arg1;\n                                                                        if (rbx_2 == 0)\n                                                                        {\n                                                                        label_41596e:\n                                                                            var_6b8 = rdx_23;\n                                                                            var_698 = rcx_21;\n                                                                            char* rax_131 = malloc(r12_1);\n                                                                            rcx_21 = var_698;\n                                                                            char rdx_27 = var_6b8;\n                                                                            if (rax_131 == 0)\n                                                                            {\n                                                                                goto label_414a65;\n                                                                            }\n                                                                            if ((r13_1 == 0 || (r13_1 != 0 && rdx_27 == 0)))\n                                                                            {\n                                                                                rbx_2 = rax_131;\n                                                                            }\n                                                                            if ((r13_1 != 0 && rdx_27 != 0))\n                                                                            {\n                                                                                var_698 = rcx_21;\n                                                                                rcx_21 = var_698;\n                                                                                rbx_2 = memcpy(rax_131, rbx_2, r13_1);\n                                                                            }\n                                                                            goto label_41572a;\n                                                                        }\n                                                                        if (rdx_23 != 0)\n                                                                        {\n                                                                            goto label_41596e;\n                                                                        }\n                                                                        var_6a8 = r8_11;\n                                                                        var_698 = rcx_21;\n                                                                        char* rax_122 = realloc(rbx_2, r12_1);\n                                                                        if (rax_122 == 0)\n                                                                        {\n                                                                            goto label_414a65;\n                                                                        }\n                                                                        rcx_21 = var_698;\n                                                                        r8_11 = var_6a8;\n                                                                        rbx_2 = rax_122;\n                                                                    label_41572a:\n                                                                        var_698 = rcx_21;\n                                                                        memcpy((rbx_2 + r13_1), rcx_21, r8_11);\n                                                                        int64_t rcx_25 = var_698;\n                                                                        if (rcx_25 != &var_2f8)\n                                                                        {\n                                                                            free(rcx_25);\n                                                                        }\n                                                                        goto label_414b67;\n                                                                    }\n                                                                    if (rax_121 == -1)\n                                                                    {\n                                                                        goto label_414a65;\n                                                                    }\n                                                                    r12_1 = rax_121;\n                                                                    goto label_4156d5;\n                                                                }\n                                                                if (rax_118 != 0x45)\n                                                                {\n                                                                    int32_t var_6f0;\n                                                                    if (rax_118 == 0x47)\n                                                                    {\n                                                                        *r15_9 = 0x30;\n                                                                        if ((r11_3 & 0x10) == 0)\n                                                                        {\n                                                                            goto label_4155e7;\n                                                                        }\n                                                                        int64_t r9_8 = (r15_9 + 2);\n                                                                        if (rdx_10 == 0)\n                                                                        {\n                                                                            var_6a8 = r11_3;\n                                                                            r11_3 = var_6a8;\n                                                                            char rax_156 = *nl_langinfo(0x10000);\n                                                                            r9_6 = r9_8;\n                                                                            if (rax_156 == 0)\n                                                                            {\n                                                                                rax_156 = 0x2e;\n                                                                            }\n                                                                            *(r15_9 + 1) = rax_156;\n                                                                        }\n                                                                        else\n                                                                        {\n                                                                            char* rsi_32 = (rdx_10 - 1);\n                                                                            var_6f0 = r10_1;\n                                                                            var_6e8 = r9_8;\n                                                                            var_6c8 = r11_3;\n                                                                            var_6b8 = rdx_10;\n                                                                            char rax_134 = *nl_langinfo(0x10000);\n                                                                            r11_3 = var_6c8;\n                                                                            r9_6 = var_6e8;\n                                                                            r10_1 = var_6f0;\n                                                                            if (rax_134 == 0)\n                                                                            {\n                                                                                rax_134 = 0x2e;\n                                                                            }\n                                                                            *(r15_9 + 1) = rax_134;\n                                                                            if (rsi_32 != 0)\n                                                                            {\n                                                                                void* rdx_30 = &var_6b8[(r15_9 + 1)];\n                                                                                int64_t rax_135 = r9_6;\n                                                                            label_415a9e:\n                                                                                rax_135 = (rax_135 + 1);\n                                                                                *(rax_135 - 1) = 0x30;\n                                                                                if (rax_135 != rdx_30)\n                                                                                {\n                                                                                    goto label_415a9e;\n                                                                                }\n                                                                                r9_6 = &rsi_32[r9_6];\n                                                                            }\n                                                                        }\n                                                                        goto label_4155eb;\n                                                                    }\n                                                                    if (rax_118 != 0x41)\n                                                                    {\n                                                                        goto label_41519c;\n                                                                    }\n                                                                    char* rax_142 = (r15_9 + 2);\n                                                                    *r15_9 = 0x30;\n                                                                    char rax_143 = r14_1[9];\n                                                                    *(r15_9 + 2) = 0x30;\n                                                                    *(r15_9 + 1) = (rax_143 + 0x17);\n                                                                    char* rsi_41;\n                                                                    if ((r11_3 & 0x10) == 0)\n                                                                    {\n                                                                        rsi_41 = (r15_9 + 3);\n                                                                    }\n                                                                    if (((r11_3 & 0x10) != 0 || ((r11_3 & 0x10) == 0 && rdx_10 != 0 != 0)))\n                                                                    {\n                                                                        var_6f0 = r10_1;\n                                                                        var_6e8 = rcx_21;\n                                                                        var_6c8 = r11_3;\n                                                                        rsi_41 = (r15_9 + 4);\n                                                                        char rax_153 = *nl_langinfo(0x10000);\n                                                                        r11_3 = var_6c8;\n                                                                        rcx_21 = var_6e8;\n                                                                        r10_1 = var_6f0;\n                                                                        if (rax_153 == 0)\n                                                                        {\n                                                                            rax_153 = 0x2e;\n                                                                        }\n                                                                        *(r15_9 + 3) = rax_153;\n                                                                        if (rdx_10 != 0)\n                                                                        {\n                                                                            int64_t rdi_53 = ((r15_9 + rdx_10) + 4);\n                                                                            char* rax_154 = rsi_41;\n                                                                        label_415ee5:\n                                                                            rax_154 = &rax_154[1];\n                                                                            rax_154[-1] = 0x30;\n                                                                            if (rax_154 != rdi_53)\n                                                                            {\n                                                                                goto label_415ee5;\n                                                                            }\n                                                                            rsi_41 = &rsi_41[rdx_10];\n                                                                        }\n                                                                    }\n                                                                    char rax_145 = r14_1[9];\n                                                                    r9_6 = &rsi_41[3];\n                                                                    *(rsi_41 + 1) = 0x302b;\n                                                                    r15_9 = rax_142;\n                                                                    *rsi_41 = (rax_145 + 0xf);\n                                                                    goto label_4155eb;\n                                                                }\n                                                                *r15_9 = 0x30;\n                                                                char* rsi_27;\n                                                                if ((r11_3 & 0x10) == 0)\n                                                                {\n                                                                    rsi_27 = (r15_9 + 1);\n                                                                }\n                                                                if (((r11_3 & 0x10) != 0 || ((r11_3 & 0x10) == 0 && rdx_10 != 0 != 0)))\n                                                                {\n                                                                    var_6e8 = r10_1;\n                                                                    var_6b8 = r11_3;\n                                                                    rsi_27 = (r15_9 + 2);\n                                                                    char rax_148 = *nl_langinfo(0x10000);\n                                                                    r11_3 = var_6b8;\n                                                                    r10_1 = var_6e8;\n                                                                    if (rax_148 == 0)\n                                                                    {\n                                                                        rax_148 = 0x2e;\n                                                                    }\n                                                                    *(r15_9 + 1) = rax_148;\n                                                                    if (rdx_10 != 0)\n                                                                    {\n                                                                        int64_t rdi_50 = ((r15_9 + rdx_10) + 2);\n                                                                        char* rax_149 = rsi_27;\n                                                                    label_415dd0:\n                                                                        rax_149 = &rax_149[1];\n                                                                        rax_149[-1] = 0x30;\n                                                                        if (rax_149 != rdi_50)\n                                                                        {\n                                                                            goto label_415dd0;\n                                                                        }\n                                                                        rsi_27 = &rsi_27[rdx_10];\n                                                                    }\n                                                                }\n                                                                char rax_123 = r14_1[9];\n                                                                r9_6 = &rsi_27[4];\n                                                                rsi_27[3] = 0x30;\n                                                                *rsi_27 = rax_123;\n                                                                *(rsi_27 + 1) = 0x302b;\n                                                                goto label_4155eb;\n                                                            }\n                                                            long double x87_r6_7 = (x87_r6_4 + x87_r6_4);\n                                                            (x87_r6_7 - x87_r6_4);\n                                                            bool cond:15_1 = x87_r6_7 != x87_r6_4;\n                                                            if ((!(FCMP_O(x87_r6_7, x87_r6_4))))\n                                                            {\n                                                                goto label_41519c;\n                                                            }\n                                                            if (cond:15_1)\n                                                            {\n                                                                goto label_41519c;\n                                                            }\n                                                            r9_6 = (r15_9 + 3);\n                                                            if ((r14_1[9] - 0x41) > 0x19)\n                                                            {\n                                                                *(r15_9 + 2) = 0x66;\n                                                                *r15_9 = 0x6e69;\n                                                                r15_9 = 0;\n                                                            }\n                                                            else\n                                                            {\n                                                                *(r15_9 + 2) = 0x46;\n                                                                *r15_9 = 0x4e49;\n                                                                r15_9 = 0;\n                                                            }\n                                                            goto label_4155eb;\n                                                        }\n                                                        r9_6 = (rcx_21 + 3);\n                                                        if ((r15_3 - 0x41) > 0x19)\n                                                        {\n                                                            *(rcx_21 + 2) = 0x6e;\n                                                            r15_9 = 0;\n                                                            *rcx_21 = 0x616e;\n                                                        }\n                                                        else\n                                                        {\n                                                            *(rcx_21 + 2) = 0x4e;\n                                                            r15_9 = 0;\n                                                            *rcx_21 = 0x414e;\n                                                        }\n                                                        goto label_4155fc;\n                                                    }\n                                                    char* rsi_36 = rax_139;\n                                                label_415c33:\n                                                    char* rdi_49 = &rsi_36[1];\n                                                    int64_t rax_140 = (*rsi_36 - 0x30);\n                                                    int64_t rsi_39 = -1;\n                                                    if (rdx_10 <= 0x1999999999999999)\n                                                    {\n                                                        int64_t rsi_40 = (rdx_10 * 5);\n                                                        rsi_39 = (rsi_40 + rsi_40);\n                                                    }\n                                                    rsi_36 = rdi_49;\n                                                    rdx_10 = (rax_140 + rsi_39);\n                                                    if ((rax_140 + rsi_39) < rax_140)\n                                                    {\n                                                        if (rcx_10 == rdi_49)\n                                                        {\n                                                            goto label_414a65;\n                                                        }\n                                                    label_415c67:\n                                                        rsi_36 = &rdi_49[1];\n                                                        if (rsi_36[-1] != 0x30)\n                                                        {\n                                                            if (rcx_10 != rsi_36)\n                                                            {\n                                                                rdi_49 = rsi_36;\n                                                                goto label_415c67;\n                                                            }\n                                                            goto label_414a65;\n                                                        }\n                                                        rdx_10 = -1;\n                                                    }\n                                                    if (rcx_10 != rsi_36)\n                                                    {\n                                                        goto label_415c33;\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    void* r8_4 = &var_670[(rsi_10 << 5)];\n                                                    if (*r8_4 != 5)\n                                                    {\n                                                        goto label_41519c;\n                                                    }\n                                                    rdx_10 = *(r8_4 + 0x10);\n                                                    if (rdx_10 < 0)\n                                                    {\n                                                        goto label_4150a0;\n                                                    }\n                                                }\n                                                if (rdx_10 == 0)\n                                                {\n                                                    goto label_415cd4;\n                                                }\n                                                rcx_11 = (rdx_10 + 0xc);\n                                                if (rdx_10 >= -0xc)\n                                                {\n                                                    goto label_414a65;\n                                                }\n                                                goto label_4150c1;\n                                            }\n                                        label_4150a0:\n                                            bool cond:9_1 = rax_21 != 0x41;\n                                            rcx_11 = 0xc;\n                                            if (rax_21 != 0x41)\n                                            {\n                                                rcx_11 = 0x12;\n                                            }\n                                            rdx_10 = 0;\n                                            if (cond:9_1)\n                                            {\n                                                rdx_10 = 6;\n                                            }\n                                            goto label_4150c1;\n                                        }\n                                        int64_t rcx_12 = r14_1[5];\n                                        if (rcx_12 != -1)\n                                        {\n                                            void* rcx_14 = &var_670[(rcx_12 << 5)];\n                                            if (*rcx_14 != 5)\n                                            {\n                                                goto label_41519c;\n                                            }\n                                            r10_1 = *(rcx_14 + 0x10);\n                                            if (r10_1 < 0)\n                                            {\n                                                r11_3 = (r11_3 | 2);\n                                                r10_1 = (-r10_1);\n                                            }\n                                            goto label_4149f0;\n                                        }\n                                        r10_1 = 0;\n                                        var_698 = rcx_12;\n                                    label_415ba1:\n                                        char* rsi_35 = &rdx_11[1];\n                                        int64_t r9_10 = -1;\n                                        int64_t rdx_34 = (*rdx_11 - 0x30);\n                                        if (r10_1 <= 0x1999999999999999)\n                                        {\n                                            int64_t r9_11 = (r10_1 * 5);\n                                            r9_10 = (r9_11 + r9_11);\n                                        }\n                                        r10_1 = (rdx_34 + r9_10);\n                                        rdx_11 = rsi_35;\n                                        if ((rdx_34 + r9_10) < rdx_34)\n                                        {\n                                            int64_t rcx_26 = var_698;\n                                            if (rdi_16 != rsi_35)\n                                            {\n                                            label_415be6:\n                                                rdx_11 = &rdx_11[1];\n                                                if (rdx_11[-1] == 0x30)\n                                                {\n                                                    var_698 = rcx_26;\n                                                    r10_1 = -1;\n                                                }\n                                                else if (rdi_16 != rdx_11)\n                                                {\n                                                    goto label_415be6;\n                                                }\n                                            }\n                                            if ((rdi_16 == rsi_35 || (rdi_16 != rsi_35 && rdx_11[-1] != 0x30)))\n                                            {\n                                                r10_1 = rcx_26;\n                                            }\n                                        }\n                                        if ((((((rdx_34 + r9_10) < rdx_34 && rdi_16 != rsi_35) && rdx_11[-1] == 0x30) || (rdx_34 + r9_10) >= rdx_34) && rdi_16 != rdx_11))\n                                        {\n                                            goto label_415ba1;\n                                        }\n                                        goto label_4149f0;\n                                    }\n                                }\n                            }\n                            if ((r15_7 != arg1 && r15_7 != 0))\n                            {\n                                goto label_414c8b;\n                            }\n                        }\n                        else\n                        {\n                            if (r12_1 >= rax_8)\n                            {\n                                goto label_4146e3;\n                            }\n                            bool cond:0_1 = r12_1 < 0;\n                            if ((r12_1 == 0 && rax_8 <= 0xc))\n                            {\n                                r12_1 = 0xc;\n                                rdx_1 = rbx_2 == arg1;\n                                if (rbx_2 == 0)\n                                {\n                                label_4145ca:\n                                    var_6a8 = rdx_1;\n                                    var_698 = rcx_1;\n                                    char* rax_9 = malloc(r12_1);\n                                    rcx_1 = var_698;\n                                    char rdx_2 = var_6a8;\n                                    if (rax_9 == 0)\n                                    {\n                                        goto label_414a65;\n                                    }\n                                    if ((r15_2 == 0 || (r15_2 != 0 && rdx_2 == 0)))\n                                    {\n                                        rbx_2 = rax_9;\n                                    }\n                                    if ((r15_2 != 0 && rdx_2 != 0))\n                                    {\n                                        var_698 = rcx_1;\n                                        rcx_1 = var_698;\n                                        rbx_2 = memcpy(rax_9, rbx_2, r15_2);\n                                    }\n                                    goto label_4146e3;\n                                }\n                            }\n                            if (r12_1 != 0)\n                            {\n                                if (cond:0_1)\n                                {\n                                    goto label_414a65;\n                                }\n                                r12_1 = (r12_1 + r12_1);\n                                if (r12_1 >= rax_8)\n                                {\n                                    goto label_414692;\n                                }\n                            }\n                            if (((r12_1 == 0 && rax_8 > 0xc) || r12_1 != 0))\n                            {\n                                if (rax_8 == -1)\n                                {\n                                    goto label_414a65;\n                                }\n                                r12_1 = rax_8;\n                            label_414692:\n                                rdx_1 = rbx_2 == arg1;\n                                if (rbx_2 == 0)\n                                {\n                                    goto label_4145ca;\n                                }\n                            }\n                            if (((((r12_1 == 0 && rax_8 > 0xc) || r12_1 != 0) && rax_8 != -1) || (r12_1 == 0 && rax_8 <= 0xc)))\n                            {\n                                if (rdx_1 != 0)\n                                {\n                                    goto label_4145ca;\n                                }\n                                var_698 = rcx_1;\n                                char* rax_15 = realloc(rbx_2, r12_1);\n                                if (rax_15 != 0)\n                                {\n                                    rcx_1 = var_698;\n                                    rbx_2 = rax_15;\n                                    goto label_4146e3;\n                                }\n                            label_414c7a:\n                                r15_7 = rbx_2;\n                                var_6a8 = __errno_location();\n                            label_414c8b:\n                                free(r15_7);\n                            }\n                        }\n                        if (var_6e0_1 == 0)\n                        {\n                            break;\n                        }\n                        free(var_6e0_1);\n                        break;\n                    }\n                }\n                if ((rcx == r8_1 || (((rcx != r8_1 && (!/* if (rcx == r8_1 || (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && not(unimplemented  {add rax, rcx} && var_6e0_1 == 0) && not(unimplemented  {add rax, rcx})))... */)) && (!(/* if (rcx == r8_1 || (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && not(unimplemented  {add rax, rcx} && var_6e0_1 == 0) && not(unimplemented  {add rax, rcx})))... */ && var_6e0_1 == 0))) && (!/* if (rcx == r8_1 || (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && not(unimplemented  {add rax, rcx} && var_6e0_1 == 0) && not(unimplemented  {add rax, rcx})))... */))))\n                {\n                    r13_1 = r15_2;\n                    goto label_4146ef;\n                }\n                if ((((rcx != r8_1 && (!/* if (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && unimplemented  {add rax, rcx} && var_6e0_1 == 0)... */)) && /* if (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && unimplemented  {add rax, rcx} && var_6e0_1 == 0)... */) && var_6e0_1 == 0))\n                {\n                    goto label_414b95;\n                }\n            }\n            else\n            {\n            label_414b95:\n                var_6a8 = __errno_location();\n            }\n            if (((rax_3 + var_570) < rax_3 || ((((rax_3 + var_570) >= rax_3 && rax_4 < -6) && rcx != r8_1) && /* if (rax_3 + var_570 u< rax_3 || (rax_3 + var_570 u>= rax_3 && rax_4 u< -6 && rcx != r8_1 && unimplemented  {add rax, rcx}))... */)))\n            {\n                if (var_580 != &var_568)\n                {\n                    free(var_580);\n                }\n                if (var_670 == &var_668)\n                {\n                    goto label_414ad8;\n                }\n                free(var_670);\n            label_414ad8:\n                rbx_2 = nullptr;\n                *var_6a8 = 0xc;\n            }\n        }\n        else\n        {\n            if (var_580 != &var_568)\n            {\n                free(var_580);\n            }\n            if (var_670 != &var_668)\n            {\n                free(var_670);\n            }\n            rbx_2 = nullptr;\n            *__errno_location() = 0x16;\n        }\n    }\nlabel_414af1:\n    return rbx_2;\n}\n\n"
        },
        {
            "funcName": "sub_415f90",
            "funcStartAddr": "0x415f90",
            "funcEndAddr": "0x416023",
            "decompiledFuncCode": "FILE* sub_415f90(char* arg1, char* arg2)\n{\n    FILE* rax = fopen(arg1, arg2);\n    FILE* rbx = rax;\n    if (rax != 0)\n    {\n        int32_t rax_1 = fileno(rax);\n        if (rax_1 <= 2)\n        {\n            int32_t rax_3 = sub_4143d0(rax_1);\n            if (rax_3 < 0)\n            {\n                int32_t* rax_7 = __errno_location();\n                FILE* rdi_5 = rbx;\n                rbx = nullptr;\n                int32_t r12_2 = *rax_7;\n                sub_4143e0(rdi_5);\n                *rax_7 = r12_2;\n            }\n            else\n            {\n                int32_t rax_4 = sub_4143e0(rbx);\n                FILE* rax_5;\n                if (rax_4 == 0)\n                {\n                    rax_5 = fdopen(rax_3, arg2);\n                    rbx = rax_5;\n                }\n                if ((rax_4 != 0 || (rax_4 == 0 && rax_5 == 0)))\n                {\n                    int32_t* rax_6 = __errno_location();\n                    int32_t rbp_1 = *rax_6;\n                    close(rax_3);\n                    *rax_6 = rbp_1;\n                    rbx = nullptr;\n                }\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_416030",
            "funcStartAddr": "0x416030",
            "funcEndAddr": "0x416206",
            "decompiledFuncCode": "int64_t sub_416030(int64_t, void* arg2)\n{\n    int32_t* rax = *(arg2 + 8);\n    if (*arg2 == 0)\n    {\n        return 0;\n    }\n    if (*rax > 0x16)\n    {\n        return 0xffffffff;\n    }\n    /* jump -> jump_table_41ac20[*rax] */\n}\n\n"
        },
        {
            "funcName": "sub_416250",
            "funcStartAddr": "0x416250",
            "funcEndAddr": "0x416f59",
            "decompiledFuncCode": "int64_t sub_416250(char* arg1, int64_t* arg2, int64_t* arg3)\n{\n    void* rcx = &arg2[4];\n    void* rax = &arg3[2];\n    int64_t* r8 = arg2;\n    void* r9 = 7;\n    int64_t r11 = 7;\n    int64_t r13 = 0;\n    *arg2 = 0;\n    arg2[1] = rcx;\n    void* var_60 = rcx;\n    *arg3 = 0;\n    arg3[1] = rax;\n    void* var_70 = nullptr;\n    int64_t var_78 = 0;\n    void* var_68 = nullptr;\n    while (true)\n    {\n        char rax_1 = *arg1;\n        int64_t rax_6;\n        if (rax_1 == 0)\n        {\n            *(rcx + (r13 * 0x58)) = arg1;\n            r8[2] = var_78;\n            r8[3] = var_70;\n            rax_6 = 0;\n        }\n        else\n        {\n            void* rbp_1 = &arg1[1];\n            if (rax_1 != 0x25)\n            {\n                goto label_4162c8;\n            }\n            void* r14_1 = ffffffffffffffff;\n            char** r12_1 = (rcx + (r13 * 0x58));\n            *r12_1 = arg1;\n            r12_1[2] = 0;\n            r12_1[3] = 0;\n            r12_1[4] = 0;\n            r12_1[5] = -1;\n            r12_1[6] = 0;\n            r12_1[7] = 0;\n            r12_1[8] = -1;\n            r12_1[0xa] = -1;\n            char rbx_1 = arg1[1];\n            if ((rbx_1 - 0x30) > 9)\n            {\n                goto label_416396;\n            }\n            void* rax_29 = rbp_1;\n            char rdx_14;\n            do\n            {\n                rax_29 = (rax_29 + 1);\n                rdx_14 = *rax_29;\n            } while ((rdx_14 - 0x30) <= 9);\n            void* r13_1;\n            if (rdx_14 == 0x24)\n            {\n                int64_t rax_64 = 0;\n                void* rcx_16;\n                int64_t rdx_28;\n                int64_t rdi_16;\n                char rsi_21;\n                do\n                {\n                    int64_t rsi_19 = -1;\n                    int64_t rdx_27 = (rbx_1 - 0x30);\n                    if (rax_64 <= 0x1999999999999999)\n                    {\n                        int64_t rsi_20 = (rax_64 * 5);\n                        rsi_19 = (rsi_20 + rsi_20);\n                    }\n                    rcx_16 = rbp_1;\n                    while (true)\n                    {\n                        rbx_1 = *(rbp_1 + 1);\n                        rdx_28 = (rdx_27 + rsi_19);\n                        rdi_16 = (rdx_27 + rsi_19) < rdx_27;\n                        rax_64 = rdx_28;\n                        rbp_1 = (rbp_1 + 1);\n                        rsi_21 = (rbx_1 - 0x30);\n                        if (rdi_16 == 0)\n                        {\n                            break;\n                        }\n                        if (rsi_21 > 9)\n                        {\n                            break;\n                        }\n                        rsi_19 = -1;\n                        rcx_16 = rbp_1;\n                        rdx_27 = (rbx_1 - 0x30);\n                    }\n                    if (rdi_16 != 0)\n                    {\n                        break;\n                    }\n                } while (rsi_21 <= 9);\n                if (rdi_16 != 0)\n                {\n                    goto label_416a18;\n                }\n                r14_1 = (rdx_28 - 1);\n                if (r14_1 <= -3)\n                {\n                    rbp_1 = (rcx_16 + 2);\n                    rbx_1 = *(rcx_16 + 2);\n                    goto label_416396;\n                }\n            label_416a18:\n                r13_1 = arg3[1];\n            }\n            else\n            {\n                r14_1 = ffffffffffffffff;\n            label_416396:\n                void* rcx_1;\n                while (true)\n                {\n                    rcx_1 = (rbp_1 + 1);\n                    if (rbx_1 == 0x27)\n                    {\n                        r12_1[2] = (r12_1[2] | 1);\n                    }\n                    else if (rbx_1 == 0x2d)\n                    {\n                        r12_1[2] = (r12_1[2] | 2);\n                    }\n                    else if (rbx_1 == 0x2b)\n                    {\n                        r12_1[2] = (r12_1[2] | 4);\n                    }\n                    else if (rbx_1 == 0x20)\n                    {\n                        r12_1[2] = (r12_1[2] | 8);\n                    }\n                    else if (rbx_1 == 0x23)\n                    {\n                        r12_1[2] = (r12_1[2] | 0x10);\n                    }\n                    else if (rbx_1 == 0x30)\n                    {\n                        r12_1[2] = (r12_1[2] | 0x20);\n                    }\n                    else\n                    {\n                        if (rbx_1 != 0x49)\n                        {\n                            break;\n                        }\n                        r12_1[2] = (r12_1[2] | 0x40);\n                    }\n                    rbx_1 = *rcx_1;\n                    rbp_1 = rcx_1;\n                }\n                if (rbx_1 != 0x2a)\n                {\n                    if ((rbx_1 - 0x30) <= 9)\n                    {\n                        r12_1[3] = rbp_1;\n                        if ((*rbp_1 - 0x30) <= 9)\n                        {\n                            void* rcx_15 = rbp_1;\n                            void* rdx_21;\n                            while (true)\n                            {\n                                rdx_21 = (rcx_15 + 1);\n                                if ((*(rcx_15 + 1) - 0x30) > 9)\n                                {\n                                    break;\n                                }\n                                rcx_15 = rdx_21;\n                            }\n                            rcx_1 = (rcx_15 + 2);\n                            int64_t rax_57 = (rdx_21 - rbp_1);\n                            rbp_1 = rdx_21;\n                            if (var_78 >= rax_57)\n                            {\n                                rax_57 = var_78;\n                            }\n                            var_78 = rax_57;\n                        }\n                        r12_1[4] = rbp_1;\n                        rbx_1 = *rbp_1;\n                    }\n                    goto label_416408;\n                }\n                int64_t rax_12 = 1;\n                r12_1[3] = rbp_1;\n                r12_1[4] = rcx_1;\n                if (var_78 != 0)\n                {\n                    rax_12 = var_78;\n                }\n                var_78 = rax_12;\n                int32_t rax_13 = *(rbp_1 + 1);\n                void* rbx_2;\n                if ((rax_13 - 0x30) <= 9)\n                {\n                    void* rdx_17 = rcx_1;\n                    char rsi_10;\n                    do\n                    {\n                        rdx_17 = (rdx_17 + 1);\n                        rsi_10 = *rdx_17;\n                    } while ((rsi_10 - 0x30) <= 9);\n                    if (rsi_10 == 0x24)\n                    {\n                        void* rsi_11 = nullptr;\n                        void* rdx_20;\n                        int64_t rbp_2;\n                        void* rdi_5;\n                        char rbx_6;\n                        do\n                        {\n                            void* const rdx_18 = ffffffffffffffff;\n                            int64_t rax_43 = (rax_13 - 0x30);\n                            if (rsi_11 <= 0x1999999999999999)\n                            {\n                                void* rdx_19 = (rsi_11 * 5);\n                                rdx_18 = (rdx_19 + rdx_19);\n                            }\n                            rdi_5 = rcx_1;\n                            while (true)\n                            {\n                                rdx_20 = (rdx_18 + rax_43);\n                                rax_13 = *(rcx_1 + 1);\n                                rbp_2 = (rdx_18 + rax_43) < rdx_18;\n                                rsi_11 = rdx_20;\n                                rcx_1 = (rcx_1 + 1);\n                                rbx_6 = (rax_13 - 0x30);\n                                if (rbp_2 == 0)\n                                {\n                                    break;\n                                }\n                                if (rbx_6 > 9)\n                                {\n                                    break;\n                                }\n                                rdx_18 = ffffffffffffffff;\n                                rdi_5 = rcx_1;\n                                rax_43 = (rax_13 - 0x30);\n                            }\n                            if (rbp_2 != 0)\n                            {\n                                break;\n                            }\n                        } while (rbx_6 <= 9);\n                        if (rbp_2 != 0)\n                        {\n                            goto label_416a18;\n                        }\n                        rbx_2 = (rdx_20 - 1);\n                        if (rbx_2 > -3)\n                        {\n                            goto label_416a18;\n                        }\n                        r12_1[5] = rbx_2;\n                        rcx_1 = (rdi_5 + 2);\n                        goto label_4164ac;\n                    }\n                }\n                rbx_2 = r12_1[5];\n                if (rbx_2 != -1)\n                {\n                    goto label_4164ac;\n                }\n                void* rax_41 = (var_68 + 1);\n                r12_1[5] = var_68;\n                if (var_68 == -1)\n                {\n                    goto label_416a18;\n                }\n                rbx_2 = var_68;\n                var_68 = rax_41;\n            label_4164ac:\n                r13_1 = arg3[1];\n                int64_t rdx_4;\n                void* rsi_7;\n                if (r9 <= rbx_2)\n                {\n                    void* r9_1 = (r9 + r9);\n                    void* rax_36 = (rbx_2 + 1);\n                    if (r9_1 <= rbx_2)\n                    {\n                        r9_1 = rax_36;\n                    }\n                    if (r9_1 <= 0x7ffffffffffffff)\n                    {\n                        int64_t rsi_6 = (r9_1 << 5);\n                        if (rax == r13_1)\n                        {\n                            void* rax_63 = malloc(rsi_6);\n                            r9 = r9_1;\n                            if (rax_63 == 0)\n                            {\n                                goto label_416c09;\n                            }\n                            rdx_4 = *arg3;\n                            rsi_7 = rax;\n                            r13_1 = rax_63;\n                        label_416d24:\n                            memcpy(r13_1, rsi_7, (rdx_4 << 5));\n                            rdx_4 = *arg3;\n                        label_4167dd:\n                            arg3[1] = r13_1;\n                            goto label_4164bc;\n                        }\n                        void* rax_37 = realloc(r13_1, rsi_6);\n                        rsi_7 = arg3[1];\n                        r13_1 = rax_37;\n                        r9 = r9_1;\n                        if (rax_37 != 0)\n                        {\n                            rdx_4 = *arg3;\n                            if (rax == rsi_7)\n                            {\n                                goto label_416d24;\n                            }\n                            goto label_4167dd;\n                        }\n                        goto label_416bf0;\n                    }\n                label_416bed:\n                    rsi_7 = r13_1;\n                label_416bf0:\n                    if (rax == rsi_7)\n                    {\n                        goto label_416c09;\n                    }\n                label_416bff:\n                    free(rsi_7);\n                label_416c09:\n                    int64_t rdi_12 = r8[1];\n                    if (var_60 != rdi_12)\n                    {\n                        free(rdi_12);\n                    }\n                    break;\n                }\n                rdx_4 = *arg3;\n            label_4164bc:\n                if (rdx_4 <= rbx_2)\n                {\n                    do\n                    {\n                        rdx_4 = (rdx_4 + 1);\n                        *((r13_1 + (rdx_4 << 5)) - 0x20) = 0;\n                    } while (rdx_4 <= rbx_2);\n                    *arg3 = rdx_4;\n                    goto label_4164e8;\n                }\n            label_4164e8:\n                void* rax_16 = (r13_1 + (rbx_2 << 5));\n                int32_t rdx_5 = *rax_16;\n                if (rdx_5 == 0)\n                {\n                    *rax_16 = 5;\n                    rbx_1 = *rcx_1;\n                    rbp_1 = rcx_1;\n                    rcx_1 = (rcx_1 + 1);\n                    if (rbx_1 == 0x2e)\n                    {\n                        goto label_416510;\n                    }\n                    goto label_416411;\n                }\n                if (rdx_5 == 5)\n                {\n                    rbx_1 = *rcx_1;\n                    rbp_1 = rcx_1;\n                    rcx_1 = (rcx_1 + 1);\n                label_416408:\n                    if (rbx_1 != 0x2e)\n                    {\n                        goto label_416411;\n                    }\n                label_416510:\n                    bool cond:0_1 = *(rbp_1 + 1) != 0x2a;\n                    r12_1[6] = rbp_1;\n                    if (cond:0_1)\n                    {\n                        void* rax_35;\n                        if ((*(rbp_1 + 1) - 0x30) > 9)\n                        {\n                            rbp_1 = rcx_1;\n                            rax_35 = 1;\n                        }\n                        else\n                        {\n                            do\n                            {\n                                rcx_1 = (rcx_1 + 1);\n                            } while ((*rcx_1 - 0x30) <= 9);\n                            rax_35 = (rcx_1 - rbp_1);\n                            rbp_1 = rcx_1;\n                        }\n                        r12_1[7] = rcx_1;\n                        rbx_1 = *rcx_1;\n                        if (var_70 >= rax_35)\n                        {\n                            rax_35 = var_70;\n                        }\n                        var_70 = rax_35;\n                        goto label_416411;\n                    }\n                    void* rax_17 = 2;\n                    char* rcx_4 = (rbp_1 + 2);\n                    r12_1[7] = rcx_4;\n                    if (var_70 >= 2)\n                    {\n                        rax_17 = var_70;\n                    }\n                    var_70 = rax_17;\n                    int32_t rax_18 = *(rbp_1 + 2);\n                    void* rbx_4;\n                    if ((rax_18 - 0x30) <= 9)\n                    {\n                        char* rdx_31 = rcx_4;\n                        char rsi_23;\n                        do\n                        {\n                            rdx_31 = &rdx_31[1];\n                            rsi_23 = *rdx_31;\n                        } while ((rsi_23 - 0x30) <= 9);\n                        if (rsi_23 != 0x24)\n                        {\n                            goto label_41654f;\n                        }\n                        void* rsi_24 = nullptr;\n                        void* rdx_34;\n                        int64_t rbp_3;\n                        char* rdi_18;\n                        char rbx_7;\n                        do\n                        {\n                            void* const rdx_32 = ffffffffffffffff;\n                            int64_t rax_67 = (rax_18 - 0x30);\n                            if (rsi_24 <= 0x1999999999999999)\n                            {\n                                void* rdx_33 = (rsi_24 * 5);\n                                rdx_32 = (rdx_33 + rdx_33);\n                            }\n                            rdi_18 = rcx_4;\n                            while (true)\n                            {\n                                rdx_34 = (rdx_32 + rax_67);\n                                rbp_3 = (rdx_32 + rax_67) < rdx_32;\n                                rcx_4 = &rcx_4[1];\n                                rax_18 = *rcx_4;\n                                rsi_24 = rdx_34;\n                                rbx_7 = (rax_18 - 0x30);\n                                if (rbp_3 == 0)\n                                {\n                                    break;\n                                }\n                                if (rbx_7 > 9)\n                                {\n                                    break;\n                                }\n                                rdx_32 = ffffffffffffffff;\n                                rdi_18 = rcx_4;\n                                rax_67 = (rax_18 - 0x30);\n                            }\n                            if (rbp_3 != 0)\n                            {\n                                break;\n                            }\n                        } while (rbx_7 <= 9);\n                        if (rbp_3 != 0)\n                        {\n                            goto label_416a18;\n                        }\n                        rbx_4 = (rdx_34 - 1);\n                        if (rbx_4 > -3)\n                        {\n                            goto label_416a18;\n                        }\n                        r12_1[8] = rbx_4;\n                        rcx_4 = &rdi_18[2];\n                        goto label_41655e;\n                    }\n                label_41654f:\n                    rbx_4 = r12_1[8];\n                    if (rbx_4 != -1)\n                    {\n                        goto label_41655e;\n                    }\n                    void* rax_65 = (var_68 + 1);\n                    r12_1[8] = var_68;\n                    if (var_68 == -1)\n                    {\n                        goto label_416a18;\n                    }\n                    rbx_4 = var_68;\n                    var_68 = rax_65;\n                label_41655e:\n                    r13_1 = arg3[1];\n                    void* var_58;\n                    int64_t rdx_7;\n                    if (r9 <= rbx_4)\n                    {\n                        void* r9_3 = (r9 + r9);\n                        void* rax_61 = (rbx_4 + 1);\n                        if (r9_3 <= rbx_4)\n                        {\n                            r9_3 = rax_61;\n                        }\n                        if (r9_3 > 0x7ffffffffffffff)\n                        {\n                            goto label_416bed;\n                        }\n                        int64_t rsi_18 = (r9_3 << 5);\n                        var_58 = rcx_4;\n                        if (rax == r13_1)\n                        {\n                            void* rax_69 = malloc(rsi_18);\n                            rcx_4 = var_58;\n                            r9 = r9_3;\n                            if (rax_69 == 0)\n                            {\n                                goto label_416c09;\n                            }\n                            rdx_7 = *arg3;\n                            rsi_7 = rax;\n                            r13_1 = rax_69;\n                        label_416ed6:\n                            memcpy(r13_1, rsi_7, (rdx_7 << 5));\n                            rdx_7 = *arg3;\n                        label_416cbc:\n                            arg3[1] = r13_1;\n                            goto label_41656e;\n                        }\n                        void* rax_62 = realloc(r13_1, rsi_18);\n                        rsi_7 = arg3[1];\n                        rcx_4 = var_58;\n                        r13_1 = rax_62;\n                        r9 = r9_3;\n                        if (rax_62 != 0)\n                        {\n                            rdx_7 = *arg3;\n                            if (rax == rsi_7)\n                            {\n                                goto label_416ed6;\n                            }\n                            goto label_416cbc;\n                        }\n                        goto label_416bf0;\n                    }\n                    rdx_7 = *arg3;\n                label_41656e:\n                    if (rdx_7 <= rbx_4)\n                    {\n                        do\n                        {\n                            rdx_7 = (rdx_7 + 1);\n                            *((r13_1 + (rdx_7 << 5)) - 0x20) = 0;\n                        } while (rdx_7 <= rbx_4);\n                        *arg3 = rdx_7;\n                        goto label_41659b;\n                    }\n                label_41659b:\n                    void* rax_23 = ((rbx_4 << 5) + r13_1);\n                    int32_t rdx_8 = *rax_23;\n                    if (rdx_8 == 0)\n                    {\n                        *rax_23 = 5;\n                        rbp_1 = rcx_4;\n                        rbx_1 = *rcx_4;\n                    label_416411:\n                        int32_t rax_11 = 0;\n                        while (true)\n                        {\n                            rbp_1 = (rbp_1 + 1);\n                            if (rbx_1 == 0x68)\n                            {\n                                rax_11 = (rax_11 | (1 << (rax_11 & 1)));\n                            }\n                            else if (rbx_1 == 0x4c)\n                            {\n                                rax_11 = (rax_11 | 4);\n                            }\n                            else\n                            {\n                                if ((rbx_1 != 0x6c && (rbx_1 != 0x6a && ((rbx_1 & 0xdf) != 0x5a && rbx_1 != 0x74))))\n                                {\n                                    break;\n                                }\n                                rax_11 = (rax_11 + 8);\n                            }\n                            rbx_1 = *rbp_1;\n                        }\n                        char rdx_9 = (rbx_1 - 0x25);\n                        if (rdx_9 > 0x53)\n                        {\n                            goto label_416a18;\n                        }\n                        int32_t rcx_6;\n                        switch (rdx_9)\n                        {\n                            case 0:\n                            {\n                                goto label_416641;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 7:\n                            case 8:\n                            case 9:\n                            case 0xa:\n                            case 0xb:\n                            case 0xc:\n                            case 0xd:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1d:\n                            case 0x1f:\n                            case 0x23:\n                            case 0x24:\n                            case 0x25:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x3b:\n                            case 0x3d:\n                            case 0x46:\n                            case 0x48:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x51:\n                            case 0x52:\n                            {\n                                goto label_416a18;\n                            }\n                            case 0x1c:\n                            case 0x20:\n                            case 0x21:\n                            case 0x22:\n                            case 0x3c:\n                            case 0x40:\n                            case 0x41:\n                            case 0x42:\n                            {\n                                rcx_6 = 0xc;\n                                if (rax_11 <= 0xf)\n                                {\n                                    int32_t rcx_12;\n                                    rcx_12 = (rax_11 & 4) != 0;\n                                    rcx_6 = (rcx_12 + 0xb);\n                                }\n                                goto label_4165e9;\n                            }\n                            case 0x1e:\n                            {\n                                rcx_6 = 0xe;\n                                rbx_1 = 0x63;\n                                goto label_4165e9;\n                            }\n                            case 0x2e:\n                            {\n                                rcx_6 = 0x10;\n                                rbx_1 = 0x73;\n                                goto label_4165e9;\n                            }\n                            case 0x33:\n                            case 0x4a:\n                            case 0x50:\n                            case 0x53:\n                            {\n                                rcx_6 = 0xa;\n                                if ((rax_11 <= 0xf && (rax_11 & 4) == 0))\n                                {\n                                    rcx_6 = 8;\n                                    if (rax_11 <= 7)\n                                    {\n                                        rcx_6 = 2;\n                                        if ((rax_11 & 2) == 0)\n                                        {\n                                            rcx_6 = (((2 - 2) & 2) + 4);\n                                        }\n                                    }\n                                }\n                                goto label_4165e9;\n                            }\n                            case 0x3e:\n                            {\n                                int32_t rcx_8;\n                                rcx_8 = rax_11 > 7;\n                                rcx_6 = (rcx_8 + 0xd);\n                                goto label_4165e9;\n                            }\n                            case 0x3f:\n                            case 0x44:\n                            {\n                                rcx_6 = 9;\n                                if ((rax_11 <= 0xf && (rax_11 & 4) == 0))\n                                {\n                                    rcx_6 = 7;\n                                    if (rax_11 <= 7)\n                                    {\n                                        rcx_6 = 1;\n                                        if ((rax_11 & 2) == 0)\n                                        {\n                                            rcx_6 = (((1 - 1) & 2) + 3);\n                                        }\n                                    }\n                                }\n                                goto label_4165e9;\n                            }\n                            case 0x49:\n                            {\n                                rcx_6 = 0x16;\n                                if ((rax_11 <= 0xf && (rax_11 & 4) == 0))\n                                {\n                                    rcx_6 = 0x15;\n                                    if (rax_11 <= 7)\n                                    {\n                                        rcx_6 = 0x12;\n                                        if ((rax_11 & 2) == 0)\n                                        {\n                                            int32_t rcx_9;\n                                            rcx_9 = (rax_11 & 1) == 0;\n                                            rcx_6 = (rcx_9 + 0x13);\n                                        }\n                                    }\n                                }\n                                goto label_4165e9;\n                            }\n                            case 0x4b:\n                            {\n                                rcx_6 = 0x11;\n                                goto label_4165e9;\n                            }\n                            case 0x4e:\n                            {\n                                int32_t rcx_5;\n                                rcx_5 = rax_11 > 7;\n                                rcx_6 = (rcx_5 + 0xf);\n                            label_4165e9:\n                                if (r14_1 == -1)\n                                {\n                                    void* rax_51 = (var_68 + 1);\n                                    r12_1[0xa] = var_68;\n                                    if (var_68 == -1)\n                                    {\n                                        goto label_416a18;\n                                    }\n                                    r14_1 = var_68;\n                                    var_68 = rax_51;\n                                    goto label_4165f8;\n                                }\n                                r12_1[0xa] = r14_1;\n                            label_4165f8:\n                                r13_1 = arg3[1];\n                                if (r9 > r14_1)\n                                {\n                                    goto label_416605;\n                                }\n                                void* r9_2 = (r9 + r9);\n                                void* rax_48 = (r14_1 + 1);\n                                if (r9_2 <= r14_1)\n                                {\n                                    r9_2 = rax_48;\n                                }\n                                if (r9_2 > 0x7ffffffffffffff)\n                                {\n                                    goto label_416bed;\n                                }\n                                size_t rsi_13 = (r9_2 << 5);\n                                var_58 = rcx_6;\n                                void* rax_58;\n                                if (rax == r13_1)\n                                {\n                                    rax_58 = malloc(rsi_13);\n                                    rcx_6 = var_58;\n                                    r9 = r9_2;\n                                    if (rax_58 == 0)\n                                    {\n                                        goto label_416c09;\n                                    }\n                                    goto label_416ba9;\n                                }\n                                void* rax_49 = realloc(r13_1, rsi_13);\n                                rcx_6 = var_58;\n                                r13_1 = rax_49;\n                                r9 = r9_2;\n                                if (rax_49 == 0)\n                                {\n                                    goto label_416f43;\n                                }\n                                if (rax != arg3[1])\n                                {\n                                    goto label_416aeb;\n                                }\n                                rax_58 = r13_1;\n                                r13_1 = rax;\n                            label_416ba9:\n                                void* rsi_16 = r13_1;\n                                r13_1 = rax_58;\n                                var_58 = rcx_6;\n                                memcpy(rax_58, rsi_16, (*arg3 << 5));\n                                rcx_6 = var_58;\n                            label_416aeb:\n                                arg3[1] = r13_1;\n                            label_416605:\n                                int64_t rax_24 = *arg3;\n                                if (rax_24 <= r14_1)\n                                {\n                                    do\n                                    {\n                                        rax_24 = (rax_24 + 1);\n                                        *((r13_1 + (rax_24 << 5)) - 0x20) = 0;\n                                    } while (rax_24 <= r14_1);\n                                    *arg3 = rax_24;\n                                }\n                                void* rax_25 = (r13_1 + (r14_1 << 5));\n                                int32_t rdx_13 = *rax_25;\n                                if (rdx_13 == 0)\n                                {\n                                    *rax_25 = rcx_6;\n                                label_416641:\n                                    r12_1[9] = rbx_1;\n                                    int64_t rax_26 = *r8;\n                                    r12_1[1] = rbp_1;\n                                    r13 = (rax_26 + 1);\n                                    *r8 = r13;\n                                    if (r11 > r13)\n                                    {\n                                        rcx = r8[1];\n                                    label_4162c8:\n                                        arg1 = rbp_1;\n                                        continue;\n                                    }\n                                    else\n                                    {\n                                        if (r11 >= 0)\n                                        {\n                                            int64_t rbx_5 = (r11 + r11);\n                                            if (rbx_5 > 0x2e8ba2e8ba2e8ba)\n                                            {\n                                                goto label_416f43;\n                                            }\n                                            int64_t r12_2 = r8[1];\n                                            int64_t rsi_3 = (r11 * 0xb0);\n                                            if (var_60 == r12_2)\n                                            {\n                                                void* rax_38 = malloc(rsi_3);\n                                                rcx = rax_38;\n                                                if (rax_38 != 0)\n                                                {\n                                                label_416838:\n                                                    rcx = memcpy(rcx, r12_2, (r13 * 0x58));\n                                                    r13 = *r8;\n                                                label_4166df:\n                                                    r8[1] = rcx;\n                                                    r11 = rbx_5;\n                                                    goto label_4162c8;\n                                                }\n                                                rsi_7 = arg3[1];\n                                                if (rax == rsi_7)\n                                                {\n                                                    break;\n                                                }\n                                                goto label_416bff;\n                                            }\n                                            void* rax_28 = realloc(r12_2, rsi_3);\n                                            rcx = rax_28;\n                                            if (rax_28 == 0)\n                                            {\n                                                goto label_416f43;\n                                            }\n                                            r12_2 = r8[1];\n                                            r13 = *r8;\n                                            if (var_60 == r12_2)\n                                            {\n                                                goto label_416838;\n                                            }\n                                            goto label_4166df;\n                                        }\n                                    label_416f43:\n                                        rsi_7 = arg3[1];\n                                    }\n                                    goto label_416bf0;\n                                }\n                                if (rdx_13 == rcx_6)\n                                {\n                                    goto label_416641;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                    else if (rdx_8 == 5)\n                    {\n                        rbx_1 = *rcx_4;\n                        rbp_1 = rcx_4;\n                        goto label_416411;\n                    }\n                }\n            }\n            if (rax == r13_1)\n            {\n                goto label_416a35;\n            }\n            free(r13_1);\n        label_416a35:\n            int64_t rdi_7 = r8[1];\n            if (var_60 != rdi_7)\n            {\n                free(rdi_7);\n            }\n            *__errno_location() = 0x16;\n            rax_6 = 0xffffffff;\n        }\n        return rax_6;\n    }\n    *__errno_location() = 0xc;\n    return 0xffffffff;\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x416f60",
            "funcEndAddr": "0x416fbd",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x416fc0",
            "funcEndAddr": "0x416fc1",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_416fd0",
            "funcStartAddr": "0x416fd0",
            "funcEndAddr": "0x416fe8",
            "decompiledFuncCode": "int64_t sub_416fd0(void (* arg1)(void*))\n{\n    int64_t rdx = data_61f428;\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, rdx);\n}\n\n"
        },
        {
            "funcName": "sub_416fe8",
            "funcStartAddr": "0x416fe8",
            "funcEndAddr": "0x417008",
            "decompiledFuncCode": "int64_t sub_416fe8(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_61ee30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}