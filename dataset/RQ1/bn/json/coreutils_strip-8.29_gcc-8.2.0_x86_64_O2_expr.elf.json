{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_expr.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 241,
    "funcInfo": [
        {
            "funcName": "sub_401750",
            "funcStartAddr": "0x401750",
            "funcEndAddr": "0x40175c",
            "decompiledFuncCode": "int64_t sub_401750()\n{\n    int64_t var_8 = data_61d008;\n    /* jump -> data_61d010 */\n}\n\n"
        },
        {
            "funcName": "sub_401766",
            "funcStartAddr": "0x401766",
            "funcEndAddr": "0x401770",
            "decompiledFuncCode": "int64_t sub_401766()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401776",
            "funcStartAddr": "0x401776",
            "funcEndAddr": "0x401780",
            "decompiledFuncCode": "int64_t sub_401776()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401786",
            "funcStartAddr": "0x401786",
            "funcEndAddr": "0x401790",
            "decompiledFuncCode": "int64_t sub_401786()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401796",
            "funcStartAddr": "0x401796",
            "funcEndAddr": "0x4017a0",
            "decompiledFuncCode": "int64_t sub_401796()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_4017a6",
            "funcStartAddr": "0x4017a6",
            "funcEndAddr": "0x4017b0",
            "decompiledFuncCode": "int64_t sub_4017a6()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_4017b6",
            "funcStartAddr": "0x4017b6",
            "funcEndAddr": "0x4017c0",
            "decompiledFuncCode": "int64_t sub_4017b6()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_4017c6",
            "funcStartAddr": "0x4017c6",
            "funcEndAddr": "0x4017d0",
            "decompiledFuncCode": "int64_t sub_4017c6()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_4017d6",
            "funcStartAddr": "0x4017d6",
            "funcEndAddr": "0x4017e0",
            "decompiledFuncCode": "int64_t sub_4017d6()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_4017e6",
            "funcStartAddr": "0x4017e6",
            "funcEndAddr": "0x4017f0",
            "decompiledFuncCode": "int64_t sub_4017e6()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401806",
            "funcStartAddr": "0x401806",
            "funcEndAddr": "0x401810",
            "decompiledFuncCode": "int64_t sub_401806()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401826",
            "funcStartAddr": "0x401826",
            "funcEndAddr": "0x401830",
            "decompiledFuncCode": "int64_t sub_401826()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401836",
            "funcStartAddr": "0x401836",
            "funcEndAddr": "0x401840",
            "decompiledFuncCode": "int64_t sub_401836()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401846",
            "funcStartAddr": "0x401846",
            "funcEndAddr": "0x401850",
            "decompiledFuncCode": "int64_t sub_401846()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401856",
            "funcStartAddr": "0x401856",
            "funcEndAddr": "0x401860",
            "decompiledFuncCode": "int64_t sub_401856()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401866",
            "funcStartAddr": "0x401866",
            "funcEndAddr": "0x401870",
            "decompiledFuncCode": "int64_t sub_401866()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401886",
            "funcStartAddr": "0x401886",
            "funcEndAddr": "0x401890",
            "decompiledFuncCode": "int64_t sub_401886()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_4018a6",
            "funcStartAddr": "0x4018a6",
            "funcEndAddr": "0x4018b0",
            "decompiledFuncCode": "int64_t sub_4018a6()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_4018b6",
            "funcStartAddr": "0x4018b6",
            "funcEndAddr": "0x4018c0",
            "decompiledFuncCode": "int64_t sub_4018b6()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_4018c6",
            "funcStartAddr": "0x4018c6",
            "funcEndAddr": "0x4018d0",
            "decompiledFuncCode": "int64_t sub_4018c6()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_4018d6",
            "funcStartAddr": "0x4018d6",
            "funcEndAddr": "0x4018e0",
            "decompiledFuncCode": "int64_t sub_4018d6()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_4018e6",
            "funcStartAddr": "0x4018e6",
            "funcEndAddr": "0x4018f0",
            "decompiledFuncCode": "int64_t sub_4018e6()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401906",
            "funcStartAddr": "0x401906",
            "funcEndAddr": "0x401910",
            "decompiledFuncCode": "int64_t sub_401906()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401926",
            "funcStartAddr": "0x401926",
            "funcEndAddr": "0x401930",
            "decompiledFuncCode": "int64_t sub_401926()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401936",
            "funcStartAddr": "0x401936",
            "funcEndAddr": "0x401940",
            "decompiledFuncCode": "int64_t sub_401936()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401946",
            "funcStartAddr": "0x401946",
            "funcEndAddr": "0x401950",
            "decompiledFuncCode": "int64_t sub_401946()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401956",
            "funcStartAddr": "0x401956",
            "funcEndAddr": "0x401960",
            "decompiledFuncCode": "int64_t sub_401956()\n{\n    int64_t var_8 = 0x1f;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401966",
            "funcStartAddr": "0x401966",
            "funcEndAddr": "0x401970",
            "decompiledFuncCode": "int64_t sub_401966()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401986",
            "funcStartAddr": "0x401986",
            "funcEndAddr": "0x401990",
            "decompiledFuncCode": "int64_t sub_401986()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_4019a6",
            "funcStartAddr": "0x4019a6",
            "funcEndAddr": "0x4019b0",
            "decompiledFuncCode": "int64_t sub_4019a6()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_4019b6",
            "funcStartAddr": "0x4019b6",
            "funcEndAddr": "0x4019c0",
            "decompiledFuncCode": "int64_t sub_4019b6()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_4019c6",
            "funcStartAddr": "0x4019c6",
            "funcEndAddr": "0x4019d0",
            "decompiledFuncCode": "int64_t sub_4019c6()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_4019d6",
            "funcStartAddr": "0x4019d6",
            "funcEndAddr": "0x4019e0",
            "decompiledFuncCode": "int64_t sub_4019d6()\n{\n    int64_t var_8 = 0x27;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_4019e6",
            "funcStartAddr": "0x4019e6",
            "funcEndAddr": "0x4019f0",
            "decompiledFuncCode": "int64_t sub_4019e6()\n{\n    int64_t var_8 = 0x28;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401a06",
            "funcStartAddr": "0x401a06",
            "funcEndAddr": "0x401a10",
            "decompiledFuncCode": "int64_t sub_401a06()\n{\n    int64_t var_8 = 0x2a;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401a26",
            "funcStartAddr": "0x401a26",
            "funcEndAddr": "0x401a30",
            "decompiledFuncCode": "int64_t sub_401a26()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401a36",
            "funcStartAddr": "0x401a36",
            "funcEndAddr": "0x401a40",
            "decompiledFuncCode": "int64_t sub_401a36()\n{\n    int64_t var_8 = 0x2d;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401a46",
            "funcStartAddr": "0x401a46",
            "funcEndAddr": "0x401a50",
            "decompiledFuncCode": "int64_t sub_401a46()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401a56",
            "funcStartAddr": "0x401a56",
            "funcEndAddr": "0x401a60",
            "decompiledFuncCode": "int64_t sub_401a56()\n{\n    int64_t var_8 = 0x2f;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401a66",
            "funcStartAddr": "0x401a66",
            "funcEndAddr": "0x401a70",
            "decompiledFuncCode": "int64_t sub_401a66()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401a86",
            "funcStartAddr": "0x401a86",
            "funcEndAddr": "0x401a90",
            "decompiledFuncCode": "int64_t sub_401a86()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401aa6",
            "funcStartAddr": "0x401aa6",
            "funcEndAddr": "0x401ab0",
            "decompiledFuncCode": "int64_t sub_401aa6()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401ab6",
            "funcStartAddr": "0x401ab6",
            "funcEndAddr": "0x401ac0",
            "decompiledFuncCode": "int64_t sub_401ab6()\n{\n    int64_t var_8 = 0x35;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401ac6",
            "funcStartAddr": "0x401ac6",
            "funcEndAddr": "0x401ad0",
            "decompiledFuncCode": "int64_t sub_401ac6()\n{\n    int64_t var_8 = 0x36;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401ad6",
            "funcStartAddr": "0x401ad6",
            "funcEndAddr": "0x401ae0",
            "decompiledFuncCode": "int64_t sub_401ad6()\n{\n    int64_t var_8 = 0x37;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401ae6",
            "funcStartAddr": "0x401ae6",
            "funcEndAddr": "0x401af0",
            "decompiledFuncCode": "int64_t sub_401ae6()\n{\n    int64_t var_8 = 0x38;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401b06",
            "funcStartAddr": "0x401b06",
            "funcEndAddr": "0x401b10",
            "decompiledFuncCode": "int64_t sub_401b06()\n{\n    int64_t var_8 = 0x3a;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401b26",
            "funcStartAddr": "0x401b26",
            "funcEndAddr": "0x401b30",
            "decompiledFuncCode": "int64_t sub_401b26()\n{\n    int64_t var_8 = 0x3c;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401b36",
            "funcStartAddr": "0x401b36",
            "funcEndAddr": "0x401b40",
            "decompiledFuncCode": "int64_t sub_401b36()\n{\n    int64_t var_8 = 0x3d;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401b46",
            "funcStartAddr": "0x401b46",
            "funcEndAddr": "0x401b50",
            "decompiledFuncCode": "int64_t sub_401b46()\n{\n    int64_t var_8 = 0x3e;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401b56",
            "funcStartAddr": "0x401b56",
            "funcEndAddr": "0x401b60",
            "decompiledFuncCode": "int64_t sub_401b56()\n{\n    int64_t var_8 = 0x3f;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401b66",
            "funcStartAddr": "0x401b66",
            "funcEndAddr": "0x401b70",
            "decompiledFuncCode": "int64_t sub_401b66()\n{\n    int64_t var_8 = 0x40;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "sub_401b86",
            "funcStartAddr": "0x401b86",
            "funcEndAddr": "0x401b90",
            "decompiledFuncCode": "int64_t sub_401b86()\n{\n    int64_t var_8 = 0x42;\n    /* tailcall */\n    return sub_401750();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x401bd0",
            "funcEndAddr": "0x401d85",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    sub_4041a0(*argv);\n    setlocale(6, &data_418741[0x1b]);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    data_61d250 = 3;\n    sub_416460(sub_403a90);\n    int64_t var_40 = 0;\n    char const* const var_48 = \"Paul Eggert\";\n    char const* const var_50 = \"James Youngman\";\n    char const* const var_58 = \"Mike Parker\";\n    sub_403bd0(argc, argv, \"expr\", \"GNU coreutils\", \"8.29\", sub_402220, 0);\n    if (argc > 1)\n    {\n        int32_t rax_1 = strcmp(argv[1], &data_41664b);\n        char** rdx = &argv[1];\n        if (rax_1 != 0)\n        {\n            rdx = argv;\n        }\n        if ((rax_1 != 0 || (rax_1 == 0 && argc != 2)))\n        {\n            data_61d2f8 = &rdx[1];\n            int32_t* rax_3 = sub_4039c0(1);\n            uint64_t rdx_1 = **&data_61d2f8;\n            if (rdx_1 == 0)\n            {\n                int32_t rax_5 = *rax_3;\n                if (rax_5 == 0)\n                {\n                    void var_38;\n                    fputs_unlocked(sub_403b30(*(rax_3 + 8), &var_38), stdout);\n                    uint64_t* const rdi_7 = stdout;\n                    char* rax_9 = stdout[5];\n                    if (rax_9 >= stdout[6])\n                    {\n                        __overflow(rdi_7, 0xa);\n                    }\n                    else\n                    {\n                        stdout[5] = &rax_9[1];\n                        *rax_9 = 0xa;\n                    }\n                }\n                else\n                {\n                    if (rax_5 != 1)\n                    {\n                        abort();\n                        /* no return */\n                    }\n                    puts(*(rax_3 + 8));\n                }\n                return sub_402090(rax_3);\n            }\n            error(2, 0, dcgettext(nullptr, \"syntax error: unexpected argumen\u2026\", 5), sub_405a90(0, 8, rdx_1));\n        }\n    }\n    error(0, 0, dcgettext(nullptr, \"missing operand\", 5));\n    sub_402220(2);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x401d90",
            "funcEndAddr": "0x401dba",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_401dbb",
            "funcStartAddr": "0x401dbb",
            "funcEndAddr": "0x401dda",
            "decompiledFuncCode": "void sub_401dbb()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_401dda",
            "funcStartAddr": "0x401dda",
            "funcEndAddr": "0x401e11",
            "decompiledFuncCode": "int64_t sub_401dda()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_401e11",
            "funcStartAddr": "0x401e11",
            "funcEndAddr": "0x401e68",
            "decompiledFuncCode": "void sub_401e11()\n{\n    if (data_61d2e8 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_61d2f0;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_61d2f0 = (rax_1 + 1);\n        *(0x61ce40 + ((rax_1 + 1) << 3))();\n    }\n    sub_401dbb();\n    data_61d2e8 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_401e68",
            "funcStartAddr": "0x401e68",
            "funcEndAddr": "0x401e6d",
            "decompiledFuncCode": "int64_t j_sub_401dda()\n{\n    /* tailcall */\n    return sub_401dda();\n}\n\n"
        },
        {
            "funcName": "sub_401e70",
            "funcStartAddr": "0x401e70",
            "funcEndAddr": "0x401ea1",
            "decompiledFuncCode": "int64_t sub_401e70(int64_t* arg1, int64_t* arg2, int64_t* arg3)\n{\n    int64_t rax_2 = *arg2;\n    int64_t rcx = *arg3;\n    if ((rax_2 == -0x8000000000000000 && rcx == -1))\n    {\n        *arg1 = 0;\n        return rax_2;\n    }\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(rax_2);\n    rax = LOWD(rax_2);\n    *arg1 = (COMBINE(rdx, rax) % rcx);\n    return (COMBINE(rdx, rax) / rcx);\n}\n\n"
        },
        {
            "funcName": "sub_401eb0",
            "funcStartAddr": "0x401eb0",
            "funcEndAddr": "0x401edf",
            "decompiledFuncCode": "int64_t sub_401eb0(char* arg1)\n{\n    int64_t* rbx = data_61d2f8;\n    int64_t rax = 0;\n    char* rdi = *rbx;\n    if (rdi != 0)\n    {\n        rax = strcmp(rdi, arg1) == 0;\n        data_61d2f8 = &rbx[rax];\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_401ee0",
            "funcStartAddr": "0x401ee0",
            "funcEndAddr": "0x401fd0",
            "decompiledFuncCode": "uint64_t sub_401ee0(char arg1)\n{\n    int64_t* rdx;\n    int64_t* rsi;\n    int64_t* rdi;\n    rdx = error(3, 0x22, &data_4164c4, arg1);\n    int64_t rcx = *rsi;\n    int64_t rax_1 = *rdx;\n    int64_t rdx_2 = (rcx - rax_1);\n    rcx = rcx < rdx_2;\n    uint64_t rax_2 = (rax_1 >> 0x3f);\n    if (rcx == rax_2)\n    {\n        *rdi = rdx_2;\n        return rax_2;\n    }\n    uint64_t var_10 = rax_2;\n    int64_t* rdx_3;\n    int64_t* rsi_1;\n    int64_t* rdi_1;\n    rdx_3 = sub_401ee0(0x2d);\n    int64_t rcx_1 = *rsi_1;\n    int64_t rax_3 = *rdx_3;\n    int64_t rdx_4 = (rcx_1 + rax_3);\n    rcx_1 = rcx_1 > rdx_4;\n    uint64_t rax_4 = (rax_3 >> 0x3f);\n    if (rcx_1 == rax_4)\n    {\n        *rdi_1 = rdx_4;\n        return rax_4;\n    }\n    uint64_t var_18 = rax_4;\n    int64_t* rdx_5;\n    int64_t* rsi_2;\n    int64_t* rdi_2;\n    rdx_5 = sub_401ee0(0x2b);\n    uint64_t rax_5 = *rsi_2;\n    int64_t rdx_6 = *rdx_5;\n    int64_t rcx_3 = (rax_5 * rdx_6);\n    if ((rax_5 != 0 && rdx_6 != 0))\n    {\n        uint64_t rsi_4 = (rcx_3 >> 0x3f);\n        rax_5 = ((rax_5 >> 0x3f) ^ (rdx_6 >> 0x3f));\n        if (rax_5 != rsi_4)\n        {\n            uint64_t var_20 = rax_5;\n            int64_t* rdx_8;\n            int64_t* rsi_5;\n            int64_t* rdi_3;\n            rdx_8 = sub_401ee0(0x2a, rsi_4);\n            int64_t rax_7 = *rsi_5;\n            int64_t rcx_4 = *rdx_8;\n            if ((rax_7 == -0x8000000000000000 && rcx_4 == -1))\n            {\n                int64_t var_28 = rax_7;\n                sub_401ee0(0x2f);\n                /* tailcall */\n                return sub_401fd0();\n            }\n            int64_t rax_8;\n            int64_t rdx_9;\n            rdx_9 = HIGHD(rax_7);\n            rax_8 = LOWD(rax_7);\n            int64_t temp0 = (COMBINE(rdx_9, rax_8) / rcx_4);\n            *rdi_3 = temp0;\n            return temp0;\n        }\n    }\n    *rdi_2 = rcx_3;\n    return rax_5;\n}\n\n"
        },
        {
            "funcName": "sub_401fd0",
            "funcStartAddr": "0x401fd0",
            "funcEndAddr": "0x402020",
            "decompiledFuncCode": "int64_t sub_401fd0()\n{\n    int64_t rax_4 = data_61d2f8;\n    if (*rax_4 == 0)\n    {\n        int64_t rbx;\n        int64_t var_8 = rbx;\n        void* rdi = error(2, 0, dcgettext(nullptr, \"syntax error: missing argument a\u2026\", 5), sub_405a90(0, 8, *(rax_4 - 8)));\n        /* tailcall */\n        return sub_402020(rdi);\n    }\n    return rax_4;\n}\n\n"
        },
        {
            "funcName": "sub_402020",
            "funcStartAddr": "0x402020",
            "funcEndAddr": "0x40204a",
            "decompiledFuncCode": "int64_t sub_402020(void* arg1)\n{\n    if (*arg1 == 1)\n    {\n        free(*(arg1 + 8));\n        /* tailcall */\n        return free(arg1);\n    }\n    /* tailcall */\n    return free(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_402050",
            "funcStartAddr": "0x402050",
            "funcEndAddr": "0x402082",
            "decompiledFuncCode": "int32_t* sub_402050(char* arg1)\n{\n    int32_t* rax = sub_406620(0x10);\n    *rax = 1;\n    *(rax + 8) = sub_406850(arg1);\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_402090",
            "funcStartAddr": "0x402090",
            "funcEndAddr": "0x4020ec",
            "decompiledFuncCode": "uint64_t sub_402090(int32_t* arg1)\n{\n    uint64_t rax = *arg1;\n    if (rax == 0)\n    {\n        rax = *(arg1 + 8) == 0;\n        return rax;\n    }\n    if (rax != 1)\n    {\n        uint64_t var_8 = rax;\n        abort();\n        /* no return */\n    }\n    char* rdx = *(arg1 + 8);\n    int64_t rax_1 = 1;\n    char rcx = *rdx;\n    if (rcx != 0)\n    {\n        void* const rax_2;\n        rax_2 = rcx == 0x2d;\n        void* rax_3 = (rax_2 + rdx);\n        char rdx_1 = *rax_3;\n        while (rdx_1 == 0x30)\n        {\n            rax_3 = (rax_3 + 1);\n            rdx_1 = *rax_3;\n            if (rdx_1 == 0)\n            {\n                return 1;\n            }\n        }\n        rax_1 = 0;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4020f0",
            "funcStartAddr": "0x4020f0",
            "funcEndAddr": "0x40210d",
            "decompiledFuncCode": "int64_t sub_4020f0() __noreturn\n{\n    __assert_fail(\"iter->cur.wc == 0\", \"./lib/mbuiter.h\", 0xb3, \"mbuiter_multi_next\");\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_402110",
            "funcStartAddr": "0x402110",
            "funcEndAddr": "0x4021c2",
            "decompiledFuncCode": "int64_t sub_402110(int32_t* arg1)\n{\n    int32_t rax_9 = *arg1;\n    if (rax_9 == 0)\n    {\n        return 1;\n    }\n    if (rax_9 == 1)\n    {\n        char* rbp_1 = *(arg1 + 8);\n        void* rdx_1;\n        rdx_1 = *rbp_1 == 0x2d;\n        void* rdx_2 = (rdx_1 + rbp_1);\n        if ((*rdx_2 - 0x30) > 9)\n        {\n            return 0;\n        }\n        while (true)\n        {\n            rdx_2 = (rdx_2 + 1);\n            int32_t rax_3 = *rdx_2;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n            if ((rax_3 - 0x30) > 9)\n            {\n                return 0;\n            }\n        }\n        if (sub_4068b0(rbp_1, nullptr, 0xa, &arg1[2], nullptr) == 0)\n        {\n            free(rbp_1);\n            *arg1 = 0;\n            return 1;\n        }\n        error(3, 0x22, \"%s\", rbp_1);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4021d0",
            "funcStartAddr": "0x4021d0",
            "funcEndAddr": "0x402212",
            "decompiledFuncCode": "uint64_t sub_4021d0(int32_t* arg1)\n{\n    uint64_t rax = *arg1;\n    if (rax == 0)\n    {\n        void var_28;\n        rax = sub_406850(sub_403b30(*(arg1 + 8), &var_28));\n        *arg1 = 1;\n        *(arg1 + 8) = rax;\n    }\n    else if (rax != 1)\n    {\n        abort();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_402220",
            "funcStartAddr": "0x402220",
            "funcEndAddr": "0x402630",
            "decompiledFuncCode": "int64_t sub_402220(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_61d310;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s EXPRESSION\\n  or:  %s \u2026\", 5), rbp, rbp);\n        uint64_t* const rdi_2 = stdout;\n        char* rax_4 = stdout[5];\n        if (rax_4 >= stdout[6])\n        {\n            __overflow(rdi_2, 0xa);\n        }\n        else\n        {\n            stdout[5] = &rax_4[1];\n            *rax_4 = 0xa;\n        }\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nPrint the value of EXPRESSION \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\n  ARG1 < ARG2       ARG1 is le\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\n  ARG1 + ARG2       arithmetic\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\n  ARG1 * ARG2       arithmetic\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\n  STRING : REGEXP   anchored p\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  + TOKEN                    int\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nBeware that many operators nee\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nExit status is 0 if EXPRESSION\u2026\", 5), stdout);\n        void* const var_88 = &data_4164ee;\n        void* const* rax_15 = &var_88;\n        void* const var_78_1 = \"coreutils\";\n        void* const var_70_1 = \"Multi-call invocation\";\n        void* const var_68_1 = \"sha224sum\";\n        void* const var_60_1 = \"sha2 utilities\";\n        void* const var_58_1 = \"sha256sum\";\n        void* const var_50_1 = \"sha2 utilities\";\n        void* const var_48_1 = \"sha384sum\";\n        void* const var_40_1 = \"sha2 utilities\";\n        void* const var_38_1 = \"sha512sum\";\n        void* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_15 = &rax_15[2];\n            void* const rdi_13 = *rax_15;\n            c_1 = false;\n            z_1 = (rdi_13 & rdi_13) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            void* const rsi_12 = \"expr\";\n            int64_t rcx_2 = 5;\n            while (rcx_2 != 0)\n            {\n                char temp0_1 = *rsi_12;\n                char temp1_1 = *rdi_13;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_12 = (rsi_12 + 1);\n                rdi_13 = (rdi_13 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        void* const rbp_1 = rax_15[1];\n        char* rax_28;\n        int32_t rax_29;\n        void* const r12_1;\n        if (rbp_1 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_6;\n            uint64_t r8_2;\n            ssize_t r9_2;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_28 = setlocale(5, nullptr, rdx_6, rcx_5, r8_2, r9_2, var_88, \"test invocation\");\n            if (rax_28 != 0)\n            {\n                rax_29 = strncmp(rax_28, &data_416572, 3);\n                if (rax_29 != 0)\n                {\n                    rbp_1 = \"expr\";\n                }\n            }\n            if ((rax_28 == 0 || (rax_28 != 0 && rax_29 == 0)))\n            {\n                rbp_1 = \"expr\";\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"expr\");\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_4;\n            uint64_t r8_1;\n            ssize_t r9_1;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_18 = setlocale(5, nullptr, rdx_4, rcx_3, r8_1, r9_1, var_88, \"test invocation\");\n            if (rax_18 == 0)\n            {\n                goto label_402514;\n            }\n            if (strncmp(rax_18, &data_416572, 3) == 0)\n            {\n                goto label_402514;\n            }\n        }\n        if ((((rbp_1 == 0 && rax_28 != 0) && rax_29 != 0) || rbp_1 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), \"expr\");\n        label_402514:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"expr\");\n            if (rbp_1 != \"expr\")\n            {\n                r12_1 = &data_418741[0x1b];\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_1, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_402630",
            "funcStartAddr": "0x402630",
            "funcEndAddr": "0x402a02",
            "decompiledFuncCode": "int32_t* sub_402630(int32_t* arg1, int32_t* arg2)\n{\n    sub_4021d0(arg1);\n    sub_4021d0(arg2);\n    char* rbp_1 = *(arg2 + 8);\n    int64_t var_1c8 = 0;\n    void var_128;\n    void* var_188 = &var_128;\n    int64_t var_1a8 = 0;\n    int64_t var_1a0 = 0;\n    int64_t var_180 = 0;\n    data_61d4a8 = 0x2c6;\n    int64_t rax_1 = sub_415280(rbp_1, strlen(rbp_1), &var_1a8);\n    if (rax_1 != 0)\n    {\n        error(2, 0, \"%s\", rax_1);\n    }\n    else\n    {\n        char* rbp_2 = *(arg1 + 8);\n        char var_170;\n        char var_170_1 = (var_170 & 0x7f);\n        int64_t rax_3 = sub_415be0(&var_1a8, rbp_2, strlen(rbp_2), 0, &var_1c8);\n        int64_t rbp_3 = rax_3;\n        int32_t* rbx_1;\n        int64_t r12_1;\n        int64_t var_178;\n        if (rax_3 >= 0)\n        {\n            r12_1 = var_178;\n            if (r12_1 != 0)\n            {\n                *(arg1 + 8)[*8] = 0;\n                rbx_1 = sub_402050((*8 + *(arg1 + 8)));\n            }\n            else\n            {\n                uint64_t rax_7 = __ctype_get_mb_cur_max();\n                char var_168_1;\n                uint32_t rax_11;\n                int32_t rax_23;\n                uint32_t rcx_1;\n                if (rax_7 != 1)\n                {\n                    char* r13_1 = *(arg1 + 8);\n                    var_168_1 = 0;\n                    int64_t var_164 = 0;\n                    char* var_158_1 = r13_1;\n                    char var_15c_1 = 0;\n                    while (true)\n                    {\n                        uint64_t var_150_1;\n                        uint32_t var_144;\n                        if (var_168_1 == 0)\n                        {\n                            rcx_1 = *var_158_1;\n                            rax_11 = (rcx_1 >> 5);\n                            if (((*(((rax_11 & 7) << 2) + 0x417140) >> rcx_1) & 1) != 0)\n                            {\n                                var_150_1 = 1;\n                                char var_148_1 = 1;\n                                var_144 = *var_158_1;\n                                char var_15c_2 = 1;\n                            }\n                            else\n                            {\n                                rax_23 = mbsinit(&var_164);\n                                if (rax_23 == 0)\n                                {\n                                    break;\n                                }\n                                var_168_1 = 1;\n                            }\n                        }\n                        uint64_t rax_21;\n                        char* rbx_3;\n                        if ((var_168_1 != 0 || (var_168_1 == 0 && ((*(((rax_11 & 7) << 2) + 0x417140) >> rcx_1) & 1) == 0)))\n                        {\n                            rax_21 = sub_407dd0(&var_144, var_158_1, sub_405de0(var_158_1, __ctype_get_mb_cur_max()), &var_164);\n                            var_150_1 = rax_21;\n                            if (rax_21 == -1)\n                            {\n                                var_150_1 = 1;\n                                rbx_3 = var_158_1;\n                                char var_148_3 = 0;\n                                char var_15c_5 = 1;\n                            }\n                            if (rax_21 == -2)\n                            {\n                                rbx_3 = var_158_1;\n                                char var_148_4 = 0;\n                                var_150_1 = strlen(rbx_3);\n                                char var_15c_6 = 1;\n                            }\n                            if ((rax_21 != -1 && rax_21 != -2))\n                            {\n                                if (rax_21 == 0)\n                                {\n                                    var_150_1 = 1;\n                                    if (*var_158_1 != 0)\n                                    {\n                                        __assert_fail(\"*iter->cur.ptr == '\\0'\", \"./lib/mbuiter.h\", 0xb2, \"mbuiter_multi_next\");\n                                        /* no return */\n                                    }\n                                    if (var_144 != 0)\n                                    {\n                                        goto label_4029e4;\n                                    }\n                                }\n                                char var_148_2 = 1;\n                                if (mbsinit(&var_164) != 0)\n                                {\n                                    var_168_1 = 0;\n                                }\n                                char var_15c_4 = 1;\n                            }\n                        }\n                        if ((((var_168_1 == 0 && ((*(((rax_11 & 7) << 2) + 0x417140) >> rcx_1) & 1) != 0) || (((var_168_1 != 0 || (var_168_1 == 0 && ((*(((rax_11 & 7) << 2) + 0x417140) >> rcx_1) & 1) == 0)) && rax_21 != -1) && rax_21 != -2)) && var_144 != 0))\n                        {\n                            rbx_3 = var_158_1;\n                        }\n                        if (((((var_168_1 != 0 || (var_168_1 == 0 && ((*(((rax_11 & 7) << 2) + 0x417140) >> rcx_1) & 1) == 0)) && rax_21 == -1) || (((var_168_1 == 0 && ((*(((rax_11 & 7) << 2) + 0x417140) >> rcx_1) & 1) != 0) || (((var_168_1 != 0 || (var_168_1 == 0 && ((*(((rax_11 & 7) << 2) + 0x417140) >> rcx_1) & 1) == 0)) && rax_21 != -1) && rax_21 != -2)) && var_144 != 0)) || ((var_168_1 != 0 || (var_168_1 == 0 && ((*(((rax_11 & 7) << 2) + 0x417140) >> rcx_1) & 1) == 0)) && rax_21 == -2)))\n                        {\n                            if ((rbx_3 - r13_1) >= rbp_3)\n                            {\n                                goto label_402978;\n                            }\n                            char var_15c_3 = 0;\n                            r12_1 = (r12_1 + 1);\n                            var_158_1 = &rbx_3[var_150_1];\n                            continue;\n                        }\n                        if ((((var_168_1 == 0 && ((*(((rax_11 & 7) << 2) + 0x417140) >> rcx_1) & 1) != 0) || (((var_168_1 != 0 || (var_168_1 == 0 && ((*(((rax_11 & 7) << 2) + 0x417140) >> rcx_1) & 1) == 0)) && rax_21 != -1) && rax_21 != -2)) && var_144 == 0))\n                        {\n                        label_402978:\n                            rbp_3 = r12_1;\n                            break;\n                        }\n                    }\n                }\n                if ((rax_7 == 1 || (rax_7 != 1 && (!((var_168_1 == 0 && ((*(((rax_11 & 7) << 2) + 0x417140) >> rcx_1) & 1) == 0) && rax_23 == 0)))))\n                {\n                    int32_t* rax_8 = sub_406620(0x10);\n                    bool cond:0_1 = var_1c8 == 0;\n                    rbx_1 = rax_8;\n                    *rax_8 = 0;\n                    *(rax_8 + 8) = rbp_3;\n                    if ((!cond:0_1))\n                    {\n                        goto label_402782;\n                    }\n                    goto label_40272b;\n                }\n            }\n        }\n        else\n        {\n            if (rax_3 != -1)\n            {\n                char* rax_26 = dcgettext(nullptr, \"error in regular expression matc\u2026\", 5);\n                uint64_t rsi_4 = 0x4b;\n                if (rbp_3 == -2)\n                {\n                    rsi_4 = *__errno_location();\n                }\n                error(3, rsi_4, rax_26);\n            label_4029e4:\n                sub_4020f0();\n                /* no return */\n            }\n            if (var_178 == 0)\n            {\n                int32_t* rax_10 = sub_406620(0x10);\n                rbx_1 = rax_10;\n                *rax_10 = 0;\n                *(rax_10 + 8) = 0;\n            }\n            else\n            {\n                rbx_1 = sub_402050(&data_418741[0x1b]);\n            }\n        }\n        if (((rax_3 >= 0 && r12_1 != 0) || rax_3 < 0))\n        {\n            if (var_1c8 == 0)\n            {\n                goto label_40272b;\n            }\n        label_402782:\n            free(nullptr);\n            free(nullptr);\n        label_40272b:\n            int64_t var_188_1 = 0;\n            sub_415af0(&var_1a8);\n            return rbx_1;\n        }\n    }\n    __assert_fail(\"mbsinit (&iter->state)\", \"./lib/mbuiter.h\", 0x96, \"mbuiter_multi_next\");\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_402a10",
            "funcStartAddr": "0x402a10",
            "funcEndAddr": "0x403466",
            "decompiledFuncCode": "int32_t* sub_402a10(int32_t arg1, int32_t* arg2 @ rbp, int32_t* arg3 @ r13)\n{\n    int32_t* var_18 = arg3;\n    int32_t* var_28 = arg2;\n    uint64_t rbx = arg1;\n    if (sub_401eb0(&data_4165a4) != 0)\n    {\n        sub_401fd0();\n    label_402d9d:\n        char** rax_36 = data_61d2f8;\n        char* rdi_18 = *rax_36;\n        data_61d2f8 = &rax_36[1];\n        arg3 = sub_402050(rdi_18);\n    label_402d92:\n        return arg3;\n    }\n    uint32_t r12_1 = rbx;\n    if (sub_401eb0(\"length\") != 0)\n    {\n        int32_t* rax_32 = sub_402a10(r12_1);\n        sub_4021d0(rax_32);\n        uint64_t rax_33 = sub_403fd0(*(rax_32 + 8));\n        int32_t* rax_34 = sub_406620(0x10);\n        *rax_34 = 0;\n        arg3 = rax_34;\n        *(rax_34 + 8) = rax_33;\n        sub_402020(rax_32);\n        goto label_402d92;\n    }\n    if (sub_401eb0(\"match\") == 0)\n    {\n        int32_t rax_3 = sub_401eb0(\"index\");\n        uint64_t r14_1 = rax_3;\n        if (rax_3 != 0)\n        {\n            r14_1 = sub_402a10(r12_1);\n            arg2 = sub_402a10(r12_1);\n            sub_4021d0(r14_1);\n            sub_4021d0(arg2);\n            arg3 = *(arg2 + 8);\n            if (*arg3 == 0)\n            {\n            label_402df5:\n                rbx = 0;\n            label_402dfc:\n                int32_t* rax_40 = sub_406620(0x10);\n                *rax_40 = 0;\n                arg3 = rax_40;\n                *(rax_40 + 8) = rbx;\n                sub_402020(r14_1);\n            label_402e19:\n                sub_402020(arg2);\n                goto label_402d92;\n            }\n        }\n        else\n        {\n            if (sub_401eb0(\"substr\") != 0)\n            {\n                int32_t* rax_5 = sub_402a10(r12_1);\n                int32_t* rax_6 = sub_402a10(r12_1);\n                int32_t* rax_7 = sub_402a10(r12_1);\n                sub_4021d0(rax_5);\n                if ((sub_402110(rax_6) != 0 && sub_402110(rax_7) != 0))\n                {\n                    int64_t rax_10 = *(rax_6 + 8);\n                    int64_t r15_1 = -1;\n                    if (rax_10 >= 0)\n                    {\n                        r15_1 = rax_10;\n                        r14_1 = rax_10 == 0;\n                    }\n                    uint64_t rax_11 = *(rax_7 + 8);\n                    char* r13 = *(rax_5 + 8);\n                    uint64_t rdx_1 = -1;\n                    if (rax_11 >= 0)\n                    {\n                        rdx_1 = rax_11;\n                    }\n                    uint64_t rax_12 = strlen(r13);\n                    uint64_t rdx_2 = rax_12;\n                    if (__ctype_get_mb_cur_max() > 1)\n                    {\n                        rdx_2 = sub_403fd0(r13);\n                    }\n                    char* var_100_1;\n                    if ((r15_1 <= rdx_2 && (r14_1 == 0 && (rdx_1 - 1) <= -3)))\n                    {\n                        uint64_t r14_2 = ((rdx_2 - r15_1) + 1);\n                        if (r14_2 > rdx_1)\n                        {\n                            r14_2 = rdx_1;\n                        }\n                        char* var_118_2;\n                        if (__ctype_get_mb_cur_max() == 1)\n                        {\n                            char* rax_87 = sub_406620((r14_2 + 1));\n                            var_100_1 = rax_87;\n                            var_118_2 = mempcpy(rax_87, &r13[(r15_1 - 1)], r14_2);\n                        label_4033c5:\n                            *var_118_2 = 0;\n                            goto label_40332f;\n                        }\n                        char* rax_19 = sub_406620((rax_12 + 1));\n                        char* var_68_1 = r13;\n                        int64_t r13_1 = 1;\n                        var_100_1 = rax_19;\n                        char var_78_1 = 0;\n                        mbstate_t var_74;\n                        var_74.__count = 0;\n                        var_74.__value = 0;\n                        char var_6c_1 = 0;\n                        var_118_2 = rax_19;\n                        uint32_t rax_20;\n                        int32_t rax_83;\n                        uint32_t rcx_1;\n                        while (true)\n                        {\n                            uint64_t var_60_1;\n                            uint32_t var_54;\n                            if (var_78_1 == 0)\n                            {\n                                char* rdx_4 = var_68_1;\n                                rcx_1 = *rdx_4;\n                                rax_20 = (rcx_1 >> 5);\n                                if (((*(((rax_20 & 7) << 2) + 0x417140) >> rcx_1) & 1) != 0)\n                                {\n                                    var_60_1 = 1;\n                                    char var_58_1 = 1;\n                                    var_54 = *rdx_4;\n                                    char var_6c_2 = 1;\n                                }\n                                else\n                                {\n                                    rax_83 = mbsinit(&var_74);\n                                    if (rax_83 == 0)\n                                    {\n                                        break;\n                                    }\n                                    var_78_1 = 1;\n                                }\n                            }\n                            uint64_t rax_29;\n                            if ((var_78_1 != 0 || (var_78_1 == 0 && ((*(((rax_20 & 7) << 2) + 0x417140) >> rcx_1) & 1) == 0)))\n                            {\n                                rax_29 = sub_407dd0(&var_54, var_68_1, sub_405de0(var_68_1, __ctype_get_mb_cur_max()), &var_74);\n                                var_60_1 = rax_29;\n                                if (rax_29 == -1)\n                                {\n                                    var_60_1 = 1;\n                                    char var_58_3 = 0;\n                                    char var_6c_5 = 1;\n                                }\n                                if (rax_29 == -2)\n                                {\n                                    char var_58_4 = 0;\n                                    var_60_1 = strlen(var_68_1);\n                                    char var_6c_6 = 1;\n                                }\n                                if ((rax_29 != -1 && rax_29 != -2))\n                                {\n                                    if (rax_29 == 0)\n                                    {\n                                        var_60_1 = 1;\n                                        if (*var_68_1 != 0)\n                                        {\n                                        label_403461:\n                                            __assert_fail(\"*iter->cur.ptr == '\\0'\", \"./lib/mbuiter.h\", 0xb2, \"mbuiter_multi_next\");\n                                            /* no return */\n                                        }\n                                        if (var_54 != 0)\n                                        {\n                                            goto label_403448;\n                                        }\n                                    }\n                                    char var_58_2 = 1;\n                                    if (mbsinit(&var_74) != 0)\n                                    {\n                                        var_78_1 = 0;\n                                    }\n                                    char var_6c_4 = 1;\n                                }\n                            }\n                            if ((((var_78_1 == 0 && ((*(((rax_20 & 7) << 2) + 0x417140) >> rcx_1) & 1) != 0) || (((var_78_1 != 0 || (var_78_1 == 0 && ((*(((rax_20 & 7) << 2) + 0x417140) >> rcx_1) & 1) == 0)) && rax_29 != -1) && rax_29 != -2)) && var_54 == 0))\n                            {\n                                break;\n                            }\n                            if (r14_2 == 0)\n                            {\n                                break;\n                            }\n                            if (r15_1 <= r13_1)\n                            {\n                                r14_2 = (r14_2 - 1);\n                                var_118_2 = mempcpy(var_118_2, var_68_1, var_60_1);\n                            }\n                            char var_6c_3 = 0;\n                            r13_1 = (r13_1 + 1);\n                            var_68_1 = &var_68_1[var_60_1];\n                        }\n                        if (((var_78_1 == 0 && ((*(((rax_20 & 7) << 2) + 0x417140) >> rcx_1) & 1) == 0) && rax_83 == 0))\n                        {\n                            goto label_40340b;\n                        }\n                        goto label_4033c5;\n                    }\n                    var_100_1 = sub_406850(&data_418741[0x1b]);\n                label_40332f:\n                    arg3 = sub_402050(var_100_1);\n                    free(var_100_1);\n                    goto label_402e38;\n                }\n                arg3 = sub_402050(&data_418741[0x1b]);\n            label_402e38:\n                sub_402020(rax_5);\n                sub_402020(rax_6);\n                sub_402020(rax_7);\n                goto label_402d92;\n            }\n            sub_401fd0();\n            if (sub_401eb0(&data_4165c0) == 0)\n            {\n                if (sub_401eb0(&data_417f2d) != 0)\n                {\n                    error(2, 0, dcgettext(nullptr, \"syntax error: unexpected ')'\", 5));\n                    goto label_4030c8;\n                }\n                goto label_402d9d;\n            }\n            arg3 = sub_4039c0(r12_1);\n            int64_t rax_47 = data_61d2f8;\n            if (*rax_47 == 0)\n            {\n                error(2, 0, dcgettext(nullptr, \"syntax error: expecting ')' afte\u2026\", 5), sub_405a90(0, 8, *(rax_47 - 8)));\n            label_403448:\n                sub_4020f0();\n                /* no return */\n            }\n            if (sub_401eb0(&data_417f2d) != 0)\n            {\n                goto label_402d92;\n            }\n            error(2, 0, dcgettext(nullptr, \"syntax error: expecting ')' inst\u2026\", 5), sub_405a90(0, 8, **&data_61d2f8));\n        }\n        char* rbx_5 = *(r14_1 + 8);\n        if (__ctype_get_mb_cur_max() <= 1)\n        {\n            uint64_t rax_82 = strcspn(rbx_5, arg3);\n            if (rbx_5[rax_82] == 0)\n            {\n                goto label_402df5;\n            }\n            rbx = (rax_82 + 1);\n            goto label_402dfc;\n        }\n        char* var_e8 = rbx_5;\n        rbx = 0;\n        char var_f8 = 0;\n        uint32_t var_94;\n        uint32_t* var_118 = &var_94;\n        mbstate_t var_f4;\n        var_f4.__count = 0;\n        var_f4.__value = 0;\n        char var_ec_1 = 0;\n        mbstate_t* var_110 = &var_f4;\n        uint32_t var_d4;\n        uint32_t rax_54;\n        uint32_t rax_58;\n        char* rax_59;\n        uint64_t rax_62;\n        uint32_t rcx_6;\n        do\n        {\n            char* r12_3 = var_e8;\n            rcx_6 = *r12_3;\n            rax_54 = (rcx_6 >> 5);\n            if (((*(((rax_54 & 7) << 2) + 0x417140) >> rcx_6) & 1) == 0)\n            {\n                break;\n            }\n            int64_t var_e0_1 = 1;\n            rax_58 = *r12_3;\n            char var_d8_1 = 1;\n            var_d4 = rax_58;\n            char var_ec_2 = 1;\n            if (rax_58 == 0)\n            {\n                break;\n            }\n            rbx = (rbx + 1);\n            while (true)\n            {\n                rax_59 = sub_403d90(arg3, *r12_3);\n                if (rax_59 != 0)\n                {\n                    break;\n                }\n                uint64_t rdi_34 = 1;\n                while (true)\n                {\n                    char var_ec_3 = 0;\n                    var_e8 = &r12_3[rdi_34];\n                    if (var_f8 == 0)\n                    {\n                        break;\n                    }\n                label_402fec:\n                    rax_62 = sub_407dd0(&var_d4, var_e8, sub_405de0(var_e8, __ctype_get_mb_cur_max()), &var_f4);\n                    uint64_t var_e0 = rax_62;\n                    if (rax_62 == -1)\n                    {\n                        char var_d8_2 = 0;\n                        rbx = (rbx + 1);\n                        r12_3 = var_e8;\n                        int64_t var_e0_2 = 1;\n                        char var_ec_5 = 1;\n                        break;\n                    }\n                    char var_d8;\n                    if (rax_62 == -2)\n                    {\n                        var_d8 = 0;\n                        var_e0 = strlen(var_e8);\n                        char var_ec_6 = 1;\n                    }\n                    else\n                    {\n                        if (rax_62 == 0)\n                        {\n                            var_e0 = 1;\n                            if (*var_e8 != 0)\n                            {\n                                break;\n                            }\n                            if ((*var_e8 == 0 && var_d4 != 0))\n                            {\n                                break;\n                            }\n                        }\n                        var_d8 = 1;\n                        if (mbsinit(&var_f4) != 0)\n                        {\n                            var_f8 = 0;\n                        }\n                        char var_ec_4 = 1;\n                        if (var_d4 == 0)\n                        {\n                            goto label_402df5;\n                        }\n                    }\n                    rbx = (rbx + 1);\n                    if (var_e0 == 1)\n                    {\n                        r12_3 = var_e8;\n                        break;\n                    }\n                label_4030c8:\n                    char* var_a8_1 = arg3;\n                    char var_b8_1 = 0;\n                    mbstate_t var_b4;\n                    var_b4.__count = 0;\n                    var_b4.__value = 0;\n                    char var_ac_1 = 0;\n                label_403164:\n                    uint64_t var_a0_1;\n                    uint64_t r15_2;\n                    if (var_b8_1 == 0)\n                    {\n                        char* rdx_13 = var_a8_1;\n                        uint32_t rcx_9 = *rdx_13;\n                        uint32_t rax_67;\n                        rax_67 = (rcx_9 >> 5);\n                        if (((*(((rax_67 & 7) << 2) + 0x417140) >> rcx_9) & 1) == 0)\n                        {\n                            if (mbsinit(&var_b4) == 0)\n                            {\n                                goto label_40340b;\n                            }\n                            var_b8_1 = 1;\n                        }\n                        else\n                        {\n                            var_a0_1 = 1;\n                            char var_98_1 = 1;\n                            var_94 = *rdx_13;\n                            char var_ac_2 = 1;\n                        label_403131:\n                            uint32_t rax_72 = var_94;\n                            if (rax_72 != 0)\n                            {\n                                if (var_d8 == 0)\n                                {\n                                    goto label_40320e;\n                                }\n                                if (var_d4 == rax_72)\n                                {\n                                    break;\n                                }\n                                r15_2 = var_a0_1;\n                                goto label_40315a;\n                            }\n                            r12_3 = var_e8;\n                            rdi_34 = var_e0;\n                            continue;\n                        }\n                    }\n                    uint64_t rax_75 = sub_407dd0(var_118, var_a8_1, sub_405de0(var_a8_1, __ctype_get_mb_cur_max()), &var_b4);\n                    var_a0_1 = rax_75;\n                    if (rax_75 == -1)\n                    {\n                        var_a0_1 = 1;\n                        char var_98_3 = 0;\n                        char var_ac_5 = 1;\n                    label_40320e:\n                        r15_2 = var_a0_1;\n                        if ((r15_2 == var_e0 && memcmp(var_a8_1, var_e8, r15_2) == 0))\n                        {\n                            break;\n                        }\n                    label_40315a:\n                        var_a8_1 = &var_a8_1[r15_2];\n                        char var_ac_3 = 0;\n                        goto label_403164;\n                    }\n                    if (rax_75 == -2)\n                    {\n                        char var_98_4 = 0;\n                        var_a0_1 = strlen(var_a8_1);\n                        char var_ac_6 = 1;\n                        goto label_40320e;\n                    }\n                    if (rax_75 == 0)\n                    {\n                        var_a0_1 = 1;\n                        if (*var_a8_1 != 0)\n                        {\n                            break;\n                        }\n                        if ((*var_a8_1 == 0 && var_94 != 0))\n                        {\n                            break;\n                        }\n                    }\n                    char var_98_2 = 1;\n                    if (mbsinit(&var_b4) != 0)\n                    {\n                        var_b8_1 = 0;\n                    }\n                    char var_ac_4 = 1;\n                    goto label_403131;\n                }\n                if (((var_f8 != 0 && rax_62 == 0) && *var_e8 != 0))\n                {\n                    goto label_403461;\n                }\n                if ((!(var_f8 != 0 && rax_62 == -1)))\n                {\n                    break;\n                }\n                if ((!(var_f8 != 0 && rax_62 == -1)))\n                {\n                    /* nop */\n                }\n            }\n            if (rax_59 != 0)\n            {\n                break;\n            }\n        } while (var_f8 == 0);\n        if (((*(((rax_54 & 7) << 2) + 0x417140) >> rcx_6) & 1) == 0)\n        {\n            if (mbsinit(var_110) != 0)\n            {\n                var_f8 = 1;\n                goto label_402fec;\n            }\n        label_40340b:\n            __assert_fail(\"mbsinit (&iter->state)\", \"./lib/mbuiter.h\", 0x96, \"mbuiter_multi_next\");\n            /* no return */\n        }\n        if (((((*(((rax_54 & 7) << 2) + 0x417140) >> rcx_6) & 1) != 0 && rax_58 != 0) && rax_59 != 0))\n        {\n            goto label_402dfc;\n        }\n        if ((((*(((rax_54 & 7) << 2) + 0x417140) >> rcx_6) & 1) != 0 && rax_58 == 0))\n        {\n            goto label_402df5;\n        }\n        if ((!(((var_f8 != 0 && rax_62 == 0) && *var_e8 == 0) && var_d4 != 0)))\n        {\n            goto label_402dfc;\n        }\n        goto label_403448;\n    }\n    arg3 = sub_402a10(r12_1);\n    int32_t* rax_43 = sub_402a10(r12_1);\n    arg2 = rax_43;\n    if (rbx != 0)\n    {\n        int32_t* rax_44 = sub_402630(arg3, rax_43);\n        sub_402020(arg3);\n        arg3 = rax_44;\n    }\n    goto label_402e19;\n}\n\n"
        },
        {
            "funcName": "sub_403470",
            "funcStartAddr": "0x403470",
            "funcEndAddr": "0x4034dc",
            "decompiledFuncCode": "int32_t* sub_403470(int32_t arg1)\n{\n    uint64_t r13 = arg1;\n    int32_t* rbp = arg1;\n    int32_t* r12 = sub_402a10(rbp, rbp, r13);\n    while (true)\n    {\n        if (sub_401eb0(&data_4165df) == 0)\n        {\n            break;\n        }\n        int32_t* rax_2 = sub_402a10(rbp, rbp, r13);\n        if (r13 != 0)\n        {\n            int32_t* rax_3 = sub_402630(r12, rax_2);\n            sub_402020(r12);\n            r12 = rax_3;\n        }\n        sub_402020(rax_2);\n    }\n    return r12;\n}\n\n"
        },
        {
            "funcName": "sub_4034e0",
            "funcStartAddr": "0x4034e0",
            "funcEndAddr": "0x403610",
            "decompiledFuncCode": "int32_t* sub_4034e0(char arg1)\n{\n    uint32_t r12 = arg1;\n    int32_t* rax = sub_403470(r12);\n    while (true)\n    {\n        int32_t rbp_1;\n        if (sub_401eb0(&data_4165e1) != 0)\n        {\n            rbp_1 = 0;\n        }\n        else\n        {\n            rbp_1 = 1;\n            if (sub_401eb0(\"/\") == 0)\n            {\n                if (sub_401eb0(&data_4165e3) == 0)\n                {\n                    return rax;\n                }\n                rbp_1 = 2;\n            }\n        }\n        int32_t* rax_2 = sub_403470(r12);\n        if (arg1 != 0)\n        {\n            char rax_3 = sub_402110(rax);\n            char rax_4;\n            if (rax_3 != 0)\n            {\n                rax_4 = sub_402110(rax_2);\n                if (rax_4 != 0)\n                {\n                    int64_t rax_5;\n                    if (rbp_1 == 0)\n                    {\n                        rax_5 = 0x401f60;\n                    }\n                    else\n                    {\n                        if (*(rax_2 + 8) == 0)\n                        {\n                            goto label_403603;\n                        }\n                        rax_5 = 0x401fa0;\n                        if (rbp_1 != 1)\n                        {\n                            rax_5 = 0x401e70;\n                        }\n                    }\n                    rax_5(&rax[2], &rax[2], &rax_2[2]);\n                }\n            }\n            if ((rax_3 == 0 || (rax_3 != 0 && rax_4 == 0)))\n            {\n                error(2, 0, dcgettext(nullptr, \"non-integer argument\", 5));\n            label_403603:\n                /* tailcall */\n                return sub_403610(error(2, 0, dcgettext(nullptr, \"division by zero\", 5)));\n            }\n        }\n        sub_402020(rax_2);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_403610",
            "funcStartAddr": "0x403610",
            "funcEndAddr": "0x4036e0",
            "decompiledFuncCode": "int32_t* sub_403610(char arg1)\n{\n    int32_t* rax = sub_4034e0(arg1);\n    while (true)\n    {\n        int32_t r14_1;\n        if (sub_401eb0(&data_4165a4) != 0)\n        {\n            r14_1 = 0;\n        }\n        else\n        {\n            if (sub_401eb0(&data_41664c) == 0)\n            {\n                return rax;\n            }\n            r14_1 = 1;\n        }\n        int32_t* rax_2 = sub_4034e0(arg1);\n        if (arg1 != 0)\n        {\n            char rax_3 = sub_402110(rax);\n            char rax_4;\n            if (rax_3 != 0)\n            {\n                rax_4 = sub_402110(rax_2);\n                if (rax_4 != 0)\n                {\n                    int64_t rax_5 = 0x401f30;\n                    void* rdi_4 = &rax[2];\n                    if (r14_1 != 0)\n                    {\n                        rax_5 = 0x401f00;\n                    }\n                    rax_5(rdi_4, rdi_4, &rax_2[2]);\n                }\n            }\n            if ((rax_3 == 0 || (rax_3 != 0 && rax_4 == 0)))\n            {\n                /* tailcall */\n                return sub_4036e0(error(2, 0, dcgettext(nullptr, \"non-integer argument\", 5)));\n            }\n        }\n        sub_402020(rax_2);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4036e0",
            "funcStartAddr": "0x4036e0",
            "funcEndAddr": "0x403909",
            "decompiledFuncCode": "int32_t* sub_4036e0(char arg1)\n{\n    int32_t* rbx = sub_403610(arg1);\n    while (true)\n    {\n        int64_t r12_1;\n        if (sub_401eb0(&data_41660b) != 0)\n        {\n            r12_1 = 0;\n        }\n        else\n        {\n            r12_1 = 1;\n            if (sub_401eb0(&data_41660d) == 0)\n            {\n                char rax_9 = sub_401eb0(&data_416614);\n                char rax_12;\n                if (rax_9 == 0)\n                {\n                    rax_12 = sub_401eb0(&data_416610);\n                    if (rax_12 == 0)\n                    {\n                        r12_1 = 3;\n                        if (sub_401eb0(&data_416613) == 0)\n                        {\n                            r12_1 = 4;\n                            if (sub_401eb0(&data_416616) == 0)\n                            {\n                                if (sub_401eb0(&data_416619) == 0)\n                                {\n                                    return rbx;\n                                }\n                                r12_1 = 5;\n                            }\n                        }\n                    }\n                }\n                if ((rax_9 != 0 || (rax_9 == 0 && rax_12 != 0)))\n                {\n                    r12_1 = 2;\n                }\n            }\n        }\n        uint64_t r15_1 = 0;\n        int32_t* rax_2 = sub_403610(arg1);\n        if (arg1 != 0)\n        {\n            sub_4021d0(rbx);\n            sub_4021d0(rax_2);\n            char* r15_2 = *(rbx + 8);\n            void* rdx_1;\n            rdx_1 = *r15_2 == 0x2d;\n            void* rdx_2 = (rdx_1 + r15_2);\n            int32_t rax_5 = *rdx_2;\n            int32_t rax_8;\n            while (true)\n            {\n                char* rsi_1;\n                if ((rax_5 - 0x30) > 9)\n                {\n                    rsi_1 = *(rax_2 + 8);\n                }\n                else\n                {\n                    rdx_2 = (rdx_2 + 1);\n                    rax_5 = *rdx_2;\n                    if (rax_5 != 0)\n                    {\n                        continue;\n                    }\n                    else\n                    {\n                        rsi_1 = *(rax_2 + 8);\n                        void* const rdx_3;\n                        rdx_3 = *rsi_1 == 0x2d;\n                        void* rdx_4 = (rdx_3 + rsi_1);\n                        int32_t rax_10 = *rdx_4;\n                        while ((rax_10 - 0x30) <= 9)\n                        {\n                            rdx_4 = (rdx_4 + 1);\n                            rax_10 = *rdx_4;\n                            if (rax_10 == 0)\n                            {\n                                break;\n                            }\n                        }\n                        if ((rax_10 - 0x30) <= 9)\n                        {\n                            rax_8 = sub_405e20(r15_2, rsi_1);\n                            break;\n                        }\n                    }\n                }\n                *__errno_location() = 0;\n                rax_8 = strcoll(r15_2, rsi_1);\n                break;\n            }\n            if ((r12_1 > 5 || (r12_1 <= 5 && r12_1 == 0)))\n            {\n                r15_1 = (rax_8 >> 0x3f);\n            }\n            if (r12_1 <= 5)\n            {\n                switch (r12_1)\n                {\n                    case 1:\n                    {\n                        r15_1 = rax_8 <= 0;\n                        break;\n                    }\n                    case 2:\n                    {\n                        r15_1 = rax_8 == 0;\n                        break;\n                    }\n                    case 3:\n                    {\n                        r15_1 = rax_8 != 0;\n                        break;\n                    }\n                    case 4:\n                    {\n                        r15_1 = ((!rax_8) >> 0x3f);\n                        break;\n                    }\n                }\n                if (r12_1 == 5)\n                {\n                    r15_1 = rax_8 > 0;\n                }\n            }\n        }\n        sub_402020(rbx);\n        sub_402020(rax_2);\n        int32_t* rax_3 = sub_406620(0x10);\n        *rax_3 = 0;\n        rbx = rax_3;\n        *(rax_3 + 8) = r15_1;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_403910",
            "funcStartAddr": "0x403910",
            "funcEndAddr": "0x4039bd",
            "decompiledFuncCode": "int32_t* sub_403910(char arg1)\n{\n    int32_t* rbx = sub_4036e0(arg1);\n    while (true)\n    {\n        if (sub_401eb0(&data_41661b) == 0)\n        {\n            break;\n        }\n        int32_t* rax_4;\n        while (true)\n        {\n            char rdi_2 = 0;\n            if (arg1 != 0)\n            {\n                rdi_2 = (sub_402090(rbx) ^ 1);\n            }\n            rax_4 = sub_4036e0(rdi_2);\n            if ((sub_402090(rbx) == 0 && sub_402090(rax_4) == 0))\n            {\n                break;\n            }\n            sub_402020(rbx);\n            sub_402020(rax_4);\n            int32_t* rax_7 = sub_406620(0x10);\n            *rax_7 = 0;\n            rbx = rax_7;\n            *(rax_7 + 8) = 0;\n            if (sub_401eb0(&data_41661b) == 0)\n            {\n                return rbx;\n            }\n        }\n        sub_402020(rax_4);\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_4039c0",
            "funcStartAddr": "0x4039c0",
            "funcEndAddr": "0x403a6d",
            "decompiledFuncCode": "int32_t* sub_4039c0(char arg1)\n{\n    int32_t* rbx = sub_403910(arg1);\n    while (true)\n    {\n        if (sub_401eb0(&data_41661d) == 0)\n        {\n            break;\n        }\n        while (true)\n        {\n            char rdi_2 = 0;\n            if (arg1 != 0)\n            {\n                rdi_2 = sub_402090(rbx);\n            }\n            int32_t* rax_3 = sub_403910(rdi_2);\n            if (sub_402090(rbx) == 0)\n            {\n                sub_402020(rax_3);\n                break;\n            }\n            int32_t* rdi_4 = rbx;\n            rbx = rax_3;\n            sub_402020(rdi_4);\n            if (sub_402090(rax_3) == 0)\n            {\n                break;\n            }\n            sub_402020(rax_3);\n            int32_t* rax_6 = sub_406620(0x10);\n            *rax_6 = 0;\n            rbx = rax_6;\n            *(rax_6 + 8) = 0;\n            if (sub_401eb0(&data_41661d) == 0)\n            {\n                return rbx;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_403a70",
            "funcStartAddr": "0x403a70",
            "funcEndAddr": "0x403a78",
            "decompiledFuncCode": "int64_t sub_403a70(int64_t arg1)\n{\n    data_61d308 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_403a80",
            "funcStartAddr": "0x403a80",
            "funcEndAddr": "0x403a88",
            "decompiledFuncCode": "int64_t sub_403a80(char arg1)\n{\n    data_61d300 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_403a90",
            "funcStartAddr": "0x403a90",
            "funcEndAddr": "0x403b2e",
            "decompiledFuncCode": "void sub_403a90(void* arg1)\n{\n    int32_t rax = sub_415ca0(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_61d300 == 0 || (data_61d300 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_61d308;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_405c10(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_61d300 != 0) && *rax_1 == 0x20)) && sub_415ca0(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_61d250);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_403b30",
            "funcStartAddr": "0x403b30",
            "funcEndAddr": "0x403bcc",
            "decompiledFuncCode": "void* sub_403b30(uint64_t arg1, void* arg2)\n{\n    void* rcx = (arg2 + 0x14);\n    *(arg2 + 0x14) = 0;\n    if (arg1 < 0)\n    {\n        void* rsi;\n        while (true)\n        {\n            rsi = (rcx - 1);\n            int64_t rax_7;\n            int64_t rdx_3;\n            rdx_3 = HIGHD((arg1 * 0x6666666666666667));\n            rax_7 = LOWD((arg1 * 0x6666666666666667));\n            int64_t rdx_5 = ((rdx_3 >> 2) - (arg1 >> 0x3f));\n            char rax_12 = ((0x30 + (rdx_5 * 0xa)) - arg1);\n            arg1 = rdx_5;\n            *(rcx - 1) = rax_12;\n            if (rdx_5 == 0)\n            {\n                break;\n            }\n            rcx = rsi;\n        }\n        *(rsi - 1) = 0x2d;\n        return (rcx - 2);\n    }\n    uint64_t rdx_2;\n    do\n    {\n        rcx = (rcx - 1);\n        int64_t rax_2;\n        int64_t rdx_1;\n        rdx_1 = HIGHD((arg1 * -0x3333333333333333));\n        rax_2 = LOWD((arg1 * -0x3333333333333333));\n        rdx_2 = (rdx_1 >> 3);\n        char rax_3 = (rdx_2 + (rdx_2 << 2));\n        *rcx = ((arg1 - (rax_3 + rax_3)) + 0x30);\n        arg1 = rdx_2;\n    } while (rdx_2 != 0);\n    return rcx;\n}\n\n"
        },
        {
            "funcName": "sub_403bd0",
            "funcStartAddr": "0x403bd0",
            "funcEndAddr": "0x403cd2",
            "decompiledFuncCode": "void sub_403bd0(int32_t arg1, int64_t* arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5, int64_t arg6, uint64_t arg7 @ rax)\n{\n    if (arg7 != 0)\n    {\n        int128_t zmm0;\n        int128_t var_a8_1 = zmm0;\n        int128_t zmm1;\n        int128_t var_98_1 = zmm1;\n        int128_t zmm2;\n        int128_t var_88_1 = zmm2;\n        int128_t zmm3;\n        int128_t var_78_1 = zmm3;\n        int128_t zmm4;\n        int128_t var_68_1 = zmm4;\n        int128_t zmm5;\n        int128_t var_58_1 = zmm5;\n        int128_t zmm6;\n        int128_t var_48_1 = zmm6;\n        int128_t zmm7;\n        int128_t var_38_1 = zmm7;\n    }\n    int32_t rbx = data_61d2b8;\n    data_61d2b8 = 0;\n    if (arg1 == 2)\n    {\n        arg7 = getopt_long(arg1, arg2, &data_4165a4, &data_4170e0, nullptr);\n        if (arg7 != 0xffffffff)\n        {\n            if (arg7 == 0x68)\n            {\n                arg6(0);\n            }\n            else if (arg7 == 0x76)\n            {\n                int32_t var_f0 = 0x30;\n                void* var_e8 = &arg_8;\n                int32_t var_ec = 0x30;\n                void var_d8;\n                void* var_e0 = &var_d8;\n                sub_406480(stdout, arg3, arg4, arg5, &var_f0);\n                exit(0);\n                /* no return */\n            }\n        }\n    }\n    data_61d2b8 = rbx;\n    data_61d2bc = 0;\n}\n\n"
        },
        {
            "funcName": "sub_403ce0",
            "funcStartAddr": "0x403ce0",
            "funcEndAddr": "0x403d01",
            "decompiledFuncCode": "uint64_t sub_403ce0(wchar_t arg1)\n{\n    int64_t rax = wcwidth(arg1);\n    if (rax < 0)\n    {\n        int32_t rax_1;\n        rax_1 = iswcntrl(arg1) == 0;\n        return rax_1;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_403d10",
            "funcStartAddr": "0x403d10",
            "funcEndAddr": "0x403d66",
            "decompiledFuncCode": "uint64_t sub_403d10(int64_t* arg1, int64_t* arg2)\n{\n    int64_t rsi = *arg2;\n    uint64_t rdx = arg2[1];\n    if (rsi == &arg2[3])\n    {\n        rdx = arg2[1];\n        *arg1 = memcpy(&arg1[3], rsi, rdx);\n    }\n    else\n    {\n        *arg1 = rsi;\n    }\n    uint64_t rax_1 = arg2[2];\n    arg1[1] = rdx;\n    arg1[2] = rax_1;\n    if (rax_1 != 0)\n    {\n        rax_1 = *(arg2 + 0x14);\n        *(arg1 + 0x14) = rax_1;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_403d70",
            "funcStartAddr": "0x403d70",
            "funcEndAddr": "0x403d87",
            "decompiledFuncCode": "uint64_t sub_403d70(int32_t arg1)\n{\n    int32_t rax;\n    rax = (arg1 >> 5);\n    return ((*(((rax & 7) << 2) + 0x417140) >> arg1) & 1);\n}\n\n"
        },
        {
            "funcName": "sub_403d90",
            "funcStartAddr": "0x403d90",
            "funcEndAddr": "0x403fcf",
            "decompiledFuncCode": "char* sub_403d90(void* arg1, int32_t arg2)\n{\n    if ((__ctype_get_mb_cur_max() > 1 && arg2 > 0x2f))\n    {\n        void* var_48 = arg1;\n        char var_58 = 0;\n        mbstate_t var_54;\n        var_54.__count = 0;\n        var_54.__value = 0;\n        char var_4c = 0;\n        char* rbx_1;\n        while (true)\n        {\n            uint32_t var_34;\n            uint32_t rcx_2;\n            uint32_t rdx_2;\n            uint64_t rdx_8;\n            if (var_58 == 0)\n            {\n                char* rax_2 = var_48;\n                rcx_2 = *rax_2;\n                rdx_2 = (rcx_2 >> 5);\n                if (((*(((rdx_2 & 7) << 2) + 0x417140) >> rcx_2) & 1) == 0)\n                {\n                    if (mbsinit(&var_54) == 0)\n                    {\n                        __assert_fail(\"mbsinit (&iter->state)\", \"lib/mbuiter.h\", 0x96, \"mbuiter_multi_next\");\n                        /* no return */\n                    }\n                    var_58 = 1;\n                }\n                else\n                {\n                    int64_t var_40_1 = 1;\n                    uint32_t rdx_7 = *rax_2;\n                    char var_38_1 = 1;\n                    var_34 = rdx_7;\n                    char var_4c_1 = 1;\n                    if (rdx_7 == 0)\n                    {\n                    label_403f83:\n                        return 0;\n                    }\n                    rdx_8 = 1;\n                    rbx_1 = rax_2;\n                }\n            }\n            if ((var_58 != 0 || (var_58 == 0 && ((*(((rdx_2 & 7) << 2) + 0x417140) >> rcx_2) & 1) == 0)))\n            {\n                uint64_t rax_6 = sub_407dd0(&var_34, var_48, sub_405de0(var_48, __ctype_get_mb_cur_max()), &var_54);\n                uint64_t var_40_2 = rax_6;\n                if (rax_6 == -1)\n                {\n                    rbx_1 = var_48;\n                    char var_38_3 = 0;\n                    rdx_8 = 1;\n                    int64_t var_40_3 = 1;\n                    char var_4c_4 = 1;\n                    if (*rbx_1 == arg2)\n                    {\n                        break;\n                    }\n                    goto label_403e3c;\n                }\n                if (rax_6 == -2)\n                {\n                    rbx_1 = var_48;\n                    char var_38_4 = 0;\n                    var_40_2 = strlen(rbx_1);\n                    char var_4c_5 = 1;\n                }\n                else\n                {\n                    if (rax_6 == 0)\n                    {\n                        var_40_2 = 1;\n                        if (*var_48 != 0)\n                        {\n                            __assert_fail(\"*iter->cur.ptr == '\\0'\", \"lib/mbuiter.h\", 0xb2, \"mbuiter_multi_next\");\n                            /* no return */\n                        }\n                        if (var_34 != 0)\n                        {\n                            __assert_fail(\"iter->cur.wc == 0\", \"lib/mbuiter.h\", 0xb3, \"mbuiter_multi_next\");\n                            /* no return */\n                        }\n                    }\n                    char var_38_2 = 1;\n                    if (mbsinit(&var_54) != 0)\n                    {\n                        var_58 = 0;\n                    }\n                    char var_4c_3 = 1;\n                    if (var_34 == 0)\n                    {\n                        goto label_403f83;\n                    }\n                    rbx_1 = var_48;\n                }\n                rdx_8 = var_40_2;\n                if (rdx_8 != 1)\n                {\n                    goto label_403e3c;\n                }\n            }\n            if (*rbx_1 == arg2)\n            {\n                break;\n            }\n        label_403e3c:\n            char var_4c_2 = 0;\n            var_48 = &rbx_1[rdx_8];\n        }\n        return rbx_1;\n    }\n    /* tailcall */\n    return strchr(arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_403fd0",
            "funcStartAddr": "0x403fd0",
            "funcEndAddr": "0x40419c",
            "decompiledFuncCode": "uint64_t sub_403fd0(char* arg1)\n{\n    uint64_t rbx_1;\n    if (__ctype_get_mb_cur_max() <= 1)\n    {\n        rbx_1 = strlen(arg1);\n    }\n    else\n    {\n        char* var_48_1 = arg1;\n        rbx_1 = 0;\n        char var_58_1 = 0;\n        mbstate_t var_54;\n        var_54.__count = 0;\n        var_54.__value = 0;\n        char var_4c_1 = 0;\n        while (true)\n        {\n            uint64_t var_40_1;\n            uint32_t var_34;\n            uint32_t rax_3;\n            uint32_t rcx_1;\n            if (var_58_1 == 0)\n            {\n                char* rdx_1 = var_48_1;\n                rcx_1 = *rdx_1;\n                rax_3 = (rcx_1 >> 5);\n                if (((*(((rax_3 & 7) << 2) + 0x417140) >> rcx_1) & 1) != 0)\n                {\n                    var_40_1 = 1;\n                    char var_38_1 = 1;\n                    var_34 = *rdx_1;\n                }\n                else\n                {\n                    if (mbsinit(&var_54) == 0)\n                    {\n                        __assert_fail(\"mbsinit (&iter->state)\", \"lib/mbuiter.h\", 0x96, \"mbuiter_multi_next\");\n                        /* no return */\n                    }\n                    var_58_1 = 1;\n                }\n            }\n            uint64_t rax_12;\n            if ((var_58_1 != 0 || (var_58_1 == 0 && ((*(((rax_3 & 7) << 2) + 0x417140) >> rcx_1) & 1) == 0)))\n            {\n                char* rbp_1 = var_48_1;\n                rax_12 = sub_407dd0(&var_34, rbp_1, sub_405de0(rbp_1, __ctype_get_mb_cur_max()), &var_54);\n                var_40_1 = rax_12;\n                if (rax_12 == -1)\n                {\n                    var_40_1 = 1;\n                    char var_38_3 = 0;\n                }\n                if (rax_12 == -2)\n                {\n                    char var_38_4 = 0;\n                    var_40_1 = strlen(var_48_1);\n                }\n                if ((rax_12 != -1 && rax_12 != -2))\n                {\n                    if (rax_12 == 0)\n                    {\n                        var_40_1 = 1;\n                        if (*var_48_1 != 0)\n                        {\n                            __assert_fail(\"*iter->cur.ptr == '\\0'\", \"lib/mbuiter.h\", 0xb2, \"mbuiter_multi_next\");\n                            /* no return */\n                        }\n                        if (var_34 != 0)\n                        {\n                            __assert_fail(\"iter->cur.wc == 0\", \"lib/mbuiter.h\", 0xb3, \"mbuiter_multi_next\");\n                            /* no return */\n                        }\n                    }\n                    char var_38_2 = 1;\n                    if (mbsinit(&var_54) != 0)\n                    {\n                        var_58_1 = 0;\n                    }\n                }\n            }\n            if ((((var_58_1 == 0 && ((*(((rax_3 & 7) << 2) + 0x417140) >> rcx_1) & 1) != 0) || (((var_58_1 != 0 || (var_58_1 == 0 && ((*(((rax_3 & 7) << 2) + 0x417140) >> rcx_1) & 1) == 0)) && rax_12 != -1) && rax_12 != -2)) && var_34 == 0))\n            {\n                break;\n            }\n            var_48_1 = &var_48_1[var_40_1];\n            rbx_1 = (rbx_1 + 1);\n            char var_4c_2 = 0;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_4041a0",
            "funcStartAddr": "0x4041a0",
            "funcEndAddr": "0x404239",
            "decompiledFuncCode": "char* sub_4041a0(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_4171d8;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_61d310 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404240",
            "funcStartAddr": "0x404240",
            "funcEndAddr": "0x404332",
            "decompiledFuncCode": "char* sub_404240(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_415d60();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_404321:\n                void* const rbx_1 = &data_4171dc;\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"':*%\u2026\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_404321;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_404321;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_404321;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_404321;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_404321;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_404321;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_404321;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_4171e5;\n            if (cond:2_1)\n            {\n                rbx = &data_4171e2;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_404321;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_404321;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_404321;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_404321;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_404321;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_4171e9;\n            if (cond:1_1)\n            {\n                rbx = &data_4171de;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_404340",
            "funcStartAddr": "0x401ba0",
            "funcEndAddr": "0x405561",
            "decompiledFuncCode": "int64_t sub_404340(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    char const* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = \"':*%\u2026\";\n    label_4043d8:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_40474c:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_404794;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_404340(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char const rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_4047ab;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_4048e5;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_404535;\n                            }\n                            goto label_404820;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_4048e5;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_404710;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_404710:\n                            if (var_c0 == 0)\n                            {\n                                goto label_40471b;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_404577:\n                            if (var_5c == 0)\n                            {\n                                goto label_404588;\n                            }\n                        label_404740:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_404748;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_40497b;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_40497b:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_40498a:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_40474c;\n                            }\n                            goto label_404710;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_404710;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_404710;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_40497b;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_404516;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_404516:\n                            if (var_5c == 0)\n                            {\n                                goto label_404535;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_404535;\n                            }\n                            goto label_40498a;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_40450d:\n                            if (r12_1 != 0)\n                            {\n                                goto label_40471b;\n                            }\n                            goto label_404516;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_404940:\n                            rdx = r11_1 == 2;\n                        label_404535:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_40463c;\n                            }\n                            goto label_40453f;\n                        }\n                        case 0x27:\n                        {\n                            goto label_4046bd;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_40468d;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_4046ea;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_40547d;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_404654;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_4044e9;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_404ae0;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_404ae0;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_405430:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_404794:\n                            rbx_1 = sub_404340(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_4047ab:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_4048e5;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_404837;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_4048e5;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_404800:\n                                r13 = 0;\n                                goto label_4045bb;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_404588:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_4045bb:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_4045c5;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_4045c5:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_4045cd;\n                            }\n                            case 9:\n                            {\n                                goto label_4047b0;\n                            }\n                            case 0xa:\n                            {\n                                goto label_404728;\n                            }\n                            case 0xb:\n                            {\n                                goto label_404810;\n                            }\n                            case 0xc:\n                            {\n                                goto label_4047f0;\n                            }\n                            case 0xd:\n                            {\n                                goto label_4047d9;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_404b3a;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_4047c5;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_404b1a;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_404b02;\n                            }\n                            case 0x27:\n                            {\n                                goto label_4046bd;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_40468d;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_4046ea;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_4044e9;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_404ae0:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_4048e0:\n                            var_b8 = 0;\n                        label_4048e5:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_404934:\n                                if (rdx == 0)\n                                {\n                                    goto label_404940;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_404e31:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_404654;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_40474c;\n                                }\n                                r13 = var_98;\n                                goto label_4045cd;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_407dd0(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_40474c;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_404e31;\n                            }\n                            goto label_404934;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_404820:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_40474c;\n                                }\n                                var_b8 = 0;\n                            label_404837:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_404882;\n                                    }\n                                    rax_8 = r10;\n                                label_40487a:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_404882:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_40463c;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_4048c3;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_40487a;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_40463c;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_4048e0;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_4047f5;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_40472d;\n                            }\n                            case 9:\n                            {\n                            label_4047b0:\n                                rbp_3 = 0x74;\n                                goto label_40472d;\n                            }\n                            case 0xa:\n                            {\n                            label_404728:\n                                rbp_3 = 0x6e;\n                            label_40472d:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_404740;\n                                }\n                                goto label_404588;\n                            }\n                            case 0xb:\n                            {\n                            label_404810:\n                                rbp_3 = 0x76;\n                                goto label_4047f5;\n                            }\n                            case 0xc:\n                            {\n                            label_4047f0:\n                                rbp_3 = 0x66;\n                            label_4047f5:\n                                if (var_5c == 0)\n                                {\n                                    goto label_404800;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_404748:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_40474c;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_4047d9:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_404710;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_404b3a:\n                                rbp_3 = 0x20;\n                                goto label_404b02;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_4047c5:\n                                rdx = 0;\n                            label_40471b:\n                                r13 = 0;\n                                goto label_404535;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_404b1a:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_404535;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_40453f:\n                                rax_8 = 0;\n                                goto label_404541;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_404b02:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_404541;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_4046bd:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_404535;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_40547d;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_40463c;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_40468d:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_40547d:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_40474c;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_40463c:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_404577;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_404654;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_404535;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_404c20:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_404535;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_404c20;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_404c20;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_404c20;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_404c20;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_405430;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_4048c3:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_40463c;\n                                }\n                            label_404541:\n                                if (arg7 == 0)\n                                {\n                                    goto label_40463c;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_40463c;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_404577;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_4046ea:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_404710;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_404654:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_4045cd;\n                                }\n                            label_4045cd:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_4045d6;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_4045d6:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_4044e9:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_40471b;\n                                }\n                                goto label_40450d;\n                            }\n                        }\n                    }\n                }\n            }\n        label_404bc6:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = \"':*%\u2026\";\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_4043d8;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = \"':*%\u2026\";\n                goto label_4043d8;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"':*%\u2026\";\n            goto label_4043d8;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_4171dc;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_4171dc;\n            }\n            goto label_4043d8;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_4171dc;\n            goto label_4043d8;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_4043d8;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_404240(&data_4171ed, r13);\n                arg9 = sub_404240(\"':*%\u2026\", r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_4043d8;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_404bc6;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = \"':*%\u2026\";\n        goto label_4043d8;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_405570",
            "funcStartAddr": "0x401ba5",
            "funcEndAddr": "0x40570e",
            "decompiledFuncCode": "char* sub_405570(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_61d298;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_61d2b0 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_406870();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x61d2a0)\n        {\n            int64_t rax_9 = sub_406680(0, rsi_1);\n            int128_t zmm0 = data_61d2a0;\n            rbx = rax_9;\n            data_61d298 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_406680(rbx, rsi_1);\n            data_61d298 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_61d2b0;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_61d2b0 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_404340(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        uint64_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x61d320)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_406620(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_404340(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_405710",
            "funcStartAddr": "0x405710",
            "funcEndAddr": "0x405744",
            "decompiledFuncCode": "int64_t sub_405710(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x61d420;\n    }\n    int64_t rax_1 = sub_406820(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_405750",
            "funcStartAddr": "0x405750",
            "funcEndAddr": "0x40575f",
            "decompiledFuncCode": "uint64_t sub_405750(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_61d420;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_405760",
            "funcStartAddr": "0x405760",
            "funcEndAddr": "0x40576f",
            "decompiledFuncCode": "void sub_405760(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_61d420;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_405770",
            "funcStartAddr": "0x405770",
            "funcEndAddr": "0x4057a3",
            "decompiledFuncCode": "uint64_t sub_405770(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x61d420;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_4057b0",
            "funcStartAddr": "0x4057b0",
            "funcEndAddr": "0x4057c3",
            "decompiledFuncCode": "uint64_t sub_4057b0(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_61d420;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4057d0",
            "funcStartAddr": "0x4057d0",
            "funcEndAddr": "0x4057fb",
            "decompiledFuncCode": "void sub_4057d0(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_61d420;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x61d420;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_405800",
            "funcStartAddr": "0x405800",
            "funcEndAddr": "0x405872",
            "decompiledFuncCode": "int64_t sub_405800(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_61d420;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_404340(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_405880",
            "funcStartAddr": "0x405880",
            "funcEndAddr": "0x405961",
            "decompiledFuncCode": "char* sub_405880(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_61d420;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_404340(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_406620((rax_2 + 1));\n    sub_404340(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_405970",
            "funcStartAddr": "0x405970",
            "funcEndAddr": "0x40597a",
            "decompiledFuncCode": "int64_t sub_405970(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_405880(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_405980",
            "funcStartAddr": "0x405980",
            "funcEndAddr": "0x405a15",
            "decompiledFuncCode": "uint64_t sub_405980()\n{\n    uint64_t rax_2 = data_61d2b0;\n    int64_t r12 = data_61d298;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x61d320)\n    {\n        rax_2 = free(rdi_2);\n        *data_61d2a0 = 0x100;\n        *(data_61d2a0 + 8) = 0x61d320;\n    }\n    if (r12 != 0x61d2a0)\n    {\n        rax_2 = free(r12);\n        data_61d298 = 0x61d2a0;\n    }\n    data_61d2b0 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_405a20",
            "funcStartAddr": "0x405a20",
            "funcEndAddr": "0x405a31",
            "decompiledFuncCode": "int64_t sub_405a20(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_405570(arg1, arg2, -1, &data_61d420);\n}\n\n"
        },
        {
            "funcName": "sub_405a40",
            "funcStartAddr": "0x405a40",
            "funcEndAddr": "0x405a4a",
            "decompiledFuncCode": "int64_t sub_405a40(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_405570(arg1, arg2, arg3, &data_61d420);\n}\n\n"
        },
        {
            "funcName": "sub_405a50",
            "funcStartAddr": "0x405a50",
            "funcEndAddr": "0x405a66",
            "decompiledFuncCode": "int64_t sub_405a50(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_405570(0, arg1, -1, &data_61d420);\n}\n\n"
        },
        {
            "funcName": "sub_405a70",
            "funcStartAddr": "0x405a70",
            "funcEndAddr": "0x405a82",
            "decompiledFuncCode": "int64_t sub_405a70(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_405570(0, arg1, arg2, &data_61d420);\n}\n\n"
        },
        {
            "funcName": "sub_405a90",
            "funcStartAddr": "0x401baa",
            "funcEndAddr": "0x405af8",
            "decompiledFuncCode": "char* sub_405a90(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_405570(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_405b00",
            "funcStartAddr": "0x401baf",
            "funcEndAddr": "0x405b64",
            "decompiledFuncCode": "char* sub_405b00(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_405570(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_405b70",
            "funcStartAddr": "0x405b70",
            "funcEndAddr": "0x405b7c",
            "decompiledFuncCode": "int64_t sub_405b70(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_405a90(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405b80",
            "funcStartAddr": "0x405b80",
            "funcEndAddr": "0x405b8f",
            "decompiledFuncCode": "int64_t sub_405b80(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_405b00(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_405b90",
            "funcStartAddr": "0x405b90",
            "funcEndAddr": "0x405c00",
            "decompiledFuncCode": "char* sub_405b90(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_61d450;\n    int128_t var_48 = data_61d420;\n    int128_t var_38 = data_61d430;\n    int128_t var_28 = data_61d440;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_405570(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_405c00",
            "funcStartAddr": "0x405c00",
            "funcEndAddr": "0x405c0d",
            "decompiledFuncCode": "int64_t sub_405c00(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_405b90(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405c10",
            "funcStartAddr": "0x405c10",
            "funcEndAddr": "0x405c21",
            "decompiledFuncCode": "int64_t sub_405c10(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_405b90(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_405c30",
            "funcStartAddr": "0x405c30",
            "funcEndAddr": "0x405c3a",
            "decompiledFuncCode": "int64_t sub_405c30(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_405b90(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_405c40",
            "funcStartAddr": "0x401bb4",
            "funcEndAddr": "0x405cae",
            "decompiledFuncCode": "char* sub_405c40(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_405570(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_405cb0",
            "funcStartAddr": "0x405cb0",
            "funcEndAddr": "0x405d1c",
            "decompiledFuncCode": "char* sub_405cb0(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_61d420;\n    int128_t var_38 = data_61d430;\n    int128_t var_28 = data_61d440;\n    int64_t var_18 = data_61d450;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_405570(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_405de0",
            "funcStartAddr": "0x405de0",
            "funcEndAddr": "0x405e11",
            "decompiledFuncCode": "void* sub_405de0(char* arg1, void* arg2)\n{\n    char* rax = sub_407e50(arg1, 0, arg2);\n    void* rsi_2 = ((rax - arg1) + 1);\n    void* rax_1 = arg2;\n    if (rax != 0)\n    {\n        rax_1 = rsi_2;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_405e20",
            "funcStartAddr": "0x405e20",
            "funcEndAddr": "0x406071",
            "decompiledFuncCode": "uint64_t sub_405e20(char* arg1, char* arg2)\n{\n    uint32_t rcx = *arg1;\n    uint32_t rdx = *arg2;\n    uint64_t rax_2;\n    int64_t r8_1;\n    if (rcx != 0x2d)\n    {\n        if (rdx == 0x2d)\n        {\n            uint32_t rax_8;\n            do\n            {\n                arg2 = &arg2[1];\n                rax_8 = *arg2;\n            } while (rax_8 == 0x30);\n            if ((rax_8 - 0x30) <= 9)\n            {\n                return 1;\n            }\n            while (rcx == 0x30)\n            {\n                arg1 = &arg1[1];\n                rcx = *arg1;\n            }\n            int64_t rax_10;\n            rax_10 = (rcx - 0x30) <= 9;\n            return rax_10;\n        }\n        while (rcx == 0x30)\n        {\n            arg1 = &arg1[1];\n            rcx = *arg1;\n        }\n        while (rdx == 0x30)\n        {\n            arg2 = &arg2[1];\n            rdx = *arg2;\n        }\n        uint32_t rax_1 = rcx;\n        int32_t r8 = (rax_1 - 0x30);\n        if (rdx == rcx)\n        {\n            while (r8 <= 9)\n            {\n                arg1 = &arg1[1];\n                arg2 = &arg2[1];\n                rax_1 = *arg1;\n                rdx = *arg2;\n                r8 = (rax_1 - 0x30);\n                if (rax_1 != rdx)\n                {\n                    break;\n                }\n            }\n        }\n        if ((rdx != rcx || (rdx == rcx && r8 <= 9)))\n        {\n            rax_2 = (rax_1 - rdx);\n            if (r8 <= 9)\n            {\n                r8_1 = 0;\n                uint32_t rcx_1;\n                do\n                {\n                    rcx_1 = arg1[(r8_1 + 1)];\n                    r8_1 = (r8_1 + 1);\n                } while ((rcx_1 - 0x30) <= 9);\n                if ((rdx - 0x30) > 9)\n                {\n                    int64_t rax_15;\n                    rax_15 = r8_1 != 0;\n                    return rax_15;\n                }\n                goto label_405eae;\n            }\n        }\n        if ((rdx == rcx && r8 > 9))\n        {\n            rax_2 = (rax_1 - rdx);\n        }\n        r8_1 = 0;\n        if ((rdx - 0x30) > 9)\n        {\n            goto label_406053;\n        }\n    label_405eae:\n        int64_t rcx_3 = 0;\n        uint32_t rdx_2;\n        do\n        {\n            rdx_2 = arg2[(rcx_3 + 1)];\n            rcx_3 = (rcx_3 + 1);\n        } while ((rdx_2 - 0x30) <= 9);\n        bool c = r8_1 < rcx_3;\n        if (r8_1 != rcx_3)\n        {\n            return ((rax_2 - rax_2) | 1);\n        }\n    }\n    else\n    {\n        char rax_5;\n        do\n        {\n            arg1 = &arg1[1];\n            rax_5 = *arg1;\n        } while (rax_5 == 0x30);\n        uint32_t r8_2 = rax_5;\n        int32_t r9_1 = (r8_2 - 0x30);\n        if (rdx != 0x2d)\n        {\n            if (r9_1 <= 9)\n            {\n                return 0xffffffff;\n            }\n            while (rdx == 0x30)\n            {\n                arg2 = &arg2[1];\n                rdx = *arg2;\n            }\n            int32_t rax_6;\n            rax_6 = (rdx - 0x30) <= 9;\n            return (-rax_6);\n        }\n        char rdx_6;\n        do\n        {\n            arg2 = &arg2[1];\n            rdx_6 = *arg2;\n        } while (rdx_6 == 0x30);\n        if (rax_5 == rdx_6)\n        {\n            while (r9_1 <= 9)\n            {\n                arg1 = &arg1[1];\n                arg2 = &arg2[1];\n                r8_2 = *arg1;\n                rdx_6 = *arg2;\n                r9_1 = (r8_2 - 0x30);\n                if (r8_2 != rdx_6)\n                {\n                    break;\n                }\n            }\n        }\n        uint32_t rcx_5;\n        if ((rax_5 != rdx_6 || (rax_5 == rdx_6 && r9_1 <= 9)))\n        {\n            rcx_5 = rdx_6;\n            rax_2 = (rcx_5 - r8_2);\n            if (r9_1 <= 9)\n            {\n                r8_1 = 0;\n                uint32_t rdx_7;\n                do\n                {\n                    rdx_7 = arg1[(r8_1 + 1)];\n                    r8_1 = (r8_1 + 1);\n                } while ((rdx_7 - 0x30) <= 9);\n                if ((rcx_5 - 0x30) > 9)\n                {\n                    int32_t rax_16;\n                    rax_16 = r8_1 != 0;\n                    return (-rax_16);\n                }\n                goto label_405fba;\n            }\n        }\n        if ((rax_5 == rdx_6 && r9_1 > 9))\n        {\n            rcx_5 = rdx_6;\n            rax_2 = (rcx_5 - r8_2);\n        }\n        r8_1 = 0;\n        if ((rcx_5 - 0x30) > 9)\n        {\n        label_406053:\n            return 0;\n        }\n    label_405fba:\n        int64_t rcx_6 = 0;\n        uint32_t rdx_10;\n        do\n        {\n            rdx_10 = arg2[(rcx_6 + 1)];\n            rcx_6 = (rcx_6 + 1);\n        } while ((rdx_10 - 0x30) <= 9);\n        bool c_1 = r8_1 < rcx_6;\n        if (r8_1 != rcx_6)\n        {\n            return (((rax_2 - rax_2) & 2) - 1);\n        }\n    }\n    if (r8_1 != 0)\n    {\n        goto label_40601b;\n    }\n    rax_2 = 0;\nlabel_40601b:\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_406080",
            "funcStartAddr": "0x401bb9",
            "funcEndAddr": "0x40645d",
            "decompiledFuncCode": "int64_t sub_406080(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_417f2b, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_406460",
            "funcStartAddr": "0x406460",
            "funcEndAddr": "0x406480",
            "decompiledFuncCode": "int64_t sub_406460(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_406080(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_406480",
            "funcStartAddr": "0x406480",
            "funcEndAddr": "0x4064e0",
            "decompiledFuncCode": "int64_t sub_406480(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_406080(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_4064e0",
            "funcStartAddr": "0x4064e0",
            "funcEndAddr": "0x40659c",
            "decompiledFuncCode": "int64_t sub_4064e0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_406080(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_4065a0",
            "funcStartAddr": "0x4065a0",
            "funcEndAddr": "0x406614",
            "decompiledFuncCode": "int64_t sub_4065a0()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_406620",
            "funcStartAddr": "0x406620",
            "funcEndAddr": "0x40663a",
            "decompiledFuncCode": "int64_t sub_406620(uint64_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_406870();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_406680",
            "funcStartAddr": "0x406680",
            "funcEndAddr": "0x4066b6",
            "decompiledFuncCode": "int64_t sub_406680(int64_t arg1, uint64_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_406870();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4067ca",
            "funcStartAddr": "0x4067ca",
            "funcEndAddr": "0x4067d0",
            "decompiledFuncCode": "int64_t sub_4067ca() __noreturn\n{\n    sub_406870();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4067d0",
            "funcStartAddr": "0x4067d0",
            "funcEndAddr": "0x4067e7",
            "decompiledFuncCode": "int64_t sub_4067d0(uint64_t arg1)\n{\n    /* tailcall */\n    return memset(sub_406620(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_4067f0",
            "funcStartAddr": "0x4067f0",
            "funcEndAddr": "0x40681e",
            "decompiledFuncCode": "int64_t sub_4067f0(uint64_t arg1, uint64_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_406870();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_406820",
            "funcStartAddr": "0x406820",
            "funcEndAddr": "0x406848",
            "decompiledFuncCode": "int64_t sub_406820(int64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_406620(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_406850",
            "funcStartAddr": "0x406850",
            "funcEndAddr": "0x406863",
            "decompiledFuncCode": "int64_t sub_406850(char* arg1)\n{\n    /* tailcall */\n    return sub_406820(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_406870",
            "funcStartAddr": "0x406870",
            "funcEndAddr": "0x4068a1",
            "decompiledFuncCode": "int64_t sub_406870() __noreturn\n{\n    error(data_61d250, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4068b0",
            "funcStartAddr": "0x4068b0",
            "funcEndAddr": "0x406ff2",
            "decompiledFuncCode": "uint64_t sub_4068b0(char* arg1, int64_t* arg2, int32_t arg3, int64_t* arg4, \n    char* arg5)\n{\n    if (arg3 > 0x24)\n    {\n        __assert_fail(\"0 <= strtol_base && strtol_base \u2026\", \"lib/xstrtol.c\", 0x60, \"xstrtoimax\");\n        /* no return */\n    }\n    int64_t* rbx = arg2;\n    void var_40;\n    if (arg2 == 0)\n    {\n        rbx = &var_40;\n    }\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char* r15 = *rbx;\n    int64_t rbp_1 = __strtol_internal(arg1, rbx, arg3, 0);\n    int32_t r12_1;\n    uint32_t r13_1;\n    if (r15 != arg1)\n    {\n        int32_t rax_2 = *rax;\n        if (rax_2 != 0)\n        {\n            r12_1 = 4;\n        }\n        if (rax_2 == 0x22)\n        {\n            r12_1 = 1;\n        }\n        if (rax_2 == 0)\n        {\n            r12_1 = 0;\n        }\n        if ((rax_2 == 0 || rax_2 == 0x22))\n        {\n            if (arg5 == 0)\n            {\n            label_40692b:\n                *arg4 = rbp_1;\n            }\n            else\n            {\n                r13_1 = *r15;\n                if (r13_1 == 0)\n                {\n                    goto label_40692b;\n                }\n                if (strchr(arg5, r13_1) != 0)\n                {\n                    goto label_40698d;\n                }\n            label_406a39:\n                r12_1 = (r12_1 | 2);\n                *arg4 = rbp_1;\n            }\n        }\n    }\n    else\n    {\n        if (arg5 != 0)\n        {\n            r13_1 = *r15;\n            r12_1 = 4;\n            if (r13_1 != 0)\n            {\n                rbp_1 = 1;\n                r12_1 = 0;\n                if (strchr(arg5, r13_1) != 0)\n                {\n                label_40698d:\n                    uint64_t rdx_1 = (r13_1 - 0x45);\n                    int32_t rax_6;\n                    char* rax_7;\n                    char rax_8;\n                    int64_t rax_14;\n                    int64_t rcx;\n                    int64_t rcx_1;\n                    int64_t rcx_2;\n                    int64_t rcx_3;\n                    int64_t rcx_4;\n                    int64_t rcx_5;\n                    int64_t rcx_6;\n                    uint64_t rdx_2;\n                    int32_t rsi_2;\n                    int64_t rsi_4;\n                    int64_t rdi_4;\n                    int64_t r9_1;\n                    int64_t r9_2;\n                    int64_t r9_3;\n                    int64_t r9_4;\n                    int64_t r9_5;\n                    int64_t r9_6;\n                    char r13_2;\n                    if (rdx_1 <= 0x2f)\n                    {\n                        char var_49_1 = rdx_1;\n                        if ((!(TEST_BITQ(0x814400308945, rdx_1))))\n                        {\n                            goto label_406996;\n                        }\n                        rax_7 = strchr(arg5, 0x30);\n                        if (rax_7 == 0)\n                        {\n                            goto label_406996;\n                        }\n                        rax_8 = r15[1];\n                        if ((rax_8 != 0x44 && rax_8 != 0x69))\n                        {\n                            rdx_2 = var_49_1;\n                            if (rax_8 != 0x42)\n                            {\n                                switch (rdx_2)\n                                {\n                                    case 1:\n                                    case 3:\n                                    case 4:\n                                    case 5:\n                                    case 7:\n                                    case 9:\n                                    case 0xa:\n                                    case 0xc:\n                                    case 0xd:\n                                    case 0xe:\n                                    case 0x10:\n                                    case 0x11:\n                                    case 0x12:\n                                    case 0x13:\n                                    case 0x16:\n                                    case 0x17:\n                                    case 0x18:\n                                    case 0x19:\n                                    case 0x1a:\n                                    case 0x1b:\n                                    case 0x1c:\n                                    case 0x1f:\n                                    case 0x20:\n                                    case 0x21:\n                                    case 0x23:\n                                    case 0x24:\n                                    case 0x25:\n                                    case 0x27:\n                                    case 0x29:\n                                    case 0x2a:\n                                    case 0x2b:\n                                    case 0x2c:\n                                    case 0x2d:\n                                    case 0x2e:\n                                    {\n                                        goto label_406a39;\n                                    }\n                                    case 6:\n                                    case 0x26:\n                                    {\n                                        rcx = 0x400;\n                                        rax_14 = -0x20000000000000;\n                                        break;\n                                    }\n                                    case 8:\n                                    case 0x28:\n                                    {\n                                        rcx = 0x400;\n                                        rdi_4 = -0x20000000000000;\n                                        break;\n                                    }\n                                    case 0x1d:\n                                    {\n                                        /* nop */\n                                        break;\n                                    }\n                                }\n                                switch (rdx_2)\n                                {\n                                    case 0xb:\n                                    {\n                                        rsi_4 = 1;\n                                        rcx_1 = 0x400;\n                                        r9_1 = -0x20000000000000;\n                                        goto label_406bb8;\n                                    }\n                                    case 0xf:\n                                    case 0x2f:\n                                    {\n                                        rsi_4 = 1;\n                                        rcx_2 = 0x400;\n                                        r9_2 = -0x20000000000000;\n                                        goto label_406c20;\n                                    }\n                                    case 0x14:\n                                    {\n                                        rsi_4 = 1;\n                                        rcx_5 = 0x400;\n                                        r9_5 = -0x20000000000000;\n                                        goto label_406d58;\n                                    }\n                                    case 0x15:\n                                    {\n                                        rsi_4 = 1;\n                                        rcx_6 = 0x400;\n                                        r9_6 = -0x20000000000000;\n                                        goto label_406dc0;\n                                    }\n                                }\n                                if ((rdx_2 == 2 || rdx_2 == 0x22))\n                                {\n                                    rsi_4 = 1;\n                                    rcx_4 = 0x400;\n                                    r9_4 = -0x20000000000000;\n                                    goto label_406cf0;\n                                }\n                                if (rdx_2 == 0)\n                                {\n                                    rsi_4 = 1;\n                                    rcx_3 = 0x400;\n                                    r9_3 = -0x20000000000000;\n                                    goto label_406c88;\n                                }\n                                if (rdx_2 == 0x1e)\n                                {\n                                    rsi_4 = 1;\n                                    goto label_406a78;\n                                }\n                            }\n                        }\n                        if (rax_8 == 0x42)\n                        {\n                            goto label_406fa8;\n                        }\n                        if (rax_8 == 0x69)\n                        {\n                            rax_6 = 0x400;\n                            int32_t rsi_6;\n                            rsi_6 = r15[2] == 0x42;\n                            rsi_2 = ((rsi_6 + rsi_6) + 1);\n                            goto label_4069a0;\n                        }\n                        if (rax_8 == 0x44)\n                        {\n                        label_406fa8:\n                            rsi_2 = 2;\n                            rax_6 = 0x3e8;\n                            goto label_4069a0;\n                        }\n                    }\n                    else\n                    {\n                    label_406996:\n                        rsi_2 = 1;\n                        rax_6 = 0x400;\n                    label_4069a0:\n                        r13_2 = (r13_1 - 0x42);\n                        if ((r13_2 == 9 || r13_2 == 0x29))\n                        {\n                            rcx = rax_6;\n                            rsi_4 = rsi_2;\n                            int64_t rax_13;\n                            int64_t rdx_3;\n                            rdx_3 = HIGHD(-0x8000000000000000);\n                            rax_13 = LOWD(-0x8000000000000000);\n                            rax_14 = (COMBINE(rdx_3, rax_13) / rcx);\n                        }\n                    }\n                    int64_t rax_16;\n                    if (((rdx_1 > 0x2f && (r13_2 == 9 || r13_2 == 0x29)) || ((((((rdx_1 <= 0x2f && (TEST_BITQ(0x814400308945, rdx_1))) && rax_7 != 0) && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && (rdx_2 == 6 || rdx_2 == 0x26))))\n                    {\n                        if (rbp_1 < rax_14)\n                        {\n                            goto label_406b48;\n                        }\n                        int64_t rax_15;\n                        int64_t rdx_5;\n                        rdx_5 = HIGHD(0x7fffffffffffffff);\n                        rax_15 = LOWD(0x7fffffffffffffff);\n                        rax_16 = (COMBINE(rdx_5, rax_15) / rcx);\n                    }\n                    if ((rdx_1 > 0x2f && (r13_2 == 0xb || r13_2 == 0x2b)))\n                    {\n                        rcx = rax_6;\n                        rsi_4 = rsi_2;\n                        int64_t rax_17;\n                        int64_t rdx_7;\n                        rdx_7 = HIGHD(-0x8000000000000000);\n                        rax_17 = LOWD(-0x8000000000000000);\n                        rdi_4 = (COMBINE(rdx_7, rax_17) / rcx);\n                    }\n                    if (((rdx_1 > 0x2f && (r13_2 == 0xb || r13_2 == 0x2b)) || ((((((rdx_1 <= 0x2f && (TEST_BITQ(0x814400308945, rdx_1))) && rax_7 != 0) && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && (rdx_2 == 8 || rdx_2 == 0x28))))\n                    {\n                        if (rbp_1 < rdi_4)\n                        {\n                            goto label_406b48;\n                        }\n                        int64_t rax_19;\n                        int64_t rdx_9;\n                        rdx_9 = HIGHD(0x7fffffffffffffff);\n                        rax_19 = LOWD(0x7fffffffffffffff);\n                        rax_16 = (COMBINE(rdx_9, rax_19) / rcx);\n                        if (rbp_1 > rax_16)\n                        {\n                            goto label_406f00;\n                        }\n                        rbp_1 = (rbp_1 * rcx);\n                        if (rbp_1 < rdi_4)\n                        {\n                            goto label_406b48;\n                        }\n                    }\n                    if (((((rdx_1 > 0x2f && (r13_2 == 9 || r13_2 == 0x29)) || ((((((rdx_1 <= 0x2f && (TEST_BITQ(0x814400308945, rdx_1))) && rax_7 != 0) && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && (rdx_2 == 6 || rdx_2 == 0x26))) && rbp_1 >= rax_14) || (((rdx_1 > 0x2f && (r13_2 == 0xb || r13_2 == 0x2b)) || ((((((rdx_1 <= 0x2f && (TEST_BITQ(0x814400308945, rdx_1))) && rax_7 != 0) && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && (rdx_2 == 8 || rdx_2 == 0x28))) && rbp_1 >= rdi_4)))\n                    {\n                        if (rax_16 < rbp_1)\n                        {\n                            goto label_406f00;\n                        }\n                        rbp_1 = (rbp_1 * rcx);\n                        goto label_406a78;\n                    }\n                    if ((rdx_1 > 0x2f && r13_2 == 0x20))\n                    {\n                        rsi_4 = rsi_2;\n                    }\n                    if (((rdx_1 > 0x2f && r13_2 == 0x20) || ((((((rdx_1 <= 0x2f && (TEST_BITQ(0x814400308945, rdx_1))) && rax_7 != 0) && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && rdx_2 == 0x1d)))\n                    {\n                        if (rbp_1 < -0x40000000000000)\n                        {\n                            goto label_406b48;\n                        }\n                        if (rbp_1 > 0x3fffffffffffff)\n                        {\n                            goto label_406f00;\n                        }\n                        rbp_1 = (rbp_1 << 9);\n                        goto label_406a78;\n                    }\n                    if (rdx_1 > 0x2f)\n                    {\n                        switch (r13_2)\n                        {\n                            case 0:\n                            {\n                                rsi_4 = rsi_2;\n                                if (rbp_1 < -0x20000000000000)\n                                {\n                                label_406b48:\n                                    rbp_1 = -0x8000000000000000;\n                                    r12_1 = 1;\n                                    goto label_406a78;\n                                }\n                                if (rbp_1 <= 0x1fffffffffffff)\n                                {\n                                    rbp_1 = (rbp_1 << 0xa);\n                                    goto label_406a78;\n                                }\n                            label_406f00:\n                                rbp_1 = 0x7fffffffffffffff;\n                                r12_1 = 1;\n                                goto label_406a78;\n                            }\n                            case 1:\n                            case 2:\n                            case 4:\n                            case 6:\n                            case 7:\n                            case 8:\n                            case 0xa:\n                            case 0xc:\n                            case 0xd:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x22:\n                            case 0x23:\n                            case 0x24:\n                            case 0x26:\n                            case 0x27:\n                            case 0x28:\n                            case 0x2a:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x33:\n                            case 0x34:\n                            {\n                                goto label_406a39;\n                            }\n                            case 0x21:\n                            {\n                                rsi_4 = rsi_2;\n                            label_406a78:\n                                void* rsi_5 = &r15[rsi_4];\n                                int32_t rax_12 = (r12_1 | 2);\n                                *rbx = rsi_5;\n                                if (*rsi_5 != 0)\n                                {\n                                    r12_1 = rax_12;\n                                }\n                                goto label_40692b;\n                            }\n                            case 0x35:\n                            {\n                                rsi_4 = rsi_2;\n                                if (rbp_1 < -0x4000000000000000)\n                                {\n                                    goto label_406b48;\n                                }\n                                if (rbp_1 > 0x3fffffffffffffff)\n                                {\n                                    goto label_406f00;\n                                }\n                                rbp_1 = (rbp_1 + rbp_1);\n                                goto label_406a78;\n                            }\n                        }\n                        int32_t r10_1;\n                        switch (r13_2)\n                        {\n                            case 3:\n                            {\n                                rcx_3 = rax_6;\n                                rsi_4 = rsi_2;\n                                int64_t rax_28;\n                                int64_t rdx_19;\n                                rdx_19 = HIGHD(-0x8000000000000000);\n                                rax_28 = LOWD(-0x8000000000000000);\n                                r9_3 = (COMBINE(rdx_19, rax_28) / rcx_3);\n                            label_406c88:\n                                int32_t rdi_7 = 6;\n                                r10_1 = 0;\n                                do\n                                {\n                                    if (rbp_1 < r9_3)\n                                    {\n                                        rbp_1 = -0x8000000000000000;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        int64_t rax_30;\n                                        int64_t rdx_21;\n                                        rdx_21 = HIGHD(0x7fffffffffffffff);\n                                        rax_30 = LOWD(0x7fffffffffffffff);\n                                        if ((COMBINE(rdx_21, rax_30) / rcx_3) < rbp_1)\n                                        {\n                                            rbp_1 = 0x7fffffffffffffff;\n                                            r10_1 = 1;\n                                        }\n                                        else\n                                        {\n                                            rbp_1 = (rbp_1 * rcx_3);\n                                        }\n                                    }\n                                    rdi_7 = (rdi_7 - 1);\n                                } while (rdi_7 != 1);\n                                goto label_406ef0;\n                            }\n                            case 5:\n                            case 0x25:\n                            {\n                                rcx_4 = rax_6;\n                                rsi_4 = rsi_2;\n                                int64_t rax_32;\n                                int64_t rdx_23;\n                                rdx_23 = HIGHD(-0x8000000000000000);\n                                rax_32 = LOWD(-0x8000000000000000);\n                                r9_4 = (COMBINE(rdx_23, rax_32) / rcx_4);\n                            label_406cf0:\n                                int32_t rdi_8 = 3;\n                                r10_1 = 0;\n                                do\n                                {\n                                    if (rbp_1 < r9_4)\n                                    {\n                                        rbp_1 = -0x8000000000000000;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        int64_t rax_34;\n                                        int64_t rdx_25;\n                                        rdx_25 = HIGHD(0x7fffffffffffffff);\n                                        rax_34 = LOWD(0x7fffffffffffffff);\n                                        if ((COMBINE(rdx_25, rax_34) / rcx_4) < rbp_1)\n                                        {\n                                            rbp_1 = 0x7fffffffffffffff;\n                                            r10_1 = 1;\n                                        }\n                                        else\n                                        {\n                                            rbp_1 = (rbp_1 * rcx_4);\n                                        }\n                                    }\n                                    rdi_8 = (rdi_8 - 1);\n                                } while (rdi_8 != 1);\n                                goto label_406ef0;\n                            }\n                            case 0xe:\n                            {\n                                rcx_1 = rax_6;\n                                rsi_4 = rsi_2;\n                                int64_t rax_20;\n                                int64_t rdx_11;\n                                rdx_11 = HIGHD(-0x8000000000000000);\n                                rax_20 = LOWD(-0x8000000000000000);\n                                r9_1 = (COMBINE(rdx_11, rax_20) / rcx_1);\n                            label_406bb8:\n                                int32_t rdi_5 = 5;\n                                r10_1 = 0;\n                                do\n                                {\n                                    if (r9_1 > rbp_1)\n                                    {\n                                        rbp_1 = -0x8000000000000000;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        int64_t rax_22;\n                                        int64_t rdx_13;\n                                        rdx_13 = HIGHD(0x7fffffffffffffff);\n                                        rax_22 = LOWD(0x7fffffffffffffff);\n                                        if ((COMBINE(rdx_13, rax_22) / rcx_1) < rbp_1)\n                                        {\n                                            rbp_1 = 0x7fffffffffffffff;\n                                            r10_1 = 1;\n                                        }\n                                        else\n                                        {\n                                            rbp_1 = (rbp_1 * rcx_1);\n                                        }\n                                    }\n                                    rdi_5 = (rdi_5 - 1);\n                                } while (rdi_5 != 1);\n                            label_406ef0:\n                                r12_1 = (r12_1 | r10_1);\n                                goto label_406a78;\n                            }\n                            case 0x12:\n                            case 0x32:\n                            {\n                                rcx_2 = rax_6;\n                                rsi_4 = rsi_2;\n                                int64_t rax_24;\n                                int64_t rdx_15;\n                                rdx_15 = HIGHD(-0x8000000000000000);\n                                rax_24 = LOWD(-0x8000000000000000);\n                                r9_2 = (COMBINE(rdx_15, rax_24) / rcx_2);\n                            label_406c20:\n                                int32_t rdi_6 = 4;\n                                r10_1 = 0;\n                                do\n                                {\n                                    if (r9_2 > rbp_1)\n                                    {\n                                        rbp_1 = -0x8000000000000000;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        int64_t rax_26;\n                                        int64_t rdx_17;\n                                        rdx_17 = HIGHD(0x7fffffffffffffff);\n                                        rax_26 = LOWD(0x7fffffffffffffff);\n                                        if ((COMBINE(rdx_17, rax_26) / rcx_2) < rbp_1)\n                                        {\n                                            rbp_1 = 0x7fffffffffffffff;\n                                            r10_1 = 1;\n                                        }\n                                        else\n                                        {\n                                            rbp_1 = (rbp_1 * rcx_2);\n                                        }\n                                    }\n                                    rdi_6 = (rdi_6 - 1);\n                                } while (rdi_6 != 1);\n                                goto label_406ef0;\n                            }\n                        }\n                        if (r13_2 == 0x17)\n                        {\n                            rcx_5 = rax_6;\n                            rsi_4 = rsi_2;\n                            int64_t rax_36;\n                            int64_t rdx_27;\n                            rdx_27 = HIGHD(-0x8000000000000000);\n                            rax_36 = LOWD(-0x8000000000000000);\n                            r9_5 = (COMBINE(rdx_27, rax_36) / rcx_5);\n                        label_406d58:\n                            int32_t rdi_9 = 8;\n                            r10_1 = 0;\n                            do\n                            {\n                                if (r9_5 > rbp_1)\n                                {\n                                    rbp_1 = -0x8000000000000000;\n                                    r10_1 = 1;\n                                }\n                                else\n                                {\n                                    int64_t rax_38;\n                                    int64_t rdx_29;\n                                    rdx_29 = HIGHD(0x7fffffffffffffff);\n                                    rax_38 = LOWD(0x7fffffffffffffff);\n                                    if ((COMBINE(rdx_29, rax_38) / rcx_5) < rbp_1)\n                                    {\n                                        rbp_1 = 0x7fffffffffffffff;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        rbp_1 = (rbp_1 * rcx_5);\n                                    }\n                                }\n                                rdi_9 = (rdi_9 - 1);\n                            } while (rdi_9 != 1);\n                            goto label_406ef0;\n                        }\n                        if (r13_2 == 0x18)\n                        {\n                            rcx_6 = rax_6;\n                            rsi_4 = rsi_2;\n                            int64_t rax_40;\n                            int64_t rdx_31;\n                            rdx_31 = HIGHD(-0x8000000000000000);\n                            rax_40 = LOWD(-0x8000000000000000);\n                            r9_6 = (COMBINE(rdx_31, rax_40) / rcx_6);\n                        label_406dc0:\n                            int32_t rdi_10 = 7;\n                            r10_1 = 0;\n                            do\n                            {\n                                if (r9_6 > rbp_1)\n                                {\n                                    rbp_1 = -0x8000000000000000;\n                                    r10_1 = 1;\n                                }\n                                else\n                                {\n                                    int64_t rax_42;\n                                    int64_t rdx_33;\n                                    rdx_33 = HIGHD(0x7fffffffffffffff);\n                                    rax_42 = LOWD(0x7fffffffffffffff);\n                                    if ((COMBINE(rdx_33, rax_42) / rcx_6) < rbp_1)\n                                    {\n                                        rbp_1 = 0x7fffffffffffffff;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        rbp_1 = (rbp_1 * rcx_6);\n                                    }\n                                }\n                                rdi_10 = (rdi_10 - 1);\n                            } while (rdi_10 != 1);\n                            goto label_406ef0;\n                        }\n                        if (r13_2 > 0x35)\n                        {\n                            goto label_406a39;\n                        }\n                    }\n                }\n            }\n        }\n        if ((arg5 == 0 || (arg5 != 0 && r13_1 != 0)))\n        {\n            r12_1 = 4;\n        }\n    }\n    return r12_1;\n}\n\n"
        },
        {
            "funcName": "sub_407000",
            "funcStartAddr": "0x407000",
            "funcEndAddr": "0x4070df",
            "decompiledFuncCode": "uint64_t sub_407000(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_4070e0",
            "funcStartAddr": "0x4070e0",
            "funcEndAddr": "0x4076fc",
            "decompiledFuncCode": "uint64_t sub_4070e0(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_407310;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_407236;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_407236;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_407236:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_407310:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_40733e;\n                }\n                *arg5 = r12;\n            label_40733e:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_40735c;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_40735c:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_40735c;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_4072ce;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_4072ce:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_407700",
            "funcStartAddr": "0x407700",
            "funcEndAddr": "0x407cc6",
            "decompiledFuncCode": "uint64_t sub_407700(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_40793c;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_4077c8;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_4077c8:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_407000(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_41664b;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_407000(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_40793c;\n                }\n                *arg7 = rdx_2;\n            label_40793c:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_407a40;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_41664b;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_407ab0;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_407a40;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_407a40;\n                            }\n                            goto label_407a01;\n                        }\n                    label_407a01:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_4070e0(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_41664c);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_407a40:\n                            rdx = &r14_1[1];\n                        label_407881:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_407a7e;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_407a7e:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_41875d;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_407ab0:\n                                        r14_2 = sub_4070e0(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_407b6d;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_407b6d:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_40793c;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_4077c8;\n        }\n        goto label_407881;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_407d30",
            "funcStartAddr": "0x407d30",
            "funcEndAddr": "0x407d48",
            "decompiledFuncCode": "uint64_t sub_407d30(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_407dd0",
            "funcStartAddr": "0x407dd0",
            "funcEndAddr": "0x407e4a",
            "decompiledFuncCode": "uint64_t sub_407dd0(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_418741[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_407dfa;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_407dfa:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_415d00() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_407e50",
            "funcStartAddr": "0x407e50",
            "funcEndAddr": "0x407f54",
            "decompiledFuncCode": "char* sub_407e50(char* arg1, int32_t arg2, int64_t arg3)\n{\n    char r8 = arg2;\n    if (arg3 != 0)\n    {\n        if ((arg1 & 7) != 0)\n        {\n            if (arg2 == *arg1)\n            {\n            label_407f50:\n                return arg1;\n            }\n            do\n            {\n                arg1 = &arg1[1];\n                int64_t temp0_1 = arg3;\n                arg3 = (arg3 - 1);\n                if (temp0_1 == 1)\n                {\n                    return 0;\n                }\n                if ((arg1 & 7) == 0)\n                {\n                    break;\n                }\n            } while (*arg1 != r8);\n            if ((arg1 & 7) != 0)\n            {\n                goto label_407f50;\n            }\n        }\n        int64_t r9_5 = ((arg2 << 8) | arg2);\n        int64_t r9_6 = (r9_5 | (r9_5 << 0x10));\n        int64_t r9_7 = (r9_6 | (r9_6 << 0x20));\n        int64_t rax_8;\n        if (arg3 > 7)\n        {\n            rax_8 = (*arg1 ^ r9_7);\n            if ((((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0)\n            {\n                int64_t rax_12;\n                do\n                {\n                    arg3 = (arg3 - 8);\n                    arg1 = &arg1[8];\n                    if (arg3 <= 7)\n                    {\n                        break;\n                    }\n                    rax_12 = (*arg1 ^ r9_7);\n                } while ((((!rax_12) & (rax_12 - 0x101010101010101)) & 0x8080808080808080) == 0);\n            }\n        }\n        if ((((arg3 <= 7 || (arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) != 0)) || (((arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0) && arg3 <= 7) && arg3 != 0)) || ((arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0) && arg3 > 7)))\n        {\n            if (arg2 == *arg1)\n            {\n                goto label_407f50;\n            }\n            char* rcx_3 = &arg1[1];\n            void* rdi = &arg1[arg3];\n            while (true)\n            {\n                char* rax_15 = rcx_3;\n                if (rcx_3 == rdi)\n                {\n                    return 0;\n                }\n                rcx_3 = &rcx_3[1];\n                if (rcx_3[-1] == r8)\n                {\n                    return rax_15;\n                }\n            }\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_407f60",
            "funcStartAddr": "0x407f60",
            "funcEndAddr": "0x407fa3",
            "decompiledFuncCode": "int64_t sub_407f60(void* arg1, void* arg2)\n{\n    int64_t rax;\n    rax = arg1 == 0;\n    rax = (rax | arg2 == 0);\n    if (rax != 0)\n    {\n        return 0;\n    }\n    int64_t rdx_1 = *(arg1 + 8);\n    if (rdx_1 == *(arg2 + 8))\n    {\n        do\n        {\n            int64_t temp0_1 = rdx_1;\n            rdx_1 = (rdx_1 - 1);\n            if ((temp0_1 - 1) < 0)\n            {\n                return 1;\n            }\n        } while (*(*(arg1 + 0x10) + (rdx_1 << 3)) == *(*(arg2 + 0x10) + (rdx_1 << 3)));\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_407fb0",
            "funcStartAddr": "0x407fb0",
            "funcEndAddr": "0x40801b",
            "decompiledFuncCode": "int64_t sub_407fb0(int64_t* arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = arg1;\n    while (true)\n    {\n        int64_t* rax_1 = rbx[1];\n        if (rax_1 == 0)\n        {\n            rax_1 = rbx[2];\n            if (rax_1 == 0)\n            {\n                int64_t rax_2 = arg2(arg3, rbx);\n                if (rax_2 != 0)\n                {\n                    return rax_2;\n                }\n                while (true)\n                {\n                    int64_t* rdx = *rbx;\n                    if (rdx == 0)\n                    {\n                        return rax_2;\n                    }\n                    rax_1 = rdx[2];\n                    bool cond:0_1 = rax_1 == rbx;\n                    rbx = rdx;\n                    if ((rax_1 == 0 | cond:0_1) == 0)\n                    {\n                        break;\n                    }\n                    rax_2 = arg2(arg3, rbx, rdx);\n                    if (rax_2 != 0)\n                    {\n                        return rax_2;\n                    }\n                }\n            }\n        }\n        rbx = rax_1;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_408020",
            "funcStartAddr": "0x408020",
            "funcEndAddr": "0x40814f",
            "decompiledFuncCode": "int64_t sub_408020(char* arg1, void* arg2, int32_t arg3)\n{\n    int64_t rax_12 = *(arg2 + 0x48);\n    if (*(arg2 + 0x68) <= rax_12)\n    {\n        arg1[8] = 2;\n        return 0;\n    }\n    char* r8 = *(arg2 + 8);\n    bool cond:0 = *(arg2 + 0x90) <= 1;\n    char rcx = r8[rax_12];\n    *arg1 = rcx;\n    if (((cond:0 || ((!cond:0) && rax_12 == *(arg2 + 0x30))) || (((!cond:0) && rax_12 != *(arg2 + 0x30)) && *(*(arg2 + 0x10) + (rax_12 << 2)) != 0xffffffff)))\n    {\n        if (rcx != 0x5c)\n        {\n            if (rcx == 0x5b)\n            {\n                if ((rax_12 + 1) < *(arg2 + 0x58))\n                {\n                    char rax_4 = r8[(rax_12 + 1)];\n                    *arg1 = rax_4;\n                    if (rax_4 != 0x3a)\n                    {\n                        if (rax_4 == 0x3d)\n                        {\n                            arg1[8] = 0x1c;\n                            return 2;\n                        }\n                        if (rax_4 == 0x2e)\n                        {\n                            arg1[8] = 0x1a;\n                            return 2;\n                        }\n                    }\n                    else if ((arg3 & 4) != 0)\n                    {\n                        arg1[8] = 0x1e;\n                        return 2;\n                    }\n                }\n                arg1[8] = 1;\n                *arg1 = 0x5b;\n                return 1;\n            }\n            if (rcx == 0x5d)\n            {\n                arg1[8] = 0x15;\n                return 1;\n            }\n            if (rcx == 0x5e)\n            {\n                arg1[8] = 0x19;\n                return 1;\n            }\n            if (rcx == 0x2d)\n            {\n                arg1[8] = 0x16;\n                return 1;\n            }\n        }\n        else if ((arg3 & 1) != 0)\n        {\n            int64_t rdx_1 = (rax_12 + 1);\n            if (rdx_1 < *(arg2 + 0x58))\n            {\n                *(arg2 + 0x48) = rdx_1;\n                char rax_7 = r8[(rax_12 + 1)];\n                arg1[8] = 1;\n                *arg1 = rax_7;\n                return 1;\n            }\n        }\n    }\n    arg1[8] = 1;\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_408150",
            "funcStartAddr": "0x408150",
            "funcEndAddr": "0x40816d",
            "decompiledFuncCode": "int64_t sub_408150(int64_t arg1, void* arg2)\n{\n    if ((*(arg2 + 0x30) == 0x11 && arg1 == *(arg2 + 0x28)))\n    {\n        *(arg2 + 0x32) = (*(arg2 + 0x32) | 8);\n        return 0;\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_408170",
            "funcStartAddr": "0x408170",
            "funcEndAddr": "0x40837f",
            "decompiledFuncCode": "uint64_t sub_408170(void* arg1, int32_t arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5)\n{\n    void* r9 = *(arg1 + 0x98);\n    void* r13 = (*(r9 + 0x30) + (arg4 * 0x18));\n    if (*(r13 + 8) > 0)\n    {\n        int64_t r14_1 = arg3;\n        int64_t rbx_1 = 0;\n        int64_t rax_2 = (arg5 * 0x28);\n        int64_t rax_3 = (1 << arg3);\n        int16_t rax_4 = (!rax_3);\n        int32_t rax_6 = (arg2 & 2);\n        int32_t rsi_1 = (arg2 & 1);\n        do\n        {\n            int64_t rbp_1 = *(*(r13 + 0x10) + (rbx_1 << 3));\n            int64_t* rax_10 = ((rbp_1 << 4) + *r9);\n            char rdx_1 = rax_10[1];\n            if (rdx_1 == 8)\n            {\n                if ((rsi_1 != 0 && *rax_10 == r14_1))\n                {\n                    return 0xffffffff;\n                }\n            }\n            else if (rdx_1 == 9)\n            {\n                if ((rax_6 != 0 && *rax_10 == r14_1))\n                {\n                    return 0;\n                }\n            }\n            else if ((rdx_1 == 4 && arg5 != -1))\n            {\n                void* r12_2 = (rax_2 + *(arg1 + 0xd8));\n                int64_t rax_15 = (rbp_1 * 0x18);\n                do\n                {\n                    if ((*r12_2 == rbp_1 && (r14_1 > 0x3f || (r14_1 <= 0x3f && (rax_3 & *(r12_2 + 0x22)) != 0))))\n                    {\n                        int64_t rcx_2 = **((*(r9 + 0x28) + rax_15) + 0x10);\n                        if (arg4 == rcx_2)\n                        {\n                            return (-(arg2 & 1));\n                        }\n                        int32_t rax_19 = sub_408170(arg1, arg2, r14_1, rcx_2, arg5);\n                        if (rax_19 == 0xffffffff)\n                        {\n                            return 0xffffffff;\n                        }\n                        if ((rax_19 == 0 && rax_6 != 0))\n                        {\n                            return 0;\n                        }\n                        if (r14_1 <= 0x3f)\n                        {\n                            *(r12_2 + 0x22) = (*(r12_2 + 0x22) & rax_4);\n                        }\n                    }\n                    r12_2 = (r12_2 + 0x28);\n                } while (*(r12_2 - 8) != 0);\n                rbx_1 = (rbx_1 + 1);\n                if (*(r13 + 8) <= rbx_1)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx_1 = (rbx_1 + 1);\n        } while (*(r13 + 8) > rbx_1);\n    }\n    return (arg2 >> 1);\n}\n\n"
        },
        {
            "funcName": "sub_408380",
            "funcStartAddr": "0x408380",
            "funcEndAddr": "0x4083e6",
            "decompiledFuncCode": "int64_t sub_408380(void* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5, int64_t arg6)\n{\n    void* rax = (*(arg1 + 0xd8) + (arg2 * 0x28));\n    int64_t r10 = *(rax + 0x10);\n    if (r10 > arg5)\n    {\n        return 0xffffffff;\n    }\n    int64_t rax_1 = *(rax + 0x18);\n    if (rax_1 < arg5)\n    {\n        return 1;\n    }\n    int32_t rsi_1;\n    rsi_1 = r10 == arg5;\n    if (rax_1 == arg5)\n    {\n        rsi_1 = (rsi_1 | 2);\n    }\n    else if (r10 != arg5)\n    {\n        return 0;\n    }\n    /* tailcall */\n    return sub_408170(arg1, rsi_1, arg3, arg4, arg6);\n}\n\n"
        },
        {
            "funcName": "sub_4083f0",
            "funcStartAddr": "0x4083f0",
            "funcEndAddr": "0x40848c",
            "decompiledFuncCode": "int64_t sub_4083f0(void* arg1, uint64_t arg2)\n{\n    if (*(arg1 + 0x90) > 1)\n    {\n        if (arg2 > 0x1fffffffffffffff)\n        {\n        label_40848b:\n            return 0xc;\n        }\n        int64_t rax_1 = realloc(*(arg1 + 0x10), (arg2 << 2));\n        if (rax_1 == 0)\n        {\n            goto label_40848b;\n        }\n        int64_t rdi_1 = *(arg1 + 0x18);\n        *(arg1 + 0x10) = rax_1;\n        if (rdi_1 != 0)\n        {\n            int64_t rax_2 = realloc(rdi_1, (arg2 << 3));\n            if (rax_2 == 0)\n            {\n                goto label_40848b;\n            }\n            *(arg1 + 0x18) = rax_2;\n        }\n    }\n    if (*(arg1 + 0x8b) == 0)\n    {\n        goto label_408456;\n    }\n    int64_t rax_4 = realloc(*(arg1 + 8), arg2);\n    if (rax_4 == 0)\n    {\n        goto label_40848b;\n    }\n    *(arg1 + 8) = rax_4;\nlabel_408456:\n    *(arg1 + 0x40) = arg2;\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_408490",
            "funcStartAddr": "0x408490",
            "funcEndAddr": "0x4084f4",
            "decompiledFuncCode": "int64_t sub_408490(int64_t* arg1, int64_t arg2)\n{\n    int64_t rsi = arg1[1];\n    int64_t rax = arg1[2];\n    int64_t rax_1;\n    if (*arg1 == rsi)\n    {\n        *arg1 = ((rsi + 1) + (rsi + 1));\n        rax = realloc(rax, ((rsi + 1) << 4));\n        if (rax == 0)\n        {\n            rax_1 = 0;\n        }\n        else\n        {\n            arg1[2] = rax;\n            rsi = arg1[1];\n        }\n    }\n    if (((*arg1 == rsi && rax != 0) || *arg1 != rsi))\n    {\n        arg1[1] = (rsi + 1);\n        *(rax + (rsi << 3)) = arg2;\n        rax_1 = 1;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_408500",
            "funcStartAddr": "0x408500",
            "funcEndAddr": "0x40862c",
            "decompiledFuncCode": "int64_t* sub_408500(int64_t* arg1, int64_t arg2)\n{\n    int64_t rdx = *arg1;\n    int64_t* rax_1;\n    if (rdx == 0)\n    {\n        *arg1 = 1;\n        arg1[1] = 1;\n        rax_1 = malloc(8);\n        arg1[2] = rax_1;\n        if (rax_1 != 0)\n        {\n            *rax_1 = arg2;\n            return 1;\n        }\n        arg1[1] = 0;\n        *arg1 = 0;\n    }\n    else\n    {\n        int64_t rsi = arg1[1];\n        int64_t* rax = arg1[2];\n        if (rsi == 0)\n        {\n            *rax = arg2;\n            rax_1 = 1;\n            arg1[1] = (arg1[1] + 1);\n        }\n        else\n        {\n            if (rdx == rsi)\n            {\n                *arg1 = (rsi + rsi);\n                rax = realloc(rax, (rsi << 4));\n                if (rax == 0)\n                {\n                    rax_1 = nullptr;\n                }\n                else\n                {\n                    arg1[2] = rax;\n                    rsi = arg1[1];\n                }\n            }\n            if (((rdx == rsi && rax != 0) || rdx != rsi))\n            {\n                void* rdx_2 = (rsi << 3);\n                if (*rax <= arg2)\n                {\n                    int64_t rcx_2 = *((rax + rdx_2) - 8);\n                    if (arg2 < rcx_2)\n                    {\n                        do\n                        {\n                            *(rax + rdx_2) = rcx_2;\n                            rdx_2 = (rdx_2 - 8);\n                            rcx_2 = *((rax + rdx_2) - 8);\n                        } while (rcx_2 > arg2);\n                    }\n                }\n                else if (rsi > 0)\n                {\n                    void* rdx_1 = (rdx_2 + rax);\n                    do\n                    {\n                        int64_t rcx_1 = *(rdx_1 - 8);\n                        rdx_1 = (rdx_1 - 8);\n                        *(rdx_1 + 8) = rcx_1;\n                    } while (rdx_1 != rax);\n                    rdx_2 = nullptr;\n                }\n                *(rax + rdx_2) = arg2;\n                rax_1 = 1;\n                arg1[1] = (arg1[1] + 1);\n            }\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_408630",
            "funcStartAddr": "0x408630",
            "funcEndAddr": "0x40872b",
            "decompiledFuncCode": "int64_t sub_408630(void* arg1, int64_t* arg2, int64_t arg3)\n{\n    void* r12 = &arg2[4];\n    int64_t r15 = arg2[2];\n    *arg2 = arg3;\n    arg2[5] = 0;\n    arg2[4] = r15;\n    int64_t rax = malloc((r15 << 3));\n    arg2[6] = rax;\n    if (rax != 0)\n    {\n        int64_t rbx_1 = 0;\n        if (r15 > 0)\n        {\n            do\n            {\n                int64_t rsi = *(arg2[3] + (rbx_1 << 3));\n                if (((*(((rsi << 4) + *arg1) + 8) & 8) == 0 && sub_408490(r12, rsi) == 0))\n                {\n                    return 0xc;\n                }\n                rbx_1 = (rbx_1 + 1);\n            } while (arg2[2] > rbx_1);\n        }\n        int64_t* rbx_2 = (*(arg1 + 0x40) + ((arg3 & *(arg1 + 0x88)) * 0x18));\n        int64_t rdx_1 = *rbx_2;\n        int64_t rax_8 = rbx_2[2];\n        int64_t rsi_1 = (rdx_1 + 1);\n        if (rbx_2[1] <= rdx_1)\n        {\n            int64_t r12_1 = (rsi_1 + rsi_1);\n            rax_8 = realloc(rax_8, (rsi_1 << 4));\n            if (rax_8 != 0)\n            {\n                rdx_1 = *rbx_2;\n                rbx_2[2] = rax_8;\n                rbx_2[1] = r12_1;\n                rsi_1 = (rdx_1 + 1);\n            }\n        }\n        if (((rbx_2[1] <= rdx_1 && rax_8 != 0) || rbx_2[1] > rdx_1))\n        {\n            *rbx_2 = rsi_1;\n            *(rax_8 + (rdx_1 << 3)) = arg2;\n            return 0;\n        }\n    }\n    return 0xc;\n}\n\n"
        },
        {
            "funcName": "sub_408730",
            "funcStartAddr": "0x408730",
            "funcEndAddr": "0x408756",
            "decompiledFuncCode": "uint64_t sub_408730(char arg1, int64_t arg2)\n{\n    uint32_t rbx = arg1;\n    uint64_t rax = btowc(rbx);\n    if ((rax == 0xffffffff && arg2 == 0))\n    {\n        rax = rbx;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_408760",
            "funcStartAddr": "0x408760",
            "funcEndAddr": "0x4087e0",
            "decompiledFuncCode": "void sub_408760(int64_t* arg1)\n{\n    int64_t r12 = arg1[0xb];\n    if (arg1[8] <= r12)\n    {\n        r12 = arg1[8];\n    }\n    int64_t rbx = arg1[6];\n    if (r12 <= rbx)\n    {\n        arg1[6] = rbx;\n        arg1[7] = rbx;\n        return;\n    }\n    int32_t** rax = __ctype_toupper_loc();\n    do\n    {\n        int64_t rcx_1 = arg1[0xf];\n        uint64_t rdx_4 = *((*arg1 + rbx) + arg1[5]);\n        if (rcx_1 != 0)\n        {\n            rdx_4 = *(rcx_1 + rdx_4);\n        }\n        arg1[1][rbx] = *rax[rdx_4];\n        rbx = (rbx + 1);\n    } while (r12 != rbx);\n    arg1[6] = r12;\n    arg1[7] = r12;\n}\n\n"
        },
        {
            "funcName": "sub_4087e0",
            "funcStartAddr": "0x4087e0",
            "funcEndAddr": "0x408986",
            "decompiledFuncCode": "void sub_4087e0(int64_t* arg1)\n{\n    int64_t r12 = arg1[0xb];\n    int64_t rbp = arg1[6];\n    if (arg1[8] <= r12)\n    {\n        r12 = arg1[8];\n    }\n    if (r12 > rbp)\n    {\n        void* r13_1 = &arg1[4];\n        while (true)\n        {\n            int64_t rdi_2 = arg1[0xf];\n            int64_t r14_1 = arg1[4];\n            uint64_t rdx_2 = (r12 - rbp);\n            char* rsi_3;\n            if (rdi_2 == 0)\n            {\n                rsi_3 = ((arg1[5] + rbp) + *arg1);\n            }\n            else\n            {\n                void var_68;\n                if (arg1[0x12] > 0)\n                {\n                    int64_t rax_5 = 0;\n                    rsi_3 = &var_68;\n                    if (rdx_2 > 0)\n                    {\n                        while (true)\n                        {\n                            char rcx_10 = *(rdi_2 + *(((*arg1 + rbp) + rax_5) + arg1[5]));\n                            (arg1[1] + rbp)[rax_5] = rcx_10;\n                            *(&var_68 + rax_5) = rcx_10;\n                            if (arg1[0x12] <= (rax_5 + 1))\n                            {\n                                break;\n                            }\n                            rax_5 = (rax_5 + 1);\n                            if (rdx_2 == rax_5)\n                            {\n                                break;\n                            }\n                            rdi_2 = arg1[0xf];\n                        }\n                    }\n                }\n                if ((arg1[0x12] <= 0 || (arg1[0x12] > 0 && rdx_2 <= 0)))\n                {\n                    rsi_3 = &var_68;\n                }\n            }\n            uint32_t var_6c;\n            uint64_t rax = sub_407dd0(&var_6c, rsi_3, rdx_2, r13_1);\n            uint64_t rdx_4;\n            if ((rax - 1) <= -3)\n            {\n                rdx_4 = var_6c;\n                if ((rax == -2 && arg1[8] < arg1[0xb]))\n                {\n                    arg1[4] = r14_1;\n                    break;\n                }\n            }\n            if (((rax - 1) > -3 || ((rax - 1) <= -3 && rax == -2)))\n            {\n                int64_t rcx_4 = arg1[0xf];\n                rdx_4 = *((*arg1 + rbp) + arg1[5]);\n                var_6c = rdx_4;\n                if (rcx_4 != 0)\n                {\n                    rdx_4 = *(rcx_4 + rdx_4);\n                    var_6c = rdx_4;\n                }\n                arg1[4] = r14_1;\n                rax = 1;\n            }\n            int64_t rcx_2 = arg1[2];\n            int64_t rsi_4 = (rbp + 1);\n            int64_t rdi_1 = (rbp << 2);\n            *(rcx_2 + (rbp << 2)) = rdx_4;\n            rbp = (rbp + rax);\n            if (rsi_4 >= rbp)\n            {\n                rbp = rsi_4;\n                if (rbp >= r12)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                int32_t* rdx_5 = ((rcx_2 + rdi_1) + 4);\n                int64_t rcx_3 = (rcx_2 + (rbp << 2));\n                do\n                {\n                    *rdx_5 = 0xffffffff;\n                    rdx_5 = &rdx_5[1];\n                } while (rcx_3 != rdx_5);\n                if (rbp >= r12)\n                {\n                    break;\n                }\n            }\n        }\n    }\n    arg1[6] = rbp;\n    arg1[7] = rbp;\n}\n\n"
        },
        {
            "funcName": "sub_408990",
            "funcStartAddr": "0x408990",
            "funcEndAddr": "0x408f8d",
            "decompiledFuncCode": "int64_t sub_408990(int64_t* arg1)\n{\n    int64_t rbx = arg1[0xb];\n    if (arg1[8] <= rbx)\n    {\n        rbx = arg1[8];\n    }\n    int64_t r15 = arg1[6];\n    int64_t r12_1;\n    if ((*(arg1 + 0x8a) == 0 && (arg1[0xf] == 0 && *(arg1 + 0x8c) == 0)))\n    {\n        int64_t rax_11;\n        if (r15 >= rbx)\n        {\n        label_408c43:\n            arg1[6] = r15;\n            rax_11 = 0;\n            arg1[7] = r15;\n        }\n        else\n        {\n            void* var_a8_1 = &arg1[4];\n            while (true)\n            {\n                int64_t rbp_5 = r15;\n                char* r12_4 = ((arg1[5] + r15) + *arg1);\n                uint64_t r13_2 = *r12_4;\n                int32_t rax_13;\n                if ((r13_2 & 0x80) == 0)\n                {\n                    rax_13 = mbsinit(var_a8_1);\n                    if (rax_13 != 0)\n                    {\n                        arg1[1][r15] = *__ctype_toupper_loc()[r13_2];\n                        *(arg1[2] + (r15 << 2)) = *(arg1[1] + r15);\n                        r15 = (r15 + 1);\n                    }\n                }\n                if (((r13_2 & 0x80) != 0 || ((r13_2 & 0x80) == 0 && rax_13 == 0)))\n                {\n                    mbstate_t rax_14;\n                    rax_14.__count = arg1[4];\n                    rax_14.__value = *(arg1 + 0x24);\n                    uint64_t rdx_10 = (rbx - r15);\n                    mbstate_t var_80;\n                    var_80.__count = rax_14.__count;\n                    var_80.__value = rax_14.__value;\n                    uint64_t var_98_1 = rdx_10;\n                    wint_t var_84;\n                    int32_t* var_90_1 = &var_84;\n                    uint64_t rax_15 = sub_407dd0(&var_84, r12_4, rdx_10, var_a8_1);\n                    if (rax_15 <= -3)\n                    {\n                        wint_t rdx_11 = var_84;\n                        wchar_t rax_16 = towupper(rdx_11);\n                        if (rdx_11 == rax_16)\n                        {\n                            memcpy((arg1[1] + r15), ((arg1[5] + r15) + *arg1), rax_15);\n                        }\n                        else\n                        {\n                            void var_78;\n                            if (rax_15 != wcrtomb(&var_78, rax_16, &var_80))\n                            {\n                                r12_1 = r15;\n                                while (true)\n                                {\n                                    mbstate_t rax_4;\n                                    rax_4.__count = arg1[4];\n                                    rax_4.__value = *(arg1 + 0x24);\n                                    int64_t rdx_1 = arg1[0xf];\n                                    var_80.__count = rax_4.__count;\n                                    var_80.__value = rax_4.__value;\n                                    char* var_a0_1;\n                                    if (rdx_1 == 0)\n                                    {\n                                        var_a0_1 = ((arg1[5] + r12_1) + *arg1);\n                                    }\n                                    else\n                                    {\n                                        int32_t rax_34 = arg1[0x12];\n                                        if ((rax_34 > 0 && var_98_1 > 0))\n                                        {\n                                            uint64_t r10_2 = (rax_34 - 1);\n                                            int64_t rax_35 = 0;\n                                            void* rdi_15 = ((arg1[5] + r12_1) + *arg1);\n                                            do\n                                            {\n                                                *(&var_78 + rax_35) = *(rdx_1 + *(rdi_15 + rax_35));\n                                                if (r10_2 == rax_35)\n                                                {\n                                                    break;\n                                                }\n                                                rax_35 = (rax_35 + 1);\n                                            } while (var_98_1 != rax_35);\n                                        }\n                                        var_a0_1 = &var_78;\n                                    }\n                                    uint64_t rax_5 = sub_407dd0(var_90_1, var_a0_1, var_98_1, var_a8_1);\n                                    if (rax_5 <= -3)\n                                    {\n                                        wint_t rdx_3 = var_84;\n                                        var_a8_1 = rdx_3;\n                                        wint_t rax_6 = towupper(rdx_3);\n                                        int64_t r8_1 = r15;\n                                        uint64_t rax_7;\n                                        int64_t r8_2;\n                                        if (var_a8_1 != rax_6)\n                                        {\n                                            rax_7 = wcrtomb(&var_78, rax_6, &var_80);\n                                            void* rcx_2 = &var_78;\n                                            r8_1 = r15;\n                                            uint64_t r10_1 = rax_7;\n                                            if (rax_5 == rax_7)\n                                            {\n                                                memcpy((arg1[1] + r15), rcx_2, rax_5);\n                                                r8_2 = r8_1;\n                                            }\n                                            else if (rax_7 != -1)\n                                            {\n                                                int64_t rax_42 = (r15 + rax_7);\n                                                int64_t rax_43 = arg1[8];\n                                                if (rax_42 > rax_43)\n                                                {\n                                                    goto label_408aff;\n                                                }\n                                                if (arg1[3] == 0)\n                                                {\n                                                    int64_t rax_49 = malloc((rax_43 << 3));\n                                                    arg1[3] = rax_49;\n                                                    if (rax_49 == 0)\n                                                    {\n                                                        rax_11 = 0xc;\n                                                        break;\n                                                    }\n                                                }\n                                                if (*(arg1 + 0x8c) == 0)\n                                                {\n                                                    if (r15 != 0)\n                                                    {\n                                                        int64_t rdx_30 = arg1[3];\n                                                        int64_t rax_44 = 0;\n                                                        do\n                                                        {\n                                                            *(rdx_30 + (rax_44 << 3)) = rax_44;\n                                                            rax_44 = (rax_44 + 1);\n                                                        } while (r15 != rax_44);\n                                                    }\n                                                    *(arg1 + 0x8c) = 1;\n                                                }\n                                                memcpy((arg1[1] + r15), rcx_2, r10_1);\n                                                int64_t rdi_20 = (rax_5 - 1);\n                                                wint_t* rsi_16 = (arg1[2] + (r15 << 2));\n                                                int64_t rax_46 = arg1[3];\n                                                *rsi_16 = rax_6;\n                                                int64_t* rcx_9 = (rax_46 + (r15 << 3));\n                                                int64_t rax_47 = 1;\n                                                *rcx_9 = r12_1;\n                                                if (r10_1 > 1)\n                                                {\n                                                    do\n                                                    {\n                                                        int64_t rdx_32 = rax_47;\n                                                        if (rax_47 >= rax_5)\n                                                        {\n                                                            rdx_32 = rdi_20;\n                                                        }\n                                                        rcx_9[rax_47] = (rdx_32 + r12_1);\n                                                        rsi_16[rax_47] = 0xffffffff;\n                                                        rax_47 = (rax_47 + 1);\n                                                    } while (rax_47 != r10_1);\n                                                }\n                                                uint64_t r10_4 = (r10_1 - rax_5);\n                                                rbx = (arg1[0xb] + r10_4);\n                                                arg1[0xb] = rbx;\n                                                if (r12_1 < arg1[0xc])\n                                                {\n                                                    arg1[0xd] = (arg1[0xd] + r10_4);\n                                                }\n                                                r15 = rax_42;\n                                                if (arg1[8] <= rbx)\n                                                {\n                                                    rbx = arg1[8];\n                                                }\n                                                r12_1 = (r12_1 + rax_5);\n                                                goto label_4089ca;\n                                            }\n                                        }\n                                        if ((var_a8_1 == rax_6 || (var_a8_1 != rax_6 && rax_5 != rax_7)))\n                                        {\n                                            memcpy((arg1[1] + r15), var_a0_1, rax_5);\n                                            r8_2 = r8_1;\n                                        }\n                                        int64_t rax_8;\n                                        if (*(arg1 + 0x8c) == 0)\n                                        {\n                                            rax_8 = (r12_1 + rax_5);\n                                        }\n                                        else\n                                        {\n                                            rax_8 = r12_1;\n                                            if (rax_5 != 0)\n                                            {\n                                                rax_8 = (rax_5 + r12_1);\n                                                int64_t rdx_29 = (arg1[3] + ((r15 - r12_1) << 3));\n                                                do\n                                                {\n                                                    *(rdx_29 + (r12_1 << 3)) = r12_1;\n                                                    r12_1 = (r12_1 + 1);\n                                                } while (rax_8 != r12_1);\n                                            }\n                                        }\n                                        r12_1 = rax_8;\n                                        int64_t rax_9 = arg1[2];\n                                        r15 = (r15 + 1);\n                                        int64_t rsi_4 = (r8_2 + rax_5);\n                                        int64_t rdx_7 = (r8_2 << 2);\n                                        *(rax_9 + (r8_2 << 2)) = rax_6;\n                                        if (r15 < rsi_4)\n                                        {\n                                            int32_t* rdx_8 = ((rax_9 + rdx_7) + 4);\n                                            int64_t rcx_3 = (rax_9 + (rsi_4 << 2));\n                                            do\n                                            {\n                                                *rdx_8 = 0xffffffff;\n                                                rdx_8 = &rdx_8[1];\n                                            } while (rcx_3 != rdx_8);\n                                            r15 = rsi_4;\n                                        }\n                                    label_4089ca:\n                                        if (r15 < rbx)\n                                        {\n                                            var_a8_1 = &arg1[4];\n                                            var_98_1 = (rbx - r15);\n                                            var_90_1 = &var_84;\n                                            continue;\n                                        }\n                                    }\n                                    else\n                                    {\n                                        if ((rax_5 != -2 || (rax_5 == -2 && arg1[8] >= arg1[0xb])))\n                                        {\n                                            int64_t rdx_25 = arg1[0xf];\n                                            uint64_t rax_40 = *((*arg1 + r12_1) + arg1[5]);\n                                            if (rdx_25 != 0)\n                                            {\n                                                rax_40 = *(rdx_25 + rax_40);\n                                            }\n                                            int64_t rcx_6 = r15;\n                                            arg1[1][r15] = rax_40;\n                                            if (*(arg1 + 0x8c) != 0)\n                                            {\n                                                *(arg1[3] + (r15 << 3)) = r12_1;\n                                            }\n                                            r12_1 = (r12_1 + 1);\n                                            r15 = (r15 + 1);\n                                            *(arg1[2] + (rcx_6 << 2)) = rax_40;\n                                            if (rax_5 == -1)\n                                            {\n                                                mbstate_t rax_41;\n                                                rax_41.__count = var_80.__count;\n                                                rax_41.__value = var_80.__value;\n                                                arg1[4] = rax_41.__count;\n                                                *(arg1 + 0x24) = rax_41.__value;\n                                            }\n                                            goto label_4089ca;\n                                        }\n                                        if ((rax_5 == -2 && arg1[8] < arg1[0xb]))\n                                        {\n                                        label_408aff:\n                                            mbstate_t rax_10;\n                                            rax_10.__count = var_80.__count;\n                                            rax_10.__value = var_80.__value;\n                                            arg1[4] = rax_10.__count;\n                                            *(arg1 + 0x24) = rax_10.__value;\n                                        }\n                                    }\n                                    arg1[6] = r15;\n                                    rax_11 = 0;\n                                    arg1[7] = r12_1;\n                                    goto label_408b28;\n                                }\n                                break;\n                            }\n                            memcpy((arg1[1] + r15), &var_78, rax_15);\n                        }\n                        int64_t rax_18 = arg1[2];\n                        int64_t rdx_15 = (rbp_5 << 2);\n                        r15 = (r15 + 1);\n                        *(rax_18 + (rbp_5 << 2)) = rax_16;\n                        int64_t rbp_6 = (rbp_5 + rax_15);\n                        if (r15 < rbp_6)\n                        {\n                            int32_t* rcx_5 = ((rax_18 + rdx_15) + 4);\n                            int64_t rax_19 = (rax_18 + (rbp_6 << 2));\n                            do\n                            {\n                                *rcx_5 = 0xffffffff;\n                                rcx_5 = &rcx_5[1];\n                            } while (rax_19 != rcx_5);\n                            r15 = rbp_6;\n                        }\n                    }\n                    else if (rax_15 != -2)\n                    {\n                        uint32_t rax_32 = *((*arg1 + r15) + arg1[5]);\n                        arg1[1][r15] = rax_32;\n                        r15 = (r15 + 1);\n                        *(arg1[2] + (rbp_5 << 2)) = rax_32;\n                        mbstate_t rax_33;\n                        rax_33.__count = var_80.__count;\n                        rax_33.__value = var_80.__value;\n                        arg1[4] = rax_33.__count;\n                        *(arg1 + 0x24) = rax_33.__value;\n                    }\n                    else\n                    {\n                        if (arg1[8] < arg1[0xb])\n                        {\n                            mbstate_t rax_48;\n                            rax_48.__count = var_80.__count;\n                            rax_48.__value = var_80.__value;\n                            arg1[4] = rax_48.__count;\n                            *(arg1 + 0x24) = rax_48.__value;\n                            goto label_408c43;\n                        }\n                        uint32_t rax_28 = *((*arg1 + r15) + arg1[5]);\n                        arg1[1][r15] = rax_28;\n                        r15 = (r15 + 1);\n                        *(arg1[2] + (rbp_5 << 2)) = rax_28;\n                    }\n                }\n                if (rbx <= r15)\n                {\n                    goto label_408c43;\n                }\n            }\n        }\n    label_408b28:\n        return rax_11;\n    }\n    r12_1 = arg1[7];\n    goto label_4089ca;\n}\n\n"
        },
        {
            "funcName": "sub_408f90",
            "funcStartAddr": "0x408f90",
            "funcEndAddr": "0x4090de",
            "decompiledFuncCode": "uint64_t sub_408f90(int64_t* arg1, int32_t arg2)\n{\n    int64_t rax = arg1[8];\n    if (rax <= 0xffffffffffffffe)\n    {\n        uint64_t rdx_1 = arg1[0xb];\n        uint64_t rax_1 = (rax + rax);\n        uint64_t rsi = arg2;\n        if (rax_1 > rdx_1)\n        {\n            rax_1 = rdx_1;\n        }\n        if (rax_1 >= rsi)\n        {\n            rsi = rax_1;\n        }\n        int32_t rax_2 = sub_4083f0(arg1, rsi);\n        int64_t rax_4;\n        int64_t rdi;\n        if (rax_2 == 0)\n        {\n            rdi = arg1[0x17];\n            if (rdi != 0)\n            {\n                rax_4 = realloc(rdi, ((arg1[8] << 3) + 8));\n                if (rax_4 != 0)\n                {\n                    arg1[0x17] = rax_4;\n                }\n            }\n            if (((rdi != 0 && rax_4 != 0) || rdi == 0))\n            {\n                int32_t rax_5 = arg1[0x12];\n                if (arg1[0x11] != 0)\n                {\n                    if (rax_5 <= 1)\n                    {\n                        sub_408760(arg1);\n                        return rax_2;\n                    }\n                    /* tailcall */\n                    return sub_408990(arg1);\n                }\n                if (rax_5 > 1)\n                {\n                    sub_4087e0(arg1);\n                    return rax_2;\n                }\n                int64_t rcx_2 = arg1[0xf];\n                if (rcx_2 != 0)\n                {\n                    int64_t rsi_4 = arg1[0xb];\n                    int64_t rax_8 = arg1[6];\n                    if (arg1[8] <= rsi_4)\n                    {\n                        rsi_4 = arg1[8];\n                    }\n                    if (rsi_4 <= rax_8)\n                    {\n                        arg1[6] = rax_8;\n                        arg1[7] = rax_8;\n                    }\n                    else\n                    {\n                        while (true)\n                        {\n                            arg1[1][rax_8] = *(rcx_2 + *((*arg1 + rax_8) + arg1[5]));\n                            rax_8 = (rax_8 + 1);\n                            if (rsi_4 == rax_8)\n                            {\n                                break;\n                            }\n                            rcx_2 = arg1[0xf];\n                        }\n                        arg1[6] = rsi_4;\n                        arg1[7] = rsi_4;\n                    }\n                }\n            }\n        }\n        if ((rax_2 != 0 || (rax_2 == 0 && ((rdi != 0 && rax_4 != 0) || rdi == 0))))\n        {\n            return rax_2;\n        }\n    }\n    return 0xc;\n}\n\n"
        },
        {
            "funcName": "sub_4090e0",
            "funcStartAddr": "0x4090e0",
            "funcEndAddr": "0x409166",
            "decompiledFuncCode": "uint64_t sub_4090e0(int64_t* arg1, int64_t arg2)\n{\n    int64_t rax = arg1[8];\n    int64_t r12 = arg1[0x18];\n    uint64_t rax_1;\n    if ((rax > arg2 || (rax <= arg2 && rax >= arg1[0xb])))\n    {\n        int64_t rax_2 = arg1[6];\n        if ((rax_2 <= arg2 && rax_2 < arg1[0xb]))\n        {\n            rax_1 = sub_408f90(arg1, (arg2 + 1));\n            if (rax_1 != 0)\n            {\n                goto label_40911a;\n            }\n        }\n    }\n    if ((rax <= arg2 && rax < arg1[0xb]))\n    {\n        rax_1 = sub_408f90(arg1, (arg2 + 1));\n        if (rax_1 != 0)\n        {\n        label_40911a:\n            return rax_1;\n        }\n    }\n    if (r12 >= arg2)\n    {\n        goto label_409114;\n    }\n    memset(((arg1[0x17] + (r12 << 3)) + 8), 0, ((arg2 - r12) << 3));\n    arg1[0x18] = arg2;\nlabel_409114:\n    rax_1 = 0;\n    goto label_40911a;\n}\n\n"
        },
        {
            "funcName": "sub_409170",
            "funcStartAddr": "0x409170",
            "funcEndAddr": "0x40918e",
            "decompiledFuncCode": "int64_t sub_409170(int64_t* arg1)\n{\n    free(*arg1);\n    free(arg1[3]);\n    /* tailcall */\n    return free(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_409190",
            "funcStartAddr": "0x409190",
            "funcEndAddr": "0x4091b8",
            "decompiledFuncCode": "uint64_t sub_409190(int64_t* arg1)\n{\n    uint64_t rax = (arg1[1] & 0x400ff);\n    if (rax == 6)\n    {\n        /* tailcall */\n        return sub_409170(*arg1);\n    }\n    if (rax == 3)\n    {\n        /* tailcall */\n        return free(*arg1);\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4091c0",
            "funcStartAddr": "0x4091c0",
            "funcEndAddr": "0x4091d4",
            "decompiledFuncCode": "int64_t sub_4091c0(int64_t arg1, void* arg2)\n{\n    sub_409190((arg2 + 0x28));\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_4091e0",
            "funcStartAddr": "0x4091e0",
            "funcEndAddr": "0x4093ae",
            "decompiledFuncCode": "int64_t sub_4091e0(int64_t* arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t rdi = arg1[2];\n    int64_t rbp = arg1[1];\n    int64_t rax_10;\n    int64_t r12_1;\n    int64_t r13_1;\n    if (rdi >= rbp)\n    {\n        int64_t r14_1 = (rbp + rbp);\n        if (r14_1 > 0xaaaaaaaaaaaaaaa)\n        {\n            goto label_4093a2;\n        }\n        int64_t rax_11 = realloc(*arg1, (rbp << 5));\n        if (rax_11 == 0)\n        {\n            goto label_4093a2;\n        }\n        *arg1 = rax_11;\n        int64_t r13_3 = (rbp << 4);\n        int64_t rbp_2 = ((rbp + r14_1) << 4);\n        r12_1 = realloc(arg1[3], r13_3);\n        int64_t rax_13 = realloc(arg1[4], r13_3);\n        r13_1 = realloc(arg1[5], rbp_2);\n        int64_t rax_15 = realloc(arg1[6], rbp_2);\n        if (r12_1 != 0)\n        {\n            if (rax_13 == 0)\n            {\n                goto label_40937c;\n            }\n            if (r13_1 == 0)\n            {\n                goto label_40937c;\n            }\n            if (rax_15 == 0)\n            {\n                goto label_40937c;\n            }\n            arg1[3] = r12_1;\n            rdi = arg1[2];\n            arg1[4] = rax_13;\n            arg1[5] = r13_1;\n            arg1[6] = rax_15;\n            arg1[1] = r14_1;\n            goto label_40921c;\n        }\n    label_40937c:\n        free(r12_1);\n        free(rax_13);\n        free(r13_1);\n        free(rax_15);\n    label_4093a2:\n        rax_10 = -1;\n    }\n    else\n    {\n        r12_1 = arg1[3];\n        r13_1 = arg1[5];\n    label_40921c:\n        int64_t* rax_3 = ((rdi << 4) + *arg1);\n        rax_3[1] = arg3;\n        *rax_3 = arg2;\n        rax_3[1] = (arg3 & 0xfffc00ff);\n        int32_t rcx_2;\n        rcx_2 = arg3 == 6;\n        if (arg3 == 5)\n        {\n            rcx_2 = *(arg1 + 0xb4) > 1;\n        }\n        int128_t zmm0 = 0;\n        *(rax_3 + 0xa) = ((*(rax_3 + 0xa) & 0xef) | (rcx_2 << 4));\n        *(r12_1 + (rdi << 3)) = -1;\n        int64_t rax_4 = arg1[2];\n        int128_t* rax_6 = (r13_1 + (rax_4 * 0x18));\n        *rax_6 = zmm0;\n        rax_6[1] = 0;\n        int64_t rax_7 = arg1[2];\n        int128_t* rax_9 = (arg1[6] + (rax_7 * 0x18));\n        *rax_9 = zmm0;\n        rax_9[1] = 0;\n        rax_10 = arg1[2];\n        arg1[2] = (rax_10 + 1);\n    }\n    return rax_10;\n}\n\n"
        },
        {
            "funcName": "sub_4093b0",
            "funcStartAddr": "0x4093b0",
            "funcEndAddr": "0x40944f",
            "decompiledFuncCode": "int64_t sub_4093b0(int64_t** arg1, int64_t arg2, int32_t arg3)\n{\n    int64_t r13_1 = (arg2 << 4);\n    int64_t* rax = *arg1;\n    int64_t rax_1 = sub_4091e0(arg1, *(rax + r13_1), *((rax + r13_1) + 8));\n    if (rax_1 != -1)\n    {\n        int64_t* r8_1 = *arg1;\n        int32_t rdi;\n        rdi = (arg3 & 0x3ff);\n        void* rsi_3 = &r8_1[(rax_1 * 2)];\n        int32_t rcx_6 = ((*(rsi_3 + 8) & 0xfffc00ff) | ((rdi & 0x3ff) << 8));\n        *(rsi_3 + 8) = rcx_6;\n        int32_t rdx_7 = (((((*((r8_1 + r13_1) + 8) >> 8) | rdi) & 0x3ff) << 8) | (rcx_6 & 0xfffc00ff));\n        *(rsi_3 + 8) = rdx_7;\n        *(rsi_3 + 0xa) = ((rdx_7 >> 0x10) | 4);\n        arg1[4][rax_1] = arg2;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_409450",
            "funcStartAddr": "0x409450",
            "funcEndAddr": "0x4096d4",
            "decompiledFuncCode": "int64_t sub_409450(int64_t* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t arg5)\n{\n    int64_t r9 = arg2;\n    int64_t r13 = arg3;\n    int32_t r12 = arg5;\n    int64_t rax_12;\n    while (true)\n    {\n        int64_t rcx = *arg1;\n        void* rdi = arg1[5];\n        int64_t r14_1 = r13;\n        void* rax_3 = ((r9 << 4) + rcx);\n        int64_t var_48_1;\n        int64_t rbp_2;\n        if (*(rax_3 + 8) != 4)\n        {\n            int64_t r14_3 = (r9 * 0x18);\n            void* r8 = (rdi + r14_3);\n            int64_t rsi = *(r8 + 8);\n            if (rsi == 0)\n            {\n                int64_t rax_23 = arg1[3];\n                *(rax_23 + (r13 << 3)) = *(rax_23 + (r9 << 3));\n                rax_12 = 0;\n                break;\n            }\n            rbp_2 = (r13 * 0x18);\n            void* rdi_1 = (rdi + rbp_2);\n            int64_t r15_1 = **(r8 + 0x10);\n            *(rdi_1 + 8) = 0;\n            if (rsi != 1)\n            {\n                int64_t rdx = arg1[2];\n                int64_t rsi_1 = (rdx - 1);\n                void* rax_6 = ((rsi_1 << 4) + rcx);\n                if ((*(rax_6 + 0xa) & 4) == 0)\n                {\n                label_409659:\n                    int64_t rax_21 = sub_4093b0(arg1, r15_1, r12);\n                    if (rax_21 == -1)\n                    {\n                        goto label_409585;\n                    }\n                    if (sub_408500((arg1[5] + rbp_2), rax_21) == 0)\n                    {\n                        goto label_409585;\n                    }\n                    rax_12 = sub_409450(arg1, r15_1, rax_21, arg4, r12);\n                    if (rax_12 != 0)\n                    {\n                        break;\n                    }\n                    goto label_409551;\n                }\n                if (rsi_1 <= 0)\n                {\n                    goto label_409659;\n                }\n                int64_t r8_2 = arg1[4];\n                void* rcx_2 = (((rcx - rax_6) + (rdx << 4)) - 0x20);\n                while ((!(*(r8_2 + (rsi_1 << 3)) == r15_1 && r12 == ((*(rax_6 + 8) >> 8) & 0x3ff))))\n                {\n                    rax_6 = (rax_6 + rcx_2);\n                    rsi_1 = (rsi_1 - 1);\n                    if ((*(rax_6 + 0xa) & 4) == 0)\n                    {\n                        break;\n                    }\n                    if (rsi_1 <= 0)\n                    {\n                        break;\n                    }\n                }\n                if ((!(*(r8_2 + (rsi_1 << 3)) == r15_1 && r12 == ((*(rax_6 + 8) >> 8) & 0x3ff))))\n                {\n                    goto label_409659;\n                }\n                if (sub_408500(rdi_1, rsi_1) == 0)\n                {\n                    goto label_409585;\n                }\n            label_409551:\n                int64_t r9_1 = *(*((arg1[5] + r14_3) + 0x10) + 8);\n                var_48_1 = r9_1;\n                int64_t rax_10 = sub_4093b0(arg1, r9_1, r12);\n                r13 = rax_10;\n                if (rax_10 == -1)\n                {\n                    goto label_409585;\n                }\n                goto label_409574;\n            }\n            if ((r9 != arg4 || (r9 == arg4 && r9 == r13)))\n            {\n                r12 = (r12 | ((*(rax_3 + 8) >> 8) & 0x3ff));\n                int64_t rax_16 = sub_4093b0(arg1, r15_1, r12);\n                r13 = rax_16;\n                if ((rax_16 != -1 && sub_408500((arg1[5] + rbp_2), rax_16) != 0))\n                {\n                    r9 = r15_1;\n                    continue;\n                }\n            }\n            if ((r9 == arg4 && r9 != r13))\n            {\n                rax_12 = 0;\n                if (sub_408500(rdi_1, r15_1) != 0)\n                {\n                    break;\n                }\n            }\n            goto label_409585;\n        }\n        int64_t r15_2 = (r9 << 3);\n        rbp_2 = (r13 * 0x18);\n        int64_t r9_2 = *(arg1[3] + (r9 << 3));\n        *((rdi + rbp_2) + 8) = 0;\n        int64_t rax_19 = sub_4093b0(arg1, r9_2, r12);\n        r13 = rax_19;\n        if (rax_19 == -1)\n        {\n        label_409585:\n            rax_12 = 0xc;\n            break;\n        }\n        int64_t* rax_20 = arg1[3];\n        var_48_1 = r9_2;\n        rax_20[r14_1] = *(rax_20 + r15_2);\n    label_409574:\n        r9 = var_48_1;\n        if (sub_408500((arg1[5] + rbp_2), r13) == 0)\n        {\n            goto label_409585;\n        }\n    }\n    return rax_12;\n}\n\n"
        },
        {
            "funcName": "sub_4096e0",
            "funcStartAddr": "0x4096e0",
            "funcEndAddr": "0x409739",
            "decompiledFuncCode": "int64_t sub_4096e0(void* arg1)\n{\n    free(*(arg1 + 0x30));\n    free(*(arg1 + 0x48));\n    void* rax = *(arg1 + 0x50);\n    if (rax != (arg1 + 8))\n    {\n        free(*(rax + 0x10));\n        free(*(arg1 + 0x50));\n    }\n    free(*(arg1 + 0x18));\n    free(*(arg1 + 0x60));\n    free(*(arg1 + 0x58));\n    /* tailcall */\n    return free(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_409740",
            "funcStartAddr": "0x409740",
            "funcEndAddr": "0x409772",
            "decompiledFuncCode": "int64_t sub_409740(void* arg1)\n{\n    free(*(arg1 + 0x10));\n    int64_t rax = free(*(arg1 + 0x18));\n    if (*(arg1 + 0x8b) != 0)\n    {\n        /* tailcall */\n        return free(*(arg1 + 8));\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_409780",
            "funcStartAddr": "0x409780",
            "funcEndAddr": "0x409838",
            "decompiledFuncCode": "void sub_409780(void* arg1)\n{\n    if (*(arg1 + 0xe8) > 0)\n    {\n        int64_t r13_1 = 0;\n        do\n        {\n            void* r12_1 = *(*(arg1 + 0xf8) + (r13_1 << 3));\n            if (*(r12_1 + 0x20) > 0)\n            {\n                int64_t rbx_1 = 0;\n                do\n                {\n                    void* rbp_1 = *(*(r12_1 + 0x28) + (rbx_1 << 3));\n                    rbx_1 = (rbx_1 + 1);\n                    free(*(rbp_1 + 0x20));\n                    free(rbp_1);\n                } while (*(r12_1 + 0x20) > rbx_1);\n            }\n            free(*(r12_1 + 0x28));\n            void* rax_3 = *(r12_1 + 0x10);\n            if (rax_3 != 0)\n            {\n                free(*(rax_3 + 0x10));\n                free(*(r12_1 + 0x10));\n            }\n            r13_1 = (r13_1 + 1);\n            free(r12_1);\n        } while (*(arg1 + 0xe8) > r13_1);\n    }\n    *(arg1 + 0xe8) = 0;\n    *(arg1 + 0xc8) = 0;\n}\n\n"
        },
        {
            "funcName": "sub_409840",
            "funcStartAddr": "0x409840",
            "funcEndAddr": "0x409abf",
            "decompiledFuncCode": "int64_t sub_409840(void* arg1, void* arg2)\n{\n    char rax = *(arg2 + 0x30);\n    int64_t rdx = *(arg2 + 0x38);\n    int64_t rax_3;\n    if (rax <= 0x10)\n    {\n        switch (rax)\n        {\n            case 2:\n            {\n                if (*(arg2 + 0x20) != 0)\n                {\n                    __assert_fail(\"node->next == NULL\", \"lib/regcomp.c\", 0x5a9, \"link_nfa_nodes\");\n                    /* no return */\n                }\n                goto label_409878;\n            }\n            case 4:\n            {\n                int64_t rbx_2 = *(*(arg2 + 0x20) + 0x38);\n                *(*(arg1 + 0x18) + (rdx << 3)) = rbx_2;\n                if (*(arg2 + 0x30) != 4)\n                {\n                    goto label_409878;\n                }\n                int64_t* rbp_2 = (*(arg1 + 0x28) + (rdx * 0x18));\n                *rbp_2 = 1;\n                rbp_2[1] = 1;\n                int64_t* rax_13 = malloc(8);\n                rbp_2[2] = rax_13;\n                if (rax_13 == 0)\n                {\n                    rbp_2[1] = 0;\n                    rax_3 = 0xc;\n                    *rbp_2 = 0;\n                }\n                else\n                {\n                    *rax_13 = rbx_2;\n                    rax_3 = 0;\n                }\n                goto label_40987e;\n            }\n            case 8:\n            case 9:\n            case 0xc:\n            {\n                int64_t rbp_3 = *(*(arg2 + 0x20) + 0x38);\n                int64_t* rbx_3 = (*(arg1 + 0x28) + (rdx * 0x18));\n                *rbx_3 = 1;\n                rbx_3[1] = 1;\n                int64_t* rax_16 = malloc(8);\n                rbx_3[2] = rax_16;\n                if (rax_16 != 0)\n                {\n                    *rax_16 = rbp_3;\n                    return 0;\n                }\n                rbx_3[1] = 0;\n                rax_3 = 0xc;\n                *rbx_3 = 0;\n                goto label_40987e;\n            }\n            case 0xa:\n            case 0xb:\n            {\n                *(arg1 + 0xb0) = (*(arg1 + 0xb0) | 1);\n                void* rax_4 = *(arg2 + 8);\n                int64_t rbp_1;\n                if (rax_4 == 0)\n                {\n                    rbp_1 = *(*(arg2 + 0x20) + 0x38);\n                }\n                else\n                {\n                    rbp_1 = *(*(rax_4 + 0x18) + 0x38);\n                }\n                void* rax_6 = *(arg2 + 0x10);\n                int64_t r12_1;\n                if (rax_6 == 0)\n                {\n                    r12_1 = *(*(arg2 + 0x20) + 0x38);\n                }\n                else\n                {\n                    r12_1 = *(*(rax_6 + 0x18) + 0x38);\n                }\n                if (rbp_1 < 0)\n                {\n                    __assert_fail(\"left > -1\", \"lib/regcomp.c\", 0x5b9, \"link_nfa_nodes\");\n                    /* no return */\n                }\n                if (r12_1 < 0)\n                {\n                    __assert_fail(\"right > -1\", \"lib/regcomp.c\", 0x5ba, \"link_nfa_nodes\");\n                    /* no return */\n                }\n                int64_t* rbx_1 = (*(arg1 + 0x28) + (rdx * 0x18));\n                *rbx_1 = 2;\n                int64_t* rax_9 = malloc(0x10);\n                rbx_1[2] = rax_9;\n                if (rax_9 == 0)\n                {\n                    rax_3 = 0xc;\n                }\n                else\n                {\n                    bool cond:0_1 = rbp_1 >= r12_1;\n                    if (rbp_1 == r12_1)\n                    {\n                        rbx_1[1] = 1;\n                        *rax_9 = rbp_1;\n                        rax_3 = 0;\n                    }\n                    else\n                    {\n                        rbx_1[1] = 2;\n                        if (cond:0_1)\n                        {\n                            *rax_9 = r12_1;\n                            rax_9[1] = rbp_1;\n                            rax_3 = 0;\n                        }\n                        else\n                        {\n                            *rax_9 = rbp_1;\n                            rax_9[1] = r12_1;\n                            rax_3 = 0;\n                        }\n                    }\n                }\n                goto label_40987e;\n            }\n            case 0x10:\n            {\n                goto label_409878;\n            }\n        }\n    }\n    if ((rax & 8) != 0)\n    {\n        __assert_fail(\"!IS_EPSILON_NODE (node->token.ty\u2026\", \"lib/regcomp.c\", 0x5cc, \"link_nfa_nodes\");\n        /* no return */\n    }\n    *(*(arg1 + 0x18) + (rdx << 3)) = *(*(arg2 + 0x20) + 0x38);\nlabel_409878:\n    rax_3 = 0;\nlabel_40987e:\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_409ac0",
            "funcStartAddr": "0x409ac0",
            "funcEndAddr": "0x409b0e",
            "decompiledFuncCode": "uint64_t sub_409ac0(void* arg1, int64_t arg2)\n{\n    int64_t rcx_1 = *(arg1 + 0x30);\n    int64_t rax = (arg2 + 1);\n    uint64_t rax_1;\n    int64_t rdx_1;\n    if (rax < rcx_1)\n    {\n        rdx_1 = *(arg1 + 0x10);\n        int64_t rdi = (rax << 2);\n        if (*(rdx_1 + (rax << 2)) == 0xffffffff)\n        {\n            int64_t rcx = (rcx_1 - arg2);\n            int64_t rsi = ((rdx_1 + rdi) - 4);\n            int64_t rdx_2 = 2;\n            do\n            {\n                rax_1 = rdx_2;\n                if (rdx_2 == rcx)\n                {\n                    return rax_1;\n                }\n                rdx_2 = (rdx_2 + 1);\n            } while (*((rsi + (rdx_2 << 2)) - 4) == 0xffffffff);\n        }\n    }\n    if ((rax >= rcx_1 || (rax < rcx_1 && *(rdx_1 + (rax << 2)) != 0xffffffff)))\n    {\n        rax_1 = 1;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_409b10",
            "funcStartAddr": "0x409b10",
            "funcEndAddr": "0x409b75",
            "decompiledFuncCode": "int64_t sub_409b10(int64_t arg1, int64_t* arg2, int64_t arg3)\n{\n    if (arg1 > 0)\n    {\n        int64_t r8_1 = *arg2;\n        uint64_t rdi = (arg1 - 1);\n        uint64_t rcx_2;\n        int64_t rsi;\n        for (rsi = 0; rsi < rdi; rdi = rcx_2)\n        {\n            rcx_2 = ((rsi + rdi) >> 1);\n            uint64_t rax_1;\n            if (arg3 > *(r8_1 + (rcx_2 << 3)))\n            {\n                rax_1 = rcx_2;\n                rcx_2 = rdi;\n            }\n            else\n            {\n                for (; rsi < rcx_2; rcx_2 = rax_1)\n                {\n                    rax_1 = ((rsi + rcx_2) >> 1);\n                    if (*(r8_1 + (rax_1 << 3)) < arg3)\n                    {\n                        break;\n                    }\n                }\n                if (rsi >= rcx_2)\n                {\n                    break;\n                }\n            }\n            rsi = (rax_1 + 1);\n        }\n        if (arg3 == *(r8_1 + (rsi << 3)))\n        {\n            return (rsi + 1);\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_409b80",
            "funcStartAddr": "0x409b80",
            "funcEndAddr": "0x409c79",
            "decompiledFuncCode": "int64_t sub_409b80(void* arg1, int64_t* arg2, int64_t arg3, int64_t arg4, \n    int32_t arg5)\n{\n    int64_t* r14 = &arg2[2];\n    int64_t rbx = arg3;\n    int64_t rax_7;\n    while (true)\n    {\n        if (sub_409b10(arg2[1], r14, rbx) == 0)\n        {\n            int64_t* rax_4 = ((rbx << 4) + *arg1);\n            if ((rax_4[1] != arg5 || (rax_4[1] == arg5 && *rax_4 != arg4)))\n            {\n                if (sub_408500(arg2, rbx) == 0)\n                {\n                label_409c50:\n                    rax_7 = 0xc;\n                    break;\n                }\n                int64_t rbx_2 = (rbx * 0x18);\n                void* rdx_3 = (*(arg1 + 0x28) + rbx_2);\n                int64_t rax_6 = *(rdx_3 + 8);\n                if (rax_6 != 0)\n                {\n                    int64_t* rdx_4 = *(rdx_3 + 0x10);\n                    if (rax_6 == 2)\n                    {\n                        rax_7 = sub_409b80(arg1, arg2, rdx_4[1], arg4, arg5);\n                        if (rax_7 != 0)\n                        {\n                            break;\n                        }\n                        rdx_4 = *((*(arg1 + 0x28) + rbx_2) + 0x10);\n                    }\n                    rbx = *rdx_4;\n                    continue;\n                }\n            }\n            if ((((rax_4[1] == arg5 && *rax_4 == arg4) && arg5 == 9) && sub_408500(arg2, rbx) == 0))\n            {\n                goto label_409c50;\n            }\n        }\n        return 0;\n    }\n    return rax_7;\n}\n\n"
        },
        {
            "funcName": "sub_409c80",
            "funcStartAddr": "0x409c80",
            "funcEndAddr": "0x409ca3",
            "decompiledFuncCode": "void sub_409c80(int64_t* arg1, int64_t* arg2, int64_t arg3)\n{\n    if (arg3 < *arg1)\n    {\n        int64_t rax = *arg2;\n        do\n        {\n            *(rax + (arg3 << 3)) = *((rax + (arg3 << 3)) + 8);\n            arg3 = (arg3 + 1);\n        } while (arg3 < *arg1);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_409cb0",
            "funcStartAddr": "0x409cb0",
            "funcEndAddr": "0x409d3b",
            "decompiledFuncCode": "int64_t sub_409cb0(void* arg1, void* arg2)\n{\n    char rax_9 = *(arg2 + 0x30);\n    if (rax_9 == 4)\n    {\n        int64_t rax_5 = *(arg1 + 0xe0);\n        if (rax_5 != 0)\n        {\n            int64_t rcx_2 = *(rax_5 + (*(arg2 + 0x28) << 3));\n            *(arg2 + 0x28) = rcx_2;\n            *(arg1 + 0xa0) = (*(arg1 + 0xa0) | (1 << rcx_2));\n            return 0;\n        }\n    }\n    else if (rax_9 == 0x11)\n    {\n        void* rax_1 = *(arg2 + 8);\n        if ((rax_1 != 0 && *(rax_1 + 0x30) == 0x11))\n        {\n            int64_t rcx_1 = *(rax_1 + 0x28);\n            void** rax_2 = *(rax_1 + 8);\n            *(arg2 + 8) = rax_2;\n            if (rax_2 != 0)\n            {\n                *rax_2 = arg2;\n            }\n            int64_t rax_3 = *(arg1 + 0xe0);\n            *(rax_3 + (rcx_1 << 3)) = *(rax_3 + (*(arg2 + 0x28) << 3));\n            if (rcx_1 <= 0x3f)\n            {\n                *(arg1 + 0xa0) = (*(arg1 + 0xa0) & (ROLQ(-2, rcx_1)));\n            }\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_409d40",
            "funcStartAddr": "0x409d40",
            "funcEndAddr": "0x409d97",
            "decompiledFuncCode": "int64_t sub_409d40(int64_t, void* arg2)\n{\n    char rax_6 = *(arg2 + 0x30);\n    void* rdx = *(arg2 + 8);\n    if (rax_6 == 0xb)\n    {\n        *(rdx + 0x20) = arg2;\n        return 0;\n    }\n    if (rax_6 == 0x10)\n    {\n        void* rax_4 = *(arg2 + 0x10);\n        *(rdx + 0x20) = *(rax_4 + 0x18);\n        *(rax_4 + 0x20) = *(arg2 + 0x20);\n        return 0;\n    }\n    if (rdx != 0)\n    {\n        *(rdx + 0x20) = *(arg2 + 0x20);\n    }\n    void* rax_1 = *(arg2 + 0x10);\n    if (rax_1 != 0)\n    {\n        *(rax_1 + 0x20) = *(arg2 + 0x20);\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_409da0",
            "funcStartAddr": "0x409da0",
            "funcEndAddr": "0x409fee",
            "decompiledFuncCode": "int64_t sub_409da0(void* arg1, int64_t* arg2, int64_t* arg3, int64_t arg4, \n    int64_t arg5, int64_t arg6, int64_t arg7)\n{\n    int64_t rbx = 0;\n    int64_t rax = *(arg1 + 0x98);\n    int64_t r15 = *(arg1 + 0xc8);\n    int64_t r10_4;\n    for (int64_t rax_1 = r15; rbx < rax_1; rax_1 = r10_4)\n    {\n        int64_t r11_1 = (rbx + rax_1);\n        int64_t rbp_1 = *(arg1 + 0xd8);\n        r10_4 = (((r11_1 >> 0x3f) + r11_1) >> 1);\n        int64_t r13_1;\n        if (arg5 > *((rbp_1 + (r10_4 * 0x28)) + 8))\n        {\n            r13_1 = r10_4;\n            r10_4 = rax_1;\n        }\n        else\n        {\n            int64_t rax_5;\n            for (; rbx < r10_4; r10_4 = rax_5)\n            {\n                int64_t r11_3 = (rbx + r10_4);\n                rax_5 = (((r11_3 >> 0x3f) + r11_3) >> 1);\n                r13_1 = rax_5;\n                if (*((rbp_1 + (rax_5 * 0x28)) + 8) < arg5)\n                {\n                    break;\n                }\n            }\n            if (rbx >= r10_4)\n            {\n                break;\n            }\n        }\n        rbx = (r13_1 + 1);\n    }\n    if (r15 <= rbx)\n    {\n        rbx = -1;\n    }\n    else if (arg5 != *((*(arg1 + 0xd8) + (rbx * 0x28)) + 8))\n    {\n        rbx = -1;\n    }\n    int64_t rax_8 = r15;\n    int64_t rbp_2;\n    int64_t r10_8;\n    for (rbp_2 = 0; rbp_2 < rax_8; rax_8 = r10_8)\n    {\n        int64_t r11_6 = (rbp_2 + rax_8);\n        int64_t r11_7 = *(arg1 + 0xd8);\n        r10_8 = (((r11_6 >> 0x3f) + r11_6) >> 1);\n        int64_t r14_1;\n        if (arg7 > *((r11_7 + (r10_8 * 0x28)) + 8))\n        {\n            r14_1 = r10_8;\n            r10_8 = rax_8;\n        }\n        else\n        {\n            int64_t rax_12;\n            for (; rbp_2 < r10_8; r10_8 = rax_12)\n            {\n                int64_t r13_3 = (rbp_2 + r10_8);\n                rax_12 = (((r13_3 >> 0x3f) + r13_3) >> 1);\n                r14_1 = rax_12;\n                if (*((r11_7 + (rax_12 * 0x28)) + 8) < arg7)\n                {\n                    break;\n                }\n            }\n            if (rbp_2 >= r10_8)\n            {\n                break;\n            }\n        }\n        rbp_2 = (r14_1 + 1);\n    }\n    if (r15 <= rbp_2)\n    {\n        rbp_2 = -1;\n    }\n    else if (arg7 != *((*(arg1 + 0xd8) + (rbp_2 * 0x28)) + 8))\n    {\n        rbp_2 = -1;\n    }\n    int32_t rax_21;\n    int32_t rax_23;\n    int64_t rax_24;\n    if (*arg2 > 0)\n    {\n        int64_t r14_2 = 0;\n        do\n        {\n            int64_t rsi = *(*arg3 + (r14_2 << 3));\n            int64_t r12_1 = *((*(*(arg1 + 0xd8) + (rsi * 0x28)) << 4) + *rax);\n            rax_21 = sub_408380(arg1, rsi, r12_1, arg4, arg5, rbx);\n            rax_23 = sub_408380(arg1, *(*arg3 + (r14_2 << 3)), r12_1, arg6, arg7, rbp_2);\n            if (rax_21 != rax_23)\n            {\n                break;\n            }\n            r14_2 = (r14_2 + 1);\n        } while (r14_2 < *arg2);\n        if (rax_21 != rax_23)\n        {\n            rax_24 = 1;\n        }\n    }\n    if ((*arg2 <= 0 || (*arg2 > 0 && rax_21 == rax_23)))\n    {\n        rax_24 = 0;\n    }\n    if (((*arg2 <= 0 || (*arg2 > 0 && rax_21 == rax_23)) || (*arg2 > 0 && rax_21 != rax_23)))\n    {\n        return rax_24;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_409ff0",
            "funcStartAddr": "0x409ff0",
            "funcEndAddr": "0x40a041",
            "decompiledFuncCode": "int64_t sub_409ff0(int64_t* arg1, int64_t arg2, int64_t* arg3)\n{\n    int64_t* rbp = arg3;\n    int64_t* rbx = arg1;\n    int64_t rax_1;\n    while (true)\n    {\n        int64_t* rcx;\n        rax_1 = arg2(rbp, rbx, arg3, rcx);\n        if (rax_1 != 0)\n        {\n            break;\n        }\n        arg3 = rbx[1];\n        rcx = nullptr;\n        if (arg3 == 0)\n        {\n            while (true)\n            {\n                arg3 = rbx[2];\n                if ((arg3 != rcx && arg3 != 0))\n                {\n                    break;\n                }\n                int64_t* rdx = *rbx;\n                rcx = rbx;\n                if (rdx == 0)\n                {\n                    return rax_1;\n                }\n                rbx = rdx;\n            }\n        }\n        rbx = arg3;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40a050",
            "funcStartAddr": "0x40a050",
            "funcEndAddr": "0x40a213",
            "decompiledFuncCode": "int64_t sub_40a050(int64_t* arg1, void* arg2)\n{\n    if (arg2 != 0)\n    {\n        int64_t rax_1 = *(arg2 + 8);\n        if (rax_1 != 0)\n        {\n            int64_t rdx = arg1[1];\n            int64_t rsi = *arg1;\n            int64_t rax_6;\n            int64_t rax_11;\n            if (rsi < (rdx + (rax_1 << 1)))\n            {\n                int64_t rax_9 = (rax_1 + rsi);\n                int64_t rbp_2 = (rax_9 + rax_9);\n                rax_11 = realloc(arg1[2], (rax_9 << 4));\n                if (rax_11 == 0)\n                {\n                    rax_6 = 0xc;\n                }\n                else\n                {\n                    rdx = arg1[1];\n                    arg1[2] = rax_11;\n                    *arg1 = rbp_2;\n                    rax_1 = *(arg2 + 8);\n                }\n            }\n            if (((rsi >= (rdx + (rax_1 << 1)) && rdx == 0) || ((rsi < (rdx + (rax_1 << 1)) && rax_11 != 0) && rdx == 0)))\n            {\n                int64_t rdi_7 = arg1[2];\n                int64_t rsi_7 = *(arg2 + 0x10);\n                arg1[1] = rax_1;\n                memcpy(rdi_7, rsi_7, (*(arg2 + 8) << 3));\n            label_40a152:\n                rax_6 = 0;\n            }\n            if ((((rsi < (rdx + (rax_1 << 1)) && rax_11 == 0) || (rsi >= (rdx + (rax_1 << 1)) && rdx == 0)) || ((rsi < (rdx + (rax_1 << 1)) && rax_11 != 0) && rdx == 0)))\n            {\n                return rax_6;\n            }\n            if (((rsi >= (rdx + (rax_1 << 1)) && rdx != 0) || ((rsi < (rdx + (rax_1 << 1)) && rax_11 != 0) && rdx != 0)))\n            {\n                int64_t rbp_1 = (rdx + (rax_1 << 1));\n                int64_t rax_2 = (rax_1 - 1);\n                int64_t rdx_1 = (rdx - 1);\n                int64_t rdi_1 = (!rax_2);\n                while (rdi_1 < 0)\n                {\n                    while (rdx_1 >= 0)\n                    {\n                        int64_t rcx_1 = arg1[2];\n                        int64_t rsi_2 = *(*(arg2 + 0x10) + (rax_2 << 3));\n                        int64_t temp1_1 = *(rcx_1 + (rdx_1 << 3));\n                        bool cond:0_1 = temp1_1 >= rsi_2;\n                        if (temp1_1 == rsi_2)\n                        {\n                            rax_2 = (rax_2 - 1);\n                            rdx_1 = (rdx_1 - 1);\n                            rdi_1 = (!rax_2);\n                            break;\n                        }\n                        if (cond:0_1)\n                        {\n                            rdx_1 = (rdx_1 - 1);\n                            break;\n                        }\n                        rax_2 = (rax_2 - 1);\n                        rbp_1 = (rbp_1 - 1);\n                        *(rcx_1 + (rbp_1 << 3)) = rsi_2;\n                        rdi_1 = (!rax_2);\n                        if (rdi_1 >= 0)\n                        {\n                            break;\n                        }\n                    }\n                    if (rdx_1 < 0)\n                    {\n                        break;\n                    }\n                }\n                if (rax_2 >= 0)\n                {\n                    rbp_1 = (rbp_1 - (rax_2 + 1));\n                    memcpy((arg1[2] + (rbp_1 << 3)), *(arg2 + 0x10), ((rax_2 + 1) << 3));\n                }\n                int64_t rcx_2 = arg1[1];\n                int64_t r8_1 = ((rcx_2 + (*(arg2 + 8) << 1)) - 1);\n                int64_t rdx_5 = (r8_1 - rbp_1);\n                int64_t rdx_6 = (rdx_5 + 1);\n                if (rdx_5 != -1)\n                {\n                    int64_t rax_5 = (rcx_2 - 1);\n                    int64_t rdi_4 = arg1[2];\n                    arg1[1] = (rcx_2 + rdx_6);\n                    while (true)\n                    {\n                        int64_t rsi_4 = *(rdi_4 + (r8_1 << 3));\n                        int64_t rcx_4 = *(rdi_4 + (rax_5 << 3));\n                        int64_t* r9_2 = (rdi_4 + ((rax_5 + rdx_6) << 3));\n                        if (rsi_4 <= rcx_4)\n                        {\n                            *r9_2 = rcx_4;\n                            int64_t temp2_1 = rax_5;\n                            rax_5 = (rax_5 - 1);\n                            if ((temp2_1 - 1) < 0)\n                            {\n                                memcpy(rdi_4, (rdi_4 + (rbp_1 << 3)), (rdx_6 << 3));\n                                return 0;\n                            }\n                        }\n                        else\n                        {\n                            r8_1 = (r8_1 - 1);\n                            *r9_2 = rsi_4;\n                            int64_t temp3_1 = rdx_6;\n                            rdx_6 = (rdx_6 - 1);\n                            if (temp3_1 == 1)\n                            {\n                                break;\n                            }\n                        }\n                    }\n                }\n                goto label_40a152;\n            }\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40a220",
            "funcStartAddr": "0x40a220",
            "funcEndAddr": "0x40a474",
            "decompiledFuncCode": "int64_t sub_40a220(int128_t* arg1, int64_t* arg2, int64_t arg3, char arg4)\n{\n    int64_t rbp_1 = (arg3 * 0x18);\n    void* rbx_1 = (arg2[5] + rbp_1);\n    int64_t var_70 = 0;\n    int64_t var_78 = (*(rbx_1 + 8) + 1);\n    int64_t rdi_1 = ((*(rbx_1 + 8) + 1) << 3);\n    int64_t rax_1 = malloc(rdi_1);\n    if (rax_1 != 0)\n    {\n        void* rdx = *arg2;\n        int64_t r13_2 = (arg3 << 4);\n        *((arg2[6] + rbp_1) + 8) = -1;\n        void* rax_3 = (rdx + r13_2);\n        int32_t r8_1 = *(rax_3 + 8);\n        int64_t rax_6;\n        int128_t* rax_12;\n        if ((r8_1 & 0x3ff00) != 0)\n        {\n            if (*(rbx_1 + 8) == 0)\n            {\n            label_40a418:\n                if (sub_408500(&var_78, arg3) != 0)\n                {\n                    rax_12 = arg2[6];\n                label_40a42b:\n                    *(rax_12 + rbp_1) = var_78;\n                    *((rax_12 + rbp_1) + 0x10) = rax_1;\n                label_40a442:\n                    int128_t zmm1 = var_78;\n                    arg1[1] = rax_1;\n                    *arg1 = zmm1;\n                    return 0;\n                }\n            }\n            else if ((*((rdx + (**(rbx_1 + 0x10) << 4)) + 0xa) & 4) == 0)\n            {\n                rax_6 = sub_409450(arg2, arg3, arg3, arg3, ((r8_1 >> 8) & 0x3ff));\n                if (rax_6 != 0)\n                {\n                    return rax_6;\n                }\n                rax_3 = (*arg2 + r13_2);\n            }\n        }\n        if (((r8_1 & 0x3ff00) == 0 || ((r8_1 & 0x3ff00) != 0 && *(rbx_1 + 8) != 0)))\n        {\n            if ((*(rax_3 + 8) & 8) == 0)\n            {\n                goto label_40a418;\n            }\n            void* rsi = arg2[5];\n            void* rax_4 = (rsi + rbp_1);\n            if (*(rax_4 + 8) <= 0)\n            {\n                goto label_40a418;\n            }\n            char r13_3 = 0;\n            int64_t r14_1 = 0;\n            while (true)\n            {\n                int64_t rdx_1 = *(*(rax_4 + 0x10) + (r14_1 << 3));\n                int64_t rbx_3 = (rdx_1 * 0x18);\n                int128_t* rax_10 = (arg2[6] + rbx_3);\n                int64_t rcx = *(rax_10 + 8);\n                if (rcx == -1)\n                {\n                    rax_4 = (rsi + rbp_1);\n                    r13_3 = 1;\n                    r14_1 = (r14_1 + 1);\n                    if (*(rax_4 + 8) <= r14_1)\n                    {\n                        break;\n                    }\n                }\n                else\n                {\n                    int128_t var_58;\n                    int64_t var_48;\n                    if (rcx != 0)\n                    {\n                        var_58 = *rax_10;\n                        var_48 = rax_10[1];\n                    }\n                    else\n                    {\n                        rax_6 = sub_40a220(&var_58, arg2);\n                        if (rax_6 != 0)\n                        {\n                            return rax_6;\n                        }\n                    }\n                    rax_6 = sub_40a050(&var_78, &var_58);\n                    if (rax_6 != 0)\n                    {\n                        return rax_6;\n                    }\n                    if (*((arg2[6] + rbx_3) + 8) == 0)\n                    {\n                        r13_3 = 1;\n                        free(var_48);\n                    }\n                    rsi = arg2[5];\n                    r14_1 = (r14_1 + 1);\n                    rax_4 = (rsi + rbp_1);\n                    if (*(rax_4 + 8) <= r14_1)\n                    {\n                        break;\n                    }\n                }\n            }\n            if (sub_408500(&var_78, arg3) != 0)\n            {\n                rax_12 = arg2[6];\n                void* rdx_2 = (rax_12 + rbp_1);\n                if (arg4 == 1)\n                {\n                    goto label_40a42b;\n                }\n                if (r13_3 == 0)\n                {\n                    goto label_40a42b;\n                }\n                *(rdx_2 + 8) = 0;\n                goto label_40a442;\n            }\n        }\n    }\n    return 0xc;\n}\n\n"
        },
        {
            "funcName": "sub_40a480",
            "funcStartAddr": "0x40a480",
            "funcEndAddr": "0x40a5bf",
            "decompiledFuncCode": "uint64_t sub_40a480(int64_t* arg1, int128_t* arg2, int64_t arg3, int32_t arg4)\n{\n    int64_t r12 = *(arg2 + 8);\n    int64_t var_40 = 0;\n    int64_t var_48 = r12;\n    int64_t rax = malloc((r12 << 3));\n    if (rax == 0)\n    {\n        return 0xc;\n    }\n    if (r12 > 0)\n    {\n        int64_t r12_1 = 0;\n        do\n        {\n            int64_t rdx = *(arg2[1] + (r12_1 << 3));\n            void* rsi = (arg1[6] + (rdx * 0x18));\n            int64_t r9_1 = *(rsi + 8);\n            int32_t rax_6;\n            if (r9_1 > 0)\n            {\n                int64_t r11_1 = *(rsi + 0x10);\n                int64_t r10_1 = *arg1;\n                int64_t rcx_1 = 0;\n                int64_t* rax_5;\n                int64_t rdi_1;\n                do\n                {\n                    rdi_1 = *(r11_1 + (rcx_1 << 3));\n                    rax_5 = ((rdi_1 << 4) + r10_1);\n                    if ((arg4 == rax_5[1] && arg3 == *rax_5))\n                    {\n                        break;\n                    }\n                    rcx_1 = (rcx_1 + 1);\n                } while (r9_1 != rcx_1);\n                if ((!(arg4 == rax_5[1] && arg3 == *rax_5)))\n                {\n                    goto label_40a585;\n                }\n                if (rdi_1 == -1)\n                {\n                    goto label_40a585;\n                }\n                rax_6 = sub_409b80(arg1, &var_48, rdx, arg3, arg4);\n                if (rax_6 == 0)\n                {\n                    goto label_40a543;\n                }\n                goto label_40a597;\n            }\n        label_40a585:\n            rax_6 = sub_40a050(&var_48, rsi);\n            if (rax_6 != 0)\n            {\n            label_40a597:\n                free(rax);\n                return rax_6;\n            }\n        label_40a543:\n            r12_1 = (r12_1 + 1);\n        } while (*(arg2 + 8) > r12_1);\n    }\n    free(arg2[1]);\n    int128_t zmm0 = var_48;\n    arg2[1] = rax;\n    *arg2 = zmm0;\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40a5c0",
            "funcStartAddr": "0x40a5c0",
            "funcEndAddr": "0x40a772",
            "decompiledFuncCode": "int64_t sub_40a5c0(int64_t* arg1, void* arg2, void* arg3)\n{\n    int64_t r10 = *(arg2 + 8);\n    if (r10 != 0)\n    {\n        int64_t r8_1 = *(arg3 + 8);\n        if (r8_1 != 0)\n        {\n            int64_t rax_1 = (r10 + r8_1);\n            int64_t rcx = arg1[1];\n            int64_t r13 = *arg1;\n            int64_t rdi = arg1[2];\n            int64_t rax_4;\n            int64_t rax_5;\n            if ((rax_1 + rcx) > r13)\n            {\n                int64_t r13_2 = (r13 + rax_1);\n                rax_5 = realloc(rdi, (r13_2 << 3));\n                rdi = rax_5;\n                if (rax_5 == 0)\n                {\n                    rax_4 = 0xc;\n                }\n                else\n                {\n                    rcx = arg1[1];\n                    r10 = *(arg2 + 8);\n                    arg1[2] = rax_5;\n                    *arg1 = r13_2;\n                    r8_1 = *(arg3 + 8);\n                }\n            }\n            if ((((rax_1 + rcx) > r13 && rax_5 != 0) || (rax_1 + rcx) <= r13))\n            {\n                int64_t r13_1 = *(arg2 + 0x10);\n                int64_t r11_1 = *(arg3 + 0x10);\n                int64_t rax_2 = (r8_1 - 1);\n                int64_t r10_1 = (r10 - 1);\n                int64_t rsi_1 = ((rcx + r10) + r8_1);\n                int64_t rcx_1 = (rcx - 1);\n                int64_t r8_2 = *(r13_1 + (r10_1 << 3));\n                int64_t rdx_1 = *(r11_1 + (rax_2 << 3));\n                while (true)\n                {\n                    bool cond:0_1 = r8_2 >= rdx_1;\n                    if (r8_2 != rdx_1)\n                    {\n                        int64_t temp1_1;\n                        while ((!cond:0_1))\n                        {\n                            temp1_1 = rax_2;\n                            rax_2 = (rax_2 - 1);\n                            if ((temp1_1 - 1) < 0)\n                            {\n                                break;\n                            }\n                        label_40a63d:\n                            rdx_1 = *(r11_1 + (rax_2 << 3));\n                            cond:0_1 = r8_2 >= rdx_1;\n                            if (r8_2 == rdx_1)\n                            {\n                                break;\n                            }\n                        }\n                        if (((!cond:0_1) && (temp1_1 - 1) < 0))\n                        {\n                            break;\n                        }\n                        if (cond:0_1)\n                        {\n                            int64_t temp0_1 = r10_1;\n                            r10_1 = (r10_1 - 1);\n                            if ((temp0_1 - 1) < 0)\n                            {\n                                break;\n                            }\n                            r8_2 = *(r13_1 + (r10_1 << 3));\n                            continue;\n                        }\n                    }\n                    int64_t r9_1;\n                    if (rcx_1 >= 0)\n                    {\n                        do\n                        {\n                            r9_1 = *(rdi + (rcx_1 << 3));\n                            if (r9_1 <= r8_2)\n                            {\n                                break;\n                            }\n                            rcx_1 = (rcx_1 - 1);\n                        } while (rcx_1 != -1);\n                    }\n                    if (((rcx_1 < 0 || ((rcx_1 >= 0 && r9_1 <= r8_2) && r9_1 != r8_2)) || (rcx_1 >= 0 && r9_1 > r8_2)))\n                    {\n                        rsi_1 = (rsi_1 - 1);\n                        *(rdi + (rsi_1 << 3)) = r8_2;\n                    }\n                    int64_t temp2_1 = r10_1;\n                    r10_1 = (r10_1 - 1);\n                    if ((temp2_1 - 1) >= 0)\n                    {\n                        int64_t temp3_1 = rax_2;\n                        rax_2 = (rax_2 - 1);\n                        if ((temp3_1 - 1) >= 0)\n                        {\n                            r8_2 = *(r13_1 + (r10_1 << 3));\n                            goto label_40a63d;\n                        }\n                    }\n                    break;\n                }\n                int64_t rcx_2 = arg1[1];\n                int64_t rdx_4 = ((*(arg2 + 8) + rcx_2) + *(arg3 + 8));\n                int64_t rax_3 = (rcx_2 - 1);\n                int64_t r9_2 = (rdx_4 - 1);\n                int64_t rdx_5 = (rdx_4 - rsi_1);\n                arg1[1] = (rcx_2 + rdx_5);\n                uint64_t rdx_6;\n                if ((rdx_5 <= 0 || (rdx_5 > 0 && rax_3 < 0)))\n                {\n                    rdx_6 = (rdx_5 << 3);\n                }\n                if ((rdx_5 > 0 && rax_3 >= 0))\n                {\n                    while (true)\n                    {\n                        int64_t r8_3 = *(rdi + (r9_2 << 3));\n                        int64_t rcx_4 = *(rdi + (rax_3 << 3));\n                        int64_t* r10_3 = (rdi + ((rax_3 + rdx_5) << 3));\n                        if (r8_3 <= rcx_4)\n                        {\n                            rax_3 = (rax_3 - 1);\n                            *r10_3 = rcx_4;\n                            if (rax_3 == -1)\n                            {\n                                rdx_6 = (rdx_5 << 3);\n                                rdi = arg1[2];\n                                break;\n                            }\n                        }\n                        else\n                        {\n                            r9_2 = (r9_2 - 1);\n                            *r10_3 = r8_3;\n                            int64_t temp4_1 = rdx_5;\n                            rdx_5 = (rdx_5 - 1);\n                            if (temp4_1 == 1)\n                            {\n                                rdi = arg1[2];\n                                rdx_6 = 0;\n                                break;\n                            }\n                        }\n                    }\n                }\n                memcpy(rdi, (rdi + (rsi_1 << 3)), rdx_6);\n                rax_4 = 0;\n            }\n            return rax_4;\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40a780",
            "funcStartAddr": "0x40a780",
            "funcEndAddr": "0x40a857",
            "decompiledFuncCode": "void* sub_40a780(int64_t* arg1, int32_t* arg2, int64_t* arg3, int64_t* arg4, \n    int128_t* arg5)\n{\n    int64_t rdi = *arg2;\n    int32_t rax;\n    void* rax_1;\n    int64_t* rax_2;\n    int64_t r9_3;\n    int64_t* r10;\n    if (rdi == 0xf)\n    {\n        rax_2 = malloc(0x3c8);\n        r10 = rax_2;\n        if (rax_2 == 0)\n        {\n            rax_1 = nullptr;\n        }\n        else\n        {\n            int64_t rax_3 = *arg1;\n            r9_3 = 8;\n            *arg1 = r10;\n            rdi = 0;\n            *r10 = rax_3;\n            rax = 1;\n        }\n    }\n    else\n    {\n        r10 = *arg1;\n        rax = (rdi + 1);\n        r9_3 = ((rdi << 6) + 8);\n    }\n    if ((rdi != 0xf || (rdi == 0xf && rax_2 != 0)))\n    {\n        *arg2 = rax;\n        rax_1 = (r10 + r9_3);\n        int64_t rsi_1 = (rdi << 6);\n        void* rdi_1 = (r10 + rsi_1);\n        *(rdi_1 + 8) = 0;\n        *(rdi_1 + 0x10) = arg3;\n        *(rdi_1 + 0x18) = arg4;\n        *(rdi_1 + 0x30) = *arg5;\n        *((r10 + rsi_1) + 0x3a) = (*((r10 + rsi_1) + 0x3a) & 0xf3);\n        *(rdi_1 + 0x20) = 0;\n        *(rdi_1 + 0x28) = 0;\n        *(rdi_1 + 0x40) = -1;\n        if (arg3 != 0)\n        {\n            *arg3 = rax_1;\n        }\n        if (arg4 != 0)\n        {\n            *arg4 = rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40a860",
            "funcStartAddr": "0x40a860",
            "funcEndAddr": "0x40a909",
            "decompiledFuncCode": "void*** sub_40a860(int64_t* arg1, void* arg2)\n{\n    int64_t* r13 = (arg2 + 0x70);\n    int32_t* r12 = (arg2 + 0x80);\n    int64_t* rbx = arg1;\n    void** rbp = *arg1;\n    void*** var_30;\n    int64_t* r14 = &var_30;\n    void*** rax_1;\n    while (true)\n    {\n        rax_1 = sub_40a780(r13, r12, nullptr, nullptr, &rbx[5]);\n        *r14 = rax_1;\n        if (rax_1 == 0)\n        {\n            break;\n        }\n        *rax_1 = rbp;\n        rbp = *r14;\n        *(rbp + 0x32) = (*(rbp + 0x32) | 4);\n        int64_t* rax_2 = rbx[1];\n        if (rax_2 != 0)\n        {\n            r14 = &rbp[1];\n            rbx = rax_2;\n        }\n        else\n        {\n            int64_t* rdx_1 = nullptr;\n            int64_t* rax_3;\n            while (true)\n            {\n                rax_3 = rbx[2];\n                if ((rax_3 != 0 && rax_3 != rdx_1))\n                {\n                    break;\n                }\n                int64_t* rax_4 = *rbx;\n                rbp = *rbp;\n                rdx_1 = rbx;\n                if (rax_4 == 0)\n                {\n                    break;\n                }\n                rbx = rax_4;\n            }\n            if ((!(rax_3 != 0 && rax_3 != rdx_1)))\n            {\n                rax_1 = var_30;\n                break;\n            }\n            r14 = &rbp[2];\n            rbx = rax_3;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40a910",
            "funcStartAddr": "0x40a910",
            "funcEndAddr": "0x40ab2a",
            "decompiledFuncCode": "int64_t* sub_40a910(int32_t* arg1, int64_t* arg2, void* arg3)\n{\n    void* rbx = *arg2;\n    int64_t* rbp = *(arg3 + 8);\n    void* var_60_1;\n    void var_48;\n    void* r11_1;\n    void* r13_1;\n    void* r15_2;\n    void* rbx_1;\n    if ((arg2[7] & 0x10) == 0)\n    {\n        r13_1 = (rbx + 0x70);\n        char var_40_7 = 8;\n        var_60_1 = (rbx + 0x80);\n        rbx_1 = sub_40a780(r13_1, (rbx + 0x80), nullptr, nullptr, &var_48);\n        char var_40_8 = 9;\n        void* rax_18 = sub_40a780(r13_1, (rbx + 0x80), nullptr, nullptr, &var_48);\n        r15_2 = rax_18;\n        r11_1 = rax_18;\n        if (rbp == 0)\n        {\n            goto label_40a9da;\n        }\n    }\n    else\n    {\n        int64_t rax;\n        if (rbp != 0)\n        {\n            rax = *(arg3 + 0x28);\n            if ((rax <= 0x3f && (TEST_BITQ(*(rbx + 0xa0), rax))))\n            {\n                r13_1 = (rbx + 0x70);\n                char var_40_1 = 8;\n                var_60_1 = (rbx + 0x80);\n                rbx_1 = sub_40a780(r13_1, (rbx + 0x80), nullptr, nullptr, &var_48);\n                char var_40_2 = 9;\n                r15_2 = sub_40a780(r13_1, (rbx + 0x80), nullptr, nullptr, &var_48);\n            }\n        }\n        else\n        {\n            r13_1 = (rbx + 0x70);\n            char var_40_5 = 8;\n            var_60_1 = (rbx + 0x80);\n            rbx_1 = sub_40a780(r13_1, (rbx + 0x80), nullptr, nullptr, &var_48);\n            char var_40_6 = 9;\n            void* rax_15 = sub_40a780(r13_1, (rbx + 0x80), nullptr, nullptr, &var_48);\n            r11_1 = rax_15;\n            r15_2 = rax_15;\n        label_40a9da:\n            char var_40_4 = 0x10;\n            void* rax_5 = sub_40a780(r13_1, var_60_1, rbx_1, r11_1, &var_48);\n            rbp = rax_5;\n            if (rax_5 == 0)\n            {\n            label_40ab1d:\n                rbp = nullptr;\n                *arg1 = 0xc;\n            }\n            else\n            {\n                if (r11_1 == 0)\n                {\n                    goto label_40ab1d;\n                }\n                if (rbx_1 == 0)\n                {\n                    goto label_40ab1d;\n                }\n                if (r15_2 == 0)\n                {\n                    goto label_40ab1d;\n                }\n                int64_t rax_6 = *(arg3 + 0x28);\n                *(r15_2 + 0x28) = rax_6;\n                *(rbx_1 + 0x28) = rax_6;\n                char rax_8 = (*(arg3 + 0x32) & 8);\n                *(r15_2 + 0x32) = ((*(r15_2 + 0x32) & 0xf7) | rax_8);\n                *(rbx_1 + 0x32) = ((*(rbx_1 + 0x32) & 0xf7) | rax_8);\n            }\n        }\n        if ((((rbp != 0 && rax > 0x3f) || ((rbp != 0 && rax <= 0x3f) && (!(TEST_BITQ(*(rbx + 0xa0), rax))))) || rbp == 0))\n        {\n            return rbp;\n        }\n    }\n    char var_40_3 = 0x10;\n    r11_1 = sub_40a780(r13_1, var_60_1, rbp, r15_2, &var_48);\n    goto label_40a9da;\n}\n\n"
        },
        {
            "funcName": "sub_40ab30",
            "funcStartAddr": "0x40ab30",
            "funcEndAddr": "0x40abab",
            "decompiledFuncCode": "uint64_t sub_40ab30(int64_t* arg1, void* arg2)\n{\n    void* rdx = *(arg2 + 8);\n    int32_t var_1c = 0;\n    if ((rdx != 0 && *(rdx + 0x30) == 0x11))\n    {\n        int64_t* rax_2 = sub_40a910(&var_1c, arg1, rdx);\n        *(arg2 + 8) = rax_2;\n        if (rax_2 != 0)\n        {\n            *rax_2 = arg2;\n        }\n    }\n    void* rdx_1 = *(arg2 + 0x10);\n    if ((rdx_1 != 0 && *(rdx_1 + 0x30) == 0x11))\n    {\n        int64_t* rax_3 = sub_40a910(&var_1c, arg1, rdx_1);\n        *(arg2 + 0x10) = rax_3;\n        if (rax_3 != 0)\n        {\n            *rax_3 = arg2;\n        }\n    }\n    return var_1c;\n}\n\n"
        },
        {
            "funcName": "sub_40abb0",
            "funcStartAddr": "0x40abb0",
            "funcEndAddr": "0x40ac2f",
            "decompiledFuncCode": "int64_t sub_40abb0(int64_t* arg1, void* arg2)\n{\n    int64_t rdx_1 = *(arg2 + 8);\n    arg1[1] = rdx_1;\n    if (rdx_1 <= 0)\n    {\n        arg1[2] = 0;\n        *arg1 = 0;\n        return 0;\n    }\n    int64_t rbx = (rdx_1 << 3);\n    *arg1 = rdx_1;\n    int64_t rax = malloc(rbx);\n    arg1[2] = rax;\n    int64_t rax_1;\n    if (rax == 0)\n    {\n        arg1[1] = 0;\n        rax_1 = 0xc;\n        *arg1 = 0;\n    }\n    else\n    {\n        memcpy(rax, *(arg2 + 0x10), rbx);\n        rax_1 = 0;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40ac30",
            "funcStartAddr": "0x40ac30",
            "funcEndAddr": "0x40adb2",
            "decompiledFuncCode": "int64_t sub_40ac30(int64_t* arg1, void* arg2, void* arg3)\n{\n    int64_t rax_1;\n    if (arg2 != 0)\n    {\n        int64_t r12_1 = *(arg2 + 8);\n        if ((arg3 != 0 && r12_1 > 0))\n        {\n            int64_t r15_1 = *(arg3 + 8);\n            if (r15_1 <= 0)\n            {\n                goto label_40ad41;\n            }\n            int64_t rdi = (r12_1 + r15_1);\n            *arg1 = rdi;\n            int64_t* rax = malloc((rdi << 3));\n            arg1[2] = rax;\n            if (rax != 0)\n            {\n                int64_t* rdi_2 = rax;\n                int64_t r10 = *(arg2 + 0x10);\n                int64_t r14 = 0;\n                int64_t rcx = 0;\n                int64_t rdx = 0;\n                while (true)\n                {\n                    int64_t* rsi = (r10 + (rdx << 3));\n                    if (r15_1 <= rcx)\n                    {\n                        int64_t r12_2 = (r12_1 - rdx);\n                        r14 = (r14 + r12_2);\n                        memcpy(rdi_2, rsi, (r12_2 << 3));\n                        break;\n                    }\n                    int64_t r9_1 = *(arg3 + 0x10);\n                    int64_t rsi_1 = *rsi;\n                    r14 = (r14 + 1);\n                    int64_t r8_1 = *(r9_1 + (rcx << 3));\n                    bool cond:0_1 = rsi_1 == r8_1;\n                    if (rsi_1 <= r8_1)\n                    {\n                        r8_1 = cond:0_1;\n                        *rdi_2 = rsi_1;\n                        rdx = (rdx + 1);\n                        rcx = (rcx + r8_1);\n                    }\n                    else\n                    {\n                        rcx = (rcx + 1);\n                        *rdi_2 = r8_1;\n                    }\n                    r12_1 = *(arg2 + 8);\n                    rdi_2 = &rdi_2[1];\n                    if (rdx >= r12_1)\n                    {\n                        int64_t rdx_2 = *(arg3 + 8);\n                        if (rcx < rdx_2)\n                        {\n                            void* rdi_4 = &rax[r14];\n                            int64_t rbx_3 = (rdx_2 - rcx);\n                            r14 = (r14 + rbx_3);\n                            memcpy(rdi_4, (r9_1 + (rcx << 3)), (rbx_3 << 3));\n                        }\n                        break;\n                    }\n                }\n                arg1[1] = r14;\n                return 0;\n            }\n            rax_1 = 0xc;\n            goto label_40ad28;\n        }\n        if (r12_1 > 0)\n        {\n            goto label_40ad41;\n        }\n    }\n    if (arg3 == 0)\n    {\n    label_40ad09:\n        arg1[2] = 0;\n        rax_1 = 0;\n        *arg1 = 0;\n    label_40ad28:\n        return rax_1;\n    }\n    if (*(arg3 + 8) <= 0)\n    {\n        goto label_40ad09;\n    }\n    arg2 = arg3;\nlabel_40ad41:\n    /* tailcall */\n    return sub_40abb0(arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40adc0",
            "funcStartAddr": "0x40adc0",
            "funcEndAddr": "0x40b0c0",
            "decompiledFuncCode": "int64_t* sub_40adc0(int32_t* arg1, void* arg2, void* arg3, int32_t arg4)\n{\n    int64_t r10 = *(arg3 + 8);\n    bool cond:0 = r10 <= 0;\n    int64_t* r14_1;\n    if (r10 == 0)\n    {\n        *arg1 = 0;\n        r14_1 = nullptr;\n    }\n    else\n    {\n        int64_t r12_1 = (arg4 + r10);\n        if ((!cond:0))\n        {\n            int64_t rax_1 = *(arg3 + 0x10);\n            int64_t r10_1 = (rax_1 + (r10 << 3));\n            do\n            {\n                r12_1 = (r12_1 + *rax_1);\n                rax_1 = (rax_1 + 8);\n            } while (r10_1 != rax_1);\n        }\n        char r15_1 = arg4;\n        int64_t* rax_5 = (*(arg2 + 0x40) + ((*(arg2 + 0x88) & r12_1) * 0x18));\n        int64_t r11_1 = *rax_5;\n        if (r11_1 > 0)\n        {\n            int64_t rbx_1 = rax_5[2];\n            int64_t r10_2 = 0;\n            do\n            {\n                r14_1 = *(rbx_1 + (r10_2 << 3));\n                if (((*r14_1 == r12_1 && (r14_1[0xd] & 0xf) == arg4) && sub_407f60(r14_1[0xa], arg3) != 0))\n                {\n                    return r14_1;\n                }\n                r10_2 = (r10_2 + 1);\n            } while (r10_2 != r11_1);\n        }\n        int64_t* rax_10 = calloc(0x70, 1);\n        r14_1 = rax_10;\n        int32_t rax_12;\n        int32_t rax_31;\n        if (rax_10 != 0)\n        {\n            void* rax_11 = &rax_10[1];\n            rax_12 = sub_40abb0(rax_11, arg3);\n            if (rax_12 != 0)\n            {\n                free(r14_1);\n            }\n            else\n            {\n                bool cond:1_1 = *(arg3 + 8) <= 0;\n                r14_1[0xd] = ((r14_1[0xd] & 0xf0) | (r15_1 & 0xf));\n                r14_1[0xa] = rax_11;\n                if ((!cond:1_1))\n                {\n                    int64_t* rax_17 = &r14_1[3];\n                    int64_t r10_3 = 0;\n                    int64_t r14_2 = 0;\n                    do\n                    {\n                        void* rax_21 = ((*(*(arg3 + 0x10) + (r14_2 << 3)) << 4) + *arg2);\n                        uint32_t rsi_2 = *(rax_21 + 8);\n                        uint32_t rbx_3;\n                        rbx_3 = ((*(rax_21 + 8) >> 8) & 0x3ff);\n                        uint32_t rdi_2 = rbx_3;\n                        if ((rsi_2 != 1 || (rsi_2 == 1 && rdi_2 != 0)))\n                        {\n                            uint32_t rdx_3 = r14_1[0xd];\n                            uint32_t rax_22;\n                            rax_22 = (*(rax_21 + 0xa) >> 4);\n                            uint32_t r11_2;\n                            r11_2 = (rdx_3 >> 5);\n                            char rax_26 = ((((rax_22 | r11_2) & 1) << 5) | (rdx_3 & 0xdf));\n                            r14_1[0xd] = rax_26;\n                            if (rsi_2 == 2)\n                            {\n                                r14_1[0xd] = (rax_26 | 0x10);\n                            }\n                            else if (rsi_2 == 4)\n                            {\n                                r14_1[0xd] = (rax_26 | 0x40);\n                            }\n                            if (rdi_2 != 0)\n                            {\n                                if (rax_11 == r14_1[0xa])\n                                {\n                                    int64_t* rax_34 = malloc(0x18);\n                                    r14_1[0xa] = rax_34;\n                                    if (rax_34 == 0)\n                                    {\n                                        sub_4096e0(r14_1);\n                                        goto label_40b01d;\n                                    }\n                                    if (sub_40abb0(rax_34, arg3) != 0)\n                                    {\n                                        goto label_40b01d;\n                                    }\n                                    r14_1[0xd] = (r14_1[0xd] | 0x80);\n                                    r10_3 = 0;\n                                }\n                                if ((rbx_3 & 1) != 0)\n                                {\n                                    if ((r15_1 & 1) == 0)\n                                    {\n                                    label_40afb3:\n                                        int64_t rdx_6 = (r14_2 - r10_3);\n                                        if ((r14_2 - r10_3) >= 0)\n                                        {\n                                            int64_t rax_29 = r14_1[2];\n                                            if (rdx_6 < rax_29)\n                                            {\n                                                r14_1[2] = (rax_29 - 1);\n                                                sub_409c80(&r14_1[2], rax_17, rdx_6);\n                                            }\n                                        }\n                                        r10_3 = (r10_3 + 1);\n                                    }\n                                    else if ((rbx_3 & 2) != 0)\n                                    {\n                                        goto label_40afb3;\n                                    }\n                                }\n                                else if (((rbx_3 & 2) != 0 && (r15_1 & 1) != 0))\n                                {\n                                    goto label_40afb3;\n                                }\n                                if (((rbx_3 & 1) == 0 || ((rbx_3 & 1) != 0 && (r15_1 & 1) != 0)))\n                                {\n                                    if (((rbx_3 & 0x10) != 0 && (r15_1 & 2) == 0))\n                                    {\n                                        goto label_40afb3;\n                                    }\n                                    if (((rbx_3 & 0x40) != 0 && (r15_1 & 4) == 0))\n                                    {\n                                        goto label_40afb3;\n                                    }\n                                }\n                            }\n                        }\n                        r14_2 = (r14_2 + 1);\n                    } while (r14_2 < *(arg3 + 8));\n                }\n                rax_31 = sub_408630(arg2, r14_1, r12_1);\n                if (rax_31 != 0)\n                {\n                    sub_4096e0(r14_1);\n                }\n            }\n        }\n        if ((((rax_10 != 0 && rax_12 != 0) || ((rax_10 != 0 && rax_12 == 0) && rax_31 != 0)) || rax_10 == 0))\n        {\n        label_40b01d:\n            r14_1 = nullptr;\n            *arg1 = 0xc;\n        }\n    }\n    return r14_1;\n}\n\n"
        },
        {
            "funcName": "sub_40b0c0",
            "funcStartAddr": "0x40b0c0",
            "funcEndAddr": "0x40b2a8",
            "decompiledFuncCode": "int64_t* sub_40b0c0(int32_t* arg1, int64_t* arg2, void* arg3)\n{\n    int64_t rbp = *(arg3 + 8);\n    bool cond:0 = rbp <= 0;\n    int64_t* rbx_1;\n    if (rbp == 0)\n    {\n        *arg1 = 0;\n        rbx_1 = nullptr;\n    }\n    else\n    {\n        if ((!cond:0))\n        {\n            int64_t rax_1 = *(arg3 + 0x10);\n            int64_t rcx_1 = (rax_1 + (rbp << 3));\n            do\n            {\n                rbp = (rbp + *rax_1);\n                rax_1 = (rax_1 + 8);\n            } while (rcx_1 != rax_1);\n        }\n        int64_t* rax_5 = (arg2[8] + ((arg2[0x11] & rbp) * 0x18));\n        int64_t r10_1 = *rax_5;\n        if (r10_1 > 0)\n        {\n            int64_t r11_1 = rax_5[2];\n            int64_t r9_1 = 0;\n            do\n            {\n                rbx_1 = *(r11_1 + (r9_1 << 3));\n                if ((*rbx_1 == rbp && sub_407f60(&rbx_1[1], arg3) != 0))\n                {\n                    return rbx_1;\n                }\n                r9_1 = (r9_1 + 1);\n            } while (r10_1 != r9_1);\n        }\n        int64_t* rax_7 = calloc(0x70, 1);\n        rbx_1 = rax_7;\n        int32_t rax_8;\n        int32_t rax_18;\n        if (rax_7 != 0)\n        {\n            void* r15_1 = &rax_7[1];\n            rax_8 = sub_40abb0(r15_1, arg3);\n            if (rax_8 != 0)\n            {\n                free(rbx_1);\n            }\n            else\n            {\n                int64_t rax_9 = *(arg3 + 8);\n                rbx_1[0xa] = r15_1;\n                if (rax_9 > 0)\n                {\n                    int64_t* rsi_2 = *(arg3 + 0x10);\n                    int64_t r8_1 = *arg2;\n                    void* r9_2 = &rsi_2[rax_9];\n                    while (true)\n                    {\n                        void* rax_12 = ((*rsi_2 << 4) + r8_1);\n                        uint32_t rdi_2 = *(rax_12 + 8);\n                        if (rdi_2 != 1)\n                        {\n                            uint32_t rcx_2 = rbx_1[0xd];\n                            uint32_t rdx_1;\n                            rdx_1 = (*(rax_12 + 0xa) >> 4);\n                            uint32_t r10_2;\n                            r10_2 = (rcx_2 >> 5);\n                            char rdx_5 = ((((rdx_1 | r10_2) & 1) << 5) | (rcx_2 & 0xdf));\n                            rbx_1[0xd] = rdx_5;\n                            if (rdi_2 != 2)\n                            {\n                                if (rdi_2 == 4)\n                                {\n                                    rbx_1[0xd] = (rdx_5 | 0x40);\n                                    goto label_40b1db;\n                                }\n                                if (rdi_2 == 0xc)\n                                {\n                                    goto label_40b220;\n                                }\n                                if ((*(rax_12 + 8) & 0x3ff00) == 0)\n                                {\n                                    goto label_40b1db;\n                                }\n                                goto label_40b220;\n                            }\n                            rbx_1[0xd] = (rdx_5 | 0x10);\n                        label_40b1db:\n                            rsi_2 = &rsi_2[1];\n                            if (r9_2 == rsi_2)\n                            {\n                                break;\n                            }\n                        }\n                        else\n                        {\n                            if ((*(rax_12 + 8) & 0x3ff00) == 0)\n                            {\n                                goto label_40b1db;\n                            }\n                            uint32_t rdx_7 = rbx_1[0xd];\n                            uint32_t rax_13;\n                            rax_13 = (*(rax_12 + 0xa) >> 4);\n                            uint32_t rcx_4;\n                            rcx_4 = (rdx_7 >> 5);\n                            rbx_1[0xd] = ((((rax_13 | rcx_4) & 1) << 5) | (rdx_7 & 0xdf));\n                        label_40b220:\n                            rsi_2 = &rsi_2[1];\n                            rbx_1[0xd] = (rbx_1[0xd] | 0x80);\n                            if (r9_2 == rsi_2)\n                            {\n                                break;\n                            }\n                        }\n                    }\n                }\n                rax_18 = sub_408630(arg2, rbx_1, rbp);\n                if (rax_18 != 0)\n                {\n                    sub_4096e0(rbx_1);\n                }\n            }\n        }\n        if ((((rax_7 != 0 && rax_8 != 0) || ((rax_7 != 0 && rax_8 == 0) && rax_18 != 0)) || rax_7 == 0))\n        {\n            *arg1 = 0xc;\n            rbx_1 = nullptr;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_40b2b0",
            "funcStartAddr": "0x40b2b0",
            "funcEndAddr": "0x40b358",
            "decompiledFuncCode": "uint64_t sub_40b2b0(int64_t* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    if (arg4 <= 0)\n    {\n        return 0;\n    }\n    int64_t rbx = 0;\n    uint64_t rax_1;\n    while (true)\n    {\n        void* rsi_2 = *(arg2 + (rbx << 3));\n        void* rdx_2 = *(arg3 + (rbx << 3));\n        if (rsi_2 == 0)\n        {\n            *(arg2 + (rbx << 3)) = rdx_2;\n            rbx = (rbx + 1);\n            if (arg4 != rbx)\n            {\n                continue;\n            }\n        }\n        else\n        {\n            if (rdx_2 != 0)\n            {\n                void var_48;\n                rax_1 = sub_40ac30(&var_48, (rsi_2 + 8), (rdx_2 + 8));\n                int32_t var_4c = rax_1;\n                if (rax_1 != 0)\n                {\n                    break;\n                }\n                *(arg2 + (rbx << 3)) = sub_40b0c0(&var_4c, arg1, &var_48);\n                int64_t var_38;\n                free(var_38);\n                rax_1 = var_4c;\n                if (rax_1 != 0)\n                {\n                    break;\n                }\n            }\n            rbx = (rbx + 1);\n            if (arg4 != rbx)\n            {\n                continue;\n            }\n        }\n        rax_1 = 0;\n        break;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40b360",
            "funcStartAddr": "0x40b360",
            "funcEndAddr": "0x40b6e2",
            "decompiledFuncCode": "uint64_t sub_40b360(void* arg1, int64_t* arg2, int64_t arg3, int64_t arg4, \n    int32_t arg5)\n{\n    int64_t r11 = 0;\n    int64_t rbp = *(arg1 + 0xc8);\n    int64_t r9_4;\n    for (int64_t rax = rbp; r11 < rax; rax = r9_4)\n    {\n        int64_t r10_1 = (r11 + rax);\n        int64_t r12_1 = *(arg1 + 0xd8);\n        r9_4 = (((r10_1 >> 0x3f) + r10_1) >> 1);\n        int64_t rbx_1;\n        if (arg3 > *((r12_1 + (r9_4 * 0x28)) + 8))\n        {\n            rbx_1 = r9_4;\n            r9_4 = rax;\n        }\n        else\n        {\n            int64_t rax_4;\n            for (; r9_4 > r11; r9_4 = rax_4)\n            {\n                int64_t r10_3 = (r9_4 + r11);\n                rax_4 = (((r10_3 >> 0x3f) + r10_3) >> 1);\n                rbx_1 = rax_4;\n                if (arg3 > *((r12_1 + (rax_4 * 0x28)) + 8))\n                {\n                    break;\n                }\n            }\n            if (r9_4 <= r11)\n            {\n                break;\n            }\n        }\n        r11 = (rbx_1 + 1);\n    }\n    uint64_t rax_22;\n    if (rbp > r11)\n    {\n        void* rax_5 = *(arg1 + 0xd8);\n        int64_t rbx_2 = (r11 * 0x28);\n        if ((*((rax_5 + rbx_2) + 8) == arg3 && r11 != -1))\n        {\n            int64_t* r13_1 = *(arg1 + 0x98);\n            int64_t* var_98_1 = &arg2[2];\n            while (true)\n            {\n                int64_t* r15_1 = (rax_5 + rbx_2);\n                int32_t var_5c;\n                int64_t var_58;\n                int64_t* var_48;\n                int64_t rax_13;\n                int64_t rax_17;\n                int64_t* rax_18;\n                int64_t r14_2;\n                int64_t r14_3;\n                do\n                {\n                    int64_t r9_7 = *r15_1;\n                    int64_t r10_10 = arg2[1];\n                    rax_13 = sub_409b10(r10_10, var_98_1, r9_7);\n                    if (rax_13 != 0)\n                    {\n                        r14_2 = ((r15_1[3] + arg3) - r15_1[2]);\n                        if (arg3 != r14_2)\n                        {\n                            int64_t rcx_2 = *(r13_1[3] + (r9_7 << 3));\n                            int64_t rax_7 = (r14_2 << 3);\n                            int64_t** r10_6 = (*(arg1 + 0xb8) + rax_7);\n                            int64_t* r9_6 = *r10_6;\n                            int64_t rax_8;\n                            char rax_10;\n                            int64_t* rax_23;\n                            int64_t** r10_8;\n                            if (r9_6 == 0)\n                            {\n                                var_58 = 1;\n                                int64_t var_50_2 = 1;\n                                rax_23 = malloc(8);\n                                var_48 = rax_23;\n                                if (rax_23 != 0)\n                                {\n                                    var_5c = 0;\n                                    r10_8 = r10_6;\n                                    *rax_23 = rcx_2;\n                                }\n                            }\n                            else\n                            {\n                                rax_8 = sub_409b10(r9_6[2], &r9_6[3], rcx_2);\n                                if (rax_8 == 0)\n                                {\n                                    var_5c = sub_40abb0(&var_58, &r9_6[1]);\n                                    rax_10 = sub_408500(&var_58, rcx_2);\n                                    if ((var_5c != 0 || (var_5c == 0 && rax_10 != 1)))\n                                    {\n                                        free(var_48);\n                                        rax_22 = var_5c;\n                                        if (rax_22 != 0)\n                                        {\n                                            return rax_22;\n                                        }\n                                    }\n                                }\n                            }\n                            if (((r9_6 == 0 && rax_23 == 0) || ((r9_6 != 0 && rax_8 == 0) && (var_5c != 0 || (var_5c == 0 && rax_10 != 1)))))\n                            {\n                                return 0xc;\n                            }\n                            if ((((r9_6 != 0 && rax_8 == 0) && var_5c == 0) && rax_10 == 1))\n                            {\n                                r10_8 = (rax_7 + *(arg1 + 0xb8));\n                            }\n                            if (((r9_6 == 0 && rax_23 != 0) || (((r9_6 != 0 && rax_8 == 0) && var_5c == 0) && rax_10 == 1)))\n                            {\n                                *r10_8 = sub_40b0c0(&var_5c, r13_1, &var_58);\n                                free(var_48);\n                                if (*(*(arg1 + 0xb8) + (r14_2 << 3)) == 0)\n                                {\n                                    rax_22 = var_5c;\n                                    if (rax_22 != 0)\n                                    {\n                                        return rax_22;\n                                    }\n                                }\n                            }\n                        }\n                        else\n                        {\n                            r14_3 = **((r13_1[5] + (r9_7 * 0x18)) + 0x10);\n                            rax_17 = sub_409b10(r10_10, var_98_1, r14_3);\n                            if (rax_17 == 0)\n                            {\n                                var_58 = 1;\n                                int64_t var_50_1 = 1;\n                                rax_18 = malloc(8);\n                                var_48 = rax_18;\n                                break;\n                            }\n                        }\n                    }\n                    r15_1 = &r15_1[5];\n                } while (r15_1[-1] != 0);\n                if ((!((rax_13 != 0 && arg3 == r14_2) && rax_17 == 0)))\n                {\n                    goto label_40b660;\n                }\n                int32_t rax_19;\n                if (rax_18 == 0)\n                {\n                    int64_t var_50_3 = 0;\n                    rax_19 = 0xc;\n                    var_58 = 0;\n                }\n                else\n                {\n                    *rax_18 = r14_3;\n                    rax_19 = 0;\n                }\n                var_5c = rax_19;\n                int32_t rax_20 = sub_40a480(r13_1, &var_58, arg4, arg5);\n                int32_t rax_21 = sub_40a050(arg2, &var_58);\n                free(var_48);\n                rax_22 = var_5c;\n                if (((rax_20 | rax_21) | rax_22) != 0)\n                {\n                    if (rax_22 == 0)\n                    {\n                        rax_22 = rax_21;\n                        if (rax_20 != 0)\n                        {\n                            rax_22 = rax_20;\n                        }\n                    }\n                    break;\n                }\n                rax_5 = *(arg1 + 0xd8);\n            }\n            goto label_40b670;\n        }\n    }\nlabel_40b660:\n    rax_22 = 0;\nlabel_40b670:\n    return rax_22;\n}\n\n"
        },
        {
            "funcName": "sub_40b6f0",
            "funcStartAddr": "0x40b6f0",
            "funcEndAddr": "0x40b831",
            "decompiledFuncCode": "int64_t sub_40b6f0(void* arg1, int64_t* arg2, int64_t* arg3, int64_t arg4)\n{\n    void* r12 = *(arg1 + 0x98);\n    int64_t rax_7;\n    if (*arg2 > 0)\n    {\n        int64_t rbx_1 = 0;\n        do\n        {\n            int64_t rbp_1 = *(*arg3 + (rbx_1 << 3));\n            int64_t* rax_4 = ((rbp_1 << 4) + *r12);\n            if (rax_4[1] == 8)\n            {\n                int64_t rax_5 = *rax_4;\n                if ((rax_5 <= 0x3f && (TEST_BITQ(*(r12 + 0xa0), rax_5))))\n                {\n                    int64_t rcx_1 = *(arg1 + 0xe8);\n                    int64_t r9_1 = *(arg1 + 0xf8);\n                    int64_t rax_9;\n                    if (rcx_1 == *(arg1 + 0xf0))\n                    {\n                        int64_t rax_8 = (rcx_1 + rcx_1);\n                        rax_9 = realloc(r9_1, (rcx_1 << 4));\n                        r9_1 = rax_9;\n                        if (rax_9 != 0)\n                        {\n                            *(arg1 + 0xf8) = rax_9;\n                            rcx_1 = *(arg1 + 0xe8);\n                            *(arg1 + 0xf0) = rax_8;\n                        }\n                    }\n                    if (((rcx_1 == *(arg1 + 0xf0) && rax_9 != 0) || rcx_1 != *(arg1 + 0xf0)))\n                    {\n                        int64_t* rax_6 = calloc(1, 0x30);\n                        *(r9_1 + (rcx_1 << 3)) = rax_6;\n                        if (rax_6 != 0)\n                        {\n                            *rax_6 = arg4;\n                            rbx_1 = (rbx_1 + 1);\n                            rax_6[1] = rbp_1;\n                            *(arg1 + 0xe8) = (rcx_1 + 1);\n                            if (rbx_1 >= *arg2)\n                            {\n                                break;\n                            }\n                            continue;\n                        }\n                    }\n                    rax_7 = 0xc;\n                    goto label_40b7e0;\n                }\n            }\n            rbx_1 = (rbx_1 + 1);\n        } while (rbx_1 < *arg2);\n    }\n    rax_7 = 0;\nlabel_40b7e0:\n    return rax_7;\n}\n\n"
        },
        {
            "funcName": "sub_40b840",
            "funcStartAddr": "0x40b840",
            "funcEndAddr": "0x40b92e",
            "decompiledFuncCode": "uint64_t sub_40b840(void* arg1, int64_t arg2, int32_t arg3, int32_t arg4 @ rax)\n{\n    if (arg2 < 0)\n    {\n        return *(arg1 + 0x70);\n    }\n    uint64_t rax_1;\n    if (*(arg1 + 0x58) == arg2)\n    {\n        rax_1 = (((arg4 - arg4) & 2) + 8);\n    }\n    else if (*(arg1 + 0x90) <= 1)\n    {\n        uint64_t rax_3 = *(*(arg1 + 8) + arg2);\n        char rcx_1 = rax_3;\n        rax_1 = 1;\n        if (((*(*(arg1 + 0x80) + ((rax_3 >> 6) << 3)) >> rcx_1) & 1) == 0)\n        {\n            rax_1 = 0;\n            if (rcx_1 == 0xa)\n            {\n            label_40b8da:\n                int32_t rax_7;\n                rax_7 = *(arg1 + 0x8d) != 0;\n                return (rax_7 + rax_7);\n            }\n        }\n    }\n    else\n    {\n        int64_t rax = *(arg1 + 0x10);\n        wint_t rbx_1;\n        while (true)\n        {\n            rbx_1 = *(rax + (arg2 << 2));\n            if (rbx_1 != 0xffffffff)\n            {\n                break;\n            }\n            arg2 = (arg2 - 1);\n            if (arg2 == -1)\n            {\n                return *(arg1 + 0x70);\n            }\n        }\n        int32_t rax_12;\n        if (*(arg1 + 0x8e) != 0)\n        {\n            rax_12 = iswalnum(rbx_1);\n            if ((rax_12 != 0 || (rax_12 == 0 && rbx_1 == 0x5f)))\n            {\n                rax_1 = 1;\n            }\n        }\n        if ((*(arg1 + 0x8e) == 0 || ((*(arg1 + 0x8e) != 0 && rax_12 == 0) && rbx_1 != 0x5f)))\n        {\n            rax_1 = 0;\n            if (rbx_1 == 0xa)\n            {\n                goto label_40b8da;\n            }\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40b930",
            "funcStartAddr": "0x40b930",
            "funcEndAddr": "0x40ba5b",
            "decompiledFuncCode": "uint64_t sub_40b930(void* arg1, char* arg2, int64_t arg3)\n{\n    char rcx = *(arg1 + 8)[arg3];\n    char rax = arg2[8];\n    bool cond:0 = rax <= 3;\n    if (rax == 3)\n    {\n        if (((*(*arg2 + ((rcx >> 6) << 3)) >> rcx) & 1) == 0)\n        {\n            return 0;\n        }\n    }\n    else if (cond:0)\n    {\n        if (rax != 1)\n        {\n            return 0;\n        }\n        if (*arg2 != rcx)\n        {\n        label_40b9f5:\n            return 0;\n        }\n    }\n    else\n    {\n        if (rax != 5)\n        {\n            if (rax != 7)\n            {\n                return 0;\n            }\n            if (rcx < 0)\n            {\n                goto label_40b9f5;\n            }\n        }\n        if (rcx == 0xa)\n        {\n            if ((*(*(arg1 + 0x98) + 0xd8) & 0x40) == 0)\n            {\n                return 0;\n            }\n        }\n        else if ((rcx == 0 && (*(*(arg1 + 0x98) + 0xd8) & 0x80) != 0))\n        {\n            goto label_40b9f5;\n        }\n    }\n    int32_t rbx = *(arg2 + 8);\n    uint64_t rax_3 = 1;\n    if ((rbx & 0x3ff00) != 0)\n    {\n        uint32_t rbx_1 = (rbx >> 8);\n        int32_t rax_4 = sub_40b840(arg1, arg3, *(arg1 + 0xa0), 1);\n        uint32_t rcx_2;\n        rcx_2 = (rbx_1 & 0x3ff);\n        if ((rbx_1 & 4) != 0)\n        {\n            rax_3 = 0;\n            if (((rax_4 & 1) != 0 && (rbx_1 & 8) != 0))\n            {\n                return 0;\n            }\n        }\n        else if (((rbx_1 & 8) != 0 && (rax_4 & 1) != 0))\n        {\n            return 0;\n        }\n        if ((((rbx_1 & 4) != 0 && (rax_4 & 1) != 0) || (rbx_1 & 4) == 0))\n        {\n            if ((rcx_2 & 0x20) != 0)\n            {\n                rax_3 = 0;\n            }\n            if (((rcx_2 & 0x20) == 0 || ((rcx_2 & 0x20) != 0 && (rax_4 & 2) != 0)))\n            {\n                rax_3 = 1;\n                int32_t rdx_3 = ((rax_4 >> 3) & 1);\n                if ((rcx_2 & 0x80) != 0)\n                {\n                    rax_3 = rdx_3;\n                }\n            }\n        }\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_40ba60",
            "funcStartAddr": "0x40ba60",
            "funcEndAddr": "0x40bb28",
            "decompiledFuncCode": "int64_t sub_40ba60(void* arg1, int64_t arg2, int64_t* arg3, int64_t arg4)\n{\n    int32_t rax;\n    int32_t rax_1 = sub_40b840(arg1, arg4, *(arg1 + 0xa0), rax);\n    if (arg2 > 0)\n    {\n        int64_t r9_1 = *arg3;\n        int32_t rax_2 = (rax_1 & 1);\n        int64_t rsi_1 = 0;\n        int32_t rbp_2 = (rax_1 & 8);\n        int32_t r11_2 = (rax_1 & 2);\n        int64_t r8_1 = **(arg1 + 0x98);\n        do\n        {\n            int64_t rax_3 = *(r9_1 + (rsi_1 << 3));\n            void* rdx_4 = ((rax_3 << 4) + r8_1);\n            uint32_t rcx_1 = (*(rdx_4 + 8) >> 8);\n            uint32_t rdi;\n            rdi = (rcx_1 & 0x3ff);\n            if (*(rdx_4 + 8) == 2)\n            {\n                if (rdi == 0)\n                {\n                label_40bb00:\n                    return rax_3;\n                }\n                if ((((rdi & 0x20) == 0 || ((rdi & 0x20) != 0 && r11_2 != 0)) && ((((rcx_1 & 4) == 0 && (rcx_1 & 8) == 0) || (((rcx_1 & 4) == 0 && (rcx_1 & 8) != 0) && rax_2 == 0)) || (((rcx_1 & 4) != 0 && rax_2 != 0) && (rcx_1 & 8) == 0))))\n                {\n                    if ((rdi & 0x80) == 0)\n                    {\n                        goto label_40bb00;\n                    }\n                    if (rbp_2 != 0)\n                    {\n                        goto label_40bb00;\n                    }\n                }\n            }\n            rsi_1 = (rsi_1 + 1);\n        } while (rsi_1 != arg2);\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40bb30",
            "funcStartAddr": "0x40bb30",
            "funcEndAddr": "0x40c317",
            "decompiledFuncCode": "int64_t sub_40bb30(int64_t* arg1, int64_t arg2, int32_t arg3)\n{\n    int32_t r10 = arg3;\n    int64_t r15 = arg2;\n    int64_t rax = arg1[5];\n    int64_t rbp_1 = (arg2 - rax);\n    if (rax > arg2)\n    {\n        if (arg1[0x12] > 1)\n        {\n            arg1[4] = 0;\n        }\n        int64_t rax_1 = arg1[0xa];\n        arg1[6] = 0;\n        rbp_1 = r15;\n        arg1[5] = 0;\n        arg1[0xb] = rax_1;\n        int64_t rax_2 = arg1[0xc];\n        arg1[7] = 0;\n        arg1[0xd] = rax_2;\n        int32_t rax_4 = (r10 & 1);\n        *(arg1 + 0x8c) = 0;\n        bool cond:0_1 = *(arg1 + 0x8b) == 0;\n        arg1[0xe] = (((rax_4 - rax_4) & 2) + 4);\n        if (cond:0_1)\n        {\n            arg1[1] = *arg1;\n            if (rbp_1 == 0)\n            {\n                goto label_40bc90;\n            }\n            goto label_40bbc3;\n        }\n    }\n    int64_t rax_10;\n    int64_t rcx_2;\n    uint64_t rsi_1;\n    if (rbp_1 == 0)\n    {\n    label_40bc90:\n        rsi_1 = arg1[0x12];\n        rax_10 = arg1[0xb];\n        rcx_2 = arg1[0xd];\n    label_40bc38:\n        arg1[5] = r15;\n        arg1[0xb] = rax_10;\n        arg1[0xd] = rcx_2;\n        if (rsi_1 > 1)\n        {\n            int64_t rax_11;\n            if (arg1[0x11] != 0)\n            {\n                rax_11 = sub_408990(arg1);\n                if (rax_11 == 0)\n                {\n                    goto label_40bc5e;\n                }\n            }\n            else\n            {\n                sub_4087e0(arg1);\n            label_40bc5e:\n                arg1[9] = 0;\n                rax_11 = 0;\n            }\n            return rax_11;\n        }\n    }\n    else\n    {\n    label_40bbc3:\n        uint64_t rax_21 = arg1[7];\n        char rdx = *(arg1 + 0x8c);\n        int64_t r14_1 = arg1[6];\n        char rdx_2;\n        if (rax_21 <= rbp_1)\n        {\n            if (rdx != 0)\n            {\n                int64_t rdx_35 = arg1[0xa];\n                *(arg1 + 0x8c) = 0;\n                arg1[0xb] = ((rdx_35 + rbp_1) - r15);\n                arg1[0xd] = ((arg1[0xc] + rbp_1) - r15);\n            }\n            rsi_1 = arg1[0x12];\n            int64_t r11_1 = arg1[5];\n            arg1[6] = 0;\n            if (rsi_1 <= 1)\n            {\n                uint64_t rcx_3 = *((r11_1 + (*arg1 + rbp_1)) - 1);\n                int64_t rax_15 = arg1[0xf];\n                arg1[7] = 0;\n                if (rax_15 != 0)\n                {\n                    rcx_3 = *(rax_15 + rcx_3);\n                }\n                int32_t rdx_5 = 1;\n                if (((*(arg1[0x10] + ((rcx_3 >> 6) << 3)) >> rcx_3) & 1) == 0)\n                {\n                    rdx_5 = 0;\n                    if (rcx_3 == 0xa)\n                    {\n                        int32_t rdx_6;\n                        rdx_6 = *(arg1 + 0x8d) != 0;\n                        rdx_5 = (rdx_6 + rdx_6);\n                    }\n                }\n                int64_t rax_20 = arg1[0xb];\n                int64_t rcx_4 = arg1[0xd];\n                arg1[0xe] = rdx_5;\n                rax_10 = (rax_20 - rbp_1);\n                rcx_2 = (rcx_4 - rbp_1);\n                if (*(arg1 + 0x8b) == 0)\n                {\n                label_40bc34:\n                    arg1[1] = (arg1[1] + rbp_1);\n                    goto label_40bc38;\n                }\n                arg1[5] = r15;\n                arg1[0xb] = rax_10;\n                arg1[0xd] = rcx_2;\n            }\n            else\n            {\n                if (*(arg1 + 0x89) == 0)\n                {\n                    goto label_40bdb1;\n                }\n                int64_t rcx_13 = *arg1;\n                int64_t r13_4 = (rcx_13 + r11_1);\n                int64_t rdx_25 = ((rbp_1 - rsi_1) + r13_4);\n                char* r12_5 = ((r13_4 + rbp_1) - 1);\n                if (rcx_13 < rdx_25)\n                {\n                    rcx_13 = rdx_25;\n                }\n                if (rcx_13 > r12_5)\n                {\n                    goto label_40bdb1;\n                }\n                while ((*r12_5 & 0xc0) == 0x80)\n                {\n                    r12_5 = (r12_5 - 1);\n                    if (rcx_13 > r12_5)\n                    {\n                        break;\n                    }\n                }\n                if ((*r12_5 & 0xc0) == 0x80)\n                {\n                    goto label_40bdb1;\n                }\n                int64_t rcx_14 = arg1[0xf];\n                char* rsi_10 = r12_5;\n                uint64_t rdx_30 = ((arg1[0xb] + r13_4) - r12_5);\n                if (rcx_14 != 0)\n                {\n                    int32_t rsi_16 = 6;\n                    if (rdx_30 <= 6)\n                    {\n                        rsi_16 = rdx_30;\n                    }\n                    int64_t rax_45 = (rsi_16 - 1);\n                    void var_46;\n                    if ((rsi_16 - 1) >= 0)\n                    {\n                        do\n                        {\n                            *(&var_46 + rax_45) = *(rcx_14 + r12_5[rax_45]);\n                            rax_45 = (rax_45 - 1);\n                        } while (rax_45 >= 0);\n                    }\n                    rsi_10 = &var_46;\n                }\n                uint32_t var_40;\n                var_40 = 0;\n                uint32_t var_4c;\n                uint64_t rax_38 = sub_407dd0(&var_4c, rsi_10, rdx_30, &var_40);\n                void* rdx_32 = ((r13_4 + rbp_1) - r12_5);\n                uint32_t rdx_8;\n                void* r12_3;\n                if ((rdx_32 <= rax_38 && rax_38 <= -3))\n                {\n                    void* rax_40 = (rax_38 - rdx_32);\n                    rdx_8 = var_4c;\n                    arg1[4] = 0;\n                    r12_3 = rax_40;\n                    arg1[6] = rax_40;\n                }\n                int64_t r13_1;\n                if (((rdx_32 > rax_38 || (rdx_32 <= rax_38 && rax_38 > -3)) || ((rdx_32 <= rax_38 && rax_38 <= -3) && rdx_8 == 0xffffffff)))\n                {\n                    r11_1 = arg1[5];\n                    rax_21 = arg1[7];\n                label_40bdb1:\n                    r13_1 = (r11_1 + rax_21);\n                    if (r15 > r13_1)\n                    {\n                        void* rax_22 = &arg1[4];\n                        uint32_t* var_68_1 = &var_40;\n                        do\n                        {\n                            int64_t rax_23 = arg1[4];\n                            uint64_t r12_2 = (arg1[0xa] - r13_1);\n                            rax_21 = sub_407dd0(var_68_1, (*arg1 + r13_1), r12_2, rax_22);\n                            rdx_8 = var_40;\n                            if ((rax_21 - 1) > -4)\n                            {\n                                if ((rax_21 == 0 || (rax_21 != 0 && r12_2 == 0)))\n                                {\n                                    rdx_8 = 0;\n                                }\n                                if ((rax_21 != 0 && r12_2 != 0))\n                                {\n                                    rdx_8 = *(*arg1 + r13_1);\n                                }\n                                arg1[4] = rax_23;\n                                rax_21 = 1;\n                            }\n                            r13_1 = (r13_1 + rax_21);\n                        } while (r15 > r13_1);\n                        void* r13_2 = (r13_1 - r15);\n                        r12_3 = r13_2;\n                        arg1[6] = r13_2;\n                        if (rdx_8 == 0xffffffff)\n                        {\n                            goto label_40c1e0;\n                        }\n                    }\n                    else\n                    {\n                        void* r13_5 = (r13_1 - r15);\n                        arg1[6] = r13_5;\n                        r12_3 = r13_5;\n                    label_40c1e0:\n                        arg1[0xe] = sub_40b840(arg1, (r14_1 - 1), r10, rax_21);\n                    label_40be5c:\n                        bool cond:7_1 = r12_3 <= 0;\n                        if (r12_3 != 0)\n                        {\n                            if ((!cond:7_1))\n                            {\n                                int32_t* rax_43 = arg1[2];\n                                void* rdx_41 = &rax_43[r12_3];\n                                do\n                                {\n                                    *rax_43 = 0xffffffff;\n                                    rax_43 = &rax_43[1];\n                                } while (rdx_41 != rax_43);\n                            }\n                            rdx_2 = *(arg1 + 0x8b);\n                            if (rdx_2 != 0)\n                            {\n                                memset(arg1[1], 0xff, r12_3);\n                                r12_3 = arg1[6];\n                            }\n                        }\n                        if (((r12_3 != 0 && rdx_2 != 0) || r12_3 == 0))\n                        {\n                            rdx_2 = *(arg1 + 0x8b);\n                        }\n                        arg1[7] = r12_3;\n                    }\n                }\n                if ((((rdx_32 <= rax_38 && rax_38 <= -3) && rdx_8 != 0xffffffff) || (((rdx_32 > rax_38 || (rdx_32 <= rax_38 && rax_38 > -3)) || ((rdx_32 <= rax_38 && rax_38 <= -3) && rdx_8 == 0xffffffff)) && r15 > r13_1)))\n                {\n                    int32_t rax_25;\n                    if (*(arg1 + 0x8e) == 0)\n                    {\n                    label_40be44:\n                        rax_25 = 0;\n                        if (rdx_8 == 0xa)\n                        {\n                            int32_t rax_24;\n                            rax_24 = *(arg1 + 0x8d) != 0;\n                            rax_25 = (rax_24 + rax_24);\n                        }\n                        goto label_40be59;\n                    }\n                    if (iswalnum(rdx_8) == 0)\n                    {\n                        if (rdx_8 != 0x5f)\n                        {\n                            goto label_40be44;\n                        }\n                        goto label_40c2d0;\n                    }\n                label_40c2d0:\n                    rax_25 = 1;\n                label_40be59:\n                    arg1[0xe] = rax_25;\n                    goto label_40be5c;\n                }\n            label_40bc24:\n                rsi_1 = arg1[0x12];\n                rax_10 = (arg1[0xb] - rbp_1);\n                rcx_2 = (arg1[0xd] - rbp_1);\n            }\n        }\n        else\n        {\n            if (rdx == 0)\n            {\n                uint64_t r14_2 = (r14_1 - rbp_1);\n                bool cond:2_1 = arg1[0x12] > 1;\n                arg1[0xe] = sub_40b840(arg1, (rbp_1 - 1), r10, rax_21);\n                if (cond:2_1)\n                {\n                    int64_t rdi_2 = arg1[2];\n                    memmove(rdi_2, (rdi_2 + (rbp_1 << 2)), (r14_2 << 2));\n                    r14_2 = (arg1[6] - rbp_1);\n                }\n                rdx_2 = *(arg1 + 0x8b);\n                if (rdx_2 != 0)\n                {\n                    int64_t rdi_5 = arg1[1];\n                    memmove(rdi_5, (rdi_5 + rbp_1), r14_2);\n                    rdx_2 = *(arg1 + 0x8b);\n                    r14_2 = (arg1[6] - rbp_1);\n                }\n                arg1[7] = (arg1[7] - rbp_1);\n                arg1[6] = r14_2;\n                goto label_40bc24;\n            }\n            int64_t r13_3 = arg1[3];\n            int64_t rcx_7 = r14_1;\n            int64_t rdi_4 = 0;\n            int64_t rax_29;\n            int64_t rsi_5;\n            int64_t r12_4;\n            while (true)\n            {\n                int64_t rdx_9 = (rdi_4 + rcx_7);\n                rax_29 = (((rdx_9 >> 0x3f) + rdx_9) >> 1);\n                int64_t rdx_10 = *(r13_3 + (rax_29 << 3));\n                rsi_5 = rax_29;\n                bool cond:3_1 = rdx_10 >= rbp_1;\n                if (rdx_10 > rbp_1)\n                {\n                    rcx_7 = rax_29;\n                }\n                else\n                {\n                    if (cond:3_1)\n                    {\n                        r12_4 = rax_29;\n                        rsi_5 = (rsi_5 - 1);\n                        break;\n                    }\n                    rdi_4 = (rax_29 + 1);\n                }\n                if (rdi_4 >= rcx_7)\n                {\n                    r12_4 = (rax_29 + 1);\n                    if (rdx_10 >= rbp_1)\n                    {\n                        r12_4 = rax_29;\n                        rsi_5 = (rax_29 - 1);\n                    }\n                    break;\n                }\n            }\n            arg1[0xe] = sub_40b840(arg1, rsi_5, r10, rax_29);\n            if (((rbp_1 != r12_4 || (rbp_1 == r12_4 && rbp_1 >= r14_1)) || ((rbp_1 == r12_4 && rbp_1 < r14_1) && *(r13_3 + (r12_4 << 3)) != rbp_1)))\n            {\n                int64_t rax_35 = arg1[0xa];\n                int64_t rcx_10 = arg1[0xc];\n                *(arg1 + 0x8c) = 0;\n                rax_10 = (rax_35 - r15);\n                rcx_2 = (rcx_10 - r15);\n                arg1[0xb] = (rax_10 + rbp_1);\n                arg1[0xd] = (rcx_2 + rbp_1);\n                if (r12_4 > 0)\n                {\n                    while (*((r13_3 + (r12_4 << 3)) - 8) == rbp_1)\n                    {\n                        int64_t temp2_1 = r12_4;\n                        r12_4 = (r12_4 - 1);\n                        if (temp2_1 == 1)\n                        {\n                            break;\n                        }\n                    }\n                }\n                bool cond:8_1 = r12_4 != r14_1;\n                int64_t rdx_20;\n                if (r12_4 < r14_1)\n                {\n                    rdx_20 = arg1[2];\n                    while (*(rdx_20 + (r12_4 << 2)) == 0xffffffff)\n                    {\n                        r12_4 = (r12_4 + 1);\n                        if (r12_4 == r14_1)\n                        {\n                            break;\n                        }\n                    }\n                }\n                uint64_t rdx_22;\n                if (((r12_4 >= r14_1 && cond:8_1) || (r12_4 < r14_1 && *(rdx_20 + (r12_4 << 2)) != 0xffffffff)))\n                {\n                    rdx_22 = (*(r13_3 + (r12_4 << 3)) - rbp_1);\n                    arg1[6] = rdx_22;\n                    bool cond:9_1 = rdx_22 <= 0;\n                    if (rdx_22 != 0)\n                    {\n                        if ((!cond:9_1))\n                        {\n                            int32_t* rax_36 = arg1[2];\n                            void* rcx_11 = &rax_36[rdx_22];\n                            do\n                            {\n                                *rax_36 = 0xffffffff;\n                                rax_36 = &rax_36[1];\n                            } while (rcx_11 != rax_36);\n                        }\n                        memset(arg1[1], 0xff, rdx_22);\n                        rdx_22 = arg1[6];\n                        rax_10 = (arg1[0xb] - rbp_1);\n                        rcx_2 = (arg1[0xd] - rbp_1);\n                    }\n                }\n                if (((r12_4 >= r14_1 && (!cond:8_1)) || (r12_4 < r14_1 && *(rdx_20 + (r12_4 << 2)) == 0xffffffff)))\n                {\n                    arg1[6] = 0;\n                    rdx_22 = 0;\n                }\n                arg1[7] = rdx_22;\n                rsi_1 = arg1[0x12];\n                rdx_2 = *(arg1 + 0x8b);\n            }\n            if (((rbp_1 == r12_4 && rbp_1 < r14_1) && *(r13_3 + (r12_4 << 3)) == rbp_1))\n            {\n                int64_t rdi_7 = arg1[2];\n                memmove(rdi_7, (rdi_7 + (rbp_1 << 2)), ((r14_1 - rbp_1) << 2));\n                int64_t rdi_8 = arg1[1];\n                memmove(rdi_8, (rdi_8 + rbp_1), (arg1[6] - rbp_1));\n                int64_t rax_31 = arg1[6];\n                arg1[7] = (arg1[7] - rbp_1);\n                int64_t rax_32 = (rax_31 - rbp_1);\n                arg1[6] = rax_32;\n                if (rax_32 > 0)\n                {\n                    int64_t rcx_8 = arg1[3];\n                    int64_t rax_33 = 0;\n                    int64_t rsi_9 = (rcx_8 + (rbp_1 << 3));\n                    do\n                    {\n                        *(rcx_8 + (rax_33 << 3)) = (*(rsi_9 + (rax_33 << 3)) - rbp_1);\n                        rax_33 = (rax_33 + 1);\n                    } while (arg1[6] > rax_33);\n                }\n                rsi_1 = arg1[0x12];\n                rdx_2 = *(arg1 + 0x8b);\n                rax_10 = (arg1[0xb] - rbp_1);\n                rcx_2 = (arg1[0xd] - rbp_1);\n            }\n        }\n        if ((rax_21 > rbp_1 || (rax_21 <= rbp_1 && rsi_1 > 1)))\n        {\n            if (rdx_2 != 0)\n            {\n                goto label_40bc38;\n            }\n            goto label_40bc34;\n        }\n    }\n    if (*(arg1 + 0x8b) == 0)\n    {\n        arg1[6] = rax_10;\n        goto label_40bc5e;\n    }\n    if (arg1[0x11] != 0)\n    {\n        sub_408760(arg1);\n    }\n    else\n    {\n        int64_t rcx_16 = arg1[0xf];\n        if (rcx_16 != 0)\n        {\n            int64_t rdx_33 = arg1[6];\n            if (arg1[8] <= rax_10)\n            {\n                rax_10 = arg1[8];\n            }\n            if (rax_10 <= rdx_33)\n            {\n                rax_10 = rdx_33;\n            }\n            else\n            {\n                while (true)\n                {\n                    arg1[1][rdx_33] = *(rcx_16 + *((*arg1 + rdx_33) + r15));\n                    rdx_33 = (rdx_33 + 1);\n                    if (rax_10 == rdx_33)\n                    {\n                        break;\n                    }\n                    r15 = arg1[5];\n                    rcx_16 = arg1[0xf];\n                }\n            }\n            arg1[6] = rax_10;\n            arg1[7] = rax_10;\n        }\n    }\n    goto label_40bc5e;\n}\n\n"
        },
        {
            "funcName": "sub_40c320",
            "funcStartAddr": "0x40c320",
            "funcEndAddr": "0x40c545",
            "decompiledFuncCode": "uint64_t sub_40c320(void* arg1, int64_t arg2, void* arg3, void* arg4)\n{\n    int128_t var_58 = 0;\n    void* rbp = (*(arg1 + 0x38) + (arg2 * 0x18));\n    int64_t var_48 = 0;\n    int64_t r10 = *(rbp + 8);\n    int64_t rdi_10;\n    if (r10 <= 0)\n    {\n        rdi_10 = 0;\n    }\n    else\n    {\n        int64_t rbx_1 = 0;\n        do\n        {\n            int64_t rax_4 = *(*(rbp + 0x10) + (rbx_1 << 3));\n            if ((arg2 != rax_4 && (*(((rax_4 << 4) + *arg1) + 8) & 8) != 0))\n            {\n                void* r11_1 = (rbp + 0x10);\n                int64_t r9_2 = (rax_4 * 0x18);\n                void* rcx_1 = (*(arg1 + 0x28) + r9_2);\n                int64_t* r15_1 = *(rcx_1 + 0x10);\n                int64_t r8_1 = *r15_1;\n                int64_t rax_5 = sub_409b10(r10, r11_1, r8_1);\n                if (*(rcx_1 + 8) > 1)\n                {\n                    int64_t rax_1;\n                    if (rax_5 == 0)\n                    {\n                        rax_1 = sub_409b10(*(arg3 + 8), (arg3 + 0x10), r8_1);\n                        if (rax_1 != 0)\n                        {\n                        label_40c3a4:\n                            int32_t rax_2 = sub_40a5c0(&var_58, arg4, (*(arg1 + 0x38) + r9_2));\n                            if (rax_2 != 0)\n                            {\n                                int64_t var_70_1;\n                                var_70_1 = rax_2;\n                                free(var_48);\n                                return var_70_1;\n                            }\n                            r10 = *(rbp + 8);\n                        }\n                    }\n                    if ((rax_5 != 0 || (rax_5 == 0 && rax_1 == 0)))\n                    {\n                        int64_t r15_2 = r15_1[1];\n                        if (((r15_2 > 0 && sub_409b10(r10, r11_1, r15_2) == 0) && sub_409b10(*(arg3 + 8), (arg3 + 0x10), r15_2) != 0))\n                        {\n                            goto label_40c3a4;\n                        }\n                    }\n                }\n                else if ((rax_5 == 0 && sub_409b10(*(arg3 + 8), (arg3 + 0x10), r8_1) != 0))\n                {\n                    goto label_40c3a4;\n                }\n            }\n            rbx_1 = (rbx_1 + 1);\n        } while (r10 > rbx_1);\n        int64_t r9_3 = 0;\n        if (r10 > 0)\n        {\n            do\n            {\n                int64_t r10_1 = *(*(rbp + 0x10) + (r9_3 << 3));\n                if (sub_409b10(*var_58[8], &var_48, r10_1) == 0)\n                {\n                    int64_t r11_2 = *(arg3 + 8);\n                    int64_t* r12_2 = (arg3 + 0x10);\n                    int64_t rax_11 = sub_409b10(r11_2, r12_2, r10_1);\n                    int64_t rax_12 = (rax_11 - 1);\n                    if (((rax_11 - 1) >= 0 && rax_12 < r11_2))\n                    {\n                        *(arg3 + 8) = (r11_2 - 1);\n                        sub_409c80((arg3 + 8), r12_2, rax_12);\n                    }\n                }\n                r9_3 = (r9_3 + 1);\n            } while (*(rbp + 8) > r9_3);\n        }\n        rdi_10 = var_48;\n    }\n    free(rdi_10);\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40c550",
            "funcStartAddr": "0x40c550",
            "funcEndAddr": "0x40d05d",
            "decompiledFuncCode": "int64_t sub_40c550(void* arg1, void* arg2)\n{\n    void* rax = malloc(0x3800);\n    int64_t rax_26;\n    if (rax == 0)\n    {\n    label_40c910:\n        rax_26 = 0;\n    }\n    else\n    {\n        void* r9_1 = arg2;\n        int32_t zmm0[0x4] = 0;\n        int32_t var_98[0x4] = zmm0;\n        void* rax_2 = (rax + 0x1800);\n        bool cond:0_1 = *(r9_1 + 0x10) <= 0;\n        int32_t var_88_1[0x4] = zmm0;\n        *(r9_1 + 0x58) = 0;\n        *(r9_1 + 0x60) = 0;\n        uint32_t var_d8;\n        int64_t var_78;\n        int32_t var_58[0x4];\n        void* r8_1;\n        int64_t r12_1;\n        if (cond:0_1)\n        {\n            free(rax);\n        }\n        else\n        {\n            r12_1 = 0;\n            int64_t var_d0_1 = 0;\n            r8_1 = arg1;\n            do\n            {\n                int64_t rax_3 = (var_d0_1 << 3);\n                char* r15_3 = ((*(*(r9_1 + 0x18) + (var_d0_1 << 3)) << 4) + *r8_1);\n                uint32_t rbp_1 = r15_3[8];\n                uint16_t rax_6 = ((*(r15_3 + 8) >> 8) & 0x3ff);\n                switch (rbp_1)\n                {\n                    case 1:\n                    {\n                        uint64_t rcx_5 = *r15_3;\n                        uint64_t rdx_9 = ((rcx_5 >> 3) & 0x18);\n                        *(&var_98 + rdx_9) = (*(&var_98 + rdx_9) | (1 << rcx_5));\n                        break;\n                    }\n                    case 3:\n                    {\n                        int64_t rsi_10 = *r15_3;\n                        int64_t rdx_27 = 0;\n                        do\n                        {\n                            *(&var_98 + rdx_27) = (*(&var_98 + rdx_27) | *(rsi_10 + rdx_27));\n                            rdx_27 = (rdx_27 + 8);\n                        } while (rdx_27 != 0x20);\n                        break;\n                    }\n                    case 5:\n                    {\n                        if (*(r8_1 + 0xb4) <= 1)\n                        {\n                            zmm0 = _mm_cmpeq_epi32(zmm0, zmm0);\n                            var_98 = zmm0;\n                            var_88_1 = zmm0;\n                        }\n                        else\n                        {\n                            int64_t rsi_8 = *(r8_1 + 0x78);\n                            int64_t rdx_21 = 0;\n                            do\n                            {\n                                *(&var_98 + rdx_21) = (*(&var_98 + rdx_21) | *(rsi_8 + rdx_21));\n                                rdx_21 = (rdx_21 + 8);\n                            } while (rdx_21 != 0x20);\n                        }\n                        break;\n                    }\n                    case 7:\n                    {\n                        zmm0 = _mm_cmpeq_epi32(zmm0, zmm0);\n                        var_98 = zmm0;\n                        break;\n                    }\n                }\n                if ((rbp_1 == 5 || rbp_1 == 7))\n                {\n                    int32_t rdx_22 = *(r8_1 + 0xd8);\n                    if ((rdx_22 & 0x40) == 0)\n                    {\n                        var_98[0] = (var_98[0] & 0xfffffffffffffbff);\n                    }\n                    if ((rdx_22 & 0x80) != 0)\n                    {\n                        var_98[0] = (var_98[0] & 0xfffffffffffffffe);\n                    }\n                }\n                if ((((rbp_1 == 1 || rbp_1 == 3) || rbp_1 == 7) || rbp_1 == 5))\n                {\n                    if (rax_6 == 0)\n                    {\n                    label_40ca05:\n                        int64_t r13_4 = 0;\n                        if (r12_1 > 0)\n                        {\n                            int64_t rbp_6 = r12_1;\n                            void* r12_3 = rax_2;\n                            while (true)\n                            {\n                                int64_t rdx_16 = (r13_4 << 5);\n                                if (rbp_1 == 1)\n                                {\n                                    uint64_t rcx_8 = *r15_3;\n                                    if (((*((((rcx_8 >> 3) & 0x18) + rax_2) + rdx_16) >> rcx_8) & 1) == 0)\n                                    {\n                                    label_40ca4e:\n                                        r13_4 = (r13_4 + 1);\n                                        r12_3 = (r12_3 + 0x20);\n                                        if (r13_4 >= rbp_6)\n                                        {\n                                        label_40cb7f:\n                                            r12_1 = rbp_6;\n                                            break;\n                                        }\n                                        continue;\n                                    }\n                                }\n                                int64_t rcx_9 = 0;\n                                int64_t rax_37 = 0;\n                                do\n                                {\n                                    int64_t rdx_18 = (*(&var_98 + (rax_37 << 3)) & *(r12_3 + (rax_37 << 3)));\n                                    &var_78[rax_37] = rdx_18;\n                                    rax_37 = (rax_37 + 1);\n                                    rcx_9 = (rcx_9 | rdx_18);\n                                } while (rax_37 != 4);\n                                if (rcx_9 == 0)\n                                {\n                                    goto label_40ca4e;\n                                }\n                                int64_t rbx_8 = 0;\n                                int64_t rdi_18 = 0;\n                                int64_t rdx_19 = 0;\n                                do\n                                {\n                                    int64_t rsi_4 = *(&var_98 + (rdx_19 << 3));\n                                    int64_t rax_38 = *(r12_3 + (rdx_19 << 3));\n                                    int64_t rcx_12 = ((!rsi_4) & rax_38);\n                                    int64_t rax_40 = ((!rax_38) & rsi_4);\n                                    *(&var_58 + (rdx_19 << 3)) = rcx_12;\n                                    rdi_18 = (rdi_18 | rcx_12);\n                                    *(&var_98 + (rdx_19 << 3)) = rax_40;\n                                    rdx_19 = (rdx_19 + 1);\n                                    rbx_8 = (rbx_8 | rax_40);\n                                } while (rdx_19 != 4);\n                                int64_t* rdx_20 = (rax + (r13_4 * 0x18));\n                                int32_t rax_46;\n                                if (rdi_18 != 0)\n                                {\n                                    void* rax_44 = ((rbp_6 << 5) + rax_2);\n                                    *rax_44 = var_58;\n                                    int128_t var_48;\n                                    *(rax_44 + 0x10) = var_48;\n                                    *r12_3 = var_78;\n                                    int64_t var_68;\n                                    *(r12_3 + 0x10) = var_68;\n                                    rax_46 = sub_40abb0((rax + (rbp_6 * 0x18)), rdx_20);\n                                    if (rax_46 == 0)\n                                    {\n                                        rbp_6 = (rbp_6 + 1);\n                                    }\n                                }\n                                if ((((rdi_18 != 0 && rax_46 == 0) || rdi_18 == 0) && sub_408500(rdx_20, *(*(r9_1 + 0x18) + rax_3)) != 0))\n                                {\n                                    if (rbx_8 != 0)\n                                    {\n                                        goto label_40ca4e;\n                                    }\n                                    goto label_40cb7f;\n                                }\n                                r12_1 = rbp_6;\n                                goto label_40cc28;\n                            }\n                        }\n                        if (r12_1 == r13_4)\n                        {\n                            void* rax_52 = ((r12_1 << 5) + rax_2);\n                            var_d8 = r9_1;\n                            *rax_52 = var_98;\n                            *(rax_52 + 0x10) = var_88_1;\n                            int64_t rbp_7 = *(*(r9_1 + 0x18) + rax_3);\n                            void* r13_5 = (rax + (r12_1 * 0x18));\n                            *r13_5 = 1;\n                            *(r13_5 + 8) = 1;\n                            int64_t* rax_55 = malloc(8);\n                            r9_1 = var_d8;\n                            *(r13_5 + 0x10) = rax_55;\n                            if (rax_55 == 0)\n                            {\n                                *(r13_5 + 8) = 0;\n                                *r13_5 = 0;\n                                if (r12_1 == 0)\n                                {\n                                    free(rax);\n                                    goto label_40c910;\n                                }\n                            label_40cc28:\n                                void* rbx_9 = (rax + 0x10);\n                                void* rbp_8 = (rbx_9 + (r12_1 * 0x18));\n                                do\n                                {\n                                    int64_t rdi_24 = *rbx_9;\n                                    rbx_9 = (rbx_9 + 0x18);\n                                    free(rdi_24);\n                                } while (rbp_8 != rbx_9);\n                                free(rax);\n                                goto label_40c910;\n                            }\n                            *rax_55 = rbp_7;\n                            r12_1 = (r12_1 + 1);\n                            goto label_40cc09;\n                        }\n                    }\n                    else\n                    {\n                        int16_t rdx_24;\n                        if ((rax_6 & 0x20) != 0)\n                        {\n                            zmm0 = 0;\n                            var_98 = zmm0;\n                            var_88_1 = zmm0;\n                            *rdx_24[1] = (*var_98[0][1] & 4);\n                            if (*rdx_24[1] != 0)\n                            {\n                                var_98[0] = 0x400;\n                            }\n                        }\n                        if ((((rax_6 & 0x20) != 0 && *rdx_24[1] != 0) || (rax_6 & 0x20) == 0))\n                        {\n                            if ((rax_6 & 0x80) != 0)\n                            {\n                            label_40cc09:\n                                zmm0 = 0;\n                                var_98 = zmm0;\n                                var_88_1 = zmm0;\n                            }\n                            else\n                            {\n                                int64_t rsi_2;\n                                int64_t rsi_9;\n                                if ((rax_6 & 4) != 0)\n                                {\n                                    if ((rbp_1 == 1 && (r15_3[0xa] & 0x40) == 0))\n                                    {\n                                        goto label_40cc09;\n                                    }\n                                    if (((rbp_1 != 1 && *(r8_1 + 0xb4) <= 1) || ((rbp_1 == 1 && (r15_3[0xa] & 0x40) != 0) && *(r8_1 + 0xb4) <= 1)))\n                                    {\n                                        rsi_9 = 0;\n                                        int64_t rdx_26 = 0;\n                                        do\n                                        {\n                                            int64_t rcx_17 = (*(&var_98 + (rdx_26 << 3)) & *((r8_1 + (rdx_26 << 3)) + 0xb8));\n                                            *(&var_98 + (rdx_26 << 3)) = rcx_17;\n                                            rdx_26 = (rdx_26 + 1);\n                                            rsi_9 = (rsi_9 | rcx_17);\n                                        } while (rdx_26 != 4);\n                                    }\n                                    if (((rbp_1 != 1 && *(r8_1 + 0xb4) > 1) || ((rbp_1 == 1 && (r15_3[0xa] & 0x40) != 0) && *(r8_1 + 0xb4) > 1)))\n                                    {\n                                        int64_t rdi_17 = *(r8_1 + 0x78);\n                                        rsi_2 = 0;\n                                        int64_t rcx_6 = 0;\n                                        do\n                                        {\n                                            int64_t rdx_13 = (((!*(rdi_17 + (rcx_6 << 3))) | *((r8_1 + (rcx_6 << 3)) + 0xb8)) & *(&var_98 + (rcx_6 << 3)));\n                                            *(&var_98 + (rcx_6 << 3)) = rdx_13;\n                                            rcx_6 = (rcx_6 + 1);\n                                            rsi_2 = (rsi_2 | rdx_13);\n                                        } while (rcx_6 != 4);\n                                    }\n                                }\n                                if ((((rax_6 & 4) == 0 || (((rax_6 & 4) != 0 && ((rbp_1 != 1 && *(r8_1 + 0xb4) <= 1) || ((rbp_1 == 1 && (r15_3[0xa] & 0x40) != 0) && *(r8_1 + 0xb4) <= 1))) && rsi_9 != 0)) || (((rax_6 & 4) != 0 && ((rbp_1 != 1 && *(r8_1 + 0xb4) > 1) || ((rbp_1 == 1 && (r15_3[0xa] & 0x40) != 0) && *(r8_1 + 0xb4) > 1))) && rsi_2 != 0)))\n                                {\n                                    if ((rax_6 & 8) == 0)\n                                    {\n                                        goto label_40ca05;\n                                    }\n                                    if ((rbp_1 == 1 && (r15_3[0xa] & 0x40) != 0))\n                                    {\n                                        goto label_40cc09;\n                                    }\n                                    if (*(r8_1 + 0xb4) <= 1)\n                                    {\n                                        int64_t rcx_15 = 0;\n                                        int64_t rdx_25 = 0;\n                                        do\n                                        {\n                                            int64_t rax_60 = ((!*((r8_1 + (rdx_25 << 3)) + 0xb8)) & *(&var_98 + (rdx_25 << 3)));\n                                            *(&var_98 + (rdx_25 << 3)) = rax_60;\n                                            rdx_25 = (rdx_25 + 1);\n                                            rcx_15 = (rcx_15 | rax_60);\n                                        } while (rdx_25 != 4);\n                                        if (rcx_15 != 0)\n                                        {\n                                            goto label_40ca05;\n                                        }\n                                    }\n                                    else\n                                    {\n                                        int64_t rsi_3 = *(r8_1 + 0x78);\n                                        int64_t rcx_7 = 0;\n                                        int64_t rdx_14 = 0;\n                                        do\n                                        {\n                                            int64_t rax_30 = ((!(*((r8_1 + (rdx_14 << 3)) + 0xb8) & *(rsi_3 + (rdx_14 << 3)))) & *(&var_98 + (rdx_14 << 3)));\n                                            *(&var_98 + (rdx_14 << 3)) = rax_30;\n                                            rdx_14 = (rdx_14 + 1);\n                                            rcx_7 = (rcx_7 | rax_30);\n                                        } while (rdx_14 != 4);\n                                        if (rcx_7 != 0)\n                                        {\n                                            goto label_40ca05;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                var_d0_1 = (var_d0_1 + 1);\n            } while (var_d0_1 < *(r9_1 + 0x10));\n            if (r12_1 <= 0)\n            {\n                free(rax);\n                if (r12_1 != 0)\n                {\n                    goto label_40c910;\n                }\n            }\n        }\n        if ((cond:0_1 || ((!cond:0_1) && r12_1 <= 0)))\n        {\n            rax_26 = calloc(8, 0x100);\n            *(arg2 + 0x58) = rax_26;\n            rax_26 = rax_26 != 0;\n        }\n        if (((!cond:0_1) && r12_1 > 0))\n        {\n            int64_t var_70_1 = 0;\n            var_78 = (r12_1 + 1);\n            int64_t rbx_2 = ((r12_1 + 1) << 3);\n            int64_t rax_8 = malloc(rbx_2);\n            int64_t r13_1 = rax_8;\n            if (rax_8 == 0)\n            {\n                goto label_40ce0a;\n            }\n            var_98[0] = 0;\n            if (r12_1 > 0xaaaaaaaaaaaa855)\n            {\n                goto label_40ce0a;\n            }\n            int64_t rax_10 = (r12_1 * 0x18);\n            int64_t* rax_11 = malloc(rax_10);\n            if (rax_11 == 0)\n            {\n                goto label_40ce0a;\n            }\n            zmm0 = 0;\n            int64_t r15_4 = 0;\n            void* r13_2 = rax;\n            void* var_b8;\n            var_b8 = 0;\n            void* rax_13 = (rax_11 + (rbx_2 - 8));\n            var_d8 = r12_1;\n            int64_t* var_d0_2 = rax_13;\n            void* rbx_4 = ((rbx_2 - 8) + rax_13);\n            int64_t* rbp_3 = (r13_2 + 8);\n            var_58 = zmm0;\n            int32_t var_48_1[0x4] = zmm0;\n            while (true)\n            {\n                int64_t var_70_2 = 0;\n                int64_t r14_2 = 0;\n                int64_t rax_16;\n                int32_t rax_18;\n                if (*rbp_3 > 0)\n                {\n                    do\n                    {\n                        rax_16 = *(*(r8_1 + 0x18) + (*(rbp_3[1] + (r14_2 << 3)) << 3));\n                        if (rax_16 != -1)\n                        {\n                            rax_18 = sub_40a050(&var_78, (*(r8_1 + 0x30) + (rax_16 * 0x18)));\n                            var_98[0] = rax_18;\n                            if (rax_18 != 0)\n                            {\n                                break;\n                            }\n                        }\n                        r14_2 = (r14_2 + 1);\n                    } while (*rbp_3 > r14_2);\n                }\n                if ((*rbp_3 <= 0 || (*rbp_3 > 0 && (!(rax_16 != -1 && rax_18 != 0)))))\n                {\n                    int64_t* rax_19 = sub_40adc0(&var_98, r8_1, &var_78, 0);\n                    rax_11[r15_4] = rax_19;\n                    if ((rax_19 != 0 || (rax_19 == 0 && var_98[0] == 0)))\n                    {\n                        if (rax_19[0xd] < 0)\n                        {\n                            int64_t* rax_63 = sub_40adc0(&var_98, r8_1, &var_78, 1);\n                            var_d0_2[r15_4] = rax_63;\n                            if ((rax_63 != 0 || (rax_63 == 0 && var_98[0] == 0)))\n                            {\n                                if (rax_63 != rax_11[r15_4])\n                                {\n                                    char rdi_33 = var_b8;\n                                    if (*(r8_1 + 0xb4) >= 2)\n                                    {\n                                        rdi_33 = 1;\n                                    }\n                                    var_b8 = rdi_33;\n                                }\n                                int64_t* rax_64 = sub_40adc0(&var_98, r8_1, &var_78, 2);\n                                *(rbx_4 + (r15_4 << 3)) = rax_64;\n                                if (rax_64 != 0)\n                                {\n                                    goto label_40c79a;\n                                }\n                                if (var_98[0] == 0)\n                                {\n                                    goto label_40c79a;\n                                }\n                            }\n                        }\n                        else\n                        {\n                            var_d0_2[r15_4] = rax_19;\n                            *(rbx_4 + (r15_4 << 3)) = rax_19;\n                        label_40c79a:\n                            int64_t rax_20 = 0;\n                            do\n                            {\n                                *(&var_58 + rax_20) = (*(&var_58 + rax_20) | *((r13_2 + rax_20) + 0x1800));\n                                rax_20 = (rax_20 + 8);\n                            } while (rax_20 != 0x20);\n                            r15_4 = (r15_4 + 1);\n                            rbp_3 = &rbp_3[3];\n                            r13_2 = (r13_2 + 0x20);\n                            if (r15_4 == var_d8)\n                            {\n                                break;\n                            }\n                            continue;\n                        }\n                    }\n                }\n                r12_1 = var_d8;\n                goto label_40cdfa;\n            }\n            r12_1 = var_d8;\n            var_d8 = &var_58;\n            void* rbx_5;\n            if (var_b8 != 0)\n            {\n                rbx_5 = calloc(8, 0x200);\n                *(arg2 + 0x60) = rbx_5;\n                if (rbx_5 != 0)\n                {\n                    int64_t* rdx_31 = var_d8;\n                    void* rbp_10 = rbx_5;\n                    void* r11_2 = (rax + 0x1820);\n                    void var_38;\n                    do\n                    {\n                        uint64_t rax_70 = *rdx_31;\n                        void* r8_3 = rbp_10;\n                        int64_t rcx_21 = 1;\n                        if (rax_70 != 0)\n                        {\n                            do\n                            {\n                                if ((rax_70 & 1) != 0)\n                                {\n                                    int64_t r10_2;\n                                    if ((*(r11_2 - 0x20) & rcx_21) != 0)\n                                    {\n                                        r10_2 = 0;\n                                    }\n                                    else\n                                    {\n                                        void* rdi_38 = r11_2;\n                                        int64_t rsi_16 = 0;\n                                        int64_t r9_4;\n                                        do\n                                        {\n                                            r9_4 = *rdi_38;\n                                            rsi_16 = (rsi_16 + 1);\n                                            rdi_38 = (rdi_38 + 0x20);\n                                            r10_2 = rsi_16;\n                                        } while ((r9_4 & rcx_21) == 0);\n                                    }\n                                    *r8_3 = rax_11[r10_2];\n                                    *(r8_3 + 0x800) = var_d0_2[r10_2];\n                                }\n                                rcx_21 = (rcx_21 + rcx_21);\n                                r8_3 = (r8_3 + 8);\n                                rax_70 = (rax_70 >> 1);\n                            } while (rax_70 != 0);\n                        }\n                        rdx_31 = &rdx_31[1];\n                        rbp_10 = (rbp_10 + 0x200);\n                        r11_2 = (r11_2 + 8);\n                    } while (&var_38 != rdx_31);\n                }\n            }\n            else\n            {\n                rbx_5 = calloc(8, 0x100);\n                *(arg2 + 0x58) = rbx_5;\n            }\n            if (((var_b8 != 0 && rbx_5 == 0) || (var_b8 == 0 && rbx_5 == 0)))\n            {\n            label_40cdfa:\n                free(rax_11);\n                r13_1 = rax_8;\n            label_40ce0a:\n                free(r13_1);\n                void* rbx_10 = (rax + 0x10);\n                void* rbp_9 = (rbx_10 + (r12_1 * 0x18));\n                do\n                {\n                    int64_t rdi_28 = *rbx_10;\n                    rbx_10 = (rbx_10 + 0x18);\n                    free(rdi_28);\n                } while (rbx_10 != rbp_9);\n                free(rax);\n                goto label_40c910;\n            }\n            if ((var_b8 == 0 && rbx_5 != 0))\n            {\n                int64_t r11_1 = 0;\n                int64_t* rdx_4 = var_d8;\n                void* r8_2 = (rax + 0x1820);\n                do\n                {\n                    uint64_t rax_23 = *(rdx_4 + r11_1);\n                    int64_t rcx_3 = 1;\n                    void* rdi_10 = ((r11_1 << 6) + rbx_5);\n                    if (rax_23 != 0)\n                    {\n                        do\n                        {\n                            if ((rax_23 & 1) != 0)\n                            {\n                                int64_t r9_3;\n                                if ((*((rax + r11_1) + 0x1800) & rcx_3) != 0)\n                                {\n                                    r9_3 = 0;\n                                }\n                                else\n                                {\n                                    void* rsi_13 = (r8_2 + r11_1);\n                                    int64_t r9_2 = 0;\n                                    int64_t r15_5;\n                                    do\n                                    {\n                                        r15_5 = *rsi_13;\n                                        r9_2 = (r9_2 + 1);\n                                        rsi_13 = (rsi_13 + 0x20);\n                                    } while ((r15_5 & rcx_3) == 0);\n                                    r9_3 = (r9_2 << 3);\n                                }\n                                if ((*((r8_1 + r11_1) + 0xb8) & rcx_3) == 0)\n                                {\n                                    *rdi_10 = *(rax_11 + r9_3);\n                                }\n                                else\n                                {\n                                    *rdi_10 = *(var_d0_2 + r9_3);\n                                }\n                            }\n                            rcx_3 = (rcx_3 + rcx_3);\n                            rdi_10 = (rdi_10 + 8);\n                            rax_23 = (rax_23 >> 1);\n                        } while (rax_23 != 0);\n                    }\n                    r11_1 = (r11_1 + 8);\n                } while (r11_1 != 0x20);\n            }\n            if (((var_b8 != 0 && rbx_5 != 0) || (var_b8 == 0 && rbx_5 != 0)))\n            {\n                if ((*var_58[0][1] & 4) != 0)\n                {\n                    int64_t rax_24 = 0;\n                    do\n                    {\n                        if ((*((rax + (rax_24 << 5)) + 0x1801) & 4) != 0)\n                        {\n                            int64_t rax_66 = *(rbx_4 + (rax_24 << 3));\n                            *(rbx_5 + 0x50) = rax_66;\n                            if (var_b8 != 0)\n                            {\n                                *(rbx_5 + 0x850) = rax_66;\n                            }\n                            break;\n                        }\n                        rax_24 = (rax_24 + 1);\n                    } while (rax_24 != r12_1);\n                }\n                free(rax_11);\n                free(rax_8);\n                void* rbp_5 = (rax + 0x10);\n                void* rbx_7 = (rax_10 + rbp_5);\n                do\n                {\n                    int64_t rdi_13 = *rbp_5;\n                    rbp_5 = (rbp_5 + 0x18);\n                    free(rdi_13);\n                } while (rbx_7 != rbp_5);\n                free(rax);\n                rax_26 = 1;\n            }\n        }\n    }\n    return rax_26;\n}\n\n"
        },
        {
            "funcName": "sub_40d060",
            "funcStartAddr": "0x40d060",
            "funcEndAddr": "0x40d0e7",
            "decompiledFuncCode": "int64_t sub_40d060(int64_t* arg1, void* arg2)\n{\n    if (*(arg2 + 0x30) == 0x10)\n    {\n        void* rax = *(arg2 + 8);\n        int64_t rax_1 = *(rax + 0x38);\n        *(arg2 + 0x18) = *(rax + 0x18);\n        *(arg2 + 0x38) = rax_1;\n        return 0;\n    }\n    *(arg2 + 0x18) = arg2;\n    int64_t rax_3 = sub_4091e0(arg1, *(arg2 + 0x28), *(arg2 + 0x30));\n    *(arg2 + 0x38) = rax_3;\n    int64_t rax_4;\n    if (rax_3 == -1)\n    {\n        rax_4 = 0xc;\n    }\n    else\n    {\n        rax_4 = 0;\n        if (*(arg2 + 0x30) == 0xc)\n        {\n            void* rdx_4 = ((rax_3 << 4) + *arg1);\n            *(rdx_4 + 8) = ((*(rdx_4 + 8) & 0xfffc00ff) | ((*(arg2 + 0x28) & 0x3ff) << 8));\n        }\n    }\n    return rax_4;\n}\n\n"
        },
        {
            "funcName": "sub_40d0f0",
            "funcStartAddr": "0x40d0f0",
            "funcEndAddr": "0x40d26c",
            "decompiledFuncCode": "int64_t sub_40d0f0(int64_t* arg1)\n{\n    void* rdi = *arg1;\n    if ((rdi != 0 && arg1[2] != 0))\n    {\n        int64_t rbx_1 = 0;\n        while (true)\n        {\n            int64_t rax_1 = rbx_1;\n            rbx_1 = (rbx_1 + 1);\n            sub_409190((rdi + (rax_1 << 4)));\n            if (arg1[2] <= rbx_1)\n            {\n                break;\n            }\n            rdi = *arg1;\n        }\n    }\n    int64_t rbx_2 = 0;\n    free(arg1[3]);\n    if (arg1[2] != 0)\n    {\n        do\n        {\n            int64_t rax_3 = arg1[6];\n            if (rax_3 != 0)\n            {\n                free(*((rax_3 + (rbx_2 * 0x18)) + 0x10));\n            }\n            int64_t rax_4 = arg1[7];\n            if (rax_4 != 0)\n            {\n                free(*((rax_4 + (rbx_2 * 0x18)) + 0x10));\n            }\n            int64_t rax_5 = arg1[5];\n            if (rax_5 != 0)\n            {\n                free(*((rax_5 + (rbx_2 * 0x18)) + 0x10));\n            }\n            rbx_2 = (rbx_2 + 1);\n        } while (arg1[2] > rbx_2);\n    }\n    int64_t r13 = 0;\n    free(arg1[5]);\n    free(arg1[6]);\n    free(arg1[7]);\n    free(*arg1);\n    int64_t rdi_10 = arg1[8];\n    if (rdi_10 != 0)\n    {\n        while (true)\n        {\n            int64_t rbx_3 = 0;\n            int64_t* rbp_1 = (rdi_10 + (r13 * 0x18));\n            if (*rbp_1 > 0)\n            {\n                do\n                {\n                    void* rdi_11 = *(rbp_1[2] + (rbx_3 << 3));\n                    rbx_3 = (rbx_3 + 1);\n                    sub_4096e0(rdi_11);\n                } while (rbx_3 < *rbp_1);\n            }\n            r13 = (r13 + 1);\n            free(rbp_1[2]);\n            if (arg1[0x11] < r13)\n            {\n                break;\n            }\n            rdi_10 = arg1[8];\n        }\n        rdi_10 = arg1[8];\n    }\n    free(rdi_10);\n    int64_t rdi_13 = arg1[0xf];\n    if (rdi_13 != 0x4191c0)\n    {\n        free(rdi_13);\n    }\n    free(arg1[0x1c]);\n    /* tailcall */\n    return free(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_40d270",
            "funcStartAddr": "0x40d270",
            "funcEndAddr": "0x40d2be",
            "decompiledFuncCode": "int64_t sub_40d270(int64_t* arg1)\n{\n    if (*arg1 > 0)\n    {\n        int64_t rbx_1 = 0;\n        do\n        {\n            int64_t rbp_1 = (rbx_1 * 3);\n            rbx_1 = (rbx_1 + 1);\n            int64_t rbp_2 = (rbp_1 << 4);\n            free(*((arg1[2] + rbp_2) + 0x28));\n            free(*((arg1[2] + rbp_2) + 0x10));\n        } while (rbx_1 < *arg1);\n    }\n    /* tailcall */\n    return free(arg1[2]);\n}\n\n"
        },
        {
            "funcName": "sub_40d2c0",
            "funcStartAddr": "0x40d2c0",
            "funcEndAddr": "0x40d34b",
            "decompiledFuncCode": "int64_t sub_40d2c0(int64_t* arg1, int64_t* arg2, int64_t* arg3, int64_t arg4, \n    int64_t arg5, int128_t* arg6)\n{\n    int64_t rax = *arg1;\n    int64_t rax_1 = (rax - 1);\n    *arg1 = rax_1;\n    if ((rax - 1) < 0)\n    {\n        __assert_fail(\"num >= 0\", \"lib/regexec.c\", 0x54f, \"pop_fail_stack\");\n        /* no return */\n    }\n    int64_t rbx_1 = (rax_1 * 0x30);\n    int64_t* rax_3 = (*arg2 + rbx_1);\n    *arg3 = *rax_3;\n    memcpy(arg5, rax_3[2], (arg4 << 4));\n    free(arg6[1]);\n    free(*((*arg2 + rbx_1) + 0x10));\n    void* rbx_2 = (rbx_1 + *arg2);\n    *arg6 = *(rbx_2 + 0x18);\n    arg6[1] = *(rbx_2 + 0x28);\n    return *(rbx_2 + 8);\n}\n\n"
        },
        {
            "funcName": "sub_40d350",
            "funcStartAddr": "0x40d350",
            "funcEndAddr": "0x40d39c",
            "decompiledFuncCode": "int64_t sub_40d350(int64_t* arg1, char* arg2)\n{\n    uint64_t rax = strlen(arg2);\n    if (rax != 1)\n    {\n        return 3;\n    }\n    uint64_t rcx = *arg2;\n    uint64_t rdx_2 = ((rcx >> 3) & 0x18);\n    *(arg1 + rdx_2) = (*(arg1 + rdx_2) | (rax << rcx));\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40d3a0",
            "funcStartAddr": "0x40d3a0",
            "funcEndAddr": "0x40db66",
            "decompiledFuncCode": "int64_t sub_40d3a0(void* arg1, int64_t* arg2, int64_t* arg3, int64_t* arg4, \n    int64_t* arg5, void* arg6, int64_t arg7)\n{\n    void* const r12 = arg6;\n    bool c = false;\n    bool z = (arg7 & 0x400000) == 0;\n    int64_t rax_1;\n    int64_t rcx_1;\n    bool c_2;\n    bool z_2;\n    if ((!z))\n    {\n        void* const rdi = \"upper\";\n        int64_t rcx = 6;\n        void* rsi = arg6;\n        while (rcx != 0)\n        {\n            char temp2_1 = *rsi;\n            char temp3_1 = *rdi;\n            c = temp2_1 < temp3_1;\n            z = temp2_1 == temp3_1;\n            rsi = (rsi + 1);\n            rdi = (rdi + 1);\n            rcx = (rcx - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        char rax = (((!z) && (!c)) - 0);\n        bool c_1 = false;\n        bool z_1 = (rax & rax) == 0;\n        if ((!z_1))\n        {\n            int64_t rcx_6 = 6;\n            void* const rdi_4 = \"lower\";\n            void* rsi_5 = arg6;\n            while (rcx_6 != 0)\n            {\n                char temp6_1 = *rsi_5;\n                char temp7_1 = *rdi_4;\n                c_1 = temp6_1 < temp7_1;\n                z_1 = temp6_1 == temp7_1;\n                rsi_5 = (rsi_5 + 1);\n                rdi_4 = (rdi_4 + 1);\n                rcx_6 = (rcx_6 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rcx_1 = *arg4;\n            if ((((!z_1) && (!c_1)) - 0) == 0)\n            {\n                r12 = \"alpha\";\n            }\n            rax_1 = *arg3;\n            int64_t temp10_1 = *arg5;\n            c_2 = temp10_1 < rcx_1;\n            z_2 = temp10_1 == rcx_1;\n            if (z_2)\n            {\n                goto label_40d505;\n            }\n            goto label_40d3fc;\n        }\n        r12 = \"alpha\";\n    }\n    rcx_1 = *arg4;\n    rax_1 = *arg3;\n    int64_t temp1_1 = *arg5;\n    c_2 = temp1_1 < rcx_1;\n    z_2 = temp1_1 == rcx_1;\n    if ((!z_2))\n    {\n        goto label_40d3fc;\n    }\nlabel_40d505:\n    int64_t r14_1 = ((rcx_1 + rcx_1) + 1);\n    rax_1 = realloc(rax_1, (r14_1 << 3));\n    c_2 = false;\n    z_2 = (rax_1 & rax_1) == 0;\n    int64_t rax_6;\n    if (z_2)\n    {\n        rax_6 = 0xc;\n    }\n    else\n    {\n        *arg3 = rax_1;\n        *arg5 = r14_1;\n        rcx_1 = *arg4;\n    label_40d3fc:\n        *arg4 = (rcx_1 + 1);\n        void* const rdi_2 = \"alnum\";\n        int64_t rcx_2 = 6;\n        void* const rsi_1 = r12;\n        *(rax_1 + (rcx_1 << 3)) = wctype(r12);\n        while (rcx_2 != 0)\n        {\n            char temp4_1 = *rsi_1;\n            char temp5_1 = *rdi_2;\n            c_2 = temp4_1 < temp5_1;\n            z_2 = temp4_1 == temp5_1;\n            rsi_1 = (rsi_1 + 1);\n            rdi_2 = (rdi_2 + 1);\n            rcx_2 = (rcx_2 - 1);\n            if ((!z_2))\n            {\n                break;\n            }\n        }\n        wctype_t rax_2;\n        rax_2 = ((!z_2) && (!c_2));\n        rax_2 = (rax_2 - 0);\n        bool c_3 = false;\n        bool z_3 = (rax_2 & rax_2) == 0;\n        if ((!z_3))\n        {\n            void* const rdi_3 = \"cntrl\";\n            int64_t rcx_3 = 6;\n            void* const rsi_2 = r12;\n            while (rcx_3 != 0)\n            {\n                char temp8_1 = *rsi_2;\n                char temp9_1 = *rdi_3;\n                c_3 = temp8_1 < temp9_1;\n                z_3 = temp8_1 == temp9_1;\n                rsi_2 = (rsi_2 + 1);\n                rdi_3 = (rdi_3 + 1);\n                rcx_3 = (rcx_3 - 1);\n                if ((!z_3))\n                {\n                    break;\n                }\n            }\n            rax_2 = ((!z_3) && (!c_3));\n            rax_2 = (rax_2 - 0);\n            bool c_4 = false;\n            bool z_4 = (rax_2 & rax_2) == 0;\n            if (z_4)\n            {\n                int64_t rcx_4 = 0;\n                uint16_t* rdx_1 = *__ctype_b_loc();\n                if (arg1 != 0)\n                {\n                    int64_t rax_23 = 0;\n                    do\n                    {\n                        if ((rdx_1[rax_23] & 2) != 0)\n                        {\n                            uint64_t rcx_16 = *(arg1 + rax_23);\n                            uint64_t rsi_20 = ((rcx_16 >> 3) & 0x18);\n                            *(arg2 + rsi_20) = (*(arg2 + rsi_20) | (1 << rcx_16));\n                        }\n                        rax_23 = (rax_23 + 1);\n                    } while (rax_23 != 0x100);\n                }\n                else\n                {\n                    do\n                    {\n                        if ((rdx_1[rcx_4] & 2) != 0)\n                        {\n                            int64_t rax_5 = (rcx_4 >> 6);\n                            arg2[rax_5] = (arg2[rax_5] | (1 << rcx_4));\n                        }\n                        rcx_4 = (rcx_4 + 1);\n                    } while (rcx_4 != 0x100);\n                }\n                goto label_40d484;\n            }\n            void* const rdi_6 = \"lower\";\n            int64_t rcx_7 = 6;\n            void* const rsi_7 = r12;\n            while (rcx_7 != 0)\n            {\n                char temp11_1 = *rsi_7;\n                char temp12_1 = *rdi_6;\n                c_4 = temp11_1 < temp12_1;\n                z_4 = temp11_1 == temp12_1;\n                rsi_7 = (rsi_7 + 1);\n                rdi_6 = (rdi_6 + 1);\n                rcx_7 = (rcx_7 - 1);\n                if ((!z_4))\n                {\n                    break;\n                }\n            }\n            rax_2 = ((!z_4) && (!c_4));\n            rax_2 = (rax_2 - 0);\n            bool c_5 = false;\n            bool z_5 = (rax_2 & rax_2) == 0;\n            if (z_5)\n            {\n                int64_t rcx_10 = 0;\n                uint16_t* rdx_5 = *__ctype_b_loc();\n                if (arg1 != 0)\n                {\n                    int64_t rax_24 = 0;\n                    do\n                    {\n                        if ((*(&rdx_5[rax_24] + 1) & 2) != 0)\n                        {\n                            uint64_t rcx_17 = *(arg1 + rax_24);\n                            uint64_t rsi_23 = ((rcx_17 >> 3) & 0x18);\n                            *(arg2 + rsi_23) = (*(arg2 + rsi_23) | (1 << rcx_17));\n                        }\n                        rax_24 = (rax_24 + 1);\n                    } while (rax_24 != 0x100);\n                }\n                else\n                {\n                    do\n                    {\n                        if ((*(&rdx_5[rcx_10] + 1) & 2) != 0)\n                        {\n                            int64_t rax_15 = (rcx_10 >> 6);\n                            arg2[rax_15] = (arg2[rax_15] | (1 << rcx_10));\n                        }\n                        rcx_10 = (rcx_10 + 1);\n                    } while (rcx_10 != 0x100);\n                }\n                goto label_40d484;\n            }\n            void* const rdi_7 = \"space\";\n            int64_t rcx_8 = 6;\n            void* const rsi_8 = r12;\n            while (rcx_8 != 0)\n            {\n                char temp13_1 = *rsi_8;\n                char temp14_1 = *rdi_7;\n                c_5 = temp13_1 < temp14_1;\n                z_5 = temp13_1 == temp14_1;\n                rsi_8 = (rsi_8 + 1);\n                rdi_7 = (rdi_7 + 1);\n                rcx_8 = (rcx_8 - 1);\n                if ((!z_5))\n                {\n                    break;\n                }\n            }\n            rax_2 = ((!z_5) && (!c_5));\n            rax_2 = (rax_2 - 0);\n            bool c_6 = false;\n            bool z_6 = (rax_2 & rax_2) == 0;\n            if (z_6)\n            {\n                int64_t rcx_9 = 0;\n                uint16_t* rdx_4 = *__ctype_b_loc();\n                if (arg1 != 0)\n                {\n                    int64_t rax_34 = 0;\n                    do\n                    {\n                        if ((*(&rdx_4[rax_34] + 1) & 0x20) != 0)\n                        {\n                            uint64_t rcx_25 = *(arg1 + rax_34);\n                            uint64_t rsi_34 = ((rcx_25 >> 3) & 0x18);\n                            *(arg2 + rsi_34) = (*(arg2 + rsi_34) | (1 << rcx_25));\n                        }\n                        rax_34 = (rax_34 + 1);\n                    } while (rax_34 != 0x100);\n                }\n                else\n                {\n                    do\n                    {\n                        if ((*(&rdx_4[rcx_9] + 1) & 0x20) != 0)\n                        {\n                            int64_t rax_12 = (rcx_9 >> 6);\n                            arg2[rax_12] = (arg2[rax_12] | (1 << rcx_9));\n                        }\n                        rcx_9 = (rcx_9 + 1);\n                    } while (rcx_9 != 0x100);\n                }\n                goto label_40d484;\n            }\n            void* const rdi_8 = \"alpha\";\n            int64_t rcx_11 = 6;\n            void* const rsi_11 = r12;\n            while (rcx_11 != 0)\n            {\n                char temp15_1 = *rsi_11;\n                char temp16_1 = *rdi_8;\n                c_6 = temp15_1 < temp16_1;\n                z_6 = temp15_1 == temp16_1;\n                rsi_11 = (rsi_11 + 1);\n                rdi_8 = (rdi_8 + 1);\n                rcx_11 = (rcx_11 - 1);\n                if ((!z_6))\n                {\n                    break;\n                }\n            }\n            rax_2 = ((!z_6) && (!c_6));\n            rax_2 = (rax_2 - 0);\n            bool c_7 = false;\n            bool z_7 = (rax_2 & rax_2) == 0;\n            if (z_7)\n            {\n                int64_t rcx_14 = 0;\n                uint16_t* rdx_7 = *__ctype_b_loc();\n                if (arg1 != 0)\n                {\n                    int64_t rax_33 = 0;\n                    do\n                    {\n                        if ((*(&rdx_7[rax_33] + 1) & 4) != 0)\n                        {\n                            uint64_t rcx_24 = *(arg1 + rax_33);\n                            uint64_t rsi_31 = ((rcx_24 >> 3) & 0x18);\n                            *(arg2 + rsi_31) = (*(arg2 + rsi_31) | (1 << rcx_24));\n                        }\n                        rax_33 = (rax_33 + 1);\n                    } while (rax_33 != 0x100);\n                }\n                else\n                {\n                    do\n                    {\n                        if ((*(&rdx_7[rcx_14] + 1) & 4) != 0)\n                        {\n                            int64_t rax_21 = (rcx_14 >> 6);\n                            arg2[rax_21] = (arg2[rax_21] | (1 << rcx_14));\n                        }\n                        rcx_14 = (rcx_14 + 1);\n                    } while (rcx_14 != 0x100);\n                }\n                goto label_40d484;\n            }\n            void* const rdi_9 = \"digit\";\n            int64_t rcx_12 = 6;\n            void* const rsi_12 = r12;\n            while (rcx_12 != 0)\n            {\n                char temp17_1 = *rsi_12;\n                char temp18_1 = *rdi_9;\n                c_7 = temp17_1 < temp18_1;\n                z_7 = temp17_1 == temp18_1;\n                rsi_12 = (rsi_12 + 1);\n                rdi_9 = (rdi_9 + 1);\n                rcx_12 = (rcx_12 - 1);\n                if ((!z_7))\n                {\n                    break;\n                }\n            }\n            rax_2 = ((!z_7) && (!c_7));\n            rax_2 = (rax_2 - 0);\n            bool c_8 = false;\n            bool z_8 = (rax_2 & rax_2) == 0;\n            if (z_8)\n            {\n                int64_t rcx_13 = 0;\n                uint16_t* rdx_6 = *__ctype_b_loc();\n                if (arg1 != 0)\n                {\n                    int64_t rax_35 = 0;\n                    do\n                    {\n                        if ((*(&rdx_6[rax_35] + 1) & 8) != 0)\n                        {\n                            uint64_t rcx_26 = *(arg1 + rax_35);\n                            uint64_t rsi_37 = ((rcx_26 >> 3) & 0x18);\n                            *(arg2 + rsi_37) = (*(arg2 + rsi_37) | (1 << rcx_26));\n                        }\n                        rax_35 = (rax_35 + 1);\n                    } while (rax_35 != 0x100);\n                }\n                else\n                {\n                    do\n                    {\n                        if ((*(&rdx_6[rcx_13] + 1) & 8) != 0)\n                        {\n                            int64_t rax_18 = (rcx_13 >> 6);\n                            arg2[rax_18] = (arg2[rax_18] | (1 << rcx_13));\n                        }\n                        rcx_13 = (rcx_13 + 1);\n                    } while (rcx_13 != 0x100);\n                }\n                goto label_40d484;\n            }\n            void* const rdi_10 = \"print\";\n            int64_t rcx_18 = 6;\n            void* const rsi_24 = r12;\n            while (rcx_18 != 0)\n            {\n                char temp19_1 = *rsi_24;\n                char temp20_1 = *rdi_10;\n                c_8 = temp19_1 < temp20_1;\n                z_8 = temp19_1 == temp20_1;\n                rsi_24 = (rsi_24 + 1);\n                rdi_10 = (rdi_10 + 1);\n                rcx_18 = (rcx_18 - 1);\n                if ((!z_8))\n                {\n                    break;\n                }\n            }\n            rax_2 = ((!z_8) && (!c_8));\n            rax_2 = (rax_2 - 0);\n            bool c_9 = false;\n            bool z_9 = (rax_2 & rax_2) == 0;\n            if (z_9)\n            {\n                int64_t rcx_19 = 0;\n                uint16_t* rdx_8 = *__ctype_b_loc();\n                if (arg1 != 0)\n                {\n                    int64_t rax_50 = 0;\n                    do\n                    {\n                        if ((*(&rdx_8[rax_50] + 1) & 0x40) != 0)\n                        {\n                            uint64_t rcx_34 = *(arg1 + rax_50);\n                            uint64_t rsi_44 = ((rcx_34 >> 3) & 0x18);\n                            *(arg2 + rsi_44) = (*(arg2 + rsi_44) | (1 << rcx_34));\n                        }\n                        rax_50 = (rax_50 + 1);\n                    } while (rax_50 != 0x100);\n                }\n                else\n                {\n                    do\n                    {\n                        if ((*(&rdx_8[rcx_19] + 1) & 0x40) != 0)\n                        {\n                            int64_t rax_27 = (rcx_19 >> 6);\n                            arg2[rax_27] = (arg2[rax_27] | (1 << rcx_19));\n                        }\n                        rcx_19 = (rcx_19 + 1);\n                    } while (rcx_19 != 0x100);\n                }\n                goto label_40d484;\n            }\n            void* const rdi_11 = \"upper\";\n            int64_t rcx_20 = 6;\n            void* const rsi_26 = r12;\n            while (rcx_20 != 0)\n            {\n                char temp21_1 = *rsi_26;\n                char temp22_1 = *rdi_11;\n                c_9 = temp21_1 < temp22_1;\n                z_9 = temp21_1 == temp22_1;\n                rsi_26 = (rsi_26 + 1);\n                rdi_11 = (rdi_11 + 1);\n                rcx_20 = (rcx_20 - 1);\n                if ((!z_9))\n                {\n                    break;\n                }\n            }\n            rax_2 = ((!z_9) && (!c_9));\n            rax_2 = (rax_2 - 0);\n            bool c_10 = false;\n            bool z_10 = (rax_2 & rax_2) == 0;\n            if (z_10)\n            {\n                int64_t rcx_21 = 0;\n                uint16_t* rax_29 = *__ctype_b_loc();\n                if (arg1 != 0)\n                {\n                    int64_t rdx_21 = 0;\n                    do\n                    {\n                        if ((*(&rax_29[rdx_21] + 1) & 1) != 0)\n                        {\n                            uint64_t rcx_36 = *(arg1 + rdx_21);\n                            uint64_t rsi_50 = ((rcx_36 >> 3) & 0x18);\n                            *(arg2 + rsi_50) = (*(arg2 + rsi_50) | (1 << rcx_36));\n                        }\n                        rdx_21 = (rdx_21 + 1);\n                    } while (rdx_21 != 0x100);\n                }\n                else\n                {\n                    do\n                    {\n                        if ((*(&rax_29[rcx_21] + 1) & 1) != 0)\n                        {\n                            int64_t rdx_10 = (rcx_21 >> 6);\n                            arg2[rdx_10] = (arg2[rdx_10] | (1 << rcx_21));\n                        }\n                        rcx_21 = (rcx_21 + 1);\n                    } while (rcx_21 != 0x100);\n                }\n                goto label_40d484;\n            }\n            void* const rdi_12 = \"blank\";\n            int64_t rcx_22 = 6;\n            void* const rsi_28 = r12;\n            while (rcx_22 != 0)\n            {\n                char temp23_1 = *rsi_28;\n                char temp24_1 = *rdi_12;\n                c_10 = temp23_1 < temp24_1;\n                z_10 = temp23_1 == temp24_1;\n                rsi_28 = (rsi_28 + 1);\n                rdi_12 = (rdi_12 + 1);\n                rcx_22 = (rcx_22 - 1);\n                if ((!z_10))\n                {\n                    break;\n                }\n            }\n            rax_2 = ((!z_10) && (!c_10));\n            rax_2 = (rax_2 - 0);\n            bool c_11 = false;\n            bool z_11 = (rax_2 & rax_2) == 0;\n            if (z_11)\n            {\n                int64_t rcx_23 = 0;\n                uint16_t* rdx_11 = *__ctype_b_loc();\n                if (arg1 != 0)\n                {\n                    int64_t rax_51 = 0;\n                    do\n                    {\n                        if ((rdx_11[rax_51] & 1) != 0)\n                        {\n                            uint64_t rcx_35 = *(arg1 + rax_51);\n                            uint64_t rsi_47 = ((rcx_35 >> 3) & 0x18);\n                            *(arg2 + rsi_47) = (*(arg2 + rsi_47) | (1 << rcx_35));\n                        }\n                        rax_51 = (rax_51 + 1);\n                    } while (rax_51 != 0x100);\n                }\n                else\n                {\n                    do\n                    {\n                        if ((rdx_11[rcx_23] & 1) != 0)\n                        {\n                            int64_t rax_32 = (rcx_23 >> 6);\n                            arg2[rax_32] = (arg2[rax_32] | (1 << rcx_23));\n                        }\n                        rcx_23 = (rcx_23 + 1);\n                    } while (rcx_23 != 0x100);\n                }\n                goto label_40d484;\n            }\n            void* const rdi_14 = \"graph\";\n            int64_t rcx_27 = 6;\n            void* const rsi_38 = r12;\n            while (rcx_27 != 0)\n            {\n                char temp25_1 = *rsi_38;\n                char temp26_1 = *rdi_14;\n                c_11 = temp25_1 < temp26_1;\n                z_11 = temp25_1 == temp26_1;\n                rsi_38 = (rsi_38 + 1);\n                rdi_14 = (rdi_14 + 1);\n                rcx_27 = (rcx_27 - 1);\n                if ((!z_11))\n                {\n                    break;\n                }\n            }\n            rax_2 = ((!z_11) && (!c_11));\n            rax_2 = (rax_2 - 0);\n            if (rax_2 == 0)\n            {\n                int64_t rcx_28 = 0;\n                uint16_t* rsi_39 = *__ctype_b_loc();\n                if (arg1 != 0)\n                {\n                    int64_t rax_39 = 0;\n                    do\n                    {\n                        if (rsi_39[rax_39] < 0)\n                        {\n                            uint64_t rcx_29 = *(arg1 + rax_39);\n                            uint64_t rdx_14 = ((rcx_29 >> 3) & 0x18);\n                            *(arg2 + rdx_14) = (*(arg2 + rdx_14) | (1 << rcx_29));\n                        }\n                        rax_39 = (rax_39 + 1);\n                    } while (rax_39 != 0x100);\n                }\n                else\n                {\n                    do\n                    {\n                        if (rsi_39[rcx_28] < 0)\n                        {\n                            int64_t rax_38 = (rcx_28 >> 6);\n                            arg2[rax_38] = (arg2[rax_38] | (1 << rcx_28));\n                        }\n                        rcx_28 = (rcx_28 + 1);\n                    } while (rcx_28 != 0x100);\n                }\n                goto label_40d484;\n            }\n            if (strcmp(r12, \"punct\") == 0)\n            {\n                int64_t rcx_30 = 0;\n                uint16_t* rsi_40 = *__ctype_b_loc();\n                if (arg1 != 0)\n                {\n                    int64_t rax_44 = 0;\n                    do\n                    {\n                        if ((rsi_40[rax_44] & 4) != 0)\n                        {\n                            uint64_t rcx_31 = *(arg1 + rax_44);\n                            uint64_t rdx_17 = ((rcx_31 >> 3) & 0x18);\n                            *(arg2 + rdx_17) = (*(arg2 + rdx_17) | (1 << rcx_31));\n                        }\n                        rax_44 = (rax_44 + 1);\n                    } while (rax_44 != 0x100);\n                }\n                else\n                {\n                    do\n                    {\n                        if ((rsi_40[rcx_30] & 4) != 0)\n                        {\n                            int64_t rax_43 = (rcx_30 >> 6);\n                            arg2[rax_43] = (arg2[rax_43] | (1 << rcx_30));\n                        }\n                        rcx_30 = (rcx_30 + 1);\n                    } while (rcx_30 != 0x100);\n                }\n                goto label_40d484;\n            }\n            if (strcmp(r12, \"xdigit\") == 0)\n            {\n                int64_t rcx_32 = 0;\n                uint16_t* rsi_41 = *__ctype_b_loc();\n                if (arg1 != 0)\n                {\n                    int64_t rax_49 = 0;\n                    do\n                    {\n                        if ((*(&rsi_41[rax_49] + 1) & 0x10) != 0)\n                        {\n                            uint64_t rcx_33 = *(arg1 + rax_49);\n                            uint64_t rdx_20 = ((rcx_33 >> 3) & 0x18);\n                            *(arg2 + rdx_20) = (*(arg2 + rdx_20) | (1 << rcx_33));\n                        }\n                        rax_49 = (rax_49 + 1);\n                    } while (rax_49 != 0x100);\n                }\n                else\n                {\n                    do\n                    {\n                        if ((*(&rsi_41[rcx_32] + 1) & 0x10) != 0)\n                        {\n                            int64_t rax_48 = (rcx_32 >> 6);\n                            arg2[rax_48] = (arg2[rax_48] | (1 << rcx_32));\n                        }\n                        rcx_32 = (rcx_32 + 1);\n                    } while (rcx_32 != 0x100);\n                }\n                goto label_40d484;\n            }\n            rax_6 = 4;\n        }\n        else\n        {\n            int64_t rcx_5 = 0;\n            uint16_t* rdx_2 = *__ctype_b_loc();\n            if (arg1 != 0)\n            {\n                int64_t rax_22 = 0;\n                do\n                {\n                    if ((rdx_2[rax_22] & 8) != 0)\n                    {\n                        uint64_t rcx_15 = *(arg1 + rax_22);\n                        uint64_t rsi_17 = ((rcx_15 >> 3) & 0x18);\n                        *(arg2 + rsi_17) = (*(arg2 + rsi_17) | (1 << rcx_15));\n                    }\n                    rax_22 = (rax_22 + 1);\n                } while (rax_22 != 0x100);\n            }\n            else\n            {\n                do\n                {\n                    if ((rdx_2[rcx_5] & 8) != 0)\n                    {\n                        int64_t rax_9 = (rcx_5 >> 6);\n                        arg2[rax_9] = (arg2[rax_9] | (1 << rcx_5));\n                    }\n                    rcx_5 = (rcx_5 + 1);\n                } while (rcx_5 != 0x100);\n            }\n        label_40d484:\n            rax_6 = 0;\n        }\n    }\n    return rax_6;\n}\n\n"
        },
        {
            "funcName": "sub_40db70",
            "funcStartAddr": "0x40db70",
            "funcEndAddr": "0x40dda5",
            "decompiledFuncCode": "void* sub_40db70(void* arg1, void* arg2, void* arg3, char* arg4, char arg5, \n    int32_t* arg6)\n{\n    char* r13 = arg4;\n    int64_t var_60 = 0;\n    int64_t* rax = calloc(0x20, 1);\n    if (rax == 0)\n    {\n        goto label_40dd45;\n    }\n    int64_t* rax_1 = calloc(0x50, 1);\n    void* r14_1;\n    if (rax_1 == 0)\n    {\n        r14_1 = nullptr;\n        free(rax);\n        *arg6 = 0xc;\n    }\n    else\n    {\n        rax_1[4] = ((rax_1[4] & 0xfe) | (arg5 & 1));\n        int32_t rax_5 = sub_40d3a0(arg2, rax, &rax_1[3], &rax_1[9], &var_60, arg3, 0);\n        if (rax_5 != 0)\n        {\n            void* var_78;\n            var_78 = rax_5;\n            r14_1 = nullptr;\n            free(rax);\n            sub_409170(rax_1);\n            *arg6 = var_78;\n        }\n        else\n        {\n            int64_t rcx_2 = *r13;\n            if (rcx_2 != 0)\n            {\n                do\n                {\n                    int64_t rax_6 = (rcx_2 + 0x3f);\n                    if (rcx_2 >= 0)\n                    {\n                        rax_6 = rcx_2;\n                    }\n                    r13 = &r13[1];\n                    uint8_t rdx_6 = ((rcx_2 >> 0x3f) >> 0x3a);\n                    int64_t rax_7 = (rax_6 >> 6);\n                    int64_t rdx_7 = (1 << (((rcx_2 + rdx_6) & 0x3f) - rdx_6));\n                    rcx_2 = *r13;\n                    rax[rax_7] = (rax[rax_7] | rdx_7);\n                } while (rcx_2 != 0);\n            }\n            if (arg5 != 0)\n            {\n                int64_t* rax_8 = rax;\n                void* rdx_8 = &rax[4];\n                do\n                {\n                    *rax_8 = (!*rax_8);\n                    rax_8 = &rax_8[1];\n                } while (rdx_8 != rax_8);\n            }\n            if (*(arg1 + 0xb4) > 1)\n            {\n                int64_t* rcx_6 = *(arg1 + 0x78);\n                int64_t rax_9 = 0;\n                do\n                {\n                    *(rax + rax_9) = (*(rax + rax_9) & *(rcx_6 + rax_9));\n                    rax_9 = (rax_9 + 8);\n                } while (rax_9 != 0x20);\n            }\n            void* r12_1 = (arg1 + 0x70);\n            void* r13_1 = (arg1 + 0x80);\n            char var_50_1 = 3;\n            int64_t* var_58 = rax;\n            void* rax_10 = sub_40a780(r12_1, r13_1, nullptr, nullptr, &var_58);\n            r14_1 = rax_10;\n            void* rax_11;\n            if (rax_10 != 0)\n            {\n                if (*(arg1 + 0xb4) <= 1)\n                {\n                    sub_409170(rax_1);\n                }\n                else\n                {\n                    *(arg1 + 0xb0) = (*(arg1 + 0xb0) | 2);\n                    char var_50_2 = 6;\n                    var_58 = rax_1;\n                    rax_11 = sub_40a780(r12_1, r13_1, nullptr, nullptr, &var_58);\n                }\n            }\n            if ((rax_10 == 0 || ((rax_10 != 0 && *(arg1 + 0xb4) > 1) && rax_11 == 0)))\n            {\n                free(rax);\n                sub_409170(rax_1);\n            label_40dd45:\n                r14_1 = nullptr;\n                *arg6 = 0xc;\n            }\n            if (((rax_10 != 0 && *(arg1 + 0xb4) > 1) && rax_11 != 0))\n            {\n                char var_40_1 = 0xa;\n                void var_48;\n                r14_1 = sub_40a780(r12_1, r13_1, r14_1, rax_11, &var_48);\n            }\n        }\n    }\n    return r14_1;\n}\n\n"
        },
        {
            "funcName": "sub_40ddb0",
            "funcStartAddr": "0x40ddb0",
            "funcEndAddr": "0x40e288",
            "decompiledFuncCode": "int64_t* sub_40ddb0(int64_t* arg1, int64_t* arg2, int64_t* arg3, char* arg4)\n{\n    int32_t r12 = 0;\n    int64_t* rax = *arg1;\n    int64_t* var_178 = rax;\n    if (*(rax + 0xb4) == 1)\n    {\n        r12 = ((arg1[3] >> 0x16) & 1);\n    }\n    int64_t rbx = 0;\n    if (*arg2 > 0)\n    {\n        do\n        {\n            int64_t r14_1 = *(*arg3 + (rbx << 3));\n            int64_t* rcx = *var_178;\n            int64_t rax_5 = (r14_1 << 4);\n            char* rsi = (rcx + rax_5);\n            rax = rsi[8];\n            char rdx_1 = rax;\n            mbstate_t var_140;\n            char var_138;\n            if (rax == 1)\n            {\n                uint64_t rdx_2 = *rsi;\n                arg4[rdx_2] = 1;\n                if (r12 != 0)\n                {\n                    arg4[*__ctype_tolower_loc()[rdx_2]] = 1;\n                }\n                if (((*(arg1 + 0x1a) & 0x40) != 0 && *(var_178 + 0xb4) > 1))\n                {\n                    char* rax_11 = *var_178;\n                    var_138 = rax_11[rax_5];\n                    int64_t rdx_5 = (r14_1 + 1);\n                    void* rax_12;\n                    uint64_t r13_1;\n                    if (var_178[2] > rdx_5)\n                    {\n                        rax_12 = &rax_11[(rax_5 + 0x10)];\n                        if ((*(rax_12 + 8) & 0x2000ff) == 0x200001)\n                        {\n                            void var_137;\n                            void* rsi_2 = &var_137;\n                            do\n                            {\n                                rsi_2 = (rsi_2 + 1);\n                                rdx_5 = (rdx_5 + 1);\n                                *(rsi_2 - 1) = *rax_12;\n                                if (var_178[2] <= rdx_5)\n                                {\n                                    break;\n                                }\n                                rax_12 = ((rdx_5 << 4) + *var_178);\n                            } while ((*(rax_12 + 8) & 0x2000ff) == 0x200001);\n                            r13_1 = (rsi_2 - &var_138);\n                        }\n                    }\n                    if ((var_178[2] <= rdx_5 || (var_178[2] > rdx_5 && (*(rax_12 + 8) & 0x2000ff) != 0x200001)))\n                    {\n                        r13_1 = 1;\n                    }\n                    var_140.__count = 0;\n                    var_140.__value = 0;\n                    uint32_t var_144;\n                    if ((sub_407dd0(&var_144, &var_138, r13_1, &var_140) == r13_1 && wcrtomb(&var_138, towlower(var_144), &var_140) != -1))\n                    {\n                        rbx = (rbx + 1);\n                        arg4[var_138] = 1;\n                        rax = arg2;\n                        if (rbx >= *rax)\n                        {\n                            break;\n                        }\n                        continue;\n                    }\n                }\n            }\n            else if (rax == 3)\n            {\n                int64_t var_170_3 = 0;\n                while (true)\n                {\n                    uint64_t r14_3 = 0;\n                    int64_t rbp_2 = *(*(rcx + rax_5) + var_170_3);\n                    int64_t r13_3 = (var_170_3 << 3);\n                    do\n                    {\n                        if ((TEST_BITQ(rbp_2, r14_3)))\n                        {\n                            void* rax_37 = &arg4[r13_3];\n                            arg4[r13_3] = 1;\n                            if (r12 != 0)\n                            {\n                                if ((r13_3 + 0x80) <= 0x17f)\n                                {\n                                    rax_37 = &arg4[*__ctype_tolower_loc()[r13_3]];\n                                }\n                                *rax_37 = 1;\n                            }\n                        }\n                        r14_3 = (r14_3 + 1);\n                        r13_3 = (r13_3 + 1);\n                    } while (r14_3 != 0x40);\n                    var_170_3 = (var_170_3 + 8);\n                    if (var_170_3 == 0x20)\n                    {\n                        break;\n                    }\n                    rcx = *var_178;\n                }\n            }\n            else if (rax == 6)\n            {\n                wint_t** r13_2 = *rsi;\n                if ((*(var_178 + 0xb4) <= 1 || (((*(var_178 + 0xb4) > 1 && r13_2[9] == 0) && (r13_2[4] & 1) == 0) && r13_2[8] == 0)))\n                {\n                    int64_t r14_2 = 0;\n                    if (r13_2[5] > 0)\n                    {\n                        do\n                        {\n                            var_140.__count = 0;\n                            var_140.__value = 0;\n                            int64_t rbp_1 = (r14_2 << 2);\n                            if (wcrtomb(&var_138, *r13_2[r14_2], &var_140) != -1)\n                            {\n                                uint64_t rdx_9 = var_138;\n                                arg4[rdx_9] = 1;\n                                if (r12 != 0)\n                                {\n                                    arg4[*__ctype_tolower_loc()[rdx_9]] = 1;\n                                }\n                            }\n                            if ((((*(arg1 + 0x1a) & 0x40) != 0 && *(var_178 + 0xb4) > 1) && wcrtomb(&var_138, towlower(*(*r13_2 + rbp_1)), &var_140) != -1))\n                            {\n                                arg4[var_138] = 1;\n                            }\n                            r14_2 = (r14_2 + 1);\n                        } while (r14_2 < r13_2[5]);\n                    }\n                }\n                if ((*(var_178 + 0xb4) > 1 && ((r13_2[9] != 0 || (r13_2[9] == 0 && (r13_2[4] & 1) != 0)) || ((r13_2[9] == 0 && (r13_2[4] & 1) == 0) && r13_2[8] != 0))))\n                {\n                    var_140.__count = 0;\n                    do\n                    {\n                        var_138 = 0;\n                        if (sub_407dd0(nullptr, &var_140, 1, &var_138) == -2)\n                        {\n                            arg4[var_140.__count] = 1;\n                        }\n                        var_140.__count = (var_140.__count + 1);\n                    } while (var_140.__count != 0xff);\n                }\n            }\n            else\n            {\n                int128_t zmm0;\n                if (((rdx_1 & 0xfd) != 5 && rax == 2))\n                {\n                    zmm0 = data_419400;\n                    *arg4 = zmm0;\n                    *(arg4 + 0x10) = zmm0;\n                    *(arg4 + 0x20) = zmm0;\n                    *(arg4 + 0x30) = zmm0;\n                    *(arg4 + 0x40) = zmm0;\n                    *(arg4 + 0x50) = zmm0;\n                    *(arg4 + 0x60) = zmm0;\n                    *(arg4 + 0x70) = zmm0;\n                    *(arg4 + 0x80) = zmm0;\n                    *(arg4 + 0x90) = zmm0;\n                    *(arg4 + 0xa0) = zmm0;\n                    *(arg4 + 0xb0) = zmm0;\n                    *(arg4 + 0xc0) = zmm0;\n                    *(arg4 + 0xd0) = zmm0;\n                    *(arg4 + 0xe0) = zmm0;\n                    *(arg4 + 0xf0) = zmm0;\n                }\n                if ((rdx_1 & 0xfd) == 5)\n                {\n                    zmm0 = data_419400;\n                    *arg4 = zmm0;\n                    *(arg4 + 0x10) = zmm0;\n                    *(arg4 + 0x20) = zmm0;\n                    *(arg4 + 0x30) = zmm0;\n                    *(arg4 + 0x40) = zmm0;\n                    *(arg4 + 0x50) = zmm0;\n                    *(arg4 + 0x60) = zmm0;\n                    *(arg4 + 0x70) = zmm0;\n                    *(arg4 + 0x80) = zmm0;\n                    *(arg4 + 0x90) = zmm0;\n                    *(arg4 + 0xa0) = zmm0;\n                    *(arg4 + 0xb0) = zmm0;\n                    *(arg4 + 0xc0) = zmm0;\n                    *(arg4 + 0xd0) = zmm0;\n                    *(arg4 + 0xe0) = zmm0;\n                    *(arg4 + 0xf0) = zmm0;\n                    if (rax != 2)\n                    {\n                        break;\n                    }\n                }\n                if ((((rdx_1 & 0xfd) != 5 && rax == 2) || (rdx_1 & 0xfd) == 5))\n                {\n                    rax = arg1;\n                    rax[7] = (rax[7] | 1);\n                    break;\n                }\n            }\n            rax = arg2;\n            rbx = (rbx + 1);\n        } while (rbx < *rax);\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40e290",
            "funcStartAddr": "0x40e290",
            "funcEndAddr": "0x40e514",
            "decompiledFuncCode": "uint64_t sub_40e290(void* arg1, int64_t* arg2, int64_t arg3, void* arg4, \n    int64_t arg5)\n{\n    int64_t* r10 = (arg1 + (arg3 << 4));\n    char r11 = r10[1];\n    int32_t rbp_1;\n    if (r11 == 7)\n    {\n        char* rax_12 = *(arg4 + 8);\n        char rdx_3 = rax_12[arg5];\n        if (rdx_3 <= 0xc1)\n        {\n        label_40e2de:\n            rbp_1 = 0;\n        }\n        else\n        {\n            int64_t rcx_1 = *(arg4 + 0x58);\n            int64_t rsi_3 = (arg5 + 1);\n            if (rsi_3 >= rcx_1)\n            {\n                goto label_40e2de;\n            }\n            char rdi_2 = rax_12[(arg5 + 1)];\n            if (rdx_3 > 0xdf)\n            {\n                int64_t rdi_3;\n                if ((((((rdx_3 > 0xef && rdx_3 > 0xf7) && rdx_3 > 0xfb) && rdx_3 <= 0xfd) && rdx_3 != 0xfc) || (rdx_3 == 0xfc && rdi_2 > 0x83)))\n                {\n                    rdi_3 = 6;\n                    rbp_1 = 6;\n                }\n                if (((((rdx_3 > 0xef && rdx_3 > 0xf7) && rdx_3 <= 0xfb) && rdx_3 != 0xf8) || (rdx_3 == 0xf8 && rdi_2 > 0x87)))\n                {\n                    rdi_3 = 5;\n                    rbp_1 = 5;\n                }\n                if ((((rdx_3 > 0xef && rdx_3 <= 0xf7) && rdx_3 != 0xf0) || (rdx_3 == 0xf0 && rdi_2 > 0x8f)))\n                {\n                    rdi_3 = 4;\n                    rbp_1 = 4;\n                }\n                if (((rdx_3 <= 0xef && rdx_3 != 0xe0) || (rdx_3 == 0xe0 && rdi_2 > 0x9f)))\n                {\n                    rdi_3 = 3;\n                    rbp_1 = 3;\n                }\n                if ((((((((((rdx_3 <= 0xef && rdx_3 != 0xe0) || (rdx_3 == 0xe0 && rdi_2 > 0x9f)) || ((rdx_3 > 0xef && rdx_3 <= 0xf7) && rdx_3 != 0xf0)) || (rdx_3 == 0xf0 && rdi_2 > 0x8f)) || (((rdx_3 > 0xef && rdx_3 > 0xf7) && rdx_3 <= 0xfb) && rdx_3 != 0xf8)) || (rdx_3 == 0xf8 && rdi_2 > 0x87)) || ((((rdx_3 > 0xef && rdx_3 > 0xf7) && rdx_3 > 0xfb) && rdx_3 <= 0xfd) && rdx_3 != 0xfc)) || (rdx_3 == 0xfc && rdi_2 > 0x83)) && rcx_1 >= (arg5 + rdi_3)))\n                {\n                    void* rdx_5 = &rax_12[rsi_3];\n                    void* rax_14 = &rax_12[(arg5 + rdi_3)];\n                    while ((*rdx_5 - 0x80) <= 0x3f)\n                    {\n                        rdx_5 = (rdx_5 + 1);\n                        if (rax_14 == rdx_5)\n                        {\n                            return rbp_1;\n                        }\n                    }\n                }\n                goto label_40e2de;\n            }\n            rbp_1 = 2;\n            if ((rdi_2 - 0x80) > 0x3f)\n            {\n                goto label_40e2de;\n            }\n        }\n    }\n    else\n    {\n        if (*(arg4 + 0x90) == 1)\n        {\n            goto label_40e2de;\n        }\n        int32_t rax_1 = sub_409ac0(arg4, arg5);\n        rbp_1 = rax_1;\n        if (r11 == 5)\n        {\n            if (rax_1 <= 1)\n            {\n                goto label_40e2de;\n            }\n            char rax_3 = *arg2;\n            if (((rax_3 & 0x40) == 0 && *(arg4 + 8)[arg5] == 0xa))\n            {\n                goto label_40e2de;\n            }\n            if (((rax_3 & 0x80) != 0 && *(arg4 + 8)[arg5] == 0))\n            {\n                goto label_40e2de;\n            }\n        }\n        else\n        {\n            if (r11 != 6)\n            {\n                goto label_40e2de;\n            }\n            if (rax_1 <= 1)\n            {\n                goto label_40e2de;\n            }\n            int64_t* r13_1 = *r10;\n            int64_t rsi_1 = r13_1[8];\n            int64_t rdx_2 = r13_1[5];\n            if (rsi_1 != 0)\n            {\n            label_40e341:\n                wint_t r12_1 = *(*(arg4 + 0x10) + (arg5 << 2));\n                if (rdx_2 <= 0)\n                {\n                label_40e373:\n                    if (r13_1[9] <= 0)\n                    {\n                        goto label_40e44c;\n                    }\n                    int64_t rbx_2 = 0;\n                    int32_t rax_11;\n                    do\n                    {\n                        rax_11 = iswctype(r12_1, *(r13_1[3] + (rbx_2 << 3)));\n                        if (rax_11 != 0)\n                        {\n                            break;\n                        }\n                        rbx_2 = (rbx_2 + 1);\n                    } while (rbx_2 < r13_1[9]);\n                    if (rax_11 != 0)\n                    {\n                        goto label_40e3a2;\n                    }\n                    rsi_1 = r13_1[8];\n                label_40e44c:\n                    if (rsi_1 <= 0)\n                    {\n                        goto label_40e47d;\n                    }\n                    int64_t rdx_6 = r13_1[1];\n                    int64_t rax_15 = 0;\n                    while ((!(r12_1 >= *(rdx_6 + (rax_15 << 2)) && r12_1 <= *(r13_1[2] + (rax_15 << 2)))))\n                    {\n                        rax_15 = (rax_15 + 1);\n                        if (rax_15 == rsi_1)\n                        {\n                            break;\n                        }\n                    }\n                    if ((!(r12_1 >= *(rdx_6 + (rax_15 << 2)) && r12_1 <= *(r13_1[2] + (rax_15 << 2)))))\n                    {\n                        goto label_40e47d;\n                    }\n                    goto label_40e3a2;\n                }\n                int32_t* rcx = *r13_1;\n                if (r12_1 != *rcx)\n                {\n                    int64_t rax_8 = 0;\n                    do\n                    {\n                        rax_8 = (rax_8 + 1);\n                        if (rdx_2 == rax_8)\n                        {\n                            break;\n                        }\n                    } while (r12_1 != rcx[rax_8]);\n                    if (rdx_2 == rax_8)\n                    {\n                        goto label_40e373;\n                    }\n                    goto label_40e3a2;\n                }\n            label_40e3a2:\n                if ((r13_1[4] & 1) != 0)\n                {\n                    goto label_40e2de;\n                }\n            }\n            else\n            {\n                if ((rdx_2 | r13_1[9]) != 0)\n                {\n                    goto label_40e341;\n                }\n            label_40e47d:\n                if ((r13_1[4] & 1) == 0)\n                {\n                    goto label_40e2de;\n                }\n            }\n        }\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_40e520",
            "funcStartAddr": "0x40e520",
            "funcEndAddr": "0x40ec3f",
            "decompiledFuncCode": "uint64_t sub_40e520(void* arg1, int64_t* arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5, int64_t arg6, int32_t arg7)\n{\n    int64_t* rbx = *(arg1 + 0x98);\n    int64_t r15 = arg2[1];\n    int64_t rax_3 = *((arg3 << 4) + *rbx);\n    int32_t var_80 = 0;\n    int64_t rax_5 = (*(arg1 + 0xe0) + arg6);\n    uint64_t rax_28;\n    int64_t rbx_9;\n    if (rax_5 >= r15)\n    {\n        rbx_9 = (rax_5 + 1);\n        if ((0x7fffffffffffffff - r15) < rbx_9)\n        {\n        label_40ebf8:\n            rax_28 = 0xc;\n        }\n        else\n        {\n            int64_t r14_4 = (r15 + rbx_9);\n            if (r14_4 > 0x1fffffffffffffff)\n            {\n                goto label_40ebf8;\n            }\n            int64_t rax_38 = realloc(arg2[2], (r14_4 << 3));\n            if (rax_38 == 0)\n            {\n                goto label_40ebf8;\n            }\n            arg2[2] = rax_38;\n            arg2[1] = r14_4;\n            memset((rax_38 + (r15 << 3)), 0, (rbx_9 << 3));\n        }\n    }\n    if ((rax_5 < r15 || (rax_5 >= r15 && (0x7fffffffffffffff - r15) >= rbx_9)))\n    {\n        int64_t rcx = *(arg1 + 0xb8);\n        int32_t rdx = *(arg1 + 0xa0);\n        int64_t rbx_1 = *arg2;\n        int64_t r14_1 = arg2[2];\n        int64_t rcx_1 = *(arg1 + 0x48);\n        *(arg1 + 0xb8) = r14_1;\n        int32_t var_f8_1;\n        if (rbx_1 == 0)\n        {\n            *(arg1 + 0x48) = arg4;\n            var_f8_1 = sub_40b840(arg1, (arg4 - 1), rdx, arg2);\n        }\n        else\n        {\n            *(arg1 + 0x48) = rbx_1;\n            var_f8_1 = sub_40b840(arg1, (rbx_1 - 1), rdx, arg2);\n        }\n        int64_t var_78;\n        int64_t var_70;\n        int64_t* var_68;\n        int64_t* rax_34;\n        int32_t rax_35;\n        if ((rbx_1 == 0 || (rbx_1 != 0 && rbx_1 == arg4)))\n        {\n            var_78 = 1;\n            var_70 = 1;\n            rax_34 = malloc(8);\n            var_68 = rax_34;\n            if (rax_34 == 0)\n            {\n                goto label_40ebf8;\n            }\n            *rax_34 = arg3;\n            rbx_1 = arg4;\n            var_80 = 0;\n            rax_35 = sub_40a480(rbx, &var_78, rax_3, arg7);\n            var_80 = rax_35;\n            if (rax_35 != 0)\n            {\n            label_40e9dd:\n                free(var_68);\n                rax_28 = var_80;\n            }\n        }\n        int64_t* r15_1;\n        if ((rbx_1 != 0 && rbx_1 != arg4))\n        {\n            r15_1 = *(r14_1 + (rbx_1 << 3));\n            if ((r15_1 == 0 || (r15_1 != 0 && (r15_1[0xd] & 0x40) == 0)))\n            {\n                var_68 = nullptr;\n                var_78 = 0;\n            }\n            if ((r15_1 != 0 && (r15_1[0xd] & 0x40) != 0))\n            {\n                rax_28 = sub_40abb0(&var_78, &r15_1[1]);\n                var_80 = rax_28;\n            }\n        }\n        if (((((rbx_1 == 0 || (rbx_1 != 0 && rbx_1 == arg4)) && rax_34 != 0) && rax_35 == 0) || (((((rbx_1 != 0 && rbx_1 != arg4) && r15_1 != 0) && (r15_1[0xd] & 0x40) != 0) && rax_28 == 0) && (r15_1[0xd] & 0x40) != 0)))\n        {\n            if (var_70 != 0)\n            {\n                int32_t rax_29 = sub_40b360(arg1, &var_78, rbx_1, rax_3, arg7);\n                var_80 = rax_29;\n                if (rax_29 != 0)\n                {\n                    goto label_40e9dd;\n                }\n                goto label_40ea65;\n            }\n        label_40ea65:\n            int64_t* rax_30 = sub_40adc0(&var_80, rbx, &var_78, var_f8_1);\n            r15_1 = rax_30;\n            if (rax_30 == 0)\n            {\n                if (var_80 != 0)\n                {\n                    goto label_40e9dd;\n                }\n                goto label_40ea7e;\n            }\n        label_40ea7e:\n            *(*(arg1 + 0xb8) + (rbx_1 << 3)) = r15_1;\n        }\n        if (((((rbx_1 != 0 && rbx_1 != arg4) && (r15_1 == 0 || (r15_1 != 0 && (r15_1[0xd] & 0x40) == 0))) || ((((rbx_1 != 0 && rbx_1 != arg4) && r15_1 != 0) && rax_28 == 0) && (r15_1[0xd] & 0x40) == 0)) || (((((rbx_1 == 0 || (rbx_1 != 0 && rbx_1 == arg4)) && rax_34 != 0) && rax_35 == 0) || (((((rbx_1 != 0 && rbx_1 != arg4) && r15_1 != 0) && (r15_1[0xd] & 0x40) != 0) && rax_28 == 0) && (r15_1[0xd] & 0x40) != 0)) && var_70 == 0)))\n        {\n            if (rbx_1 < arg6)\n            {\n                if (*(arg1 + 0xe0) < 0)\n                {\n                    goto label_40e935;\n                }\n                int64_t var_e8_1 = 0;\n                uint64_t rax_8 = *(arg1 + 0xb8);\n                int64_t r14_2 = (rbx_1 + 1);\n                void* rsi_1;\n                while (true)\n                {\n                    rsi_1 = *(rax_8 + (r14_2 << 3));\n                    int64_t var_70_1 = 0;\n                    var_f8_1 = (r14_2 - 1);\n                    int64_t rcx_4 = (r14_2 << 3);\n                    if (rsi_1 != 0)\n                    {\n                        rax_8 = sub_40a050(&var_78, (rsi_1 + 8));\n                        var_80 = rax_8;\n                        if (rax_8 != 0)\n                        {\n                            break;\n                        }\n                        if ((rax_8 == 0 && r15_1 == 0))\n                        {\n                        label_40e861:\n                            rbx_1 = r14_2;\n                        }\n                    }\n                    if ((rsi_1 == 0 && r15_1 == 0))\n                    {\n                        rbx_1 = r14_2;\n                    }\n                    if (((rsi_1 == 0 && r15_1 == 0) || ((rsi_1 != 0 && rax_8 == 0) && r15_1 == 0)))\n                    {\n                        int64_t* rax_24 = sub_40adc0(&var_80, rbx, &var_78, sub_40b840(arg1, var_f8_1, *(arg1 + 0xa0), rax_8));\n                        r15_1 = rax_24;\n                        if (rax_24 != 0)\n                        {\n                            rax_8 = *(arg1 + 0xb8);\n                            var_e8_1 = 0;\n                            *(rax_8 + rcx_4) = r15_1;\n                        }\n                        else\n                        {\n                            if (var_80 != 0)\n                            {\n                                break;\n                            }\n                            rax_8 = *(arg1 + 0xb8);\n                            var_e8_1 = (var_e8_1 + 1);\n                            *(rax_8 + rcx_4) = 0;\n                        }\n                        if (arg6 <= r14_2)\n                        {\n                            break;\n                        }\n                        r14_2 = (r14_2 + 1);\n                        if (*(arg1 + 0xe0) < var_e8_1)\n                        {\n                            break;\n                        }\n                        continue;\n                    }\n                    if (((rsi_1 == 0 && r15_1 != 0) || ((rsi_1 != 0 && rax_8 == 0) && r15_1 != 0)))\n                    {\n                        void** rbp_1 = *(arg1 + 0x98);\n                        int32_t var_7c = 0;\n                        int128_t var_58 = 0;\n                        if (r15_1[5] > 0)\n                        {\n                            int64_t* var_d0_1 = &rbp_1[0x1b];\n                            int64_t r14_3 = 0;\n                            while (true)\n                            {\n                                void* rdi_4 = *rbp_1;\n                                int64_t r13_2 = *(r15_1[6] + (r14_3 << 3));\n                                int64_t rbx_3 = (r13_2 << 4);\n                                void* rsi_3 = (rdi_4 + rbx_3);\n                                int64_t var_f0_1;\n                                if ((*(rsi_3 + 0xa) & 0x10) != 0)\n                                {\n                                    int32_t rax_15 = sub_40e290(rdi_4, var_d0_1, r13_2, arg1, var_f8_1);\n                                    if (rax_15 > 1)\n                                    {\n                                        var_f0_1 = (r13_2 << 3);\n                                        int64_t rbx_5 = (rax_15 + var_f8_1);\n                                        int64_t rdx_4 = *(rbp_1[3] + (r13_2 << 3));\n                                        int64_t r13_3 = (rbx_5 << 3);\n                                        void* rsi_6 = *(*(arg1 + 0xb8) + (rbx_5 << 3));\n                                        *var_58[8] = 0;\n                                        if (rsi_6 != 0)\n                                        {\n                                            int32_t rax_18 = sub_40a050(&var_58, (rsi_6 + 8));\n                                            var_7c = rax_18;\n                                            if (rax_18 != 0)\n                                            {\n                                            label_40e83d:\n                                                free(nullptr);\n                                                rax_8 = var_7c;\n                                                var_80 = rax_8;\n                                                if (rax_8 != 0)\n                                                {\n                                                    goto label_40e9dd;\n                                                }\n                                                goto label_40e861;\n                                            }\n                                        }\n                                        if (sub_408500(&var_58, rdx_4) == 0)\n                                        {\n                                        label_40e9c8:\n                                            free(nullptr);\n                                            var_80 = 0xc;\n                                            break;\n                                        }\n                                        int64_t** r13_4 = (r13_3 + *(arg1 + 0xb8));\n                                        *r13_4 = sub_40b0c0(&var_7c, rbp_1, &var_58);\n                                        if (*(*(arg1 + 0xb8) + (rbx_5 << 3)) != 0)\n                                        {\n                                            goto label_40e712;\n                                        }\n                                        if (var_7c == 0)\n                                        {\n                                            goto label_40e712;\n                                        }\n                                        goto label_40e83d;\n                                    }\n                                    if (rax_15 != 0)\n                                    {\n                                        goto label_40e6f8;\n                                    }\n                                    rsi_3 = (rbx_3 + *rbp_1);\n                                }\n                                if (sub_40b930(arg1, rsi_3, var_f8_1) != 0)\n                                {\n                                label_40e6f8:\n                                    var_f0_1 = (r13_2 << 3);\n                                label_40e712:\n                                    if (sub_408500(&var_78, *(rbp_1[3] + var_f0_1)) != 0)\n                                    {\n                                        goto label_40e71f;\n                                    }\n                                    goto label_40e9c8;\n                                }\n                            label_40e71f:\n                                r14_3 = (r14_3 + 1);\n                                if (r14_3 >= r15_1[5])\n                                {\n                                    goto label_40ea9d;\n                                }\n                            }\n                            break;\n                        }\n                    label_40ea9d:\n                        rax_8 = free(nullptr);\n                        var_80 = 0;\n                        goto label_40e861;\n                    }\n                }\n                if ((rsi_1 != 0 && rax_8 != 0))\n                {\n                    goto label_40e9dd;\n                }\n                goto label_40e935;\n            }\n        label_40e935:\n            free(var_68);\n            void* rax_26 = *(*(arg1 + 0xb8) + (arg6 << 3));\n            if (rax_26 == 0)\n            {\n                *arg2 = rbx_1;\n                *(arg1 + 0xb8) = rcx;\n                *(arg1 + 0x48) = rcx_1;\n                rax_28 = 1;\n            }\n            else\n            {\n                *arg2 = rbx_1;\n                *(arg1 + 0xb8) = rcx;\n                *(arg1 + 0x48) = rcx_1;\n                int64_t rax_27;\n                rax_27 = sub_409b10(*(rax_26 + 0x10), (rax_26 + 0x18), arg5) == 0;\n                rax_28 = rax_27;\n            }\n        }\n    }\n    return rax_28;\n}\n\n"
        },
        {
            "funcName": "sub_40ec40",
            "funcStartAddr": "0x40ec40",
            "funcEndAddr": "0x40f503",
            "decompiledFuncCode": "int64_t sub_40ec40(int64_t* arg1, void* arg2, int64_t arg3, int64_t* arg4, \n    char arg5)\n{\n    void* r12 = arg2;\n    int64_t* rax = *arg1;\n    int64_t var_58 = 0;\n    int64_t var_50 = 2;\n    int64_t var_48 = 0;\n    int64_t* var_90;\n    int64_t rax_1;\n    if (arg5 == 0)\n    {\n        var_90 = nullptr;\n    }\n    else\n    {\n        rax_1 = malloc(0x60);\n        var_90 = &var_58;\n        int64_t var_48_1 = rax_1;\n    }\n    if ((arg5 == 0 || (arg5 != 0 && rax_1 != 0)))\n    {\n        int64_t var_68 = 0;\n        int128_t var_78 = 0;\n        int64_t rbx_1 = rax[0x12];\n        int64_t rax_4 = (arg3 << 4);\n        char var_c1_1;\n        void* var_b8_1;\n        void* rax_48;\n        if (rax_4 > 0xfbf)\n        {\n            rax_48 = malloc(rax_4);\n            var_c1_1 = 1;\n            var_b8_1 = rax_48;\n            if ((rax_48 == 0 && var_90 != 0))\n            {\n                sub_40d270(var_90);\n            }\n        }\n        else\n        {\n            var_c1_1 = 0;\n            void var_d8;\n            var_b8_1 = (((&var_d8 - (rax_4 + 0x10)) + 0xf) & 0xfffffffffffffff0);\n        }\n        if ((rax_4 <= 0xfbf || (rax_4 > 0xfbf && rax_48 != 0)))\n        {\n            memcpy(var_b8_1, arg4, rax_4);\n            int64_t rcx = *arg4;\n            int64_t var_80 = rcx;\n            int64_t* var_c0_1 = &var_68;\n        label_40ee19:\n            int64_t rax_8 = arg4[1];\n            if (rax_8 >= rcx)\n            {\n                do\n                {\n                    int64_t r15_1 = rbx_1;\n                    int64_t r9_1 = (rbx_1 << 4);\n                    int64_t* rsi_4 = (*rax + r9_1);\n                    uint32_t rdx_4 = rsi_4[1];\n                    if (rdx_4 == 8)\n                    {\n                        int64_t rdx_6 = (*rsi_4 + 1);\n                        if (arg3 > rdx_6)\n                        {\n                            void* rdx_8 = &arg4[(rdx_6 * 2)];\n                            *(rdx_8 + 8) = -1;\n                            rax_8 = arg4[1];\n                            *rdx_8 = rcx;\n                        }\n                    }\n                    else if (rdx_4 == 9)\n                    {\n                        int64_t rdx_13 = (*rsi_4 + 1);\n                        if (arg3 > rdx_13)\n                        {\n                            int64_t rdx_14 = (rdx_13 << 4);\n                            void* rax_22 = (arg4 + rdx_14);\n                            if (*rax_22 < rcx)\n                            {\n                                *(rax_22 + 8) = rcx;\n                                memcpy(var_b8_1, arg4, rax_4);\n                                rax_8 = arg4[1];\n                            }\n                            else\n                            {\n                                if (((*(rsi_4 + 0xa) & 8) == 0 || ((*(rsi_4 + 0xa) & 8) != 0 && *(var_b8_1 + rdx_14) == -1)))\n                                {\n                                    *(rax_22 + 8) = rcx;\n                                    rax_8 = arg4[1];\n                                }\n                                if (((*(rsi_4 + 0xa) & 8) != 0 && *(var_b8_1 + rdx_14) != -1))\n                                {\n                                    memcpy(arg4, var_b8_1, rax_4);\n                                    rax_8 = arg4[1];\n                                }\n                            }\n                        }\n                    }\n                    if ((rcx == rax_8 && *(r12 + 0xb0) == rbx_1))\n                    {\n                        if (var_90 == 0)\n                        {\n                            free(var_68);\n                            if (var_c1_1 == 0)\n                            {\n                                break;\n                            }\n                            free(var_b8_1);\n                            return 0;\n                        }\n                        if (arg3 == 0)\n                        {\n                        label_40f21e:\n                            free(var_68);\n                            if (var_c1_1 != 0)\n                            {\n                                free(var_b8_1);\n                            }\n                            sub_40d270(var_90);\n                            return 0;\n                        }\n                        int64_t* rax_37 = arg4;\n                        int64_t rdx_21 = 0;\n                        while ((!(*rax_37 >= 0 && rax_37[1] == -1)))\n                        {\n                            rdx_21 = (rdx_21 + 1);\n                            rax_37 = &rax_37[2];\n                            if (arg3 == rdx_21)\n                            {\n                                break;\n                            }\n                        }\n                        if ((!(*rax_37 >= 0 && rax_37[1] == -1)))\n                        {\n                            goto label_40f21e;\n                        }\n                        if (arg3 == rdx_21)\n                        {\n                            goto label_40f21e;\n                        }\n                        int64_t rax_38 = sub_40d2c0(var_90, &var_90[2], &var_80, arg3, arg4, &var_78);\n                        rbx_1 = rax_38;\n                        r15_1 = rax_38;\n                        r9_1 = (rax_38 << 4);\n                    }\n                    void** r14_1 = *(r12 + 0x98);\n                    void* rdi_1 = *r14_1;\n                    char* rsi_1 = (rdi_1 + r9_1);\n                    char rax_9 = rsi_1[8];\n                    if ((rax_9 & 8) == 0)\n                    {\n                        int64_t rcx_1;\n                        uint64_t rcx_5;\n                        int64_t r15_4;\n                        if ((rsi_1[0xa] & 0x10) != 0)\n                        {\n                            rcx_5 = sub_40e290(rdi_1, &r14_1[0x1b], rbx_1, r12, var_80);\n                            int64_t rdx_2;\n                            if (rcx_5 != 0)\n                            {\n                            label_40f1c9:\n                                r15_4 = var_80;\n                            label_40f0c8:\n                                rdx_2 = (r15_4 + rcx_5);\n                                rbx_1 = *(r14_1[3] + (rbx_1 << 3));\n                            label_40edc2:\n                                var_80 = rdx_2;\n                                if (var_90 != 0)\n                                {\n                                    if (rdx_2 > *(r12 + 0xa8))\n                                    {\n                                        goto label_40ef6a;\n                                    }\n                                    void* rax_13 = *(*(r12 + 0xb8) + (rdx_2 << 3));\n                                    if (rax_13 == 0)\n                                    {\n                                        goto label_40ef6a;\n                                    }\n                                    if (sub_409b10(*(rax_13 + 0x10), (rax_13 + 0x18), rbx_1) == 0)\n                                    {\n                                        goto label_40ef6a;\n                                    }\n                                    goto label_40ee04;\n                                }\n                            label_40ee04:\n                                *var_78[8] = 0;\n                                goto label_40ee0c;\n                            }\n                            rcx_1 = var_80;\n                            rsi_1 = (*r14_1 + r9_1);\n                        label_40ed9a:\n                            if (sub_40b930(r12, rsi_1, rcx_1) != 0)\n                            {\n                                rdx_2 = (rcx_1 + 1);\n                                rbx_1 = *(r14_1[3] + (r15_1 << 3));\n                                goto label_40edc2;\n                            }\n                            goto label_40ef3a;\n                        }\n                        if (rax_9 != 4)\n                        {\n                            rcx_1 = var_80;\n                            goto label_40ed9a;\n                        }\n                        void* rax_27 = &arg4[((*rsi_1 + 1) * 2)];\n                        int64_t rdx_16 = *(rax_27 + 8);\n                        int64_t rdi_11 = *rax_27;\n                        rcx_5 = (rdx_16 - rdi_11);\n                        if (var_90 == 0)\n                        {\n                            if (rcx_5 != 0)\n                            {\n                                goto label_40f1c9;\n                            }\n                        label_40f296:\n                            if (sub_408500(&var_78, rbx_1) == 0)\n                            {\n                                goto label_40f314;\n                            }\n                            int64_t rcx_10 = var_80;\n                            rbx_1 = **((r14_1[5] + (rbx_1 * 0x18)) + 0x10);\n                            void* rax_44 = *(*(r12 + 0xb8) + (rcx_10 << 3));\n                            if (sub_409b10(*(rax_44 + 0x10), (rax_44 + 0x18), rbx_1) == 0)\n                            {\n                                rcx_1 = rcx_10;\n                                rsi_1 = (*r14_1 + r9_1);\n                                goto label_40ed9a;\n                            }\n                            goto label_40ee0c;\n                        }\n                        if (rdi_11 == -1)\n                        {\n                            goto label_40ef6a;\n                        }\n                        if (rdx_16 == -1)\n                        {\n                            goto label_40ef6a;\n                        }\n                        if (rcx_5 != 0)\n                        {\n                            int64_t rax_28 = *(r12 + 8);\n                            r15_4 = var_80;\n                            if (memcmp((rdi_11 + rax_28), (rax_28 + r15_4), rcx_5) == 0)\n                            {\n                                goto label_40f0c8;\n                            }\n                            goto label_40ef6a;\n                        }\n                        goto label_40f296;\n                    }\n                    void* r9_3 = *(*(r12 + 0xb8) + (var_80 << 3));\n                    void* r15_2 = (r14_1[5] + (rbx_1 * 0x18));\n                    if (sub_408500(&var_78, rbx_1) == 0)\n                    {\n                    label_40f314:\n                        free(var_68);\n                        if (var_c1_1 != 0)\n                        {\n                        label_40f487:\n                            free(var_b8_1);\n                        }\n                        if (var_90 != 0)\n                        {\n                        label_40f19d:\n                            sub_40d270(var_90);\n                            return 0xc;\n                        }\n                        return 0xc;\n                    }\n                    int64_t r10_1 = *(r15_2 + 8);\n                    if (r10_1 > 0)\n                    {\n                        int64_t r11_1 = *(r9_3 + 0x10);\n                        void* rax_18 = (r9_3 + 0x18);\n                        int64_t r15_3 = *(r15_2 + 0x10);\n                        int64_t r9_5 = 0;\n                        int64_t r12_1 = -1;\n                        int64_t rax_19;\n                        int64_t r14_2;\n                        do\n                        {\n                            r14_2 = *(r15_3 + (r9_5 << 3));\n                            rax_19 = sub_409b10(r11_1, rax_18, r14_2);\n                            if (rax_19 != 0)\n                            {\n                                if (r12_1 != -1)\n                                {\n                                    break;\n                                }\n                                r12_1 = r14_2;\n                            }\n                            r9_5 = (r9_5 + 1);\n                        } while (r10_1 != r9_5);\n                        if ((rax_19 != 0 && r12_1 != -1))\n                        {\n                            rbx_1 = r12_1;\n                            if (sub_409b10(*var_78[8], var_c0_1, rbx_1) != 0)\n                            {\n                                rbx_1 = r14_2;\n                            }\n                            else if (var_90 != 0)\n                            {\n                                int64_t r15_5 = *var_90;\n                                int64_t rdx_19 = var_80;\n                                int64_t rax_32 = (r15_5 + 1);\n                                *var_90 = rax_32;\n                                int64_t rax_33;\n                                if (rax_32 != var_90[1])\n                                {\n                                    rax_33 = var_90[2];\n                                }\n                                else\n                                {\n                                    rax_33 = realloc(var_90[2], (rax_32 * 0x60));\n                                    if (rax_33 == 0)\n                                    {\n                                    label_40f184:\n                                        free(var_68);\n                                        if (var_c1_1 != 0)\n                                        {\n                                            goto label_40f487;\n                                        }\n                                        goto label_40f19d;\n                                    }\n                                    var_90[1] = (var_90[1] << 1);\n                                    var_90[2] = rax_33;\n                                }\n                                int64_t* r15_8 = ((r15_5 * 0x30) + rax_33);\n                                r15_8[1] = r14_2;\n                                *r15_8 = rdx_19;\n                                int64_t rax_34 = malloc(rax_4);\n                                r15_8[2] = rax_34;\n                                if (rax_34 == 0)\n                                {\n                                    goto label_40f184;\n                                }\n                                memcpy(rax_34, arg4, rax_4);\n                                if (sub_40abb0(&r15_8[3], &var_78) != 0)\n                                {\n                                    goto label_40f184;\n                                }\n                            }\n                        label_40ee0c:\n                            if (rbx_1 >= 0)\n                            {\n                                goto label_40ee15;\n                            }\n                        label_40ef30:\n                            if (rbx_1 == -2)\n                            {\n                                goto label_40f314;\n                            }\n                            goto label_40ef3a;\n                        }\n                        rbx_1 = r12_1;\n                        if (rbx_1 >= 0)\n                        {\n                        label_40ee15:\n                            rcx = var_80;\n                            goto label_40ee19;\n                        }\n                        goto label_40ef30;\n                    }\n                label_40ef3a:\n                    if (var_90 == 0)\n                    {\n                        int64_t rax_21 = free(var_68);\n                        if (var_c1_1 != 0)\n                        {\n                            var_90 = 1;\n                            free(var_b8_1);\n                            rax_21 = 1;\n                        }\n                        return rax_21;\n                    }\n                label_40ef6a:\n                    rcx = var_80;\n                    rbx_1 = sub_40d2c0(var_90, &var_90[2], &var_80, arg3, arg4, &var_78);\n                    rax_8 = arg4[1];\n                } while (rax_8 >= rcx);\n            }\n            if ((rax_8 < rcx || (rax_8 >= rcx && (!(((rcx == rax_8 && *(r12 + 0xb0) == rbx_1) && var_90 == 0) && var_c1_1 == 0)))))\n            {\n                free(var_68);\n                int64_t* rdi_9;\n                if (var_c1_1 != 0)\n                {\n                    free(var_b8_1);\n                    rdi_9 = var_90;\n                }\n                else\n                {\n                    rdi_9 = var_90;\n                }\n                if (((var_c1_1 != 0 && rdi_9 != 0) || (var_c1_1 == 0 && rdi_9 != 0)))\n                {\n                    sub_40d270(rdi_9);\n                }\n            }\n            return 0;\n        }\n    }\n    return 0xc;\n}\n\n"
        },
        {
            "funcName": "sub_40f510",
            "funcStartAddr": "0x40f510",
            "funcEndAddr": "0x40f6a6",
            "decompiledFuncCode": "uint64_t sub_40f510(int64_t* arg1, int64_t* arg2, int64_t* arg3, int64_t arg4, \n    int64_t arg5)\n{\n    uint64_t rax = sub_40e520(arg1, &arg3[2], *arg3, arg3[1], arg4, arg5, 8);\n    if (rax == 0)\n    {\n        int64_t r15_1 = arg3[1];\n        int64_t rax_1 = arg1[0x19];\n        int64_t rdx_2 = arg1[0x1a];\n        int64_t rcx_2 = *arg2;\n        void* rdi = arg1[0x1b];\n        int64_t rsi_1 = r15_1;\n        int64_t rax_6;\n        if (rax_1 >= rdx_2)\n        {\n            rax_6 = realloc(rdi, (rdx_2 * 0x50));\n            if (rax_6 == 0)\n            {\n                free(arg1[0x1b]);\n                rax = 0xc;\n            }\n            else\n            {\n                int64_t rdx_9 = arg1[0x1a];\n                int64_t rsi_7 = arg1[0x19];\n                arg1[0x1b] = rax_6;\n                memset((rax_6 + (rsi_7 * 0x28)), 0, (rdx_9 * 0x28));\n                arg1[0x1a] = (arg1[0x1a] << 1);\n                rax_1 = arg1[0x19];\n                rdi = arg1[0x1b];\n                rsi_1 = arg3[1];\n            }\n        }\n        if (((rax_1 >= rdx_2 && rax_6 != 0) || rax_1 < rdx_2))\n        {\n            int64_t rdx_4 = (rax_1 * 0x28);\n            if (rax_1 > 0)\n            {\n                void* r8_1 = ((rdi + rdx_4) - 0x28);\n                if (arg5 == *(r8_1 + 8))\n                {\n                    *(r8_1 + 0x20) = 1;\n                }\n            }\n            int64_t* rdi_1 = (rdi + rdx_4);\n            int32_t rdx_5;\n            rdx_5 = r15_1 == rcx_2;\n            *rdi_1 = arg4;\n            rdi_1[1] = arg5;\n            *(rdi_1 + 0x22) = (-rdx_5);\n            rdi_1[2] = rcx_2;\n            rdi_1[3] = r15_1;\n            arg1[0x19] = (rax_1 + 1);\n            rdi_1[4] = 0;\n            if (arg1[0x1c] < (r15_1 - rcx_2))\n            {\n                arg1[0x1c] = (r15_1 - rcx_2);\n            }\n            /* tailcall */\n            return sub_4090e0(arg1, ((rsi_1 + arg5) - *arg2));\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40f6b0",
            "funcStartAddr": "0x40f6b0",
            "funcEndAddr": "0x40ff22",
            "decompiledFuncCode": "uint64_t sub_40f6b0(int64_t* arg1, int64_t* arg2, int64_t* arg3)\n{\n    int64_t* r14 = arg1;\n    void* r15 = arg1[9];\n    int64_t* rax = arg1[0x13];\n    int64_t rax_1 = (r15 << 3);\n    int64_t var_e0 = 0;\n    if (*arg2 > 0)\n    {\n        do\n        {\n            int64_t r13_1 = *(*arg3 + (var_e0 << 3));\n            int64_t rbp_2 = (r13_1 << 4);\n            void* rax_6 = (*rax + rbp_2);\n            if (*(rax_6 + 8) == 4)\n            {\n                int32_t rbx_1 = *(rax_6 + 8);\n                if ((rbx_1 & 0x3ff00) != 0)\n                {\n                    uint32_t rbx_2 = (rbx_1 >> 8);\n                    char rax_7 = sub_40b840(r14, r15, r14[0x14], rax_6);\n                    uint32_t rcx_2;\n                    rcx_2 = (rbx_2 & 0x3ff);\n                    if ((((rcx_2 & 0x20) == 0 || ((rcx_2 & 0x20) != 0 && (rax_7 & 2) != 0)) && ((((rbx_2 & 4) == 0 && (rbx_2 & 8) == 0) || (((rbx_2 & 4) != 0 && (rax_7 & 1) != 0) && (rbx_2 & 8) == 0)) || (((rbx_2 & 4) == 0 && (rbx_2 & 8) != 0) && (rax_7 & 1) == 0))))\n                    {\n                        if ((rcx_2 & 0x80) == 0)\n                        {\n                            goto label_40f7c0;\n                        }\n                        if ((rax_7 & 8) != 0)\n                        {\n                            goto label_40f7c0;\n                        }\n                    }\n                }\n                else\n                {\n                label_40f7c0:\n                    int64_t rbx_3 = r14[0x19];\n                    int64_t rcx_3 = 0;\n                    int64_t rdx_7;\n                    for (int64_t rax_8 = rbx_3; rcx_3 < rax_8; rax_8 = rdx_7)\n                    {\n                        int64_t rsi_1 = (rcx_3 + rax_8);\n                        int64_t r8_1 = r14[0x1b];\n                        rdx_7 = (((rsi_1 >> 0x3f) + rsi_1) >> 1);\n                        int64_t rdi_4;\n                        if (r15 > *((r8_1 + (rdx_7 * 0x28)) + 8))\n                        {\n                            rdi_4 = rdx_7;\n                            rdx_7 = rax_8;\n                        }\n                        else\n                        {\n                            int64_t rax_12;\n                            for (; rdx_7 > rcx_3; rdx_7 = rax_12)\n                            {\n                                int64_t rsi_3 = (rdx_7 + rcx_3);\n                                rax_12 = (((rsi_3 >> 0x3f) + rsi_3) >> 1);\n                                rdi_4 = rax_12;\n                                if (r15 > *((r8_1 + (rax_12 * 0x28)) + 8))\n                                {\n                                    break;\n                                }\n                            }\n                            if (rdx_7 <= rcx_3)\n                            {\n                                break;\n                            }\n                        }\n                        rcx_3 = (rdi_4 + 1);\n                    }\n                    if (rbx_3 > rcx_3)\n                    {\n                        void* rax_14 = (r14[0x1b] + (rcx_3 * 0x28));\n                        if (*(rax_14 + 8) != r15)\n                        {\n                            goto label_40f888;\n                        }\n                        if (rcx_3 == -1)\n                        {\n                            goto label_40f888;\n                        }\n                        while (r13_1 != *rax_14)\n                        {\n                            rax_14 = (rax_14 + 0x28);\n                            if (*(rax_14 - 8) == 0)\n                            {\n                                break;\n                            }\n                        }\n                        if (r13_1 != *rax_14)\n                        {\n                            goto label_40f888;\n                        }\n                        goto label_40f85f;\n                    }\n                label_40f888:\n                    int64_t** rax_15 = r14[0x13];\n                    int64_t* rdx_9 = *rax_15;\n                    int64_t rax_16 = *(rdx_9 + rbp_2);\n                    int32_t var_5c;\n                    if (r14[0x1d] <= 0)\n                    {\n                    label_40f85f:\n                        var_5c = 0;\n                    }\n                    else\n                    {\n                        int64_t var_d8_1 = 0;\n                        char* var_c8_1 = r14[1];\n                        uint64_t rax_39;\n                        while (true)\n                        {\n                            int64_t* rbx_5 = *(r14[0x1f] + (var_d8_1 << 3));\n                            if (rax_16 == rdx_9[(rbx_5[1] * 2)])\n                            {\n                                void* r12_2 = *rbx_5;\n                                void* r10_5 = r15;\n                                void** rdx_19;\n                                int64_t rbp_6;\n                                void* r15_1;\n                                if (rbx_5[4] > 0)\n                                {\n                                    void** rcx_13 = r12_2;\n                                    rbp_6 = 0;\n                                    char* r12_3 = var_c8_1;\n                                    void* r8_2 = r10_5;\n                                    void** r13_3;\n                                    do\n                                    {\n                                        int64_t* r9_1 = *(rbx_5[5] + (rbp_6 << 3));\n                                        r13_3 = r9_1[1];\n                                        rdx_19 = (r13_3 - rcx_13);\n                                        r15_1 = (rdx_19 + r8_2);\n                                        if (rdx_19 > 0)\n                                        {\n                                            if (r14[6] < r15_1)\n                                            {\n                                                if (r14[0xb] < r15_1)\n                                                {\n                                                    break;\n                                                }\n                                                rax_39 = sub_4090e0(r14, r15_1);\n                                                if (rax_39 != 0)\n                                                {\n                                                    return rax_39;\n                                                }\n                                                r12_3 = r14[1];\n                                            }\n                                            if (memcmp((r12_3 + r8_2), (r12_3 + rcx_13), rdx_19) != 0)\n                                            {\n                                                break;\n                                            }\n                                        }\n                                        rax_39 = sub_40f510(r14, rbx_5, r9_1, r13_1, r15);\n                                        r12_3 = r14[1];\n                                        if (rax_39 > 1)\n                                        {\n                                            return rax_39;\n                                        }\n                                        rbp_6 = (rbp_6 + 1);\n                                        rcx_13 = r13_3;\n                                        r8_2 = r15_1;\n                                    } while (rbp_6 < rbx_5[4]);\n                                    if (((r14[6] < r15_1 && r14[0xb] < r15_1) && rdx_19 > 0))\n                                    {\n                                        var_c8_1 = r12_3;\n                                        r10_5 = r8_2;\n                                        r12_2 = rcx_13;\n                                        if ((rbx_5[4] <= rbp_6 && rbp_6 > 0))\n                                        {\n                                            r13_3 = rcx_13;\n                                            r15_1 = r8_2;\n                                            goto label_40fcfc;\n                                        }\n                                    }\n                                    if ((!((rdx_19 > 0 && r14[6] < r15_1) && r14[0xb] < r15_1)))\n                                    {\n                                        var_c8_1 = r12_3;\n                                    label_40fcfc:\n                                        r12_2 = (r13_3 + 1);\n                                        r10_5 = r15_1;\n                                    }\n                                }\n                                if ((((rbx_5[4] <= 0 || (rbx_5[4] > 0 && (!((rdx_19 > 0 && r14[6] < r15_1) && r14[0xb] < r15_1)))) || ((((rbx_5[4] > 0 && rdx_19 > 0) && r14[6] < r15_1) && r14[0xb] < r15_1) && rbx_5[4] <= rbp_6)) && r15 >= r12_2))\n                                {\n                                    void* r15_2 = r10_5;\n                                    do\n                                    {\n                                        if ((r12_2 - *rbx_5) > 0)\n                                        {\n                                            if (r14[6] <= r15_2)\n                                            {\n                                                if (r14[0xb] <= r15_2)\n                                                {\n                                                    break;\n                                                }\n                                                rax_39 = sub_408f90(r14, (r15_2 + 1));\n                                                if (rax_39 != 0)\n                                                {\n                                                    return rax_39;\n                                                }\n                                                var_c8_1 = r14[1];\n                                            }\n                                            void* rax_45 = (r15_2 + 1);\n                                            if (*(var_c8_1 + r15_2) != *((var_c8_1 + r12_2) - 1))\n                                            {\n                                                break;\n                                            }\n                                            r15_2 = rax_45;\n                                        }\n                                        void* rax_47 = *(r14[0x17] + (r12_2 << 3));\n                                        if (rax_47 != 0)\n                                        {\n                                            int64_t rcx_17 = *(rax_47 + 0x10);\n                                            if (rcx_17 > 0)\n                                            {\n                                                int64_t rdi_23 = *(rax_47 + 0x18);\n                                                int64_t rdx_23 = 0;\n                                                int64_t* rsi_17 = *rax_15;\n                                                void* rax_51;\n                                                int64_t rbp_8;\n                                                do\n                                                {\n                                                    rbp_8 = *(rdi_23 + (rdx_23 << 3));\n                                                    rax_51 = &rsi_17[(rbp_8 * 2)];\n                                                    if ((*(rax_51 + 8) == 9 && rax_16 == *rax_51))\n                                                    {\n                                                        break;\n                                                    }\n                                                    rdx_23 = (rdx_23 + 1);\n                                                } while (rcx_17 != rdx_23);\n                                                if (((*(rax_51 + 8) == 9 && rax_16 == *rax_51) && rbp_8 != -1))\n                                                {\n                                                    int64_t* rsi_18 = rbx_5[2];\n                                                    void** rcx_18 = *rbx_5;\n                                                    if (rsi_18 == 0)\n                                                    {\n                                                        int64_t* rax_54 = calloc(0x18, ((r12_2 - rcx_18) + 1));\n                                                        rsi_18 = rax_54;\n                                                        rbx_5[2] = rax_54;\n                                                        if (rax_54 == 0)\n                                                        {\n                                                        label_40fe86:\n                                                            return 0xc;\n                                                        }\n                                                    }\n                                                    rax_39 = sub_40e520(r14, rsi_18, rbx_5[1], rcx_18, rbp_8, r12_2, 9);\n                                                    if (rax_39 != 1)\n                                                    {\n                                                        if (rax_39 != 0)\n                                                        {\n                                                            return rax_39;\n                                                        }\n                                                        int64_t rax_52 = rbx_5[3];\n                                                        if (rbx_5[4] == rax_52)\n                                                        {\n                                                            void** rdx_29 = ((rax_52 + rax_52) + 1);\n                                                            int64_t rax_56 = realloc(rbx_5[5], (rdx_29 << 3));\n                                                            if (rax_56 == 0)\n                                                            {\n                                                                goto label_40fe86;\n                                                            }\n                                                            rbx_5[5] = rax_56;\n                                                            rbx_5[3] = rdx_29;\n                                                        }\n                                                        int64_t* rax_53 = calloc(1, 0x28);\n                                                        if (rax_53 == 0)\n                                                        {\n                                                            goto label_40fe86;\n                                                        }\n                                                        int64_t rdx_26 = rbx_5[4];\n                                                        *(rbx_5[5] + (rdx_26 << 3)) = rax_53;\n                                                        *rax_53 = rbp_8;\n                                                        rax_53[1] = r12_2;\n                                                        rbx_5[4] = (rdx_26 + 1);\n                                                        sub_40f510(r14, rbx_5, rax_53, r13_1, r15);\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        r12_2 = (r12_2 + 1);\n                                    } while (r15 >= r12_2);\n                                }\n                            }\n                            var_d8_1 = (var_d8_1 + 1);\n                            if (var_d8_1 >= r14[0x1d])\n                            {\n                                break;\n                            }\n                            rdx_9 = *rax_15;\n                        }\n                        var_5c = 0;\n                        if (rbx_3 < r14[0x19])\n                        {\n                            int64_t rax_23 = (r13_1 << 3);\n                            int64_t rax_25 = (r13_1 * 0x18);\n                            int64_t r14_1 = rbx_3;\n                            do\n                            {\n                                int64_t* rax_36 = (r14[0x1b] + (r14_1 * 0x28));\n                                if ((r13_1 == *rax_36 && r15 == rax_36[1]))\n                                {\n                                    void* rbp_5 = rax_36[3];\n                                    int64_t rax_37 = rax_36[2];\n                                    int64_t rdx_16 = rax[6];\n                                    void* rdi_14 = (rbp_5 - rax_37);\n                                    void* var_d0_2;\n                                    if (rbp_5 == rax_37)\n                                    {\n                                        int64_t rcx_6 = **((rax[5] + rax_25) + 0x10);\n                                        var_d0_2 = (rdx_16 + (rcx_6 * 0x18));\n                                    }\n                                    else\n                                    {\n                                        int64_t rcx_11 = *(rax[3] + rax_23);\n                                        var_d0_2 = (rdx_16 + (rcx_11 * 0x18));\n                                    }\n                                    void* rbp_4 = ((rbp_5 + r15) - rax_37);\n                                    int32_t rax_27 = sub_40b840(r14, (rbp_4 - 1), r14[0x14], rax_37);\n                                    int64_t r10_1 = (rbp_4 << 3);\n                                    int64_t var_d8_2 = 0;\n                                    int64_t* rax_28 = r14[0x17];\n                                    void** r11_1 = (rax_28 + r10_1);\n                                    void* rax_29 = *(rax_28 + rax_1);\n                                    void* rdx_11 = *r11_1;\n                                    if (rax_29 != 0)\n                                    {\n                                        var_d8_2 = *(rax_29 + 0x10);\n                                    }\n                                    int64_t var_48;\n                                    int32_t rax_31;\n                                    int64_t* rdx_14;\n                                    if (rdx_11 == 0)\n                                    {\n                                        rdx_14 = r14[0x17];\n                                        *r11_1 = sub_40adc0(&var_5c, rax, var_d0_2, rax_27);\n                                    }\n                                    else\n                                    {\n                                        void** var_c0;\n                                        var_c0 = rax_27;\n                                        void var_58;\n                                        rax_31 = sub_40ac30(&var_58, *(rdx_11 + 0x50), var_d0_2);\n                                        int32_t rcx_9 = var_c0;\n                                        var_5c = rax_31;\n                                        if (rax_31 == 0)\n                                        {\n                                            void** r10_3 = (r10_1 + r14[0x17]);\n                                            *r10_3 = sub_40adc0(&var_5c, rax, &var_58, rcx_9);\n                                            free(var_48);\n                                            rdx_14 = r14[0x17];\n                                        }\n                                    }\n                                    if (((rdx_11 == 0 && rdx_14[rbp_4] == 0) || ((rdx_11 != 0 && rax_31 == 0) && rdx_14[rbp_4] == 0)))\n                                    {\n                                        rax_39 = var_5c;\n                                        if (rax_39 != 0)\n                                        {\n                                            return rax_39;\n                                        }\n                                    }\n                                    if (((((((rdx_11 == 0 && *(rdx_14 + (rbp_4 << 3)) != 0) || ((rdx_11 != 0 && rax_31 == 0) && *(rdx_14 + (rbp_4 << 3)) != 0)) || (rdx_11 == 0 && *(rdx_14 + (rbp_4 << 3)) == 0)) || ((rdx_11 != 0 && rax_31 == 0) && *(rdx_14 + (rbp_4 << 3)) == 0)) && rdi_14 == 0) && *(*(rdx_14 + rax_1) + 0x10) > var_d8_2))\n                                    {\n                                        int64_t* r8_4 = (var_d0_2 + 0x10);\n                                        void* rbp_7 = (var_d0_2 + 8);\n                                        rax_39 = sub_40b6f0(r14, rbp_7, r8_4, r15);\n                                        var_5c = rax_39;\n                                        if (rax_39 != 0)\n                                        {\n                                            return rax_39;\n                                        }\n                                        rax_39 = sub_40f6b0(r14, rbp_7, r8_4);\n                                        var_5c = rax_39;\n                                        if (rax_39 != 0)\n                                        {\n                                            return rax_39;\n                                        }\n                                        r14_1 = (r14_1 + 1);\n                                        if (r14_1 >= r14[0x19])\n                                        {\n                                            break;\n                                        }\n                                        continue;\n                                    }\n                                    if ((rdx_11 != 0 && rax_31 != 0))\n                                    {\n                                        free(var_48);\n                                        return var_5c;\n                                    }\n                                }\n                                r14_1 = (r14_1 + 1);\n                            } while (r14_1 < r14[0x19]);\n                        }\n                    }\n                }\n            }\n            var_e0 = (var_e0 + 1);\n        } while (var_e0 < *arg2);\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40ff30",
            "funcStartAddr": "0x40ff30",
            "funcEndAddr": "0x4100e7",
            "decompiledFuncCode": "int64_t* sub_40ff30(int32_t* arg1, int64_t* arg2, int64_t* arg3)\n{\n    int64_t r12 = arg2[9];\n    void* r15 = arg2[0x13];\n    int64_t rbp = (r12 << 3);\n    int64_t* r14_1 = (arg2[0x17] + rbp);\n    void* rax_2;\n    int32_t rax_4;\n    int64_t* rbp_1;\n    if (arg2[0x18] >= r12)\n    {\n        rax_2 = *r14_1;\n        if (rax_2 == 0)\n        {\n            *r14_1 = arg3;\n            rbp_1 = arg3;\n        }\n        else\n        {\n            int128_t* rax_3 = *(rax_2 + 0x50);\n            int128_t var_58;\n            if (arg3 == 0)\n            {\n                var_58 = *rax_3;\n                int64_t rax_8 = rax_3[1];\n                int64_t var_48_1 = rax_8;\n                int64_t* rax_10 = sub_40adc0(arg1, r15, &var_58, sub_40b840(arg2, (r12 - 1), arg2[0x14], rax_8));\n                rbp_1 = rax_10;\n                *r14_1 = rax_10;\n            }\n            else\n            {\n                void* r14_2 = arg3[0xa];\n                rax_4 = sub_40ac30(&var_58, r14_2, rax_3);\n                *arg1 = rax_4;\n                if (rax_4 != 0)\n                {\n                label_4100e0:\n                    rbp_1 = nullptr;\n                }\n                else\n                {\n                    int64_t rax_5 = arg2[9];\n                    int64_t* rax_7 = sub_40adc0(arg1, r15, &var_58, sub_40b840(arg2, (rax_5 - 1), arg2[0x14], rax_5));\n                    rbp_1 = rax_7;\n                    *(arg2[0x17] + rbp) = rax_7;\n                    int64_t var_48;\n                    if (r14_2 != 0)\n                    {\n                        free(var_48);\n                    }\n                }\n            }\n        }\n    }\n    else\n    {\n        *r14_1 = arg3;\n        rbp_1 = arg3;\n        arg2[0x18] = r12;\n    }\n    if (((((arg2[0x18] < r12 || (arg2[0x18] >= r12 && rax_2 == 0)) || ((arg2[0x18] >= r12 && rax_2 != 0) && arg3 == 0)) || (((arg2[0x18] >= r12 && rax_2 != 0) && arg3 != 0) && rax_4 == 0)) && *(r15 + 0x98) != 0))\n    {\n        if (rbp_1 == 0)\n        {\n            goto label_4100e0;\n        }\n        int64_t* r14_3 = &rbp_1[2];\n        int64_t* r15_1 = &rbp_1[3];\n        int32_t rax_11 = sub_40b6f0(arg2, r14_3, r15_1, r12);\n        *arg1 = rax_11;\n        if (rax_11 != 0)\n        {\n            goto label_4100e0;\n        }\n        if ((rbp_1[0xd] & 0x40) != 0)\n        {\n            int32_t rax_12 = sub_40f6b0(arg2, r14_3, r15_1);\n            *arg1 = rax_12;\n            if (rax_12 != 0)\n            {\n                goto label_4100e0;\n            }\n            rbp_1 = *(arg2[0x17] + (r12 << 3));\n        }\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_4100f0",
            "funcStartAddr": "0x4100f0",
            "funcEndAddr": "0x410414",
            "decompiledFuncCode": "uint64_t sub_4100f0(void* arg1, int64_t* arg2)\n{\n    int64_t rbx = arg2[3];\n    int64_t rbp = arg2[2];\n    int64_t var_58 = 1;\n    int64_t var_50 = 1;\n    int64_t* rax = malloc(8);\n    if (rax == 0)\n    {\n        return 0xc;\n    }\n    *rax = rbp;\n    int32_t rax_1 = sub_411b80(arg1, arg2, rbx, &var_58);\n    if (rax_1 == 0)\n    {\n        int32_t var_7c_1 = 0;\n        int64_t* var_60_1 = &arg2[6];\n        if (rbx > 0)\n        {\n            while (true)\n            {\n                int64_t rdi_1 = *arg2;\n                int64_t rax_3 = (rbx << 3);\n                if (*(rdi_1 + (rbx << 3)) == 0)\n                {\n                    var_7c_1 = (var_7c_1 + 1);\n                }\n                else\n                {\n                    var_7c_1 = 0;\n                }\n                if (((*(rdi_1 + (rbx << 3)) == 0 && *(arg1 + 0xe0) >= var_7c_1) || (*(rdi_1 + (rbx << 3)) != 0 && *(arg1 + 0xe0) >= 0)))\n                {\n                    rbx = (rbx - 1);\n                    int64_t var_50_1 = 0;\n                    void* r14_1 = *((*(arg1 + 0xb8) + rax_3) - 8);\n                    if (r14_1 != 0)\n                    {\n                        int64_t* r12_1 = *(arg1 + 0x98);\n                        if (*(r14_1 + 0x28) > 0)\n                        {\n                            int32_t var_90;\n                            var_90 = 0;\n                            do\n                            {\n                                int64_t rbp_1 = *(*(r14_1 + 0x30) + (var_90 << 3));\n                                int64_t r11_2 = (rbp_1 << 4);\n                                char* rsi_1 = (*r12_1 + r11_2);\n                                if ((rsi_1[0xa] & 0x10) == 0)\n                                {\n                                    goto label_4101f6;\n                                }\n                                void** r10_1 = *(arg1 + 0x98);\n                                int64_t rax_14 = arg2[3];\n                                int32_t rax_15 = sub_40e290(*r10_1, &r10_1[0x1b], rbp_1, arg1, rbx);\n                                bool cond:2_1 = rax_15 != 0;\n                                int32_t r9_1 = rax_15;\n                                int64_t rax_17;\n                                void* rax_18;\n                                if (rax_15 > 0)\n                                {\n                                    rax_17 = (rax_15 + rbx);\n                                    if (rax_14 >= rax_17)\n                                    {\n                                        rax_18 = *(*arg2 + (rax_17 << 3));\n                                        if ((rax_18 != 0 && sub_409b10(*(rax_18 + 0x10), (rax_18 + 0x18), *(r10_1[3] + (rbp_1 << 3))) == 0))\n                                        {\n                                            rsi_1 = (*r12_1 + r11_2);\n                                            goto label_4101f6;\n                                        }\n                                    }\n                                }\n                                char rax_5;\n                                void* rax_7;\n                                int64_t rax_8;\n                                if (((rax_15 <= 0 && (!cond:2_1)) || ((rax_15 > 0 && rax_14 >= rax_17) && rax_18 == 0)))\n                                {\n                                    rsi_1 = (*r12_1 + r11_2);\n                                label_4101f6:\n                                    rax_5 = sub_40b930(arg1, rsi_1, rbx);\n                                    if (rax_5 != 0)\n                                    {\n                                        rax_7 = *(*arg2 + rax_3);\n                                        if (rax_7 != 0)\n                                        {\n                                            rax_8 = sub_409b10(*(rax_7 + 0x10), (rax_7 + 0x18), *(r12_1[3] + (rbp_1 << 3)));\n                                            if (rax_8 != 0)\n                                            {\n                                                r9_1 = 1;\n                                            }\n                                        }\n                                    }\n                                }\n                                if (((((((((rax_15 <= 0 && (!cond:2_1)) || ((rax_15 > 0 && rax_14 >= rax_17) && rax_18 == 0)) && rax_5 != 0) && rax_7 != 0) && rax_8 != 0) || (rax_15 <= 0 && cond:2_1)) || (rax_15 > 0 && rax_14 < rax_17)) || ((rax_15 > 0 && rax_14 >= rax_17) && rax_18 != 0)))\n                                {\n                                    if (arg2[5] != 0)\n                                    {\n                                        if (sub_409da0(arg1, &arg2[5], var_60_1, *(r12_1[3] + (rbp_1 << 3)), (r9_1 + rbx), rbp_1, rbx) == 0)\n                                        {\n                                            goto label_41026f;\n                                        }\n                                    }\n                                    else\n                                    {\n                                    label_41026f:\n                                        if (sub_408500(&var_58, rbp_1) == 0)\n                                        {\n                                            rax_1 = 0xc;\n                                            goto label_41039e;\n                                        }\n                                    }\n                                }\n                                var_90 = (var_90 + 1);\n                            } while (var_90 < *(r14_1 + 0x28));\n                        }\n                    }\n                    rax_1 = sub_411b80(arg1, arg2, rbx, &var_58);\n                    if (rax_1 != 0)\n                    {\n                        break;\n                    }\n                    if (rbx == 0)\n                    {\n                        break;\n                    }\n                    continue;\n                }\n                if (((*(rdi_1 + (rbx << 3)) == 0 && *(arg1 + 0xe0) < var_7c_1) || (*(rdi_1 + (rbx << 3)) != 0 && *(arg1 + 0xe0) < 0)))\n                {\n                    memset(rdi_1, 0, rax_3);\n                    free(rax);\n                    return 0;\n                }\n            }\n        }\n        if ((rbx <= 0 || (rbx > 0 && rax_1 == 0)))\n        {\n            rax_1 = 0;\n        }\n    }\nlabel_41039e:\n    free(rax);\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_410420",
            "funcStartAddr": "0x410420",
            "funcEndAddr": "0x411b76",
            "decompiledFuncCode": "uint64_t sub_410420(int64_t* arg1, void* arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5, int64_t arg6, int64_t arg7, int64_t* arg8, int32_t arg9)\n{\n    int64_t rbp = arg5;\n    int64_t rbx = arg4;\n    int64_t rcx = 0x20;\n    int64_t* rax = *arg1;\n    void* var_138;\n    int64_t* rdi = &var_138;\n    char* rax_1 = nullptr;\n    for (; rcx != 0; rcx = (rcx - 1))\n    {\n        *rdi = 0;\n        rdi = &rdi[1];\n    }\n    char* rcx_1 = arg1[4];\n    char* var_1d8 = rcx_1;\n    if (rcx_1 != 0)\n    {\n        uint32_t rdx_1 = arg1[7];\n        if (((rdx_1 & 8) == 0 || ((rdx_1 & 8) != 0 && rbx == arg5)))\n        {\n            var_1d8 = nullptr;\n        }\n        if (((rdx_1 & 8) != 0 && rbx != arg5))\n        {\n            if ((rdx_1 & 1) == 0)\n            {\n                rax_1 = rcx_1;\n            }\n            var_1d8 = rax_1;\n        }\n    }\n    int64_t var_1a8 = 0;\n    int64_t rax_3 = arg1[6];\n    if (rax_3 < arg7)\n    {\n        int64_t rsi_3 = ((arg7 - 1) - rax_3);\n        arg7 = (arg7 + (rax_3 - (arg7 - 1)));\n        var_1a8 = rsi_3;\n    }\n    int32_t var_1ec_1;\n    if (arg1[2] == 0)\n    {\n    label_411430:\n        var_1ec_1 = 1;\n    }\n    else\n    {\n        void* rax_5 = rax[9];\n        if (rax_5 == 0)\n        {\n            goto label_411430;\n        }\n        void* rdx_4 = rax[0xa];\n        if (rdx_4 == 0)\n        {\n            goto label_411430;\n        }\n        void* rcx_2 = rax[0xb];\n        if (rcx_2 == 0)\n        {\n            goto label_411430;\n        }\n        if (rax[0xc] == 0)\n        {\n            goto label_411430;\n        }\n        if (*(rax_5 + 0x10) != 0)\n        {\n            goto label_410571;\n        }\n        if (*(rdx_4 + 0x10) != 0)\n        {\n            goto label_410571;\n        }\n        if ((*(rcx_2 + 0x10) != 0 && arg1[7] < 0))\n        {\n            goto label_410571;\n        }\n        if (rbx != 0)\n        {\n            var_1ec_1 = 1;\n        }\n        if ((rbx == 0 || (rbx != 0 && rbp == 0)))\n        {\n            rbp = 0;\n            rbx = 0;\n        label_410571:\n            uint32_t var_1f0_1 = 1;\n            if (arg7 == 0)\n            {\n                int64_t* rax_50;\n                rax_50 = rax[0x13] != 0;\n                var_1f0_1 = rax_50;\n            }\n            int64_t rdi_2 = arg1[5];\n            int32_t rax_7 = arg1[3];\n            int32_t rdx_5 = *(rax + 0xb4);\n            int64_t rax_8 = rax[2];\n            int32_t var_a8_1 = rdx_5;\n            int64_t rsi_5 = (rax_8 + 1);\n            int64_t var_228_1 = rax_8;\n            int64_t rax_9 = rdx_5;\n            if (rsi_5 < rax_9)\n            {\n                rsi_5 = rax_9;\n            }\n            int64_t rax_10 = (arg3 + 1);\n            int64_t var_c0_1 = rdi_2;\n            int64_t var_e8_1 = arg3;\n            if (rsi_5 > rax_10)\n            {\n                rsi_5 = rax_10;\n            }\n            int64_t var_d0_1 = arg3;\n            int64_t var_d8_1 = arg3;\n            var_138 = arg2;\n            uint64_t rax_13 = (rax_7 & 0x400000);\n            bool var_b0_1 = rax_13 != 0;\n            bool cond:3_1 = (rax_13 | rdi_2) != 0;\n            uint8_t rax_15 = rax[0x16];\n            uint8_t rdx_6 = rax_15;\n            rax_15 = (rax_15 >> 3);\n            rdx_6 = (rdx_6 >> 2);\n            char var_ae_1 = (rax_15 & 1);\n            char var_af_1 = (rdx_6 & 1);\n            int32_t rax_17;\n            int32_t rcx_4;\n            int32_t rdx_8;\n            rax_17 = sub_4083f0(&var_138, rsi_5);\n            var_1ec_1 = rax_17;\n            int64_t var_60;\n            int64_t var_40;\n            int64_t* rdi_9;\n            int64_t* var_80;\n            if (rax_17 != 0)\n            {\n            label_410e68:\n                rdi_9 = var_80;\n            }\n            else\n            {\n                void* var_b8_1 = &rax[0x17];\n                uint8_t rax_19 = rax[0x16];\n                int32_t var_230_1;\n                var_230_1 = rax_19;\n                rax_19 = (rax_19 >> 4);\n                char var_aa_1 = (rax_19 & 1);\n                void* var_130;\n                int64_t rax_22;\n                if (cond:3_1 == 0)\n                {\n                    var_130 = arg2;\n                    rax_22 = arg3;\n                }\n                if ((cond:3_1 != 0 || (cond:3_1 == 0 && *(rax + 0xb4) > 1)))\n                {\n                    rax_22 = 0;\n                }\n                uint8_t rax_24 = arg1[7];\n                int64_t var_d8_2 = arg6;\n                var_230_1 = rax_24;\n                rax_24 = (rax_24 >> 7);\n                uint8_t var_ab_1 = rax_24;\n                int64_t r15_1 = rax[0x13];\n                int64_t var_90_1 = -1;\n                int64_t r12_1 = (r15_1 + r15_1);\n                if (r12_1 > 0)\n                {\n                    if (r12_1 > 0x666666666666666)\n                    {\n                    label_411471:\n                        rdi_9 = var_80;\n                        var_1ec_1 = 0xc;\n                    }\n                    else\n                    {\n                        int64_t rax_27 = malloc(((r12_1 + (r15_1 << 3)) << 3));\n                        var_60 = rax_27;\n                        int64_t rax_28;\n                        rax_28 = malloc((r15_1 << 4));\n                        var_40 = rax_28;\n                        if (rax_28 == 0)\n                        {\n                            goto label_411471;\n                        }\n                        if (rax_27 == 0)\n                        {\n                            goto label_411471;\n                        }\n                    }\n                }\n                if ((r12_1 <= 0 || (r12_1 > 0 && r12_1 <= 0x666666666666666)))\n                {\n                    int64_t var_68_1 = r12_1;\n                    int32_t var_58_1 = 1;\n                    int64_t var_48_1 = r12_1;\n                    int64_t var_f8;\n                    if ((arg7 <= 1 && (rax[0x16] & 2) == 0))\n                    {\n                        var_80 = nullptr;\n                    label_4107d9:\n                        int64_t var_180 = rbx;\n                        int32_t rax_32 = (arg9 & 1);\n                        int32_t var_c8_1 = (((rax_32 - rax_32) & 2) + 4);\n                        bool cond:8_1 = rbx >= rbp;\n                        int32_t rax_36;\n                        rax_36 = rbx <= rbp;\n                        int32_t rax_37 = ((rax_36 + rax_36) - 1);\n                        int64_t rax_38 = rbp;\n                        if (rbx <= rbp)\n                        {\n                            rax_38 = rbx;\n                        }\n                        int64_t rax_39 = rbp;\n                        if (cond:8_1)\n                        {\n                            rax_39 = rbx;\n                        }\n                        int32_t rsi_8 = *(rax + 0xb4);\n                        int32_t rax_41 = 8;\n                        if (var_1d8 != 0)\n                        {\n                            rcx_4 = 4;\n                            if (rsi_8 != 1)\n                            {\n                                int64_t rax_43 = arg1[3];\n                                int64_t var_230_2 = rax_43;\n                                int32_t rcx_5;\n                                rcx_5 = ((rax_43 & 0x400000) | rdi_2) == 0;\n                                rcx_4 = (rcx_5 << 2);\n                            }\n                            int32_t rdx_9;\n                            rdx_9 = rbx <= rbp;\n                            int32_t rax_46;\n                            rax_46 = rdi_2 != 0;\n                            rax_41 = ((rax_46 | rcx_4) | (rdx_9 + rdx_9));\n                        }\n                        rcx_4 = rbx > rax_39;\n                        rdx_8 = rbx < rax_38;\n                        rcx_4 = (rcx_4 | rdx_8);\n                        if (rcx_4 != 0)\n                        {\n                        label_410dc0:\n                            rdi_9 = var_80;\n                            var_1ec_1 = 1;\n                        }\n                        else\n                        {\n                            int64_t* rdx_10 = nullptr;\n                            if (rbx <= rbp)\n                            {\n                                rdx_10 = &var_180;\n                            }\n                            bool cond:11_1 = rdx_10 != 0;\n                            int32_t rax_48 = (rax_41 - 4);\n                            uint64_t rax_49 = rax_48;\n                            if (rax_49 > 4)\n                            {\n                            label_411331:\n                                int64_t rcx_22 = rax_39;\n                                int32_t rax_121;\n                                int64_t rdx_39;\n                                do\n                                {\n                                    int64_t var_110;\n                                    rdx_39 = (rbx - var_110);\n                                    if (rax_22 <= rdx_39)\n                                    {\n                                        rax_121 = sub_40bb30(&var_138, rbx, arg9);\n                                        if (rax_121 != 0)\n                                        {\n                                            var_1ec_1 = rax_121;\n                                            break;\n                                        }\n                                        rdx_39 = (rbx - var_110);\n                                    }\n                                    char* rax_119 = var_1d8;\n                                    if (arg3 > rbx)\n                                    {\n                                        rax_119 = &var_1d8[*(var_130 + rdx_39)];\n                                    }\n                                    if (*rax_119 != 0)\n                                    {\n                                        goto label_4109a5;\n                                    }\n                                    rbx = (rbx + rax_37);\n                                    var_180 = rbx;\n                                    if (rbx < rax_38)\n                                    {\n                                        break;\n                                    }\n                                } while (rbx <= rcx_22);\n                                if ((rax_22 <= rdx_39 && rax_121 != 0))\n                                {\n                                    goto label_410e68;\n                                }\n                                goto label_410dc0;\n                            }\n                            int64_t var_90_2;\n                            void* rax_140;\n                            int32_t rax_145;\n                            void* rcx_30;\n                            int32_t rbp_4;\n                            int64_t r12_2;\n                            do\n                            {\n                                int64_t rax_83;\n                                switch (rax_49)\n                                {\n                                    case 0:\n                                    case 1:\n                                    {\n                                        if (rax_38 > rbx)\n                                        {\n                                            break;\n                                        }\n                                        char rcx_6 = 0;\n                                        int64_t rax_52 = rbx;\n                                        uint64_t rdx_11;\n                                        do\n                                        {\n                                            rdx_11 = 0;\n                                            if (arg3 > rax_52)\n                                            {\n                                                rdx_11 = *(arg2 + rax_52);\n                                            }\n                                            if (rdi_2 != 0)\n                                            {\n                                                rdx_11 = *(rdi_2 + rdx_11);\n                                            }\n                                            if (var_1d8[rdx_11] != 0)\n                                            {\n                                                break;\n                                            }\n                                            rax_52 = (rax_52 - 1);\n                                            rcx_6 = 1;\n                                        } while (rax_52 >= rax_38);\n                                        if (var_1d8[rdx_11] == 0)\n                                        {\n                                            var_180 = rax_52;\n                                            rdi_9 = var_80;\n                                            var_1ec_1 = 1;\n                                            break;\n                                        }\n                                        if (rcx_6 != 0)\n                                        {\n                                            var_180 = rax_52;\n                                            rbx = rax_52;\n                                        }\n                                        break;\n                                    }\n                                    case 2:\n                                    {\n                                        if (rax_39 > rbx)\n                                        {\n                                            int64_t rax_89 = (rbx + 1);\n                                            if (var_1d8[*(arg2 + rbx)] == 0)\n                                            {\n                                                uint64_t rdx_22;\n                                                do\n                                                {\n                                                    rbx = rax_89;\n                                                    if (rax_39 == rax_89)\n                                                    {\n                                                        break;\n                                                    }\n                                                    rdx_22 = *(arg2 + rax_89);\n                                                    rax_89 = (rax_89 + 1);\n                                                } while (var_1d8[rdx_22] == 0);\n                                                if (rax_39 != rax_89)\n                                                {\n                                                    goto label_411718;\n                                                }\n                                                var_180 = rax_39;\n                                            }\n                                        }\n                                        break;\n                                    }\n                                    case 3:\n                                    {\n                                        if (rax_39 > rbx)\n                                        {\n                                            rax_83 = (rbx + 1);\n                                            if (var_1d8[*(rdi_2 + *(arg2 + rbx))] == 0)\n                                            {\n                                                uint64_t rdx_20;\n                                                do\n                                                {\n                                                    rbx = rax_83;\n                                                    if (rax_39 == rax_83)\n                                                    {\n                                                        break;\n                                                    }\n                                                    rdx_20 = *(rdi_2 + *(arg2 + rax_83));\n                                                    rax_83 = (rbx + 1);\n                                                } while (var_1d8[rdx_20] == 0);\n                                                if (rax_39 == rax_83)\n                                                {\n                                                    var_180 = rax_39;\n                                                }\n                                                else\n                                                {\n                                                label_411718:\n                                                    var_180 = rbx;\n                                                }\n                                            }\n                                        }\n                                        break;\n                                    }\n                                }\n                                if ((((((((rax_49 == 3 && rax_39 > rbx) && *(var_1d8 + *(rdi_2 + *(arg2 + rbx))) == 0) && rax_39 == rax_83) || (rax_49 == 3 && rax_39 <= rbx)) || (rax_49 == 2 && rax_39 <= rbx)) || ((rax_49 == 2 && rax_39 > rbx) && *(var_1d8 + *(arg2 + rbx)) == 0)) && rax_39 == rbx))\n                                {\n                                    uint64_t rax_86 = 0;\n                                    if (arg3 > rax_39)\n                                    {\n                                        rax_86 = *(arg2 + rax_39);\n                                    }\n                                    if (rdi_2 != 0)\n                                    {\n                                        rax_86 = *(rdi_2 + rax_86);\n                                    }\n                                    if (var_1d8[rax_86] == 0)\n                                    {\n                                        break;\n                                    }\n                                }\n                            label_4109a5:\n                                int32_t rax_53 = sub_40bb30(&var_138, rbx, arg9);\n                                var_1ec_1 = rax_53;\n                                if (rax_53 != 0)\n                                {\n                                    goto label_410e68;\n                                }\n                                int32_t* var_128;\n                                if (((rsi_8 == 1 || (rsi_8 != 1 && rax_22 == 0)) || ((rsi_8 != 1 && rax_22 != 0) && *var_128 != 0xffffffff)))\n                                {\n                                    int32_t var_58_2 = 0;\n                                    int64_t var_70_1 = 0;\n                                    char rax_56 = (var_1f0_1 & 1);\n                                    int64_t* r14_2 = rax[9];\n                                    int32_t var_188 = 0;\n                                    int64_t var_f0;\n                                    int64_t var_228_2 = var_f0;\n                                    if (r14_2[0xd] < 0)\n                                    {\n                                        int32_t rax_58 = sub_40b840(&var_138, (var_f0 - 1), arg9, var_f0);\n                                        if ((rax_58 & 1) != 0)\n                                        {\n                                            r14_2 = rax[0xa];\n                                        }\n                                        else if (rax_58 != 0)\n                                        {\n                                            if ((rax_58 & 6) == 6)\n                                            {\n                                                r14_2 = rax[0xc];\n                                            }\n                                            else\n                                            {\n                                                if ((rax_58 & 2) != 0)\n                                                {\n                                                    r14_2 = rax[0xb];\n                                                }\n                                                if (((rax_58 & 2) == 0 && (rax_58 & 4) != 0))\n                                                {\n                                                    r14_2 = sub_40adc0(&var_188, rax, r14_2[0xa], rax_58);\n                                                }\n                                            }\n                                        }\n                                        if ((((((rax_58 & 1) != 0 || (((rax_58 & 1) == 0 && rax_58 != 0) && (rax_58 & 6) == 6)) || ((((rax_58 & 1) == 0 && rax_58 != 0) && (rax_58 & 6) != 6) && (rax_58 & 2) != 0)) || (((((rax_58 & 1) == 0 && rax_58 != 0) && (rax_58 & 6) != 6) && (rax_58 & 2) == 0) && (rax_58 & 4) != 0)) && r14_2 == 0))\n                                        {\n                                            int32_t rax_136 = var_188;\n                                            var_1ec_1 = rax_136;\n                                            if (rax_136 != 0xc)\n                                            {\n                                                __assert_fail(\"err == REG_ESPACE\", \"lib/regexec.c\", 0x431, \"check_matching\");\n                                                /* no return */\n                                            }\n                                            break;\n                                        }\n                                    }\n                                    bool var_18b_1;\n                                    char rax_61;\n                                    bool cond:13_1;\n                                    if (var_80 != 0)\n                                    {\n                                        cond:13_1 = rax[0x13] != 0;\n                                        var_80[var_228_2] = r14_2;\n                                        if (cond:13_1)\n                                        {\n                                            int64_t* rbx_15 = &r14_2[2];\n                                            void* rbp_7 = &r14_2[3];\n                                            int32_t rax_154 = sub_40b6f0(&var_138, rbx_15, rbp_7, 0);\n                                            var_188 = rax_154;\n                                            if (rax_154 == 0)\n                                            {\n                                                rax_61 = r14_2[0xd];\n                                                if ((rax_61 & 0x40) != 0)\n                                                {\n                                                    rax_154 = sub_40f6b0(&var_138, rbx_15, rbp_7);\n                                                    var_188 = rax_154;\n                                                    if (rax_154 == 0)\n                                                    {\n                                                        rax_61 = r14_2[0xd];\n                                                    }\n                                                }\n                                                if ((((rax_61 & 0x40) != 0 && rax_154 == 0) || (rax_61 & 0x40) == 0))\n                                                {\n                                                    var_18b_1 = false;\n                                                    goto label_410ab8;\n                                                }\n                                            }\n                                            r12_2 = rax_154;\n                                        }\n                                    }\n                                    int64_t* var_178;\n                                    int64_t var_168;\n                                    if ((var_80 == 0 || (var_80 != 0 && (!cond:13_1))))\n                                    {\n                                        var_18b_1 = cond:11_1;\n                                        rax_61 = r14_2[0xd];\n                                    label_410ab8:\n                                        char var_218_1 = 0;\n                                        r12_2 = -1;\n                                        if ((rax_61 & 0x10) == 0)\n                                        {\n                                        label_410ad8:\n                                            int64_t rbx_2 = var_f0;\n                                            int64_t var_210_1 = r12_2;\n                                            int64_t* var_1e8_1 = rdx_10;\n                                        label_410b4b:\n                                            int64_t* rax_63;\n                                            int64_t rax_67;\n                                            int64_t* rbp_1;\n                                            int64_t rbp_3;\n                                            if (arg6 > rbx_2)\n                                            {\n                                                rax_67 = (rbx_2 + 1);\n                                                if (((rax_67 >= var_f8 && var_f8 < arg3) || (((rax_67 < var_f8 || (rax_67 >= var_f8 && var_f8 >= arg3)) && rax_67 >= rax_22) && rax_22 < arg3)))\n                                                {\n                                                    int32_t rax_96 = sub_408f90(&var_138, (rax_67 + 1));\n                                                    var_188 = rax_96;\n                                                    if (rax_96 != 0)\n                                                    {\n                                                        if (rax_96 == 0xc)\n                                                        {\n                                                            break;\n                                                        }\n                                                        __assert_fail(\"err == REG_ESPACE\", \"lib/regexec.c\", 0x468, \"check_matching\");\n                                                        /* no return */\n                                                    }\n                                                    rbx_2 = var_f0;\n                                                    if ((r14_2[0xd] & 0x20) == 0)\n                                                    {\n                                                        goto label_410b98;\n                                                    }\n                                                }\n                                                if ((((((rax_67 < var_f8 || (rax_67 >= var_f8 && var_f8 >= arg3)) && (rax_67 < rax_22 || (rax_67 >= rax_22 && rax_22 >= arg3))) && (r14_2[0xd] & 0x20) != 0) || (rax_67 >= var_f8 && var_f8 < arg3)) || (((rax_67 < var_f8 || (rax_67 >= var_f8 && var_f8 >= arg3)) && rax_67 >= rax_22) && rax_22 < arg3)))\n                                                {\n                                                    if (r14_2[2] > 0)\n                                                    {\n                                                        void* rax_97 = &rax[0x1b];\n                                                        int64_t r12_3 = 0;\n                                                        int64_t r8_2 = rbx_2;\n                                                    label_411100:\n                                                        void* r9_1 = *rax;\n                                                        int64_t r15_4 = *(r14_2[3] + (r12_3 << 3));\n                                                        void* rax_109 = ((r15_4 << 4) + r9_1);\n                                                        if ((*(rax_109 + 0xa) & 0x10) == 0)\n                                                        {\n                                                            goto label_4110ee;\n                                                        }\n                                                        int32_t rbx_7 = *(rax_109 + 8);\n                                                        if ((rbx_7 & 0x3ff00) != 0)\n                                                        {\n                                                            char rax_110 = sub_40b840(&var_138, r8_2, arg9, rax_109);\n                                                            uint32_t rdx_34 = (rbx_7 >> 8);\n                                                            uint32_t rcx_20;\n                                                            rcx_20 = (rdx_34 & 0x3ff);\n                                                            if ((rdx_34 & 4) != 0)\n                                                            {\n                                                                if ((rax_110 & 1) == 0)\n                                                                {\n                                                                    goto label_4110ee;\n                                                                }\n                                                                if ((rdx_34 & 8) != 0)\n                                                                {\n                                                                    goto label_4110ee;\n                                                                }\n                                                            }\n                                                            else if (((rdx_34 & 8) != 0 && (rax_110 & 1) != 0))\n                                                            {\n                                                                goto label_4110ee;\n                                                            }\n                                                            if (((rcx_20 & 0x20) != 0 && (rax_110 & 2) == 0))\n                                                            {\n                                                                goto label_4110ee;\n                                                            }\n                                                            if ((rcx_20 & 0x80) == 0)\n                                                            {\n                                                                goto label_410fee;\n                                                            }\n                                                            if ((rax_110 & 8) == 0)\n                                                            {\n                                                                goto label_4110ee;\n                                                            }\n                                                            goto label_410fee;\n                                                        }\n                                                    label_410fee:\n                                                        int32_t rax_98 = sub_40e290(r9_1, rax_97, r15_4, &var_138, r8_2);\n                                                        if (rax_98 != 0)\n                                                        {\n                                                            int64_t rbx_6 = (rax_98 + var_f0);\n                                                            void** rdi_22 = &var_138;\n                                                            if (var_58_2 >= rax_98)\n                                                            {\n                                                                rax_98 = var_58_2;\n                                                            }\n                                                            var_58_2 = rax_98;\n                                                            int32_t rax_99 = sub_4090e0(rdi_22, rbx_6);\n                                                            int32_t var_184 = rax_99;\n                                                            int64_t* rdx_31;\n                                                            if (rax_99 == 0)\n                                                            {\n                                                                int64_t rax_101 = *(rax[3] + (r15_4 << 3));\n                                                                int64_t r15_2 = (rbx_6 << 3);\n                                                                void* r8_4 = (var_80 + r15_2);\n                                                                int64_t** var_208_1 = r8_4;\n                                                                int128_t* rdx_28 = (rax[6] + (rax_101 * 0x18));\n                                                                void* rax_103 = *r8_4;\n                                                                if (rax_103 == 0)\n                                                                {\n                                                                    var_178 = *rdx_28;\n                                                                    int64_t rax_111 = rdx_28[1];\n                                                                    var_168 = rax_111;\n                                                                    rdx_31 = var_80;\n                                                                    *var_208_1 = sub_40adc0(&var_184, rax, &var_178, sub_40b840(&var_138, (rbx_6 - 1), arg9, rax_111));\n                                                                    if (rdx_31[rbx_6] != 0)\n                                                                    {\n                                                                        goto label_4110e6;\n                                                                    }\n                                                                label_4111e0:\n                                                                    rax_99 = var_184;\n                                                                    if (rax_99 == 0)\n                                                                    {\n                                                                        goto label_4110e6;\n                                                                    }\n                                                                    goto label_4113d8;\n                                                                }\n                                                                rax_99 = sub_40ac30(&var_178, *(rax_103 + 0x50), rdx_28);\n                                                                var_184 = rax_99;\n                                                                if (rax_99 != 0)\n                                                                {\n                                                                    goto label_4113d0;\n                                                                }\n                                                                *(r15_2 + var_80) = sub_40adc0(&var_184, rax, &var_178, sub_40b840(&var_138, (rbx_6 - 1), arg9, rax_99));\n                                                                free(var_168);\n                                                                rdx_31 = var_80;\n                                                                if (rdx_31[rbx_6] != 0)\n                                                                {\n                                                                    goto label_4110e6;\n                                                                }\n                                                                goto label_4111e0;\n                                                            }\n                                                        label_4113d0:\n                                                            rdx_31 = var_80;\n                                                        label_4113d8:\n                                                            var_188 = rax_99;\n                                                            if (rdx_31 != 0)\n                                                            {\n                                                                goto label_4113e4;\n                                                            }\n                                                            goto label_411420;\n                                                        }\n                                                    label_4110e6:\n                                                        r8_2 = var_f0;\n                                                    label_4110ee:\n                                                        r12_3 = (r12_3 + 1);\n                                                        if (r12_3 < r14_2[2])\n                                                        {\n                                                            goto label_411100;\n                                                        }\n                                                        rbx_2 = r8_2;\n                                                        goto label_411443;\n                                                    }\n                                                label_411443:\n                                                    var_188 = 0;\n                                                label_410b98:\n                                                    var_f0 = (rbx_2 + 1);\n                                                    uint64_t rbx_3 = *(var_130 + rbx_2);\n                                                label_410bac:\n                                                    rax_63 = r14_2[0xb];\n                                                    if (rax_63 == 0)\n                                                    {\n                                                        rbp_3 = r14_2[0xc];\n                                                        if (rbp_3 != 0)\n                                                        {\n                                                            rax_63 = sub_40b840(&var_138, (var_f0 - 1), arg9, var_f0);\n                                                            if ((rax_63 & 1) == 0)\n                                                            {\n                                                                rbp_1 = *(rbp_3 + (rbx_3 << 3));\n                                                            }\n                                                            else\n                                                            {\n                                                                rbp_1 = *((rbp_3 + (rbx_3 << 3)) + 0x800);\n                                                            }\n                                                        }\n                                                        else\n                                                        {\n                                                            if (sub_40c550(rax, r14_2) != 0)\n                                                            {\n                                                                goto label_410bac;\n                                                            }\n                                                            var_188 = 0xc;\n                                                            if (var_80 == 0)\n                                                            {\n                                                            label_411420:\n                                                                rdi_9 = nullptr;\n                                                                break;\n                                                            }\n                                                        label_4113e4:\n                                                            rbp_1 = nullptr;\n                                                        label_410bdb:\n                                                            rbp_1 = sub_40ff30(&var_188, &var_138, rbp_1);\n                                                        }\n                                                    }\n                                                    else\n                                                    {\n                                                        rbp_1 = rax_63[rbx_3];\n                                                    }\n                                                    if ((((rax_63 != 0 || (rax_63 == 0 && rbp_3 != 0)) && var_80 == 0) || (rax_63 == 0 && rbp_3 == 0)))\n                                                    {\n                                                        if (rbp_1 == 0)\n                                                        {\n                                                            rdi_9 = var_80;\n                                                            if (var_188 != 0)\n                                                            {\n                                                                break;\n                                                            }\n                                                            if (rdi_9 == 0)\n                                                            {\n                                                                goto label_410f00;\n                                                            }\n                                                            if ((var_218_1 & (rax_56 ^ 1)) != 0)\n                                                            {\n                                                                goto label_410f00;\n                                                            }\n                                                        label_410c24:\n                                                            int64_t rax_74 = var_f0;\n                                                            char rcx_9 = 0;\n                                                        label_410c43:\n                                                            int64_t rdx_17 = (rax_74 + 1);\n                                                            if (0 >= rdx_17)\n                                                            {\n                                                                rax_74 = rdx_17;\n                                                                rcx_9 = 1;\n                                                                if (rdi_9[rdx_17] == 0)\n                                                                {\n                                                                    goto label_410c43;\n                                                                }\n                                                                var_f0 = rdx_17;\n                                                                rax_63 = sub_40ff30(&var_188, &var_138, nullptr);\n                                                                if (var_188 != 0)\n                                                                {\n                                                                    rbp_1 = rax_63;\n                                                                    if (rax_63 == 0)\n                                                                    {\n                                                                        goto label_410f00;\n                                                                    }\n                                                                    goto label_410af3;\n                                                                }\n                                                                if (rax_63 == 0)\n                                                                {\n                                                                    rdi_9 = var_80;\n                                                                    goto label_410c24;\n                                                                }\n                                                                rbp_1 = rax_63;\n                                                                goto label_410af3;\n                                                            }\n                                                            r12_2 = var_210_1;\n                                                            if (rcx_9 != 0)\n                                                            {\n                                                                var_f0 = rax_74;\n                                                            }\n                                                        }\n                                                        else\n                                                        {\n                                                        label_410af3:\n                                                            rbx_2 = var_f0;\n                                                            rax_63 = r14_2 == rbp_1;\n                                                            bool temp0_1 = (var_18b_1 & rax_63);\n                                                            var_18b_1 = temp0_1;\n                                                            int64_t rax_64 = rax_67;\n                                                            if (temp0_1 == 0)\n                                                            {\n                                                                rax_64 = var_228_2;\n                                                            }\n                                                            var_228_2 = rax_64;\n                                                            char rax_65 = rbp_1[0xd];\n                                                            if ((rax_65 & 0x10) == 0)\n                                                            {\n                                                                goto label_410b48;\n                                                            }\n                                                            if ((rax_65 < 0 && sub_40ba60(&var_138, rbp_1[2], &rbp_1[3], rbx_2) == 0))\n                                                            {\n                                                                goto label_410b48;\n                                                            }\n                                                            if (var_1f0_1 != 0)\n                                                            {\n                                                                var_210_1 = rbx_2;\n                                                                var_218_1 = 1;\n                                                                var_1e8_1 = nullptr;\n                                                            label_410b48:\n                                                                r14_2 = rbp_1;\n                                                                goto label_410b4b;\n                                                            }\n                                                            r12_2 = rbx_2;\n                                                        }\n                                                    }\n                                                    if (((rax_63 != 0 || (rax_63 == 0 && rbp_3 != 0)) && var_80 != 0))\n                                                    {\n                                                        goto label_410bdb;\n                                                    }\n                                                }\n                                                if ((((rax_67 < var_f8 || (rax_67 >= var_f8 && var_f8 >= arg3)) && (rax_67 < rax_22 || (rax_67 >= rax_22 && rax_22 >= arg3))) && (r14_2[0xd] & 0x20) == 0))\n                                                {\n                                                    goto label_410b98;\n                                                }\n                                            }\n                                            else\n                                            {\n                                            label_410f00:\n                                                r12_2 = var_210_1;\n                                            }\n                                            if (((arg6 <= rbx_2 || ((((arg6 > rbx_2 && (((((rax_67 < var_f8 || (rax_67 >= var_f8 && var_f8 >= arg3)) && (rax_67 < rax_22 || (rax_67 >= rax_22 && rax_22 >= arg3))) && (r14_2[0xd] & 0x20) != 0) || (rax_67 >= var_f8 && var_f8 < arg3)) || (((rax_67 < var_f8 || (rax_67 >= var_f8 && var_f8 >= arg3)) && rax_67 >= rax_22) && rax_22 < arg3))) && r14_2[2] <= 0) && (((rax_63 != 0 || (rax_63 == 0 && rbp_3 != 0)) && var_80 == 0) || (rax_63 == 0 && rbp_3 == 0))) && rbp_1 == 0)) && var_1e8_1 != 0))\n                                            {\n                                                *var_1e8_1 = (*var_1e8_1 + var_228_2);\n                                            }\n                                        }\n                                        else\n                                        {\n                                            if (r14_2[0xd] < 0)\n                                            {\n                                                int64_t rax_138 = sub_40ba60(&var_138, r14_2[2], &r14_2[3], var_228_2);\n                                                var_218_1 = rax_138;\n                                                if (rax_138 == 0)\n                                                {\n                                                    goto label_410ad8;\n                                                }\n                                            }\n                                            r12_2 = var_228_2;\n                                            var_218_1 = 1;\n                                            if (var_1f0_1 != 0)\n                                            {\n                                                goto label_410ad8;\n                                            }\n                                        }\n                                    }\n                                    if (r12_2 == -1)\n                                    {\n                                        goto label_4112d3;\n                                    }\n                                    if (r12_2 == -2)\n                                    {\n                                        break;\n                                    }\n                                    var_90_2 = r12_2;\n                                    int64_t var_88_1;\n                                    int64_t* rbx_4;\n                                    int64_t r14_3;\n                                    if (((arg1[7] & 0x10) == 0 && arg7 > 1))\n                                    {\n                                        rbx_4 = var_80;\n                                        void* rax_77 = rbx_4[r12_2];\n                                        int64_t rax_78 = sub_40ba60(&var_138, *(rax_77 + 0x10), (rax_77 + 0x18), r12_2);\n                                        r14_3 = rax_78;\n                                        var_88_1 = rax_78;\n                                        if (((rax[0x16] & 1) == 0 && rax[0x13] != 0))\n                                        {\n                                            goto label_4114b7;\n                                        }\n                                    }\n                                    if ((((arg1[7] & 0x10) != 0 || ((arg1[7] & 0x10) == 0 && arg7 <= 1)) && rax[0x13] != 0))\n                                    {\n                                        rbx_4 = var_80;\n                                        void* rax_123 = rbx_4[r12_2];\n                                        var_88_1 = sub_40ba60(&var_138, *(rax_123 + 0x10), (rax_123 + 0x18), r12_2);\n                                    label_4114b7:\n                                        r14_3 = var_88_1;\n                                    }\n                                    int32_t rax_115;\n                                    int64_t* rax_126;\n                                    uint64_t rbx_9;\n                                    int64_t rbp_6;\n                                    if (((((arg1[7] & 0x10) == 0 && arg7 > 1) && (rax[0x16] & 1) != 0) || (((arg1[7] & 0x10) != 0 || ((arg1[7] & 0x10) == 0 && arg7 <= 1)) && rax[0x13] != 0)))\n                                    {\n                                        if (r12_2 > 0x1ffffffffffffffe)\n                                        {\n                                            rdi_9 = rbx_4;\n                                            var_1ec_1 = 0xc;\n                                            break;\n                                        }\n                                        rbp_6 = (r12_2 + 1);\n                                        rbx_9 = (rbp_6 << 3);\n                                        rax_126 = malloc(rbx_9);\n                                        if (rax_126 == 0)\n                                        {\n                                            break;\n                                        }\n                                        if ((rax[0x13] == 0 && rax_126 != 0))\n                                        {\n                                            var_178 = rax_126;\n                                            int64_t var_170_1 = 0;\n                                            var_168 = r14_3;\n                                            int64_t var_160_1 = r12_2;\n                                            int128_t var_158_1 = 0;\n                                            rax_115 = sub_4100f0(&var_138, &var_178);\n                                            rbp_4 = rax_115;\n                                            free(nullptr);\n                                            if ((rax_115 == 0 && *rax_126 != 0))\n                                            {\n                                            label_411639:\n                                                free(var_80);\n                                                var_80 = rax_126;\n                                                int64_t var_88_2 = r14_3;\n                                                var_90_2 = r12_2;\n                                            }\n                                        }\n                                    }\n                                    if ((((((((((((arg1[7] & 0x10) == 0 && arg7 > 1) && (rax[0x16] & 1) != 0) || (((arg1[7] & 0x10) != 0 || ((arg1[7] & 0x10) == 0 && arg7 <= 1)) && rax[0x13] != 0)) && r12_2 <= 0x1ffffffffffffffe) && rax_126 != 0) && rax[0x13] == 0) && rax_115 == 0) && *rax_126 != 0) || (((arg1[7] & 0x10) != 0 || ((arg1[7] & 0x10) == 0 && arg7 <= 1)) && rax[0x13] == 0)) || (((arg1[7] & 0x10) == 0 && arg7 > 1) && (rax[0x16] & 1) == 0)))\n                                    {\n                                        if (arg7 == 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_140 = &arg8[2];\n                                        rcx_30 = &arg8[(arg7 * 2)];\n                                        if (arg7 > 1)\n                                        {\n                                            break;\n                                        }\n                                        *arg8 = 0;\n                                        arg8[1] = var_90_2;\n                                        break;\n                                    }\n                                    if (((((((arg1[7] & 0x10) == 0 && arg7 > 1) && (rax[0x16] & 1) != 0) || (((arg1[7] & 0x10) != 0 || ((arg1[7] & 0x10) == 0 && arg7 <= 1)) && rax[0x13] != 0)) && r12_2 <= 0x1ffffffffffffffe) && rax_126 != 0))\n                                    {\n                                        int64_t* var_218_2;\n                                        if (rax[0x13] == 0)\n                                        {\n                                            if ((rax_115 == 0 && *rax_126 == 0))\n                                            {\n                                                free(rax_126);\n                                            label_4112d3:\n                                                sub_409780(&var_138);\n                                                rbx = var_180;\n                                            }\n                                            if (rax_115 != 0)\n                                            {\n                                            label_411ab9:\n                                                var_218_2 = nullptr;\n                                            label_411a85:\n                                                free(rax_126);\n                                                free(var_218_2);\n                                                rax_145 = rbp_4;\n                                                if (rbp_4 != 1)\n                                                {\n                                                    break;\n                                                }\n                                                goto label_4112d3;\n                                            }\n                                        }\n                                        else\n                                        {\n                                            int64_t* rax_128 = malloc(rbx_9);\n                                            var_218_2 = rax_128;\n                                            if (rax_128 == 0)\n                                            {\n                                                free(rax_126);\n                                                rdi_9 = var_80;\n                                                var_1ec_1 = 0xc;\n                                                break;\n                                            }\n                                        label_411539:\n                                            memset(rax_128, 0, (rbp_6 << 3));\n                                            int128_t var_158_2 = 0;\n                                            var_178 = rax_126;\n                                            int64_t* var_170_2 = rax_128;\n                                            var_168 = r14_3;\n                                            int64_t var_160_2 = r12_2;\n                                            var_228_2 = sub_4100f0(&var_138, &var_178);\n                                            free(nullptr);\n                                            int32_t rax_130 = var_228_2;\n                                            if (rax_130 != 0)\n                                            {\n                                                rbp_4 = rax_130;\n                                                goto label_411a85;\n                                            }\n                                            if (*rax_126 != 0)\n                                            {\n                                            label_411613:\n                                                rbp_4 = sub_40b2b0(rax, rax_126, rax_128, rbp_6);\n                                                free(rax_128);\n                                                if (rbp_4 != 0)\n                                                {\n                                                    goto label_411ab9;\n                                                }\n                                                goto label_411639;\n                                            }\n                                            if (*rax_128 != 0)\n                                            {\n                                                goto label_411613;\n                                            }\n                                        label_4115c0:\n                                            r12_2 = (r12_2 - 1);\n                                            if (r12_2 != -1)\n                                            {\n                                                void* rax_131 = var_80[r12_2];\n                                                if (rax_131 == 0)\n                                                {\n                                                    goto label_4115c0;\n                                                }\n                                                if ((*(rax_131 + 0x68) & 0x10) == 0)\n                                                {\n                                                    goto label_4115c0;\n                                                }\n                                                rbp_6 = (r12_2 + 1);\n                                                r14_3 = sub_40ba60(&var_138, *(rax_131 + 0x10), (rax_131 + 0x18), r12_2);\n                                                goto label_411539;\n                                            }\n                                            free(rax_126);\n                                            free(rax_128);\n                                            sub_409780(&var_138);\n                                            rbx = var_180;\n                                        }\n                                    }\n                                }\n                                rbx = (rbx + rax_37);\n                                var_180 = rbx;\n                                if (rbx < rax_38)\n                                {\n                                    break;\n                                }\n                                if (rbx > rax_39)\n                                {\n                                    break;\n                                }\n                                rax_49 = rax_48;\n                            } while (rax_49 <= 4);\n                            if ((/* if (unimplemented  {jmp qword [rax*8+0x418908]} && rbp_4 != 1)... */ && rbp_4 != 1))\n                            {\n                                goto label_411a9f;\n                            }\n                            if ((/* if (unimplemented  {jmp qword [rax*8+0x418908]} && arg7 u> 1)... */ && arg7 > 1))\n                            {\n                            label_411830:\n                                *(rax_140 + 8) = -1;\n                                rax_140 = (rax_140 + 0x10);\n                                *(rax_140 - 0x10) = -1;\n                                if (rcx_30 != rax_140)\n                                {\n                                    goto label_411830;\n                                }\n                                *arg8 = 0;\n                                arg8[1] = var_90_2;\n                                int64_t rdx_51;\n                                if ((arg1[7] & 0x10) != 0)\n                                {\n                                label_411b27:\n                                    rdx_51 = 0;\n                                label_4118e3:\n                                    int64_t rcx_32 = 0;\n                                    int64_t rdi_54 = var_180;\n                                    int64_t* rax_147 = arg8;\n                                label_411913:\n                                    if (rdx_51 == -1)\n                                    {\n                                        goto label_411933;\n                                    }\n                                    int64_t rsi_45 = rax_147[1];\n                                    char var_ac;\n                                    if (var_ac == 0)\n                                    {\n                                        goto label_41192c;\n                                    }\n                                    int64_t var_120;\n                                    if (rax_22 != rdx_51)\n                                    {\n                                        rdx_51 = *(var_120 + (rdx_51 << 3));\n                                        goto label_411b3f;\n                                    }\n                                    rdx_51 = rax_22;\n                                label_411b3f:\n                                    *rax_147 = rdx_51;\n                                    if (rax_22 != rsi_45)\n                                    {\n                                        rsi_45 = *(var_120 + (rsi_45 << 3));\n                                        goto label_41192c;\n                                    }\n                                    rsi_45 = rax_22;\n                                label_41192c:\n                                    *rax_147 = (rdx_51 + rdi_54);\n                                    rax_147[1] = (rsi_45 + rdi_54);\n                                label_411933:\n                                    rcx_32 = (rcx_32 + 1);\n                                    rax_147 = &rax_147[2];\n                                    if (rcx_32 != arg7)\n                                    {\n                                        rdx_51 = *rax_147;\n                                        goto label_411913;\n                                    }\n                                    if (var_1a8 > 0)\n                                    {\n                                        void* rax_150 = &arg8[(arg7 * 2)];\n                                        void* rcx_36 = &arg8[((var_1a8 + arg7) * 2)];\n                                    label_411988:\n                                        *rax_150 = -1;\n                                        rax_150 = (rax_150 + 0x10);\n                                        *(rax_150 - 8) = -1;\n                                        if (rcx_36 != rax_150)\n                                        {\n                                            goto label_411988;\n                                        }\n                                        goto label_41199d;\n                                    }\n                                label_41199d:\n                                    rdi_9 = var_80;\n                                    int64_t rsi_47 = rax[0x1c];\n                                    if (rsi_47 != 0)\n                                    {\n                                        int64_t r8_8 = (arg7 - 1);\n                                        int64_t rax_153 = 0;\n                                    label_411a1b:\n                                        if (rax_153 != r8_8)\n                                        {\n                                            int64_t rdx_53 = *(rsi_47 + (rax_153 << 3));\n                                            if (rdx_53 == rax_153)\n                                            {\n                                                goto label_411a17;\n                                            }\n                                            int64_t rcx_39 = (rax_153 << 4);\n                                            *((arg8 + rcx_39) + 0x10) = arg8[((rdx_53 + 1) * 2)];\n                                            *((arg8 + rcx_39) + 0x18) = arg8[(((*(rsi_47 + (rax_153 << 3)) + 1) * 2) + 1)];\n                                        label_411a17:\n                                            rax_153 = (rax_153 + 1);\n                                            goto label_411a1b;\n                                        }\n                                    }\n                                }\n                                else\n                                {\n                                    if (arg7 == 1)\n                                    {\n                                        goto label_411b27;\n                                    }\n                                    bool r8_6 = false;\n                                    if ((rax[0x16] & 1) != 0)\n                                    {\n                                        r8_6 = rax[0x13] > 0;\n                                    }\n                                    rax_145 = sub_40ec40(arg1, &var_138, arg7, arg8, r8_6);\n                                    if (rax_145 == 0)\n                                    {\n                                        rdx_51 = *arg8;\n                                        goto label_4118e3;\n                                    }\n                                label_411a9f:\n                                    rdi_9 = var_80;\n                                    var_1ec_1 = rax_145;\n                                }\n                            }\n                            else\n                            {\n                                if (/* if (unimplemented  {jmp qword [rax*8+0x418908]})... */)\n                                {\n                                    goto label_411b27;\n                                }\n                                if ((/* if (unimplemented  {jmp qword [rax*8+0x418908]} && rax_49.d u> 4)... */ && rax_49 > 4))\n                                {\n                                    goto label_411331;\n                                }\n                                if (((rax_49 == 0 || rax_49 == 1) && rax_38 > rbx))\n                                {\n                                    goto label_410dc0;\n                                }\n                                if (/* if (unimplemented  {jmp qword [rax*8+0x418908]})... */)\n                                {\n                                    goto label_411422;\n                                }\n                                if ((/* if (unimplemented  {jmp qword [rax*8+0x418908]} && r12_2 == -2)... */ && r12_2 == -2))\n                                {\n                                    goto label_411471;\n                                }\n                                if ((/* if (unimplemented  {jmp qword [rax*8+0x418908]} && arg7 == 0)... */ && arg7 == 0))\n                                {\n                                    goto label_410e68;\n                                }\n                            }\n                        }\n                    }\n                    if ((arg7 > 1 || (arg7 <= 1 && (rax[0x16] & 2) != 0)))\n                    {\n                        if (var_f8 > 0x1ffffffffffffffe)\n                        {\n                            goto label_411471;\n                        }\n                        int64_t* rax_30;\n                        rax_30 = malloc(((var_f8 << 3) + 8));\n                        rdi_9 = rax_30;\n                        var_80 = rax_30;\n                        if (rax_30 != 0)\n                        {\n                            goto label_4107d9;\n                        }\n                    label_411422:\n                        var_1ec_1 = 0xc;\n                    }\n                }\n            }\n            free(rdi_9);\n            if (rax[0x13] != 0)\n            {\n                sub_409780(&var_138);\n                free(var_40);\n                free(var_60);\n            }\n            sub_409740(&var_138);\n        }\n    }\n    return var_1ec_1;\n}\n\n"
        },
        {
            "funcName": "sub_411b80",
            "funcStartAddr": "0x411b80",
            "funcEndAddr": "0x4123a9",
            "decompiledFuncCode": "uint64_t sub_411b80(void* arg1, int64_t* arg2, int64_t arg3, int64_t* arg4)\n{\n    int64_t rcx = (arg3 << 3);\n    int64_t* rbx = arg2;\n    int64_t* r12 = *(arg1 + 0x98);\n    int64_t rdx = arg4[1];\n    int64_t* rcx_1 = (rcx + *(arg1 + 0xb8));\n    void* rdi = *rcx_1;\n    int32_t var_7c = 0;\n    uint64_t rax_1;\n    if (rdi == 0)\n    {\n        int64_t** rax_51 = (rcx + *arg2);\n        if (rdx != 0)\n        {\n            *rax_51 = sub_40b0c0(&var_7c, r12, arg4);\n            rax_1 = var_7c;\n        }\n        else\n        {\n            *rax_51 = nullptr;\n            rax_1 = 0;\n        }\n    }\n    else\n    {\n        int32_t var_78;\n        if (rdx != 0)\n        {\n            var_78 = 0;\n            int64_t* rax_2 = sub_40b0c0(&var_78, r12, arg4);\n            rax_1 = var_78;\n            if (rax_1 == 0)\n            {\n                int64_t r13_1 = rax_2[7];\n                void* rax_3 = &rax_2[7];\n                if (r13_1 == 0)\n                {\n                    int64_t rdi_2 = arg4[1];\n                    rax_2[8] = 0;\n                    rax_2[7] = rdi_2;\n                    int64_t rax_4 = malloc((rdi_2 << 3));\n                    rax_2[9] = rax_4;\n                    if (rax_4 != 0)\n                    {\n                        var_78 = 0;\n                        if (arg4[1] <= 0)\n                        {\n                            goto label_411ccd;\n                        }\n                        int32_t rax_8;\n                        do\n                        {\n                            int64_t rax_6 = *(arg4[2] + (r13_1 << 3));\n                            rax_8 = sub_40a050(rax_3, (r12[7] + (rax_6 * 0x18)));\n                            var_78 = rax_8;\n                            if (rax_8 != 0)\n                            {\n                                break;\n                            }\n                            r13_1 = (r13_1 + 1);\n                        } while (r13_1 < arg4[1]);\n                        if (rax_8 == 0)\n                        {\n                            goto label_411ccd;\n                        }\n                    }\n                    rax_1 = 0xc;\n                }\n                else\n                {\n                label_411ccd:\n                    void* rax_10 = (rdi + 8);\n                    rax_1 = sub_40a5c0(arg4, rax_10, rax_3);\n                    var_7c = rax_1;\n                    if (rax_1 == 0)\n                    {\n                        int64_t temp0_1 = rbx[5];\n                        bool cond:1_1 = temp0_1 <= 0;\n                        if (temp0_1 != 0)\n                        {\n                            int64_t rax_55 = *(arg1 + 0xd8);\n                            if ((!cond:1_1))\n                            {\n                                int64_t r15_5 = 0;\n                                do\n                                {\n                                    int64_t* rdx_20 = (rax_55 + (*(rbx[6] + (r15_5 << 3)) * 0x28));\n                                    if ((arg3 > rdx_20[2] && arg3 <= rdx_20[1]))\n                                    {\n                                        int64_t* rax_59 = *r12;\n                                        int64_t rsi_17 = arg4[1];\n                                        int64_t r8_3 = rax_59[(*rdx_20 * 2)];\n                                        if (arg3 != rdx_20[3])\n                                        {\n                                            int64_t r13_5 = 0;\n                                            if (rsi_17 > 0)\n                                            {\n                                                void* rax_60;\n                                                while (true)\n                                                {\n                                                    int64_t rsi_18 = *(arg4[2] + (r13_5 << 3));\n                                                    rax_60 = &rax_59[(rsi_18 * 2)];\n                                                    if (((*(rax_60 + 8) - 8) > 1 || ((*(rax_60 + 8) - 8) <= 1 && r8_3 != *rax_60)))\n                                                    {\n                                                        r13_5 = (r13_5 + 1);\n                                                        if (r13_5 >= arg4[1])\n                                                        {\n                                                            break;\n                                                        }\n                                                    }\n                                                    if (((*(rax_60 + 8) - 8) <= 1 && r8_3 == *rax_60))\n                                                    {\n                                                        rax_1 = sub_40c320(r12, rsi_18, arg4, rax_10);\n                                                        if (rax_1 != 0)\n                                                        {\n                                                            break;\n                                                        }\n                                                        r13_5 = (r13_5 + 1);\n                                                        if (r13_5 >= arg4[1])\n                                                        {\n                                                            break;\n                                                        }\n                                                    }\n                                                    rax_59 = *r12;\n                                                }\n                                                if ((((*(rax_60 + 8) - 8) <= 1 && r8_3 == *rax_60) && rax_1 != 0))\n                                                {\n                                                    goto label_411c0a;\n                                                }\n                                            }\n                                        }\n                                        else if (rsi_17 > 0)\n                                        {\n                                            int64_t* r10_2 = arg4[2];\n                                            int64_t r9_4 = -1;\n                                            void* r11_1 = &r10_2[rsi_17];\n                                            int64_t* rcx_15 = r10_2;\n                                            int64_t rsi_19 = -1;\n                                            while (true)\n                                            {\n                                                int64_t rdi_20 = *rcx_15;\n                                                void* rdx_29 = &rax_59[(rdi_20 * 2)];\n                                                uint32_t r13_6 = *(rdx_29 + 8);\n                                                if (r13_6 != 8)\n                                                {\n                                                    if ((r13_6 == 9 && r8_3 == *rdx_29))\n                                                    {\n                                                        r9_4 = rdi_20;\n                                                    }\n                                                    rcx_15 = &rcx_15[1];\n                                                    if (r11_1 == rcx_15)\n                                                    {\n                                                        break;\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    if (r8_3 == *rdx_29)\n                                                    {\n                                                        rsi_19 = rdi_20;\n                                                    }\n                                                    rcx_15 = &rcx_15[1];\n                                                    if (r11_1 == rcx_15)\n                                                    {\n                                                        break;\n                                                    }\n                                                }\n                                            }\n                                            if (rsi_19 >= 0)\n                                            {\n                                                rax_1 = sub_40c320(r12, rsi_19, arg4, rax_10);\n                                                if (((rax_1 == 0 && r9_4 >= 0) && arg4[1] > 0))\n                                                {\n                                                    r10_2 = arg4[2];\n                                                }\n                                                if (rax_1 != 0)\n                                                {\n                                                    goto label_411c0a;\n                                                }\n                                            }\n                                            if (((((rsi_19 >= 0 && rax_1 == 0) && r9_4 >= 0) && arg4[1] > 0) || (rsi_19 < 0 && r9_4 >= 0)))\n                                            {\n                                                int64_t rbx_9 = 0;\n                                                int64_t rax_63;\n                                                int64_t rax_64;\n                                                while (true)\n                                                {\n                                                    int64_t r10_3 = r10_2[rbx_9];\n                                                    int64_t r9_6 = (r10_3 * 0x18);\n                                                    void* rax_62 = (r12[7] + r9_6);\n                                                    rax_63 = sub_409b10(*(rax_62 + 8), (rax_62 + 0x10), r9_4);\n                                                    if (rax_63 == 0)\n                                                    {\n                                                        void* r9_7 = (r9_6 + r12[6]);\n                                                        rax_64 = sub_409b10(*(r9_7 + 8), (r9_7 + 0x10), r9_4);\n                                                        if (rax_64 == 0)\n                                                        {\n                                                            rax_1 = sub_40c320(r12, r10_3, arg4, rax_10);\n                                                            if (rax_1 != 0)\n                                                            {\n                                                                break;\n                                                            }\n                                                        }\n                                                    }\n                                                    if ((rax_63 != 0 || (rax_63 == 0 && rax_64 != 0)))\n                                                    {\n                                                        rbx_9 = (rbx_9 + 1);\n                                                    }\n                                                    if (arg4[1] <= rbx_9)\n                                                    {\n                                                        break;\n                                                    }\n                                                    r10_2 = arg4[2];\n                                                }\n                                                if (((rax_63 == 0 && rax_64 == 0) && rax_1 != 0))\n                                                {\n                                                    goto label_411c0a;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    r15_5 = (r15_5 + 1);\n                                } while (r15_5 < rbx[5]);\n                            }\n                            var_7c = 0;\n                        }\n                        int64_t** r13_3 = (rcx + *rbx);\n                        *r13_3 = sub_40b0c0(&var_7c, r12, arg4);\n                        rax_1 = var_7c;\n                        if (rax_1 == 0)\n                        {\n                            rax_1 = 0;\n                            if ((*(*(rcx + *(arg1 + 0xb8)) + 0x68) & 0x40) != 0)\n                            {\n                                goto label_411d42;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else\n        {\n            *(*arg2 + (arg3 << 3)) = 0;\n            rax_1 = 0;\n            if ((*(*rcx_1 + 0x68) & 0x40) != 0)\n            {\n            label_411d42:\n                int64_t r12_1 = 0;\n                int64_t rsi_5 = *(arg1 + 0xc8);\n                int64_t rdx_11;\n                for (int64_t rax_15 = rsi_5; r12_1 < rax_15; rax_15 = rdx_11)\n                {\n                    int64_t rcx_2 = (r12_1 + rax_15);\n                    int64_t rdi_8 = *(arg1 + 0xd8);\n                    rdx_11 = (((rcx_2 >> 0x3f) + rcx_2) >> 1);\n                    int64_t r8_1;\n                    if (arg3 > *((rdi_8 + (rdx_11 * 0x28)) + 8))\n                    {\n                        r8_1 = rdx_11;\n                        rdx_11 = rax_15;\n                    }\n                    else\n                    {\n                        int64_t rax_19;\n                        for (; r12_1 < rdx_11; rdx_11 = rax_19)\n                        {\n                            int64_t rcx_4 = (r12_1 + rdx_11);\n                            rax_19 = (((rcx_4 >> 0x3f) + rcx_4) >> 1);\n                            r8_1 = rax_19;\n                            if (arg3 > *((rdi_8 + (rax_19 * 0x28)) + 8))\n                            {\n                                break;\n                            }\n                        }\n                        if (r12_1 >= rdx_11)\n                        {\n                            break;\n                        }\n                    }\n                    r12_1 = (r8_1 + 1);\n                }\n                if (rsi_5 <= r12_1)\n                {\n                label_41209c:\n                    rax_1 = 0;\n                }\n                else\n                {\n                    int64_t rsi_6 = (r12_1 * 0x28);\n                    if (arg3 != *((*(arg1 + 0xd8) + rsi_6) + 8))\n                    {\n                        goto label_41209c;\n                    }\n                    if (r12_1 == -1)\n                    {\n                        goto label_41209c;\n                    }\n                    int64_t* r13_4 = *(arg1 + 0x98);\n                    var_78 = 0;\n                    if (*(rdi + 0x10) <= 0)\n                    {\n                        goto label_41209c;\n                    }\n                    int64_t r15_3 = 0;\n                    int64_t var_48;\n                    do\n                    {\n                        int64_t rbp_1 = *(*(rdi + 0x18) + (r15_3 << 3));\n                        char rax_29 = *(((rbp_1 << 4) + *r13_4) + 8);\n                        if (((rbp_1 != rbx[2] && rax_29 == 4) || ((rbp_1 == rbx[2] && arg3 != rbx[3]) && rax_29 == 4)))\n                        {\n                            int64_t r12_2 = r12_1;\n                            int64_t* rbx_3 = (rsi_6 + *(arg1 + 0xd8));\n                            int64_t rax_32 = (rbp_1 * 0x18);\n                            int64_t rax_33 = (rbp_1 << 3);\n                            while (true)\n                            {\n                                if (rbp_1 == *rbx_3)\n                                {\n                                    int64_t rax_46 = rbx_3[3];\n                                    int64_t r10_1 = (arg3 + (rax_46 - rbx_3[2]));\n                                    int64_t r9_1;\n                                    if (rax_46 != rbx_3[2])\n                                    {\n                                        r9_1 = *(r13_4[3] + rax_33);\n                                    }\n                                    else\n                                    {\n                                        r9_1 = **((r13_4[5] + rax_32) + 0x10);\n                                    }\n                                    if (r10_1 <= rbx[3])\n                                    {\n                                        void* rax_36 = *(*rbx + (r10_1 << 3));\n                                        if (((rax_36 != 0 && sub_409b10(*(rax_36 + 0x10), (rax_36 + 0x18), r9_1) != 0) && sub_409da0(arg1, &rbx[5], &rbx[6], rbp_1, arg3, r9_1, r10_1) == 0))\n                                        {\n                                            int128_t var_68;\n                                            int128_t var_58;\n                                            if (var_78 == 0)\n                                            {\n                                                var_78 = *rbx;\n                                                var_68 = *(rbx + 0x10);\n                                                var_58 = *(rbx + 0x20);\n                                                var_48 = rbx[6];\n                                                rax_1 = sub_40abb0(&var_58, &rbx[4]);\n                                            }\n                                            char rax_39;\n                                            int64_t rsi_12;\n                                            if ((var_78 != 0 || (var_78 == 0 && rax_1 == 0)))\n                                            {\n                                                var_68 = rbp_1;\n                                                *var_68[8] = arg3;\n                                                rax_39 = sub_408500(&var_58, r12_2);\n                                                if (rax_39 == 0)\n                                                {\n                                                    rax_1 = 0xc;\n                                                }\n                                                else\n                                                {\n                                                    int64_t rbx_5 = *(var_78 + rcx);\n                                                    rax_1 = sub_4100f0(arg1, &var_78);\n                                                    if (rax_1 == 0)\n                                                    {\n                                                        rsi_12 = rbx[1];\n                                                        int64_t* rdx_15 = var_78;\n                                                        if (rsi_12 != 0)\n                                                        {\n                                                            rax_1 = sub_40b2b0(r13_4, rsi_12, rdx_15, (arg3 + 1));\n                                                            rdx_15 = var_78;\n                                                        }\n                                                        int64_t r9_2 = *var_58[8];\n                                                        *(rdx_15 + rcx) = rbx_5;\n                                                        int64_t rax_42 = sub_409b10(r9_2, &var_48, r12_2);\n                                                        int64_t rax_43 = (rax_42 - 1);\n                                                        if (((rax_42 - 1) >= 0 && r9_2 > rax_43))\n                                                        {\n                                                            *var_58[8] = (r9_2 - 1);\n                                                            sub_409c80(&*var_58[8], &var_48, rax_43);\n                                                        }\n                                                        rbx_3 = (*(arg1 + 0xd8) + (r12_2 * 0x28));\n                                                    }\n                                                }\n                                            }\n                                            if ((((((var_78 != 0 || (var_78 == 0 && rax_1 == 0)) && rax_39 == 0) || (var_78 == 0 && rax_1 != 0)) || (((var_78 != 0 || (var_78 == 0 && rax_1 == 0)) && rax_39 != 0) && rax_1 != 0)) || ((((var_78 != 0 || (var_78 == 0 && rax_1 == 0)) && rax_39 != 0) && rax_1 == 0) && rsi_12 != 0)))\n                                            {\n                                                if (var_78 == 0)\n                                                {\n                                                    goto label_411c0a;\n                                                }\n                                                goto label_412124;\n                                            }\n                                        }\n                                    }\n                                }\n                                r12_2 = (r12_2 + 1);\n                                void* rax_45 = &rbx_3[5];\n                                if (rbx_3[4] == 0)\n                                {\n                                    break;\n                                }\n                                rbx_3 = rax_45;\n                            }\n                        }\n                        r15_3 = (r15_3 + 1);\n                    } while (r15_3 < *(rdi + 0x10));\n                    if (var_78 == 0)\n                    {\n                        goto label_41209c;\n                    }\n                    rax_1 = 0;\n                label_412124:\n                    void* var_d0;\n                    var_d0 = rax_1;\n                    free(var_48);\n                    rax_1 = var_d0;\n                }\n            }\n        }\n    }\nlabel_411c0a:\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4123b0",
            "funcStartAddr": "0x4123b0",
            "funcEndAddr": "0x4125cd",
            "decompiledFuncCode": "int64_t sub_4123b0(int32_t* arg1, void* arg2, char* arg3, int32_t arg4, \n    int32_t arg5, char arg6)\n{\n    int64_t r11 = arg4;\n    int64_t r12 = *(arg2 + 0x48);\n    if (*(arg2 + 0x90) != 1)\n    {\n        int32_t rax_1 = sub_409ac0(arg2, r12);\n        if (rax_1 > 1)\n        {\n            int64_t rdx_2 = *(arg2 + 0x10);\n            *arg1 = 1;\n            arg1[2] = *(rdx_2 + (r12 << 2));\n            *(arg2 + 0x48) = (rax_1 + r12);\n            return 0;\n        }\n    }\n    char rax_8 = arg3[8];\n    int64_t r11_1 = (r11 + r12);\n    *(arg2 + 0x48) = r11_1;\n    int64_t rax_3;\n    if (((rax_8 & 0xfb) != 0x1a && rax_8 != 0x1c))\n    {\n        if ((rax_8 == 0x16 && arg6 == 0))\n        {\n            void var_38;\n            sub_408020(&var_38, arg2, arg5);\n            rax_3 = 0xb;\n        }\n        char var_30;\n        if (((rax_8 != 0x16 || (rax_8 == 0x16 && arg6 != 0)) || ((rax_8 == 0x16 && arg6 == 0) && var_30 == 0x15)))\n        {\n            char rax_2 = *arg3;\n            *arg1 = 0;\n            arg1[2] = rax_2;\n            rax_3 = 0;\n        }\n    }\n    if (((rax_8 & 0xfb) == 0x1a || ((rax_8 & 0xfb) != 0x1a && rax_8 == 0x1c)))\n    {\n        if (r11_1 >= *(arg2 + 0x68))\n        {\n            return 7;\n        }\n        char r9 = *arg3;\n        int64_t r8 = 0;\n        int64_t rax_9;\n        int64_t r12_1;\n        while (true)\n        {\n            r12_1 = r8;\n            char r13_1;\n            if (rax_8 != 0x1e)\n            {\n            label_412489:\n                char* rdx_4 = *(arg2 + 8);\n                rax_9 = (r11_1 + 1);\n                *(arg2 + 0x48) = rax_9;\n                r13_1 = rdx_4[r11_1];\n            }\n            else\n            {\n                if (*(arg2 + 0x8b) == 0)\n                {\n                    goto label_412489;\n                }\n                if (*(arg2 + 0x8c) == 0)\n                {\n                    rax_9 = (r11_1 + 1);\n                    char* r11_3 = ((r11_1 + *arg2) + *(arg2 + 0x28));\n                    *(arg2 + 0x48) = rax_9;\n                    r13_1 = *r11_3;\n                }\n                else\n                {\n                    if ((r11_1 != *(arg2 + 0x30) && *(*(arg2 + 0x10) + (r11_1 << 2)) == 0xffffffff))\n                    {\n                        goto label_412489;\n                    }\n                    r13_1 = *((*(*(arg2 + 0x18) + (r11_1 << 3)) + *arg2) + *(arg2 + 0x28));\n                    if ((r13_1 & 0x80) != 0)\n                    {\n                        goto label_412489;\n                    }\n                    int64_t rax_18 = 1;\n                    if (*(arg2 + 0x90) != 1)\n                    {\n                        rax_18 = sub_409ac0(arg2, r11_1);\n                    }\n                    rax_9 = (rax_18 + r11_1);\n                    *(arg2 + 0x48) = rax_9;\n                }\n            }\n            if (*(arg2 + 0x68) <= rax_9)\n            {\n                return 7;\n            }\n            if ((r9 == r13_1 && *(arg2 + 8)[rax_9] == 0x5d))\n            {\n                break;\n            }\n            *(arg1 + 8)[r8] = r13_1;\n            r8 = (r8 + 1);\n            if (r8 == 0x20)\n            {\n                return 7;\n            }\n            rax_8 = arg3[8];\n            r11_1 = *(arg2 + 0x48);\n        }\n        *(arg2 + 0x48) = (rax_9 + 1);\n        *(arg1 + 8)[r12_1] = 0;\n        char rdx_6 = arg3[8];\n        if (rdx_6 == 0x1c)\n        {\n            *arg1 = 2;\n            rax_3 = 0;\n        }\n        else if (rdx_6 == 0x1e)\n        {\n            *arg1 = 4;\n            rax_3 = 0;\n        }\n        else\n        {\n            rax_3 = 0;\n            if (rdx_6 == 0x1a)\n            {\n                *arg1 = 3;\n            }\n        }\n    }\n    if (((((rax_8 & 0xfb) == 0x1a || ((rax_8 & 0xfb) != 0x1a && rax_8 == 0x1c)) && r11_1 < *(arg2 + 0x68)) || ((rax_8 & 0xfb) != 0x1a && rax_8 != 0x1c)))\n    {\n        return rax_3;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4125d0",
            "funcStartAddr": "0x4125d0",
            "funcEndAddr": "0x412c73",
            "decompiledFuncCode": "int64_t sub_4125d0(char* arg1, void** arg2, int64_t arg3)\n{\n    int64_t r12 = arg2[9];\n    int64_t rax_15;\n    if (arg2[0xd] <= r12)\n    {\n        arg1[8] = 2;\n        rax_15 = 0;\n    }\n    else\n    {\n        char* rdx = arg2[1];\n        int32_t rax = arg2[0x12];\n        int32_t* rbx_1 = arg1;\n        char rbp_1 = rdx[r12];\n        char r14_2 = (arg1[0xa] & 0x9f);\n        arg1[0xa] = r14_2;\n        *arg1 = rbp_1;\n        char* rdx_1;\n        if ((rax <= 1 && rbp_1 != 0x5c))\n        {\n            rbx_1[2] = 1;\n            uint32_t rax_10;\n            rax_10 = (*__ctype_b_loc()[rbp_1] >> 3);\n            uint64_t rcx_4;\n            rcx_4 = rbp_1 == 0x5f;\n            *(rbx_1 + 0xa) = (r14_2 | (((rax_10 & 1) | rcx_4) << 6));\n            rdx_1 = rdx;\n        label_412675:\n            char rbp_2 = (rbp_1 - 0xa);\n            if (rbp_2 > 0x73)\n            {\n            label_4128f8:\n                rax_15 = 1;\n            }\n            else\n            {\n                switch (rbp_2)\n                {\n                    case 0:\n                    {\n                        rax_15 = 1;\n                        if ((arg3 & 0x800) != 0)\n                        {\n                            goto label_41291a;\n                        }\n                        break;\n                    }\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 9:\n                    case 0xa:\n                    case 0xb:\n                    case 0xc:\n                    case 0xd:\n                    case 0xe:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x22:\n                    case 0x23:\n                    case 0x25:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x32:\n                    case 0x33:\n                    case 0x34:\n                    case 0x36:\n                    case 0x37:\n                    case 0x38:\n                    case 0x39:\n                    case 0x3a:\n                    case 0x3b:\n                    case 0x3c:\n                    case 0x3d:\n                    case 0x3e:\n                    case 0x3f:\n                    case 0x40:\n                    case 0x41:\n                    case 0x42:\n                    case 0x43:\n                    case 0x44:\n                    case 0x45:\n                    case 0x46:\n                    case 0x47:\n                    case 0x48:\n                    case 0x49:\n                    case 0x4a:\n                    case 0x4b:\n                    case 0x4c:\n                    case 0x4d:\n                    case 0x4e:\n                    case 0x4f:\n                    case 0x50:\n                    case 0x52:\n                    case 0x53:\n                    case 0x55:\n                    case 0x56:\n                    case 0x57:\n                    case 0x58:\n                    case 0x59:\n                    case 0x5a:\n                    case 0x5b:\n                    case 0x5c:\n                    case 0x5d:\n                    case 0x5e:\n                    case 0x5f:\n                    case 0x60:\n                    case 0x61:\n                    case 0x62:\n                    case 0x63:\n                    case 0x64:\n                    case 0x65:\n                    case 0x66:\n                    case 0x67:\n                    case 0x68:\n                    case 0x69:\n                    case 0x6a:\n                    case 0x6b:\n                    case 0x6c:\n                    case 0x6d:\n                    case 0x6e:\n                    case 0x6f:\n                    case 0x70:\n                    {\n                        goto label_4128f8;\n                    }\n                    case 0x1a:\n                    {\n                        int64_t r12_1;\n                        if ((arg3 & 8) == 0)\n                        {\n                            r12_1 = (r12 + 1);\n                            if (r12_1 != arg2[0xb])\n                            {\n                                arg2[9] = r12_1;\n                                void var_48;\n                                sub_4125d0(&var_48, arg2, arg3);\n                                arg2[9] = (arg2[9] - 1);\n                                rax_15 = 1;\n                            }\n                        }\n                        char var_40;\n                        if ((((arg3 & 8) != 0 || ((arg3 & 8) == 0 && r12_1 == arg2[0xb])) || (((arg3 & 8) == 0 && r12_1 != arg2[0xb]) && (var_40 - 9) <= 1)))\n                        {\n                            rbx_1[2] = 0xc;\n                            rax_15 = 1;\n                            *rbx_1 = 0x20;\n                        }\n                        break;\n                    }\n                    case 0x1e:\n                    {\n                        rax_15 = 1;\n                        if ((arg3 & 0x2000) != 0)\n                        {\n                        label_4127ea:\n                            rbx_1[2] = 8;\n                        }\n                        break;\n                    }\n                    case 0x1f:\n                    {\n                        rax_15 = 1;\n                        if ((arg3 & 0x2000) != 0)\n                        {\n                        label_41280a:\n                            rbx_1[2] = 9;\n                        }\n                        break;\n                    }\n                    case 0x20:\n                    {\n                        rbx_1[2] = 0xb;\n                        rax_15 = 1;\n                        break;\n                    }\n                    case 0x21:\n                    {\n                        rax_15 = 1;\n                        if ((arg3 & 0x402) == 0)\n                        {\n                        label_412842:\n                            rbx_1[2] = 0x12;\n                        }\n                        break;\n                    }\n                    case 0x24:\n                    {\n                        rbx_1[2] = 5;\n                        rax_15 = 1;\n                        break;\n                    }\n                    case 0x35:\n                    {\n                        rax_15 = 1;\n                        if ((arg3 & 0x402) == 0)\n                        {\n                        label_412872:\n                            rbx_1[2] = 0x13;\n                        }\n                        break;\n                    }\n                    case 0x51:\n                    {\n                        rbx_1[2] = 0x14;\n                        rax_15 = 1;\n                        break;\n                    }\n                    case 0x54:\n                    {\n                        if ((arg3 & 0x800008) == 0)\n                        {\n                            if (r12 == 0)\n                            {\n                                goto label_4128a2;\n                            }\n                            if (rdx_1[(r12 - 1)] != 0xa)\n                            {\n                                goto label_4128f8;\n                            }\n                            if ((arg3 & 0x800) == 0)\n                            {\n                                goto label_4128f8;\n                            }\n                            goto label_4128a2;\n                        }\n                    label_4128a2:\n                        rbx_1[2] = 0xc;\n                        rax_15 = 1;\n                        *rbx_1 = 0x10;\n                        break;\n                    }\n                    case 0x71:\n                    {\n                        rax_15 = 1;\n                        if ((arg3 & 0x1200) == 0x1200)\n                        {\n                        label_4128d9:\n                            rbx_1[2] = 0x17;\n                        }\n                        break;\n                    }\n                    case 0x72:\n                    {\n                        if ((arg3 & 0x8400) != 0x8000)\n                        {\n                            goto label_4128f8;\n                        }\n                    label_41291a:\n                        rbx_1[2] = 0xa;\n                        rax_15 = 1;\n                        break;\n                    }\n                    case 0x73:\n                    {\n                        rax_15 = 1;\n                        if ((arg3 & 0x1200) == 0x1200)\n                        {\n                        label_4129a1:\n                            rbx_1[2] = 0x18;\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n        if (((rax > 1 && r12 != arg2[6]) && *(arg2[2] + (r12 << 2)) == 0xffffffff))\n        {\n            *(arg1 + 8) = ((*(arg1 + 8) & 0xffdfff00) | 0x200001);\n            rax_15 = 1;\n        }\n        if (((rax <= 1 && rbp_1 == 0x5c) || ((rax > 1 && (r12 == arg2[6] || (r12 != arg2[6] && *(arg2[2] + (r12 << 2)) != 0xffffffff))) && rbp_1 == 0x5c)))\n        {\n            int64_t rcx_5 = (r12 + 1);\n            if (rcx_5 >= arg2[0xb])\n            {\n                rbx_1[2] = 0x24;\n                return 1;\n            }\n            uint32_t var_50;\n            char r14_5;\n            wint_t rbp_4;\n            if (*(arg2 + 0x8b) == 0)\n            {\n            label_41271e:\n                uint32_t rdi_1 = rdx[(r12 + 1)];\n                var_50 = rdi_1;\n                r14_5 = rdi_1;\n            label_41272b:\n                *rbx_1 = r14_5;\n                rbx_1[2] = 1;\n                if (rax > 1)\n                {\n                    rbp_4 = *(arg2[2] + (rcx_5 << 2));\n                    goto label_412740;\n                }\n                uint32_t rax_28;\n                rax_28 = (*__ctype_b_loc()[r14_5] >> 3);\n                uint64_t rdx_4;\n                rdx_4 = r14_5 == 0x5f;\n                *(rbx_1 + 0xa) = ((((rax_28 & 1) | rdx_4) << 6) | (*(rbx_1 + 0xa) & 0xbf));\n            }\n            else\n            {\n                if (rax <= 1)\n                {\n                label_412bfa:\n                    void* rsi_1 = *arg2;\n                    int64_t rdi_5 = arg2[5];\n                    if (*(arg2 + 0x8c) == 0)\n                    {\n                        uint32_t rdi_8 = *((rsi_1 + rcx_5) + rdi_5);\n                        r14_5 = rdi_8;\n                        var_50 = rdi_8;\n                        goto label_41272b;\n                    }\n                    uint32_t rdi_6 = *((rsi_1 + rdi_5) + *(arg2[3] + (rcx_5 << 3)));\n                    r14_5 = rdi_6;\n                    var_50 = rdi_6;\n                    if ((rdi_6 & 0x80) != 0)\n                    {\n                        goto label_41271e;\n                    }\n                    goto label_41272b;\n                }\n                int64_t rdi_4 = arg2[2];\n                int64_t r8_1 = (rcx_5 << 2);\n                rbp_4 = *(rdi_4 + (rcx_5 << 2));\n                if (rbp_4 != 0xffffffff)\n                {\n                    if (arg2[6] == (r12 + 2))\n                    {\n                        goto label_412bfa;\n                    }\n                    if (*((rdi_4 + r8_1) + 4) != 0xffffffff)\n                    {\n                        goto label_412bfa;\n                    }\n                }\n                uint32_t rax_34 = rdx[(r12 + 1)];\n                rbx_1[2] = 1;\n                r14_5 = rax_34;\n                *rbx_1 = rax_34;\n                var_50 = rax_34;\n            label_412740:\n                int32_t rax_17;\n                int32_t rdx_2;\n                rax_17 = iswalnum(rbp_4);\n                rax_17 = rax_17 != 0;\n                rdx_2 = rbp_4 == 0x5f;\n                *(rbx_1 + 0xa) = ((*(rbx_1 + 0xa) & 0xbf) | ((rax_17 | rdx_2) << 6));\n            }\n            char r14_6 = (r14_5 - 0x27);\n            switch (r14_6)\n            {\n                case 0:\n                {\n                    rax_15 = 2;\n                    if ((arg3 & 0x80000) == 0)\n                    {\n                        rbx_1[2] = 0xc;\n                        *rbx_1 = 0x80;\n                    }\n                    break;\n                }\n                case 1:\n                {\n                    rax_15 = 2;\n                    if ((arg3 & 0x2000) == 0)\n                    {\n                        goto label_4127ea;\n                    }\n                    break;\n                }\n                case 2:\n                {\n                    rax_15 = 2;\n                    if ((arg3 & 0x2000) == 0)\n                    {\n                        goto label_41280a;\n                    }\n                    break;\n                }\n                case 4:\n                {\n                    rax_15 = 2;\n                    if ((arg3 & 0x402) == 2)\n                    {\n                        goto label_412842;\n                    }\n                    break;\n                }\n                case 0xa:\n                case 0xb:\n                case 0xc:\n                case 0xd:\n                case 0xe:\n                case 0xf:\n                case 0x10:\n                case 0x11:\n                case 0x12:\n                {\n                    rax_15 = 2;\n                    if ((arg3 & 0x4000) == 0)\n                    {\n                        rbx_1[2] = 4;\n                        *rbx_1 = (var_50 - 0x31);\n                    }\n                    break;\n                }\n                case 0x15:\n                {\n                    rax_15 = 2;\n                    if ((arg3 & 0x80000) == 0)\n                    {\n                        rbx_1[2] = 0xc;\n                        *rbx_1 = 6;\n                    }\n                    break;\n                }\n                case 0x17:\n                {\n                    rax_15 = 2;\n                    if ((arg3 & 0x80000) == 0)\n                    {\n                        rbx_1[2] = 0xc;\n                        *rbx_1 = 9;\n                    }\n                    break;\n                }\n                case 0x18:\n                {\n                    rax_15 = 2;\n                    if ((arg3 & 0x402) == 2)\n                    {\n                        goto label_412872;\n                    }\n                    break;\n                }\n                case 0x1b:\n                {\n                    rax_15 = 2;\n                    if ((arg3 & 0x80000) == 0)\n                    {\n                        rbx_1[2] = 0xc;\n                        *rbx_1 = 0x200;\n                    }\n                    break;\n                }\n                case 0x2c:\n                {\n                    rax_15 = 2;\n                    if ((arg3 & 0x80000) == 0)\n                    {\n                        rbx_1[2] = 0x23;\n                    }\n                    break;\n                }\n                case 0x30:\n                {\n                    rax_15 = 2;\n                    if ((arg3 & 0x80000) == 0)\n                    {\n                        rbx_1[2] = 0x21;\n                    }\n                    break;\n                }\n                case 0x39:\n                {\n                    rax_15 = 2;\n                    if ((arg3 & 0x80000) == 0)\n                    {\n                        rbx_1[2] = 0xc;\n                        *rbx_1 = 0x40;\n                    }\n                    break;\n                }\n                case 0x3b:\n                {\n                    rax_15 = 2;\n                    if ((arg3 & 0x80000) == 0)\n                    {\n                        rbx_1[2] = 0xc;\n                        *rbx_1 = 0x100;\n                    }\n                    break;\n                }\n                case 0x4c:\n                {\n                    rax_15 = 2;\n                    if ((arg3 & 0x80000) == 0)\n                    {\n                        rbx_1[2] = 0x22;\n                    }\n                    break;\n                }\n                case 0x50:\n                {\n                    rax_15 = 2;\n                    if ((arg3 & 0x80000) == 0)\n                    {\n                        rbx_1[2] = 0x20;\n                    }\n                    break;\n                }\n                case 0x54:\n                {\n                    rax_15 = 2;\n                    if ((arg3 & 0x1200) == 0x200)\n                    {\n                        goto label_4128d9;\n                    }\n                    break;\n                }\n                case 0x55:\n                {\n                    rax_15 = 2;\n                    if ((arg3 & 0x8400) == 0)\n                    {\n                        rbx_1[2] = 0xa;\n                    }\n                    break;\n                }\n                case 0x56:\n                {\n                    rax_15 = 2;\n                    if ((arg3 & 0x1200) == 0x200)\n                    {\n                        goto label_4129a1;\n                    }\n                    break;\n                }\n                default:\n                    rax_15 = 2;\n            }\n        }\n        if (((rax > 1 && (r12 == arg2[6] || (r12 != arg2[6] && *(arg2[2] + (r12 << 2)) != 0xffffffff))) && rbp_1 != 0x5c))\n        {\n            int64_t rax_1 = arg2[2];\n            rbx_1[2] = 1;\n            wint_t r14_3 = *(rax_1 + (r12 << 2));\n            int32_t rax_2;\n            int32_t rcx_2;\n            rax_2 = iswalnum(r14_3);\n            rax_2 = rax_2 != 0;\n            rcx_2 = r14_3 == 0x5f;\n            *(rbx_1 + 0xa) = ((*(rbx_1 + 0xa) & 0xbf) | ((rax_2 | rcx_2) << 6));\n            rdx_1 = rdx;\n            goto label_412675;\n        }\n    }\n    return rax_15;\n}\n\n"
        },
        {
            "funcName": "sub_412c80",
            "funcStartAddr": "0x412c80",
            "funcEndAddr": "0x412d36",
            "decompiledFuncCode": "int64_t sub_412c80(void** arg1, char* arg2, int64_t arg3)\n{\n    int64_t rbx = -1;\n    while (true)\n    {\n        uint64_t rdx_1 = *arg2;\n        arg1[9] = (arg1[9] + sub_4125d0(arg2, arg1, arg3));\n        char rax_3 = arg2[8];\n        if (rax_3 == 2)\n        {\n            rbx = -2;\n            break;\n        }\n        if (rax_3 == 0x18)\n        {\n            break;\n        }\n        if (rdx_1 == 0x2c)\n        {\n            break;\n        }\n        if ((rax_3 == 1 && ((rdx_1 - 0x30) <= 9 && rbx != -2)))\n        {\n            if (rbx == -1)\n            {\n                rbx = (rdx_1 - 0x30);\n                continue;\n            }\n            else\n            {\n                int64_t rbx_1 = (rdx_1 + (rbx * 0xa));\n                if (rbx_1 > 0x8030)\n                {\n                    rbx_1 = 0x8030;\n                }\n                rbx = (rbx_1 - 0x30);\n                continue;\n            }\n        }\n        rbx = -2;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_412d40",
            "funcStartAddr": "0x412d40",
            "funcEndAddr": "0x414224",
            "decompiledFuncCode": "void* sub_412d40(void** arg1, int64_t* arg2, char* arg3, int64_t arg4, \n    int64_t arg5, int32_t* arg6)\n{\n    int32_t* rbx;\n    int32_t* var_30 = rbx;\n    int32_t* rax = *arg2;\n    char rax_1 = arg3[8];\n    if (rax_1 > 0x24)\n    {\n        goto label_412eb8;\n    }\n    char* r12_1 = arg3;\n    void** r15_1 = arg1;\n    void* var_100_1;\n    void** var_f8;\n    char var_e0;\n    void var_58;\n    char* rcx_8;\n    void* rdx_26;\n    void* rsi_21;\n    char r8_9;\n    int32_t* r9_3;\n    switch (rax_1)\n    {\n        case 0:\n        case 2:\n        case 3:\n        case 6:\n        case 7:\n        case 0xa:\n        case 0xd:\n        case 0xe:\n        case 0xf:\n        case 0x10:\n        case 0x11:\n        case 0x15:\n        case 0x16:\n        case 0x19:\n        case 0x1a:\n        case 0x1b:\n        case 0x1c:\n        case 0x1d:\n        case 0x1e:\n        case 0x1f:\n        {\n            goto label_412eb8;\n        }\n        case 1:\n        {\n            rbx = &rax[0x1c];\n            int32_t* rbp_7 = &rax[0x20];\n            void* rax_56 = sub_40a780(rbx, rbp_7, nullptr, nullptr, r12_1);\n            var_100_1 = rax_56;\n            if (rax_56 == 0)\n            {\n                goto label_4136d6;\n            }\n            void* r14_5 = var_100_1;\n            if (rax[0x2d] <= 1)\n            {\n                goto label_412df0;\n            }\n            int64_t rax_58;\n            void* rax_61;\n            void* rax_62;\n            do\n            {\n                rax_58 = r15_1[9];\n                if (r15_1[0xd] <= rax_58)\n                {\n                    break;\n                }\n                if (rax_58 == r15_1[6])\n                {\n                    break;\n                }\n                if (*(r15_1[2] + (rax_58 << 2)) != 0xffffffff)\n                {\n                    break;\n                }\n                r15_1[9] = (r15_1[9] + sub_4125d0(r12_1, r15_1, arg4));\n                rax_61 = sub_40a780(rbx, rbp_7, nullptr, nullptr, r12_1);\n                char var_50_6 = 0x10;\n                rax_62 = sub_40a780(rbx, rbp_7, r14_5, rax_61, &var_58);\n                r14_5 = rax_62;\n                rax_62 = rax_62 == 0;\n            } while ((rax_61 == 0 | rax_62) == 0);\n            if (r15_1[0xd] > rax_58)\n            {\n                goto label_4136d6;\n            }\n            var_100_1 = r14_5;\n            goto label_412df0;\n        }\n        case 4:\n        {\n            int64_t rax_65 = (1 << *r12_1);\n            if ((*(rax + 0xa8) & rax_65) != 0)\n            {\n                *(rax + 0xa0) = (*(rax + 0xa0) | rax_65);\n                void* rax_66 = sub_40a780(&rax[0x1c], &rax[0x20], nullptr, nullptr, r12_1);\n                var_100_1 = rax_66;\n                if (rax_66 == 0)\n                {\n                    goto label_4136d6;\n                }\n                *(rax + 0x98) = (*(rax + 0x98) + 1);\n                rax[0x2c] = (rax[0x2c] | 2);\n            label_412df0:\n                uint64_t rbp_2 = r12_1[8];\n                r15_1[9] = (r15_1[9] + sub_4125d0(r12_1, r15_1, arg4));\n                while (true)\n                {\n                    if (rbp_2 > 0x17)\n                    {\n                        return var_100_1;\n                    }\n                    rbx = rbp_2 == 0x12;\n                    if ((!(TEST_BITQ(0x8c0800, rbp_2))))\n                    {\n                        return var_100_1;\n                    }\n                    int64_t r13_2 = r15_1[9];\n                    int128_t zmm0 = *r12_1;\n                    int64_t var_118_2;\n                    char rax_14;\n                    void* rax_21;\n                    void* rdx_7;\n                    void* rdx_18;\n                    void* rbp_3;\n                    int64_t* r14_4;\n                    if (rbp_2 == 0x17)\n                    {\n                        var_f8 = zmm0;\n                        int64_t rax_31 = sub_412c80(r15_1, r12_1, arg4);\n                        zmm0 = var_f8;\n                        var_118_2 = rax_31;\n                        if (rax_31 == -1)\n                        {\n                            if (r12_1[8] != 1)\n                            {\n                            label_4133c5:\n                                *arg6 = 0xa;\n                            label_4133cb:\n                                if (var_100_1 == 0)\n                                {\n                                    goto label_412eb8;\n                                }\n                                goto label_413177;\n                            }\n                            if (*r12_1 != 0x2c)\n                            {\n                                goto label_4133c5;\n                            }\n                            rbx = nullptr;\n                        label_4132d4:\n                            var_f8 = zmm0;\n                            int64_t rax_34 = sub_412c80(r15_1, r12_1, arg4);\n                            zmm0 = var_f8;\n                            var_118_2 = rax_34;\n                            if (rax_34 != -2)\n                            {\n                                if ((var_118_2 != -1 && var_118_2 < rbx))\n                                {\n                                    goto label_4133c5;\n                                }\n                                if (r12_1[8] != 0x18)\n                                {\n                                    goto label_4133c5;\n                                }\n                                if (var_118_2 != -1)\n                                {\n                                    goto label_41338e;\n                                }\n                                int64_t rax_36;\n                                rax_36 = rbx > 0x7fff;\n                                if (rax_36 == 0)\n                                {\n                                    goto label_413340;\n                                }\n                                goto label_41339b;\n                            }\n                            goto label_413262;\n                        }\n                        if (var_118_2 != -2)\n                        {\n                            char rax_32 = r12_1[8];\n                            if (rax_32 == 0x18)\n                            {\n                                rbx = var_118_2;\n                            label_41338e:\n                                int64_t rax_42;\n                                rax_42 = var_118_2 > 0x7fff;\n                                if (rax_42 == 0)\n                                {\n                                label_413340:\n                                    r15_1[9] = (r15_1[9] + sub_4125d0(r12_1, r15_1, arg4));\n                                    if (var_100_1 == 0)\n                                    {\n                                        goto label_413297;\n                                    }\n                                    if ((var_118_2 | rbx) == 0)\n                                    {\n                                        sub_407fb0(var_100_1, 0x4091c0, 0);\n                                        if (*arg6 == 0)\n                                        {\n                                            goto label_41329f;\n                                        }\n                                        goto label_413177;\n                                    }\n                                    if (rbx > 0)\n                                    {\n                                        if (rbx == 1)\n                                        {\n                                            r14_4 = var_100_1;\n                                            rdx_7 = r14_4;\n                                        }\n                                        else\n                                        {\n                                            void* r14_3 = var_100_1;\n                                            int64_t rbp_5 = 2;\n                                            var_e0 = r12_1;\n                                            int64_t* r13_4 = &rax[0x1c];\n                                            int32_t* rax_25 = (rax - -0x80);\n                                            int64_t* r15_2 = r14_3;\n                                            void* rax_27;\n                                            do\n                                            {\n                                                int64_t* rax_26 = sub_40a860(r15_2, rax);\n                                                r15_2 = rax_26;\n                                                char var_50_5 = 0x10;\n                                                rax_27 = sub_40a780(r13_4, rax_25, r14_3, rax_26, &var_58);\n                                                r14_3 = rax_27;\n                                                if (r15_2 == 0)\n                                                {\n                                                    break;\n                                                }\n                                                if (rax_27 == 0)\n                                                {\n                                                    break;\n                                                }\n                                                rbp_5 = (rbp_5 + 1);\n                                            } while (rbx >= rbp_5);\n                                            if (r15_2 == 0)\n                                            {\n                                                goto label_413165;\n                                            }\n                                            r14_4 = r15_2;\n                                            r12_1 = var_e0;\n                                            rdx_7 = rax_27;\n                                        }\n                                        if (rbx != var_118_2)\n                                        {\n                                            goto label_41342c;\n                                        }\n                                        goto label_413400;\n                                    }\n                                    rbp_3 = var_100_1;\n                                    rdx_18 = nullptr;\n                                label_413446:\n                                    var_f8 = rdx_18;\n                                    if (*(rbp_3 + 0x30) == 0x11)\n                                    {\n                                        goto label_413204;\n                                    }\n                                label_413209:\n                                    if (var_118_2 == -1)\n                                    {\n                                        goto label_412f55;\n                                    }\n                                    rax_14 = 0xa;\n                                    goto label_412f5a;\n                                }\n                            label_41339b:\n                                *arg6 = 0xf;\n                                goto label_4133cb;\n                            }\n                            if (rax_32 != 1)\n                            {\n                                goto label_413262;\n                            }\n                            if (*r12_1 != 0x2c)\n                            {\n                                if ((arg4 & 0x200000) == 0)\n                                {\n                                    goto label_4133c5;\n                                }\n                                goto label_413271;\n                            }\n                            rbx = var_118_2;\n                            goto label_4132d4;\n                        }\n                    label_413262:\n                        if ((arg4 & 0x200000) != 0)\n                        {\n                        label_413271:\n                            r15_1[9] = r13_2;\n                            rax_21 = var_100_1;\n                            *r12_1 = zmm0;\n                            r12_1[8] = 1;\n                        label_413065:\n                            if (*arg6 == 0)\n                            {\n                            label_413072:\n                                var_100_1 = rax_21;\n                                goto label_413077;\n                            }\n                            if (rax_21 != 0)\n                            {\n                                goto label_413072;\n                            }\n                            goto label_4133cb;\n                        }\n                        if (r12_1[8] != 2)\n                        {\n                            goto label_4133c5;\n                        }\n                        *arg6 = 9;\n                        goto label_4133cb;\n                    }\n                    rbx = rbx;\n                    if (rbp_2 != 0x13)\n                    {\n                        r15_1[9] = (r15_1[9] + sub_4125d0(r12_1, r15_1, arg4));\n                        if (var_100_1 != 0)\n                        {\n                            if (rbp_2 == 0x12)\n                            {\n                                r14_4 = var_100_1;\n                                var_118_2 = -1;\n                                rbx = 1;\n                                rdx_7 = r14_4;\n                            label_41342c:\n                                void*** rax_45 = sub_40a860(r14_4, rax);\n                                rdx_18 = rdx_7;\n                                rbp_3 = rax_45;\n                                if (rax_45 == 0)\n                                {\n                                    goto label_413165;\n                                }\n                                goto label_413446;\n                            }\n                            rbp_3 = var_100_1;\n                            if (*(rbp_3 + 0x30) == 0x11)\n                            {\n                                var_118_2 = -1;\n                                rbp_3 = var_100_1;\n                                rbx = nullptr;\n                                var_f8 = nullptr;\n                                goto label_413204;\n                            }\n                            var_118_2 = -1;\n                            rbx = nullptr;\n                            var_f8 = nullptr;\n                        label_412f55:\n                            rax_14 = 0xb;\n                            goto label_412f5a;\n                        }\n                        goto label_413297;\n                    }\n                    r15_1[9] = (r15_1[9] + sub_4125d0(r12_1, r15_1, arg4));\n                    if (var_100_1 != 0)\n                    {\n                        rbp_3 = var_100_1;\n                        if (*(rbp_3 + 0x30) == 0x11)\n                        {\n                            rbp_3 = var_100_1;\n                            var_118_2 = 1;\n                            var_f8 = nullptr;\n                        label_413204:\n                            sub_407fb0(rbp_3, 0x408150, *(rbp_3 + 0x28));\n                            goto label_413209;\n                        }\n                        var_118_2 = 1;\n                        rax_14 = 0xa;\n                        var_f8 = nullptr;\n                    label_412f5a:\n                        char var_50_1 = rax_14;\n                        int64_t* r13_3 = &rax[0x1c];\n                        int32_t* r14_2 = &rax[0x20];\n                        void* rax_16 = sub_40a780(r13_3, r14_2, rbp_3, nullptr, &var_58);\n                        rdx_7 = rax_16;\n                        if (rax_16 == 0)\n                        {\n                        label_413165:\n                            *arg6 = 0xc;\n                        label_413177:\n                            sub_407fb0(var_100_1, 0x4091c0, 0);\n                            return nullptr;\n                        }\n                        rbx = (rbx + 2);\n                        if (rbx > var_118_2)\n                        {\n                            goto label_41302f;\n                        }\n                        var_e0 = r12_1;\n                        void* r12_2 = rbp_3;\n                        void* rbp_4 = rax_16;\n                        void* rax_19;\n                        do\n                        {\n                            void*** rax_17 = sub_40a860(r12_2, rax);\n                            r12_2 = rax_17;\n                            char var_50_2 = 0x10;\n                            void* rax_18 = sub_40a780(r13_3, r14_2, rbp_4, rax_17, &var_58);\n                            if (r12_2 == 0)\n                            {\n                                break;\n                            }\n                            if (rax_18 == 0)\n                            {\n                                break;\n                            }\n                            char var_50_3 = 0xa;\n                            rax_19 = sub_40a780(r13_3, r14_2, rax_18, nullptr, &var_58);\n                            rbp_4 = rax_19;\n                            if (rax_19 == 0)\n                            {\n                                break;\n                            }\n                            rbx = (rbx + 1);\n                        } while (rbx <= var_118_2);\n                        if (r12_2 == 0)\n                        {\n                            goto label_413165;\n                        }\n                        r12_1 = var_e0;\n                        rdx_7 = rax_19;\n                    label_41302f:\n                        int64_t* rax_20 = var_f8;\n                        if (rax_20 == 0)\n                        {\n                        label_413400:\n                            var_100_1 = rdx_7;\n                            goto label_413077;\n                        }\n                        char var_50_4 = 0x10;\n                        rax_21 = sub_40a780(r13_3, r14_2, rax_20, rdx_7, &var_58);\n                        goto label_413065;\n                    }\n                label_413297:\n                    if (*arg6 != 0)\n                    {\n                        goto label_412eb8;\n                    }\n                label_41329f:\n                    var_100_1 = nullptr;\n                label_413077:\n                    rbp_2 = r12_1[8];\n                    if ((arg4 & 0x1000000) != 0)\n                    {\n                        if ((rbp_2 != 0xb && rbp_2 != 0x17))\n                        {\n                            continue;\n                        }\n                        if (var_100_1 == 0)\n                        {\n                            break;\n                        }\n                        sub_407fb0(var_100_1, 0x4091c0, 0);\n                        break;\n                    }\n                }\n                goto label_4130b5;\n            }\n            var_100_1 = nullptr;\n            *arg6 = 6;\n            goto label_412e20;\n        }\n        case 5:\n        {\n            void* rax_67 = sub_40a780(&rax[0x1c], &rax[0x20], nullptr, nullptr, r12_1);\n            var_100_1 = rax_67;\n            if (rax_67 == 0)\n            {\n                goto label_4136d6;\n            }\n            if (rax[0x2d] > 1)\n            {\n                rax[0x2c] = (rax[0x2c] | 2);\n            }\n            goto label_412df0;\n        }\n        case 8:\n        {\n            rbx = arg2[6];\n            arg2[6] = (rbx + 1);\n            r15_1[9] = (r15_1[9] + sub_4125d0(r12_1, arg1, (arg4 | 0x800000)));\n            void* rax_10 = nullptr;\n            if (r12_1[8] != 9)\n            {\n                rax_10 = sub_414370(r15_1, arg2, r12_1, arg4, (arg5 + 1), arg6);\n                if (*arg6 != 0)\n                {\n                    goto label_412eb8;\n                }\n                if (r12_1[8] != 9)\n                {\n                    if (rax_10 != 0)\n                    {\n                        sub_407fb0(rax_10, 0x4091c0, 0);\n                    }\n                    *arg6 = 8;\n                    goto label_412eb8;\n                }\n            }\n            if (rbx <= 8)\n            {\n                *(rax + 0xa8) = (*(rax + 0xa8) | (1 << rbx));\n            }\n            char var_50_8 = 0x11;\n            void* rax_79 = sub_40a780(&rax[0x1c], &rax[0x20], rax_10, nullptr, &var_58);\n            var_100_1 = rax_79;\n            if (rax_79 == 0)\n            {\n                goto label_4136d6;\n            }\n            *(rax_79 + 0x28) = rbx;\n            goto label_412df0;\n        }\n        case 0xc:\n        {\n            int32_t r14_6 = *r12_1;\n            if ((r14_6 & 0x30f) != 0)\n            {\n                char rax_69 = rax[0x2c];\n                if ((rax_69 & 0x10) == 0)\n                {\n                    char rax_70 = (rax_69 | 0x10);\n                    rax[0x2c] = rax_70;\n                    int32_t rbx_6;\n                    int32_t rbp_10;\n                    if ((rax_70 & 8) != 0)\n                    {\n                        rbx_6 = 0;\n                        rbp_10 = 0;\n                    }\n                    else\n                    {\n                        *(rax + 0xb8) = 0x3ff000000000000;\n                        *(rax + 0xc0) = 0x7fffffe87fffffe;\n                        if ((rax_70 & 4) == 0)\n                        {\n                            rbx_6 = 0x80;\n                            rbp_10 = 2;\n                        }\n                    }\n                    if (((rax_70 & 8) != 0 || ((rax_70 & 8) == 0 && (rax_70 & 4) == 0)))\n                    {\n                        void* rsi_52 = &rax[(rbp_10 * 2)];\n                        int32_t r9_11 = ((rbx_6 + 0x100) - (rbp_10 << 6));\n                        void* rdi_65 = &*__ctype_b_loc()[rbx_6];\n                        do\n                        {\n                            int64_t rax_137 = 0;\n                            do\n                            {\n                                char rcx_40 = rax_137;\n                                if (((*(rdi_65 + (rax_137 << 1)) & 8) != 0 || ((*(rdi_65 + (rax_137 << 1)) & 8) == 0 && (rbx_6 + rax_137) == 0x5f)))\n                                {\n                                    *(rsi_52 + 0xb8) = (*(rsi_52 + 0xb8) | (1 << rcx_40));\n                                }\n                                rax_137 = (rax_137 + 1);\n                            } while (rax_137 != 0x40);\n                            rbx_6 = (rbx_6 + 0x40);\n                            rsi_52 = (rsi_52 + 8);\n                            rdi_65 = (rdi_65 - -0x80);\n                        } while (r9_11 != rbx_6);\n                    }\n                    if (((rax_70 & 8) == 0 && (rax_70 & 4) != 0))\n                    {\n                        *(rax + 0xc8) = 0;\n                        r14_6 = *r12_1;\n                    }\n                }\n            }\n            int64_t* r13_7 = &rax[0x1c];\n            int32_t* rbp_8 = &rax[0x20];\n            if (((r14_6 - 0x100) & 0xfffffeff) != 0)\n            {\n                void* rax_89 = sub_40a780(r13_7, rbp_8, nullptr, nullptr, r12_1);\n                var_100_1 = rax_89;\n                if (rax_89 == 0)\n                {\n                    goto label_4136d6;\n                }\n            }\n            else\n            {\n                int64_t* rbx_4;\n                if (r14_6 == 0x100)\n                {\n                    *r12_1 = 6;\n                    void* rax_97 = sub_40a780(r13_7, rbp_8, nullptr, nullptr, r12_1);\n                    *r12_1 = 9;\n                    rbx_4 = rax_97;\n                }\n                else\n                {\n                    *r12_1 = 5;\n                    int64_t* rax_73 = sub_40a780(r13_7, rbp_8, nullptr, nullptr, r12_1);\n                    *r12_1 = 0xa;\n                    rbx_4 = rax_73;\n                }\n                void* rax_74 = sub_40a780(r13_7, rbp_8, nullptr, nullptr, r12_1);\n                char var_50_7 = 0xa;\n                void* rax_75 = sub_40a780(r13_7, rbp_8, rbx_4, rax_74, &var_58);\n                void* rcx_14 = rax_75;\n                var_100_1 = rax_75;\n                rax_75 = rax_74 == 0;\n                if ((rbx_4 == 0 | rax_75) != 0)\n                {\n                    goto label_4136d6;\n                }\n                if (rcx_14 == 0)\n                {\n                    goto label_4136d6;\n                }\n            }\n            r15_1[9] = (r15_1[9] + sub_4125d0(r12_1, r15_1, arg4));\n            goto label_412e20;\n        }\n        case 0x14:\n        {\n            int64_t var_b0 = 0;\n            int64_t* rax_46 = calloc(0x20, 1);\n            int64_t* r13_5 = calloc(0x50, 1);\n            int64_t* rax_47;\n            rax_47 = r13_5 == 0;\n            if ((rax_46 == 0 | rax_47) == 0)\n            {\n                rbx = sub_408020(r12_1, r15_1, arg4);\n                char rax_49 = r12_1[8];\n                if (rax_49 != 2)\n                {\n                    var_e0 = 0;\n                    if (rax_49 == 0x19)\n                    {\n                        r13_5[4] = (r13_5[4] | 1);\n                        if ((arg4 & 0x100) != 0)\n                        {\n                            *rax_46 = (*rax_46 | 0x400);\n                        }\n                        r15_1[9] = (r15_1[9] + rbx);\n                        rbx = sub_408020(r12_1, r15_1, arg4);\n                        rax_49 = r12_1[8];\n                        var_e0 = 1;\n                    }\n                    if (rax_49 == 0x15)\n                    {\n                        r12_1[8] = 1;\n                    }\n                    var_f8 = nullptr;\n                    char r9_1 = 1;\n                    int64_t var_100_2 = 0;\n                    while (true)\n                    {\n                        int64_t* var_78;\n                        int64_t* var_a0_1 = &var_78;\n                        int32_t var_a8 = 3;\n                        int32_t rax_50 = sub_4123b0(&var_a8, r15_1, r12_1, rbx, arg4, (r9_1 & 1));\n                        if (rax_50 == 0)\n                        {\n                            rbx = sub_408020(r12_1, r15_1, arg4);\n                            uint64_t rax_52 = var_a8;\n                            char var_80;\n                            char rdx_25;\n                            if (((rax_52 - 2) & 0xfffffffd) != 0)\n                            {\n                                rdx_25 = r12_1[8];\n                                if (rdx_25 == 0x16)\n                                {\n                                    r15_1[9] = (r15_1[9] + rbx);\n                                    int32_t r10_2 = arg4;\n                                    void var_88;\n                                    int32_t rax_99 = sub_408020(&var_88, r15_1, r10_2);\n                                    if (var_80 == 0x15)\n                                    {\n                                        r15_1[9] = (r15_1[9] + (-rbx));\n                                        rax_52 = var_a8;\n                                        r12_1[8] = 1;\n                                    }\n                                    if ((var_80 != 2 && var_80 != 0x15))\n                                    {\n                                        int32_t var_98 = 3;\n                                        void* var_90_1 = &var_58;\n                                        rax_50 = sub_4123b0(&var_98, r15_1, &var_88, rax_99, r10_2, 1);\n                                        if (rax_50 == 0)\n                                        {\n                                            int32_t r8_25 = var_a8;\n                                            int64_t* rdx_47 = nullptr;\n                                            rbx = sub_408020(r12_1, r15_1, arg4);\n                                            int32_t rax_102 = (r8_25 - 2);\n                                            if (rax[0x2d] >= 2)\n                                            {\n                                                rdx_47 = r13_5;\n                                            }\n                                            if ((rax_102 & 0xfffffffd) == 0)\n                                            {\n                                            label_4140ab:\n                                                *arg6 = 0xb;\n                                                goto label_4139ff;\n                                            }\n                                            int32_t rsi_42 = var_98;\n                                            if (((rsi_42 - 2) & 0xfffffffd) == 0)\n                                            {\n                                                goto label_4140ab;\n                                            }\n                                            bool var_d8_1 = r8_25 == 3;\n                                            uint32_t rcx_28;\n                                            char rdi_51;\n                                            void* r9_7;\n                                            if (r8_25 != 3)\n                                            {\n                                                if ((rsi_42 != 3 && r8_25 != 0))\n                                                {\n                                                    rdi_51 = 0;\n                                                    rcx_28 = 0;\n                                                    if (rsi_42 == 0)\n                                                    {\n                                                    label_414099:\n                                                        rcx_28 = var_90_1;\n                                                    }\n                                                }\n                                                if (rsi_42 == 3)\n                                                {\n                                                    r9_7 = var_90_1;\n                                                    int64_t rcx_41 = -1;\n                                                    void* rdi_66 = r9_7;\n                                                    while (rcx_41 != 0)\n                                                    {\n                                                        bool cond:13_1 = 0 != *rdi_66;\n                                                        rdi_66 = (rdi_66 + 1);\n                                                        rcx_41 = (rcx_41 - 1);\n                                                        if ((!cond:13_1))\n                                                        {\n                                                            break;\n                                                        }\n                                                    }\n                                                    if (((!rcx_41) - 1) > 1)\n                                                    {\n                                                        goto label_413faa;\n                                                    }\n                                                    rdi_51 = 0;\n                                                    if (r8_25 != 0)\n                                                    {\n                                                        goto label_413c56;\n                                                    }\n                                                }\n                                            }\n                                            if (((rsi_42 != 3 && r8_25 == 0) || (r8_25 != 3 && rsi_42 == 3)))\n                                            {\n                                                rdi_51 = var_a0_1;\n                                            }\n                                            if (r8_25 == 3)\n                                            {\n                                                int64_t rcx_42 = -1;\n                                                int64_t* rdi_67 = var_a0_1;\n                                                while (rcx_42 != 0)\n                                                {\n                                                    bool cond:12_1 = 0 != *rdi_67;\n                                                    rdi_67 = (rdi_67 + 1);\n                                                    rcx_42 = (rcx_42 - 1);\n                                                    if ((!cond:12_1))\n                                                    {\n                                                        break;\n                                                    }\n                                                }\n                                                if (((!rcx_42) - 1) > 1)\n                                                {\n                                                label_413faa:\n                                                    *arg6 = 3;\n                                                    goto label_4139ff;\n                                                }\n                                                if (rsi_42 == 3)\n                                                {\n                                                    int64_t rcx_38 = -1;\n                                                    void* rdi_63 = var_90_1;\n                                                    while (rcx_38 != 0)\n                                                    {\n                                                        bool cond:14_1 = 0 != *rdi_63;\n                                                        rdi_63 = (rdi_63 + 1);\n                                                        rcx_38 = (rcx_38 - 1);\n                                                        if ((!cond:14_1))\n                                                        {\n                                                            break;\n                                                        }\n                                                    }\n                                                    if (((!rcx_38) - 1) > 1)\n                                                    {\n                                                        goto label_413faa;\n                                                    }\n                                                }\n                                                rdi_51 = *var_a0_1;\n                                            }\n                                            if ((((rsi_42 != 3 && r8_25 == 0) || (r8_25 != 3 && rsi_42 == 3)) || r8_25 == 3))\n                                            {\n                                                if (rsi_42 == 0)\n                                                {\n                                                    goto label_414099;\n                                                }\n                                                rcx_28 = 0;\n                                                if (rsi_42 == 3)\n                                                {\n                                                    r9_7 = var_90_1;\n                                                label_413c56:\n                                                    rcx_28 = *r9_7;\n                                                }\n                                            }\n                                            if ((((((rsi_42 != 3 && r8_25 == 0) || (r8_25 != 3 && rsi_42 == 3)) || r8_25 == 3) && rsi_42 != 0) || ((r8_25 != 3 && rsi_42 != 3) && r8_25 != 0)))\n                                            {\n                                                uint32_t r8_26;\n                                                if (r8_25 == 0)\n                                                {\n                                                label_41406b:\n                                                    var_d8_1 = rdx_47;\n                                                    rsi_42 = var_98;\n                                                    r8_26 = sub_408730(rdi_51, rdx_47);\n                                                    rdx_47 = var_d8_1;\n                                                }\n                                                else\n                                                {\n                                                    r8_26 = var_a0_1;\n                                                    if (var_d8_1 != 0)\n                                                    {\n                                                        goto label_41406b;\n                                                    }\n                                                }\n                                                int32_t r9_8;\n                                                if (rsi_42 == 0)\n                                                {\n                                                label_413fbf:\n                                                    var_d8_1 = rdx_47;\n                                                    rdx_47 = var_d8_1;\n                                                    r9_8 = sub_408730(rcx_28, rdx_47);\n                                                }\n                                                else\n                                                {\n                                                    r9_8 = var_90_1;\n                                                    if (rsi_42 == 3)\n                                                    {\n                                                        goto label_413fbf;\n                                                    }\n                                                }\n                                                if (r8_26 == 0xffffffff)\n                                                {\n                                                    goto label_413faa;\n                                                }\n                                                if (r9_8 == 0xffffffff)\n                                                {\n                                                    goto label_413faa;\n                                                }\n                                                if (((arg4 & 0x10000) != 0 && r8_26 > r9_8))\n                                                {\n                                                    goto label_4140ab;\n                                                }\n                                                if (rdx_47 != 0)\n                                                {\n                                                    int64_t rax_106 = rdx_47[8];\n                                                    int64_t rcx_29 = rdx_47[1];\n                                                    if (rax_106 == var_f8)\n                                                    {\n                                                        var_d8_1 = rdx_47;\n                                                        int64_t r11_3 = (((var_f8 + var_f8) + 1) << 2);\n                                                        var_f8 = ((var_f8 + var_f8) + 1);\n                                                        uint32_t var_d0;\n                                                        var_d0 = realloc(rcx_29, r11_3);\n                                                        int64_t rax_147 = realloc(*(var_d8_1 + 0x10), r11_3);\n                                                        rcx_29 = var_d0;\n                                                        if (rcx_29 != 0)\n                                                        {\n                                                            rdx_47 = var_d8_1;\n                                                            if (rax_147 != 0)\n                                                            {\n                                                                rdx_47[2] = rax_147;\n                                                                rax_106 = rdx_47[8];\n                                                                rdx_47[1] = rcx_29;\n                                                            }\n                                                        }\n                                                        if ((rcx_29 == 0 || (rcx_29 != 0 && rax_147 == 0)))\n                                                        {\n                                                            free(rcx_29);\n                                                            free(rax_147);\n                                                            *arg6 = 0xc;\n                                                            goto label_4139ff;\n                                                        }\n                                                    }\n                                                    *(rcx_29 + (rax_106 << 2)) = r8_26;\n                                                    int64_t rcx_30 = rdx_47[2];\n                                                    rdx_47[8] = (rax_106 + 1);\n                                                    *(rcx_30 + (rax_106 << 2)) = r9_8;\n                                                    goto label_413ce0;\n                                                }\n                                            label_413ce0:\n                                                int64_t rax_107 = 0;\n                                                do\n                                                {\n                                                    char rcx_31 = rax_107;\n                                                    if ((r8_26 <= rax_107 && r9_8 >= rax_107))\n                                                    {\n                                                        int64_t rdx_49 = (rax_107 >> 6);\n                                                        rax_46[rdx_49] = (rax_46[rdx_49] | (1 << rcx_31));\n                                                    }\n                                                    rax_107 = (rax_107 + 1);\n                                                } while (rax_107 != 0x100);\n                                                *arg6 = 0;\n                                            }\n                                            goto label_41395f;\n                                        }\n                                    }\n                                    if (var_80 == 2)\n                                    {\n                                        goto label_413aca;\n                                    }\n                                }\n                                if (rdx_25 == 2)\n                                {\n                                label_413aca:\n                                    *arg6 = 7;\n                                    goto label_4139ff;\n                                }\n                            }\n                            if (((((((rax_52 - 2) & 0xfffffffd) != 0 && rdx_25 == 0x16) && var_80 == 0x15) || ((rax_52 - 2) & 0xfffffffd) == 0) || ((((rax_52 - 2) & 0xfffffffd) != 0 && rdx_25 != 2) && rdx_25 != 0x16)))\n                            {\n                                if (rax_52 > 4)\n                                {\n                                    __assert_fail(\"0\", \"lib/regcomp.c\", 0xcf3, \"parse_bracket_exp\");\n                                    /* no return */\n                                }\n                                switch (rax_52)\n                                {\n                                    case 0:\n                                    {\n                                        uint64_t rcx_21 = var_a0_1;\n                                        uint64_t rax_85 = ((rcx_21 >> 3) & 0x18);\n                                        *(rax_46 + rax_85) = (*(rax_46 + rax_85) | (1 << rcx_21));\n                                    label_41395f:\n                                        char rax_81 = r12_1[8];\n                                        if (rax_81 == 2)\n                                        {\n                                            goto label_413aca;\n                                        }\n                                        if (rax_81 != 0x15)\n                                        {\n                                            r9_1 = 0;\n                                            continue;\n                                        }\n                                        else\n                                        {\n                                            r15_1[9] = (r15_1[9] + rbx);\n                                            if (var_e0 != 0)\n                                            {\n                                                int64_t* rax_116 = rax_46;\n                                                void* rdx_50 = &rax_46[4];\n                                                do\n                                                {\n                                                    *rax_116 = (!*rax_116);\n                                                    rax_116 = &rax_116[1];\n                                                } while (rdx_50 != rax_116);\n                                            }\n                                            int32_t rdx_51 = rax[0x2d];\n                                            if (rdx_51 > 1)\n                                            {\n                                                int64_t* rcx_35 = *(rax + 0x78);\n                                                int64_t rax_119 = 0;\n                                                do\n                                                {\n                                                    *(rax_46 + rax_119) = (*(rax_46 + rax_119) & *(rcx_35 + rax_119));\n                                                    rax_119 = (rax_119 + 8);\n                                                } while (rax_119 != 0x20);\n                                            }\n                                            if (r13_5[5] != 0)\n                                            {\n                                            label_413eba:\n                                                rax[0x2c] = (rax[0x2c] | 2);\n                                                int64_t* rbp_9 = &rax[0x1c];\n                                                rbx = &rax[0x20];\n                                                char var_70_2 = 6;\n                                                var_78 = r13_5;\n                                                void* rax_125 = sub_40a780(rbp_9, rbx, nullptr, nullptr, &var_78);\n                                                var_100_1 = rax_125;\n                                                void* rdx_53 = &rax_46[4];\n                                                int64_t* rax_126 = rax_46;\n                                                if (rax_125 != 0)\n                                                {\n                                                    while (*rax_126 == 0)\n                                                    {\n                                                        rax_126 = &rax_126[1];\n                                                        if (rdx_53 == rax_126)\n                                                        {\n                                                            break;\n                                                        }\n                                                    }\n                                                    if (*rax_126 == 0)\n                                                    {\n                                                        free(rax_46);\n                                                        break;\n                                                    }\n                                                    char var_70_3 = 3;\n                                                    var_78 = rax_46;\n                                                    int64_t* rax_128 = sub_40a780(rbp_9, rbx, nullptr, nullptr, &var_78);\n                                                    if (rax_128 != 0)\n                                                    {\n                                                        char var_50_9 = 0xa;\n                                                        void* rax_129 = sub_40a780(rbp_9, rbx, rax_128, var_100_1, &var_58);\n                                                        var_100_1 = rax_129;\n                                                        if (rax_129 != 0)\n                                                        {\n                                                            break;\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                            else\n                                            {\n                                                if (r13_5[6] != 0)\n                                                {\n                                                    goto label_413eba;\n                                                }\n                                                if (r13_5[7] != 0)\n                                                {\n                                                    goto label_413eba;\n                                                }\n                                                if (r13_5[8] != 0)\n                                                {\n                                                    goto label_413eba;\n                                                }\n                                                if (rdx_51 > 1)\n                                                {\n                                                    if (r13_5[9] != 0)\n                                                    {\n                                                        goto label_413eba;\n                                                    }\n                                                    if ((r13_5[4] & 1) != 0)\n                                                    {\n                                                        goto label_413eba;\n                                                    }\n                                                    goto label_413e5b;\n                                                }\n                                            label_413e5b:\n                                                sub_409170(r13_5);\n                                                char var_70_1 = 3;\n                                                var_78 = rax_46;\n                                                void* rax_122 = sub_40a780(&rax[0x1c], &rax[0x20], nullptr, nullptr, &var_78);\n                                                var_100_1 = rax_122;\n                                                if (rax_122 != 0)\n                                                {\n                                                    break;\n                                                }\n                                            }\n                                        }\n                                        goto label_413ea3;\n                                    }\n                                    case 1:\n                                    {\n                                        int64_t rdx_37 = r13_5[5];\n                                        int64_t rax_82 = *r13_5;\n                                        if (rdx_37 == var_100_2)\n                                        {\n                                            int64_t rsi_44 = (((var_100_2 + var_100_2) + 1) << 2);\n                                            var_100_2 = ((var_100_2 + var_100_2) + 1);\n                                            rax_82 = realloc(rax_82, rsi_44);\n                                            if (rax_82 == 0)\n                                            {\n                                            label_413ea3:\n                                                *arg6 = 0xc;\n                                                goto label_4139ff;\n                                            }\n                                            *r13_5 = rax_82;\n                                            rdx_37 = r13_5[5];\n                                        }\n                                        r13_5[5] = (rdx_37 + 1);\n                                        *(rax_82 + (rdx_37 << 2)) = var_a0_1;\n                                        goto label_41395f;\n                                    }\n                                    case 2:\n                                    {\n                                        int32_t rax_80 = sub_40d350(rax_46, var_a0_1);\n                                        *arg6 = rax_80;\n                                        if (rax_80 != 0)\n                                        {\n                                            goto label_4139ff;\n                                        }\n                                        goto label_41395f;\n                                    }\n                                    case 3:\n                                    {\n                                        int32_t rax_88 = sub_40d350(rax_46, var_a0_1);\n                                        *arg6 = rax_88;\n                                        if (rax_88 != 0)\n                                        {\n                                            goto label_4139ff;\n                                        }\n                                        goto label_41395f;\n                                    }\n                                    case 4:\n                                    {\n                                        int32_t rax_86 = sub_40d3a0(r15_1[0xf], rax_46, &r13_5[3], &r13_5[9], &var_b0, var_a0_1, arg4);\n                                        *arg6 = rax_86;\n                                        if (rax_86 != 0)\n                                        {\n                                            goto label_4139ff;\n                                        }\n                                        goto label_41395f;\n                                    }\n                                }\n                            }\n                        }\n                        *arg6 = rax_50;\n                        goto label_4139ff;\n                    }\n                    goto label_412df0;\n                }\n                *arg6 = 2;\n            label_4139ff:\n                free(rax_46);\n                sub_409170(r13_5);\n                if (*arg6 != 0)\n                {\n                    goto label_412eb8;\n                }\n                var_100_1 = nullptr;\n                goto label_412df0;\n            }\n            free(rax_46);\n            free(r13_5);\n        label_4136d6:\n            *arg6 = 0xc;\n        label_412eb8:\n            var_100_1 = nullptr;\n            goto label_412e20;\n        }\n        case 0x17:\n        {\n            if ((arg4 & 0x1000000) != 0)\n            {\n            label_4130b5:\n                var_100_1 = nullptr;\n                *arg6 = 0xd;\n                goto label_412e20;\n            }\n            break;\n        }\n        case 0x18:\n        {\n        label_412db5:\n            r12_1[8] = 1;\n            void* rax_3 = sub_40a780(&rax[0x1c], &rax[0x20], nullptr, nullptr, r12_1);\n            var_100_1 = rax_3;\n            if (rax_3 == 0)\n            {\n                goto label_4136d6;\n            }\n            goto label_412df0;\n        }\n        case 0x20:\n        case 0x21:\n        {\n            rbx = arg6;\n            rsi_21 = arg1[0xf];\n            rcx_8 = &data_416574;\n            arg5 = rax_1 == 0x21;\n            rdx_26 = \"alnum\";\n            r9_3 = rbx;\n            r8_9 = arg5;\n            break;\n        }\n        case 0x22:\n        case 0x23:\n        {\n            rbx = arg6;\n            rsi_21 = arg1[0xf];\n            rcx_8 = &data_418741[0x1b];\n            arg5 = rax_1 == 0x23;\n            rdx_26 = \"space\";\n            r9_3 = rbx;\n            r8_9 = arg5;\n            break;\n        }\n        case 0x24:\n        {\n            var_100_1 = nullptr;\n            *arg6 = 5;\n        label_412e20:\n            return var_100_1;\n            break;\n        }\n    }\n    if ((((rax_1 == 0x20 || rax_1 == 0x21) || rax_1 == 0x22) || rax_1 == 0x23))\n    {\n        void* rax_53 = sub_40db70(rax, rsi_21, rdx_26, rcx_8, r8_9, r9_3);\n        var_100_1 = rax_53;\n        if (*rbx == 0)\n        {\n            goto label_412df0;\n        }\n        if (rax_53 == 0)\n        {\n            goto label_412eb8;\n        }\n        goto label_412df0;\n    }\n    if ((((rax_1 == 0xb || rax_1 == 0x12) || rax_1 == 0x13) || rax_1 == 0x17))\n    {\n        if ((arg4 & 0x20) != 0)\n        {\n            goto label_4130b5;\n        }\n        if ((arg4 & 0x10) != 0)\n        {\n            r15_1[9] = (r15_1[9] + sub_4125d0(r12_1, r15_1, arg4));\n            var_100_1 = sub_412d40(r15_1, arg2, r12_1, arg4, arg5, arg6, arg5, arg4, rax);\n            goto label_412e20;\n        }\n        if (rax_1 != 9)\n        {\n            goto label_412db5;\n        }\n    }\n    if ((rax_1 == 9 || ((((rax_1 == 0xb || rax_1 == 0x12) || rax_1 == 0x13) || rax_1 == 0x17) && (arg4 & 0x20) == 0)))\n    {\n        if ((arg4 & 0x20000) != 0)\n        {\n            goto label_412db5;\n        }\n        var_100_1 = nullptr;\n        *arg6 = 0x10;\n        goto label_412e20;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_414230",
            "funcStartAddr": "0x414230",
            "funcEndAddr": "0x41436e",
            "decompiledFuncCode": "void* sub_414230(void** arg1, int64_t* arg2, char* arg3, int64_t arg4, \n    int64_t arg5, int32_t* arg6)\n{\n    void* rax = *arg2;\n    void* rax_1 = sub_412d40(arg1, arg2, arg3, arg4, arg5, arg6);\n    void* r14 = rax_1;\n    if ((*arg6 == 0 || (*arg6 != 0 && rax_1 != 0)))\n    {\n        while (true)\n        {\n            char rax_2 = arg3[8];\n            if ((rax_2 & 0xf7) == 2)\n            {\n                return r14;\n            }\n            void* rax_3;\n            while (true)\n            {\n                if ((rax_2 == 9 && arg5 != 0))\n                {\n                    return r14;\n                }\n                rax_3 = sub_412d40(arg1, arg2, arg3, arg4, arg5, arg6);\n                if ((*arg6 != 0 && rax_3 == 0))\n                {\n                    break;\n                }\n                if (r14 == 0)\n                {\n                    break;\n                }\n                if (rax_3 == 0)\n                {\n                    break;\n                }\n                char var_40_1 = 0x10;\n                void var_48;\n                void* rax_6 = sub_40a780((rax + 0x70), (rax + 0x80), r14, rax_3, &var_48);\n                if (rax_6 == 0)\n                {\n                    sub_407fb0(rax_3, 0x4091c0, 0);\n                    sub_407fb0(r14, 0x4091c0, 0);\n                    *arg6 = 0xc;\n                    return nullptr;\n                }\n                r14 = rax_6;\n                rax_2 = arg3[8];\n                if ((rax_2 & 0xf7) == 2)\n                {\n                    return r14;\n                }\n            }\n            if ((*arg6 != 0 && rax_3 == 0))\n            {\n                break;\n            }\n            if (r14 == 0)\n            {\n                r14 = rax_3;\n            }\n        }\n        if (r14 != 0)\n        {\n            sub_407fb0(r14, 0x4091c0, 0);\n        }\n    }\n    return nullptr;\n}\n\n"
        },
        {
            "funcName": "sub_414370",
            "funcStartAddr": "0x414370",
            "funcEndAddr": "0x4144c1",
            "decompiledFuncCode": "void* sub_414370(void** arg1, int64_t* arg2, char* arg3, int64_t arg4, \n    int64_t arg5, int32_t* arg6)\n{\n    void* rbx = *arg2;\n    int64_t rax = *(rbx + 0xa8);\n    void* rax_1 = sub_414230(arg1, arg2, arg3, arg4, arg5, arg6);\n    void* r15 = rax_1;\n    if ((*arg6 == 0 || (*arg6 != 0 && rax_1 != 0)))\n    {\n        while (true)\n        {\n            if (arg3[8] != 0xa)\n            {\n                return r15;\n            }\n            arg1[9] = (arg1[9] + sub_4125d0(arg3, arg1, (arg4 | 0x800000)));\n            char rax_11 = arg3[8];\n            int64_t* rcx_1;\n            if (((rax_11 & 0xf7) == 2 || (((rax_11 & 0xf7) != 2 && rax_11 == 9) && arg5 != 0)))\n            {\n                rcx_1 = nullptr;\n            }\n            if (((rax_11 & 0xf7) != 2 && (rax_11 != 9 || (rax_11 == 9 && arg5 == 0))))\n            {\n                int64_t rax_3 = *(rbx + 0xa8);\n                *(rbx + 0xa8) = rax;\n                rcx_1 = sub_414230(arg1, arg2, arg3, arg4, arg5, arg6);\n                if ((*arg6 != 0 && rcx_1 == 0))\n                {\n                    break;\n                }\n                *(rbx + 0xa8) = (*(rbx + 0xa8) | rax_3);\n            }\n            char var_40_1 = 0xa;\n            void var_48;\n            void* rax_8 = sub_40a780((rbx + 0x70), (rbx + 0x80), r15, rcx_1, &var_48);\n            r15 = rax_8;\n            if (rax_8 == 0)\n            {\n                *arg6 = 0xc;\n                return r15;\n            }\n        }\n        if (r15 != 0)\n        {\n            sub_407fb0(r15, 0x4091c0, 0);\n        }\n    }\n    return nullptr;\n}\n\n"
        },
        {
            "funcName": "sub_4144d0",
            "funcStartAddr": "0x401bbe",
            "funcEndAddr": "0x41527a",
            "decompiledFuncCode": "uint64_t sub_4144d0(int64_t* arg1, char* arg2, int64_t arg3, int64_t arg4)\n{\n    char* r14 = arg2;\n    arg1[7] = (arg1[7] & 0x90);\n    bool cond:0 = arg1[1] <= 0xe7;\n    int32_t var_10c = 0;\n    int64_t* rbx = *arg1;\n    arg1[3] = arg4;\n    arg1[2] = 0;\n    arg1[6] = 0;\n    uint64_t rax_50;\n    int64_t* rax_56;\n    if (cond:0)\n    {\n        rax_56 = realloc(rbx, 0xe8);\n        rbx = rax_56;\n        if (rax_56 == 0)\n        {\n            rax_50 = 0xc;\n        }\n        else\n        {\n            arg1[1] = 0xe8;\n            *arg1 = rax_56;\n        }\n    }\n    if (((cond:0 && rax_56 != 0) || (!cond:0)))\n    {\n        arg1[2] = 0xe8;\n        void* rdi_1 = (&rbx[1] & 0xfffffffffffffff8);\n        *rbx = 0;\n        rbx[0x1c] = 0;\n        for (uint64_t rcx_3 = (((rbx - rdi_1) + 0xe8) >> 3); rcx_3 != 0; rcx_3 = (rcx_3 - 1))\n        {\n            *rdi_1 = 0;\n            rdi_1 = (rdi_1 + 8);\n        }\n        rbx[0x10] = 0xf;\n        if (arg3 <= 0x555555555555554)\n        {\n            uint64_t rax_1 = (arg3 + 1);\n            rbx[1] = rax_1;\n            *rbx = malloc((rax_1 << 4));\n            uint64_t rsi;\n            int64_t r15_1;\n            if (arg3 == 0)\n            {\n                r15_1 = 0;\n                rsi = 1;\n            }\n            else\n            {\n                rsi = 1;\n                do\n                {\n                    rsi = (rsi + rsi);\n                } while (arg3 >= rsi);\n                r15_1 = (rsi - 1);\n            }\n            int64_t rax_3 = calloc(0x18, rsi);\n            rbx[0x11] = r15_1;\n            rbx[8] = rax_3;\n            *(rbx + 0xb4) = __ctype_get_mb_cur_max();\n            char* rax_5 = nl_langinfo(0xe);\n            if (((*rax_5 & 0xdf) == 0x55 && ((rax_5[1] & 0xdf) == 0x54 && (rax_5[2] & 0xdf) == 0x46)))\n            {\n                char temp0_1 = rax_5[3];\n                bool c_1 = temp0_1 < 0x2d;\n                bool z_1 = temp0_1 == 0x2d;\n                void* const rdi_4 = &data_418803;\n                int64_t rcx_4 = 2;\n                int64_t rdx_6;\n                rdx_6 = z_1;\n                void* rsi_1 = &rax_5[(rdx_6 + 3)];\n                while (rcx_4 != 0)\n                {\n                    char temp1_1 = *rsi_1;\n                    char temp2_1 = *rdi_4;\n                    c_1 = temp1_1 < temp2_1;\n                    z_1 = temp1_1 == temp2_1;\n                    rsi_1 = (rsi_1 + 1);\n                    rdi_4 = (rdi_4 + 1);\n                    rcx_4 = (rcx_4 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rax_5 = ((!z_1) && (!c_1));\n                rax_5 = (rax_5 - 0);\n                if (rax_5 == 0)\n                {\n                    rbx[0x16] = (rbx[0x16] | 4);\n                }\n            }\n            char rax_6 = rbx[0x16];\n            bool cond:1_1 = *(rbx + 0xb4) <= 1;\n            rbx[0x16] = (rax_6 & 0xf7);\n            if ((!cond:1_1))\n            {\n                if ((rax_6 & 4) != 0)\n                {\n                    rbx[0xf] = 0x4191c0;\n                }\n                else\n                {\n                    int64_t rax_51 = calloc(0x20, 1);\n                    rbx[0xf] = rax_51;\n                    if (rax_51 == 0)\n                    {\n                        goto label_414eb0;\n                    }\n                    int64_t r15_5 = 0;\n                    do\n                    {\n                        int32_t rdx_39 = (r15_5 << 3);\n                        int32_t rcx_18 = 0;\n                        do\n                        {\n                            wint_t rax_52 = btowc(rdx_39);\n                            int32_t rdi_45 = (rdx_39 & 0xffffff80);\n                            if (rax_52 != 0xffffffff)\n                            {\n                                int64_t* r8_5 = (rbx[0xf] + r15_5);\n                                *r8_5 = (*r8_5 | (1 << rcx_18));\n                                if ((rdi_45 == 0 && rax_52 == rdx_39))\n                                {\n                                    rcx_18 = (rcx_18 + 1);\n                                    rdx_39 = (rdx_39 + 1);\n                                    if (rcx_18 == 0x40)\n                                    {\n                                        break;\n                                    }\n                                    continue;\n                                }\n                            }\n                            if (((rax_52 == 0xffffffff && rdi_45 == 0) || (rax_52 != 0xffffffff && rdi_45 == 0)))\n                            {\n                                rbx[0x16] = (rbx[0x16] | 8);\n                            }\n                            rcx_18 = (rcx_18 + 1);\n                            rdx_39 = (rdx_39 + 1);\n                        } while (rcx_18 != 0x40);\n                        r15_5 = (r15_5 + 8);\n                    } while (r15_5 != 0x20);\n                }\n            }\n            if (*rbx == 0)\n            {\n                goto label_414eb0;\n            }\n            if (rbx[8] == 0)\n            {\n                goto label_414eb0;\n            }\n            int64_t rcx_5 = 0x12;\n            int64_t rdx_9 = arg1[5];\n            char* var_d0;\n            int64_t* rdi_5 = &var_d0;\n            var_10c = 0;\n            for (; rcx_5 != 0; rcx_5 = (rcx_5 - 1))\n            {\n                *rdi_5 = 0;\n                rdi_5 = &rdi_5[1];\n            }\n            int32_t rdi_6 = *(rbx + 0xb4);\n            uint64_t rax_8 = (arg4 & 0x400000);\n            char* var_d8 = r14;\n            bool var_50_1 = rax_8 != 0;\n            int64_t rdx_10 = (rdx_9 | rax_8);\n            uint8_t rax_9 = rbx[0x16];\n            bool rsi_2 = rdx_10 != 0;\n            uint8_t rcx_6 = rax_9;\n            rax_9 = (rax_9 >> 3);\n            int64_t var_88_1 = arg3;\n            rcx_6 = (rcx_6 >> 2);\n            int32_t var_48_1 = rdi_6;\n            char var_4f_1 = (rcx_6 & 1);\n            char var_4e_1 = (rax_9 & 1);\n            int64_t var_70_1 = arg3;\n            int64_t var_78_1 = arg3;\n            int32_t rax_11;\n            if (arg3 != 0)\n            {\n                rax_11 = sub_4083f0(&var_d8, rax_1);\n                if (rax_11 != 0)\n                {\n                    goto label_414c28;\n                }\n                rdi_6 = *(rbx + 0xb4);\n            }\n            if (rsi_2 == 0)\n            {\n                goto label_414721;\n            }\n            r14 = var_d0;\n        label_414721:\n            var_d0 = r14;\n            int64_t var_a8;\n            int64_t var_98;\n            if (rax_8 == 0)\n            {\n                if (rdi_6 > 1)\n                {\n                    sub_4087e0(&var_d8);\n                    var_10c = 0;\n                }\n                else\n                {\n                    int64_t rcx_8 = var_98;\n                    if (rdx_10 != 0)\n                    {\n                        int64_t rax_14 = var_a8;\n                        if (arg3 <= rcx_8)\n                        {\n                            rcx_8 = arg3;\n                        }\n                        if (rcx_8 <= rax_14)\n                        {\n                            rcx_8 = rax_14;\n                        }\n                        else\n                        {\n                            while (true)\n                            {\n                                int64_t var_b0;\n                                r14[rax_14] = *(rdx_9 + var_d8[(rax_14 + var_b0)]);\n                                rax_14 = (rax_14 + 1);\n                                if (rcx_8 == rax_14)\n                                {\n                                    break;\n                                }\n                                r14 = var_d0;\n                            }\n                        }\n                    }\n                    int64_t var_a8_1 = rcx_8;\n                    int64_t var_a0_1 = rcx_8;\n                    var_10c = 0;\n                }\n                goto label_414819;\n            }\n            if (rdi_6 > 1)\n            {\n                do\n                {\n                    rax_11 = sub_408990(&var_d8);\n                    if (rax_11 != 0)\n                    {\n                        break;\n                    }\n                    int64_t var_a0;\n                    if (arg3 <= var_a0)\n                    {\n                        break;\n                    }\n                    if (var_98 > (*(rbx + 0xb4) + var_a8))\n                    {\n                        break;\n                    }\n                    rax_11 = sub_4083f0(&var_d8, (var_98 + var_98));\n                } while (rax_11 == 0);\n                if (rax_11 != 0)\n                {\n                    goto label_414c28;\n                }\n                var_10c = 0;\n                goto label_414819;\n            }\n            sub_408760(&var_d8);\n            var_10c = 0;\n        label_414819:\n            void* r12_1 = *arg1;\n            arg1[6] = 0;\n            *(r12_1 + 0xd8) = arg4;\n            int32_t var_108;\n            int64_t var_90;\n            int64_t var_90_1 = (var_90 + sub_4125d0(&var_108, &var_d8, (arg4 | 0x800000)));\n            void* rax_17 = sub_414370(&var_d8, arg1, &var_108, arg4, 0, &var_10c);\n            int32_t var_130;\n            void var_f8;\n            char var_f0_1;\n            void* rax_18;\n            void* rdx_19;\n            int64_t* r9_2;\n            void* r13_1;\n            void* r14_1;\n            void* r15_3;\n            if (var_10c == 0)\n            {\n                r15_3 = (r12_1 + 0x70);\n                var_130 = rax_17;\n                r13_1 = (r12_1 + 0x80);\n                var_f0_1 = 2;\n                rax_18 = sub_40a780(r15_3, r13_1, nullptr, nullptr, &var_f8);\n                r9_2 = var_130;\n                r14_1 = rax_18;\n                rdx_19 = rax_18;\n                if (r9_2 != 0)\n                {\n                    goto label_4148c6;\n                }\n                goto label_4148d9;\n            }\n            int64_t* r15_4;\n            if (rax_17 == 0)\n            {\n                rbx[0xd] = 0;\n                r15_4 = *arg1;\n                goto label_414e38;\n            }\n            r15_3 = (r12_1 + 0x70);\n            var_130 = rax_17;\n            r13_1 = (r12_1 + 0x80);\n            char var_f0_2 = 2;\n            r9_2 = var_130;\n            r14_1 = sub_40a780(r15_3, r13_1, nullptr, nullptr, &var_f8);\n        label_4148c6:\n            var_f0_1 = 0x10;\n            rdx_19 = r14_1;\n            r14_1 = sub_40a780(r15_3, r13_1, r9_2, r14_1, &var_f8);\n        label_4148d9:\n            r15_4 = *arg1;\n            rdx_19 = rdx_19 == 0;\n            rax_18 = r14_1 == 0;\n            rdx_19 = (rdx_19 | rax_18);\n            if (rdx_19 != 0)\n            {\n                var_10c = 0xc;\n                rbx[0xd] = 0;\n                goto label_414e38;\n            }\n            int64_t r13_2 = r15_4[1];\n            rbx[0xd] = r14_1;\n            int64_t rdx_21 = (r13_2 << 3);\n            var_130 = rdx_21;\n            int64_t r13_4 = (r13_2 * 0x18);\n            int64_t rax_19 = malloc(rdx_21);\n            r15_4[3] = rax_19;\n            int64_t rax_20 = malloc(var_130);\n            r15_4[4] = rax_20;\n            int64_t rax_21 = malloc(r13_4);\n            r15_4[5] = rax_21;\n            var_130 = rax_21;\n            int64_t rax_22 = malloc(r13_4);\n            int64_t rcx_12 = var_130;\n            r15_4[6] = rax_22;\n            if (rax_19 == 0)\n            {\n            label_414e30:\n                var_10c = 0xc;\n                goto label_414e38;\n            }\n            if (rax_20 == 0)\n            {\n                goto label_414e30;\n            }\n            if (rcx_12 == 0)\n            {\n                goto label_414e30;\n            }\n            if (rax_22 == 0)\n            {\n                goto label_414e30;\n            }\n            int64_t r13_5 = arg1[6];\n            int64_t rax_23 = malloc((r13_5 << 3));\n            r15_4[0x1c] = rax_23;\n            if (rax_23 != 0)\n            {\n                int64_t rdx_24 = 0;\n                if (r13_5 != 0)\n                {\n                    do\n                    {\n                        *(rax_23 + (rdx_24 << 3)) = rdx_24;\n                        rdx_24 = (rdx_24 + 1);\n                    } while (rdx_24 != r13_5);\n                }\n                sub_409ff0(r15_4[0xd], 0x409cb0, r15_4);\n                int64_t rdx_26 = arg1[6];\n                int64_t rax_24;\n                int64_t* rdi_19;\n                if (rdx_26 == 0)\n                {\n                    rdi_19 = r15_4[0x1c];\n                }\n                else\n                {\n                    rdi_19 = r15_4[0x1c];\n                    rax_24 = *rdi_19;\n                    if (rax_24 == 0)\n                    {\n                        do\n                        {\n                            rax_24 = (rax_24 + 1);\n                            if (rax_24 == rdx_26)\n                            {\n                                break;\n                            }\n                        } while (rdi_19[rax_24] == rax_24);\n                    }\n                }\n                if ((rdx_26 == 0 || ((rdx_26 != 0 && rax_24 == 0) && rax_24 == rdx_26)))\n                {\n                    free(rdi_19);\n                    r15_4[0x1c] = 0;\n                }\n            }\n            rax_11 = sub_407fb0(r15_4[0xd], 0x40ab30, arg1);\n            if (rax_11 != 0)\n            {\n                goto label_414c28;\n            }\n            rax_11 = sub_407fb0(r15_4[0xd], 0x40d060, r15_4);\n            if (rax_11 != 0)\n            {\n                goto label_414c28;\n            }\n            sub_409ff0(r15_4[0xd], 0x409d40, r15_4);\n            int64_t rdx_31;\n            rax_11 = sub_409ff0(r15_4[0xd], 0x409840, r15_4);\n            if (rax_11 != 0)\n            {\n                goto label_414c28;\n            }\n            char r13_6 = 0;\n            int64_t r14_3 = 0;\n            int64_t var_e8;\n            int64_t r9_4;\n            while (true)\n            {\n                if (r15_4[2] != r14_3)\n                {\n                    goto label_414a76;\n                }\n                while (r13_6 != 0)\n                {\n                    do\n                    {\n                        r13_6 = 0;\n                        r14_3 = 0;\n                    label_414a76:\n                        r9_4 = (r14_3 * 0x18);\n                        if (*((r15_4[6] + r9_4) + 8) != 0)\n                        {\n                            break;\n                        }\n                        var_130 = r9_4;\n                        rax_11 = sub_40a220(&var_f8, r15_4, r14_3, 1);\n                        if (rax_11 != 0)\n                        {\n                            break;\n                        }\n                        r14_3 = (r14_3 + 1);\n                        if (*((r15_4[6] + var_130) + 8) != 0)\n                        {\n                            break;\n                        }\n                        r13_6 = 1;\n                        free(var_e8);\n                    } while (r15_4[2] == r14_3);\n                    if (*((r15_4[6] + r9_4) + 8) == 0)\n                    {\n                        break;\n                    }\n                    r14_3 = (r14_3 + 1);\n                    if (r15_4[2] != r14_3)\n                    {\n                        break;\n                    }\n                }\n                if ((!(r13_6 != 0 && *((r15_4[6] + r9_4) + 8) == 0)))\n                {\n                    break;\n                }\n                if ((*((r15_4[6] + r9_4) + 8) == 0 && r13_6 != 0))\n                {\n                    if (rax_11 != 0)\n                    {\n                        break;\n                    }\n                    if ((*((r15_4[6] + r9_4) + 8) == 0 && rax_11 != 0))\n                    {\n                        /* nop */\n                    }\n                }\n            }\n            if (((r13_6 != 0 && *((r15_4[6] + r9_4) + 8) == 0) && rax_11 != 0))\n            {\n                goto label_414c28;\n            }\n            if (r13_6 != 0)\n            {\n                goto label_414a76;\n            }\n            if (((arg1[7] & 0x10) == 0 && (arg1[6] != 0 && (r15_4[0x16] & 1) != 0)))\n            {\n                goto label_414b4b;\n            }\n            if (r15_4[0x13] != 0)\n            {\n            label_414b4b:\n                int64_t rax_27 = malloc((r14_3 * 0x18));\n                r15_4[7] = rax_27;\n                if (rax_27 == 0)\n                {\n                    var_10c = 0xc;\n                    r15_4 = *arg1;\n                    goto label_414e38;\n                }\n                rdx_31 = 0;\n                if (r14_3 == 0)\n                {\n                    goto label_414c4d;\n                }\n                int64_t rax_29;\n                while (true)\n                {\n                    int64_t rcx_13 = (rdx_31 * 3);\n                    rdx_31 = (rdx_31 + 1);\n                    int128_t* rax_28 = (rax_27 + (rcx_13 << 3));\n                    *rax_28 = 0;\n                    rax_28[1] = 0;\n                    rax_29 = r15_4[2];\n                    if (rax_29 <= rdx_31)\n                    {\n                        break;\n                    }\n                    rax_27 = r15_4[7];\n                }\n                if (rax_29 == 0)\n                {\n                    goto label_414c4d;\n                }\n                int64_t var_128_3 = 0;\n                int64_t rax_30 = r15_4[6];\n                char rax_33;\n                void* rsi_14;\n                do\n                {\n                    int64_t r14_4 = 0;\n                    int64_t rsi_13 = (var_128_3 * 0x18);\n                    rsi_14 = (rsi_13 + rax_30);\n                    int64_t rcx_14 = *(rsi_14 + 0x10);\n                    if (*(rsi_14 + 8) > 0)\n                    {\n                        do\n                        {\n                            var_130 = rcx_14;\n                            rax_33 = sub_408490((r15_4[7] + (*(rcx_14 + (r14_4 << 3)) * 0x18)), var_128_3);\n                            if (rax_33 == 0)\n                            {\n                                break;\n                            }\n                            rax_30 = r15_4[6];\n                            r14_4 = (r14_4 + 1);\n                            rcx_14 = var_130;\n                        } while (r14_4 < *((rax_30 + rsi_13) + 8));\n                        if (rax_33 == 0)\n                        {\n                            break;\n                        }\n                    }\n                    var_128_3 = (var_128_3 + 1);\n                } while (r15_4[2] > var_128_3);\n                if ((!(*(rsi_14 + 8) > 0 && rax_33 == 0)))\n                {\n                    goto label_414c4d;\n                }\n                rax_11 = 0xc;\n            label_414c28:\n                var_10c = rax_11;\n                r15_4 = *arg1;\n            label_414e38:\n                int64_t* rdi_39 = r15_4[0xe];\n                if (rdi_39 != 0)\n                {\n                    int64_t* r12_3;\n                    do\n                    {\n                        r12_3 = *rdi_39;\n                        free(rdi_39);\n                        rdi_39 = r12_3;\n                    } while (r12_3 != 0);\n                }\n                r15_4[0xe] = 0;\n                int64_t rdi_40 = r15_4[4];\n                r15_4[0x10] = 0xf;\n                r15_4[0xd] = 0;\n                free(rdi_40);\n                r15_4[4] = 0;\n                sub_409740(&var_d8);\n                goto label_414e91;\n            }\n        label_414c4d:\n            var_10c = 0;\n            uint64_t rax_34;\n            rax_34 = (rbx[0x16] >> 2);\n            rdx_31 = rax_8 == 0;\n            rax_34 = (rax_34 & rdx_31);\n            if ((rax_34 != 0 && arg1[5] == 0))\n            {\n                int64_t rdi_47 = rbx[2];\n                int64_t* rdx_41;\n                char r9_8;\n                if (rdi_47 != 0)\n                {\n                    char* r8_6 = *rbx;\n                    r9_8 = 0;\n                    int64_t rcx_20 = 0;\n                    rdx_41 = r8_6;\n                    while (true)\n                    {\n                        if (rdx_41[1] <= 0xc)\n                        {\n                            switch (rdx_41[1])\n                            {\n                                case 1:\n                                {\n                                    if (*rdx_41 < 0)\n                                    {\n                                        r13_6 = rax_34;\n                                    }\n                                    break;\n                                }\n                                case 3:\n                                {\n                                    void* rsi_30 = *rdx_41;\n                                    if (*(rsi_30 + 0x10) != 0)\n                                    {\n                                        break;\n                                    }\n                                    if ((*(rsi_30 + 0x10) == 0 && *(rsi_30 + 0x18) != 0))\n                                    {\n                                        break;\n                                    }\n                                    break;\n                                }\n                                case 5:\n                                {\n                                    r9_8 = rax_34;\n                                    break;\n                                }\n                                case 6:\n                                {\n                                    break;\n                                    break;\n                                }\n                                case 0xc:\n                                {\n                                    int32_t rsi_29 = *rdx_41;\n                                    bool cond:12_1 = rsi_29 <= 0x20;\n                                    if (rsi_29 != 0x20)\n                                    {\n                                        if ((cond:12_1 && rsi_29 != 0x10))\n                                        {\n                                            break;\n                                        }\n                                        if (((!cond:12_1) && (rsi_29 != 0x40 && rsi_29 != 0x80)))\n                                        {\n                                            break;\n                                        }\n                                    }\n                                    break;\n                                }\n                            }\n                            if ((((((((((rdx_41[1] == 1 || rdx_41[1] == 2) || rdx_41[1] == 3) || rdx_41[1] == 4) || rdx_41[1] == 5) || rdx_41[1] == 8) || rdx_41[1] == 9) || rdx_41[1] == 0xa) || rdx_41[1] == 0xb) || rdx_41[1] == 0xc))\n                            {\n                                rcx_20 = (rcx_20 + 1);\n                                rdx_41 = &rdx_41[2];\n                            }\n                            if ((((((((((rdx_41[1] == 5 || rdx_41[1] == 2) || rdx_41[1] == 4) || rdx_41[1] == 8) || rdx_41[1] == 9) || rdx_41[1] == 0xa) || rdx_41[1] == 0xb) || rdx_41[1] == 1) || rdx_41[1] == 0xc) || rdx_41[1] == 3))\n                            {\n                                if (rcx_20 == rdi_47)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        abort();\n                        /* no return */\n                    }\n                    if (rdx_41[1] != 6)\n                    {\n                        r13_6 = (r13_6 | r9_8);\n                        if (r13_6 != 0)\n                        {\n                            rax_34 = &r8_6[(rcx_20 << 4)];\n                            do\n                            {\n                                char rdx_45 = r8_6[8];\n                                if (rdx_45 != 1)\n                                {\n                                    if (rdx_45 == 5)\n                                    {\n                                        r8_6[8] = 7;\n                                    }\n                                }\n                                else if (*r8_6 < 0)\n                                {\n                                    r8_6[0xa] = (r8_6[0xa] & 0xdf);\n                                }\n                                r8_6 = &r8_6[0x10];\n                            } while (rax_34 != r8_6);\n                            goto label_415246;\n                        }\n                    }\n                }\n                if ((rdi_47 == 0 || (rdi_47 != 0 && rdx_41[1] != 6)))\n                {\n                    r9_8 = 0;\n                label_415246:\n                    bool cond:14_1 = rbx[0x13] > 0;\n                    char rdx_46 = rbx[0x16];\n                    *(rbx + 0xb4) = 1;\n                    rax_34 = cond:14_1;\n                    char rax_61 = ((rax_34 | r9_8) & 1);\n                    rbx[0x16] = ((rax_61 + rax_61) | (rdx_46 & 0xf9));\n                }\n            }\n            int64_t rax_37 = *(*(rbx[0xd] + 0x18) + 0x38);\n            rbx[0x12] = rax_37;\n            int32_t rax_39 = sub_40abb0(&var_f8, (rbx[6] + (rax_37 * 0x18)));\n            int32_t r13_7 = rax_39;\n            var_108 = rax_39;\n            if (rax_39 == 0)\n            {\n                if (rbx[0x13] > 0)\n                {\n                    int64_t r10_1 = var_f0_1;\n                    if (r10_1 > 0)\n                    {\n                        int64_t r9_6 = 0;\n                        do\n                        {\n                            int64_t rdi_31 = var_e8;\n                            int64_t r8_3 = *rbx;\n                            int64_t rsi_19 = *(rdi_31 + (r9_6 << 3));\n                            int64_t* rcx_17 = ((rsi_19 << 4) + r8_3);\n                            if (rcx_17[1] == 4)\n                            {\n                                int64_t rdx_34 = 0;\n                                int64_t* rax_42;\n                                do\n                                {\n                                    rax_42 = ((*(rdi_31 + (rdx_34 << 3)) << 4) + r8_3);\n                                    if ((rax_42[1] == 9 && *rax_42 == *rcx_17))\n                                    {\n                                        break;\n                                    }\n                                    rdx_34 = (rdx_34 + 1);\n                                } while (r10_1 != rdx_34);\n                                if ((rax_42[1] == 9 && *rax_42 == *rcx_17))\n                                {\n                                    int64_t r11_2 = **((rbx[5] + (rsi_19 * 0x18)) + 0x10);\n                                    if (sub_409b10(r10_1, &var_e8, r11_2) == 0)\n                                    {\n                                        int32_t rax_48 = sub_40a050(&var_f8, (rbx[6] + (r11_2 * 0x18)));\n                                        if (rax_48 != 0)\n                                        {\n                                            r13_7 = rax_48;\n                                            goto label_414daf;\n                                        }\n                                        r10_1 = var_f0_1;\n                                        r9_6 = 1;\n                                        if (r10_1 <= 1)\n                                        {\n                                            break;\n                                        }\n                                        continue;\n                                    }\n                                }\n                            }\n                            r9_6 = (r9_6 + 1);\n                        } while (r10_1 > r9_6);\n                    }\n                }\n                int64_t* rax_49 = sub_40adc0(&var_108, rbx, &var_f8, 0);\n                rbx[9] = rax_49;\n                if (rax_49 == 0)\n                {\n                label_415028:\n                    r13_7 = var_108;\n                }\n                else\n                {\n                    if (rax_49[0xd] >= 0)\n                    {\n                        rbx[0xc] = rax_49;\n                        rbx[0xb] = rax_49;\n                        rbx[0xa] = rax_49;\n                    }\n                    else\n                    {\n                        rbx[0xa] = sub_40adc0(&var_108, rbx, &var_f8, 1);\n                        rbx[0xb] = sub_40adc0(&var_108, rbx, &var_f8, 2);\n                        int64_t* rax_55 = sub_40adc0(&var_108, rbx, &var_f8, 6);\n                        bool cond:11_1 = rbx[0xa] == 0;\n                        rbx[0xc] = rax_55;\n                        if (cond:11_1)\n                        {\n                            goto label_415028;\n                        }\n                        if (rbx[0xb] == 0)\n                        {\n                            goto label_415028;\n                        }\n                        if (rax_55 == 0)\n                        {\n                            goto label_415028;\n                        }\n                    }\n                    free(var_e8);\n                }\n            }\n        label_414daf:\n            void* r12_2 = *arg1;\n            var_10c = r13_7;\n            int64_t* rdi_36 = *(r12_2 + 0x70);\n            if (rdi_36 != 0)\n            {\n                int64_t* r13_8;\n                do\n                {\n                    r13_8 = *rdi_36;\n                    free(rdi_36);\n                    rdi_36 = r13_8;\n                } while (r13_8 != 0);\n            }\n            *(r12_2 + 0x70) = 0;\n            int64_t rdi_37 = *(r12_2 + 0x20);\n            *(r12_2 + 0x80) = 0xf;\n            *(r12_2 + 0x68) = 0;\n            free(rdi_37);\n            *(r12_2 + 0x20) = 0;\n            sub_409740(&var_d8);\n            rax_50 = var_10c;\n            if (rax_50 != 0)\n            {\n                goto label_414e91;\n            }\n        }\n        else\n        {\n        label_414eb0:\n            var_10c = 0xc;\n        label_414e91:\n            sub_40d0f0(rbx);\n            *arg1 = 0;\n            rax_50 = var_10c;\n            arg1[1] = 0;\n        }\n    }\n    return rax_50;\n}\n\n"
        },
        {
            "funcName": "sub_415280",
            "funcStartAddr": "0x415280",
            "funcEndAddr": "0x4152e7",
            "decompiledFuncCode": "int64_t sub_415280(char* arg1, int64_t arg2, int64_t* arg3)\n{\n    int64_t rcx = data_61d4a8;\n    arg3[7] = (((arg3[7] & 0xef) | (((rcx >> 0x19) & 1) << 4)) | 0x80);\n    int32_t rax_8 = sub_4144d0(arg3, arg1, arg2, rcx);\n    if (rax_8 == 0)\n    {\n        return 0;\n    }\n    /* tailcall */\n    return dcgettext(nullptr, &*\"Success\"[*((rax_8 << 3) + 0x4191e0)], 5);\n}\n\n"
        },
        {
            "funcName": "sub_4152f0",
            "funcStartAddr": "0x4152f0",
            "funcEndAddr": "0x4152ff",
            "decompiledFuncCode": "int64_t sub_4152f0(int64_t arg1)\n{\n    int64_t rax = data_61d4a8;\n    data_61d4a8 = arg1;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_415300",
            "funcStartAddr": "0x415300",
            "funcEndAddr": "0x4153c3",
            "decompiledFuncCode": "int64_t sub_415300(int64_t* arg1)\n{\n    int64_t* rbp = arg1[4];\n    void* r12 = *arg1;\n    *rbp = 0;\n    rbp[0x1f] = 0;\n    void* rdi_1 = (&rbp[1] & 0xfffffffffffffff8);\n    for (uint64_t rcx_3 = (((rbp - rdi_1) + 0x100) >> 3); rcx_3 != 0; rcx_3 = (rcx_3 - 1))\n    {\n        *rdi_1 = 0;\n        rdi_1 = (rdi_1 + 8);\n    }\n    void* rsi = *(r12 + 0x48);\n    sub_40ddb0(arg1, (rsi + 0x10), (rsi + 0x18), rbp);\n    void* rax = *(r12 + 0x50);\n    if (*(r12 + 0x48) != rax)\n    {\n        sub_40ddb0(arg1, (rax + 0x10), (rax + 0x18), rbp);\n        rax = *(r12 + 0x48);\n    }\n    void* rsi_3 = *(r12 + 0x58);\n    if (rsi_3 != rax)\n    {\n        sub_40ddb0(arg1, (rsi_3 + 0x10), (rsi_3 + 0x18), rbp);\n        rax = *(r12 + 0x48);\n    }\n    void* rsi_5 = *(r12 + 0x60);\n    if (rsi_5 != rax)\n    {\n        sub_40ddb0(arg1, (rsi_5 + 0x10), (rsi_5 + 0x18), rbp);\n    }\n    arg1[7] = (arg1[7] | 8);\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_4153d0",
            "funcStartAddr": "0x4153d0",
            "funcEndAddr": "0x415825",
            "decompiledFuncCode": "int64_t sub_4153d0(int64_t* arg1, void* arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5, int64_t arg6, int64_t* arg7, char arg8)\n{\n    int64_t r8 = (arg5 + arg4);\n    int64_t* r12 = arg7;\n    int64_t r12_1;\n    if ((arg4 < 0 || (arg4 >= 0 && arg4 > arg3)))\n    {\n        r12_1 = -1;\n    }\n    if ((arg4 >= 0 && arg4 <= arg3))\n    {\n        int32_t var_3c_1;\n        uint32_t rax_1;\n        if ((r8 > arg3 || ((r8 <= arg3 && arg5 >= 0) && arg4 > r8)))\n        {\n            r8 = arg3;\n        label_41543c:\n            rax_1 = arg1[7];\n            uint32_t rcx;\n            rcx = (rax_1 >> 5);\n            var_3c_1 = (rcx & 3);\n            if ((r8 > arg4 && (arg1[4] != 0 && (rax_1 & 8) == 0)))\n            {\n                sub_415300(arg1);\n                rax_1 = arg1[7];\n            }\n        }\n        if (((r8 <= arg3 && (arg5 < 0 || (arg5 >= 0 && arg4 <= r8))) && r8 < 0))\n        {\n        label_4156f8:\n            rax_1 = arg1[7];\n            r8 = 0;\n            uint32_t rcx_7;\n            rcx_7 = (rax_1 >> 5);\n            var_3c_1 = (rcx_7 & 3);\n        }\n        if (((((r8 <= arg3 && (arg5 < 0 || (arg5 >= 0 && arg4 <= r8))) && r8 < 0) || r8 > arg3) || ((r8 <= arg3 && arg5 >= 0) && arg4 > r8)))\n        {\n            uint64_t rdi_1;\n            int64_t r13_1;\n            int64_t r14_1;\n            if ((rax_1 & 0x10) == 0)\n            {\n                if (r12 == 0)\n                {\n                    goto label_415630;\n                }\n                int64_t rcx_1 = arg1[6];\n                if ((rax_1 & 6) == 4)\n                {\n                    r14_1 = *r12;\n                    if (r14_1 > rcx_1)\n                    {\n                        goto label_415483;\n                    }\n                    r13_1 = r14_1;\n                    if (r14_1 <= 0)\n                    {\n                        goto label_415630;\n                    }\n                    goto label_41548d;\n                }\n            label_415483:\n                r14_1 = (rcx_1 + 1);\n                r13_1 = r14_1;\n            label_41548d:\n                rdi_1 = (r14_1 << 4);\n                goto label_4154a0;\n            }\n        label_415630:\n            rdi_1 = 0x10;\n            r14_1 = 1;\n            r13_1 = 1;\n            r12 = nullptr;\n        label_4154a0:\n            int64_t* rax_3 = malloc(rdi_1);\n            if (rax_3 == 0)\n            {\n                r12_1 = -2;\n            }\n            else\n            {\n                int32_t rax_5 = sub_410420(arg1, arg2, arg3, arg4, r8, arg6, r14_1, rax_3, var_3c_1);\n                if (rax_5 == 0)\n                {\n                    if (r12 != 0)\n                    {\n                        int64_t rdx_1 = (r13_1 + 1);\n                        uint32_t rax_7;\n                        rax_7 = (arg1[7] >> 1);\n                        int32_t rax_8 = (rax_7 & 3);\n                        char r9_1;\n                        if (rax_8 == 0)\n                        {\n                            int64_t r14_2 = (rdx_1 << 3);\n                            int64_t rax_15 = malloc(r14_2);\n                            r12[1] = rax_15;\n                            if (rax_15 == 0)\n                            {\n                                goto label_4157c2;\n                            }\n                            int64_t rax_16 = malloc(r14_2);\n                            r12[2] = rax_16;\n                            if (rax_16 == 0)\n                            {\n                                free(rax_15);\n                            label_4157c2:\n                                r9_1 = 0;\n                                goto label_4155d9;\n                            }\n                            *r12 = rdx_1;\n                            r9_1 = 1;\n                        }\n                        else if (rax_8 != 1)\n                        {\n                            if (rax_8 != 2)\n                            {\n                                __assert_fail(\"regs_allocated == REGS_FIXED\", \"lib/regexec.c\", 0x1f8, \"re_copy_regs\");\n                                /* no return */\n                            }\n                            if (r14_1 > *r12)\n                            {\n                                __assert_fail(\"regs->num_regs >= nregs\", \"lib/regexec.c\", 0x1fa, \"re_copy_regs\");\n                                /* no return */\n                            }\n                            r9_1 = 2;\n                        }\n                        else\n                        {\n                            r9_1 = 1;\n                            if (*r12 < rdx_1)\n                            {\n                                int64_t rcx_8 = (rdx_1 << 3);\n                                int64_t var_50_1;\n                                var_50_1 = 1;\n                                int64_t rax_17 = realloc(r12[1], rcx_8);\n                                if (rax_17 == 0)\n                                {\n                                    goto label_4157c2;\n                                }\n                                int64_t rax_18 = realloc(r12[2], rcx_8);\n                                r9_1 = 1;\n                                if (rax_18 == 0)\n                                {\n                                    free(rax_17);\n                                    r9_1 = 0;\n                                label_4155d9:\n                                    char rax_12 = ((arg1[7] & 0xf9) | (r9_1 + r9_1));\n                                    arg1[7] = rax_12;\n                                    if ((rax_12 & 6) != 0)\n                                    {\n                                        goto label_4155ed;\n                                    }\n                                    goto label_4154f0;\n                                }\n                                r12[1] = rax_17;\n                                r12[2] = rax_18;\n                                *r12 = rdx_1;\n                            }\n                        }\n                        int64_t rdx_2;\n                        if (r13_1 <= 0)\n                        {\n                            rdx_2 = 0;\n                            r13_1 = 0;\n                        }\n                        else\n                        {\n                            int64_t* r8_2 = r12[1];\n                            int64_t* rdi_4 = r12[2];\n                            rdx_2 = r13_1;\n                            int64_t rax_9 = 0;\n                            int64_t rsi_3 = (r13_1 << 3);\n                            do\n                            {\n                                *(r8_2 + rax_9) = *(rax_3 + (rax_9 << 1));\n                                *(rdi_4 + rax_9) = *((rax_3 + (rax_9 << 1)) + 8);\n                                rax_9 = (rax_9 + 8);\n                            } while (rax_9 != rsi_3);\n                        }\n                        if (*r12 <= rdx_2)\n                        {\n                            goto label_4155d9;\n                        }\n                        int64_t rsi_4 = r12[2];\n                        int64_t rcx_5 = r12[1];\n                        do\n                        {\n                            r13_1 = (r13_1 + 1);\n                            *(rsi_4 + (rdx_2 << 3)) = -1;\n                            *(rcx_5 + (rdx_2 << 3)) = -1;\n                            rdx_2 = r13_1;\n                        } while (*r12 > r13_1);\n                        goto label_4155d9;\n                    }\n                label_4155ed:\n                    r12_1 = *rax_3;\n                    if (arg8 != 0)\n                    {\n                        if (arg4 != r12_1)\n                        {\n                            __assert_fail(\"pmatch[0].rm_so == start\", \"lib/regexec.c\", 0x1bd, \"re_search_stub\");\n                            /* no return */\n                        }\n                        r12_1 = (rax_3[1] - r12_1);\n                    }\n                    goto label_4154fa;\n                }\n                r12_1 = -1;\n                if (rax_5 == 1)\n                {\n                    goto label_4154fa;\n                }\n            label_4154f0:\n                r12_1 = -2;\n            label_4154fa:\n                free(rax_3);\n            }\n        }\n        if (((r8 <= arg3 && (arg5 < 0 || (arg5 >= 0 && arg4 <= r8))) && r8 >= 0))\n        {\n            if (arg5 >= 0)\n            {\n                goto label_41543c;\n            }\n            if (arg4 > r8)\n            {\n                goto label_41543c;\n            }\n            goto label_4156f8;\n        }\n    }\n    return r12_1;\n}\n\n"
        },
        {
            "funcName": "sub_415830",
            "funcStartAddr": "0x415830",
            "funcEndAddr": "0x41595b",
            "decompiledFuncCode": "int64_t sub_415830(int64_t* arg1, void* arg2, uint64_t arg3, void* arg4, \n    uint64_t arg5, int64_t arg6, int64_t arg7, int64_t* arg8, int64_t arg9, \n    int32_t arg10)\n{\n    void* const r14 = arg4;\n    int64_t rcx = arg6;\n    int64_t rbx_1;\n    if (((arg5 >> 0x3f) | (arg9 >> 0x3f)) != 0)\n    {\n    label_415940:\n        rbx_1 = -2;\n    }\n    else\n    {\n        if (arg3 < 0)\n        {\n            goto label_415940;\n        }\n        uint64_t r15_2 = (arg3 + arg5);\n        if ((arg3 + arg5))\n        {\n            goto label_415940;\n        }\n        void* const r13_1;\n        if (arg5 != 0)\n        {\n            r13_1 = nullptr;\n            if (arg3 == 0)\n            {\n                goto label_4158bb;\n            }\n            void* rax_5 = malloc(r15_2);\n            r13_1 = rax_5;\n            if (rax_5 == 0)\n            {\n                goto label_415940;\n            }\n            memcpy(rax_5, arg2, arg3);\n            memcpy((r13_1 + arg3), r14, arg5);\n            r14 = r13_1;\n            goto label_4158bb;\n        }\n        r14 = arg2;\n        r13_1 = nullptr;\n    label_4158bb:\n        rbx_1 = sub_4153d0(arg1, r14, r15_2, rcx, arg7, arg9, arg8, arg10);\n        free(r13_1);\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_415960",
            "funcStartAddr": "0x415960",
            "funcEndAddr": "0x415a70",
            "decompiledFuncCode": "uint64_t sub_415960(int64_t* arg1, char* arg2, int32_t arg3, int64_t arg4 @ r14)\n{\n    int64_t var_8 = arg4;\n    uint64_t rbx = arg3;\n    *arg1 = 0;\n    int64_t r14_2 = (((arg4 - arg4) & 0xfd4fca) + 0x3b2fc);\n    arg1[1] = 0;\n    arg1[2] = 0;\n    int64_t rax_1 = malloc(0x100);\n    arg1[4] = rax_1;\n    if (rax_1 == 0)\n    {\n        return 0xc;\n    }\n    int32_t rax_2 = 0;\n    int64_t r13_3 = (((rbx << 0x15) & 0x400000) | r14_2);\n    if ((rbx & 4) != 0)\n    {\n        rax_2 = 1;\n        r13_3 = ((r13_3 & 0xffffffffffffffbf) | 0x100);\n    }\n    arg1[5] = 0;\n    arg1[7] = ((((rbx >> 3) & 1) << 4) | ((arg1[7] & 0x6f) | (rax_2 << 7)));\n    int32_t rax_8 = sub_4144d0(arg1, arg2, strlen(arg2), r13_3);\n    int32_t rbx_5 = rax_8;\n    if (rax_8 == 0x10)\n    {\n        rbx_5 = 8;\n    }\n    if ((rax_8 == 0x10 || (rax_8 != 0x10 && rax_8 != 0)))\n    {\n        free(arg1[4]);\n        arg1[4] = 0;\n    }\n    if (rax_8 == 0)\n    {\n        sub_415300(arg1);\n    }\n    return rbx_5;\n}\n\n"
        },
        {
            "funcName": "sub_415a70",
            "funcStartAddr": "0x401bc3",
            "funcEndAddr": "0x415aed",
            "decompiledFuncCode": "uint64_t sub_415a70(int32_t arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    if (arg1 > 0x10)\n    {\n        abort();\n        /* no return */\n    }\n    char* rax = dcgettext(nullptr, &*\"Success\"[*((arg1 << 3) + 0x4191e0)], 5);\n    uint64_t rbx = (strlen(rax) + 1);\n    if (arg4 != 0)\n    {\n        uint64_t rdx = rbx;\n        if (rbx > arg4)\n        {\n            rdx = (arg4 - 1);\n            *((arg3 + arg4) - 1) = 0;\n        }\n        memcpy(arg3, rax, rdx);\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_415af0",
            "funcStartAddr": "0x415af0",
            "funcEndAddr": "0x415b34",
            "decompiledFuncCode": "int64_t sub_415af0(int64_t* arg1)\n{\n    int64_t* rdi = *arg1;\n    if (rdi != 0)\n    {\n        sub_40d0f0(rdi);\n    }\n    *arg1 = 0;\n    int64_t rdi_1 = arg1[4];\n    arg1[1] = 0;\n    free(rdi_1);\n    arg1[4] = 0;\n    int64_t rax = free(arg1[5]);\n    arg1[5] = 0;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_415b40",
            "funcStartAddr": "0x415b40",
            "funcEndAddr": "0x415bd6",
            "decompiledFuncCode": "uint64_t sub_415b40(int64_t* arg1, char* arg2, int64_t arg3, int64_t* arg4, \n    int32_t arg5)\n{\n    if ((arg5 & 0xfffffff8) != 0)\n    {\n        return 2;\n    }\n    int64_t rcx;\n    uint64_t rdx;\n    if ((arg5 & 4) != 0)\n    {\n        rcx = *arg4;\n        rdx = arg4[1];\n    }\n    else\n    {\n        rcx = 0;\n        rdx = strlen(arg2);\n    }\n    int64_t var_48;\n    int64_t* var_40;\n    int32_t var_38;\n    if ((((arg5 & 4) != 0 && (arg1[7] & 0x10) != 0) || ((arg5 & 4) == 0 && (arg1[7] & 0x10) != 0)))\n    {\n        var_38 = arg5;\n        var_40 = nullptr;\n        var_48 = 0;\n    }\n    if ((((arg5 & 4) != 0 && (arg1[7] & 0x10) == 0) || ((arg5 & 4) == 0 && (arg1[7] & 0x10) == 0)))\n    {\n        var_38 = arg5;\n        var_40 = arg4;\n        var_48 = arg3;\n    }\n    int32_t rax_2;\n    rax_2 = sub_410420(arg1, arg2, rdx, rcx, rdx, rdx, var_48, var_40, var_38) != 0;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_415be0",
            "funcStartAddr": "0x415be0",
            "funcEndAddr": "0x415bf8",
            "decompiledFuncCode": "int64_t sub_415be0(int64_t* arg1, void* arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    return sub_4153d0(arg1, arg2, arg3, arg4, 0, arg3, arg5, 1);\n}\n\n"
        },
        {
            "funcName": "sub_415c00",
            "funcStartAddr": "0x415c00",
            "funcEndAddr": "0x415c15",
            "decompiledFuncCode": "int64_t sub_415c00(int64_t* arg1, void* arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5, int64_t* arg6)\n{\n    return sub_4153d0(arg1, arg2, arg3, arg4, arg5, arg3, arg6, 0);\n}\n\n"
        },
        {
            "funcName": "sub_415c20",
            "funcStartAddr": "0x415c20",
            "funcEndAddr": "0x415c3a",
            "decompiledFuncCode": "int64_t sub_415c20(int64_t* arg1, void* arg2, uint64_t arg3, void* arg4, \n    uint64_t arg5, int64_t arg6, int64_t* arg7, int64_t arg8)\n{\n    return sub_415830(arg1, arg2, arg3, arg4, arg5, arg6, 0, arg7, arg8, 1);\n}\n\n"
        },
        {
            "funcName": "sub_415c40",
            "funcStartAddr": "0x415c40",
            "funcEndAddr": "0x415c5c",
            "decompiledFuncCode": "int64_t sub_415c40(int64_t* arg1, void* arg2, uint64_t arg3, void* arg4, \n    uint64_t arg5, int64_t arg6, int64_t arg7, int64_t* arg8, int64_t arg9)\n{\n    return sub_415830(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, 0);\n}\n\n"
        },
        {
            "funcName": "sub_415c60",
            "funcStartAddr": "0x415c60",
            "funcEndAddr": "0x415c9c",
            "decompiledFuncCode": "void sub_415c60(void* arg1, int64_t* arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5)\n{\n    if (arg3 == 0)\n    {\n        *(arg1 + 0x38) = (*(arg1 + 0x38) & 0xf9);\n        *arg2 = 0;\n        arg2[2] = 0;\n        arg2[1] = 0;\n        return;\n    }\n    *(arg1 + 0x38) = ((*(arg1 + 0x38) & 0xfffffff9) | 2);\n    *arg2 = arg3;\n    arg2[1] = arg4;\n    arg2[2] = arg5;\n}\n\n"
        },
        {
            "funcName": "sub_415ca0",
            "funcStartAddr": "0x415ca0",
            "funcEndAddr": "0x415cfd",
            "decompiledFuncCode": "uint64_t sub_415ca0(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_4162d0(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_415d00",
            "funcStartAddr": "0x415d00",
            "funcEndAddr": "0x415d5e",
            "decompiledFuncCode": "int64_t sub_415d00()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_419410;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            void* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_415d60",
            "funcStartAddr": "0x415d60",
            "funcEndAddr": "0x4162c2",
            "decompiledFuncCode": "char* sub_415d60()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_61d498;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_418741[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        uint64_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            uint64_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_415e5c;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_415ea6;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_415e5c:\n            r15 = &data_418741[0x1b];\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_415ea6:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, \"r\");\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_415f5c:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_4160eb;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_415f98:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_415f98;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_415fd2:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_415fd2;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_418741[0x1b];\n                                    free(rdi_26);\n                                    sub_4162d0(rax_12);\n                                    goto label_415ee7;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_4161ab:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_4161ab;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_4161f9:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_4161f9;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_415f5c;\n                        }\n                        break;\n                    }\n                label_4160eb:\n                    sub_4162d0(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_418741[0x1b];\n            }\n        label_415ee7:\n            free(rbp_3);\n        }\n        data_61d498 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_4162d0",
            "funcStartAddr": "0x4162d0",
            "funcEndAddr": "0x41634b",
            "decompiledFuncCode": "int64_t sub_4162d0(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_416350(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_416350",
            "funcStartAddr": "0x416350",
            "funcEndAddr": "0x416390",
            "decompiledFuncCode": "int64_t sub_416350(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_416390(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_416390",
            "funcStartAddr": "0x416390",
            "funcEndAddr": "0x4163e7",
            "decompiledFuncCode": "off64_t sub_416390(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x4163f0",
            "funcEndAddr": "0x41644d",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x416450",
            "funcEndAddr": "0x416451",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_416460",
            "funcStartAddr": "0x416460",
            "funcEndAddr": "0x416478",
            "decompiledFuncCode": "int64_t sub_416460(void (* arg1)(void*))\n{\n    int64_t rdx = data_61d248;\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, rdx);\n}\n\n"
        },
        {
            "funcName": "sub_416478",
            "funcStartAddr": "0x416478",
            "funcEndAddr": "0x416498",
            "decompiledFuncCode": "int64_t sub_416478(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_61ce30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}