{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_dd.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 179,
    "funcInfo": [
        {
            "funcName": "sub_401a90",
            "funcStartAddr": "0x401a90",
            "funcEndAddr": "0x401a9c",
            "decompiledFuncCode": "int64_t sub_401a90()\n{\n    int64_t var_8 = data_614008;\n    /* jump -> data_614010 */\n}\n\n"
        },
        {
            "funcName": "sub_401aa6",
            "funcStartAddr": "0x401aa6",
            "funcEndAddr": "0x401ab0",
            "decompiledFuncCode": "int64_t sub_401aa6()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401ab6",
            "funcStartAddr": "0x401ab6",
            "funcEndAddr": "0x401ac0",
            "decompiledFuncCode": "int64_t sub_401ab6()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401ac6",
            "funcStartAddr": "0x401ac6",
            "funcEndAddr": "0x401ad0",
            "decompiledFuncCode": "int64_t sub_401ac6()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401ad6",
            "funcStartAddr": "0x401ad6",
            "funcEndAddr": "0x401ae0",
            "decompiledFuncCode": "int64_t sub_401ad6()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401ae6",
            "funcStartAddr": "0x401ae6",
            "funcEndAddr": "0x401af0",
            "decompiledFuncCode": "int64_t sub_401ae6()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401b06",
            "funcStartAddr": "0x401b06",
            "funcEndAddr": "0x401b10",
            "decompiledFuncCode": "int64_t sub_401b06()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401b26",
            "funcStartAddr": "0x401b26",
            "funcEndAddr": "0x401b30",
            "decompiledFuncCode": "int64_t sub_401b26()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401b36",
            "funcStartAddr": "0x401b36",
            "funcEndAddr": "0x401b40",
            "decompiledFuncCode": "int64_t sub_401b36()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401b46",
            "funcStartAddr": "0x401b46",
            "funcEndAddr": "0x401b50",
            "decompiledFuncCode": "int64_t sub_401b46()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401b56",
            "funcStartAddr": "0x401b56",
            "funcEndAddr": "0x401b60",
            "decompiledFuncCode": "int64_t sub_401b56()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401b66",
            "funcStartAddr": "0x401b66",
            "funcEndAddr": "0x401b70",
            "decompiledFuncCode": "int64_t sub_401b66()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401b86",
            "funcStartAddr": "0x401b86",
            "funcEndAddr": "0x401b90",
            "decompiledFuncCode": "int64_t sub_401b86()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401ba6",
            "funcStartAddr": "0x401ba6",
            "funcEndAddr": "0x401bb0",
            "decompiledFuncCode": "int64_t sub_401ba6()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401bb6",
            "funcStartAddr": "0x401bb6",
            "funcEndAddr": "0x401bc0",
            "decompiledFuncCode": "int64_t sub_401bb6()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401bc6",
            "funcStartAddr": "0x401bc6",
            "funcEndAddr": "0x401bd0",
            "decompiledFuncCode": "int64_t sub_401bc6()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401bd6",
            "funcStartAddr": "0x401bd6",
            "funcEndAddr": "0x401be0",
            "decompiledFuncCode": "int64_t sub_401bd6()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401be6",
            "funcStartAddr": "0x401be6",
            "funcEndAddr": "0x401bf0",
            "decompiledFuncCode": "int64_t sub_401be6()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401c06",
            "funcStartAddr": "0x401c06",
            "funcEndAddr": "0x401c10",
            "decompiledFuncCode": "int64_t sub_401c06()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401c26",
            "funcStartAddr": "0x401c26",
            "funcEndAddr": "0x401c30",
            "decompiledFuncCode": "int64_t sub_401c26()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401c36",
            "funcStartAddr": "0x401c36",
            "funcEndAddr": "0x401c40",
            "decompiledFuncCode": "int64_t sub_401c36()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401c46",
            "funcStartAddr": "0x401c46",
            "funcEndAddr": "0x401c50",
            "decompiledFuncCode": "int64_t sub_401c46()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401c56",
            "funcStartAddr": "0x401c56",
            "funcEndAddr": "0x401c60",
            "decompiledFuncCode": "int64_t sub_401c56()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401c66",
            "funcStartAddr": "0x401c66",
            "funcEndAddr": "0x401c70",
            "decompiledFuncCode": "int64_t sub_401c66()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401c86",
            "funcStartAddr": "0x401c86",
            "funcEndAddr": "0x401c90",
            "decompiledFuncCode": "int64_t sub_401c86()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401ca6",
            "funcStartAddr": "0x401ca6",
            "funcEndAddr": "0x401cb0",
            "decompiledFuncCode": "int64_t sub_401ca6()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401cb6",
            "funcStartAddr": "0x401cb6",
            "funcEndAddr": "0x401cc0",
            "decompiledFuncCode": "int64_t sub_401cb6()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401cc6",
            "funcStartAddr": "0x401cc6",
            "funcEndAddr": "0x401cd0",
            "decompiledFuncCode": "int64_t sub_401cc6()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401cd6",
            "funcStartAddr": "0x401cd6",
            "funcEndAddr": "0x401ce0",
            "decompiledFuncCode": "int64_t sub_401cd6()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401ce6",
            "funcStartAddr": "0x401ce6",
            "funcEndAddr": "0x401cf0",
            "decompiledFuncCode": "int64_t sub_401ce6()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401d06",
            "funcStartAddr": "0x401d06",
            "funcEndAddr": "0x401d10",
            "decompiledFuncCode": "int64_t sub_401d06()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401d26",
            "funcStartAddr": "0x401d26",
            "funcEndAddr": "0x401d30",
            "decompiledFuncCode": "int64_t sub_401d26()\n{\n    int64_t var_8 = 0x28;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401d36",
            "funcStartAddr": "0x401d36",
            "funcEndAddr": "0x401d40",
            "decompiledFuncCode": "int64_t sub_401d36()\n{\n    int64_t var_8 = 0x29;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401d46",
            "funcStartAddr": "0x401d46",
            "funcEndAddr": "0x401d50",
            "decompiledFuncCode": "int64_t sub_401d46()\n{\n    int64_t var_8 = 0x2a;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401d56",
            "funcStartAddr": "0x401d56",
            "funcEndAddr": "0x401d60",
            "decompiledFuncCode": "int64_t sub_401d56()\n{\n    int64_t var_8 = 0x2b;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401d66",
            "funcStartAddr": "0x401d66",
            "funcEndAddr": "0x401d70",
            "decompiledFuncCode": "int64_t sub_401d66()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401d86",
            "funcStartAddr": "0x401d86",
            "funcEndAddr": "0x401d90",
            "decompiledFuncCode": "int64_t sub_401d86()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401da6",
            "funcStartAddr": "0x401da6",
            "funcEndAddr": "0x401db0",
            "decompiledFuncCode": "int64_t sub_401da6()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401db6",
            "funcStartAddr": "0x401db6",
            "funcEndAddr": "0x401dc0",
            "decompiledFuncCode": "int64_t sub_401db6()\n{\n    int64_t var_8 = 0x31;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401dc6",
            "funcStartAddr": "0x401dc6",
            "funcEndAddr": "0x401dd0",
            "decompiledFuncCode": "int64_t sub_401dc6()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401dd6",
            "funcStartAddr": "0x401dd6",
            "funcEndAddr": "0x401de0",
            "decompiledFuncCode": "int64_t sub_401dd6()\n{\n    int64_t var_8 = 0x33;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401de6",
            "funcStartAddr": "0x401de6",
            "funcEndAddr": "0x401df0",
            "decompiledFuncCode": "int64_t sub_401de6()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401e06",
            "funcStartAddr": "0x401e06",
            "funcEndAddr": "0x401e10",
            "decompiledFuncCode": "int64_t sub_401e06()\n{\n    int64_t var_8 = 0x36;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401e26",
            "funcStartAddr": "0x401e26",
            "funcEndAddr": "0x401e30",
            "decompiledFuncCode": "int64_t sub_401e26()\n{\n    int64_t var_8 = 0x38;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401e36",
            "funcStartAddr": "0x401e36",
            "funcEndAddr": "0x401e40",
            "decompiledFuncCode": "int64_t sub_401e36()\n{\n    int64_t var_8 = 0x39;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401e46",
            "funcStartAddr": "0x401e46",
            "funcEndAddr": "0x401e50",
            "decompiledFuncCode": "int64_t sub_401e46()\n{\n    int64_t var_8 = 0x3a;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401e56",
            "funcStartAddr": "0x401e56",
            "funcEndAddr": "0x401e60",
            "decompiledFuncCode": "int64_t sub_401e56()\n{\n    int64_t var_8 = 0x3b;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401e66",
            "funcStartAddr": "0x401e66",
            "funcEndAddr": "0x401e70",
            "decompiledFuncCode": "int64_t sub_401e66()\n{\n    int64_t var_8 = 0x3c;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401e86",
            "funcStartAddr": "0x401e86",
            "funcEndAddr": "0x401e90",
            "decompiledFuncCode": "int64_t sub_401e86()\n{\n    int64_t var_8 = 0x3e;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401ea6",
            "funcStartAddr": "0x401ea6",
            "funcEndAddr": "0x401eb0",
            "decompiledFuncCode": "int64_t sub_401ea6()\n{\n    int64_t var_8 = 0x40;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401eb6",
            "funcStartAddr": "0x401eb6",
            "funcEndAddr": "0x401ec0",
            "decompiledFuncCode": "int64_t sub_401eb6()\n{\n    int64_t var_8 = 0x41;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401ec6",
            "funcStartAddr": "0x401ec6",
            "funcEndAddr": "0x401ed0",
            "decompiledFuncCode": "int64_t sub_401ec6()\n{\n    int64_t var_8 = 0x42;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401ed6",
            "funcStartAddr": "0x401ed6",
            "funcEndAddr": "0x401ee0",
            "decompiledFuncCode": "int64_t sub_401ed6()\n{\n    int64_t var_8 = 0x43;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401ee6",
            "funcStartAddr": "0x401ee6",
            "funcEndAddr": "0x401ef0",
            "decompiledFuncCode": "int64_t sub_401ee6()\n{\n    int64_t var_8 = 0x44;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401f06",
            "funcStartAddr": "0x401f06",
            "funcEndAddr": "0x401f10",
            "decompiledFuncCode": "int64_t sub_401f06()\n{\n    int64_t var_8 = 0x46;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401f26",
            "funcStartAddr": "0x401f26",
            "funcEndAddr": "0x401f30",
            "decompiledFuncCode": "int64_t sub_401f26()\n{\n    int64_t var_8 = 0x48;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401f36",
            "funcStartAddr": "0x401f36",
            "funcEndAddr": "0x401f40",
            "decompiledFuncCode": "int64_t sub_401f36()\n{\n    int64_t var_8 = 0x49;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401f46",
            "funcStartAddr": "0x401f46",
            "funcEndAddr": "0x401f50",
            "decompiledFuncCode": "int64_t sub_401f46()\n{\n    int64_t var_8 = 0x4a;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401f56",
            "funcStartAddr": "0x401f56",
            "funcEndAddr": "0x401f60",
            "decompiledFuncCode": "int64_t sub_401f56()\n{\n    int64_t var_8 = 0x4b;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401f66",
            "funcStartAddr": "0x401f66",
            "funcEndAddr": "0x401f70",
            "decompiledFuncCode": "int64_t sub_401f66()\n{\n    int64_t var_8 = 0x4c;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "sub_401f86",
            "funcStartAddr": "0x401f86",
            "funcEndAddr": "0x401f90",
            "decompiledFuncCode": "int64_t sub_401f86()\n{\n    int64_t var_8 = 0x4e;\n    /* tailcall */\n    return sub_401a90();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x401fd0",
            "funcEndAddr": "0x403c41",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    char* r15;\n    char* var_8 = r15;\n    int64_t r14;\n    int64_t var_10 = r14;\n    uint64_t rbp = argc;\n    char** rbx = argv;\n    char* r12 = getenv(\"POSIXLY_CORRECT\");\n    sigemptyset(&data_614500);\n    if (r12 == 0)\n    {\n        goto label_403560;\n    }\n    while (true)\n    {\n        int64_t var_d8;\n        sigaction(2, nullptr, &var_d8);\n        if (var_d8 != 1)\n        {\n            sigaddset(&data_614500, 2);\n        }\n        int32_t zmm1 = data_614510;\n        int128_t zmm2 = data_614520;\n        int128_t var_d0_1 = data_614500;\n        int128_t var_a0_1 = data_614530;\n        int128_t var_90_1 = data_614540;\n        int128_t var_80_1 = data_614550;\n        int128_t var_70_1 = data_614560;\n        int128_t var_60_1 = data_614570;\n        if (sigismember(&data_614500, 0xa) != 0)\n        {\n            var_d8 = 0x403d40;\n            int32_t var_50_2 = 0;\n            sigaction(0xa, &var_d8, nullptr);\n        }\n        if (sigismember(&data_614500, 2) != 0)\n        {\n            var_d8 = 0x403d30;\n            int32_t var_50_1 = 0xc0000000;\n            sigaction(2, &var_d8, nullptr);\n        }\n        int64_t rcx_1;\n        int64_t rdx_1;\n        uint64_t r8_1;\n        ssize_t r9_1;\n        rcx_1 = sub_406a10(*rbx);\n        void var_f8;\n        int32_t* var_f0;\n        setlocale(6, &data_410d94[0x1b], rdx_1, rcx_1, r8_1, r9_1, var_f8, var_f0);\n        bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n        textdomain(\"coreutils\");\n        sub_40da80(sub_404720);\n        int64_t var_100_1 = 0;\n        char const* const var_108_1 = \"Stuart Kemp\";\n        char const* const var_110_1 = \"David MacKenzie\";\n        char const* const var_118_1 = \"Paul Rubin\";\n        data_614658 = getpagesize();\n        sub_406900(rbp, rbx, &data_40dc23, \"coreutils\", data_6142c8, sub_405460, 0);\n        data_6142b8 = 0;\n        if (getopt_long(rbp, rbx, &data_410d94[0x1b], &data_40f680, nullptr) != 0xffffffff)\n        {\n            goto label_40391a;\n        }\n        void* rax_6 = nullptr;\n        do\n        {\n            *(rax_6 + 0x6143e0) = rax_6;\n            rax_6 = (rax_6 + 1);\n        } while (rax_6 != 0x100);\n        int32_t rax_7 = data_61433c;\n        uint64_t r13_1;\n        if (rbp <= rax_7)\n        {\n            var_f0 = nullptr;\n            rbp = -1;\n            r13_1 = 0;\n            goto label_402a62;\n        }\n        int64_t rdx_2 = rax_7;\n        r13_1 = 0;\n        r14 = 0;\n        var_f0 = nullptr;\n        uint64_t rax_9 = ((!rax_7) + rbp);\n        r12 = &rbx[rdx_2];\n        rbp = -1;\n        rbx = &rbx[((rax_9 + rdx_2) + 1)];\n    label_4021c8:\n        r15 = *r12;\n        char* rax_11 = strchr(r15, 0x3d);\n        if (rax_11 == 0)\n        {\n        label_403983:\n            sub_408630(r15);\n            sub_4041e0(0, 0, dcgettext(nullptr, \"unrecognized operand %s\", 5), 0);\n        label_40391a:\n            sub_405460(1);\n            /* no return */\n        }\n        void* r8_3 = &rax_11[1];\n        char* rdx_3 = r15;\n        char rax_12 = 0x69;\n        void* const rcx_2 = &data_40dcba;\n        while (true)\n        {\n            rdx_3 = &rdx_3[1];\n            rcx_2 = (rcx_2 + 1);\n            if (rdx_3[-1] != rax_12)\n            {\n                break;\n            }\n            rax_12 = *rcx_2;\n            if (rax_12 == 0)\n            {\n                char rax_13 = *rdx_3;\n                if ((rax_13 == 0 || rax_13 == 0x3d))\n                {\n                    data_614668 = r8_3;\n                    goto label_402226;\n                }\n                break;\n            }\n        }\n        char* rax_81 = r15;\n        char rcx_7 = 0x6f;\n        void* const rdx_44 = &data_40dcbd;\n        while (true)\n        {\n            rax_81 = &rax_81[1];\n            rdx_44 = (rdx_44 + 1);\n            if (rax_81[-1] != rcx_7)\n            {\n                break;\n            }\n            rcx_7 = *rdx_44;\n            if (rcx_7 == 0)\n            {\n                char rax_82 = *rax_81;\n                if ((rax_82 == 0x3d || rax_82 == 0))\n                {\n                    data_614660 = r8_3;\n                    goto label_402226;\n                }\n                break;\n            }\n        }\n        char* rax_83 = r15;\n        char const rcx_8 = 0x63;\n        char const* const rdx_45 = \"conv\";\n        while (true)\n        {\n            rax_83 = &rax_83[1];\n            rdx_45 = &rdx_45[1];\n            if (rax_83[-1] != rcx_8)\n            {\n                break;\n            }\n            rcx_8 = *rdx_45;\n            if (rcx_8 == 0)\n            {\n                char rax_84 = *rax_83;\n                if ((rax_84 == 0 || rax_84 == 0x3d))\n                {\n                    data_61460c = (data_61460c | sub_4059d0(r8_3, \"ascii\", 0, \"invalid conversion\"));\n                    goto label_402226;\n                }\n                break;\n            }\n        }\n        char* rax_86 = r15;\n        char const rcx_9 = 0x69;\n        char const* const rdx_46 = \"iflag\";\n        while (true)\n        {\n            rax_86 = &rax_86[1];\n            rdx_46 = &rdx_46[1];\n            if (rax_86[-1] != rcx_9)\n            {\n                break;\n            }\n            rcx_9 = *rdx_46;\n            if (rcx_9 == 0)\n            {\n                char rax_87 = *rax_86;\n                if ((rax_87 == 0 || rax_87 == 0x3d))\n                {\n                    data_614608 = (data_614608 | sub_4059d0(r8_3, \"append\", 0, \"invalid input flag\"));\n                    goto label_402226;\n                }\n                break;\n            }\n        }\n        char* rax_89 = r15;\n        char const rcx_10 = 0x6f;\n        char const* const rdx_47 = \"oflag\";\n        while (true)\n        {\n            rax_89 = &rax_89[1];\n            rdx_47 = &rdx_47[1];\n            if (rax_89[-1] != rcx_10)\n            {\n                break;\n            }\n            rcx_10 = *rdx_47;\n            if (rcx_10 == 0)\n            {\n                char rax_90 = *rax_89;\n                if ((rax_90 == 0 || rax_90 == 0x3d))\n                {\n                    data_614604 = (data_614604 | sub_4059d0(r8_3, \"append\", 0, \"invalid output flag\"));\n                    goto label_402226;\n                }\n                break;\n            }\n        }\n        char* rax_135 = r15;\n        char const rcx_20 = 0x73;\n        char const* const rdx_79 = \"status\";\n        while (true)\n        {\n            rax_135 = &rax_135[1];\n            rdx_79 = &rdx_79[1];\n            if (rax_135[-1] != rcx_20)\n            {\n                break;\n            }\n            rcx_20 = *rdx_79;\n            if (rcx_20 == 0)\n            {\n                char rax_136 = *rax_135;\n                if ((rax_136 == 0x3d || rax_136 == 0))\n                {\n                    data_6142bc = sub_4059d0(r8_3, \"none\", 1, \"invalid status level\");\n                    goto label_402226;\n                }\n                break;\n            }\n        }\n        void* var_e8 = r8_3;\n        var_d8 = 0;\n        uint64_t rax_168 = sub_4042d0(r8_3, &var_d8);\n        void* r8_9 = var_e8;\n        char* rdx_88 = r15;\n        char rsi_55 = 0x69;\n        void* const rcx_24 = &data_40dcd8;\n        do\n        {\n            rdx_88 = &rdx_88[1];\n            rcx_24 = (rcx_24 + 1);\n            if (rdx_88[-1] != rsi_55)\n            {\n                break;\n            }\n            rsi_55 = *rcx_24;\n        } while (rsi_55 != 0);\n        char rdx_89;\n        if (rdx_88[-1] == rsi_55)\n        {\n            rdx_89 = *rdx_88;\n        }\n        int64_t rdx_92;\n        char* rdx_95;\n        char rdx_96;\n        char* rdx_101;\n        char rdx_102;\n        char rsi_58;\n        char rsi_64;\n        if ((((rdx_88[-1] == rsi_55 && rdx_89 != 0x3d) && rdx_89 != 0) || rdx_88[-1] != rsi_55))\n        {\n            rdx_95 = r15;\n            rsi_58 = 0x6f;\n            void* const rcx_27 = &data_40dcdc;\n            do\n            {\n                rdx_95 = &rdx_95[1];\n                rcx_27 = (rcx_27 + 1);\n                if (rdx_95[-1] != rsi_58)\n                {\n                    break;\n                }\n                rsi_58 = *rcx_27;\n            } while (rsi_58 != 0);\n            if (rdx_95[-1] == rsi_58)\n            {\n                rdx_96 = *rdx_95;\n            }\n            if ((((rdx_95[-1] == rsi_58 && rdx_96 != 0x3d) && rdx_96 != 0) || rdx_95[-1] != rsi_58))\n            {\n                rdx_101 = r15;\n                rsi_64 = 0x62;\n                void* const rcx_31 = &data_40dce1;\n                do\n                {\n                    rdx_101 = &rdx_101[1];\n                    rcx_31 = (rcx_31 + 1);\n                    if (rdx_101[-1] != rsi_64)\n                    {\n                        break;\n                    }\n                    rsi_64 = *rcx_31;\n                } while (rsi_64 != 0);\n                if (rdx_101[-1] == rsi_64)\n                {\n                    rdx_102 = *rdx_101;\n                }\n                if ((((rdx_101[-1] == rsi_64 && rdx_102 != 0x3d) && rdx_102 != 0) || rdx_101[-1] != rsi_64))\n                {\n                    char* rdx_98 = r15;\n                    char rsi_59 = 0x63;\n                    void* const rcx_28 = &data_40dce0;\n                    do\n                    {\n                        rdx_98 = &rdx_98[1];\n                        rcx_28 = (rcx_28 + 1);\n                        if (rdx_98[-1] != rsi_59)\n                        {\n                            break;\n                        }\n                        rsi_59 = *rcx_28;\n                    } while (rsi_59 != 0);\n                    if (rdx_98[-1] == rsi_59)\n                    {\n                        char rdx_99 = *rdx_98;\n                        if ((rdx_99 == 0x3d || rdx_99 == 0))\n                        {\n                            data_614640 = rax_168;\n                            if (rax_168 != 0)\n                            {\n                                goto label_40379a;\n                            }\n                            goto label_403869;\n                        }\n                    }\n                    bool var_dc_1;\n                    char const* const rcx_39;\n                    char* rdx_118;\n                    int64_t rbx_4;\n                    int64_t rbp_6;\n                    char const rsi_74;\n                    while (true)\n                    {\n                        char* rdx_111 = r15;\n                        char const rsi_73 = 0x73;\n                        char const* const rcx_38 = \"skip\";\n                        do\n                        {\n                            rdx_111 = &rdx_111[1];\n                            rcx_38 = &rcx_38[1];\n                            if (rdx_111[-1] != rsi_73)\n                            {\n                                break;\n                            }\n                            rsi_73 = *rcx_38;\n                        } while (rsi_73 != 0);\n                        char rdx_112;\n                        if (rdx_111[-1] == rsi_73)\n                        {\n                            rdx_112 = *rdx_111;\n                        }\n                        if ((((rdx_111[-1] == rsi_73 && rdx_112 != 0x3d) && rdx_112 != 0) || rdx_111[-1] != rsi_73))\n                        {\n                            char* rdx_93 = r15;\n                            char const rsi_57 = 0x73;\n                            char const* const rcx_26 = \"seek\";\n                            do\n                            {\n                                rdx_93 = &rdx_93[1];\n                                rcx_26 = &rcx_26[1];\n                                if (rsi_57 != rdx_93[-1])\n                                {\n                                    break;\n                                }\n                                rsi_57 = *rcx_26;\n                            } while (rsi_57 != 0);\n                            if (rsi_57 == rdx_93[-1])\n                            {\n                                char rdx_94 = *rdx_93;\n                                if ((rdx_94 == 0x3d || rdx_94 == 0))\n                                {\n                                    var_f0 = rax_168;\n                                    goto label_40379a;\n                                }\n                            }\n                        }\n                        if ((rdx_111[-1] == rsi_73 && (rdx_112 == 0x3d || rdx_112 == 0)))\n                        {\n                            r13_1 = rax_168;\n                        label_40379a:\n                            if (var_d8 != 0)\n                            {\n                                break;\n                            }\n                        label_402226:\n                            r12 = &r12[8];\n                            if (rbx != r12)\n                            {\n                                goto label_4021c8;\n                            }\n                            if (r14 != 0)\n                            {\n                                data_614648 = r14;\n                                data_614650 = r14;\n                            }\n                            else\n                            {\n                            label_402a62:\n                                data_61460c = (data_61460c | 0x800);\n                                if (data_614650 == 0)\n                                {\n                                    data_614650 = 0x200;\n                                }\n                                if (data_614648 == 0)\n                                {\n                                    data_614648 = 0x200;\n                                }\n                            }\n                            if (data_614640 == 0)\n                            {\n                                data_61460c = (data_61460c & 0xffffffe7);\n                            }\n                            int32_t rax_14 = data_614608;\n                            if ((rax_14 & 0x101000) != 0)\n                            {\n                                data_614608 = (rax_14 | 0x101000);\n                            }\n                            int32_t rsi_2 = data_614604;\n                            char const* const rsi_63;\n                            if ((rsi_2 & 1) != 0)\n                            {\n                                rsi_63 = \"invalid output flag\";\n                                sub_408630(\"fullblock\");\n                            label_4038fa:\n                                dcgettext(nullptr, rsi_63, 5);\n                                sub_4041e0(0, 0, \"%s: %s\", 0);\n                                goto label_40391a;\n                            }\n                            int32_t rcx_3 = data_614608;\n                            int32_t rax_28;\n                            int32_t rax_30;\n                            int32_t rax_32;\n                            int32_t rbp_1;\n                            if (((rcx_3 & 0x10) == 0 && (rsi_2 & 0xc) == 0))\n                            {\n                                if ((rcx_3 & 8) == 0)\n                                {\n                                    if (r13_1 != 0)\n                                    {\n                                        data_614638 = r13_1;\n                                    }\n                                }\n                                else if (r13_1 != 0)\n                                {\n                                    int64_t rdx_4 = 0;\n                                    int64_t temp2_1 = data_614650;\n                                    data_614638 = (COMBINE(rdx_4, r13_1) / temp2_1);\n                                    data_614630 = (COMBINE(rdx_4, r13_1) % temp2_1);\n                                }\n                                if ((rcx_3 & 4) == 0)\n                                {\n                                    if (rbp != -1)\n                                    {\n                                        data_6142c0 = rbp;\n                                    }\n                                }\n                                else if (rbp != -1)\n                                {\n                                    int64_t rdx_6 = 0;\n                                    int64_t temp2_2 = data_614650;\n                                    data_6142c0 = (COMBINE(rdx_6, rbp) / temp2_2);\n                                    data_614610 = (COMBINE(rdx_6, rbp) % temp2_2);\n                                }\n                                if ((rsi_2 & 0x10) == 0)\n                                {\n                                    if (var_f0 != 0)\n                                    {\n                                        data_614628 = var_f0;\n                                    }\n                                }\n                                else if (var_f0 != 0)\n                                {\n                                    int64_t rdx_8 = 0;\n                                    int64_t temp2_3 = data_614648;\n                                    data_614628 = (COMBINE(rdx_8, var_f0) / temp2_3);\n                                    data_614620 = (COMBINE(rdx_8, var_f0) % temp2_3);\n                                }\n                                rbp_1 = data_61460c;\n                                int32_t rax_23 = (rcx_3 & 1);\n                                int64_t rax_24;\n                                if (((rbp_1 & 0x800) | rax_23) != 0)\n                                {\n                                    rax_24 = 0x404a10;\n                                    data_6145a8 = 0;\n                                    if (rax_23 == 0)\n                                    {\n                                        rax_24 = 0x404900;\n                                    }\n                                }\n                                else\n                                {\n                                    if (((data_614638 != 0 || (data_614638 == 0 && (data_6142c0 - 1) <= -3)) || ((data_614638 == 0 && (data_6142c0 - 1) > -3) && (*(rsi_2 | rcx_3)[1] & 0x40) != 0)))\n                                    {\n                                        data_6145a8 = 1;\n                                        rax_24 = 0x404900;\n                                    }\n                                    if (((data_614638 == 0 && (data_6142c0 - 1) > -3) && (*(rsi_2 | rcx_3)[1] & 0x40) == 0))\n                                    {\n                                        data_6145a8 = 0;\n                                        rax_24 = 0x404900;\n                                    }\n                                }\n                                data_6144e0 = rax_24;\n                                data_614608 = (rcx_3 & 0xfffffffe);\n                                rax_28 = (rbp_1 & 7);\n                                if (((rax_28 - 1) & rax_28) != 0)\n                                {\n                                    sub_4041e0(1, 0, dcgettext(nullptr, \"cannot combine any two of {ascii\u2026\", 5), 0);\n                                }\n                                else\n                                {\n                                    rax_30 = (rbp_1 & 0x18);\n                                    if (((rax_30 - 1) & rax_30) != 0)\n                                    {\n                                        sub_4041e0(1, 0, dcgettext(nullptr, \"cannot combine block and unblock\", 5), 0);\n                                    }\n                                    else\n                                    {\n                                        rax_32 = (rbp_1 & 0x60);\n                                    }\n                                    if ((((rax_30 - 1) & rax_30) != 0 || (((rax_30 - 1) & rax_30) == 0 && ((rax_32 - 1) & rax_32) != 0)))\n                                    {\n                                        sub_4041e0(1, 0, dcgettext(nullptr, \"cannot combine lcase and ucase\", 5), 0);\n                                    }\n                                }\n                            }\n                            if ((((((rcx_3 & 0x10) == 0 && (rsi_2 & 0xc) == 0) && ((rax_28 - 1) & rax_28) == 0) && (((rax_30 - 1) & rax_30) != 0 || (((rax_30 - 1) & rax_30) == 0 && ((rax_32 - 1) & rax_32) != 0))) || (rcx_3 & 0x10) != 0))\n                            {\n                                sub_408630(\"seek_bytes\");\n                                rsi_63 = \"invalid input flag\";\n                                goto label_4038fa;\n                            }\n                            if ((rcx_3 & 0x10) == 0)\n                            {\n                                if ((rsi_2 & 0xc) != 0)\n                                {\n                                    rsi_2 = (rsi_2 & 4);\n                                    char const* const rdi_30 = \"count_bytes\";\n                                    if (rsi_2 == 0)\n                                    {\n                                        rdi_30 = \"skip_bytes\";\n                                    }\n                                    sub_408630(rdi_30);\n                                    rsi_63 = \"invalid output flag\";\n                                    goto label_4038fa;\n                                }\n                                if (((((rax_28 - 1) & rax_28) == 0 && ((rax_30 - 1) & rax_30) == 0) && ((rax_32 - 1) & rax_32) == 0))\n                                {\n                                    int32_t rax_34 = (rbp_1 & 0x3000);\n                                    if (((rax_34 - 1) & rax_34) == 0)\n                                    {\n                                        int32_t rax_36 = (rcx_3 & 0x4002);\n                                        int32_t rdx_18 = (rsi_2 & 0x4002);\n                                        rbx = (((rax_36 - 1) & rax_36) | ((rdx_18 - 1) & rdx_18));\n                                        var_dc_1 = rbx;\n                                        if (rbx == 0)\n                                        {\n                                            if ((rcx_3 & 2) != 0)\n                                            {\n                                                bool cond:4_1 = (data_6142c0 | data_614610) == 0;\n                                                data_6144eb = 1;\n                                                data_6144e9 = cond:4_1;\n                                                data_614608 = (rcx_3 & 0xfffffffc);\n                                            }\n                                            if ((rsi_2 & 2) != 0)\n                                            {\n                                                bool cond:5_1 = (data_6142c0 | data_614610) == 0;\n                                                data_6144ea = 1;\n                                                data_6144e8 = cond:5_1;\n                                                data_614604 = (rsi_2 & 0xfffffffd);\n                                            }\n                                            if ((rbp_1 & 1) != 0)\n                                            {\n                                                char* rax_43 = &data_6143e0;\n                                            label_402430:\n                                                uint64_t rdx_19 = *rax_43;\n                                                rax_43 = &rax_43[1];\n                                                rax_43[-1] = *(rdx_19 + 0x40f0e0);\n                                                if (0x6144e0 != rax_43)\n                                                {\n                                                    goto label_402430;\n                                                }\n                                                data_614600 = 1;\n                                            }\n                                            if (((rbp_1 & 0x40) == 0 && (rbp_1 & 0x20) != 0))\n                                            {\n                                                int32_t* rsi_36 = *__ctype_tolower_loc();\n                                                char* rax_120 = &data_6143e0;\n                                            label_403030:\n                                                uint64_t rdx_68 = *rax_120;\n                                                rax_120 = &rax_120[1];\n                                                rax_120[-1] = rsi_36[rdx_68];\n                                                if (0x6144e0 != rax_120)\n                                                {\n                                                    goto label_403030;\n                                                }\n                                            }\n                                            if ((rbp_1 & 0x40) != 0)\n                                            {\n                                                int32_t* rsi_4 = *__ctype_toupper_loc();\n                                                char* rax_45 = &data_6143e0;\n                                            label_402470:\n                                                uint64_t rdx_21 = *rax_45;\n                                                rax_45 = &rax_45[1];\n                                                rax_45[-1] = rsi_4[rdx_21];\n                                                if (0x6144e0 != rax_45)\n                                                {\n                                                    goto label_402470;\n                                                }\n                                            }\n                                            if (((rbp_1 & 0x40) != 0 || ((rbp_1 & 0x40) == 0 && (rbp_1 & 0x20) != 0)))\n                                            {\n                                                data_614600 = 1;\n                                            }\n                                            if ((rbp_1 & 2) == 0)\n                                            {\n                                                rbp_1 = (rbp_1 & 4);\n                                                if (rbp_1 != 0)\n                                                {\n                                                    char* rax_118 = &data_6143e0;\n                                                label_402fe0:\n                                                    uint64_t rdx_66 = *rax_118;\n                                                    rax_118 = &rax_118[1];\n                                                    rax_118[-1] = *(rdx_66 + 0x40f1e0);\n                                                    if (rax_118 != 0x6144e0)\n                                                    {\n                                                        goto label_402fe0;\n                                                    }\n                                                }\n                                            }\n                                            else\n                                            {\n                                                char* rax_46 = &data_6143e0;\n                                            label_4024a0:\n                                                uint64_t rdx_23 = *rax_46;\n                                                rax_46 = &rax_46[1];\n                                                rax_46[-1] = *(rdx_23 + 0x40f2e0);\n                                                if (0x6144e0 != rax_46)\n                                                {\n                                                    goto label_4024a0;\n                                                }\n                                            }\n                                            if ((((rbp_1 & 2) == 0 && rbp_1 != 0) || (rbp_1 & 2) != 0))\n                                            {\n                                                data_614600 = 1;\n                                                data_6142ba = 0x25;\n                                                data_6142b9 = 0x40;\n                                            }\n                                            rbp = data_614668;\n                                            r12 = data_614608;\n                                            var_f0 = __errno_location();\n                                            if (rbp == 0)\n                                            {\n                                                char* rax_134 = dcgettext(nullptr, \"standard input\", 5);\n                                                data_614668 = rax_134;\n                                                sub_4043e0(0, r12, rax_134);\n                                            }\n                                            else if (sub_4048b0(0, rbp, r12, 0) < 0)\n                                            {\n                                                sub_4083e0(4, data_614668);\n                                                sub_4041e0(1, *var_f0, dcgettext(nullptr, \"failed to open %s\", 5), 0);\n                                            label_403a3c:\n                                                sub_4083e0(4, data_614660);\n                                                sub_4041e0(1, *var_f0, dcgettext(nullptr, \"failed to open %s\", 5), 0);\n                                            label_403a91:\n                                                sub_4041e0(1, 0, dcgettext(nullptr, \"offset too large: cannot truncat\u2026\", 5), 0);\n                                            label_403ab3:\n                                                rbx = sub_4083e0(4, data_614660);\n                                                rax_168 = sub_4041e0(1, *var_f0, dcgettext(nullptr, \"cannot fstat %s\", 5), 0);\n                                                continue;\n                                            }\n                                            off64_t rax_49 = lseek(0, 0, 1);\n                                            int64_t rsi_6 = data_614660;\n                                            r12 = data_614604;\n                                            data_6145bc = ((!rax_49) >> 0x3f);\n                                            if (rax_49 < 0)\n                                            {\n                                                rax_49 = 0;\n                                            }\n                                            data_6145b0 = rax_49;\n                                            data_6145b8 = *var_f0;\n                                            if (rsi_6 == 0)\n                                            {\n                                                char* rax_159 = dcgettext(nullptr, \"standard output\", 5);\n                                                data_614660 = rax_159;\n                                                sub_4043e0(1, r12, rax_159);\n                                            label_40260d:\n                                                int64_t rax_60 = sub_405c40();\n                                                rbp_6 = data_614638;\n                                                int64_t r12_3 = data_614630;\n                                                data_6145d0 = rax_60;\n                                                data_6145c8 = (rax_60 + 0x3b9aca00);\n                                                if ((rbp_6 | r12_3) != 0)\n                                                {\n                                                    int64_t r15_1 = data_614650;\n                                                    int64_t r14_1 = data_6145b0;\n                                                    uint64_t rax_64 = sub_405150(0, data_614668, rbp_6, r15_1, &data_614630);\n                                                    if (rax_64 == 0)\n                                                    {\n                                                        rbp_6 = (rbp_6 * r15_1);\n                                                    }\n                                                    if (((rax_64 != 0 || ((rax_64 == 0 && ((r12_3 + r14_1) + rbp_6) != data_6145b0) && data_6145a9 != 1)) && data_6142bc != 1))\n                                                    {\n                                                        rbp_6 = sub_4084b0(0, 3, data_614668);\n                                                        sub_4041e0(0, 0, dcgettext(nullptr, \"%s: cannot skip to specified off\u2026\", 5), 0);\n                                                    }\n                                                }\n                                                int64_t rdx_36 = data_614628;\n                                                int64_t rax_67 = data_614620;\n                                                rbx_4 = (rdx_36 | rax_67);\n                                                if (rbx_4 == 0)\n                                                {\n                                                    break;\n                                                }\n                                                var_d8 = rax_67;\n                                                uint64_t rax_68 = sub_405150(1, data_614660, rdx_36, data_614648, &var_d8);\n                                                rbp_6 = rax_68;\n                                                if (rax_68 != 0)\n                                                {\n                                                    memset(data_614590, 0, data_614648);\n                                                    break;\n                                                }\n                                                int64_t rdx_77 = var_d8;\n                                                if (rdx_77 == 0)\n                                                {\n                                                    break;\n                                                }\n                                                memset(data_614590, 0, rdx_77);\n                                                rbp_6 = var_d8;\n                                                break;\n                                            }\n                                            int32_t rax_52 = data_61460c;\n                                            int32_t rdx_29;\n                                            rdx_29 = (*rax_52[1] & 0x10) == 0;\n                                            rbp = ((((rax_52 >> 6) & 0x80) | r12) | (rdx_29 << 6));\n                                            int32_t rax_121;\n                                            if (data_614628 != 0)\n                                            {\n                                                rax_121 = sub_4048b0(1, rsi_6, (rbp | 2), 0x1b6);\n                                            }\n                                            else\n                                            {\n                                                int32_t rax_53 = (rax_52 & 0x200);\n                                                rbp = (rbp | ((rax_53 - rax_53) & 0x200));\n                                            }\n                                            if (((data_614628 == 0 || (data_614628 != 0 && rax_121 < 0)) && sub_4048b0(1, data_614660, (rbp | 1), 0x1b6) < 0))\n                                            {\n                                                goto label_403a3c;\n                                            }\n                                            rbp = data_614628;\n                                            if (rbp == 0)\n                                            {\n                                                goto label_40260d;\n                                            }\n                                            if ((*(data_61460c + 1) & 2) != 0)\n                                            {\n                                                goto label_40260d;\n                                            }\n                                            r14 = data_614648;\n                                            r12 = ((rbp * r14) + data_614620);\n                                            if (rbp > (COMBINE(0, 0x7fffffffffffffff) / r14))\n                                            {\n                                                goto label_403a91;\n                                            }\n                                            if (sub_404bf0() == 0)\n                                            {\n                                                goto label_40260d;\n                                            }\n                                            rbp = *var_f0;\n                                            if (__fxstat(1, 1, &var_d8) != 0)\n                                            {\n                                                goto label_403ab3;\n                                            }\n                                            if ((((zmm1 & 0xf000) - 0x4000) & 0xffffb000) == 0)\n                                            {\n                                                rbx = sub_4083e0(4, data_614660);\n                                                sub_4041e0(1, rbp, dcgettext(nullptr, \"failed to truncate to %lu bytes \u2026\", 5), 0);\n                                                break;\n                                            }\n                                            goto label_40260d;\n                                        }\n                                        goto label_403bfd;\n                                    }\n                                }\n                                if ((((rax_28 - 1) & rax_28) != 0 || ((((rax_28 - 1) & rax_28) == 0 && ((rax_30 - 1) & rax_30) == 0) && ((rax_32 - 1) & rax_32) == 0)))\n                                {\n                                    sub_4041e0(1, 0, dcgettext(nullptr, \"cannot combine excl and nocreat\", 5), 0);\n                                label_403bfd:\n                                    rax_168 = sub_4041e0(1, 0, dcgettext(nullptr, \"cannot combine direct and nocach\u2026\", 5), 0);\n                                }\n                            }\n                        }\n                        rdx_118 = r15;\n                        rsi_74 = 0x63;\n                        rcx_39 = \"count\";\n                        break;\n                    }\n                    if (((!/* if (not(unimplemented  {cmp byte [rdx-0x1], sil}) && unimplemented  {cmp byte [rdx-0x1], sil})... */) && /* if (not(unimplemented  {cmp byte [rdx-0x1], sil}) && unimplemented  {cmp byte [rdx-0x1], sil})... */))\n                    {\n                    label_4026f0:\n                        int64_t r12_4 = data_614648;\n                        if (r12_4 != sub_404c30(data_614590, r12_4))\n                        {\n                        label_4039be:\n                            sub_4083e0(4, data_614660);\n                            sub_4041e0(0, *var_f0, dcgettext(nullptr, \"writing to %s\", 5), 0);\n                            sub_404e30();\n                            /* no return */\n                        }\n                        int64_t temp3_1 = rbp_6;\n                        rbp_6 = (rbp_6 - 1);\n                        if (temp3_1 != 1)\n                        {\n                            goto label_4026f0;\n                        }\n                        rbp_6 = var_d8;\n                        if (rbp_6 == 0)\n                        {\n                            goto label_40273e;\n                        }\n                    }\n                    if ((/* if (unimplemented  {cmp byte [rdx-0x1], sil} || (not(unimplemented  {cmp byte [rdx-0x1], sil}) && unimplemented  {cmp byte [rdx-0x1], sil}))... */ || ((!/* if (unimplemented  {cmp byte [rdx-0x1], sil} || (not(unimplemented  {cmp byte [rdx-0x1], sil}) && unimplemented  {cmp byte [rdx-0x1], sil}))... */) && /* if (unimplemented  {cmp byte [rdx-0x1], sil} || (not(unimplemented  {cmp byte [rdx-0x1], sil}) && unimplemented  {cmp byte [rdx-0x1], sil}))... */)))\n                    {\n                        if (sub_404c30(data_614590, rbp_6) != rbp_6)\n                        {\n                            goto label_4039be;\n                        }\n                    label_40273e:\n                        int64_t rax_72 = (data_6142c0 | data_614610);\n                        if (rax_72 == 0)\n                        {\n                            var_e8 = 0;\n                        }\n                        else\n                        {\n                            if (data_614598 != 0)\n                            {\n                                goto label_402759;\n                            }\n                            rax_72 = sub_404a80();\n                        label_402759:\n                            sub_404ba0(rax_72, rbx_4, rbp_6);\n                            var_e8 = 0;\n                            int64_t r12_5 = 0;\n                        label_402770:\n                            if (data_6142bc == 4)\n                            {\n                            label_4028f1:\n                                int64_t rax_80 = sub_405c40();\n                                if (rax_80 < data_6145c8)\n                                {\n                                    goto label_40277d;\n                                }\n                                sub_403d50(rax_80);\n                                data_6145c8 = (data_6145c8 + 0x3b9aca00);\n                                goto label_40277d;\n                            }\n                        label_40277d:\n                            int64_t rbx_5 = data_614610;\n                            int64_t r15_2 = data_6142c0;\n                            int64_t rbp_8 = (data_6145e0 + data_6145e8);\n                            int32_t rsi_12 = data_61460c;\n                            int64_t rax_73;\n                            rax_73 = rbx_5 != 0;\n                            if (rbp_8 < (rax_73 + r15_2))\n                            {\n                                int64_t r9_2 = data_614598;\n                                if ((rsi_12 & 0x500) != 0x500)\n                                {\n                                    goto label_4027e5;\n                                }\n                                int32_t rsi_13 = (rsi_12 & 0x18);\n                                int64_t rdx_38 = data_614650;\n                                if (rsi_13 == 0)\n                                {\n                                    goto label_4027e2;\n                                }\n                                rsi_13 = 0x20;\n                            label_4027e2:\n                                r9_2 = memset(r9_2, rsi_13, rdx_38);\n                            label_4027e5:\n                                int64_t rax_78 = data_6144e0;\n                                int64_t rax_79;\n                                bool cond:11_1;\n                                if (rbp_8 >= r15_2)\n                                {\n                                    rax_79 = rax_78(0, r9_2, rbx_5);\n                                    cond:11_1 = rax_79 == 0;\n                                    if (rax_79 > 0)\n                                    {\n                                        goto label_40280b;\n                                    }\n                                    goto label_402b57;\n                                }\n                                rax_79 = rax_78(0, r9_2, data_614650);\n                                cond:11_1 = rax_79 == 0;\n                                int64_t rbp_9;\n                                int64_t r15_3;\n                                if (rax_79 > 0)\n                                {\n                                label_40280b:\n                                    bool c_2 = (rax_79 + data_6145b0) < rax_79;\n                                    r15_3 = rax_79;\n                                    data_6145b0 = (rax_79 + data_6145b0);\n                                    if (c_2)\n                                    {\n                                        data_6145a9 = 1;\n                                    }\n                                    if (data_6144eb == 0)\n                                    {\n                                        goto label_402832;\n                                    }\n                                    sub_4045a0(0, rax_79);\n                                label_402832:\n                                    rbp_9 = data_614650;\n                                    if (rbp_9 <= r15_3)\n                                    {\n                                    label_402c78:\n                                        data_6145e0 = (data_6145e0 + 1);\n                                        r12_5 = 0;\n                                    label_402890:\n                                        char* rbx_6 = data_614598;\n                                        int64_t rdi_11 = data_614590;\n                                        if (rbx_6 == rdi_11)\n                                        {\n                                            int64_t rax_106 = sub_404c30(rbx_6, r15_3);\n                                            data_6145d8 = (data_6145d8 + rax_106);\n                                            if (rax_106 != r15_3)\n                                            {\n                                                goto label_402f07;\n                                            }\n                                            if (data_614650 == r15_3)\n                                            {\n                                                data_6145f0 = (data_6145f0 + 1);\n                                                goto label_402770;\n                                            }\n                                            data_6145f8 = (data_6145f8 + 1);\n                                            goto label_402770;\n                                        }\n                                        if (data_614600 == 0)\n                                        {\n                                        label_4028b4:\n                                            int32_t r8_5 = data_61460c;\n                                            if ((r8_5 & 0x80) != 0)\n                                            {\n                                                char* rax_101;\n                                                if (data_6143c1 != 0)\n                                                {\n                                                    char rdx_64 = data_6143c0;\n                                                    rax_101 = &rbx_6[-1];\n                                                    r15_3 = (r15_3 + 1);\n                                                    data_6143c1 = 0;\n                                                    rbx_6[-1] = rdx_64;\n                                                }\n                                                else\n                                                {\n                                                    rax_101 = rbx_6;\n                                                    rbx_6 = &rbx_6[1];\n                                                }\n                                                void* rax_102;\n                                                if ((r15_3 & 1) == 0)\n                                                {\n                                                    rax_102 = &rax_101[r15_3];\n                                                    goto label_402cc4;\n                                                }\n                                                r15_3 = (r15_3 - 1);\n                                                data_6143c1 = 1;\n                                                rax_102 = &rax_101[r15_3];\n                                                data_6143c0 = *rax_102;\n                                            label_402cc4:\n                                                uint64_t rdx_56 = (r15_3 >> 1);\n                                                void* rsi_28 = (rax_102 + ((-rdx_56) << 1));\n                                                if (rdx_56 != 0)\n                                                {\n                                                label_402ce0:\n                                                    char rdx_57 = *(rax_102 - 2);\n                                                    rax_102 = (rax_102 - 2);\n                                                    *(rax_102 + 2) = rdx_57;\n                                                    if (rax_102 != rsi_28)\n                                                    {\n                                                        goto label_402ce0;\n                                                    }\n                                                }\n                                            }\n                                            if ((r8_5 & 8) != 0)\n                                            {\n                                                sub_404ef0(rbx_6, r15_3);\n                                                goto label_402770;\n                                            }\n                                            if ((r8_5 & 0x10) != 0)\n                                            {\n                                                sub_405000(rbx_6, r15_3);\n                                                if (data_6142bc != 4)\n                                                {\n                                                    goto label_40277d;\n                                                }\n                                                goto label_4028f1;\n                                            }\n                                        label_402ab5:\n                                            int64_t r14_2 = data_614648;\n                                            int64_t r13_2 = data_614588;\n                                            char* rsi_18 = rbx_6;\n                                            int64_t rbp_11 = (r14_2 - r13_2);\n                                            if (rbp_11 <= r15_3)\n                                            {\n                                                goto label_402ad9;\n                                            }\n                                            rbp_11 = r15_3;\n                                        label_402ad9:\n                                            r15_3 = (r15_3 - rbp_11);\n                                            rbx_6 = &rbx_6[rbp_11];\n                                            int64_t rbp_12 = (rbp_11 + r13_2);\n                                            memcpy((rdi_11 + r13_2), rsi_18, rbp_11);\n                                            data_614588 = rbp_12;\n                                            if (r14_2 <= rbp_12)\n                                            {\n                                                sub_404e50();\n                                            }\n                                            if (r15_3 == 0)\n                                            {\n                                                goto label_402770;\n                                            }\n                                            rdi_11 = data_614590;\n                                            goto label_402ab5;\n                                        }\n                                        if (r15_3 == 0)\n                                        {\n                                            goto label_4028b4;\n                                        }\n                                        void* rsi_31 = &rbx_6[r15_3];\n                                        char* rax_105 = rbx_6;\n                                    label_402d80:\n                                        uint64_t rdx_59 = *rax_105;\n                                        rax_105 = &rax_105[1];\n                                        rax_105[-1] = *(rdx_59 + 0x6143e0);\n                                        if (rax_105 != rsi_31)\n                                        {\n                                            goto label_402d80;\n                                        }\n                                        goto label_4028b4;\n                                    }\n                                label_402842:\n                                    int32_t rsi_15 = data_61460c;\n                                    data_6145e8 = (data_6145e8 + 1);\n                                    r12_5 = r15_3;\n                                    if ((rsi_15 & 0x400) == 0)\n                                    {\n                                        goto label_402890;\n                                    }\n                                    if ((rsi_15 & 0x100) != 0)\n                                    {\n                                        r15_3 = rbp_9;\n                                        goto label_402890;\n                                    }\n                                    int64_t rdx_43 = (rbp_9 - r15_3);\n                                    int32_t rsi_16 = (rsi_15 & 0x18);\n                                    if (rsi_16 == 0)\n                                    {\n                                        goto label_40287e;\n                                    }\n                                    rsi_16 = 0x20;\n                                label_40287e:\n                                    r12_5 = r15_3;\n                                    int64_t rdi_10 = (data_614598 + r15_3);\n                                    r15_3 = rbp_9;\n                                    memset(rdi_10, rsi_16, rdx_43);\n                                    goto label_402890;\n                                }\n                            label_402b57:\n                                rsi_12 = data_61460c;\n                                if (cond:11_1)\n                                {\n                                    data_6144e9 = (data_6144e9 | data_6144eb);\n                                    char rax_123 = data_6144e8;\n                                    if (data_6144ea == 0)\n                                    {\n                                        goto label_40309a;\n                                    }\n                                    var_dc_1 = (rsi_12 & 0x200) == 0;\n                                label_40309a:\n                                    data_6144e8 = (var_dc_1 | rax_123);\n                                    data_6144e8 = (data_6144e8 & 1);\n                                }\n                                else\n                                {\n                                    if ((rsi_12 & 0x100) != 0)\n                                    {\n                                        if (data_6142bc != 1)\n                                        {\n                                            goto label_402b80;\n                                        }\n                                    label_402bc1:\n                                        sub_4040b0();\n                                        int64_t rbp_15 = (data_614650 - r12_5);\n                                        sub_4045a0(0, rbp_15);\n                                        if (data_6145bc != 0)\n                                        {\n                                            int64_t rbx_9 = (rbp_15 + data_6145b0);\n                                            bool c_3 = (rbp_15 + data_6145b0) < rbp_15;\n                                            data_6145b0 = rbx_9;\n                                            if ((!c_3))\n                                            {\n                                                char temp10_1 = (data_6145a9 | (rbx_9 >> 0x3f));\n                                                data_6145a9 = temp10_1;\n                                                if (temp10_1 != 0)\n                                                {\n                                                    goto label_402d3a;\n                                                }\n                                                off64_t rax_109 = lseek(0, 0, 1);\n                                                if (rax_109 < 0)\n                                                {\n                                                    goto label_402c07;\n                                                }\n                                                if (rax_109 != rbx_9)\n                                                {\n                                                    int64_t rbx_10 = (rbx_9 - rax_109);\n                                                    if (((rbx_9 - rax_109) >= 0 && rbp_15 >= rbx_10))\n                                                    {\n                                                        goto label_402e26;\n                                                    }\n                                                    if (data_6142bc == 1)\n                                                    {\n                                                        goto label_402e26;\n                                                    }\n                                                    sub_4041e0(0, 0, dcgettext(nullptr, \"warning: invalid file offset aft\u2026\", 5), 0);\n                                                label_402e26:\n                                                    if (sub_4044d0(data_614668, 0, rbx_10, 1) < 0)\n                                                    {\n                                                        if (*var_f0 != 0)\n                                                        {\n                                                            goto label_402c07;\n                                                        }\n                                                        sub_4041e0(0, 0, dcgettext(nullptr, \"cannot work around kernel bug af\u2026\", 5), 0);\n                                                        goto label_402c07;\n                                                    }\n                                                }\n                                            }\n                                            else\n                                            {\n                                                data_6145a9 = 1;\n                                            label_402d3a:\n                                                sub_4083e0(4, data_614668);\n                                                sub_4041e0(0, 0, dcgettext(nullptr, \"offset overflow while reading fi\u2026\", 5), 0);\n                                            label_402c36:\n                                                data_6145bc = 0;\n                                                data_6145b8 = 0x1d;\n                                                var_e8 = 1;\n                                            }\n                                        }\n                                        else\n                                        {\n                                            int32_t rax_97 = data_6145b8;\n                                            if (rax_97 != 0x1d)\n                                            {\n                                                *var_f0 = rax_97;\n                                            label_402c07:\n                                                sub_4084b0(0, 3, data_614668);\n                                                sub_4041e0(0, *var_f0, dcgettext(nullptr, \"%s: cannot seek\", 5), 0);\n                                                goto label_402c36;\n                                            }\n                                        }\n                                        if ((*(data_61460c + 1) & 4) == 0)\n                                        {\n                                            goto label_402770;\n                                        }\n                                        if (r12_5 != 0)\n                                        {\n                                            goto label_402770;\n                                        }\n                                        rbp_9 = data_614650;\n                                        r15_3 = 0;\n                                        if (rbp_9 <= 0)\n                                        {\n                                            goto label_402c78;\n                                        }\n                                        goto label_402842;\n                                    }\n                                label_402b80:\n                                    sub_4083e0(4, data_614668);\n                                    sub_4041e0(0, *var_f0, dcgettext(nullptr, \"error reading %s\", 5), 0);\n                                    rsi_12 = data_61460c;\n                                    if ((rsi_12 & 0x100) != 0)\n                                    {\n                                        goto label_402bc1;\n                                    }\n                                    var_e8 = 1;\n                                }\n                            }\n                            if (data_6143c1 != 0)\n                            {\n                                if ((rsi_12 & 8) != 0)\n                                {\n                                    sub_404ef0(&data_6143c0, 1);\n                                    rsi_12 = data_61460c;\n                                }\n                                else\n                                {\n                                    rsi_12 = (rsi_12 & 0x10);\n                                    if (rsi_12 != 0)\n                                    {\n                                        sub_405000(&data_6143c0, 1);\n                                        rsi_12 = data_61460c;\n                                    }\n                                    else\n                                    {\n                                        int64_t rdx_72 = data_614588;\n                                        char* rcx_16 = data_614590;\n                                        char rsi_37 = data_6143c0;\n                                        bool cond:10_1 = (rdx_72 + 1) >= data_614648;\n                                        data_614588 = (rdx_72 + 1);\n                                        rcx_16[rdx_72] = rsi_37;\n                                        if ((!cond:10_1))\n                                        {\n                                            goto label_403101;\n                                        }\n                                        sub_404e50();\n                                        rsi_12 = data_61460c;\n                                    }\n                                }\n                            }\n                            if ((rsi_12 & 8) != 0)\n                            {\n                                int64_t rbx_15 = data_614580;\n                                if (rbx_15 == 0)\n                                {\n                                    goto label_403140;\n                                }\n                                if (data_614640 <= rbx_15)\n                                {\n                                    goto label_403109;\n                                }\n                            label_403209:\n                                int64_t rdx_74 = data_614588;\n                                int64_t rcx_18 = data_614590;\n                                char rsi_42 = data_6142b9;\n                                bool cond:13_1 = (rdx_74 + 1) < data_614648;\n                                data_614588 = (rdx_74 + 1);\n                                *(rcx_18 + rdx_74) = rsi_42;\n                                if (cond:13_1)\n                                {\n                                    goto label_4031f8;\n                                }\n                                sub_404e50();\n                            label_4031f8:\n                                rbx_15 = (rbx_15 + 1);\n                                if (rbx_15 < data_614640)\n                                {\n                                    goto label_403209;\n                                }\n                                goto label_403101;\n                            }\n                        label_403101:\n                            rsi_12 = data_61460c;\n                            if (data_614580 == 0)\n                            {\n                                goto label_403140;\n                            }\n                        label_403109:\n                            rsi_12 = (rsi_12 & 0x10);\n                            if (rsi_12 == 0)\n                            {\n                                goto label_403140;\n                            }\n                            int64_t rdx_73 = data_614588;\n                            char* rcx_17 = data_614590;\n                            char rsi_38 = data_6142ba;\n                            bool cond:12_1 = (rdx_73 + 1) >= data_614648;\n                            data_614588 = (rdx_73 + 1);\n                            rcx_17[rdx_73] = rsi_38;\n                            if ((!cond:12_1))\n                            {\n                                goto label_403140;\n                            }\n                        label_403754:\n                            sub_404e50();\n                        label_403140:\n                            int64_t rsi_39 = data_614588;\n                            char const* const rsi_34;\n                            if (rsi_39 != 0)\n                            {\n                                int64_t rax_113 = sub_404c30(data_614590, rsi_39);\n                                data_6145d8 = (data_6145d8 + rax_113);\n                                if (rax_113 != 0)\n                                {\n                                    data_6145f8 = (data_6145f8 + 1);\n                                }\n                                if (rax_113 != data_614588)\n                                {\n                                label_402f07:\n                                    rsi_34 = \"error writing %s\";\n                                    sub_4083e0(4, data_614660);\n                                    goto label_402f27;\n                                }\n                            }\n                            if (data_614618 != 0)\n                            {\n                                if (__fxstat(1, 1, &var_d8) == 0)\n                                {\n                                    if ((zmm1 & 0xf000) != 0x8000)\n                                    {\n                                        goto label_40315d;\n                                    }\n                                    off64_t rax_163 = lseek(1, 0, 1);\n                                    if (rax_163 < 0)\n                                    {\n                                        goto label_40315d;\n                                    }\n                                    if (rax_163 <= *zmm2[8])\n                                    {\n                                        goto label_40315d;\n                                    }\n                                    if (sub_404bf0() == 0)\n                                    {\n                                        goto label_40315d;\n                                    }\n                                    sub_4083e0(4, data_614660);\n                                    sub_4041e0(0, *var_f0, dcgettext(nullptr, \"failed to truncate to %ld bytes \u2026\", 5), 0);\n                                    goto label_402f2c;\n                                }\n                                rsi_34 = \"cannot fstat %s\";\n                                sub_4083e0(4, data_614660);\n                            label_402f27:\n                                sub_4041e0(0, *var_f0, dcgettext(nullptr, rsi_34, 5), 0);\n                            label_402f2c:\n                                var_e8 = 1;\n                            }\n                            else\n                            {\n                            label_40315d:\n                                int32_t rsi_47 = data_61460c;\n                                if ((rsi_47 & 0x4000) != 0)\n                                {\n                                    rsi_47 = data_61460c;\n                                    if (fdatasync(1) != 0)\n                                    {\n                                        int32_t rax_145 = *var_f0;\n                                        int32_t var_dc_2 = rax_145;\n                                        if (((rax_145 - 0x16) & 0xffffffef) != 0)\n                                        {\n                                            sub_4083e0(4, data_614660);\n                                            sub_4041e0(0, *var_f0, dcgettext(nullptr, \"fdatasync failed for %s\", 5), 0);\n                                            var_e8 = 1;\n                                        }\n                                        data_61460c = (data_61460c | 0x8000);\n                                        goto label_40319a;\n                                    }\n                                }\n                                if ((rsi_47 & 0x8000) != 0)\n                                {\n                                label_40319a:\n                                    int32_t rax_126;\n                                    do\n                                    {\n                                        rax_126 = fsync(1);\n                                        if (rax_126 == 0)\n                                        {\n                                            break;\n                                        }\n                                    } while (*var_f0 == 4);\n                                    if (rax_126 != 0)\n                                    {\n                                        sub_4083e0(4, data_614660);\n                                        rsi_34 = \"fsync failed for %s\";\n                                        goto label_402f27;\n                                    }\n                                }\n                            }\n                            if ((data_6142c0 != 0 || (data_6142c0 == 0 && data_614610 != 0)))\n                            {\n                                if (data_6144eb != 0)\n                                {\n                                label_402f58:\n                                    sub_4045a0(0, 0);\n                                }\n                                else if (data_6144e9 != 0)\n                                {\n                                    goto label_402f58;\n                                }\n                                if (data_6144ea != 0)\n                                {\n                                label_402f76:\n                                    sub_4045a0(1, 0);\n                                label_402f7b:\n                                    sub_404760();\n                                    sub_4040b0();\n                                    sub_404810();\n                                    return var_e8;\n                                }\n                                if (data_6144e8 == 0)\n                                {\n                                    goto label_402f7b;\n                                }\n                                goto label_402f76;\n                            }\n                        }\n                        if ((data_6144eb != 0 && sub_4045a0(0, 0) == 0))\n                        {\n                            sub_4084b0(0, 3, data_614668);\n                            sub_4041e0(0, *var_f0, dcgettext(nullptr, \"failed to discard cache for: %s\", 5), 0);\n                            var_e8 = 1;\n                        }\n                        if (data_6144ea == 0)\n                        {\n                            goto label_402f7b;\n                        }\n                        if (sub_4045a0(1, 0) == 0)\n                        {\n                            sub_4084b0(0, 3, data_614660);\n                            sub_4041e0(0, *var_f0, dcgettext(nullptr, \"failed to discard cache for: %s\", 5), 0);\n                            var_e8 = 1;\n                        }\n                        goto label_402f7b;\n                    }\n                    if (((!/* if (not(unimplemented  {cmp byte [rdx-0x1], sil}) && not(unimplemented  {cmp byte [rdx-0x1], sil}))... */) && (!/* if (not(unimplemented  {cmp byte [rdx-0x1], sil}) && not(unimplemented  {cmp byte [rdx-0x1], sil}))... */)))\n                    {\n                        if ((/* if (unimplemented  {cmp byte [rdx-0x1], sil} && rbx_4 == 0)... */ && rbx_4 == 0))\n                        {\n                            goto label_40273e;\n                        }\n                        if (/* if (unimplemented  {cmp byte [rdx-0x1], sil})... */)\n                        {\n                            while (true)\n                            {\n                                rdx_118 = &rdx_118[1];\n                                rcx_39 = &rcx_39[1];\n                                if (rdx_118[-1] != rsi_74)\n                                {\n                                    break;\n                                }\n                                rsi_74 = *rcx_39;\n                                if (rsi_74 == 0)\n                                {\n                                    char rdx_119 = *rdx_118;\n                                    if ((rdx_119 == 0x3d || rdx_119 == 0))\n                                    {\n                                        rbp = rax_168;\n                                        goto label_40379a;\n                                    }\n                                    break;\n                                }\n                            }\n                            goto label_403983;\n                        }\n                        if ((!/* if (not(unimplemented  {cmp byte [rdx-0x1], sil}))... */))\n                        {\n                            goto label_403712;\n                        }\n                    }\n                }\n                if ((rdx_101[-1] == rsi_64 && (rdx_102 == 0x3d || rdx_102 == 0)))\n                {\n                    r14 = rax_168;\n                    rdx_92 = (-((data_614658 + 2) + (data_614658 + 2)));\n                    if (rdx_92 > 0x7fffffffffffffff)\n                    {\n                        rdx_92 = 0x7fffffffffffffff;\n                    }\n                }\n            }\n            if ((rdx_95[-1] == rsi_58 && (rdx_96 == 0x3d || rdx_96 == 0)))\n            {\n                int64_t rdx_97 = data_614658;\n                data_614648 = rax_168;\n                rdx_92 = (-rdx_97);\n                if (rdx_92 > 0x7fffffffffffffff)\n                {\n                    rdx_92 = 0x7fffffffffffffff;\n                }\n            }\n        }\n        if ((rdx_88[-1] == rsi_55 && (rdx_89 == 0x3d || rdx_89 == 0)))\n        {\n            int64_t rdi_26 = data_614658;\n            data_614650 = rax_168;\n            rdx_92 = (-((rdi_26 + 2) + (rdi_26 + 2)));\n            if (rdx_92 > 0x7fffffffffffffff)\n            {\n                rdx_92 = 0x7fffffffffffffff;\n            }\n        }\n        if ((((rdx_88[-1] == rsi_55 && (rdx_89 == 0x3d || rdx_89 == 0)) || (((((rdx_88[-1] == rsi_55 && rdx_89 != 0x3d) && rdx_89 != 0) || rdx_88[-1] != rsi_55) && rdx_95[-1] == rsi_58) && (rdx_96 == 0x3d || rdx_96 == 0))) || ((((((rdx_88[-1] == rsi_55 && rdx_89 != 0x3d) && rdx_89 != 0) || rdx_88[-1] != rsi_55) && (((rdx_95[-1] == rsi_58 && rdx_96 != 0x3d) && rdx_96 != 0) || rdx_95[-1] != rsi_58)) && rdx_101[-1] == rsi_64) && (rdx_102 == 0x3d || rdx_102 == 0))))\n        {\n            if (rax_168 == 0)\n            {\n            label_403869:\n                var_d8 = 4;\n            label_403712:\n                sub_408630(r8_9);\n                dcgettext(nullptr, \"invalid number\", 5);\n                int32_t rsi_56 = 0x4b;\n                if (var_d8 != 1)\n                {\n                    rsi_56 = 0;\n                }\n                sub_4041e0(1, rsi_56, \"%s: %s\", 0);\n                goto label_403754;\n            }\n            if (rax_168 <= rdx_92)\n            {\n                goto label_40379a;\n            }\n            var_d8 = 1;\n            goto label_403712;\n        }\n    label_403560:\n        sigaddset(&data_614500, 0xa);\n    }\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x403c50",
            "funcEndAddr": "0x403c7a",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_403c7b",
            "funcStartAddr": "0x403c7b",
            "funcEndAddr": "0x403c9a",
            "decompiledFuncCode": "void sub_403c7b()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_403c9a",
            "funcStartAddr": "0x403c9a",
            "funcEndAddr": "0x403cd1",
            "decompiledFuncCode": "int64_t sub_403c9a()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_403cd1",
            "funcStartAddr": "0x403cd1",
            "funcEndAddr": "0x403d28",
            "decompiledFuncCode": "void sub_403cd1()\n{\n    if (data_614388 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_614390;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_614390 = (rax_1 + 1);\n        *(0x613e40 + ((rax_1 + 1) << 3))();\n    }\n    sub_403c7b();\n    data_614388 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_403d28",
            "funcStartAddr": "0x403d28",
            "funcEndAddr": "0x403d2d",
            "decompiledFuncCode": "int64_t j_sub_403c9a()\n{\n    /* tailcall */\n    return sub_403c9a();\n}\n\n"
        },
        {
            "funcName": "sub_403d30",
            "funcStartAddr": "0x403d30",
            "funcEndAddr": "0x403d37",
            "decompiledFuncCode": "int64_t sub_403d30(int32_t arg1)\n{\n    data_6144f0 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_403d40",
            "funcStartAddr": "0x403d40",
            "funcEndAddr": "0x403d50",
            "decompiledFuncCode": "uint64_t sub_403d40()\n{\n    uint64_t rax = (data_6144ec + 1);\n    data_6144ec = rax;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_403d50",
            "funcStartAddr": "0x403d50",
            "funcEndAddr": "0x4040a7",
            "decompiledFuncCode": "char* sub_403d50(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    if (arg1 == 0)\n    {\n        rbx = sub_405c40();\n    }\n    void var_7d8;\n    char* rax_1;\n    int80_t st0;\n    st0 = sub_405d70(data_6145d8, &var_7d8, 0x1d1, 1, 1);\n    void var_54a;\n    char* rax_2;\n    int80_t st0_1;\n    st0_1 = sub_405d70(data_6145d8, &var_54a, 0x1f1, 1, 1);\n    int64_t rax_3 = data_6145d0;\n    char* rbx_2;\n    double zmm0;\n    void var_2bc;\n    if (rax_3 >= rbx)\n    {\n        rbx_2 = &var_2bc;\n        __snprintf_chk(&var_2bc, 0x28e, 1, 0x28e, \"%s B/s\", dcgettext(nullptr, \"Infinity\", 5));\n        zmm0 = 0;\n    }\n    else\n    {\n        int64_t rbx_1 = (rbx - rax_3);\n        if ((rbx - rax_3) < 0)\n        {\n            zmm0 = ((rbx_1 >> 1) | (rbx_1 & 1));\n            zmm0 = (zmm0 + zmm0);\n        }\n        else\n        {\n            zmm0 = rbx_1;\n        }\n        zmm0 = (zmm0 / 1000000000.0);\n        char* rax_4;\n        int80_t st0_2;\n        st0_2 = sub_405d70(data_6145d8, &var_2bc, 0x1d1, 0x3b9aca00, rbx_1);\n        rbx_2 = rax_4;\n        uint64_t rax_5 = strlen(rax_4);\n        *(rbx_2 + rax_5) = 0x732f;\n        rbx_2[(rax_5 + 2)] = 0;\n    }\n    char const* const r8_2 = \"%g s\";\n    if (arg1 != 0)\n    {\n        uint64_t* const rdi_4 = stderr;\n        char* rax_6 = stderr[5];\n        if (rax_6 >= stderr[6])\n        {\n            double var_800_2 = zmm0;\n            __overflow(rdi_4, 0xd);\n            r8_2 = \"%.0f s\";\n        }\n        else\n        {\n            r8_2 = \"%.0f s\";\n            stderr[5] = &rax_6[1];\n            *rax_6 = 0xd;\n        }\n    }\n    void var_7f8;\n    __snprintf_chk(&var_7f8, 0x18, 1, 0x18, r8_2);\n    char* rax_13;\n    int32_t rbx_3;\n    if (rax_1[(strlen(rax_1) - 2)] == 0x20)\n    {\n        uint64_t r12_1 = data_6145d8;\n        rax_13 = __fprintf_chk(stderr, 1, dcngettext(nullptr, \"%lu byte copied, %s, %s\", \"%lu bytes copied, %s, %s\", r12_1, 5), r12_1, &var_7f8, rbx_2);\n        rbx_3 = rax_13;\n    }\n    else\n    {\n        int64_t r14_1 = data_6145d8;\n        char* var_818_1;\n        char* var_810;\n        char* rax_10;\n        char* r9_1;\n        if (rax_2[(strlen(rax_2) - 2)] == 0x20)\n        {\n            rax_10 = dcgettext(nullptr, \"%lu bytes (%s) copied, %s, %s\", 5);\n            var_818_1 = rbx_2;\n            r9_1 = &var_7f8;\n        }\n        else\n        {\n            rax_10 = dcgettext(nullptr, \"%lu bytes (%s, %s) copied, %s, %\u2026\", 5);\n            var_810 = rbx_2;\n            r9_1 = rax_2;\n            var_818_1 = &var_7f8;\n        }\n        rbx_3 = __fprintf_chk(stderr, 1, rax_10, r14_1, rax_1, r9_1, var_818_1, var_810);\n        rax_13 = var_818_1;\n    }\n    if (arg1 == 0)\n    {\n        FILE* rdi_9 = stderr;\n        char* rax_17 = stderr[5];\n        if (rax_17 < stderr[6])\n        {\n            stderr[5] = &rax_17[1];\n            *rax_17 = 0xa;\n            return rax_17;\n        }\n        rax_13 = __overflow(rdi_9, 0xa);\n    }\n    else\n    {\n        if (rbx_3 >= 0)\n        {\n            int32_t rcx_1 = data_6145c0;\n            if (rcx_1 > rbx_3)\n            {\n                rax_13 = __fprintf_chk(stderr, 1, &data_40db4f, (rcx_1 - rbx_3), 0x410daf);\n            }\n        }\n        data_6145c0 = rbx_3;\n    }\n    return rax_13;\n}\n\n"
        },
        {
            "funcName": "sub_4040b0",
            "funcStartAddr": "0x4040b0",
            "funcEndAddr": "0x4041d7",
            "decompiledFuncCode": "void sub_4040b0()\n{\n    if (data_6142bc == 1)\n    {\n        return;\n    }\n    if (data_6145c0 > 0)\n    {\n        uint64_t* const rdi_1 = stderr;\n        char* rax_1 = stderr[5];\n        if (rax_1 >= stderr[6])\n        {\n            __overflow(rdi_1, 0xa);\n        }\n        else\n        {\n            stderr[5] = &rax_1[1];\n            *rax_1 = 0xa;\n        }\n        data_6145c0 = 0;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%lu+%lu records in\\n%lu+%lu reco\u2026\", 5), data_6145e0, data_6145e8, data_6145f0, data_6145f8);\n    int64_t rbx_1 = data_6145a0;\n    if (rbx_1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcngettext(nullptr, \"%lu truncated record\\n\", \"%lu truncated records\\n\", rbx_1, 5), rbx_1);\n    }\n    if (data_6142bc == 2)\n    {\n        return;\n    }\n    /* tailcall */\n    return sub_403d50(0);\n}\n\n"
        },
        {
            "funcName": "sub_4041e0",
            "funcStartAddr": "0x4041e0",
            "funcEndAddr": "0x4042c6",
            "decompiledFuncCode": "int64_t sub_4041e0(int32_t arg1, int32_t arg2, char* arg3, char arg4 @ rax)\n{\n    int64_t rcx;\n    int64_t var_b0 = rcx;\n    int64_t r8;\n    int64_t var_a8 = r8;\n    int64_t r9;\n    int64_t var_a0 = r9;\n    if (arg4 != 0)\n    {\n        int128_t zmm0;\n        int128_t var_98_1 = zmm0;\n        int128_t zmm1;\n        int128_t var_88_1 = zmm1;\n        int128_t zmm2;\n        int128_t var_78_1 = zmm2;\n        int128_t zmm3;\n        int128_t var_68_1 = zmm3;\n        int128_t zmm4;\n        int128_t var_58_1 = zmm4;\n        int128_t zmm5;\n        int128_t var_48_1 = zmm5;\n        int128_t zmm6;\n        int128_t var_38_1 = zmm6;\n        int128_t zmm7;\n        int128_t var_28_1 = zmm7;\n    }\n    if (data_6145c0 > 0)\n    {\n        uint64_t* const rdi = stderr;\n        char* rax_1 = stderr[5];\n        if (rax_1 >= stderr[6])\n        {\n            __overflow(rdi, 0xa);\n        }\n        else\n        {\n            stderr[5] = &rax_1[1];\n            *rax_1 = 0xa;\n        }\n        data_6145c0 = 0;\n    }\n    void* var_d8 = &arg_8;\n    int32_t var_e0 = 0x18;\n    int32_t var_dc = 0x30;\n    void var_c8;\n    void* var_d0 = &var_c8;\n    return sub_408710(arg1, arg2, arg3, &var_e0);\n}\n\n"
        },
        {
            "funcName": "sub_4042d0",
            "funcStartAddr": "0x4042d0",
            "funcEndAddr": "0x4043e0",
            "decompiledFuncCode": "uint64_t sub_4042d0(char* arg1, int32_t* arg2)\n{\n    uint64_t var_28;\n    char* var_20;\n    int32_t rax = sub_408f50(arg1, &var_20, 0xa, &var_28, \"bcEGkKMPTwYZ0\");\n    uint64_t rax_1;\n    char* rdi;\n    if (rax == 2)\n    {\n        rdi = var_20;\n        if (*rdi == 0x78)\n        {\n            int64_t rax_3 = sub_4042d0(&rdi[1], arg2);\n            uint64_t rax_4;\n            uint64_t rcx_2;\n            if (rax_3 != 0)\n            {\n                rcx_2 = var_28;\n                rax_4 = (COMBINE(0, (rcx_2 * rax_3)) / rax_3);\n                if (rcx_2 != rax_4)\n                {\n                    *arg2 = 1;\n                    rax_1 = 0;\n                }\n            }\n            else\n            {\n                rax_4 = var_28;\n            }\n            if ((rax_3 == 0 || (rax_3 != 0 && rcx_2 == rax_4)))\n            {\n                bool c_1 = false;\n                bool z_1 = (rax_4 & rax_4) == 0;\n                if (z_1)\n                {\n                    void* const rdi_2 = &data_40db8f;\n                    int64_t rcx_1 = 2;\n                    char* rsi_2 = arg1;\n                    while (rcx_1 != 0)\n                    {\n                        char temp3_1 = *rsi_2;\n                        char temp4_1 = *rdi_2;\n                        c_1 = temp3_1 < temp4_1;\n                        z_1 = temp3_1 == temp4_1;\n                        rsi_2 = &rsi_2[1];\n                        rdi_2 = (rdi_2 + 1);\n                        rcx_1 = (rcx_1 - 1);\n                        if ((!z_1))\n                        {\n                            break;\n                        }\n                    }\n                    if ((((!z_1) && (!c_1)) - 0) == 0)\n                    {\n                        sub_408610(1, &data_40db8e);\n                        sub_408610(0, &data_40db8f);\n                        sub_4041e0(0, 0, dcgettext(nullptr, \"warning: %s is a zero multiplier\u2026\", 5), 0);\n                        rax_4 = var_28;\n                    }\n                }\n                rax_1 = (rax_4 * rax_3);\n            }\n        }\n    }\n    else\n    {\n        rax_1 = var_28;\n    }\n    if (((rax == 2 && *rdi != 0x78) || (rax != 2 && rax != 0)))\n    {\n        *arg2 = rax;\n        return 0;\n    }\n    if ((rax == 0 || (rax == 2 && *rdi == 0x78)))\n    {\n        return rax_1;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4043e0",
            "funcStartAddr": "0x4043e0",
            "funcEndAddr": "0x4044c2",
            "decompiledFuncCode": "void sub_4043e0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    int32_t rbx_1 = (arg2 & 0xfffdfeff);\n    if (rbx_1 != 0)\n    {\n        uint64_t rax = sub_4095d0(arg1, 3, arg3);\n        uint64_t rbp_1 = rax;\n        uint64_t rbx_2 = (rbx_1 | rax);\n        if (rax < 0)\n        {\n            goto label_40448b;\n        }\n        if (rax != rbx_2)\n        {\n            if ((rbx_2 & 0x10000) != 0)\n            {\n                void var_b8;\n                if (__fxstat(1, arg1, &var_b8) != 0)\n                {\n                    goto label_40448b;\n                }\n                int32_t var_a0;\n                if ((var_a0 & 0xf000) == 0x4000)\n                {\n                    goto label_4044af;\n                }\n                *__errno_location() = 0x14;\n                goto label_40448b;\n            }\n            while (true)\n            {\n                if (sub_4095d0(arg1, 4, rbx_2) != 0xffffffff)\n                {\n                    return;\n                }\n            label_40448b:\n                rbp_1 = sub_4083e0(4, arg3);\n                rbx_2 = dcgettext(nullptr, \"setting flags for %s\", 5);\n                sub_4041e0(1, *__errno_location(), rbx_2, 0);\n            label_4044af:\n                rbx_2 = (rbx_2 & 0xfffeffff);\n                if (rbx_2 == rbp_1)\n                {\n                    return;\n                }\n            }\n        }\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4044d0",
            "funcStartAddr": "0x4044d0",
            "funcEndAddr": "0x40459e",
            "decompiledFuncCode": "off64_t sub_4044d0(int64_t arg1, int32_t arg2, int64_t arg3, int32_t arg4)\n{\n    void var_88;\n    int32_t rax_1 = ioctl(arg2, 0x80306d02, &var_88);\n    off64_t rax_2 = lseek(arg2, arg3, arg4);\n    off64_t rbp_1 = rax_2;\n    int64_t var_80;\n    int64_t var_60;\n    int64_t var_58;\n    int64_t var_50;\n    int64_t var_30;\n    if (((rax_2 >= 0 && rax_1 == 0) && (ioctl(arg2, 0x80306d02, &var_58) == 0 && (var_80 == var_50 && var_60 == var_30))))\n    {\n        if (data_6142bc != 1)\n        {\n            sub_4041e0(0, 0, dcgettext(nullptr, \"warning: working around lseek ke\u2026\", 5), 0);\n        }\n        rbp_1 = -1;\n        *__errno_location() = 0;\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_4045a0",
            "funcStartAddr": "0x4045a0",
            "funcEndAddr": "0x404718",
            "decompiledFuncCode": "uint64_t sub_4045a0(int32_t arg1, int64_t arg2)\n{\n    int64_t* rax;\n    char r15;\n    if (arg1 != 0)\n    {\n        r15 = data_6144e8;\n        rax = &data_6143a0;\n    }\n    else\n    {\n        r15 = data_6144e9;\n        rax = &data_6143a8;\n    }\n    off64_t rbx = *rax;\n    uint32_t r12;\n    int64_t rbp_1;\n    int32_t r13_1;\n    uint64_t r14_2;\n    if (arg2 != 0)\n    {\n        int64_t rbx_1 = (rbx + arg2);\n        r14_2 = (rbx_1 & 0x1ffff);\n        *rax = r14_2;\n        if (rbx_1 > r14_2)\n        {\n            rbx = (rbx_1 - r14_2);\n            if (rbx_1 == r14_2)\n            {\n                goto label_4045e0;\n            }\n            rbp_1 = arg2;\n            r13_1 = arg1;\n            if (arg1 != 0)\n            {\n                goto label_40464f;\n            }\n            goto label_404617;\n        }\n    label_4045e0:\n        r12 = 1;\n    }\n    else\n    {\n        if ((rbx == 0 && r15 == 0))\n        {\n            goto label_4045e0;\n        }\n        r14_2 = 0;\n        rbp_1 = arg2;\n        r13_1 = arg1;\n        int64_t rsi;\n        if (arg1 != 0)\n        {\n        label_40464f:\n            rsi = data_6142b0;\n            r12 = 0;\n            if (rsi != -1)\n            {\n                if (rsi < 0)\n                {\n                    int64_t rax_6 = lseek(1, 0, 1);\n                    rsi = rax_6;\n                    data_6142b0 = rax_6;\n                label_40467b:\n                    r12 = 0;\n                    if (rsi >= 0)\n                    {\n                        goto label_404687;\n                    }\n                }\n                else\n                {\n                    if (rbp_1 != 0)\n                    {\n                        rsi = (rsi + (r14_2 + rbx));\n                        data_6142b0 = rsi;\n                        goto label_40467b;\n                    }\n                label_404687:\n                    int64_t rsi_1 = (rsi - rbx);\n                    if ((rbp_1 != 0 || (rbp_1 == 0 && rbx == 0)))\n                    {\n                        rsi_1 = (rsi_1 - r14_2);\n                        if (rbx == 0)\n                        {\n                        label_4046e5:\n                            rbx = 0;\n                            rsi_1 = (rsi_1 - (COMBINE(0, rsi_1) % data_614658));\n                        }\n                    }\n                    if ((rbp_1 == 0 && rbx != 0))\n                    {\n                        if (r15 != 0)\n                        {\n                            goto label_4046e5;\n                        }\n                        rsi_1 = (rsi_1 - r14_2);\n                    }\n                    r12 = posix_fadvise(r13_1, rsi_1, rbx, 4) != 0xffffffff;\n                }\n            }\n        }\n        else\n        {\n        label_404617:\n            r12 = data_6145bc;\n            rsi = data_6145b0;\n            if (r12 != 0)\n            {\n                goto label_40467b;\n            }\n            *__errno_location() = 0x1d;\n        }\n    }\n    return r12;\n}\n\n"
        },
        {
            "funcName": "sub_404720",
            "funcStartAddr": "0x404720",
            "funcEndAddr": "0x404753",
            "decompiledFuncCode": "void sub_404720(void* arg1)\n{\n    if (data_6142b8 != 0)\n    {\n        /* tailcall */\n        return sub_405b30();\n    }\n    if (sub_405ab0(stderr) != 0)\n    {\n        _exit(1);\n        /* no return */\n    }\n}\n\n"
        },
        {
            "funcName": "sub_404760",
            "funcStartAddr": "0x404760",
            "funcEndAddr": "0x404810",
            "decompiledFuncCode": "int64_t sub_404760()\n{\n    if (close(0) < 0)\n    {\n        sub_4083e0(4, data_614668);\n        sub_4041e0(1, *__errno_location(), dcgettext(nullptr, \"closing input file %s\", 5), 0);\n    }\n    else\n    {\n        int64_t rax_1 = close(1);\n        if (rax_1 >= 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_4083e0(4, data_614660);\n    sub_4041e0(1, *__errno_location(), dcgettext(nullptr, \"closing output file %s\", 5), 0);\n    /* tailcall */\n    return sub_404810();\n}\n\n"
        },
        {
            "funcName": "sub_404810",
            "funcStartAddr": "0x404810",
            "funcEndAddr": "0x4048a1",
            "decompiledFuncCode": "uint64_t sub_404810()\n{\n    if (data_6144f0 == 0)\n    {\n        uint64_t rax = data_6144ec;\n        if (rax == 0)\n        {\n            return rax;\n        }\n    }\n    uint64_t rax_4;\n    while (true)\n    {\n        void var_88;\n        sigprocmask(0, &data_614500, &var_88);\n        int32_t rbx_1 = data_6144f0;\n        int32_t rax_1 = data_6144ec;\n        if (rax_1 != 0)\n        {\n            data_6144ec = (rax_1 - 1);\n        }\n        sigprocmask(2, &var_88, nullptr);\n        if (rbx_1 != 0)\n        {\n            sub_404760();\n            sub_4040b0();\n            raise(rbx_1);\n        }\n        else\n        {\n            sub_4040b0();\n        }\n        if (data_6144f0 == 0)\n        {\n            rax_4 = data_6144ec;\n            if (rax_4 == 0)\n            {\n                break;\n            }\n        }\n    }\n    return rax_4;\n}\n\n"
        },
        {
            "funcName": "sub_4048b0",
            "funcStartAddr": "0x4048b0",
            "funcEndAddr": "0x4048f8",
            "decompiledFuncCode": "uint64_t sub_4048b0(int32_t arg1, char* arg2, int32_t arg3, int32_t arg4)\n{\n    int32_t rax_2;\n    int32_t* rax_1;\n    do\n    {\n        sub_404810();\n        rax_2 = sub_405bd0(arg1, arg2, arg3, arg4);\n        if (rax_2 >= 0)\n        {\n            break;\n        }\n        rax_1 = __errno_location();\n    } while (*rax_1 == 4);\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_404900",
            "funcStartAddr": "0x404900",
            "funcEndAddr": "0x404a0a",
            "decompiledFuncCode": "ssize_t sub_404900(int32_t arg1, int64_t arg2, uint64_t arg3)\n{\n    ssize_t rbx_1;\n    while (true)\n    {\n        sub_404810();\n        ssize_t rax_2 = read(arg1, arg2, arg3);\n        rbx_1 = rax_2;\n        int32_t rdx;\n        if ((rax_2 != -1 && rax_2 < 0))\n        {\n            rdx = *__errno_location();\n        }\n        if (rax_2 == -1)\n        {\n            int32_t* rax_3 = __errno_location();\n            rdx = *rax_3;\n            if (rdx == 0x16)\n            {\n                int64_t rdx_2 = data_6143b8;\n                if ((rdx_2 > 0 && (rdx_2 < arg3 && (*(data_614608 + 1) & 0x40) != 0)))\n                {\n                    *rax_3 = 0;\n                    rbx_1 = 0;\n                }\n                break;\n            }\n        }\n        if ((((rax_2 != -1 && rax_2 < 0) || rax_2 == -1) && rdx == 4))\n        {\n            continue;\n        }\n        if ((rbx_1 > 0 && rbx_1 < arg3))\n        {\n            sub_404810();\n        }\n        if (((rbx_1 <= 0 || (rbx_1 > 0 && rbx_1 >= arg3)) && rbx_1 <= 0))\n        {\n            break;\n        }\n        if (data_6145a8 == 0)\n        {\n            break;\n        }\n        uint64_t r12_1 = data_6143b8;\n        if ((r12_1 > 0 && r12_1 < arg3))\n        {\n            if (data_6142bc != 1)\n            {\n                sub_4041e0(0, 0, dcngettext(nullptr, \"warning: partial read (%lu byte)\u2026\", \"warning: partial read (%lu bytes\u2026\", r12_1, 5), 0);\n            }\n            data_6145a8 = 0;\n        }\n        break;\n    }\n    data_6143b8 = rbx_1;\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_404a10",
            "funcStartAddr": "0x404a10",
            "funcEndAddr": "0x404a71",
            "decompiledFuncCode": "ssize_t sub_404a10(int32_t arg1, int64_t arg2, uint64_t arg3)\n{\n    if (arg3 == 0)\n    {\n        return 0;\n    }\n    int64_t r12 = 0;\n    int64_t rbp = arg2;\n    uint64_t rbx = arg3;\n    ssize_t rax_1;\n    uint64_t temp1_1;\n    do\n    {\n        rax_1 = sub_404900(arg1, rbp, rbx);\n        bool cond:0_1 = rax_1 == 0;\n        if (rax_1 < 0)\n        {\n            return rax_1;\n        }\n        if (cond:0_1)\n        {\n            break;\n        }\n        r12 = (r12 + rax_1);\n        rbp = (rbp + rax_1);\n        temp1_1 = rbx;\n        rbx = (rbx - rax_1);\n    } while (temp1_1 != rax_1);\n    return r12;\n}\n\n"
        },
        {
            "funcName": "sub_404a80",
            "funcStartAddr": "0x404a80",
            "funcEndAddr": "0x404ba0",
            "decompiledFuncCode": "uint64_t sub_404a80()\n{\n    int64_t rbx = data_614658;\n    int64_t rbp = data_614650;\n    int64_t rax = malloc(((rbp + (rbx << 1)) + 3));\n    if (rax != 0)\n    {\n        int64_t rdx = 0;\n        data_614598 = (((rax + rbx) + 1) - (COMBINE(rdx, ((rax + rbx) + 1)) % rbx));\n        return (COMBINE(rdx, ((rax + rbx) + 1)) / rbx);\n    }\n    int64_t var_2a8;\n    int64_t rax_3;\n    int80_t st0;\n    st0 = sub_405d70(rbp, &var_2a8, 0x1f1, 1, 1);\n    sub_4041e0(1, 0, dcgettext(nullptr, \"memory exhausted by input buffer\u2026\", 5), 0);\n    int64_t var_2b0 = rbp;\n    int64_t var_2b8 = rax_3;\n    int64_t rbx_2 = data_614658;\n    int64_t rbp_1 = data_614648;\n    int64_t rax_5 = malloc(((rbx_2 + rbp_1) - 1));\n    if (rax_5 == 0)\n    {\n        void var_550;\n        int64_t rax_8;\n        int80_t st0_1;\n        st0_1 = sub_405d70(rbp_1, &var_550, 0x1f1, 1, 1);\n        /* tailcall */\n        return sub_404ba0(sub_4041e0(1, 0, dcgettext(nullptr, \"memory exhausted by output buffe\u2026\", 5), 0), rax_8, rbp_1);\n    }\n    int64_t rdx_3 = 0;\n    data_614590 = (((rax_5 + rbx_2) - 1) - (COMBINE(rdx_3, ((rax_5 + rbx_2) - 1)) % rbx_2));\n    return (COMBINE(rdx_3, ((rax_5 + rbx_2) - 1)) / rbx_2);\n}\n\n"
        },
        {
            "funcName": "sub_404ba0",
            "funcStartAddr": "0x404b10",
            "funcEndAddr": "0x404be8",
            "decompiledFuncCode": "void sub_404ba0(int64_t arg1 @ rax, int64_t arg2 @ rbx, int64_t arg3 @ rbp)\n{\n    char* rsp;\n    while (true)\n    {\n        if (data_614590 != 0)\n        {\n            return;\n        }\n        if ((*(data_61460c + 1) & 8) == 0)\n        {\n            break;\n        }\n        *(rsp - 8) = arg3;\n        *(rsp - 0x10) = arg2;\n        rsp = (rsp - 0x2a8);\n        int64_t rbx = data_614658;\n        arg3 = data_614648;\n        int64_t rax_2 = malloc(((rbx + arg3) - 1));\n        if (rax_2 != 0)\n        {\n            data_614590 = (((rax_2 + rbx) - 1) - (COMBINE(0, ((rax_2 + rbx) - 1)) % rbx));\n            *(rsp + 0x298);\n            *(rsp + 0x2a0);\n            return;\n        }\n        int16_t top = (top - 1);\n        /* unimplemented  {call sub_405d70} */;\n        arg2 = sub_405d70(arg3, rsp, 0x1f1, 1, 1);\n        arg1 = sub_4041e0(1, 0, dcgettext(nullptr, \"memory exhausted by output buffe\u2026\", 5), 0);\n    }\n    if (data_614598 == 0)\n    {\n        *(rsp - 8) = arg1;\n        sub_404a80();\n        data_614590 = data_614598;\n        *(rsp - 8);\n        return;\n    }\n    data_614590 = data_614598;\n}\n\n"
        },
        {
            "funcName": "sub_404bf0",
            "funcStartAddr": "0x404bf0",
            "funcEndAddr": "0x404c2b",
            "decompiledFuncCode": "uint64_t sub_404bf0()\n{\n    int32_t rax_2;\n    int32_t* rax_1;\n    do\n    {\n        sub_404810();\n        rax_2 = ftruncate(1);\n        if (rax_2 >= 0)\n        {\n            break;\n        }\n        rax_1 = __errno_location();\n    } while (*rax_1 == 4);\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_404c30",
            "funcStartAddr": "0x404c30",
            "funcEndAddr": "0x404e28",
            "decompiledFuncCode": "int64_t sub_404c30(char* arg1, uint64_t arg2)\n{\n    if (((*(data_614604 + 1) & 0x40) != 0 && data_614648 > arg2))\n    {\n        int32_t rax_10;\n        int32_t rdx;\n        *rax_10[1] = (*sub_4095d0(1, 3, rdx)[1] & 0xbf);\n        if ((sub_4095d0(1, 4, rax_10) != 0 && data_6142bc != 1))\n        {\n            sub_4084b0(0, 3, data_614660);\n            sub_4041e0(0, *__errno_location(), dcgettext(nullptr, \"failed to turn off O_DIRECT: %s\", 5), 0);\n        }\n        data_6144e8 = 1;\n        sub_4045a0(1, 0);\n        data_61460c = (data_61460c | 0x8000);\n    }\n    int64_t rbx_1 = 0;\n    if (arg2 != 0)\n    {\n        do\n        {\n            sub_404810();\n            int32_t r13_1 = data_61460c;\n            data_614618 = 0;\n            uint64_t rax_1;\n            off64_t rax_5;\n            char* rsi;\n            if ((r13_1 & 0x10000) != 0)\n            {\n                rsi = arg1;\n                uint64_t rdx_1 = arg2;\n                while (*rsi == 0)\n                {\n                    rsi = &rsi[1];\n                    uint64_t temp1_1 = rdx_1;\n                    rdx_1 = (rdx_1 - 1);\n                    if (temp1_1 == 1)\n                    {\n                        break;\n                    }\n                    if (((rdx_1 & 0xf) == 0 && memcmp(arg1, rsi, rdx_1) != 0))\n                    {\n                        break;\n                    }\n                }\n                if (*rsi == 0)\n                {\n                    rax_5 = lseek(1, arg2, 1);\n                    if (rax_5 < 0)\n                    {\n                        data_61460c = (r13_1 & 0xfffeffff);\n                    }\n                    else\n                    {\n                        data_614618 = 1;\n                        rax_1 = arg2;\n                        if (arg2 >= 0)\n                        {\n                        label_404c6e:\n                            rbx_1 = (rbx_1 + rax_1);\n                        }\n                        else if (*__errno_location() != 4)\n                        {\n                            break;\n                        }\n                    }\n                }\n            }\n            if ((((((r13_1 & 0x10000) != 0 && *rsi == 0) && rax_5 < 0) || (r13_1 & 0x10000) == 0) || ((r13_1 & 0x10000) != 0 && *rsi != 0)))\n            {\n                rax_1 = write(1, &arg1[rbx_1], (arg2 - rbx_1));\n                bool cond:0_1 = rax_1 == 0;\n                if (rax_1 >= 0)\n                {\n                    if (cond:0_1)\n                    {\n                        *__errno_location() = 0x1c;\n                        break;\n                    }\n                    goto label_404c6e;\n                }\n                if (*__errno_location() != 4)\n                {\n                    break;\n                }\n            }\n        } while (arg2 > rbx_1);\n        if ((data_6144ea != 0 && rbx_1 != 0))\n        {\n            sub_4045a0(1, rbx_1);\n            return rbx_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_404e30",
            "funcStartAddr": "0x404e30",
            "funcEndAddr": "0x404e4d",
            "decompiledFuncCode": "int64_t sub_404e30() __noreturn\n{\n    sub_404760();\n    sub_4040b0();\n    sub_404810();\n    exit(1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404e50",
            "funcStartAddr": "0x404e50",
            "funcEndAddr": "0x404ee2",
            "decompiledFuncCode": "int64_t sub_404e50()\n{\n    int64_t rax = sub_404c30(data_614590, data_614648);\n    data_6145d8 = (data_6145d8 + rax);\n    if (data_614648 == rax)\n    {\n        data_614588 = 0;\n        data_6145f0 = (data_6145f0 + 1);\n        return rax;\n    }\n    sub_4083e0(4, data_614660);\n    sub_4041e0(0, *__errno_location(), dcgettext(nullptr, \"writing to %s\", 5), 0);\n    if (rax != 0)\n    {\n        data_6145f8 = (data_6145f8 + 1);\n    }\n    sub_404e30();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404ef0",
            "funcStartAddr": "0x404ef0",
            "funcEndAddr": "0x404ff9",
            "decompiledFuncCode": "void sub_404ef0(char* arg1, int64_t arg2)\n{\n    void* r12 = &arg1[arg2];\n    if (arg2 != 0)\n    {\n        char* rbp_1 = arg1;\n        while (true)\n        {\n            uint64_t rax = *rbp_1;\n            int64_t rbx_2 = data_614580;\n            int64_t rdx_2 = data_614640;\n            if (rax != data_6142ba)\n            {\n                bool cond:1_1 = rbx_2 >= rdx_2;\n                if (rbx_2 == rdx_2)\n                {\n                    data_6145a0 = (data_6145a0 + 1);\n                }\n                else if ((!cond:1_1))\n                {\n                    int64_t rcx_1 = data_614588;\n                    bool cond:3_1 = (rcx_1 + 1) >= data_614648;\n                    data_614590[rcx_1] = rax;\n                    data_614588 = (rcx_1 + 1);\n                    if (cond:3_1)\n                    {\n                        sub_404e50();\n                        rbx_2 = data_614580;\n                    }\n                }\n                rbp_1 = &rbp_1[1];\n                data_614580 = (rbx_2 + 1);\n                if (r12 == rbp_1)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                if (rbx_2 < rdx_2)\n                {\n                    do\n                    {\n                        int64_t rdx_3 = data_614588;\n                        int64_t rcx_2 = data_614590;\n                        char rsi_1 = data_6142b9;\n                        bool cond:2_1 = (rdx_3 + 1) < data_614648;\n                        data_614588 = (rdx_3 + 1);\n                        *(rcx_2 + rdx_3) = rsi_1;\n                        if ((!cond:2_1))\n                        {\n                            sub_404e50();\n                        }\n                        rbx_2 = (rbx_2 + 1);\n                    } while (data_614640 > rbx_2);\n                }\n                data_614580 = 0;\n                rbp_1 = &rbp_1[1];\n                if (r12 == rbp_1)\n                {\n                    break;\n                }\n            }\n        }\n    }\n}\n\n"
        },
        {
            "funcName": "sub_405000",
            "funcStartAddr": "0x405000",
            "funcEndAddr": "0x40514c",
            "decompiledFuncCode": "void sub_405000(char* arg1, int64_t arg2)\n{\n    if (arg2 == 0)\n    {\n        return;\n    }\n    int64_t r12 = 0;\n    while (true)\n    {\n        int64_t rax_1 = data_614580;\n        bool cond:0_1 = rax_1 >= data_614640;\n        char r13_1 = arg1[r12];\n        data_614580 = (rax_1 + 1);\n        char rcx_2;\n        int64_t rdx_3;\n        int64_t rdx_5;\n        int64_t rsi_1;\n        bool cond:1_1;\n        if (cond:0_1)\n        {\n            int64_t rdx_1 = data_614588;\n            int64_t rcx_1 = data_614590;\n            data_6143b0 = 0;\n            char rsi = data_6142ba;\n            data_614580 = 0;\n            cond:1_1 = (rdx_1 + 1) >= data_614648;\n            data_614588 = (rdx_1 + 1);\n            *(rcx_1 + rdx_1) = rsi;\n        }\n        else\n        {\n            rcx_2 = data_6142b9;\n            rdx_3 = data_6143b0;\n            r12 = (r12 + 1);\n            if (rcx_2 != r13_1)\n            {\n                char* rdi = data_614590;\n                int64_t rax_2 = data_614588;\n                rsi_1 = data_614648;\n                if (rdx_3 == 0)\n                {\n                    rdx_5 = rax_2;\n                }\n                else\n                {\n                    while (true)\n                    {\n                        rdx_5 = (rax_2 + 1);\n                        rdi[rax_2] = rcx_2;\n                        data_614588 = rdx_5;\n                        if (rdx_5 >= rsi_1)\n                        {\n                            sub_404e50();\n                            rdi = data_614590;\n                            rdx_5 = data_614588;\n                            rsi_1 = data_614648;\n                        }\n                        int64_t temp0_1 = data_6143b0;\n                        data_6143b0 = (data_6143b0 - 1);\n                        if (temp0_1 == 1)\n                        {\n                            break;\n                        }\n                        rcx_2 = data_6142b9;\n                        rax_2 = rdx_5;\n                    }\n                }\n                rdi[rdx_5] = r13_1;\n                data_614588 = (rdx_5 + 1);\n            }\n        }\n        if (((cond:0_1 && cond:1_1) || (((!cond:0_1) && rcx_2 != r13_1) && (rdx_5 + 1) >= rsi_1)))\n        {\n            sub_404e50();\n        }\n        if (((((cond:0_1 && cond:1_1) || (((!cond:0_1) && rcx_2 != r13_1) && (rdx_5 + 1) >= rsi_1)) || (cond:0_1 && (!cond:1_1))) || (((!cond:0_1) && rcx_2 != r13_1) && (rdx_5 + 1) < rsi_1)))\n        {\n            if (arg2 <= r12)\n            {\n                break;\n            }\n            continue;\n        }\n        if (((!cond:0_1) && rcx_2 == r13_1))\n        {\n            data_6143b0 = (rdx_3 + 1);\n            if (arg2 <= r12)\n            {\n                break;\n            }\n        }\n    }\n}\n\n"
        },
        {
            "funcName": "sub_405150",
            "funcStartAddr": "0x405150",
            "funcEndAddr": "0x40545b",
            "decompiledFuncCode": "uint64_t sub_405150(int32_t arg1, uint64_t arg2, uint64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    uint64_t r14 = arg3;\n    uint64_t rbx = arg1;\n    int64_t r12 = *arg5;\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    int32_t var_cc_1;\n    off64_t rax_5;\n    off64_t rax_7;\n    int64_t r12_1;\n    if ((COMBINE(0, 0x7fffffffffffffff) / arg4) < r14)\n    {\n        rax_7 = sub_4044d0(arg2, rbx, 0, 2);\n        if (rax_7 < 0)\n        {\n            var_cc_1 = 0;\n        }\n    }\n    else\n    {\n        r12_1 = (r12 + (r14 * arg4));\n        rax_5 = sub_4044d0(arg2, rbx, r12_1, 1);\n        if (rax_5 < 0)\n        {\n            var_cc_1 = *rax;\n            rax_7 = sub_4044d0(arg2, rbx, 0, 2);\n        }\n    }\n    uint64_t rax_6;\n    uint64_t rdx_11;\n    char* rsi_4;\n    if ((((COMBINE(0, 0x7fffffffffffffff) / arg4) < r14 && rax_7 < 0) || (((COMBINE(0, 0x7fffffffffffffff) / arg4) >= r14 && rax_5 < 0) && rax_7 < 0)))\n    {\n        int64_t r12_2;\n        if (rbx != 0)\n        {\n            sub_404ba0(rax_7, rbx, arg5);\n            r12_2 = data_614590;\n        }\n        else\n        {\n            if (data_614598 == 0)\n            {\n                sub_404a80();\n            }\n            r12_2 = data_614598;\n        }\n    label_405228:\n        int64_t rax_8 = data_6144e0;\n        int64_t rdx_3 = arg4;\n        if (r14 == 0)\n        {\n            rdx_3 = *arg5;\n            goto label_40528f;\n        }\n        int64_t rax_9;\n        bool cond:0_1;\n        while (true)\n        {\n            rax_9 = rax_8(rbx, r12_2, rdx_3);\n            cond:0_1 = rax_9 == 0;\n            if (rax_9 < 0)\n            {\n                break;\n            }\n            if (cond:0_1)\n            {\n                break;\n            }\n            if (rbx == 0)\n            {\n                bool c_1 = (rax_9 + data_6145b0) < rax_9;\n                data_6145b0 = (rax_9 + data_6145b0);\n                if (c_1)\n                {\n                    data_6145a9 = 1;\n                }\n            }\n            if (r14 == 0)\n            {\n                break;\n            }\n            uint64_t temp7_1 = r14;\n            r14 = (r14 - 1);\n            if (temp7_1 != 1)\n            {\n                goto label_405228;\n            }\n            rdx_3 = *arg5;\n            if (rdx_3 == 0)\n            {\n                break;\n            }\n            rax_8 = data_6144e0;\n        label_40528f:\n            r14 = 0;\n        }\n        if (rax_9 < 0)\n        {\n            if (rbx != 0)\n            {\n                rdx_11 = arg2;\n            label_4053e5:\n                rsi_4 = \"%s: cannot seek\";\n                sub_4084b0(0, 3, rdx_11);\n                goto label_405402;\n            }\n            sub_4083e0(4, arg2);\n            sub_4041e0(0, *rax, dcgettext(nullptr, \"error reading %s\", 5), 0);\n            if ((*(data_61460c + 1) & 1) != 0)\n            {\n                sub_4040b0();\n            }\n            goto label_4053cb;\n        }\n        if ((rax_9 >= 0 && cond:0_1))\n        {\n            rax_6 = r14;\n            goto label_4051e3;\n        }\n        if (((rax_9 >= 0 && (!cond:0_1)) && r14 == 0))\n        {\n            goto label_4051c8;\n        }\n        goto label_405447;\n    }\n    if (((((COMBINE(0, 0x7fffffffffffffff) / arg4) >= r14 && rax_5 < 0) && rax_7 >= 0) && var_cc_1 != 0))\n    {\n        goto label_4052c1;\n    }\n    if ((((COMBINE(0, 0x7fffffffffffffff) / arg4) < r14 && rax_7 >= 0) || (((COMBINE(0, 0x7fffffffffffffff) / arg4) >= r14 && rax_5 < 0) && rax_7 >= 0)))\n    {\n        var_cc_1 = 0x4b;\n    label_4052c1:\n        rdx_11 = arg2;\n        if (rbx != 0)\n        {\n            goto label_4053e5;\n        }\n        rsi_4 = \"%s: cannot skip\";\n        sub_4084b0(0, 3, rdx_11);\n    label_405402:\n        sub_4041e0(0, var_cc_1, dcgettext(nullptr, rsi_4, 5), 0);\n    label_4053cb:\n        sub_404e30();\n        /* no return */\n    }\n    if (((COMBINE(0, 0x7fffffffffffffff) / arg4) >= r14 && rax_5 >= 0))\n    {\n        if (rbx == 0)\n        {\n            void var_c8;\n            if (__fxstat(1, 0, &var_c8) != 0)\n            {\n                sub_4083e0(4, arg2);\n                sub_4041e0(1, *rax, dcgettext(nullptr, \"cannot fstat %s\", 5), 0);\n            label_405447:\n                rax_6 = 0;\n                goto label_4051e3;\n            }\n            int64_t rcx = data_6145b0;\n            rax_6 = 0;\n            int32_t var_b0;\n            int64_t var_98;\n            if (((var_b0 & 0xd000) == 0x8000 && var_98 < (r12_1 + rcx)))\n            {\n                rax_6 = (COMBINE(0, (r12_1 - var_98)) / arg4);\n                r12_1 = (var_98 - rcx);\n            }\n            data_6145b0 = (r12_1 + rcx);\n            if ((r12_1 + rcx) < r12_1)\n            {\n                data_6145a9 = 1;\n            }\n            goto label_4051e3;\n        }\n    label_4051c8:\n        *arg5 = 0;\n        rax_6 = 0;\n    label_4051e3:\n        return rax_6;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_405460",
            "funcStartAddr": "0x405460",
            "funcEndAddr": "0x4059cd",
            "decompiledFuncCode": "int64_t sub_405460(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_614680;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [OPERAND]...\\n  or:  %\u2026\", 5), rbp, rbp);\n        fputs_unlocked(dcgettext(nullptr, \"Copy a file, converting and form\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  if=FILE         read from FILE\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nN and BYTES may be followed by\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  ascii     from EBCDIC to ASCII\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  excl      fail if the output f\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nEach FLAG symbol may be:\\n\\n  \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  direct    use direct I/O for d\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  directory  fail unless a direc\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  dsync     use synchronized I/O\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  sync      likewise, but also f\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  fullblock  accumulate full blo\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  nonblock  use non-blocking I/O\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  noatime   do not update access\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  nocache   Request to drop cach\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  noctty    do not assign contro\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  count_bytes  treat 'count=N' a\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  skip_bytes  treat 'skip=N' as \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  seek_bytes  treat 'seek=N' as \u2026\", 5), stdout);\n        __printf_chk(1, dcgettext(nullptr, \"\\nSending a %s signal to a runni\u2026\", 5), \"USR1\");\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        void* const var_88 = &data_40dc2b;\n        void* const* rax_26 = &var_88;\n        char const* const var_78_1 = \"coreutils\";\n        char const* const var_70_1 = \"Multi-call invocation\";\n        char const* const var_68_1 = \"sha224sum\";\n        char const* const var_60_1 = \"sha2 utilities\";\n        char const* const var_58_1 = \"sha256sum\";\n        char const* const var_50_1 = \"sha2 utilities\";\n        char const* const var_48_1 = \"sha384sum\";\n        char const* const var_40_1 = \"sha2 utilities\";\n        char const* const var_38_1 = \"sha512sum\";\n        char const* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_26 = &rax_26[2];\n            void* const rdi_22 = *rax_26;\n            c_1 = false;\n            z_1 = (rdi_22 & rdi_22) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            void* const rsi_23 = &data_40dc23;\n            int64_t rcx_2 = 3;\n            while (rcx_2 != 0)\n            {\n                char temp0_1 = *rsi_23;\n                char temp1_1 = *rdi_22;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_23 = (rsi_23 + 1);\n                rdi_22 = (rdi_22 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        void* const rbp_1 = rax_26[1];\n        char* rax_37;\n        int32_t rax_38;\n        char const* const r12_1;\n        if (rbp_1 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_5;\n            uint64_t r8_2;\n            ssize_t r9_2;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_37 = setlocale(5, nullptr, rdx_5, rcx_5, r8_2, r9_2, var_88, \"test invocation\");\n            if (rax_37 != 0)\n            {\n                rax_38 = strncmp(rax_37, &data_40dcaf, 3);\n                if (rax_38 != 0)\n                {\n                    rbp_1 = &data_40dc23;\n                }\n            }\n            if ((rax_37 == 0 || (rax_37 != 0 && rax_38 == 0)))\n            {\n                rbp_1 = &data_40dc23;\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", &data_40dc23);\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_3;\n            uint64_t r8_1;\n            ssize_t r9_1;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_29 = setlocale(5, nullptr, rdx_3, rcx_3, r8_1, r9_1, var_88, \"test invocation\");\n            if (rax_29 == 0)\n            {\n                goto label_4058c0;\n            }\n            if (strncmp(rax_29, &data_40dcaf, 3) == 0)\n            {\n                goto label_4058c0;\n            }\n        }\n        if ((((rbp_1 == 0 && rax_37 != 0) && rax_38 != 0) || rbp_1 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), &data_40dc23);\n        label_4058c0:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", &data_40dc23);\n            if (rbp_1 != &data_40dc23)\n            {\n                r12_1 = &data_410d94[0x1b];\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_1, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4059d0",
            "funcStartAddr": "0x4059d0",
            "funcEndAddr": "0x405aa9",
            "decompiledFuncCode": "uint64_t sub_4059d0(void* arg1, char* arg2, char arg3, char* arg4)\n{\n    void* r14 = arg1;\n    int32_t rbx = 0;\n    int32_t rdx_1;\n    while (true)\n    {\n        char* rax_1 = strchr(r14, 0x2c);\n        char* rdi_1 = arg2;\n        int32_t rbx_1;\n        while (true)\n        {\n            int64_t rdx = 0;\n            char rcx;\n            char rsi;\n            do\n            {\n                rcx = rdi_1[rdx];\n                rsi = *(r14 + rdx);\n                if (rcx == 0)\n                {\n                    break;\n                }\n                rdx = (rdx + 1);\n            } while (rcx == rsi);\n            if ((rcx == 0 && (rsi == 0x2c || rsi == 0)))\n            {\n                rdx_1 = *(rdi_1 + 0xc);\n                if (rdx_1 != 0)\n                {\n                    rbx_1 = (rbx | rdx_1);\n                    break;\n                }\n            }\n            if (*rdi_1 == 0)\n            {\n                uint64_t rax_3;\n                if (rax_1 == 0)\n                {\n                    rax_3 = strlen(r14);\n                }\n                else\n                {\n                    rax_3 = (rax_1 - r14);\n                }\n                sub_408370(0, 8, r14, rax_3);\n                dcgettext(nullptr, arg4, 5);\n                sub_4041e0(0, 0, \"%s: %s\", 0);\n                sub_405460(1);\n                /* no return */\n            }\n            rdi_1 = &rdi_1[0x10];\n        }\n        if (arg3 == 0)\n        {\n            rdx_1 = rbx_1;\n        }\n        if (rax_1 == 0)\n        {\n            break;\n        }\n        r14 = &rax_1[1];\n        rbx = rdx_1;\n    }\n    return rdx_1;\n}\n\n"
        },
        {
            "funcName": "sub_405ab0",
            "funcStartAddr": "0x405ab0",
            "funcEndAddr": "0x405b0d",
            "decompiledFuncCode": "uint64_t sub_405ab0(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_409550(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_405b10",
            "funcStartAddr": "0x405b10",
            "funcEndAddr": "0x405b18",
            "decompiledFuncCode": "int64_t sub_405b10(int64_t arg1)\n{\n    data_614678 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_405b20",
            "funcStartAddr": "0x405b20",
            "funcEndAddr": "0x405b28",
            "decompiledFuncCode": "int64_t sub_405b20(char arg1)\n{\n    data_614670 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_405b30",
            "funcStartAddr": "0x405b30",
            "funcEndAddr": "0x405bce",
            "decompiledFuncCode": "uint64_t sub_405b30()\n{\n    int32_t rax = sub_405ab0(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_614670 == 0 || (data_614670 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_614678;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_408480(rdi_2), rax_3);\n            }\n        }\n    }\n    if ((rax == 0 || ((rax != 0 && data_614670 != 0) && *rax_1 == 0x20)))\n    {\n        uint64_t rax_2 = sub_405ab0(stderr);\n        if (rax_2 == 0)\n        {\n            return rax_2;\n        }\n    }\n    _exit(data_6142d0);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_405bd0",
            "funcStartAddr": "0x405bd0",
            "funcEndAddr": "0x405c3a",
            "decompiledFuncCode": "uint64_t sub_405bd0(int32_t arg1, char* arg2, int32_t arg3, int32_t arg4)\n{\n    int32_t rax_1 = open(arg2, arg3, arg4);\n    if ((arg1 != rax_1 && rax_1 >= 0))\n    {\n        int32_t rax_3 = dup2(rax_1, arg1);\n        int32_t* rax_4 = __errno_location();\n        int32_t r13 = *rax_4;\n        close(rax_1);\n        *rax_4 = r13;\n        return rax_3;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_405c40",
            "funcStartAddr": "0x405c40",
            "funcEndAddr": "0x405c6f",
            "decompiledFuncCode": "int64_t sub_405c40()\n{\n    int64_t var_18;\n    if (clock_gettime(1, &var_18) != 0)\n    {\n        sub_405c70(&var_18);\n    }\n    int64_t var_10;\n    return ((var_18 * 0x3b9aca00) + var_10);\n}\n\n"
        },
        {
            "funcName": "sub_405c70",
            "funcStartAddr": "0x405c70",
            "funcEndAddr": "0x405caa",
            "decompiledFuncCode": "__syscall_slong_t sub_405c70(struct timespec* arg1)\n{\n    __syscall_slong_t rax = clock_gettime(0, arg1);\n    if (rax != 0)\n    {\n        int64_t var_18;\n        gettimeofday(&var_18, nullptr);\n        arg1->tv_sec = var_18;\n        int64_t var_10;\n        rax = (var_10 * 0x3e8);\n        arg1->tv_nsec = rax;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405cb0",
            "funcStartAddr": "0x405cb0",
            "funcEndAddr": "0x405d67",
            "decompiledFuncCode": "long double sub_405cb0(int32_t arg1, uint16_t arg2 @ x87control, \n    long double arg3)\n{\n    long double x87_r7 = 9.22337204e+18f;\n    int64_t rax_1;\n    if (arg3 >= x87_r7)\n    {\n        uint16_t x87status_3;\n        int16_t temp0_2;\n        temp0_2 = __fnstcw_memmem16(arg2);\n        long double x87_r7_1 = (arg3 - x87_r7);\n        x87_r7 = arg3;\n        int16_t rax_3;\n        *rax_3[1] = (*temp0_2[1] | 0xc);\n        uint16_t x87control_2;\n        uint16_t x87status_4;\n        x87control_2 = __fldcw_memmem16(rax_3);\n        uint16_t x87control_3;\n        uint16_t x87status_5;\n        x87control_3 = __fldcw_memmem16(temp0_2);\n        rax_1 = (x87_r7_1 ^ 0x8000000000000000);\n    }\n    else\n    {\n        uint16_t x87status;\n        int16_t temp0;\n        temp0 = __fnstcw_memmem16(arg2);\n        int16_t rax;\n        *rax[1] = (*temp0[1] | 0xc);\n        uint16_t x87control;\n        uint16_t x87status_1;\n        x87control = __fldcw_memmem16(rax);\n        uint16_t x87control_1;\n        uint16_t x87status_2;\n        x87control_1 = __fldcw_memmem16(temp0);\n        rax_1 = x87_r7;\n    }\n    long double x87_r6_2 = rax_1;\n    if (rax_1 < 0)\n    {\n        x87_r6_2 = (x87_r6_2 + 1.84467441e+19f);\n    }\n    if (arg1 == 0)\n    {\n        long double x87_r6_3 = x87_r7;\n        x87_r7 = x87_r6_2;\n        (x87_r6_3 - x87_r7);\n        if (((FCMP_UO(x87_r6_3, x87_r7)) || ((!(FCMP_UO(x87_r6_3, x87_r7))) && (!x87_r6_3 == x87_r7))))\n        {\n            x87_r7 = (rax_1 + 1);\n            if ((rax_1 + 1) < 0)\n            {\n                return (x87_r7 + 1.84467441e+19f);\n            }\n        }\n    }\n    return x87_r7;\n}\n\n"
        },
        {
            "funcName": "sub_405d70",
            "funcStartAddr": "0x405d70",
            "funcEndAddr": "0x40673e",
            "decompiledFuncCode": "void sub_405d70(int64_t arg1, char* arg2, int32_t arg3, int64_t arg4, \n    int64_t arg5)\n{\n    int32_t rax_1 = (arg3 & 0x20);\n    int32_t rcx_1 = (arg3 & 3);\n    int32_t rax_4 = (((rax_1 - rax_1) & 0xffffffe8) + 0x400);\n    struct lconv* rax_5 = localeconv();\n    char* r15 = rax_5->decimal_point;\n    uint64_t rax_6 = strlen(r15);\n    uint64_t r8 = rax_6;\n    bool cond:1 = (rax_6 - 1) >= 0x10;\n    if ((rax_6 - 1) >= 0x10)\n    {\n        r15 = &data_40f6b9;\n    }\n    char* rax_8 = rax_5->grouping;\n    char* r12_1 = rax_5->thousands_sep;\n    if (cond:1)\n    {\n        r8 = 1;\n    }\n    uint64_t r8_1 = r8;\n    if (strlen(r12_1) >= 0x11)\n    {\n        r12_1 = &data_410d94[0x1b];\n    }\n    void* var_a8 = &arg2[0x287];\n    int32_t rcx_8;\n    int64_t rdx;\n    int32_t rbx_1;\n    uint64_t rsi_1;\n    uint32_t rdi_15;\n    uint32_t r9_1;\n    uint64_t temp0_1;\n    void* r14_3;\n    void* r15_5;\n    if (arg5 <= arg4)\n    {\n        rdx = 0;\n        temp0_1 = (COMBINE(rdx, arg4) / arg5);\n        if ((COMBINE(rdx, arg4) % arg5) != 0)\n        {\n            goto label_405e5a;\n        }\n        rsi_1 = (temp0_1 * arg1);\n        if ((COMBINE(0, rsi_1) / temp0_1) != arg1)\n        {\n            goto label_405e5a;\n        }\n        rdi_15 = 0;\n        r9_1 = 0;\n        rcx_8 = (arg3 & 0x10);\n        if (rcx_8 == 0)\n        {\n        label_4063ca:\n            rbx_1 = -1;\n        label_406126:\n            r14_3 = var_a8;\n            if (rcx_1 == 1)\n            {\n                if ((r9_1 + (rsi_1 & 1) != (-rdi_15)) > 5)\n                {\n                    r14_3 = var_a8;\n                label_406141:\n                    rsi_1 = (rsi_1 + 1);\n                    if (rcx_8 == 0)\n                    {\n                        goto label_40616a;\n                    }\n                    if (rax_4 != rsi_1)\n                    {\n                        goto label_40616a;\n                    }\n                    if (rbx_1 == 8)\n                    {\n                        goto label_40616a;\n                    }\n                    rbx_1 = (rbx_1 + 1);\n                    if ((arg3 & 8) == 0)\n                    {\n                        *(r14_3 - 1) = 0x30;\n                        r14_3 = (r14_3 + (!r8_1));\n                        uint64_t rax_67 = r8_1;\n                        if (r8_1 >= 8)\n                        {\n                            void* rcx_21 = ((r14_3 + 8) & 0xfffffffffffffff8);\n                            *r14_3 = *r15;\n                            uint64_t rax_69 = r8_1;\n                            *((r14_3 + rax_69) - 8) = *((r15 + rax_69) - 8);\n                            void* rax_71 = (r14_3 - rcx_21);\n                            int64_t* r15_8 = (r15 - rax_71);\n                            int32_t rax_73 = ((rax_71 + r8_1) & 0xfffffff8);\n                            if (rax_73 >= 8)\n                            {\n                                int32_t rax_74 = (rax_73 & 0xfffffff8);\n                                int32_t rdx_37 = 0;\n                                do\n                                {\n                                    uint64_t rsi_11 = rdx_37;\n                                    rdx_37 = (rdx_37 + 8);\n                                    *(rcx_21 + rsi_11) = *(r15_8 + rsi_11);\n                                } while (rdx_37 < rax_74);\n                            }\n                        }\n                        else if ((r8_1 & 4) != 0)\n                        {\n                            *r14_3 = *r15;\n                            *((r14_3 + rax_67) - 4) = *((r15 + rax_67) - 4);\n                        }\n                        else if (rax_67 != 0)\n                        {\n                            *r14_3 = *r15;\n                            if ((rax_67 & 2) != 0)\n                            {\n                                *((r14_3 + rax_67) - 2) = *((r15 + rax_67) - 2);\n                            }\n                        }\n                    }\n                    r15_5 = (r14_3 - 1);\n                    *(r14_3 - 1) = 0x31;\n                }\n                else\n                {\n                label_40616a:\n                    r15_5 = r14_3;\n                    while (true)\n                    {\n                        r15_5 = (r15_5 - 1);\n                        int64_t rax_35;\n                        int64_t rdx_12;\n                        rdx_12 = HIGHD((rsi_1 * -0x3333333333333333));\n                        rax_35 = LOWD((rsi_1 * -0x3333333333333333));\n                        uint64_t rdx_13 = (rdx_12 >> 3);\n                        char rax_36 = (rdx_13 + (rdx_13 << 2));\n                        *r15_5 = ((rsi_1 - (rax_36 + rax_36)) + 0x30);\n                        if (rsi_1 <= 9)\n                        {\n                            break;\n                        }\n                        rsi_1 = rdx_13;\n                    }\n                    if ((arg3 & 4) != 0)\n                    {\n                    label_4061b5:\n                        uint64_t rax_40 = strlen(r12_1);\n                        uint64_t rbp_4 = (r14_3 - r15_5);\n                        void var_68;\n                        __memcpy_chk(&var_68, r15_5, rbp_4, 0x29);\n                        char* r15_6 = rax_8;\n                        uint64_t rbx_4 = rbp_4;\n                        uint64_t rbp_5 = -1;\n                        while (true)\n                        {\n                            char rdx_15 = *r15_6;\n                            if (rdx_15 != 0)\n                            {\n                                uint64_t rax_41 = rdx_15;\n                                if (rdx_15 >= 0x7f)\n                                {\n                                    rax_41 = rbx_4;\n                                }\n                                r15_6 = &r15_6[1];\n                                rbp_5 = rax_41;\n                            }\n                            if (rbp_5 > rbx_4)\n                            {\n                                memcpy((r14_3 - rbx_4), &var_68, rbx_4);\n                                break;\n                            }\n                            void* r14_4 = (r14_3 - rbp_5);\n                            rbx_4 = (rbx_4 - rbp_5);\n                            memcpy(r14_4, (&var_68 + rbx_4), rbp_5);\n                            if (rbx_4 == 0)\n                            {\n                                break;\n                            }\n                            r14_3 = (r14_4 - rax_40);\n                            memcpy(r14_3, r12_1, rax_40);\n                        }\n                    }\n                }\n            }\n        }\n        else\n        {\n        label_40610e:\n            uint64_t r10_1 = rax_4;\n            rbx_1 = 0;\n            int32_t rbp_2 = r10_1;\n            if (r10_1 > rsi_1)\n            {\n                goto label_406126;\n            }\n            uint32_t rax_49;\n            int32_t rdx_24;\n            uint64_t temp0_8;\n            do\n            {\n                int64_t rdx_21 = 0;\n                temp0_8 = (COMBINE(rdx_21, rsi_1) / r10_1);\n                uint32_t rax_48 = (r9_1 + (((COMBINE(rdx_21, rsi_1) % r10_1) * 5) << 1));\n                rax_49 = (COMBINE(0, rax_48) / rbp_2);\n                rdx_24 = ((rdi_15 >> 1) + ((COMBINE(0, rax_48) % rbp_2) << 1));\n                r9_1 = rax_49;\n                rsi_1 = temp0_8;\n                int32_t rdi_26 = (rdi_15 + rdx_24);\n                if (rbp_2 > rdx_24)\n                {\n                    rdi_26 = rdi_26 != 0;\n                    rdi_15 = rdi_26;\n                }\n                else\n                {\n                    rdi_26 = rbp_2 < rdi_26;\n                    rdi_15 = (rdi_26 + 2);\n                }\n                rbx_1 = (rbx_1 + 1);\n                if (r10_1 > temp0_8)\n                {\n                    break;\n                }\n            } while (rbx_1 != 8);\n            if (r10_1 <= temp0_8)\n            {\n                goto label_406126;\n            }\n            if (temp0_8 > 9)\n            {\n                goto label_406126;\n            }\n            int32_t rdx_27;\n            if (rcx_1 == 1)\n            {\n                rdx_27 = ((rax_49 & 1) + rdi_15) > 2;\n            }\n            else\n            {\n                rdx_24 = rcx_1 == 0;\n                r9_1 = rdi_15 > 0;\n                rdx_27 = (rdx_24 & r9_1);\n            }\n            if (rdx_27 == 0)\n            {\n                if (rax_49 != 0)\n                {\n                    goto label_4065d8;\n                }\n                goto label_406547;\n            }\n            rax_49 = (rax_49 + 1);\n            char rax_56;\n            if (rax_49 != 0xa)\n            {\n            label_4065d8:\n                rax_56 = (rax_49 + 0x30);\n            label_406563:\n                arg2[0x286] = rax_56;\n                uint64_t rax_57 = r8_1;\n                r14_3 = (&arg2[0x286] - r8_1);\n                if (r8_1 >= 8)\n                {\n                    void* r9_5 = ((r14_3 + 8) & 0xfffffffffffffff8);\n                    *r14_3 = *r15;\n                    uint64_t rax_59 = r8_1;\n                    *((r14_3 + rax_59) - 8) = *((r15 + rax_59) - 8);\n                    void* rax_61 = (r14_3 - r9_5);\n                    void* r10_4 = (r15 - rax_61);\n                    int32_t rax_63 = ((rax_61 + r8_1) & 0xfffffff8);\n                    if (rax_63 >= 8)\n                    {\n                        int32_t rax_64 = (rax_63 & 0xfffffff8);\n                        int32_t rdx_33 = 0;\n                        do\n                        {\n                            uint64_t rdi_33 = rdx_33;\n                            rdx_33 = (rdx_33 + 8);\n                            *(r9_5 + rdi_33) = *(r10_4 + rdi_33);\n                        } while (rdx_33 < rax_64);\n                    }\n                }\n                else if ((r8_1 & 4) != 0)\n                {\n                    *r14_3 = *r15;\n                    *((r14_3 + rax_57) - 4) = *((r15 + rax_57) - 4);\n                }\n                else if (rax_57 != 0)\n                {\n                    *r14_3 = *r15;\n                    if ((rax_57 & 2) != 0)\n                    {\n                        *((r14_3 + rax_57) - 2) = *((r15 + rax_57) - 2);\n                    }\n                }\n                goto label_40658e;\n            }\n            rsi_1 = (temp0_8 + 1);\n            if (rsi_1 == 0xa)\n            {\n                r14_3 = var_a8;\n            label_40658e:\n                rdi_15 = 0;\n            }\n            else\n            {\n                rdi_15 = 0;\n            label_406547:\n                r14_3 = var_a8;\n                if ((arg3 & 8) == 0)\n                {\n                    rax_56 = 0x30;\n                    goto label_406563;\n                }\n            }\n            if (rcx_1 == 1)\n            {\n                goto label_40616a;\n            }\n            r9_1 = 0;\n        }\n        if (((rcx_8 == 0 && rcx_1 != 1) || rcx_8 != 0))\n        {\n            if (rcx_1 != 0)\n            {\n                goto label_40616a;\n            }\n            if ((rdi_15 + r9_1) <= 0)\n            {\n                goto label_40616a;\n            }\n            goto label_406141;\n        }\n    }\n    else\n    {\n        if (arg4 != 0)\n        {\n            int64_t rdx_5 = 0;\n            uint64_t temp0_5 = (COMBINE(rdx_5, arg5) / arg4);\n            if ((COMBINE(rdx_5, arg5) % arg4) != 0)\n            {\n                goto label_405e5a;\n            }\n            int64_t rdx_7 = 0;\n            uint64_t rax_30 = ((COMBINE(rdx_7, arg1) % temp0_5) * 5);\n            int64_t rdx_9 = 0;\n            uint64_t rax_31 = (rax_30 + rax_30);\n            rsi_1 = (COMBINE(rdx_7, arg1) / temp0_5);\n            uint64_t temp1_5 = (COMBINE(rdx_9, rax_31) % temp0_5);\n            uint64_t rdx_11 = (temp1_5 + temp1_5);\n            r9_1 = (COMBINE(rdx_9, rax_31) / temp0_5);\n            bool c_1 = temp0_5 < rdx_11;\n            if ((temp0_5 == rdx_11 || c_1))\n            {\n                rdi_15 = (c_1 + 2);\n            }\n            else\n            {\n                rdi_15 = rdx_11 != 0;\n            }\n            rcx_8 = (arg3 & 0x10);\n            if (rcx_8 != 0)\n            {\n                goto label_40610e;\n            }\n            goto label_4063ca;\n        }\n    label_405e5a:\n        long double x87_r7_1 = arg4;\n        if (arg4 < 0)\n        {\n            x87_r7_1 = (x87_r7_1 + 1.84467441e+19f);\n        }\n        long double x87_r6_1 = arg5;\n        long double x87_r6_2;\n        long double x87_r7_2;\n        if (arg5 < 0)\n        {\n            x87_r7_2 = (x87_r7_1 / (x87_r6_1 + 1.84467441e+19f));\n            x87_r6_2 = arg1;\n        }\n        else\n        {\n            x87_r7_2 = (x87_r7_1 / x87_r6_1);\n            x87_r6_2 = arg1;\n        }\n        uint64_t rax_18;\n        uint64_t r14_2;\n        uint16_t x87control;\n        long double x87_r7_3;\n        if (((arg5 < 0 && arg1 >= 0) || (arg5 >= 0 && arg1 >= 0)))\n        {\n            x87_r7_3 = (x87_r7_2 * x87_r6_2);\n            if ((arg3 & 0x10) != 0)\n            {\n            label_405e9f:\n                long double x87_r6_3 = rax_4;\n                rbx_1 = 0;\n                long double x87_r5_1 = x87_r6_3;\n                while (true)\n                {\n                    rbx_1 = (rbx_1 + 1);\n                    long double x87_r7_4 = (x87_r5_1 * x87_r6_3);\n                    if (x87_r7_3 < x87_r7_4)\n                    {\n                        break;\n                    }\n                    if (rbx_1 == 8)\n                    {\n                        break;\n                    }\n                    x87_r6_3 = x87_r7_3;\n                    int64_t temp0_3 = x87_r5_1;\n                    x87_r5_1 = x87_r7_4;\n                    x87_r7_3 = temp0_3;\n                }\n                int64_t r14_1 = (r8_1 + 1);\n                long double x87_r7_7 = (x87_r6_3 / x87_r6_3);\n                int64_t rax_16;\n                rax_16 = rax_1 == 0;\n                int64_t r15_1 = ((r14_1 + rax_16) + 1);\n                int64_t var_88_3;\n                long double x87_r6_6;\n                long double x87_r7_8;\n                long double x87_r7_9;\n                if (rcx_1 == 1)\n                {\n                    long double var_b8_7 = x87_r7_7;\n                    var_88_3 = x87_r7_7;\n                    __sprintf_chk(arg2, 1, -1, \"%.1Lf\");\n                    rax_18 = strlen(arg2);\n                    x87_r7_8 = var_88_3;\n                    if (rax_18 > r15_1)\n                    {\n                        x87_r6_6 = 10f;\n                        x87_r7_9 = (x87_r7_8 * x87_r6_6);\n                    label_405f97:\n                        int64_t var_b8_3 = (x87_r7_9 / x87_r6_6);\n                        __sprintf_chk(arg2, 1, -1, \"%.0Lf\");\n                        rax_18 = strlen(arg2);\n                        r14_2 = rax_18;\n                    }\n                }\n                else\n                {\n                    long double x87_r6_5;\n                    if (data_40f740 > x87_r7_7)\n                    {\n                        var_88_3 = x87_r7_7;\n                        long double st0_3;\n                        st0_3 = sub_405cb0(rcx_1, x87control, x87_r7_7);\n                        x87_r7_7 = st0_3;\n                        x87_r6_5 = var_88_3;\n                    }\n                    else\n                    {\n                        x87_r6_5 = x87_r7_7;\n                    }\n                    var_88_3 = x87_r6_5;\n                    long double var_b8_1 = x87_r7_7;\n                    __sprintf_chk(arg2, 1, -1, \"%.1Lf\");\n                    rax_18 = strlen(arg2);\n                    x87_r7_8 = var_88_3;\n                    if (rax_18 > r15_1)\n                    {\n                        x87_r6_6 = 10f;\n                        x87_r7_9 = (x87_r7_8 * x87_r6_6);\n                    }\n                }\n                if (((rcx_1 == 1 && rax_18 <= r15_1) || (rcx_1 != 1 && rax_18 <= r15_1)))\n                {\n                    if (((arg3 & 8) == 0 || ((arg3 & 8) != 0 && arg2[(rax_18 - 1)] != 0x30)))\n                    {\n                        r14_2 = (rax_18 - r14_1);\n                    }\n                    if (((arg3 & 8) != 0 && arg2[(rax_18 - 1)] == 0x30))\n                    {\n                        x87_r6_6 = 10f;\n                        x87_r7_9 = (x87_r7_8 * x87_r6_6);\n                        if (rcx_1 == 1)\n                        {\n                            goto label_405f97;\n                        }\n                    }\n                }\n                if (((rcx_1 != 1 && rax_18 > r15_1) || ((((rcx_1 == 1 && rax_18 <= r15_1) || (rcx_1 != 1 && rax_18 <= r15_1)) && (arg3 & 8) != 0) && arg2[(rax_18 - 1)] == 0x30)))\n                {\n                    if (data_40f740 <= x87_r7_9)\n                    {\n                        goto label_405f97;\n                    }\n                    var_88_3 = x87_r6_6;\n                    x87_r7_9 = sub_405cb0(rcx_1, x87control, x87_r7_9);\n                    x87_r6_6 = var_88_3;\n                    goto label_405f97;\n                }\n                goto label_40600c;\n            }\n        }\n        if (((arg5 < 0 && arg1 < 0) || (arg5 >= 0 && arg1 < 0)))\n        {\n            x87_r7_3 = (x87_r7_2 * (x87_r6_2 + 1.84467441e+19f));\n            if ((arg3 & 0x10) != 0)\n            {\n                goto label_405e9f;\n            }\n        }\n        if (rcx_1 != 1)\n        {\n            if (data_40f740 > x87_r7_3)\n            {\n                long double var_b8_5 = x87_r7_3;\n                x87_r7_3 = sub_405cb0(rcx_1, x87control, var_b8_5);\n                r8_1 = var_b8_5;\n            }\n            goto label_405fe3;\n        }\n    label_405fe3:\n        long double var_b8_4 = x87_r7_3;\n        __sprintf_chk(arg2, 1, -1, \"%.0Lf\", r8_1);\n        rbx_1 = -1;\n        rax_18 = strlen(arg2);\n        r14_2 = rax_18;\n    label_40600c:\n        r15_5 = (var_a8 - rax_18);\n        r14_3 = (r14_2 + r15_5);\n        memmove(r15_5, arg2, rax_18);\n    }\n    if (((((((((arg5 <= arg4 && (COMBINE(rdx, arg4) % arg5) == 0) && (COMBINE(0, rsi_1) / temp0_1) == arg1) && rcx_8 == 0) && rcx_1 == 1) && (r9_1 + (rsi_1 & 1) != (-rdi_15)) > 5) || arg5 > arg4) && (arg3 & 4) == 0) || (((((arg5 <= arg4 && (COMBINE(rdx, arg4) % arg5) == 0) && (COMBINE(0, rsi_1) / temp0_1) == arg1) && rcx_8 == 0) && rcx_1 == 1) && (r9_1 + (rsi_1 & 1) != (-rdi_15)) <= 5)))\n    {\n        if ((arg3 & 0x80) == 0)\n        {\n        label_40604c:\n            *var_a8 = 0;\n            return;\n        }\n        if ((rbx_1 == 0xffffffff && arg5 <= 1))\n        {\n            rbx_1 = 0;\n        }\n        int32_t rax_23;\n        void* rdx_20;\n        if (((rbx_1 == 0xffffffff && arg5 <= 1) || rbx_1 != 0xffffffff))\n        {\n            rax_23 = (arg3 & 0x100);\n            if ((rax_23 | rbx_1) != 0)\n            {\n                if ((arg3 & 0x40) != 0)\n                {\n                label_4062bd:\n                    arg2[0x287] = 0x20;\n                    var_a8 = &arg2[0x288];\n                }\n                if (rbx_1 == 0)\n                {\n                    rdx_20 = var_a8;\n                    if (rax_23 != 0)\n                    {\n                    label_406311:\n                        *rdx_20 = 0x42;\n                        var_a8 = (rdx_20 + 1);\n                    }\n                }\n            }\n        }\n        if ((rbx_1 == 0xffffffff && arg5 > 1))\n        {\n            uint64_t rdx_19 = rax_4;\n            rbx_1 = 1;\n            int64_t rax_42 = 1;\n            do\n            {\n                rax_42 = (rax_42 * rdx_19);\n                if (arg5 <= rax_42)\n                {\n                    break;\n                }\n                rbx_1 = (rbx_1 + 1);\n            } while (rbx_1 != 8);\n            rax_23 = (arg3 & 0x100);\n            if ((arg3 & 0x40) != 0)\n            {\n                goto label_4062bd;\n            }\n        }\n        if ((((((rbx_1 == 0xffffffff && arg5 <= 1) || rbx_1 != 0xffffffff) && (rax_23 | rbx_1) != 0) && rbx_1 != 0) || (rbx_1 == 0xffffffff && arg5 > 1)))\n        {\n            if (rax_1 == 0)\n            {\n                if (rbx_1 != 1)\n                {\n                    goto label_4062e6;\n                }\n                rdx_20 = (var_a8 + 1);\n                *var_a8 = 0x6b;\n                if (rax_23 != 0)\n                {\n                    goto label_406311;\n                }\n                goto label_406503;\n            }\n        label_4062e6:\n            char* rdi_25 = var_a8;\n            rdx_20 = &rdi_25[1];\n            *rdi_25 = *(rbx_1 + 0x40f728);\n            if (rax_23 != 0)\n            {\n                if (rax_1 != 0)\n                {\n                    rdx_20 = &rdi_25[2];\n                    rdi_25[1] = 0x69;\n                }\n                goto label_406311;\n            }\n        label_406503:\n            var_a8 = rdx_20;\n        }\n        goto label_40604c;\n    }\n    if ((((((((arg5 <= arg4 && (COMBINE(rdx, arg4) % arg5) == 0) && (COMBINE(0, rsi_1) / temp0_1) == arg1) && rcx_8 == 0) && rcx_1 == 1) && (r9_1 + (rsi_1 & 1) != (-rdi_15)) > 5) || arg5 > arg4) && (arg3 & 4) != 0))\n    {\n        goto label_4061b5;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_406740",
            "funcStartAddr": "0x406740",
            "funcEndAddr": "0x4068f7",
            "decompiledFuncCode": "uint64_t sub_406740(char* arg1, int32_t* arg2, int64_t* arg3)\n{\n    char* rbx = arg1;\n    uint64_t rax_3;\n    char* rax_9;\n    char* rax_10;\n    if (arg1 == 0)\n    {\n        rax_9 = getenv(\"BLOCK_SIZE\");\n        rbx = rax_9;\n        if (rax_9 == 0)\n        {\n            rax_10 = getenv(\"BLOCKSIZE\");\n            rbx = rax_10;\n            if (rax_10 == 0)\n            {\n                rax_3 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_3 == 0)\n                {\n                    *arg3 = 0x400;\n                    *arg2 = 0;\n                }\n                else\n                {\n                    *arg3 = 0x200;\n                    rax_3 = 0;\n                    *arg2 = 0;\n                }\n            }\n        }\n    }\n    if (((arg1 != 0 || (arg1 == 0 && rax_9 != 0)) || ((arg1 == 0 && rax_9 == 0) && rax_10 != 0)))\n    {\n        int32_t rbp_1 = 0;\n        if (*rbx == 0x27)\n        {\n            rbx = &rbx[1];\n            rbp_1 = 4;\n        }\n        int32_t rax_1 = sub_40a670(rbx, &data_40f710, 0x40f700, 4);\n        if (rax_1 >= 0)\n        {\n            *arg3 = 1;\n            rax_3 = 0;\n            *arg2 = (rbp_1 | *((rax_1 << 2) + 0x40f700));\n        }\n        else\n        {\n            void* var_30;\n            rax_3 = sub_408f50(rbx, &var_30, 0, arg3, \"eEgGkKmMpPtTyYzZ0\");\n            int64_t rdx_2;\n            if (rax_3 != 0)\n            {\n                *arg2 = 0;\n                rdx_2 = *arg3;\n            }\n            else\n            {\n                if ((*rbx - 0x30) > 9)\n                {\n                    void* rcx_2 = var_30;\n                    if (rbx != rcx_2)\n                    {\n                        do\n                        {\n                            rbx = &rbx[1];\n                            if ((*rbx - 0x30) <= 9)\n                            {\n                                break;\n                            }\n                        } while (rbx != rcx_2);\n                    }\n                    if ((rbx == rcx_2 || (rbx != rcx_2 && (*rbx - 0x30) > 9)))\n                    {\n                        if (*(rcx_2 - 1) == 0x42)\n                        {\n                            rbp_1 = (rbp_1 | 0x180);\n                        }\n                        else\n                        {\n                            rbp_1 = (rbp_1 | 0x80);\n                        }\n                        if ((*(rcx_2 - 1) != 0x42 || (*(rcx_2 - 1) == 0x42 && *(rcx_2 - 2) == 0x69)))\n                        {\n                            rbp_1 = (rbp_1 | 0x20);\n                        }\n                    }\n                }\n                rdx_2 = *arg3;\n                *arg2 = rbp_1;\n            }\n            if (rdx_2 == 0)\n            {\n                char* rax_4 = getenv(\"POSIXLY_CORRECT\");\n                *arg3 = (((rax_4 - rax_4) & 0x200) + 0x200);\n                return 4;\n            }\n        }\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_406900",
            "funcStartAddr": "0x406900",
            "funcEndAddr": "0x406a02",
            "decompiledFuncCode": "void sub_406900(int32_t arg1, int64_t* arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5, int64_t arg6, uint64_t arg7 @ rax)\n{\n    if (arg7 != 0)\n    {\n        int128_t zmm0;\n        int128_t var_a8_1 = zmm0;\n        int128_t zmm1;\n        int128_t var_98_1 = zmm1;\n        int128_t zmm2;\n        int128_t var_88_1 = zmm2;\n        int128_t zmm3;\n        int128_t var_78_1 = zmm3;\n        int128_t zmm4;\n        int128_t var_68_1 = zmm4;\n        int128_t zmm5;\n        int128_t var_58_1 = zmm5;\n        int128_t zmm6;\n        int128_t var_48_1 = zmm6;\n        int128_t zmm7;\n        int128_t var_38_1 = zmm7;\n    }\n    int32_t rbx = data_614338;\n    data_614338 = 0;\n    if (arg1 == 2)\n    {\n        arg7 = getopt_long(arg1, arg2, &data_40f750, &data_40f760, nullptr);\n        if (arg7 != 0xffffffff)\n        {\n            if (arg7 == 0x68)\n            {\n                arg6(0);\n            }\n            else if (arg7 == 0x76)\n            {\n                int32_t var_f0 = 0x30;\n                void* var_e8 = &arg_8;\n                int32_t var_ec = 0x30;\n                void var_d8;\n                void* var_e0 = &var_d8;\n                sub_408b20(stdout, arg3, arg4, arg5, &var_f0);\n                exit(0);\n                /* no return */\n            }\n        }\n    }\n    data_614338 = rbx;\n    data_61433c = 0;\n}\n\n"
        },
        {
            "funcName": "sub_406a10",
            "funcStartAddr": "0x406a10",
            "funcEndAddr": "0x406aa9",
            "decompiledFuncCode": "char* sub_406a10(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            char const* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char const temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = &rdi[1];\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_40f800;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_614680 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_406ab0",
            "funcStartAddr": "0x406ab0",
            "funcEndAddr": "0x406ba2",
            "decompiledFuncCode": "char* sub_406ab0(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_40aa50();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_406b91:\n                void* const rbx_1 = &data_40f804;\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_406b91;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_406b91;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_406b91;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_406b91;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_406b91;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_406b91;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_406b91;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_40f80d;\n            if (cond:2_1)\n            {\n                rbx = &data_40f80a;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_406b91;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_406b91;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_406b91;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_406b91;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_406b91;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_40f811;\n            if (cond:1_1)\n            {\n                rbx = &data_40f806;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_406bb0",
            "funcStartAddr": "0x401fa0",
            "funcEndAddr": "0x407dd1",
            "decompiledFuncCode": "int64_t sub_406bb0(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    char const* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n    label_406c48:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_406fbc:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_407004;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_406bb0(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char const rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_40701b;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_407155;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_406da5;\n                            }\n                            goto label_407090;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_407155;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_406f80;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_406f80:\n                            if (var_c0 == 0)\n                            {\n                                goto label_406f8b;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_406de7:\n                            if (var_5c == 0)\n                            {\n                                goto label_406df8;\n                            }\n                        label_406fb0:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_406fb8;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_4071eb;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_4071eb:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_4071fa:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_406fbc;\n                            }\n                            goto label_406f80;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_406f80;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_406f80;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_4071eb;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_406d86;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_406d86:\n                            if (var_5c == 0)\n                            {\n                                goto label_406da5;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_406da5;\n                            }\n                            goto label_4071fa;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_406d7d:\n                            if (r12_1 != 0)\n                            {\n                                goto label_406f8b;\n                            }\n                            goto label_406d86;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_4071b0:\n                            rdx = r11_1 == 2;\n                        label_406da5:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_406eac;\n                            }\n                            goto label_406daf;\n                        }\n                        case 0x27:\n                        {\n                            goto label_406f2d;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_406efd;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_406f5a;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_407ced;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_406ec4;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_406d59;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_407350;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_407350;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_407ca0:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_407004:\n                            rbx_1 = sub_406bb0(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_40701b:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_407155;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_4070a7;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_407155;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_407070:\n                                r13 = 0;\n                                goto label_406e2b;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_406df8:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_406e2b:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_406e35;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_406e35:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_406e3d;\n                            }\n                            case 9:\n                            {\n                                goto label_407020;\n                            }\n                            case 0xa:\n                            {\n                                goto label_406f98;\n                            }\n                            case 0xb:\n                            {\n                                goto label_407080;\n                            }\n                            case 0xc:\n                            {\n                                goto label_407060;\n                            }\n                            case 0xd:\n                            {\n                                goto label_407049;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_4073aa;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_407035;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_40738a;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_407372;\n                            }\n                            case 0x27:\n                            {\n                                goto label_406f2d;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_406efd;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_406f5a;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_406d59;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_407350:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_407150:\n                            var_b8 = 0;\n                        label_407155:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_4071a4:\n                                if (rdx == 0)\n                                {\n                                    goto label_4071b0;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_4076a1:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_406ec4;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_406fbc;\n                                }\n                                r13 = var_98;\n                                goto label_406e3d;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_40a580(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_406fbc;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_4076a1;\n                            }\n                            goto label_4071a4;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_407090:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_406fbc;\n                                }\n                                var_b8 = 0;\n                            label_4070a7:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_4070f2;\n                                    }\n                                    rax_8 = r10;\n                                label_4070ea:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_4070f2:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_406eac;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_407133;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_4070ea;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_406eac;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_407150;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_407065;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_406f9d;\n                            }\n                            case 9:\n                            {\n                            label_407020:\n                                rbp_3 = 0x74;\n                                goto label_406f9d;\n                            }\n                            case 0xa:\n                            {\n                            label_406f98:\n                                rbp_3 = 0x6e;\n                            label_406f9d:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_406fb0;\n                                }\n                                goto label_406df8;\n                            }\n                            case 0xb:\n                            {\n                            label_407080:\n                                rbp_3 = 0x76;\n                                goto label_407065;\n                            }\n                            case 0xc:\n                            {\n                            label_407060:\n                                rbp_3 = 0x66;\n                            label_407065:\n                                if (var_5c == 0)\n                                {\n                                    goto label_407070;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_406fb8:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_406fbc;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_407049:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_406f80;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_4073aa:\n                                rbp_3 = 0x20;\n                                goto label_407372;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_407035:\n                                rdx = 0;\n                            label_406f8b:\n                                r13 = 0;\n                                goto label_406da5;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_40738a:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_406da5;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_406daf:\n                                rax_8 = 0;\n                                goto label_406db1;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_407372:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_406db1;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_406f2d:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_406da5;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_407ced;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_406eac;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_406efd:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_407ced:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_406fbc;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_406eac:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_406de7;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_406ec4;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_406da5;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_407490:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_406da5;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_407490;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_407490;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_407490;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_407490;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_407ca0;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_407133:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_406eac;\n                                }\n                            label_406db1:\n                                if (arg7 == 0)\n                                {\n                                    goto label_406eac;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_406eac;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_406de7;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_406f5a:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_406f80;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_406ec4:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_406e3d;\n                                }\n                            label_406e3d:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_406e46;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_406e46:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_406d59:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_406f8b;\n                                }\n                                goto label_406d7d;\n                            }\n                        }\n                    }\n                }\n            }\n        label_407436:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = \"'\";\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_406c48;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = \"'\";\n                goto label_406c48;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"'\";\n            goto label_406c48;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40f804;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40f804;\n            }\n            goto label_406c48;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_40f804;\n            goto label_406c48;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_406c48;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_406ab0(&data_40f815, r13);\n                arg9 = sub_406ab0(\"'\", r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_406c48;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_407436;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n        goto label_406c48;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_407de0",
            "funcStartAddr": "0x401fa5",
            "funcEndAddr": "0x407f7e",
            "decompiledFuncCode": "char* sub_407de0(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_614318;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_614330 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_408f10();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x614320)\n        {\n            int64_t rax_9 = sub_408d20(0, rsi_1);\n            int128_t zmm0 = data_614320;\n            rbx = rax_9;\n            data_614318 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_408d20(rbx, rsi_1);\n            data_614318 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_614330;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_614330 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_406bb0(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        size_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x6146a0)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_408cc0(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_406bb0(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_407f80",
            "funcStartAddr": "0x407f80",
            "funcEndAddr": "0x407fb4",
            "decompiledFuncCode": "int64_t sub_407f80(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x6147a0;\n    }\n    int64_t rax_1 = sub_408ec0(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_407fc0",
            "funcStartAddr": "0x407fc0",
            "funcEndAddr": "0x407fcf",
            "decompiledFuncCode": "uint64_t sub_407fc0(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6147a0;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_407fd0",
            "funcStartAddr": "0x407fd0",
            "funcEndAddr": "0x407fdf",
            "decompiledFuncCode": "void sub_407fd0(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6147a0;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_407fe0",
            "funcStartAddr": "0x407fe0",
            "funcEndAddr": "0x408013",
            "decompiledFuncCode": "uint64_t sub_407fe0(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x6147a0;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_408020",
            "funcStartAddr": "0x408020",
            "funcEndAddr": "0x408033",
            "decompiledFuncCode": "uint64_t sub_408020(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6147a0;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_408040",
            "funcStartAddr": "0x408040",
            "funcEndAddr": "0x40806b",
            "decompiledFuncCode": "void sub_408040(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6147a0;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x6147a0;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_408070",
            "funcStartAddr": "0x408070",
            "funcEndAddr": "0x4080e2",
            "decompiledFuncCode": "int64_t sub_408070(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_6147a0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_406bb0(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_4080f0",
            "funcStartAddr": "0x4080f0",
            "funcEndAddr": "0x4081d1",
            "decompiledFuncCode": "char* sub_4080f0(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_6147a0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_406bb0(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_408cc0((rax_2 + 1));\n    sub_406bb0(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_4081e0",
            "funcStartAddr": "0x4081e0",
            "funcEndAddr": "0x4081ea",
            "decompiledFuncCode": "int64_t sub_4081e0(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_4080f0(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_4081f0",
            "funcStartAddr": "0x4081f0",
            "funcEndAddr": "0x408285",
            "decompiledFuncCode": "uint64_t sub_4081f0()\n{\n    uint64_t rax_2 = data_614330;\n    int64_t r12 = data_614318;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x6146a0)\n    {\n        rax_2 = free(rdi_2);\n        *data_614320 = 0x100;\n        *(data_614320 + 8) = 0x6146a0;\n    }\n    if (r12 != 0x614320)\n    {\n        rax_2 = free(r12);\n        data_614318 = 0x614320;\n    }\n    data_614330 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_408290",
            "funcStartAddr": "0x408290",
            "funcEndAddr": "0x4082a1",
            "decompiledFuncCode": "int64_t sub_408290(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_407de0(arg1, arg2, -1, &data_6147a0);\n}\n\n"
        },
        {
            "funcName": "sub_4082b0",
            "funcStartAddr": "0x4082b0",
            "funcEndAddr": "0x4082ba",
            "decompiledFuncCode": "int64_t sub_4082b0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_407de0(arg1, arg2, arg3, &data_6147a0);\n}\n\n"
        },
        {
            "funcName": "sub_4082c0",
            "funcStartAddr": "0x4082c0",
            "funcEndAddr": "0x4082d6",
            "decompiledFuncCode": "int64_t sub_4082c0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_407de0(0, arg1, -1, &data_6147a0);\n}\n\n"
        },
        {
            "funcName": "sub_4082e0",
            "funcStartAddr": "0x4082e0",
            "funcEndAddr": "0x4082f2",
            "decompiledFuncCode": "int64_t sub_4082e0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_407de0(0, arg1, arg2, &data_6147a0);\n}\n\n"
        },
        {
            "funcName": "sub_408300",
            "funcStartAddr": "0x401faa",
            "funcEndAddr": "0x408368",
            "decompiledFuncCode": "char* sub_408300(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_407de0(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_408370",
            "funcStartAddr": "0x401faf",
            "funcEndAddr": "0x4083d4",
            "decompiledFuncCode": "char* sub_408370(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_407de0(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_4083e0",
            "funcStartAddr": "0x4083e0",
            "funcEndAddr": "0x4083ec",
            "decompiledFuncCode": "int64_t sub_4083e0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_408300(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_4083f0",
            "funcStartAddr": "0x4083f0",
            "funcEndAddr": "0x4083ff",
            "decompiledFuncCode": "int64_t sub_4083f0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_408370(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_408400",
            "funcStartAddr": "0x408400",
            "funcEndAddr": "0x408470",
            "decompiledFuncCode": "char* sub_408400(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_6147d0;\n    int128_t var_48 = data_6147a0;\n    int128_t var_38 = data_6147b0;\n    int128_t var_28 = data_6147c0;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_407de0(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_408470",
            "funcStartAddr": "0x408470",
            "funcEndAddr": "0x40847d",
            "decompiledFuncCode": "int64_t sub_408470(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_408400(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_408480",
            "funcStartAddr": "0x408480",
            "funcEndAddr": "0x408491",
            "decompiledFuncCode": "int64_t sub_408480(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_408400(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_4084a0",
            "funcStartAddr": "0x4084a0",
            "funcEndAddr": "0x4084aa",
            "decompiledFuncCode": "int64_t sub_4084a0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_408400(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_4084b0",
            "funcStartAddr": "0x401fb4",
            "funcEndAddr": "0x40851e",
            "decompiledFuncCode": "char* sub_4084b0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_407de0(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_408520",
            "funcStartAddr": "0x408520",
            "funcEndAddr": "0x40858c",
            "decompiledFuncCode": "char* sub_408520(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_6147a0;\n    int128_t var_38 = data_6147b0;\n    int128_t var_28 = data_6147c0;\n    int64_t var_18 = data_6147d0;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_407de0(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4085e0",
            "funcStartAddr": "0x4085e0",
            "funcEndAddr": "0x4085ea",
            "decompiledFuncCode": "int64_t sub_4085e0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_407de0(arg1, arg2, arg3, &data_6142e0);\n}\n\n"
        },
        {
            "funcName": "sub_4085f0",
            "funcStartAddr": "0x4085f0",
            "funcEndAddr": "0x408602",
            "decompiledFuncCode": "int64_t sub_4085f0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_407de0(0, arg1, arg2, &data_6142e0);\n}\n\n"
        },
        {
            "funcName": "sub_408610",
            "funcStartAddr": "0x408610",
            "funcEndAddr": "0x408621",
            "decompiledFuncCode": "int64_t sub_408610(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_407de0(arg1, arg2, -1, &data_6142e0);\n}\n\n"
        },
        {
            "funcName": "sub_408630",
            "funcStartAddr": "0x408630",
            "funcEndAddr": "0x408646",
            "decompiledFuncCode": "int64_t sub_408630(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_407de0(0, arg1, -1, &data_6142e0);\n}\n\n"
        },
        {
            "funcName": "sub_408650",
            "funcStartAddr": "0x408650",
            "funcEndAddr": "0x408701",
            "decompiledFuncCode": "int64_t sub_408650(int32_t arg1, int32_t arg2, char* arg3, int32_t arg4, \n    char* arg5, int128_t* arg6)\n{\n    char* rax = sub_4094c0(arg5, arg6);\n    if (rax == 0)\n    {\n        error(0, *__errno_location(), dcgettext(nullptr, \"unable to display error message\", 5));\n        abort();\n        /* no return */\n    }\n    if (arg3 == 0)\n    {\n        error(arg1, arg2, \"%s\", rax);\n        /* tailcall */\n        return free(rax);\n    }\n    error_at_line(arg1, arg2, arg3, arg4, \"%s\", rax);\n    /* tailcall */\n    return free(rax);\n}\n\n"
        },
        {
            "funcName": "sub_408710",
            "funcStartAddr": "0x408710",
            "funcEndAddr": "0x40871f",
            "decompiledFuncCode": "int64_t sub_408710(int32_t arg1, int32_t arg2, char* arg3, int128_t* arg4)\n{\n    /* tailcall */\n    return sub_408650(arg1, arg2, nullptr, 0, arg3, arg4);\n}\n\n"
        },
        {
            "funcName": "sub_408720",
            "funcStartAddr": "0x401fb9",
            "funcEndAddr": "0x408afd",
            "decompiledFuncCode": "int64_t sub_408720(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_41058b, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_408b00",
            "funcStartAddr": "0x408b00",
            "funcEndAddr": "0x408b20",
            "decompiledFuncCode": "int64_t sub_408b00(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_408720(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_408b20",
            "funcStartAddr": "0x408b20",
            "funcEndAddr": "0x408b80",
            "decompiledFuncCode": "int64_t sub_408b20(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_408720(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_408b80",
            "funcStartAddr": "0x408b80",
            "funcEndAddr": "0x408c3c",
            "decompiledFuncCode": "int64_t sub_408b80(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_408720(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_408c40",
            "funcStartAddr": "0x408c40",
            "funcEndAddr": "0x408cb4",
            "decompiledFuncCode": "int64_t sub_408c40()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_408cc0",
            "funcStartAddr": "0x408cc0",
            "funcEndAddr": "0x408cda",
            "decompiledFuncCode": "int64_t sub_408cc0(size_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_408f10();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_408d20",
            "funcStartAddr": "0x408d20",
            "funcEndAddr": "0x408d56",
            "decompiledFuncCode": "int64_t sub_408d20(int64_t arg1, size_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_408f10();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_408e6a",
            "funcStartAddr": "0x408e6a",
            "funcEndAddr": "0x408e70",
            "decompiledFuncCode": "int64_t sub_408e6a() __noreturn\n{\n    sub_408f10();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_408e70",
            "funcStartAddr": "0x408e70",
            "funcEndAddr": "0x408e87",
            "decompiledFuncCode": "int64_t sub_408e70(size_t arg1)\n{\n    /* tailcall */\n    return memset(sub_408cc0(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_408e90",
            "funcStartAddr": "0x408e90",
            "funcEndAddr": "0x408ebe",
            "decompiledFuncCode": "int64_t sub_408e90(size_t arg1, size_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_408f10();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_408ec0",
            "funcStartAddr": "0x408ec0",
            "funcEndAddr": "0x408ee8",
            "decompiledFuncCode": "int64_t sub_408ec0(int64_t arg1, size_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_408cc0(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_408ef0",
            "funcStartAddr": "0x408ef0",
            "funcEndAddr": "0x408f03",
            "decompiledFuncCode": "int64_t sub_408ef0(char* arg1)\n{\n    /* tailcall */\n    return sub_408ec0(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_408f10",
            "funcStartAddr": "0x408f10",
            "funcEndAddr": "0x408f41",
            "decompiledFuncCode": "int64_t sub_408f10() __noreturn\n{\n    error(data_6142d0, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_408f50",
            "funcStartAddr": "0x408f50",
            "funcEndAddr": "0x409384",
            "decompiledFuncCode": "uint64_t sub_408f50(char* arg1, int64_t* arg2, int32_t arg3, uint64_t* arg4, \n    char* arg5)\n{\n    if (arg3 > 0x24)\n    {\n        __assert_fail(\"0 <= strtol_base && strtol_base \u2026\", \"lib/xstrtol.c\", 0x60, \"xstrtoumax\");\n        /* no return */\n    }\n    int64_t* r15 = arg2;\n    void var_40;\n    if (arg2 == 0)\n    {\n        r15 = &var_40;\n    }\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char rbx = *arg1;\n    uint16_t* rsi = *__ctype_b_loc();\n    char* rax_2 = arg1;\n    while ((*(&rsi[rbx] + 1) & 0x20) != 0)\n    {\n        rax_2 = &rax_2[1];\n        rbx = *rax_2;\n    }\n    int32_t rbp_1;\n    if (rbx == 0x2d)\n    {\n    label_40901a:\n        rbp_1 = 4;\n    }\n    else\n    {\n        char* r8 = *r15;\n        uint64_t rbx_1 = __strtoul_internal(arg1, r15, arg3, 0);\n        int32_t var_58;\n        void* r8_1;\n        uint32_t r12_1;\n        if (r8 == arg1)\n        {\n            var_58 = r8;\n            if (arg5 == 0)\n            {\n                goto label_40901a;\n            }\n            r12_1 = *arg1;\n            if (r12_1 == 0)\n            {\n                goto label_40901a;\n            }\n            rbp_1 = 0;\n            rbx_1 = 1;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) == 0)\n            {\n                goto label_40901a;\n            }\n        label_409057:\n            uint64_t rdx_1 = (r12_1 - 0x45);\n            int64_t rdx_3;\n            int32_t rsi_3;\n            if (rdx_1 <= 0x2f)\n            {\n                var_58 = rdx_1;\n                if ((!(TEST_BITQ(0x814400308945, rdx_1))))\n                {\n                    goto label_4090c0;\n                }\n                if (strchr(arg5, 0x30) == 0)\n                {\n                    goto label_4090c0;\n                }\n                char rax_8 = *(r8_1 + 1);\n                if (rax_8 == 0x44)\n                {\n                label_4092e8:\n                    rsi_3 = 2;\n                    rdx_3 = 0x3e8;\n                    goto label_4090ca;\n                }\n                if (rax_8 == 0x69)\n                {\n                    rdx_3 = 0x400;\n                    int32_t rsi_6;\n                    rsi_6 = *(r8_1 + 2) == 0x42;\n                    rsi_3 = ((rsi_6 + rsi_6) + 1);\n                    goto label_4090ca;\n                }\n                uint64_t rdx_2 = var_58;\n                if (rax_8 == 0x42)\n                {\n                    goto label_4092e8;\n                }\n                int32_t r9_1;\n                switch (rdx_2)\n                {\n                    case 0:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40926b:\n                        int64_t rcx_6 = rdx_3;\n                        int32_t rdi_8 = 6;\n                        r9_1 = 0;\n                        int32_t temp15_1;\n                        do\n                        {\n                            uint64_t rax_28;\n                            int64_t rdx_11;\n                            rdx_11 = HIGHD((rbx_1 * rcx_6));\n                            rax_28 = LOWD((rbx_1 * rcx_6));\n                            bool o_8 = ((rbx_1 * rcx_6) >> 0x40) != 0;\n                            rbx_1 = rax_28;\n                            if (o_8)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp15_1 = rdi_8;\n                            rdi_8 = (rdi_8 - 1);\n                        } while (temp15_1 != 1);\n                        goto label_4091c4;\n                    }\n                    case 1:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 7:\n                    case 9:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xe:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1f:\n                    case 0x20:\n                    case 0x21:\n                    case 0x23:\n                    case 0x24:\n                    case 0x25:\n                    case 0x27:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    {\n                        goto label_409165;\n                    }\n                    case 2:\n                    case 0x22:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4092a3:\n                        int64_t rcx_7 = rdx_3;\n                        int64_t rax_30;\n                        int64_t rdx_12;\n                        rdx_12 = HIGHD((rbx_1 * rcx_7));\n                        rax_30 = LOWD((rbx_1 * rcx_7));\n                        int64_t rax_31;\n                        if (((rbx_1 * rcx_7) >> 0x40) == 0)\n                        {\n                            int64_t rdx_13;\n                            rdx_13 = HIGHD((rax_30 * rcx_7));\n                            rax_31 = LOWD((rax_30 * rcx_7));\n                            if (((rax_30 * rcx_7) >> 0x40) == 0)\n                            {\n                                uint64_t rax_32;\n                                int64_t rdx_14;\n                                rdx_14 = HIGHD((rax_31 * rcx_7));\n                                rax_32 = LOWD((rax_31 * rcx_7));\n                                if (((rax_31 * rcx_7) >> 0x40) == 0)\n                                {\n                                    rbx_1 = rax_32;\n                                    rbp_1 = (rbp_1 | 0);\n                                }\n                            }\n                        }\n                        if (((((rbx_1 * rcx_7) >> 0x40) != 0 || (((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) != 0)) || ((((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) == 0) && ((rax_31 * rcx_7) >> 0x40) != 0)))\n                        {\n                            rbx_1 = -1;\n                            rbp_1 = (rbp_1 | 1);\n                        }\n                        goto label_40910d;\n                    }\n                    case 6:\n                    case 0x26:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40912f:\n                        uint64_t rax_15;\n                        int64_t rdx_6;\n                        rdx_6 = HIGHD((rbx_1 * rdx_3));\n                        rax_15 = LOWD((rbx_1 * rdx_3));\n                        bool o_3 = ((rbx_1 * rdx_3) >> 0x40) != 0;\n                        rbx_1 = rax_15;\n                        if ((!o_3))\n                        {\n                            goto label_40910d;\n                        }\n                        goto label_409137;\n                    }\n                    case 8:\n                    case 0x28:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4090ee:\n                        int64_t rcx_1 = rdx_3;\n                        int64_t rax_10;\n                        int64_t rdx_4;\n                        rdx_4 = HIGHD((rbx_1 * rcx_1));\n                        rax_10 = LOWD((rbx_1 * rcx_1));\n                        if (((rbx_1 * rcx_1) >> 0x40) == 0)\n                        {\n                            uint64_t rax_11;\n                            int64_t rdx_5;\n                            rdx_5 = HIGHD((rax_10 * rcx_1));\n                            rax_11 = LOWD((rax_10 * rcx_1));\n                            if (((rax_10 * rcx_1) >> 0x40) != 0)\n                            {\n                                goto label_409137;\n                            }\n                            rbx_1 = rax_11;\n                            goto label_40910d;\n                        }\n                    label_409137:\n                        rbp_1 = 1;\n                        rbx_1 = -1;\n                        goto label_40910d;\n                    }\n                    case 0xb:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_409238:\n                        int64_t rcx_5 = rdx_3;\n                        int32_t rdi_7 = 5;\n                        r9_1 = 0;\n                        int32_t temp14_1;\n                        do\n                        {\n                            uint64_t rax_26;\n                            int64_t rdx_10;\n                            rdx_10 = HIGHD((rbx_1 * rcx_5));\n                            rax_26 = LOWD((rbx_1 * rcx_5));\n                            bool o_7 = ((rbx_1 * rcx_5) >> 0x40) != 0;\n                            rbx_1 = rax_26;\n                            if (o_7)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp14_1 = rdi_7;\n                            rdi_7 = (rdi_7 - 1);\n                        } while (temp14_1 != 1);\n                        goto label_4091c4;\n                    }\n                    case 0xf:\n                    case 0x2f:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_409208:\n                        int64_t rcx_4 = rdx_3;\n                        int32_t rdi_6 = 4;\n                        r9_1 = 0;\n                        int32_t temp13_1;\n                        do\n                        {\n                            uint64_t rax_24;\n                            int64_t rdx_9;\n                            rdx_9 = HIGHD((rbx_1 * rcx_4));\n                            rax_24 = LOWD((rbx_1 * rcx_4));\n                            bool o_6 = ((rbx_1 * rcx_4) >> 0x40) != 0;\n                            rbx_1 = rax_24;\n                            if (o_6)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp13_1 = rdi_6;\n                            rdi_6 = (rdi_6 - 1);\n                        } while (temp13_1 != 1);\n                        goto label_4091c4;\n                    }\n                    case 0x14:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4091d6:\n                        int64_t rcx_3 = rdx_3;\n                        int32_t rdi_5 = 8;\n                        r9_1 = 0;\n                        int32_t temp12_1;\n                        do\n                        {\n                            uint64_t rax_22;\n                            int64_t rdx_8;\n                            rdx_8 = HIGHD((rbx_1 * rcx_3));\n                            rax_22 = LOWD((rbx_1 * rcx_3));\n                            bool o_5 = ((rbx_1 * rcx_3) >> 0x40) != 0;\n                            rbx_1 = rax_22;\n                            if (o_5)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp12_1 = rdi_5;\n                            rdi_5 = (rdi_5 - 1);\n                        } while (temp12_1 != 1);\n                        goto label_4091c4;\n                    }\n                    case 0x15:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40919b:\n                        int64_t rcx_2 = rdx_3;\n                        int32_t rdi_4 = 7;\n                        r9_1 = 0;\n                        int32_t temp11_1;\n                        do\n                        {\n                            uint64_t rax_20;\n                            int64_t rdx_7;\n                            rdx_7 = HIGHD((rbx_1 * rcx_2));\n                            rax_20 = LOWD((rbx_1 * rcx_2));\n                            bool o_4 = ((rbx_1 * rcx_2) >> 0x40) != 0;\n                            rbx_1 = rax_20;\n                            if (o_4)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp11_1 = rdi_4;\n                            rdi_4 = (rdi_4 - 1);\n                        } while (temp11_1 != 1);\n                    label_4091c4:\n                        rbp_1 = (rbp_1 | r9_1);\n                        goto label_40910d;\n                    }\n                    case 0x1d:\n                    {\n                        rsi_3 = 1;\n                        break;\n                    }\n                    case 0x1e:\n                    {\n                        rsi_3 = 1;\n                        goto label_40910d;\n                    }\n                }\n            }\n            else\n            {\n            label_4090c0:\n                rsi_3 = 1;\n                rdx_3 = 0x400;\n            label_4090ca:\n                char r12_2 = (r12_1 - 0x42);\n                if (r12_2 > 0x35)\n                {\n                    goto label_409165;\n                }\n                switch (r12_2)\n                {\n                    case 0:\n                    {\n                        if ((rbx_1 >> 0x36) != 0)\n                        {\n                            goto label_409137;\n                        }\n                        rbx_1 = (rbx_1 << 0xa);\n                        goto label_40910d;\n                    }\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x22:\n                    case 0x23:\n                    case 0x24:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x2a:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x33:\n                    case 0x34:\n                    {\n                        goto label_409165;\n                    }\n                    case 3:\n                    {\n                        goto label_40926b;\n                    }\n                    case 5:\n                    case 0x25:\n                    {\n                        goto label_4092a3;\n                    }\n                    case 9:\n                    case 0x29:\n                    {\n                        goto label_40912f;\n                    }\n                    case 0xb:\n                    case 0x2b:\n                    {\n                        goto label_4090ee;\n                    }\n                    case 0xe:\n                    {\n                        goto label_409238;\n                    }\n                    case 0x12:\n                    case 0x32:\n                    {\n                        goto label_409208;\n                    }\n                    case 0x17:\n                    {\n                        goto label_4091d6;\n                    }\n                    case 0x18:\n                    {\n                        goto label_40919b;\n                    }\n                    case 0x21:\n                    {\n                        goto label_40910d;\n                    }\n                    case 0x35:\n                    {\n                        if (rbx_1 < 0)\n                        {\n                            goto label_409137;\n                        }\n                        rbx_1 = (rbx_1 + rbx_1);\n                    label_40910d:\n                        void* r8_2 = (r8_1 + rsi_3);\n                        int32_t rax_13 = (rbp_1 | 2);\n                        *r15 = r8_2;\n                        if (*r8_2 != 0)\n                        {\n                            rbp_1 = rax_13;\n                        }\n                        goto label_408ff2;\n                    }\n                }\n            }\n            if ((rbx_1 >> 0x37) != 0)\n            {\n                goto label_409137;\n            }\n            rbx_1 = (rbx_1 << 9);\n            goto label_40910d;\n        }\n        int32_t rax_4 = *rax;\n        if (rax_4 == 0)\n        {\n            rbp_1 = 0;\n        }\n        else\n        {\n            rbp_1 = 1;\n            if (rax_4 != 0x22)\n            {\n                goto label_40901a;\n            }\n        }\n        if (arg5 == 0)\n        {\n        label_408ff2:\n            *arg4 = rbx_1;\n        }\n        else\n        {\n            r12_1 = *r8;\n            if (r12_1 == 0)\n            {\n                goto label_408ff2;\n            }\n            var_58 = r8;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) != 0)\n            {\n                goto label_409057;\n            }\n        label_409165:\n            *arg4 = rbx_1;\n            rbp_1 = (rbp_1 | 2);\n        }\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_409390",
            "funcStartAddr": "0x409390",
            "funcEndAddr": "0x4094b7",
            "decompiledFuncCode": "char* sub_409390(int64_t arg1, int128_t* arg2)\n{\n    int128_t var_50 = *arg2;\n    int64_t r15 = arg2[1];\n    int64_t var_40 = r15;\n    int64_t rbx;\n    char* rbx_1;\n    char* rbp_1;\n    if (arg1 == 0)\n    {\n        char* rax_10 = sub_408cc0(1);\n        rbx_1 = rax_10;\n        rbp_1 = rax_10;\n    }\n    else\n    {\n        int64_t r13_1 = arg1;\n        int64_t rbp = arg1;\n        rbx = 0;\n        int64_t temp1_1;\n        do\n        {\n            int32_t rax_3 = var_50;\n            int64_t* rdx_2;\n            if (rax_3 <= 0x2f)\n            {\n                var_50 = (rax_3 + 8);\n                rdx_2 = (rax_3 + r15);\n            }\n            else\n            {\n                rdx_2 = *var_50[8];\n                *var_50[8] = &rdx_2[1];\n            }\n            uint64_t rax_2 = strlen(*rdx_2);\n            int64_t temp0_1 = rbx;\n            rbx = (rbx + rax_2);\n            if ((temp0_1 + rax_2) < temp0_1)\n            {\n                rbx = -1;\n            }\n            temp1_1 = rbp;\n            rbp = (rbp - 1);\n        } while (temp1_1 != 1);\n        if (rbx > 0x7fffffff)\n        {\n            rbp_1 = nullptr;\n            *__errno_location() = 0x4b;\n        }\n        else\n        {\n            char* rax_5 = sub_408cc0((rbx + 1));\n            rbp_1 = rax_5;\n            rbx_1 = rax_5;\n            int64_t temp2_1;\n            do\n            {\n                int32_t rax_8 = *arg2;\n                int64_t* rdx_4;\n                if (rax_8 <= 0x2f)\n                {\n                    rdx_4 = (rax_8 + arg2[1]);\n                    *arg2 = (rax_8 + 8);\n                }\n                else\n                {\n                    rdx_4 = *(arg2 + 8);\n                    *(arg2 + 8) = &rdx_4[1];\n                }\n                char* r15_1 = *rdx_4;\n                uint64_t rax_7 = strlen(r15_1);\n                memcpy(rbx_1, r15_1, rax_7);\n                rbx_1 = &rbx_1[rax_7];\n                temp2_1 = r13_1;\n                r13_1 = (r13_1 - 1);\n            } while (temp2_1 != 1);\n        }\n    }\n    if ((arg1 == 0 || (arg1 != 0 && rbx <= 0x7fffffff)))\n    {\n        *rbx_1 = 0;\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_4094c0",
            "funcStartAddr": "0x4094c0",
            "funcEndAddr": "0x40954a",
            "decompiledFuncCode": "char* sub_4094c0(char* arg1, int128_t* arg2)\n{\n    char rax = *arg1;\n    if (rax == 0)\n    {\n        return sub_409390(0, arg2);\n    }\n    if ((rax == 0x25 && arg1[1] == 0x73))\n    {\n        int64_t rax_1 = 0;\n        do\n        {\n            rax_1 = (rax_1 + 1);\n            char rcx_1 = arg1[(rax_1 << 1)];\n            if (rcx_1 == 0)\n            {\n                return sub_409390(rax_1, arg2);\n            }\n            if (rcx_1 != 0x25)\n            {\n                break;\n            }\n        } while (arg1[((rax_1 << 1) + 1)] == 0x73);\n    }\n    char* var_10;\n    if (sub_40a600(&var_10, arg1, arg2) >= 0)\n    {\n        return var_10;\n    }\n    if (*__errno_location() == 0xc)\n    {\n        sub_408f10();\n        /* no return */\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_409550",
            "funcStartAddr": "0x409550",
            "funcEndAddr": "0x4095cb",
            "decompiledFuncCode": "int64_t sub_409550(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_409710(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_4095d0",
            "funcStartAddr": "0x4095d0",
            "funcEndAddr": "0x409705",
            "decompiledFuncCode": "uint64_t sub_4095d0(int32_t arg1, int32_t arg2, int32_t arg3)\n{\n    void* var_58 = &arg_8;\n    int64_t rcx;\n    int64_t var_30 = rcx;\n    int32_t var_60 = 0x10;\n    void var_48;\n    void* var_50 = &var_48;\n    if (arg2 != 0x406)\n    {\n        return fcntl();\n    }\n    int32_t var_60_1 = 0x18;\n    int32_t rax_2;\n    int32_t rax_5;\n    int32_t* rax_15;\n    int32_t rax_17;\n    int32_t rbx;\n    if (data_6147d8 < 0)\n    {\n        rax_5 = sub_4095d0();\n        rbx = rax_5;\n    }\n    else\n    {\n        rax_2 = fcntl();\n        rbx = rax_2;\n        if (rax_2 < 0)\n        {\n            rax_15 = __errno_location();\n            if (*rax_15 == 0x16)\n            {\n                rax_17 = sub_4095d0(arg1, 0, arg3);\n                rbx = rax_17;\n                if (rax_17 >= 0)\n                {\n                    data_6147d8 = 0xffffffff;\n                }\n            }\n        }\n    }\n    if (((((data_6147d8 >= 0 && rax_2 < 0) && *rax_15 == 0x16) && rax_17 >= 0) || (rax_5 >= 0 && data_6147d8 == 0xffffffff)))\n    {\n        int32_t rax_7 = fcntl(rbx, 1);\n        int32_t rax_10;\n        if (rax_7 >= 0)\n        {\n            rax_10 = fcntl(rbx, 2, (rax_7 | 1));\n        }\n        if ((rax_7 < 0 || (rax_7 >= 0 && rax_10 == 0xffffffff)))\n        {\n            int32_t* rax_11 = __errno_location();\n            int32_t rdi_2 = rbx;\n            rbx = -1;\n            int32_t r12_1 = *rax_11;\n            close(rdi_2);\n            *rax_11 = r12_1;\n        }\n    }\n    if ((data_6147d8 >= 0 && (rax_2 >= 0 || (rax_2 < 0 && *rax_15 != 0x16))))\n    {\n        data_6147d8 = 1;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_409710",
            "funcStartAddr": "0x409710",
            "funcEndAddr": "0x409750",
            "decompiledFuncCode": "int64_t sub_409710(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_409750(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_409750",
            "funcStartAddr": "0x409750",
            "funcEndAddr": "0x4097a7",
            "decompiledFuncCode": "off64_t sub_409750(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_4097b0",
            "funcStartAddr": "0x4097b0",
            "funcEndAddr": "0x40988f",
            "decompiledFuncCode": "uint64_t sub_4097b0(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_409890",
            "funcStartAddr": "0x409890",
            "funcEndAddr": "0x409eac",
            "decompiledFuncCode": "uint64_t sub_409890(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_409ac0;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_4099e6;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_4099e6;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_4099e6:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_409ac0:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_409aee;\n                }\n                *arg5 = r12;\n            label_409aee:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_409b0c;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_409b0c:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_409b0c;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_409a7e;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_409a7e:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_409eb0",
            "funcStartAddr": "0x409eb0",
            "funcEndAddr": "0x40a476",
            "decompiledFuncCode": "uint64_t sub_409eb0(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_40a0ec;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_409f78;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_409f78:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_4097b0(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_410d91;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_4097b0(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_40a0ec;\n                }\n                *arg7 = rdx_2;\n            label_40a0ec:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_40a1f0;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_410d91;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_40a260;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_40a1f0;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_40a1f0;\n                            }\n                            goto label_40a1b1;\n                        }\n                    label_40a1b1:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_409890(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_410d92);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_40a1f0:\n                            rdx = &r14_1[1];\n                        label_40a031:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_40a22e;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_40a22e:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_410db0;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_40a260:\n                                        r14_2 = sub_409890(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_40a31d;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_40a31d:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_40a0ec;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_409f78;\n        }\n        goto label_40a031;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_40a4e0",
            "funcStartAddr": "0x40a4e0",
            "funcEndAddr": "0x40a4f8",
            "decompiledFuncCode": "uint64_t sub_40a4e0(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_40a580",
            "funcStartAddr": "0x40a580",
            "funcEndAddr": "0x40a5fa",
            "decompiledFuncCode": "uint64_t sub_40a580(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_410d94[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_40a5aa;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_40a5aa:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_40a9f0() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_40a600",
            "funcStartAddr": "0x40a600",
            "funcEndAddr": "0x40a659",
            "decompiledFuncCode": "uint64_t sub_40a600(char** arg1, char* arg2, int64_t arg3)\n{\n    int64_t var_10;\n    char* rax;\n    uint16_t x87control;\n    int80_t st0;\n    rax = sub_40afc0(nullptr, &var_10, arg2, arg3, x87control);\n    uint64_t rax_1;\n    if (rax == 0)\n    {\n        rax_1 = 0xffffffff;\n    }\n    else\n    {\n        int64_t rdx_1 = var_10;\n        if (rdx_1 > 0x7fffffff)\n        {\n            free(rax);\n            *__errno_location() = 0x4b;\n            rax_1 = 0xffffffff;\n        }\n        else\n        {\n            *arg1 = rax;\n            rax_1 = rdx_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40a660",
            "funcStartAddr": "0x40a660",
            "funcEndAddr": "0x40a66a",
            "decompiledFuncCode": "int64_t sub_40a660() __noreturn\n{\n    /* tailcall */\n    return sub_405460(1);\n}\n\n"
        },
        {
            "funcName": "sub_40a670",
            "funcStartAddr": "0x40a670",
            "funcEndAddr": "0x40a786",
            "decompiledFuncCode": "int64_t sub_40a670(char* arg1, int64_t* arg2, int64_t arg3, uint64_t arg4)\n{\n    int64_t rbp = arg3;\n    uint64_t rax = strlen(arg1);\n    char* r14 = *arg2;\n    int64_t var_58 = -1;\n    if (r14 != 0)\n    {\n        char var_41_1 = 0;\n        int64_t rbx_1 = 0;\n        while (true)\n        {\n            if (strncmp(r14, arg1, rax) == 0)\n            {\n                if (strlen(r14) == rax)\n                {\n                    var_58 = rbx_1;\n                    break;\n                }\n                if (var_58 == -1)\n                {\n                    var_58 = rbx_1;\n                    rbx_1 = (rbx_1 + 1);\n                    rbp = (rbp + arg4);\n                    r14 = arg2[rbx_1];\n                    if (r14 != 0)\n                    {\n                        continue;\n                    }\n                    goto label_40a74d;\n                }\n                if (arg3 == 0)\n                {\n                    var_41_1 = 1;\n                }\n                else\n                {\n                    char rax_3 = var_41_1;\n                    if (memcmp(((var_58 * arg4) + arg3), rbp, arg4) != 0)\n                    {\n                        rax_3 = 1;\n                    }\n                    var_41_1 = rax_3;\n                }\n            }\n            rbx_1 = (rbx_1 + 1);\n            rbp = (rbp + arg4);\n            r14 = arg2[rbx_1];\n            if (r14 == 0)\n            {\n            label_40a74d:\n                int64_t rax_6 = -2;\n                if (var_41_1 == 0)\n                {\n                    rax_6 = var_58;\n                }\n                var_58 = rax_6;\n                break;\n            }\n        }\n    }\n    return var_58;\n}\n\n"
        },
        {
            "funcName": "sub_40a790",
            "funcStartAddr": "0x40a790",
            "funcEndAddr": "0x40a801",
            "decompiledFuncCode": "int64_t sub_40a790(uint64_t arg1, uint64_t arg2, int64_t arg3)\n{\n    char* rbx;\n    if (arg3 == -1)\n    {\n        rbx = dcgettext(nullptr, \"invalid argument %s for %s\", 5);\n    }\n    else\n    {\n        rbx = dcgettext(nullptr, \"ambiguous argument %s for %s\", 5);\n    }\n    /* tailcall */\n    return error(0, 0, rbx, sub_408300(0, 8, arg2), sub_408610(1, arg1));\n}\n\n"
        },
        {
            "funcName": "sub_40a810",
            "funcStartAddr": "0x40a810",
            "funcEndAddr": "0x40a928",
            "decompiledFuncCode": "char* sub_40a810(int64_t* arg1, int64_t arg2, uint64_t arg3)\n{\n    int64_t r14 = 0;\n    int64_t rbp = arg2;\n    int64_t rbx = 0;\n    fputs_unlocked(dcgettext(nullptr, \"Valid arguments are:\", 5), stderr);\n    uint64_t r12 = *arg1;\n    if (r12 != 0)\n    {\n        do\n        {\n            if ((rbx != 0 && memcmp(r14, rbp, arg3) == 0))\n            {\n                rbx = (rbx + 1);\n                rbp = (rbp + arg3);\n                __fprintf_chk(stderr, 1, \", %s\", sub_408630(r12));\n                r12 = arg1[rbx];\n                if (r12 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = (rbx + 1);\n            r14 = rbp;\n            rbp = (rbp + arg3);\n            __fprintf_chk(stderr, 1, \"\\n  - %s\", sub_408630(r12));\n            r12 = arg1[rbx];\n        } while (r12 != 0);\n    }\n    uint64_t* const rdi_6 = stderr;\n    char* rax_6 = stderr[5];\n    if (rax_6 >= stderr[6])\n    {\n        /* tailcall */\n        return __overflow(rdi_6, 0xa);\n    }\n    stderr[5] = &rax_6[1];\n    *rax_6 = 0xa;\n    return rax_6;\n}\n\n"
        },
        {
            "funcName": "sub_40a930",
            "funcStartAddr": "0x40a930",
            "funcEndAddr": "0x40a9a0",
            "decompiledFuncCode": "int64_t sub_40a930(uint64_t arg1, char* arg2, int64_t* arg3, int64_t arg4, \n    uint64_t arg5, int64_t arg6)\n{\n    int64_t rax = sub_40a670(arg2, arg3, arg4, arg5);\n    if (rax < 0)\n    {\n        sub_40a790(arg1, arg2, rax);\n        sub_40a810(arg3, arg4, arg5);\n        arg6();\n        rax = -1;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40a9a0",
            "funcStartAddr": "0x40a9a0",
            "funcEndAddr": "0x40a9ed",
            "decompiledFuncCode": "int64_t sub_40a9a0(int64_t arg1, int64_t* arg2, int64_t arg3, uint64_t arg4)\n{\n    int64_t r14 = *arg2;\n    if (r14 != 0)\n    {\n        void* rbx_1 = &arg2[1];\n        int64_t rbp_1 = arg3;\n        do\n        {\n            if (memcmp(arg1, rbp_1, arg4) == 0)\n            {\n                break;\n            }\n            r14 = *rbx_1;\n            rbp_1 = (rbp_1 + arg4);\n            rbx_1 = (rbx_1 + 8);\n        } while (r14 != 0);\n    }\n    return r14;\n}\n\n"
        },
        {
            "funcName": "sub_40a9f0",
            "funcStartAddr": "0x40a9f0",
            "funcEndAddr": "0x40aa4e",
            "decompiledFuncCode": "int64_t sub_40a9f0()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_410e09;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            char const* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char const temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = &rdi_2[1];\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40aa50",
            "funcStartAddr": "0x40aa50",
            "funcEndAddr": "0x40afb2",
            "decompiledFuncCode": "char* sub_40aa50()\n{\n    char* rax = nl_langinfo(0xe);\n    int64_t r15 = data_614818;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_410d94[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        size_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            size_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_40ab4c;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_40ab96;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_40ab4c:\n            r15 = 0x410daf;\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_40ab96:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = 0;\n                rax_12 = fdopen(rax_11, \"r\");\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_40ac4c:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_40addb;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_40ac88:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_40ac88;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_40acc2:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_40acc2;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                int64_t rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    int64_t rdi_26 = r15;\n                                    r15 = 0x410daf;\n                                    free(rdi_26);\n                                    sub_409550(rax_12);\n                                    goto label_40abd7;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                char* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = (&rsi_13[8] & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_40ae9b:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_40ae9b;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_40aee9:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_40aee9;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_40ac4c;\n                        }\n                        break;\n                    }\n                label_40addb:\n                    sub_409550(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = 0x410daf;\n            }\n        label_40abd7:\n            free(rbp_3);\n        }\n        data_614818 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && *(r15 + 1) != 0))))\n            {\n                char* rbp_1 = ((r15 + strlen(r15)) + 1);\n                r15 = &rbp_1[(strlen(rbp_1) + 1)];\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = ((r15 + strlen(r15)) + 1);\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40afc0",
            "funcStartAddr": "0x401fbe",
            "funcEndAddr": "0x40cad9",
            "decompiledFuncCode": "char* sub_40afc0(char* arg1, uint64_t* arg2, char* arg3, int64_t arg4, \n    uint16_t arg5 @ x87control)\n{\n    int64_t rbp;\n    int64_t __saved_rbp = rbp;\n    int64_t r15;\n    int64_t __saved_r15 = r15;\n    int64_t r14;\n    int64_t __saved_r14 = r14;\n    int64_t r13;\n    int64_t __saved_r13 = r13;\n    int64_t r12;\n    int64_t __saved_r12 = r12;\n    int64_t rbx;\n    int64_t __saved_rbx = rbx;\n    void var_6f8;\n    void* rsp_1 = &var_6f8;\n    void var_678;\n    int64_t var_588;\n    char* rbx_2;\n    if (sub_40cd00(arg3, &var_588, &var_678) < 0)\n    {\n        rbx_2 = nullptr;\n    }\n    else\n    {\n        char* var_670;\n        void var_668;\n        int64_t* var_580;\n        void var_568;\n        if (sub_40cae0(arg4, &var_678) >= 0)\n        {\n            int64_t var_578;\n            int64_t rax_3 = (var_578 + 7);\n            if (rax_3 <= 6)\n            {\n                rax_3 = -1;\n            }\n            int64_t var_570;\n            int64_t rax_4 = (rax_3 + var_570);\n            char* var_6a8;\n            int64_t rcx;\n            char* r8_1;\n            if ((rax_3 + var_570) >= rax_3)\n            {\n                size_t rdi_3 = (rax_4 + 6);\n                if (rax_4 >= -6)\n                {\n                    goto label_40b6e5;\n                }\n                char* var_6e0_1;\n                char* var_6b0_1;\n                int32_t* rdx_1;\n                if (rdi_3 <= 0xf9f)\n                {\n                    var_6e0_1 = nullptr;\n                    rsp_1 = (&var_6f8 - ((rax_4 + 0x1d) & 0xfffffffffffffff0));\n                    var_6b0_1 = ((rsp_1 + 0xf) & 0xfffffffffffffff0);\n                }\n                else\n                {\n                    if (rdi_3 == -1)\n                    {\n                        goto label_40b6e5;\n                    }\n                    char* rax_5;\n                    rax_5 = malloc(rdi_3);\n                    var_6b0_1 = rax_5;\n                    if (rax_5 == 0)\n                    {\n                        goto label_40b6e5;\n                    }\n                    var_6e0_1 = rax_5;\n                }\n                size_t r12_1 = 0;\n                if (arg1 != 0)\n                {\n                    r12_1 = *arg2;\n                }\n                int64_t* r14_1 = var_580;\n                r8_1 = arg3;\n                rbx_2 = arg1;\n                int64_t var_6c0_1 = 0;\n                uint64_t r15_2 = 0;\n                rcx = *r14_1;\n                void* r13_1;\n                if (rcx != r8_1)\n                {\n                    while (true)\n                    {\n                        void* rcx_1 = (rcx - r8_1);\n                        void* rax_8 = (r15_2 + rcx_1);\n                        r13_1 = rax_8;\n                        int32_t var_698;\n                        char* r15_7;\n                        if ((r15_2 + rcx_1) < r15_2)\n                        {\n                            if (r12_1 != -1)\n                            {\n                            label_40b5b5:\n                                r15_7 = rbx_2;\n                                var_6a8 = __errno_location();\n                            }\n                            else\n                            {\n                                r13_1 = ffffffffffffffff;\n                            label_40b233:\n                                memcpy(&rbx_2[r15_2], r8_1, rcx_1);\n                            label_40b23f:\n                                if (var_588 == var_6c0_1)\n                                {\n                                    uint64_t r15_11 = r13_1;\n                                    size_t r14_3 = (r13_1 + 1);\n                                    if (r13_1 >= -1)\n                                    {\n                                        if (r12_1 != -1)\n                                        {\n                                            goto label_40b5b5;\n                                        }\n                                    }\n                                    else if (r12_1 < r14_3)\n                                    {\n                                        bool cond:2_1 = r12_1 < 0;\n                                        if ((r12_1 == 0 && r14_3 <= 0xc))\n                                        {\n                                            r12_1 = 0xc;\n                                        label_40c395:\n                                            r13_1 = rbx_2 == arg1;\n                                            if ((rbx_2 == 0 || (rbx_2 != 0 && r13_1 != 0)))\n                                            {\n                                                char* rax_150 = malloc(r12_1);\n                                                if (rax_150 == 0)\n                                                {\n                                                    goto label_40b5b5;\n                                                }\n                                                if ((r15_11 == 0 || (r15_11 != 0 && r13_1 == 0)))\n                                                {\n                                                    rbx_2 = rax_150;\n                                                }\n                                                if ((r15_11 != 0 && r13_1 != 0))\n                                                {\n                                                    rbx_2 = memcpy(rax_150, rbx_2, r15_11);\n                                                }\n                                            }\n                                            if ((rbx_2 != 0 && r13_1 == 0))\n                                            {\n                                                char* rax_126 = realloc(rbx_2, r12_1);\n                                                if (rax_126 == 0)\n                                                {\n                                                    goto label_40b7ca;\n                                                }\n                                                rbx_2 = rax_126;\n                                            }\n                                        }\n                                        if (r12_1 != 0)\n                                        {\n                                            if (cond:2_1)\n                                            {\n                                                goto label_40b5b5;\n                                            }\n                                            r12_1 = (r12_1 + r12_1);\n                                            if (r12_1 >= r14_3)\n                                            {\n                                                goto label_40c395;\n                                            }\n                                        }\n                                        if (((r12_1 == 0 && r14_3 > 0xc) || r12_1 != 0))\n                                        {\n                                            if (r14_3 == -1)\n                                            {\n                                                goto label_40b5b5;\n                                            }\n                                            r12_1 = r14_3;\n                                            goto label_40c395;\n                                        }\n                                    }\n                                    rbx_2[r15_11] = 0;\n                                    if ((r12_1 > r14_3 && rbx_2 != arg1))\n                                    {\n                                        char* rax_127 = realloc(rbx_2, r14_3);\n                                        if (rax_127 != 0)\n                                        {\n                                            rbx_2 = rax_127;\n                                        }\n                                    }\n                                    if (var_6e0_1 != 0)\n                                    {\n                                        free(var_6e0_1);\n                                    }\n                                    if (var_580 != &var_568)\n                                    {\n                                        free(var_580);\n                                    }\n                                    if (var_670 != &var_668)\n                                    {\n                                        free(var_670);\n                                    }\n                                    *arg2 = r15_11;\n                                    goto label_40b641;\n                                }\n                                char r15_3 = r14_1[9];\n                                int64_t rax_17 = r14_1[0xa];\n                                if (r15_3 == 0x25)\n                                {\n                                    if (rax_17 != -1)\n                                    {\n                                    label_40bcec:\n                                        abort();\n                                        /* no return */\n                                    }\n                                    uint64_t rax_47 = (r13_1 + 1);\n                                    r15_2 = rax_47;\n                                    if (r13_1 < -1)\n                                    {\n                                        if (r12_1 >= rax_47)\n                                        {\n                                            goto label_40b6b2;\n                                        }\n                                        bool cond:4_1 = r12_1 < 0;\n                                        if (r12_1 != 0)\n                                        {\n                                            if (cond:4_1)\n                                            {\n                                                goto label_40b5b5;\n                                            }\n                                            r12_1 = (r12_1 + r12_1);\n                                            if (r12_1 >= rax_47)\n                                            {\n                                                goto label_40b687;\n                                            }\n                                        }\n                                        else if (rax_47 <= 0xc)\n                                        {\n                                            r12_1 = 0xc;\n                                        label_40b687:\n                                            rdx_1 = rbx_2 == arg1;\n                                            if (rbx_2 == 0)\n                                            {\n                                            label_40bea3:\n                                                var_698 = rdx_1;\n                                                char* rax_107 = malloc(r12_1);\n                                                rdx_1 = var_698;\n                                                if (rax_107 == 0)\n                                                {\n                                                    goto label_40b5b5;\n                                                }\n                                                if ((r13_1 == 0 || (r13_1 != 0 && rdx_1 == 0)))\n                                                {\n                                                    rbx_2 = rax_107;\n                                                }\n                                                if ((r13_1 != 0 && rdx_1 != 0))\n                                                {\n                                                    char* rax_108;\n                                                    rax_108 = memcpy(rax_107, rbx_2, r13_1);\n                                                    rbx_2 = rax_108;\n                                                }\n                                                goto label_40b6b2;\n                                            }\n                                            if (rdx_1 != 0)\n                                            {\n                                                goto label_40bea3;\n                                            }\n                                            char* rax_48;\n                                            rax_48 = realloc(rbx_2, r12_1);\n                                            if (rax_48 == 0)\n                                            {\n                                                goto label_40b7ca;\n                                            }\n                                            rbx_2 = rax_48;\n                                            goto label_40b6b2;\n                                        }\n                                        if (rax_47 == -1)\n                                        {\n                                            goto label_40b5b5;\n                                        }\n                                        r12_1 = rax_47;\n                                        goto label_40b687;\n                                    }\n                                    if (r12_1 != -1)\n                                    {\n                                        goto label_40b5b5;\n                                    }\n                                    r15_2 = -1;\n                                label_40b6b2:\n                                    *(rbx_2 + r13_1) = 0x25;\n                                label_40b6b7:\n                                    r8_1 = r14_1[1];\n                                    r14_1 = &r14_1[0xb];\n                                    rcx = *r14_1;\n                                    var_6c0_1 = (var_6c0_1 + 1);\n                                    if (rcx == r8_1)\n                                    {\n                                        break;\n                                    }\n                                    continue;\n                                }\n                                else\n                                {\n                                    if (rax_17 == -1)\n                                    {\n                                        goto label_40bcec;\n                                    }\n                                    rdx_1 = &var_670[(rax_17 << 5)];\n                                    int32_t rax_19 = *rdx_1;\n                                    if (r15_3 == 0x6e)\n                                    {\n                                        uint64_t rax_50 = (rax_19 - 0x12);\n                                        if (rax_50 > 4)\n                                        {\n                                        label_401fbe:\n                                            abort();\n                                            /* no return */\n                                        }\n                                        switch (rax_50)\n                                        {\n                                            case 0:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                            case 1:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                            case 2:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                            case 3:\n                                            case 4:\n                                            {\n                                                r15_2 = r13_1;\n                                                **(rdx_1 + 0x10) = r13_1;\n                                                break;\n                                            }\n                                        }\n                                        goto label_40b6b7;\n                                    }\n                                    char rax_21 = (r15_3 & 0xdf);\n                                    int64_t var_6c8;\n                                    char* var_6b8;\n                                    int16_t var_680;\n                                    if (((rax_21 - 0x45) > 2 && rax_21 != 0x41))\n                                    {\n                                    label_40b2c7:\n                                        char rax_22 = r14_1[2];\n                                        void* r15_4 = &var_6b0_1[1];\n                                        *var_6b0_1 = 0x25;\n                                        if ((rax_22 & 1) != 0)\n                                        {\n                                            var_6b0_1[1] = 0x27;\n                                            r15_4 = &var_6b0_1[2];\n                                        }\n                                        if ((rax_22 & 2) != 0)\n                                        {\n                                            *r15_4 = 0x2d;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 4) != 0)\n                                        {\n                                            *r15_4 = 0x2b;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 8) != 0)\n                                        {\n                                            *r15_4 = 0x20;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 0x10) != 0)\n                                        {\n                                            *r15_4 = 0x23;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 0x40) != 0)\n                                        {\n                                            *r15_4 = 0x49;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        if ((rax_22 & 0x20) != 0)\n                                        {\n                                            *r15_4 = 0x30;\n                                            r15_4 = (r15_4 + 1);\n                                        }\n                                        int64_t rsi_6 = r14_1[3];\n                                        int64_t rdx_5 = r14_1[4];\n                                        if (rsi_6 != rdx_5)\n                                        {\n                                            uint64_t rcx_4 = (rdx_5 - rsi_6);\n                                            memcpy(r15_4, rsi_6, rcx_4);\n                                            r15_4 = (r15_4 + rcx_4);\n                                        }\n                                        int64_t rsi_7 = r14_1[6];\n                                        uint64_t rdx_7 = r14_1[7];\n                                        if (rsi_7 != rdx_7)\n                                        {\n                                            uint64_t rcx_7 = (rdx_7 - rsi_7);\n                                            memcpy(r15_4, rsi_7, rcx_7);\n                                            r15_4 = (r15_4 + rcx_7);\n                                        }\n                                        if (rax_19 <= 0x10)\n                                        {\n                                            int32_t rax_23 = (1 << rax_19);\n                                            if ((rax_23 & 0x14180) == 0)\n                                            {\n                                                if ((*rax_23[1] & 0x10) != 0)\n                                                {\n                                                    *r15_4 = 0x4c;\n                                                    r15_4 = (r15_4 + 1);\n                                                }\n                                                if (((*rax_23[1] & 0x10) == 0 && (*rax_23[1] & 6) != 0))\n                                                {\n                                                    *r15_4 = 0x6c;\n                                                    r15_4 = (r15_4 + 1);\n                                                }\n                                            }\n                                            if (((((rax_23 & 0x14180) == 0 && (*rax_23[1] & 0x10) == 0) && (*rax_23[1] & 6) != 0) || (rax_23 & 0x14180) != 0))\n                                            {\n                                                *r15_4 = 0x6c;\n                                                r15_4 = (r15_4 + 1);\n                                            }\n                                        }\n                                        char rax_24 = r14_1[9];\n                                        *(r15_4 + 1) = 0;\n                                        *r15_4 = rax_24;\n                                        int64_t rax_25 = r14_1[5];\n                                        if (rax_25 != -1)\n                                        {\n                                            void* rax_27 = &var_670[(rax_25 << 5)];\n                                            if (*rax_27 != 5)\n                                            {\n                                                goto label_40bcec;\n                                            }\n                                            var_6b8 = 1;\n                                            var_680 = *(rax_27 + 0x10);\n                                            goto label_40b41e;\n                                        }\n                                        var_6b8 = 0;\n                                    label_40b41e:\n                                        int64_t rax_29 = r14_1[8];\n                                        if (rax_29 == -1)\n                                        {\n                                            goto label_40b456;\n                                        }\n                                        void* r8_3 = &var_670[(rax_29 << 5)];\n                                        if (*r8_3 != 5)\n                                        {\n                                            goto label_40bcec;\n                                        }\n                                        uint64_t rax_31 = var_6b8;\n                                        *(&var_680 + (rax_31 << 2)) = *(r8_3 + 0x10);\n                                        var_6b8 = (rax_31 + 1);\n                                    label_40b456:\n                                        void* rax_34 = (r13_1 + 2);\n                                        char* r11_1;\n                                        if (r13_1 < -2)\n                                        {\n                                            if (r12_1 >= rax_34)\n                                            {\n                                                goto label_40be98;\n                                            }\n                                            bool cond:22_1 = r12_1 < 0;\n                                            if (r12_1 != 0)\n                                            {\n                                                if (cond:22_1)\n                                                {\n                                                    goto label_40b5b5;\n                                                }\n                                                r12_1 = (r12_1 + r12_1);\n                                                if (r12_1 >= rax_34)\n                                                {\n                                                    goto label_40b489;\n                                                }\n                                            }\n                                            else if (rax_34 <= 0xc)\n                                            {\n                                                r12_1 = 0xc;\n                                            label_40b489:\n                                                rdx_7 = rbx_2 == arg1;\n                                                if (rbx_2 == 0)\n                                                {\n                                                label_40be43:\n                                                    var_6a8 = rdx_7;\n                                                    char* rax_105 = malloc(r12_1);\n                                                    char rdx_17 = var_6a8;\n                                                    r11_1 = rax_105;\n                                                    if (rax_105 == 0)\n                                                    {\n                                                        goto label_40b5b5;\n                                                    }\n                                                    if ((r13_1 != 0 && rdx_17 != 0))\n                                                    {\n                                                        r11_1 = memcpy(rax_105, rbx_2, r13_1);\n                                                    }\n                                                    goto label_40b4b4;\n                                                }\n                                                if (rdx_7 != 0)\n                                                {\n                                                    goto label_40be43;\n                                                }\n                                                char* rax_35 = realloc(rbx_2, r12_1);\n                                                r11_1 = rax_35;\n                                                if (rax_35 == 0)\n                                                {\n                                                    goto label_40b5b5;\n                                                }\n                                                goto label_40b4b4;\n                                            }\n                                            if (rax_34 == -1)\n                                            {\n                                                goto label_40b5b5;\n                                            }\n                                            r12_1 = rax_34;\n                                            goto label_40b489;\n                                        }\n                                        if (r12_1 != -1)\n                                        {\n                                            goto label_40b5b5;\n                                        }\n                                    label_40be98:\n                                        r11_1 = rbx_2;\n                                    label_40b4b4:\n                                        *(r11_1 + r13_1) = 0;\n                                        int32_t* rax_36 = __errno_location();\n                                        char* r11_2 = r11_1;\n                                        var_6c8 = r15_4;\n                                        var_6a8 = rax_36;\n                                        int32_t rax_37 = *rax_36;\n                                    label_40b4f2:\n                                        void* rbx_3 = 0x7fffffff;\n                                        int32_t var_684 = 0xffffffff;\n                                        void* r15_6 = (r12_1 - r13_1);\n                                        *var_6a8 = 0;\n                                        uint64_t rax_39 = rax_19;\n                                        if (r15_6 <= 0x7fffffff)\n                                        {\n                                            rbx_3 = r15_6;\n                                        }\n                                        if (rax_39 > 0x11)\n                                        {\n                                            goto label_401fbe;\n                                        }\n                                        char* var_6d0_1;\n                                        int32_t var_67c;\n                                        int32_t rax_56;\n                                        int32_t rax_58;\n                                        void* rsp_3;\n                                        void* rsp_6;\n                                        void* rsp_10;\n                                        void* rsp_11;\n                                        int64_t rdi_18;\n                                        int32_t* r9_2;\n                                        uint64_t r9_3;\n                                        switch (rax_39)\n                                        {\n                                            case 0:\n                                            {\n                                                goto label_401fbe;\n                                            }\n                                            case 1:\n                                            {\n                                                r9_3 = var_670[((r14_1[0xa] << 5) + 0x10)];\n                                                goto label_40b93b;\n                                            }\n                                            case 2:\n                                            {\n                                                r9_3 = var_670[((r14_1[0xa] << 5) + 0x10)];\n                                                goto label_40b93b;\n                                            }\n                                            case 3:\n                                            {\n                                                r9_3 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                goto label_40b93b;\n                                            }\n                                            case 4:\n                                            {\n                                                r9_3 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                goto label_40b93b;\n                                            }\n                                            case 5:\n                                            case 6:\n                                            case 0xd:\n                                            case 0xe:\n                                            {\n                                                r9_3 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                            label_40b93b:\n                                                int32_t rax_66 = var_6b8;\n                                                rdi_18 = (r11_2 + r13_1);\n                                                var_6d0_1 = r11_2;\n                                                if (rax_66 == 1)\n                                                {\n                                                    *(rsp_1 - 8) = &var_684;\n                                                    *(rsp_1 - 0x10) = r9_3;\n                                                    rsp_6 = (rsp_1 - 0x10);\n                                                    goto label_40bdc2;\n                                                }\n                                                if (rax_66 == 2)\n                                                {\n                                                    *(rsp_1 - 0x10) = &var_684;\n                                                    *(rsp_1 - 0x18) = r9_3;\n                                                    rsp_10 = (rsp_1 - 0x18);\n                                                    goto label_40bd7c;\n                                                }\n                                                *(rsp_1 - 0x10) = &var_684;\n                                                rsp_6 = (rsp_1 - 0x10);\n                                                goto label_40b982;\n                                            }\n                                            case 7:\n                                            case 8:\n                                            case 9:\n                                            case 0xa:\n                                            case 0xf:\n                                            case 0x10:\n                                            case 0x11:\n                                            {\n                                                rdi_18 = (r11_2 + r13_1);\n                                                r9_2 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                rax_56 = var_6b8;\n                                                var_6d0_1 = r11_2;\n                                                break;\n                                            }\n                                            case 0xb:\n                                            {\n                                                int512_t zmm0;\n                                                zmm0 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                int32_t rax_83 = var_6b8;\n                                                void* rsp_17;\n                                                if (rax_83 == 1)\n                                                {\n                                                    *(rsp_1 - 0x10) = &var_684;\n                                                    rsp_17 = (rsp_1 - 0x10);\n                                                }\n                                                if (rax_83 == 2)\n                                                {\n                                                    *(rsp_1 - 8) = &var_684;\n                                                    *(rsp_1 - 0x10) = var_67c;\n                                                    rsp_17 = (rsp_1 - 0x10);\n                                                }\n                                                if ((rax_83 == 1 || rax_83 == 2))\n                                                {\n                                                    rax_58 = __snprintf_chk();\n                                                    *rsp_17;\n                                                    *(rsp_17 + 8);\n                                                    rsp_1 = (rsp_17 + 0x10);\n                                                }\n                                                if ((rax_83 != 1 && rax_83 != 2))\n                                                {\n                                                    rax_58 = __snprintf_chk();\n                                                }\n                                                goto label_40b850;\n                                            }\n                                            case 0xc:\n                                            {\n                                                rdi_18 = (r11_2 + r13_1);\n                                                var_6d0_1 = r11_2;\n                                                int80_t x87_r7_2 = *(((r14_1[0xa] << 5) + var_670) + 0x10);\n                                                int32_t rax_76 = var_6b8;\n                                                if (rax_76 != 1)\n                                                {\n                                                    if (rax_76 == 2)\n                                                    {\n                                                        *(rsp_1 - 0x10) = &var_684;\n                                                        *(rsp_1 - 0x20) = x87_r7_2;\n                                                        *(rsp_1 - 0x30) = var_67c;\n                                                        rax_58 = __snprintf_chk();\n                                                        r11_2 = var_6d0_1;\n                                                        goto label_40b850;\n                                                    }\n                                                    rsp_3 = (rsp_1 - 0x10);\n                                                    r9_2 = &var_684;\n                                                    *rsp_3 = x87_r7_2;\n                                                    goto label_40b842;\n                                                }\n                                                *(rsp_1 - 0x10) = &var_684;\n                                                rsp_11 = (rsp_1 - 0x20);\n                                                *rsp_11 = x87_r7_2;\n                                            label_40bd9c:\n                                                rax_58 = __snprintf_chk(rdi_18, rbx_3, 1, -1, var_6b0_1, var_680);\n                                                rsp_1 = (rsp_11 + 0x20);\n                                                r11_2 = var_6d0_1;\n                                            label_40b850:\n                                                rdx_1 = var_684;\n                                                if (rdx_1 >= 0)\n                                                {\n                                                    goto label_40b85e;\n                                                }\n                                                break;\n                                            }\n                                        }\n                                        if (((((((rax_39 == 7 || rax_39 == 8) || rax_39 == 9) || rax_39 == 0xa) || rax_39 == 0xf) || rax_39 == 0x10) || rax_39 == 0x11))\n                                        {\n                                            if (rax_56 != 1)\n                                            {\n                                                if (rax_56 == 2)\n                                                {\n                                                    *(rsp_1 - 0x10) = &var_684;\n                                                    *(rsp_1 - 0x18) = r9_2;\n                                                    rsp_10 = (rsp_1 - 0x18);\n                                                label_40bd7c:\n                                                    *(rsp_10 - 8) = var_67c;\n                                                    rsp_11 = (rsp_10 - 8);\n                                                    goto label_40bd9c;\n                                                }\n                                                *(rsp_1 - 0x10) = &var_684;\n                                                rsp_3 = (rsp_1 - 0x10);\n                                            label_40b842:\n                                                rax_58 = __snprintf_chk(rdi_18, rbx_3, 1, -1, var_6b0_1, r9_2);\n                                                r11_2 = var_6d0_1;\n                                                *rsp_3;\n                                                *(rsp_3 + 8);\n                                                rsp_1 = (rsp_3 + 0x10);\n                                                goto label_40b850;\n                                            }\n                                            *(rsp_1 - 8) = &var_684;\n                                            *(rsp_1 - 0x10) = r9_2;\n                                            rsp_6 = (rsp_1 - 0x10);\n                                        label_40bdc2:\n                                            r9_3 = var_680;\n                                        label_40b982:\n                                            rax_58 = __snprintf_chk(rdi_18, rbx_3, 1, -1, var_6b0_1, r9_3);\n                                            rdx_1 = var_684;\n                                            *(rsp_6 + 8);\n                                            rsp_1 = (rsp_6 + 0x10);\n                                            r11_2 = var_6d0_1;\n                                            if (rdx_1 >= 0)\n                                            {\n                                            label_40b85e:\n                                                int64_t rcx_16 = rdx_1;\n                                                if ((rcx_16 < rbx_3 && *(&r11_2[rcx_16] + r13_1) != 0))\n                                                {\n                                                    goto label_40bcec;\n                                                }\n                                                if (rdx_1 < rax_58)\n                                                {\n                                                label_40b878:\n                                                    var_684 = rax_58;\n                                                    rdx_1 = rax_58;\n                                                }\n                                                if ((rdx_1 + 1) < rbx_3)\n                                                {\n                                                    rbx_2 = r11_2;\n                                                    r15_2 = (rdx_1 + r13_1);\n                                                    *var_6a8 = rax_37;\n                                                    goto label_40b6b7;\n                                                }\n                                                if (r15_6 > 0x7ffffffe)\n                                                {\n                                                    if ((r11_2 != arg1 && r11_2 != 0))\n                                                    {\n                                                        free(r11_2);\n                                                    }\n                                                    if (var_6e0_1 != 0)\n                                                    {\n                                                        free(var_6e0_1);\n                                                    }\n                                                    if (var_580 != &var_568)\n                                                    {\n                                                        free(var_580);\n                                                    }\n                                                    if (var_670 != &var_668)\n                                                    {\n                                                        free(var_670);\n                                                    }\n                                                    rbx_2 = nullptr;\n                                                    *var_6a8 = 0x4b;\n                                                    break;\n                                                }\n                                                uint64_t rax_60 = (rdx_1 + 2);\n                                                void* rax_61 = (rax_60 + r13_1);\n                                                int64_t rcx_18;\n                                                rcx_18 = (rax_60 + r13_1) < rax_60;\n                                                if (r12_1 >= 0)\n                                                {\n                                                    void* rdx_13 = (r12_1 + r12_1);\n                                                    if (rcx_18 == 0)\n                                                    {\n                                                        if (rdx_13 >= rax_61)\n                                                        {\n                                                            rax_61 = rdx_13;\n                                                        }\n                                                        if (r12_1 >= rax_61)\n                                                        {\n                                                            goto label_40b4f2;\n                                                        }\n                                                        r12_1 = (r12_1 + r12_1);\n                                                        if ((r12_1 < rax_61 && rax_61 != -1))\n                                                        {\n                                                            r12_1 = rax_61;\n                                                        }\n                                                        if (((r12_1 < rax_61 && rax_61 != -1) || r12_1 >= rax_61))\n                                                        {\n                                                            rbx_3 = r11_2 == arg1;\n                                                            if ((r11_2 == 0 || (r11_2 != 0 && rbx_3 != 0)))\n                                                            {\n                                                                char* rax_101 = malloc(r12_1);\n                                                                if (rax_101 != 0)\n                                                                {\n                                                                    if ((r13_1 != 0 && rbx_3 != 0))\n                                                                    {\n                                                                        r11_2 = memcpy(rax_101, r11_2, r13_1);\n                                                                        goto label_40b4f2;\n                                                                    }\n                                                                    r11_2 = rax_101;\n                                                                    goto label_40b4f2;\n                                                                }\n                                                            }\n                                                            if ((r11_2 != 0 && rbx_3 == 0))\n                                                            {\n                                                                char* rax_62 = realloc(r11_2, r12_1);\n                                                                if (rax_62 != 0)\n                                                                {\n                                                                    r11_2 = rax_62;\n                                                                    goto label_40b4f2;\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                                else if (r12_1 == -1)\n                                                {\n                                                    goto label_40b4f2;\n                                                }\n                                                r15_7 = r11_2;\n                                            }\n                                        }\n                                        if ((((((((((rax_39 == 7 || rax_39 == 8) || rax_39 == 9) || rax_39 == 0xa) || rax_39 == 0xf) || rax_39 == 0x10) || rax_39 == 0x11) && rax_56 == 1) && rdx_1 < 0) || rax_39 == 0xc))\n                                        {\n                                            if (*(var_6c8 + 1) != 0)\n                                            {\n                                                *(var_6c8 + 1) = 0;\n                                                goto label_40b4f2;\n                                            }\n                                            if (rax_58 < 0)\n                                            {\n                                                int32_t rbx_4 = *var_6a8;\n                                                if (rbx_4 == 0)\n                                                {\n                                                    rbx_4 = 0x54;\n                                                    if ((r14_1[9] & 0xef) != 0x63)\n                                                    {\n                                                        rbx_4 = 0x16;\n                                                    }\n                                                }\n                                                if ((r11_2 != arg1 && r11_2 != 0))\n                                                {\n                                                    free(r11_2);\n                                                }\n                                                if (var_6e0_1 != 0)\n                                                {\n                                                    free(var_6e0_1);\n                                                }\n                                                if (var_580 != &var_568)\n                                                {\n                                                    free(var_580);\n                                                }\n                                                if (var_670 != &var_668)\n                                                {\n                                                    free(var_670);\n                                                }\n                                                *var_6a8 = rbx_4;\n                                                rbx_2 = nullptr;\n                                                break;\n                                            }\n                                            goto label_40b878;\n                                        }\n                                    }\n                                    if (((rax_21 - 0x45) <= 2 || ((rax_21 - 0x45) > 2 && rax_21 == 0x41)))\n                                    {\n                                        if (rax_19 != 0xc)\n                                        {\n                                            goto label_40b2c7;\n                                        }\n                                        long double x87_r7_1 = *(rdx_1 + 0x10);\n                                        if ((!(FCMP_UO(x87_r7_1, x87_r7_1))))\n                                        {\n                                            long double x87_r6_3 = x87_r7_1;\n                                            x87_r7_1 = (x87_r7_1 + x87_r7_1);\n                                            (x87_r6_3 - x87_r7_1);\n                                            bool cond:7_1 = x87_r6_3 != x87_r7_1;\n                                            if ((FCMP_UO(x87_r6_3, x87_r7_1)))\n                                            {\n                                                goto label_40b2c7;\n                                            }\n                                            if (cond:7_1)\n                                            {\n                                                goto label_40b2c7;\n                                            }\n                                            goto label_40b74d;\n                                        }\n                                    label_40b74d:\n                                        char* rdx_11 = r14_1[3];\n                                        int64_t rdi_16 = r14_1[4];\n                                        int32_t r11_3 = r14_1[2];\n                                        int64_t r10_1;\n                                        if (rdx_11 == rdi_16)\n                                        {\n                                            r10_1 = 0;\n                                        label_40b540:\n                                            void* rdx_9 = r14_1[6];\n                                            int64_t rcx_10 = r14_1[7];\n                                            int64_t rcx_11;\n                                            int64_t rdx_10;\n                                            if (rdx_9 != rcx_10)\n                                            {\n                                                int64_t rsi_10 = r14_1[8];\n                                                if (rsi_10 == -1)\n                                                {\n                                                    char* rax_139 = (rdx_9 + 1);\n                                                    rdx_10 = 0;\n                                                    if (rcx_10 == rax_139)\n                                                    {\n                                                    label_40c824:\n                                                        rcx_11 = 0xc;\n                                                    label_40bc11:\n                                                        int64_t rax_97 = rcx_11;\n                                                        if (r10_1 >= rcx_11)\n                                                        {\n                                                            rax_97 = r10_1;\n                                                        }\n                                                        size_t rax_98 = (rax_97 + 1);\n                                                        var_698 = rax_98;\n                                                        if (rax_97 >= -1)\n                                                        {\n                                                            goto label_40b5b5;\n                                                        }\n                                                        void var_2f8;\n                                                        int64_t rcx_21;\n                                                        if (rax_98 <= 0x2bc)\n                                                        {\n                                                            rcx_21 = &var_2f8;\n                                                        }\n                                                        else\n                                                        {\n                                                            var_6b8 = r11_3;\n                                                            var_6a8 = x87_r7_1;\n                                                            if (rax_98 == -1)\n                                                            {\n                                                                goto label_40b5b5;\n                                                            }\n                                                            int64_t rax_99 = malloc(rax_98);\n                                                            r11_3 = var_6b8;\n                                                            x87_r7_1 = var_6a8;\n                                                            rcx_21 = rax_99;\n                                                            if (rax_99 == 0)\n                                                            {\n                                                                goto label_40b5b5;\n                                                            }\n                                                        }\n                                                        int64_t r9_6;\n                                                        int64_t r15_9;\n                                                        if ((!(FCMP_UO(x87_r7_1, x87_r7_1))))\n                                                        {\n                                                            uint16_t x87status_1;\n                                                            int16_t temp0_2;\n                                                            temp0_2 = __fnstcw_memmem16(arg5);\n                                                            var_680 = temp0_2;\n                                                            int32_t r8_7 = var_680;\n                                                            int16_t rax_100;\n                                                            *rax_100[1] = (*r8_7[1] | 3);\n                                                            var_680 = rax_100;\n                                                            uint16_t x87control;\n                                                            uint16_t x87status_2;\n                                                            x87control = __fldcw_memmem16(var_680);\n                                                            bool c0_1;\n                                                            bool c1_1;\n                                                            bool c2_1;\n                                                            bool c3_1;\n                                                            c0_1 = __fxam(x87_r7_1);\n                                                            if ((*((((c0_1) ? 1 : 0) << 8) | ((((c1_1) ? 1 : 0) << 9) | ((((c2_1) ? 1 : 0) << 0xa) | ((((c3_1) ? 1 : 0) << 0xe) | 0x3800))))[1] & 2) != 0)\n                                                            {\n                                                                *rcx_21 = 0x2d;\n                                                                x87_r7_1 = (-x87_r7_1);\n                                                                r15_9 = (rcx_21 + 1);\n                                                            }\n                                                            else if ((r11_3 & 4) != 0)\n                                                            {\n                                                                r15_9 = (rcx_21 + 1);\n                                                                *rcx_21 = 0x2b;\n                                                            }\n                                                            else\n                                                            {\n                                                                r15_9 = rcx_21;\n                                                                if ((r11_3 & 8) != 0)\n                                                                {\n                                                                    r15_9 = (rcx_21 + 1);\n                                                                    *rcx_21 = 0x20;\n                                                                }\n                                                            }\n                                                            long double x87_r6_4 = 0;\n                                                            if (x87_r7_1 <= x87_r6_4)\n                                                            {\n                                                                (x87_r7_1 - x87_r6_4);\n                                                                bool cond:14_1 = x87_r7_1 != x87_r6_4;\n                                                                if ((FCMP_UO(x87_r7_1, x87_r6_4)))\n                                                                {\n                                                                    goto label_40bcec;\n                                                                }\n                                                                if (cond:14_1)\n                                                                {\n                                                                    goto label_40bcec;\n                                                                }\n                                                                bool rax_118 = (r14_1[9] & 0xdf);\n                                                                int32_t var_6e8;\n                                                                if (rax_118 == 0x46)\n                                                                {\n                                                                    *r15_9 = 0x30;\n                                                                    if ((r11_3 & 0x10) != 0)\n                                                                    {\n                                                                    label_40c649:\n                                                                        var_6e8 = r10_1;\n                                                                        var_6b8 = r11_3;\n                                                                        r9_6 = (r15_9 + 2);\n                                                                        char rax_137 = *nl_langinfo(0x10000);\n                                                                        r11_3 = var_6b8;\n                                                                        r10_1 = var_6e8;\n                                                                        if (rax_137 == 0)\n                                                                        {\n                                                                            rax_137 = 0x2e;\n                                                                        }\n                                                                        *(r15_9 + 1) = rax_137;\n                                                                        if (rdx_10 != 0)\n                                                                        {\n                                                                            int64_t rsi_34 = ((r15_9 + rdx_10) + 2);\n                                                                            int64_t rax_138 = r9_6;\n                                                                        label_40c6c0:\n                                                                            rax_138 = (rax_138 + 1);\n                                                                            *(rax_138 - 1) = 0x30;\n                                                                            if (rax_138 != rsi_34)\n                                                                            {\n                                                                                goto label_40c6c0;\n                                                                            }\n                                                                            r9_6 = (r9_6 + rdx_10);\n                                                                        }\n                                                                        goto label_40c13b;\n                                                                    }\n                                                                    if (rdx_10 != 0)\n                                                                    {\n                                                                        goto label_40c649;\n                                                                    }\n                                                                label_40c137:\n                                                                    r9_6 = (r15_9 + 1);\n                                                                label_40c13b:\n                                                                    var_680 = r8_7;\n                                                                    uint16_t x87status_3;\n                                                                    arg5 = __fldcw_memmem16(var_680);\n                                                                label_40c14c:\n                                                                    uint64_t r8_11 = (r9_6 - rcx_21);\n                                                                    if (r10_1 > r8_11)\n                                                                    {\n                                                                        int64_t r10_2 = (r10_1 - r8_11);\n                                                                        int64_t rdi_38 = (r9_6 + r10_2);\n                                                                        r8_11 = (rdi_38 - rcx_21);\n                                                                        if ((r11_3 & 2) == 0)\n                                                                        {\n                                                                            if (((r11_3 & 0x20) == 0 || ((r11_3 & 0x20) != 0 && r15_9 == 0)))\n                                                                            {\n                                                                                int64_t rax_130 = -1;\n                                                                                int64_t rdx_26 = ((rcx_21 - 1) - r9_6);\n                                                                                if (rcx_21 < r9_6)\n                                                                                {\n                                                                                label_40c485:\n                                                                                    *(rdi_38 + rax_130) = *(r9_6 + rax_130);\n                                                                                    rax_130 = (rax_130 - 1);\n                                                                                    if (rdx_26 != rax_130)\n                                                                                    {\n                                                                                        goto label_40c485;\n                                                                                    }\n                                                                                    r9_6 = rcx_21;\n                                                                                }\n                                                                                if (r10_2 != 0)\n                                                                                {\n                                                                                    int64_t r10_4 = (r10_2 + r9_6);\n                                                                                label_40c4a8:\n                                                                                    r9_6 = (r9_6 + 1);\n                                                                                    *(r9_6 - 1) = 0x20;\n                                                                                    if (r9_6 != r10_4)\n                                                                                    {\n                                                                                        goto label_40c4a8;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                            if (((r11_3 & 0x20) != 0 && r15_9 != 0))\n                                                                            {\n                                                                                if (r15_9 >= r9_6)\n                                                                                {\n                                                                                    r15_9 = r9_6;\n                                                                                }\n                                                                                else\n                                                                                {\n                                                                                    int64_t rax_119 = -1;\n                                                                                    int64_t rdx_21 = ((r15_9 - 1) - r9_6);\n                                                                                label_40c19d:\n                                                                                    *(rdi_38 + rax_119) = *(r9_6 + rax_119);\n                                                                                    rax_119 = (rax_119 - 1);\n                                                                                    if (rax_119 != rdx_21)\n                                                                                    {\n                                                                                        goto label_40c19d;\n                                                                                    }\n                                                                                }\n                                                                                if (r10_2 != 0)\n                                                                                {\n                                                                                    int64_t r10_3 = (r10_2 + r15_9);\n                                                                                label_40c1b8:\n                                                                                    r15_9 = (r15_9 + 1);\n                                                                                    *(r15_9 - 1) = 0x30;\n                                                                                    if (r15_9 != r10_3)\n                                                                                    {\n                                                                                        goto label_40c1b8;\n                                                                                    }\n                                                                                }\n                                                                            }\n                                                                        }\n                                                                        else if (r10_2 != 0)\n                                                                        {\n                                                                        label_40c610:\n                                                                            r9_6 = (r9_6 + 1);\n                                                                            *(r9_6 - 1) = 0x20;\n                                                                            if (rdi_38 != r9_6)\n                                                                            {\n                                                                                goto label_40c610;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                    if (var_698 <= r8_11)\n                                                                    {\n                                                                        goto label_40bcec;\n                                                                    }\n                                                                    uint64_t rax_121 = (r13_1 + r8_11);\n                                                                    int64_t rsi_24;\n                                                                    rsi_24 = (r13_1 + r8_11) < r13_1;\n                                                                    r15_2 = rax_121;\n                                                                    if ((r12_1 - r13_1) > r8_11)\n                                                                    {\n                                                                        goto label_40c27a;\n                                                                    }\n                                                                    if (rsi_24 != 0)\n                                                                    {\n                                                                        if (r12_1 != -1)\n                                                                        {\n                                                                            goto label_40b5b5;\n                                                                        }\n                                                                        goto label_40c27a;\n                                                                    }\n                                                                    if (r12_1 >= rax_121)\n                                                                    {\n                                                                        goto label_40c27a;\n                                                                    }\n                                                                    bool cond:21_1 = r12_1 < 0;\n                                                                    if (r12_1 != 0)\n                                                                    {\n                                                                        if (cond:21_1)\n                                                                        {\n                                                                            goto label_40b5b5;\n                                                                        }\n                                                                        r12_1 = (r12_1 + r12_1);\n                                                                        if (r12_1 >= rax_121)\n                                                                        {\n                                                                            goto label_40c225;\n                                                                        }\n                                                                    }\n                                                                    else if (rax_121 <= 0xc)\n                                                                    {\n                                                                        r12_1 = 0xc;\n                                                                    label_40c225:\n                                                                        void* rdx_23;\n                                                                        rdx_23 = rbx_2 == arg1;\n                                                                        if (rbx_2 == 0)\n                                                                        {\n                                                                        label_40c4be:\n                                                                            var_6b8 = rdx_23;\n                                                                            var_698 = rcx_21;\n                                                                            char* rax_131 = malloc(r12_1);\n                                                                            rcx_21 = var_698;\n                                                                            char rdx_27 = var_6b8;\n                                                                            if (rax_131 == 0)\n                                                                            {\n                                                                                goto label_40b5b5;\n                                                                            }\n                                                                            if ((r13_1 == 0 || (r13_1 != 0 && rdx_27 == 0)))\n                                                                            {\n                                                                                rbx_2 = rax_131;\n                                                                            }\n                                                                            if ((r13_1 != 0 && rdx_27 != 0))\n                                                                            {\n                                                                                var_698 = rcx_21;\n                                                                                rcx_21 = var_698;\n                                                                                rbx_2 = memcpy(rax_131, rbx_2, r13_1);\n                                                                            }\n                                                                            goto label_40c27a;\n                                                                        }\n                                                                        if (rdx_23 != 0)\n                                                                        {\n                                                                            goto label_40c4be;\n                                                                        }\n                                                                        var_6a8 = r8_11;\n                                                                        var_698 = rcx_21;\n                                                                        char* rax_122 = realloc(rbx_2, r12_1);\n                                                                        if (rax_122 == 0)\n                                                                        {\n                                                                            goto label_40b5b5;\n                                                                        }\n                                                                        rcx_21 = var_698;\n                                                                        r8_11 = var_6a8;\n                                                                        rbx_2 = rax_122;\n                                                                    label_40c27a:\n                                                                        var_698 = rcx_21;\n                                                                        memcpy((rbx_2 + r13_1), rcx_21, r8_11);\n                                                                        int64_t rcx_25 = var_698;\n                                                                        if (rcx_25 != &var_2f8)\n                                                                        {\n                                                                            free(rcx_25);\n                                                                        }\n                                                                        goto label_40b6b7;\n                                                                    }\n                                                                    if (rax_121 == -1)\n                                                                    {\n                                                                        goto label_40b5b5;\n                                                                    }\n                                                                    r12_1 = rax_121;\n                                                                    goto label_40c225;\n                                                                }\n                                                                if (rax_118 != 0x45)\n                                                                {\n                                                                    int32_t var_6f0;\n                                                                    if (rax_118 == 0x47)\n                                                                    {\n                                                                        *r15_9 = 0x30;\n                                                                        if ((r11_3 & 0x10) == 0)\n                                                                        {\n                                                                            goto label_40c137;\n                                                                        }\n                                                                        int64_t r9_8 = (r15_9 + 2);\n                                                                        if (rdx_10 == 0)\n                                                                        {\n                                                                            var_6a8 = r11_3;\n                                                                            r11_3 = var_6a8;\n                                                                            char rax_156 = *nl_langinfo(0x10000);\n                                                                            r9_6 = r9_8;\n                                                                            if (rax_156 == 0)\n                                                                            {\n                                                                                rax_156 = 0x2e;\n                                                                            }\n                                                                            *(r15_9 + 1) = rax_156;\n                                                                        }\n                                                                        else\n                                                                        {\n                                                                            char* rsi_32 = (rdx_10 - 1);\n                                                                            var_6f0 = r10_1;\n                                                                            var_6e8 = r9_8;\n                                                                            var_6c8 = r11_3;\n                                                                            var_6b8 = rdx_10;\n                                                                            char rax_134 = *nl_langinfo(0x10000);\n                                                                            r11_3 = var_6c8;\n                                                                            r9_6 = var_6e8;\n                                                                            r10_1 = var_6f0;\n                                                                            if (rax_134 == 0)\n                                                                            {\n                                                                                rax_134 = 0x2e;\n                                                                            }\n                                                                            *(r15_9 + 1) = rax_134;\n                                                                            if (rsi_32 != 0)\n                                                                            {\n                                                                                void* rdx_30 = &var_6b8[(r15_9 + 1)];\n                                                                                int64_t rax_135 = r9_6;\n                                                                            label_40c5ee:\n                                                                                rax_135 = (rax_135 + 1);\n                                                                                *(rax_135 - 1) = 0x30;\n                                                                                if (rax_135 != rdx_30)\n                                                                                {\n                                                                                    goto label_40c5ee;\n                                                                                }\n                                                                                r9_6 = &rsi_32[r9_6];\n                                                                            }\n                                                                        }\n                                                                        goto label_40c13b;\n                                                                    }\n                                                                    if (rax_118 != 0x41)\n                                                                    {\n                                                                        goto label_40bcec;\n                                                                    }\n                                                                    char* rax_142 = (r15_9 + 2);\n                                                                    *r15_9 = 0x30;\n                                                                    char rax_143 = r14_1[9];\n                                                                    *(r15_9 + 2) = 0x30;\n                                                                    *(r15_9 + 1) = (rax_143 + 0x17);\n                                                                    char* rsi_41;\n                                                                    if ((r11_3 & 0x10) == 0)\n                                                                    {\n                                                                        rsi_41 = (r15_9 + 3);\n                                                                    }\n                                                                    if (((r11_3 & 0x10) != 0 || ((r11_3 & 0x10) == 0 && rdx_10 != 0 != 0)))\n                                                                    {\n                                                                        var_6f0 = r10_1;\n                                                                        var_6e8 = rcx_21;\n                                                                        var_6c8 = r11_3;\n                                                                        rsi_41 = (r15_9 + 4);\n                                                                        char rax_153 = *nl_langinfo(0x10000);\n                                                                        r11_3 = var_6c8;\n                                                                        rcx_21 = var_6e8;\n                                                                        r10_1 = var_6f0;\n                                                                        if (rax_153 == 0)\n                                                                        {\n                                                                            rax_153 = 0x2e;\n                                                                        }\n                                                                        *(r15_9 + 3) = rax_153;\n                                                                        if (rdx_10 != 0)\n                                                                        {\n                                                                            int64_t rdi_53 = ((r15_9 + rdx_10) + 4);\n                                                                            char* rax_154 = rsi_41;\n                                                                        label_40ca35:\n                                                                            rax_154 = &rax_154[1];\n                                                                            rax_154[-1] = 0x30;\n                                                                            if (rax_154 != rdi_53)\n                                                                            {\n                                                                                goto label_40ca35;\n                                                                            }\n                                                                            rsi_41 = &rsi_41[rdx_10];\n                                                                        }\n                                                                    }\n                                                                    char rax_145 = r14_1[9];\n                                                                    r9_6 = &rsi_41[3];\n                                                                    *(rsi_41 + 1) = 0x302b;\n                                                                    r15_9 = rax_142;\n                                                                    *rsi_41 = (rax_145 + 0xf);\n                                                                    goto label_40c13b;\n                                                                }\n                                                                *r15_9 = 0x30;\n                                                                char* rsi_27;\n                                                                if ((r11_3 & 0x10) == 0)\n                                                                {\n                                                                    rsi_27 = (r15_9 + 1);\n                                                                }\n                                                                if (((r11_3 & 0x10) != 0 || ((r11_3 & 0x10) == 0 && rdx_10 != 0 != 0)))\n                                                                {\n                                                                    var_6e8 = r10_1;\n                                                                    var_6b8 = r11_3;\n                                                                    rsi_27 = (r15_9 + 2);\n                                                                    char rax_148 = *nl_langinfo(0x10000);\n                                                                    r11_3 = var_6b8;\n                                                                    r10_1 = var_6e8;\n                                                                    if (rax_148 == 0)\n                                                                    {\n                                                                        rax_148 = 0x2e;\n                                                                    }\n                                                                    *(r15_9 + 1) = rax_148;\n                                                                    if (rdx_10 != 0)\n                                                                    {\n                                                                        int64_t rdi_50 = ((r15_9 + rdx_10) + 2);\n                                                                        char* rax_149 = rsi_27;\n                                                                    label_40c920:\n                                                                        rax_149 = &rax_149[1];\n                                                                        rax_149[-1] = 0x30;\n                                                                        if (rax_149 != rdi_50)\n                                                                        {\n                                                                            goto label_40c920;\n                                                                        }\n                                                                        rsi_27 = &rsi_27[rdx_10];\n                                                                    }\n                                                                }\n                                                                char rax_123 = r14_1[9];\n                                                                r9_6 = &rsi_27[4];\n                                                                rsi_27[3] = 0x30;\n                                                                *rsi_27 = rax_123;\n                                                                *(rsi_27 + 1) = 0x302b;\n                                                                goto label_40c13b;\n                                                            }\n                                                            long double x87_r6_7 = (x87_r6_4 + x87_r6_4);\n                                                            (x87_r6_7 - x87_r6_4);\n                                                            bool cond:15_1 = x87_r6_7 != x87_r6_4;\n                                                            if ((!(FCMP_O(x87_r6_7, x87_r6_4))))\n                                                            {\n                                                                goto label_40bcec;\n                                                            }\n                                                            if (cond:15_1)\n                                                            {\n                                                                goto label_40bcec;\n                                                            }\n                                                            r9_6 = (r15_9 + 3);\n                                                            if ((r14_1[9] - 0x41) > 0x19)\n                                                            {\n                                                                *(r15_9 + 2) = 0x66;\n                                                                *r15_9 = 0x6e69;\n                                                                r15_9 = 0;\n                                                            }\n                                                            else\n                                                            {\n                                                                *(r15_9 + 2) = 0x46;\n                                                                *r15_9 = 0x4e49;\n                                                                r15_9 = 0;\n                                                            }\n                                                            goto label_40c13b;\n                                                        }\n                                                        r9_6 = (rcx_21 + 3);\n                                                        if ((r15_3 - 0x41) > 0x19)\n                                                        {\n                                                            *(rcx_21 + 2) = 0x6e;\n                                                            r15_9 = 0;\n                                                            *rcx_21 = 0x616e;\n                                                        }\n                                                        else\n                                                        {\n                                                            *(rcx_21 + 2) = 0x4e;\n                                                            r15_9 = 0;\n                                                            *rcx_21 = 0x414e;\n                                                        }\n                                                        goto label_40c14c;\n                                                    }\n                                                    char* rsi_36 = rax_139;\n                                                label_40c783:\n                                                    char* rdi_49 = &rsi_36[1];\n                                                    int64_t rax_140 = (*rsi_36 - 0x30);\n                                                    int64_t rsi_39 = -1;\n                                                    if (rdx_10 <= 0x1999999999999999)\n                                                    {\n                                                        int64_t rsi_40 = (rdx_10 * 5);\n                                                        rsi_39 = (rsi_40 + rsi_40);\n                                                    }\n                                                    rsi_36 = rdi_49;\n                                                    rdx_10 = (rax_140 + rsi_39);\n                                                    if ((rax_140 + rsi_39) < rax_140)\n                                                    {\n                                                        if (rcx_10 == rdi_49)\n                                                        {\n                                                            goto label_40b5b5;\n                                                        }\n                                                    label_40c7b7:\n                                                        rsi_36 = &rdi_49[1];\n                                                        if (rsi_36[-1] != 0x30)\n                                                        {\n                                                            if (rcx_10 != rsi_36)\n                                                            {\n                                                                rdi_49 = rsi_36;\n                                                                goto label_40c7b7;\n                                                            }\n                                                            goto label_40b5b5;\n                                                        }\n                                                        rdx_10 = -1;\n                                                    }\n                                                    if (rcx_10 != rsi_36)\n                                                    {\n                                                        goto label_40c783;\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    void* r8_4 = &var_670[(rsi_10 << 5)];\n                                                    if (*r8_4 != 5)\n                                                    {\n                                                        goto label_40bcec;\n                                                    }\n                                                    rdx_10 = *(r8_4 + 0x10);\n                                                    if (rdx_10 < 0)\n                                                    {\n                                                        goto label_40bbf0;\n                                                    }\n                                                }\n                                                if (rdx_10 == 0)\n                                                {\n                                                    goto label_40c824;\n                                                }\n                                                rcx_11 = (rdx_10 + 0xc);\n                                                if (rdx_10 >= -0xc)\n                                                {\n                                                    goto label_40b5b5;\n                                                }\n                                                goto label_40bc11;\n                                            }\n                                        label_40bbf0:\n                                            bool cond:9_1 = rax_21 != 0x41;\n                                            rcx_11 = 0xc;\n                                            if (rax_21 != 0x41)\n                                            {\n                                                rcx_11 = 0x12;\n                                            }\n                                            rdx_10 = 0;\n                                            if (cond:9_1)\n                                            {\n                                                rdx_10 = 6;\n                                            }\n                                            goto label_40bc11;\n                                        }\n                                        int64_t rcx_12 = r14_1[5];\n                                        if (rcx_12 != -1)\n                                        {\n                                            void* rcx_14 = &var_670[(rcx_12 << 5)];\n                                            if (*rcx_14 != 5)\n                                            {\n                                                goto label_40bcec;\n                                            }\n                                            r10_1 = *(rcx_14 + 0x10);\n                                            if (r10_1 < 0)\n                                            {\n                                                r11_3 = (r11_3 | 2);\n                                                r10_1 = (-r10_1);\n                                            }\n                                            goto label_40b540;\n                                        }\n                                        r10_1 = 0;\n                                        var_698 = rcx_12;\n                                    label_40c6f1:\n                                        char* rsi_35 = &rdx_11[1];\n                                        int64_t r9_10 = -1;\n                                        int64_t rdx_34 = (*rdx_11 - 0x30);\n                                        if (r10_1 <= 0x1999999999999999)\n                                        {\n                                            int64_t r9_11 = (r10_1 * 5);\n                                            r9_10 = (r9_11 + r9_11);\n                                        }\n                                        r10_1 = (rdx_34 + r9_10);\n                                        rdx_11 = rsi_35;\n                                        if ((rdx_34 + r9_10) < rdx_34)\n                                        {\n                                            int64_t rcx_26 = var_698;\n                                            if (rdi_16 != rsi_35)\n                                            {\n                                            label_40c736:\n                                                rdx_11 = &rdx_11[1];\n                                                if (rdx_11[-1] == 0x30)\n                                                {\n                                                    var_698 = rcx_26;\n                                                    r10_1 = -1;\n                                                }\n                                                else if (rdi_16 != rdx_11)\n                                                {\n                                                    goto label_40c736;\n                                                }\n                                            }\n                                            if ((rdi_16 == rsi_35 || (rdi_16 != rsi_35 && rdx_11[-1] != 0x30)))\n                                            {\n                                                r10_1 = rcx_26;\n                                            }\n                                        }\n                                        if ((((((rdx_34 + r9_10) < rdx_34 && rdi_16 != rsi_35) && rdx_11[-1] == 0x30) || (rdx_34 + r9_10) >= rdx_34) && rdi_16 != rdx_11))\n                                        {\n                                            goto label_40c6f1;\n                                        }\n                                        goto label_40b540;\n                                    }\n                                }\n                            }\n                            if ((r15_7 != arg1 && r15_7 != 0))\n                            {\n                                goto label_40b7db;\n                            }\n                        }\n                        else\n                        {\n                            if (r12_1 >= rax_8)\n                            {\n                                goto label_40b233;\n                            }\n                            bool cond:0_1 = r12_1 < 0;\n                            if ((r12_1 == 0 && rax_8 <= 0xc))\n                            {\n                                r12_1 = 0xc;\n                                rdx_1 = rbx_2 == arg1;\n                                if (rbx_2 == 0)\n                                {\n                                label_40b11a:\n                                    var_6a8 = rdx_1;\n                                    var_698 = rcx_1;\n                                    char* rax_9 = malloc(r12_1);\n                                    rcx_1 = var_698;\n                                    char rdx_2 = var_6a8;\n                                    if (rax_9 == 0)\n                                    {\n                                        goto label_40b5b5;\n                                    }\n                                    if ((r15_2 == 0 || (r15_2 != 0 && rdx_2 == 0)))\n                                    {\n                                        rbx_2 = rax_9;\n                                    }\n                                    if ((r15_2 != 0 && rdx_2 != 0))\n                                    {\n                                        var_698 = rcx_1;\n                                        rcx_1 = var_698;\n                                        rbx_2 = memcpy(rax_9, rbx_2, r15_2);\n                                    }\n                                    goto label_40b233;\n                                }\n                            }\n                            if (r12_1 != 0)\n                            {\n                                if (cond:0_1)\n                                {\n                                    goto label_40b5b5;\n                                }\n                                r12_1 = (r12_1 + r12_1);\n                                if (r12_1 >= rax_8)\n                                {\n                                    goto label_40b1e2;\n                                }\n                            }\n                            if (((r12_1 == 0 && rax_8 > 0xc) || r12_1 != 0))\n                            {\n                                if (rax_8 == -1)\n                                {\n                                    goto label_40b5b5;\n                                }\n                                r12_1 = rax_8;\n                            label_40b1e2:\n                                rdx_1 = rbx_2 == arg1;\n                                if (rbx_2 == 0)\n                                {\n                                    goto label_40b11a;\n                                }\n                            }\n                            if (((((r12_1 == 0 && rax_8 > 0xc) || r12_1 != 0) && rax_8 != -1) || (r12_1 == 0 && rax_8 <= 0xc)))\n                            {\n                                if (rdx_1 != 0)\n                                {\n                                    goto label_40b11a;\n                                }\n                                var_698 = rcx_1;\n                                char* rax_15 = realloc(rbx_2, r12_1);\n                                if (rax_15 != 0)\n                                {\n                                    rcx_1 = var_698;\n                                    rbx_2 = rax_15;\n                                    goto label_40b233;\n                                }\n                            label_40b7ca:\n                                r15_7 = rbx_2;\n                                var_6a8 = __errno_location();\n                            label_40b7db:\n                                free(r15_7);\n                            }\n                        }\n                        if (var_6e0_1 == 0)\n                        {\n                            break;\n                        }\n                        free(var_6e0_1);\n                        break;\n                    }\n                }\n                if ((rcx == r8_1 || (((rcx != r8_1 && (!/* if (rcx == r8_1 || (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && not(unimplemented  {add rax, rcx} && var_6e0_1 == 0) && not(unimplemented  {add rax, rcx})))... */)) && (!(/* if (rcx == r8_1 || (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && not(unimplemented  {add rax, rcx} && var_6e0_1 == 0) && not(unimplemented  {add rax, rcx})))... */ && var_6e0_1 == 0))) && (!/* if (rcx == r8_1 || (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && not(unimplemented  {add rax, rcx} && var_6e0_1 == 0) && not(unimplemented  {add rax, rcx})))... */))))\n                {\n                    r13_1 = r15_2;\n                    goto label_40b23f;\n                }\n                if ((((rcx != r8_1 && (!/* if (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && unimplemented  {add rax, rcx} && var_6e0_1 == 0)... */)) && /* if (rcx != r8_1 && not(unimplemented  {add rax, rcx}) && unimplemented  {add rax, rcx} && var_6e0_1 == 0)... */) && var_6e0_1 == 0))\n                {\n                    goto label_40b6e5;\n                }\n            }\n            else\n            {\n            label_40b6e5:\n                var_6a8 = __errno_location();\n            }\n            if (((rax_3 + var_570) < rax_3 || ((((rax_3 + var_570) >= rax_3 && rax_4 < -6) && rcx != r8_1) && /* if (rax_3 + var_570 u< rax_3 || (rax_3 + var_570 u>= rax_3 && rax_4 u< -6 && rcx != r8_1 && unimplemented  {add rax, rcx}))... */)))\n            {\n                if (var_580 != &var_568)\n                {\n                    free(var_580);\n                }\n                if (var_670 == &var_668)\n                {\n                    goto label_40b628;\n                }\n                free(var_670);\n            label_40b628:\n                rbx_2 = nullptr;\n                *var_6a8 = 0xc;\n            }\n        }\n        else\n        {\n            if (var_580 != &var_568)\n            {\n                free(var_580);\n            }\n            if (var_670 != &var_668)\n            {\n                free(var_670);\n            }\n            rbx_2 = nullptr;\n            *__errno_location() = 0x16;\n        }\n    }\nlabel_40b641:\n    return rbx_2;\n}\n\n"
        },
        {
            "funcName": "sub_40cae0",
            "funcStartAddr": "0x40cae0",
            "funcEndAddr": "0x40ccb6",
            "decompiledFuncCode": "int64_t sub_40cae0(int64_t, void* arg2)\n{\n    int32_t* rax = *(arg2 + 8);\n    if (*arg2 == 0)\n    {\n        return 0;\n    }\n    if (*rax > 0x16)\n    {\n        return 0xffffffff;\n    }\n    /* jump -> jump_table_410f60[*rax] */\n}\n\n"
        },
        {
            "funcName": "sub_40cd00",
            "funcStartAddr": "0x40cd00",
            "funcEndAddr": "0x40da09",
            "decompiledFuncCode": "int64_t sub_40cd00(char* arg1, int64_t* arg2, int64_t* arg3)\n{\n    void* rcx = &arg2[4];\n    void* rax = &arg3[2];\n    int64_t* r8 = arg2;\n    void* r9 = 7;\n    int64_t r11 = 7;\n    int64_t r13 = 0;\n    *arg2 = 0;\n    arg2[1] = rcx;\n    void* var_60 = rcx;\n    *arg3 = 0;\n    arg3[1] = rax;\n    void* var_70 = nullptr;\n    int64_t var_78 = 0;\n    void* var_68 = nullptr;\n    while (true)\n    {\n        char rax_1 = *arg1;\n        int64_t rax_6;\n        if (rax_1 == 0)\n        {\n            *(rcx + (r13 * 0x58)) = arg1;\n            r8[2] = var_78;\n            r8[3] = var_70;\n            rax_6 = 0;\n        }\n        else\n        {\n            void* rbp_1 = &arg1[1];\n            if (rax_1 != 0x25)\n            {\n                goto label_40cd78;\n            }\n            void* r14_1 = ffffffffffffffff;\n            char** r12_1 = (rcx + (r13 * 0x58));\n            *r12_1 = arg1;\n            r12_1[2] = 0;\n            r12_1[3] = 0;\n            r12_1[4] = 0;\n            r12_1[5] = -1;\n            r12_1[6] = 0;\n            r12_1[7] = 0;\n            r12_1[8] = -1;\n            r12_1[0xa] = -1;\n            char rbx_1 = arg1[1];\n            if ((rbx_1 - 0x30) > 9)\n            {\n                goto label_40ce46;\n            }\n            void* rax_29 = rbp_1;\n            char rdx_14;\n            do\n            {\n                rax_29 = (rax_29 + 1);\n                rdx_14 = *rax_29;\n            } while ((rdx_14 - 0x30) <= 9);\n            void* r13_1;\n            if (rdx_14 == 0x24)\n            {\n                int64_t rax_64 = 0;\n                void* rcx_16;\n                int64_t rdx_28;\n                int64_t rdi_16;\n                char rsi_21;\n                do\n                {\n                    int64_t rsi_19 = -1;\n                    int64_t rdx_27 = (rbx_1 - 0x30);\n                    if (rax_64 <= 0x1999999999999999)\n                    {\n                        int64_t rsi_20 = (rax_64 * 5);\n                        rsi_19 = (rsi_20 + rsi_20);\n                    }\n                    rcx_16 = rbp_1;\n                    while (true)\n                    {\n                        rbx_1 = *(rbp_1 + 1);\n                        rdx_28 = (rdx_27 + rsi_19);\n                        rdi_16 = (rdx_27 + rsi_19) < rdx_27;\n                        rax_64 = rdx_28;\n                        rbp_1 = (rbp_1 + 1);\n                        rsi_21 = (rbx_1 - 0x30);\n                        if (rdi_16 == 0)\n                        {\n                            break;\n                        }\n                        if (rsi_21 > 9)\n                        {\n                            break;\n                        }\n                        rsi_19 = -1;\n                        rcx_16 = rbp_1;\n                        rdx_27 = (rbx_1 - 0x30);\n                    }\n                    if (rdi_16 != 0)\n                    {\n                        break;\n                    }\n                } while (rsi_21 <= 9);\n                if (rdi_16 != 0)\n                {\n                    goto label_40d4c8;\n                }\n                r14_1 = (rdx_28 - 1);\n                if (r14_1 <= -3)\n                {\n                    rbp_1 = (rcx_16 + 2);\n                    rbx_1 = *(rcx_16 + 2);\n                    goto label_40ce46;\n                }\n            label_40d4c8:\n                r13_1 = arg3[1];\n            }\n            else\n            {\n                r14_1 = ffffffffffffffff;\n            label_40ce46:\n                void* rcx_1;\n                while (true)\n                {\n                    rcx_1 = (rbp_1 + 1);\n                    if (rbx_1 == 0x27)\n                    {\n                        r12_1[2] = (r12_1[2] | 1);\n                    }\n                    else if (rbx_1 == 0x2d)\n                    {\n                        r12_1[2] = (r12_1[2] | 2);\n                    }\n                    else if (rbx_1 == 0x2b)\n                    {\n                        r12_1[2] = (r12_1[2] | 4);\n                    }\n                    else if (rbx_1 == 0x20)\n                    {\n                        r12_1[2] = (r12_1[2] | 8);\n                    }\n                    else if (rbx_1 == 0x23)\n                    {\n                        r12_1[2] = (r12_1[2] | 0x10);\n                    }\n                    else if (rbx_1 == 0x30)\n                    {\n                        r12_1[2] = (r12_1[2] | 0x20);\n                    }\n                    else\n                    {\n                        if (rbx_1 != 0x49)\n                        {\n                            break;\n                        }\n                        r12_1[2] = (r12_1[2] | 0x40);\n                    }\n                    rbx_1 = *rcx_1;\n                    rbp_1 = rcx_1;\n                }\n                if (rbx_1 != 0x2a)\n                {\n                    if ((rbx_1 - 0x30) <= 9)\n                    {\n                        r12_1[3] = rbp_1;\n                        if ((*rbp_1 - 0x30) <= 9)\n                        {\n                            void* rcx_15 = rbp_1;\n                            void* rdx_21;\n                            while (true)\n                            {\n                                rdx_21 = (rcx_15 + 1);\n                                if ((*(rcx_15 + 1) - 0x30) > 9)\n                                {\n                                    break;\n                                }\n                                rcx_15 = rdx_21;\n                            }\n                            rcx_1 = (rcx_15 + 2);\n                            int64_t rax_57 = (rdx_21 - rbp_1);\n                            rbp_1 = rdx_21;\n                            if (var_78 >= rax_57)\n                            {\n                                rax_57 = var_78;\n                            }\n                            var_78 = rax_57;\n                        }\n                        r12_1[4] = rbp_1;\n                        rbx_1 = *rbp_1;\n                    }\n                    goto label_40ceb8;\n                }\n                int64_t rax_12 = 1;\n                r12_1[3] = rbp_1;\n                r12_1[4] = rcx_1;\n                if (var_78 != 0)\n                {\n                    rax_12 = var_78;\n                }\n                var_78 = rax_12;\n                int32_t rax_13 = *(rbp_1 + 1);\n                void* rbx_2;\n                if ((rax_13 - 0x30) <= 9)\n                {\n                    void* rdx_17 = rcx_1;\n                    char rsi_10;\n                    do\n                    {\n                        rdx_17 = (rdx_17 + 1);\n                        rsi_10 = *rdx_17;\n                    } while ((rsi_10 - 0x30) <= 9);\n                    if (rsi_10 == 0x24)\n                    {\n                        void* rsi_11 = nullptr;\n                        void* rdx_20;\n                        int64_t rbp_2;\n                        void* rdi_5;\n                        char rbx_6;\n                        do\n                        {\n                            void* const rdx_18 = ffffffffffffffff;\n                            int64_t rax_43 = (rax_13 - 0x30);\n                            if (rsi_11 <= 0x1999999999999999)\n                            {\n                                void* rdx_19 = (rsi_11 * 5);\n                                rdx_18 = (rdx_19 + rdx_19);\n                            }\n                            rdi_5 = rcx_1;\n                            while (true)\n                            {\n                                rdx_20 = (rdx_18 + rax_43);\n                                rax_13 = *(rcx_1 + 1);\n                                rbp_2 = (rdx_18 + rax_43) < rdx_18;\n                                rsi_11 = rdx_20;\n                                rcx_1 = (rcx_1 + 1);\n                                rbx_6 = (rax_13 - 0x30);\n                                if (rbp_2 == 0)\n                                {\n                                    break;\n                                }\n                                if (rbx_6 > 9)\n                                {\n                                    break;\n                                }\n                                rdx_18 = ffffffffffffffff;\n                                rdi_5 = rcx_1;\n                                rax_43 = (rax_13 - 0x30);\n                            }\n                            if (rbp_2 != 0)\n                            {\n                                break;\n                            }\n                        } while (rbx_6 <= 9);\n                        if (rbp_2 != 0)\n                        {\n                            goto label_40d4c8;\n                        }\n                        rbx_2 = (rdx_20 - 1);\n                        if (rbx_2 > -3)\n                        {\n                            goto label_40d4c8;\n                        }\n                        r12_1[5] = rbx_2;\n                        rcx_1 = (rdi_5 + 2);\n                        goto label_40cf5c;\n                    }\n                }\n                rbx_2 = r12_1[5];\n                if (rbx_2 != -1)\n                {\n                    goto label_40cf5c;\n                }\n                void* rax_41 = (var_68 + 1);\n                r12_1[5] = var_68;\n                if (var_68 == -1)\n                {\n                    goto label_40d4c8;\n                }\n                rbx_2 = var_68;\n                var_68 = rax_41;\n            label_40cf5c:\n                r13_1 = arg3[1];\n                int64_t rdx_4;\n                void* rsi_7;\n                if (r9 <= rbx_2)\n                {\n                    void* r9_1 = (r9 + r9);\n                    void* rax_36 = (rbx_2 + 1);\n                    if (r9_1 <= rbx_2)\n                    {\n                        r9_1 = rax_36;\n                    }\n                    if (r9_1 <= 0x7ffffffffffffff)\n                    {\n                        int64_t rsi_6 = (r9_1 << 5);\n                        if (rax == r13_1)\n                        {\n                            void* rax_63 = malloc(rsi_6);\n                            r9 = r9_1;\n                            if (rax_63 == 0)\n                            {\n                                goto label_40d6b9;\n                            }\n                            rdx_4 = *arg3;\n                            rsi_7 = rax;\n                            r13_1 = rax_63;\n                        label_40d7d4:\n                            memcpy(r13_1, rsi_7, (rdx_4 << 5));\n                            rdx_4 = *arg3;\n                        label_40d28d:\n                            arg3[1] = r13_1;\n                            goto label_40cf6c;\n                        }\n                        void* rax_37 = realloc(r13_1, rsi_6);\n                        rsi_7 = arg3[1];\n                        r13_1 = rax_37;\n                        r9 = r9_1;\n                        if (rax_37 != 0)\n                        {\n                            rdx_4 = *arg3;\n                            if (rax == rsi_7)\n                            {\n                                goto label_40d7d4;\n                            }\n                            goto label_40d28d;\n                        }\n                        goto label_40d6a0;\n                    }\n                label_40d69d:\n                    rsi_7 = r13_1;\n                label_40d6a0:\n                    if (rax == rsi_7)\n                    {\n                        goto label_40d6b9;\n                    }\n                label_40d6af:\n                    free(rsi_7);\n                label_40d6b9:\n                    int64_t rdi_12 = r8[1];\n                    if (var_60 != rdi_12)\n                    {\n                        free(rdi_12);\n                    }\n                    break;\n                }\n                rdx_4 = *arg3;\n            label_40cf6c:\n                if (rdx_4 <= rbx_2)\n                {\n                    do\n                    {\n                        rdx_4 = (rdx_4 + 1);\n                        *((r13_1 + (rdx_4 << 5)) - 0x20) = 0;\n                    } while (rdx_4 <= rbx_2);\n                    *arg3 = rdx_4;\n                    goto label_40cf98;\n                }\n            label_40cf98:\n                void* rax_16 = (r13_1 + (rbx_2 << 5));\n                int32_t rdx_5 = *rax_16;\n                if (rdx_5 == 0)\n                {\n                    *rax_16 = 5;\n                    rbx_1 = *rcx_1;\n                    rbp_1 = rcx_1;\n                    rcx_1 = (rcx_1 + 1);\n                    if (rbx_1 == 0x2e)\n                    {\n                        goto label_40cfc0;\n                    }\n                    goto label_40cec1;\n                }\n                if (rdx_5 == 5)\n                {\n                    rbx_1 = *rcx_1;\n                    rbp_1 = rcx_1;\n                    rcx_1 = (rcx_1 + 1);\n                label_40ceb8:\n                    if (rbx_1 != 0x2e)\n                    {\n                        goto label_40cec1;\n                    }\n                label_40cfc0:\n                    bool cond:0_1 = *(rbp_1 + 1) != 0x2a;\n                    r12_1[6] = rbp_1;\n                    if (cond:0_1)\n                    {\n                        void* rax_35;\n                        if ((*(rbp_1 + 1) - 0x30) > 9)\n                        {\n                            rbp_1 = rcx_1;\n                            rax_35 = 1;\n                        }\n                        else\n                        {\n                            do\n                            {\n                                rcx_1 = (rcx_1 + 1);\n                            } while ((*rcx_1 - 0x30) <= 9);\n                            rax_35 = (rcx_1 - rbp_1);\n                            rbp_1 = rcx_1;\n                        }\n                        r12_1[7] = rcx_1;\n                        rbx_1 = *rcx_1;\n                        if (var_70 >= rax_35)\n                        {\n                            rax_35 = var_70;\n                        }\n                        var_70 = rax_35;\n                        goto label_40cec1;\n                    }\n                    void* rax_17 = 2;\n                    char* rcx_4 = (rbp_1 + 2);\n                    r12_1[7] = rcx_4;\n                    if (var_70 >= 2)\n                    {\n                        rax_17 = var_70;\n                    }\n                    var_70 = rax_17;\n                    int32_t rax_18 = *(rbp_1 + 2);\n                    void* rbx_4;\n                    if ((rax_18 - 0x30) <= 9)\n                    {\n                        char* rdx_31 = rcx_4;\n                        char rsi_23;\n                        do\n                        {\n                            rdx_31 = &rdx_31[1];\n                            rsi_23 = *rdx_31;\n                        } while ((rsi_23 - 0x30) <= 9);\n                        if (rsi_23 != 0x24)\n                        {\n                            goto label_40cfff;\n                        }\n                        void* rsi_24 = nullptr;\n                        void* rdx_34;\n                        int64_t rbp_3;\n                        char* rdi_18;\n                        char rbx_7;\n                        do\n                        {\n                            void* const rdx_32 = ffffffffffffffff;\n                            int64_t rax_67 = (rax_18 - 0x30);\n                            if (rsi_24 <= 0x1999999999999999)\n                            {\n                                void* rdx_33 = (rsi_24 * 5);\n                                rdx_32 = (rdx_33 + rdx_33);\n                            }\n                            rdi_18 = rcx_4;\n                            while (true)\n                            {\n                                rdx_34 = (rdx_32 + rax_67);\n                                rbp_3 = (rdx_32 + rax_67) < rdx_32;\n                                rcx_4 = &rcx_4[1];\n                                rax_18 = *rcx_4;\n                                rsi_24 = rdx_34;\n                                rbx_7 = (rax_18 - 0x30);\n                                if (rbp_3 == 0)\n                                {\n                                    break;\n                                }\n                                if (rbx_7 > 9)\n                                {\n                                    break;\n                                }\n                                rdx_32 = ffffffffffffffff;\n                                rdi_18 = rcx_4;\n                                rax_67 = (rax_18 - 0x30);\n                            }\n                            if (rbp_3 != 0)\n                            {\n                                break;\n                            }\n                        } while (rbx_7 <= 9);\n                        if (rbp_3 != 0)\n                        {\n                            goto label_40d4c8;\n                        }\n                        rbx_4 = (rdx_34 - 1);\n                        if (rbx_4 > -3)\n                        {\n                            goto label_40d4c8;\n                        }\n                        r12_1[8] = rbx_4;\n                        rcx_4 = &rdi_18[2];\n                        goto label_40d00e;\n                    }\n                label_40cfff:\n                    rbx_4 = r12_1[8];\n                    if (rbx_4 != -1)\n                    {\n                        goto label_40d00e;\n                    }\n                    void* rax_65 = (var_68 + 1);\n                    r12_1[8] = var_68;\n                    if (var_68 == -1)\n                    {\n                        goto label_40d4c8;\n                    }\n                    rbx_4 = var_68;\n                    var_68 = rax_65;\n                label_40d00e:\n                    r13_1 = arg3[1];\n                    void* var_58;\n                    int64_t rdx_7;\n                    if (r9 <= rbx_4)\n                    {\n                        void* r9_3 = (r9 + r9);\n                        void* rax_61 = (rbx_4 + 1);\n                        if (r9_3 <= rbx_4)\n                        {\n                            r9_3 = rax_61;\n                        }\n                        if (r9_3 > 0x7ffffffffffffff)\n                        {\n                            goto label_40d69d;\n                        }\n                        int64_t rsi_18 = (r9_3 << 5);\n                        var_58 = rcx_4;\n                        if (rax == r13_1)\n                        {\n                            void* rax_69 = malloc(rsi_18);\n                            rcx_4 = var_58;\n                            r9 = r9_3;\n                            if (rax_69 == 0)\n                            {\n                                goto label_40d6b9;\n                            }\n                            rdx_7 = *arg3;\n                            rsi_7 = rax;\n                            r13_1 = rax_69;\n                        label_40d986:\n                            memcpy(r13_1, rsi_7, (rdx_7 << 5));\n                            rdx_7 = *arg3;\n                        label_40d76c:\n                            arg3[1] = r13_1;\n                            goto label_40d01e;\n                        }\n                        void* rax_62 = realloc(r13_1, rsi_18);\n                        rsi_7 = arg3[1];\n                        rcx_4 = var_58;\n                        r13_1 = rax_62;\n                        r9 = r9_3;\n                        if (rax_62 != 0)\n                        {\n                            rdx_7 = *arg3;\n                            if (rax == rsi_7)\n                            {\n                                goto label_40d986;\n                            }\n                            goto label_40d76c;\n                        }\n                        goto label_40d6a0;\n                    }\n                    rdx_7 = *arg3;\n                label_40d01e:\n                    if (rdx_7 <= rbx_4)\n                    {\n                        do\n                        {\n                            rdx_7 = (rdx_7 + 1);\n                            *((r13_1 + (rdx_7 << 5)) - 0x20) = 0;\n                        } while (rdx_7 <= rbx_4);\n                        *arg3 = rdx_7;\n                        goto label_40d04b;\n                    }\n                label_40d04b:\n                    void* rax_23 = ((rbx_4 << 5) + r13_1);\n                    int32_t rdx_8 = *rax_23;\n                    if (rdx_8 == 0)\n                    {\n                        *rax_23 = 5;\n                        rbp_1 = rcx_4;\n                        rbx_1 = *rcx_4;\n                    label_40cec1:\n                        int32_t rax_11 = 0;\n                        while (true)\n                        {\n                            rbp_1 = (rbp_1 + 1);\n                            if (rbx_1 == 0x68)\n                            {\n                                rax_11 = (rax_11 | (1 << (rax_11 & 1)));\n                            }\n                            else if (rbx_1 == 0x4c)\n                            {\n                                rax_11 = (rax_11 | 4);\n                            }\n                            else\n                            {\n                                if ((rbx_1 != 0x6c && (rbx_1 != 0x6a && ((rbx_1 & 0xdf) != 0x5a && rbx_1 != 0x74))))\n                                {\n                                    break;\n                                }\n                                rax_11 = (rax_11 + 8);\n                            }\n                            rbx_1 = *rbp_1;\n                        }\n                        char rdx_9 = (rbx_1 - 0x25);\n                        if (rdx_9 > 0x53)\n                        {\n                            goto label_40d4c8;\n                        }\n                        int32_t rcx_6;\n                        switch (rdx_9)\n                        {\n                            case 0:\n                            {\n                                goto label_40d0f1;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 7:\n                            case 8:\n                            case 9:\n                            case 0xa:\n                            case 0xb:\n                            case 0xc:\n                            case 0xd:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1d:\n                            case 0x1f:\n                            case 0x23:\n                            case 0x24:\n                            case 0x25:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x3b:\n                            case 0x3d:\n                            case 0x46:\n                            case 0x48:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x51:\n                            case 0x52:\n                            {\n                                goto label_40d4c8;\n                            }\n                            case 0x1c:\n                            case 0x20:\n                            case 0x21:\n                            case 0x22:\n                            case 0x3c:\n                            case 0x40:\n                            case 0x41:\n                            case 0x42:\n                            {\n                                rcx_6 = 0xc;\n                                if (rax_11 <= 0xf)\n                                {\n                                    int32_t rcx_12;\n                                    rcx_12 = (rax_11 & 4) != 0;\n                                    rcx_6 = (rcx_12 + 0xb);\n                                }\n                                goto label_40d099;\n                            }\n                            case 0x1e:\n                            {\n                                rcx_6 = 0xe;\n                                rbx_1 = 0x63;\n                                goto label_40d099;\n                            }\n                            case 0x2e:\n                            {\n                                rcx_6 = 0x10;\n                                rbx_1 = 0x73;\n                                goto label_40d099;\n                            }\n                            case 0x33:\n                            case 0x4a:\n                            case 0x50:\n                            case 0x53:\n                            {\n                                rcx_6 = 0xa;\n                                if ((rax_11 <= 0xf && (rax_11 & 4) == 0))\n                                {\n                                    rcx_6 = 8;\n                                    if (rax_11 <= 7)\n                                    {\n                                        rcx_6 = 2;\n                                        if ((rax_11 & 2) == 0)\n                                        {\n                                            rcx_6 = (((2 - 2) & 2) + 4);\n                                        }\n                                    }\n                                }\n                                goto label_40d099;\n                            }\n                            case 0x3e:\n                            {\n                                int32_t rcx_8;\n                                rcx_8 = rax_11 > 7;\n                                rcx_6 = (rcx_8 + 0xd);\n                                goto label_40d099;\n                            }\n                            case 0x3f:\n                            case 0x44:\n                            {\n                                rcx_6 = 9;\n                                if ((rax_11 <= 0xf && (rax_11 & 4) == 0))\n                                {\n                                    rcx_6 = 7;\n                                    if (rax_11 <= 7)\n                                    {\n                                        rcx_6 = 1;\n                                        if ((rax_11 & 2) == 0)\n                                        {\n                                            rcx_6 = (((1 - 1) & 2) + 3);\n                                        }\n                                    }\n                                }\n                                goto label_40d099;\n                            }\n                            case 0x49:\n                            {\n                                rcx_6 = 0x16;\n                                if ((rax_11 <= 0xf && (rax_11 & 4) == 0))\n                                {\n                                    rcx_6 = 0x15;\n                                    if (rax_11 <= 7)\n                                    {\n                                        rcx_6 = 0x12;\n                                        if ((rax_11 & 2) == 0)\n                                        {\n                                            int32_t rcx_9;\n                                            rcx_9 = (rax_11 & 1) == 0;\n                                            rcx_6 = (rcx_9 + 0x13);\n                                        }\n                                    }\n                                }\n                                goto label_40d099;\n                            }\n                            case 0x4b:\n                            {\n                                rcx_6 = 0x11;\n                                goto label_40d099;\n                            }\n                            case 0x4e:\n                            {\n                                int32_t rcx_5;\n                                rcx_5 = rax_11 > 7;\n                                rcx_6 = (rcx_5 + 0xf);\n                            label_40d099:\n                                if (r14_1 == -1)\n                                {\n                                    void* rax_51 = (var_68 + 1);\n                                    r12_1[0xa] = var_68;\n                                    if (var_68 == -1)\n                                    {\n                                        goto label_40d4c8;\n                                    }\n                                    r14_1 = var_68;\n                                    var_68 = rax_51;\n                                    goto label_40d0a8;\n                                }\n                                r12_1[0xa] = r14_1;\n                            label_40d0a8:\n                                r13_1 = arg3[1];\n                                if (r9 > r14_1)\n                                {\n                                    goto label_40d0b5;\n                                }\n                                void* r9_2 = (r9 + r9);\n                                void* rax_48 = (r14_1 + 1);\n                                if (r9_2 <= r14_1)\n                                {\n                                    r9_2 = rax_48;\n                                }\n                                if (r9_2 > 0x7ffffffffffffff)\n                                {\n                                    goto label_40d69d;\n                                }\n                                size_t rsi_13 = (r9_2 << 5);\n                                var_58 = rcx_6;\n                                void* rax_58;\n                                if (rax == r13_1)\n                                {\n                                    rax_58 = malloc(rsi_13);\n                                    rcx_6 = var_58;\n                                    r9 = r9_2;\n                                    if (rax_58 == 0)\n                                    {\n                                        goto label_40d6b9;\n                                    }\n                                    goto label_40d659;\n                                }\n                                void* rax_49 = realloc(r13_1, rsi_13);\n                                rcx_6 = var_58;\n                                r13_1 = rax_49;\n                                r9 = r9_2;\n                                if (rax_49 == 0)\n                                {\n                                    goto label_40d9f3;\n                                }\n                                if (rax != arg3[1])\n                                {\n                                    goto label_40d59b;\n                                }\n                                rax_58 = r13_1;\n                                r13_1 = rax;\n                            label_40d659:\n                                void* rsi_16 = r13_1;\n                                r13_1 = rax_58;\n                                var_58 = rcx_6;\n                                memcpy(rax_58, rsi_16, (*arg3 << 5));\n                                rcx_6 = var_58;\n                            label_40d59b:\n                                arg3[1] = r13_1;\n                            label_40d0b5:\n                                int64_t rax_24 = *arg3;\n                                if (rax_24 <= r14_1)\n                                {\n                                    do\n                                    {\n                                        rax_24 = (rax_24 + 1);\n                                        *((r13_1 + (rax_24 << 5)) - 0x20) = 0;\n                                    } while (rax_24 <= r14_1);\n                                    *arg3 = rax_24;\n                                }\n                                void* rax_25 = (r13_1 + (r14_1 << 5));\n                                int32_t rdx_13 = *rax_25;\n                                if (rdx_13 == 0)\n                                {\n                                    *rax_25 = rcx_6;\n                                label_40d0f1:\n                                    r12_1[9] = rbx_1;\n                                    int64_t rax_26 = *r8;\n                                    r12_1[1] = rbp_1;\n                                    r13 = (rax_26 + 1);\n                                    *r8 = r13;\n                                    if (r11 > r13)\n                                    {\n                                        rcx = r8[1];\n                                    label_40cd78:\n                                        arg1 = rbp_1;\n                                        continue;\n                                    }\n                                    else\n                                    {\n                                        if (r11 >= 0)\n                                        {\n                                            int64_t rbx_5 = (r11 + r11);\n                                            if (rbx_5 > 0x2e8ba2e8ba2e8ba)\n                                            {\n                                                goto label_40d9f3;\n                                            }\n                                            int64_t r12_2 = r8[1];\n                                            int64_t rsi_3 = (r11 * 0xb0);\n                                            if (var_60 == r12_2)\n                                            {\n                                                void* rax_38 = malloc(rsi_3);\n                                                rcx = rax_38;\n                                                if (rax_38 != 0)\n                                                {\n                                                label_40d2e8:\n                                                    rcx = memcpy(rcx, r12_2, (r13 * 0x58));\n                                                    r13 = *r8;\n                                                label_40d18f:\n                                                    r8[1] = rcx;\n                                                    r11 = rbx_5;\n                                                    goto label_40cd78;\n                                                }\n                                                rsi_7 = arg3[1];\n                                                if (rax == rsi_7)\n                                                {\n                                                    break;\n                                                }\n                                                goto label_40d6af;\n                                            }\n                                            void* rax_28 = realloc(r12_2, rsi_3);\n                                            rcx = rax_28;\n                                            if (rax_28 == 0)\n                                            {\n                                                goto label_40d9f3;\n                                            }\n                                            r12_2 = r8[1];\n                                            r13 = *r8;\n                                            if (var_60 == r12_2)\n                                            {\n                                                goto label_40d2e8;\n                                            }\n                                            goto label_40d18f;\n                                        }\n                                    label_40d9f3:\n                                        rsi_7 = arg3[1];\n                                    }\n                                    goto label_40d6a0;\n                                }\n                                if (rdx_13 == rcx_6)\n                                {\n                                    goto label_40d0f1;\n                                }\n                                break;\n                            }\n                        }\n                    }\n                    else if (rdx_8 == 5)\n                    {\n                        rbx_1 = *rcx_4;\n                        rbp_1 = rcx_4;\n                        goto label_40cec1;\n                    }\n                }\n            }\n            if (rax == r13_1)\n            {\n                goto label_40d4e5;\n            }\n            free(r13_1);\n        label_40d4e5:\n            int64_t rdi_7 = r8[1];\n            if (var_60 != rdi_7)\n            {\n                free(rdi_7);\n            }\n            *__errno_location() = 0x16;\n            rax_6 = 0xffffffff;\n        }\n        return rax_6;\n    }\n    *__errno_location() = 0xc;\n    return 0xffffffff;\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x40da10",
            "funcEndAddr": "0x40da6d",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x40da70",
            "funcEndAddr": "0x40da71",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_40da80",
            "funcStartAddr": "0x40da80",
            "funcEndAddr": "0x40da98",
            "decompiledFuncCode": "int64_t sub_40da80(void (* arg1)(void*))\n{\n    int64_t rdx = data_6142a8;\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, rdx);\n}\n\n"
        },
        {
            "funcName": "sub_40da98",
            "funcStartAddr": "0x40da98",
            "funcEndAddr": "0x40dab8",
            "decompiledFuncCode": "int64_t sub_40da98(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_613e30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}