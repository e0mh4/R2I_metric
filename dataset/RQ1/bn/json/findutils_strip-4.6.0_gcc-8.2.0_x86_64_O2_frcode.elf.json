{
    "decompilerName": "binaryNinja",
    "binaryName": "findutils_strip-4.6.0_gcc-8.2.0_x86_64_O2_frcode.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 97,
    "funcInfo": [
        {
            "funcName": "sub_4011e0",
            "funcStartAddr": "0x4011e0",
            "funcEndAddr": "0x4011ec",
            "decompiledFuncCode": "int64_t sub_4011e0()\n{\n    int64_t var_8 = data_608008;\n    /* jump -> data_608010 */\n}\n\n"
        },
        {
            "funcName": "sub_4011f6",
            "funcStartAddr": "0x4011f6",
            "funcEndAddr": "0x401200",
            "decompiledFuncCode": "int64_t sub_4011f6()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_401206",
            "funcStartAddr": "0x401206",
            "funcEndAddr": "0x401210",
            "decompiledFuncCode": "int64_t sub_401206()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_401216",
            "funcStartAddr": "0x401216",
            "funcEndAddr": "0x401220",
            "decompiledFuncCode": "int64_t sub_401216()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_401226",
            "funcStartAddr": "0x401226",
            "funcEndAddr": "0x401230",
            "decompiledFuncCode": "int64_t sub_401226()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_401236",
            "funcStartAddr": "0x401236",
            "funcEndAddr": "0x401240",
            "decompiledFuncCode": "int64_t sub_401236()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_401246",
            "funcStartAddr": "0x401246",
            "funcEndAddr": "0x401250",
            "decompiledFuncCode": "int64_t sub_401246()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_401256",
            "funcStartAddr": "0x401256",
            "funcEndAddr": "0x401260",
            "decompiledFuncCode": "int64_t sub_401256()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_401266",
            "funcStartAddr": "0x401266",
            "funcEndAddr": "0x401270",
            "decompiledFuncCode": "int64_t sub_401266()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_401276",
            "funcStartAddr": "0x401276",
            "funcEndAddr": "0x401280",
            "decompiledFuncCode": "int64_t sub_401276()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_401286",
            "funcStartAddr": "0x401286",
            "funcEndAddr": "0x401290",
            "decompiledFuncCode": "int64_t sub_401286()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_401296",
            "funcStartAddr": "0x401296",
            "funcEndAddr": "0x4012a0",
            "decompiledFuncCode": "int64_t sub_401296()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_4012a6",
            "funcStartAddr": "0x4012a6",
            "funcEndAddr": "0x4012b0",
            "decompiledFuncCode": "int64_t sub_4012a6()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_4012b6",
            "funcStartAddr": "0x4012b6",
            "funcEndAddr": "0x4012c0",
            "decompiledFuncCode": "int64_t sub_4012b6()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_4012c6",
            "funcStartAddr": "0x4012c6",
            "funcEndAddr": "0x4012d0",
            "decompiledFuncCode": "int64_t sub_4012c6()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_4012d6",
            "funcStartAddr": "0x4012d6",
            "funcEndAddr": "0x4012e0",
            "decompiledFuncCode": "int64_t sub_4012d6()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_4012e6",
            "funcStartAddr": "0x4012e6",
            "funcEndAddr": "0x4012f0",
            "decompiledFuncCode": "int64_t sub_4012e6()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_4012f6",
            "funcStartAddr": "0x4012f6",
            "funcEndAddr": "0x401300",
            "decompiledFuncCode": "int64_t sub_4012f6()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_401306",
            "funcStartAddr": "0x401306",
            "funcEndAddr": "0x401310",
            "decompiledFuncCode": "int64_t sub_401306()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_401316",
            "funcStartAddr": "0x401316",
            "funcEndAddr": "0x401320",
            "decompiledFuncCode": "int64_t sub_401316()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_401326",
            "funcStartAddr": "0x401326",
            "funcEndAddr": "0x401330",
            "decompiledFuncCode": "int64_t sub_401326()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_401336",
            "funcStartAddr": "0x401336",
            "funcEndAddr": "0x401340",
            "decompiledFuncCode": "int64_t sub_401336()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_401346",
            "funcStartAddr": "0x401346",
            "funcEndAddr": "0x401350",
            "decompiledFuncCode": "int64_t sub_401346()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_401356",
            "funcStartAddr": "0x401356",
            "funcEndAddr": "0x401360",
            "decompiledFuncCode": "int64_t sub_401356()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_401366",
            "funcStartAddr": "0x401366",
            "funcEndAddr": "0x401370",
            "decompiledFuncCode": "int64_t sub_401366()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_401376",
            "funcStartAddr": "0x401376",
            "funcEndAddr": "0x401380",
            "decompiledFuncCode": "int64_t sub_401376()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_401386",
            "funcStartAddr": "0x401386",
            "funcEndAddr": "0x401390",
            "decompiledFuncCode": "int64_t sub_401386()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_401396",
            "funcStartAddr": "0x401396",
            "funcEndAddr": "0x4013a0",
            "decompiledFuncCode": "int64_t sub_401396()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_4013a6",
            "funcStartAddr": "0x4013a6",
            "funcEndAddr": "0x4013b0",
            "decompiledFuncCode": "int64_t sub_4013a6()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_4013b6",
            "funcStartAddr": "0x4013b6",
            "funcEndAddr": "0x4013c0",
            "decompiledFuncCode": "int64_t sub_4013b6()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_4013c6",
            "funcStartAddr": "0x4013c6",
            "funcEndAddr": "0x4013d0",
            "decompiledFuncCode": "int64_t sub_4013c6()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_4013d6",
            "funcStartAddr": "0x4013d6",
            "funcEndAddr": "0x4013e0",
            "decompiledFuncCode": "int64_t sub_4013d6()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "sub_4013e6",
            "funcStartAddr": "0x4013e6",
            "funcEndAddr": "0x4013f0",
            "decompiledFuncCode": "int64_t sub_4013e6()\n{\n    int64_t var_8 = 0x1f;\n    /* tailcall */\n    return sub_4011e0();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x401510",
            "funcEndAddr": "0x4019f2",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    char* rdi = *argv;\n    if (rdi == 0)\n    {\n        rdi = \"frcode\";\n    }\n    sub_401cb0(rdi);\n    if (sub_405810(sub_401c10) != 0)\n    {\n        error(1, *__errno_location(), dcgettext(nullptr, \"The atexit library function fail\u2026\", 5));\n    }\n    int64_t r14 = 0;\n    int32_t r15 = 0;\n    int32_t r12 = 0xa;\n    uint64_t var_48 = 0x402;\n    char* var_50 = sub_403c70(0x402);\n    char* rax_2 = sub_403c70(0x402);\n    *rax_2 = 0;\n    char* rbp_1 = rax_2;\n    int32_t rax_4;\n    while (true)\n    {\n        int32_t rax_3;\n        int32_t rdi_2;\n        rax_3 = getopt_long(argc, argv, \"hv0S:\", &data_405a60, nullptr);\n        if (rax_3 != 0xffffffff)\n        {\n            bool cond:0_1 = rax_3 <= 0x53;\n            if (rax_3 == 0x53)\n            {\n                int64_t rax_8 = data_608400;\n                int32_t* rax_9 = __errno_location();\n                *rax_9 = 0;\n                char* var_40;\n                int64_t rax_10 = strtol(rax_8, &var_40, 0xa);\n                r14 = rax_10;\n                char* r8_1;\n                if (rax_10 == 0)\n                {\n                    r8_1 = var_40;\n                    if (r8_1 == data_608400)\n                    {\n                        error(1, 0, dcgettext(nullptr, \"You need to specify a security l\u2026\", 5));\n                    label_401711:\n                        r14 = -1;\n                    label_40169c:\n                        error(1, 0, dcgettext(nullptr, \"slocate security level %ld is un\u2026\", 5), r14);\n                    }\n                    else if (*r8_1 != 0)\n                    {\n                    label_40170c:\n                        error(1, 0, dcgettext(nullptr, \"Security level %s has unexpected\u2026\", 5), rax_8, r8_1);\n                        goto label_401711;\n                    }\n                }\n                else\n                {\n                    if ((0x7fffffffffffffff + r14) > -3)\n                    {\n                        if (*rax_9 != 0)\n                        {\n                            error(1, 0, dcgettext(nullptr, \"Security level %s is outside the\u2026\", 5), rax_8);\n                            goto label_401711;\n                        }\n                        r8_1 = var_40;\n                        if (*r8_1 == 0)\n                        {\n                            goto label_40169c;\n                        }\n                        goto label_40170c;\n                    }\n                    r8_1 = var_40;\n                    if (*r8_1 != 0)\n                    {\n                        goto label_40170c;\n                    }\n                    if (r14 != 1)\n                    {\n                        goto label_40169c;\n                    }\n                }\n                r15 = 1;\n                continue;\n            }\n            else if (cond:0_1)\n            {\n                r12 = 0;\n                if (rax_3 == 0x30)\n                {\n                    continue;\n                }\n            }\n            else\n            {\n                if (rax_3 == 0x68)\n                {\n                    sub_401b10(stdout);\n                    rax_4 = 0;\n                    break;\n                }\n                if (rax_3 == 0x76)\n                {\n                    sub_401b70(\"frcode\");\n                    rax_4 = 0;\n                    break;\n                }\n            }\n        }\n        else if (data_60821c == argc)\n        {\n            uint64_t* const rsi_3 = stdout;\n            if (r15 != 0)\n            {\n                fputc(((rdi_2 - rdi_2) + 0x31), rsi_3);\n                fputc(0, stdout);\n            }\n            else if (fwrite(&data_405a40, 1, 0xa, stdout) != 0xa)\n            {\n                error(1, *__errno_location(), dcgettext(nullptr, \"Failed to write to standard outp\u2026\", 5));\n            }\n            uint64_t var_68_2 = 0x402;\n            int32_t r13_1 = 0;\n            while (true)\n            {\n                int32_t rax_16 = getdelim(&var_50, &var_48, r12, stdin);\n                if (rax_16 <= 0)\n                {\n                    break;\n                }\n                var_50[(rax_16 - 1)] = 0;\n                char* rsi_6 = var_50;\n                char rdx_5 = *rbp_1;\n                char* rax_18 = rsi_6;\n                char* rdi_9;\n                if ((*rsi_6 != rdx_5 || (*rsi_6 == rdx_5 && rdx_5 == 0)))\n                {\n                    rdi_9 = rbp_1;\n                }\n                if ((*rsi_6 == rdx_5 && rdx_5 != 0))\n                {\n                    void* rcx_4 = &rbp_1[0x7ffffffe];\n                    rdi_9 = rbp_1;\n                    do\n                    {\n                        rdi_9 = &rdi_9[1];\n                        rax_18 = &rax_18[1];\n                        char rdx_6 = *rdi_9;\n                        if (*rax_18 != rdx_6)\n                        {\n                            break;\n                        }\n                        if (rdx_6 == 0)\n                        {\n                            break;\n                        }\n                    } while (rdi_9 != rcx_4);\n                }\n                int32_t rdi_10 = (rdi_9 - rbp_1);\n                int32_t r14_2 = rdi_10;\n                int32_t rbx_2 = (rdi_10 - r13_1);\n                if ((rbx_2 + 0x8000) > 0xffff)\n                {\n                    r14_2 = 0;\n                    rbx_2 = (-r13_1);\n                }\n                if (r15 == 0)\n                {\n                    uint64_t* const rsi_7 = stdout;\n                    if ((rbx_2 + 0x7f) > 0xfe)\n                    {\n                        if (_IO_putc(0x80, rsi_7) == 0xffffffff)\n                        {\n                            sub_401ae0();\n                        }\n                        if (rbx_2 > 0x7fff)\n                        {\n                            __assert_fail(\"c <= SHRT_MAX\", \"frcode.c\", 0x7b, \"put_short\");\n                            /* no return */\n                        }\n                        if (rbx_2 < 0xffff8000)\n                        {\n                            __assert_fail(\"c >= SHRT_MIN\", \"frcode.c\", 0x7c, \"put_short\");\n                            /* no return */\n                        }\n                        if (_IO_putc((rbx_2 >> 8), stdout) == 0xffffffff)\n                        {\n                            goto label_4018c9;\n                        }\n                        if (_IO_putc(rbx_2, stdout) != 0xffffffff)\n                        {\n                            goto label_40185d;\n                        }\n                        goto label_4018c9;\n                    }\n                    if (_IO_putc(rbx_2, rsi_7) != 0xffffffff)\n                    {\n                    label_40185d:\n                        rsi_6 = var_50;\n                    }\n                    else\n                    {\n                    label_4018c9:\n                        sub_401ae0();\n                        rsi_6 = var_50;\n                    }\n                }\n                int32_t rax_27 = fputs(&rsi_6[r14_2], stdout);\n                int32_t rax_29;\n                if (rax_27 != 0xffffffff)\n                {\n                    rax_29 = _IO_putc(0, stdout);\n                }\n                if ((rax_27 == 0xffffffff || (rax_27 != 0xffffffff && rax_29 == 0xffffffff)))\n                {\n                    sub_401ae0();\n                }\n                r15 = 0;\n                r13_1 = r14_2;\n                uint64_t rcx_5 = var_68_2;\n                var_50 = rbp_1;\n                var_68_2 = var_48;\n                rbp_1 = var_50;\n                var_48 = rcx_5;\n            }\n            free(var_50);\n            free(rbp_1);\n            rax_4 = 0;\n            break;\n        }\n        sub_401b10(stderr);\n        rax_4 = 1;\n        break;\n    }\n    return rax_4;\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x401a00",
            "funcEndAddr": "0x401a2a",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_401a2b",
            "funcStartAddr": "0x401a2b",
            "funcEndAddr": "0x401a4a",
            "decompiledFuncCode": "void sub_401a2b()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_401a4a",
            "funcStartAddr": "0x401a4a",
            "funcEndAddr": "0x401a81",
            "decompiledFuncCode": "int64_t sub_401a4a()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_401a81",
            "funcStartAddr": "0x401a81",
            "funcEndAddr": "0x401ad8",
            "decompiledFuncCode": "void sub_401a81()\n{\n    if (data_608248 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_608250;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_608250 = (rax_1 + 1);\n        *(0x607e40 + ((rax_1 + 1) << 3))();\n    }\n    sub_401a2b();\n    data_608248 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_401ad8",
            "funcStartAddr": "0x401ad8",
            "funcEndAddr": "0x401add",
            "decompiledFuncCode": "int64_t j_sub_401a4a()\n{\n    /* tailcall */\n    return sub_401a4a();\n}\n\n"
        },
        {
            "funcName": "sub_401ae0",
            "funcStartAddr": "0x401ae0",
            "funcEndAddr": "0x401b0c",
            "decompiledFuncCode": "int64_t sub_401ae0()\n{\n    /* tailcall */\n    return error(1, *__errno_location(), dcgettext(nullptr, \"write error\", 5));\n}\n\n"
        },
        {
            "funcName": "sub_401b10",
            "funcStartAddr": "0x401b10",
            "funcEndAddr": "0x401b63",
            "decompiledFuncCode": "int64_t sub_401b10(FILE* arg1)\n{\n    fprintf(arg1, dcgettext(nullptr, \"Usage: %s [-0 | --null] [--versi\u2026\", 5), data_608268);\n    /* tailcall */\n    return fputs(dcgettext(nullptr, \"\\nReport bugs to <bug-findutils@\u2026\", 5), arg1);\n}\n\n"
        },
        {
            "funcName": "sub_401b70",
            "funcStartAddr": "0x401b70",
            "funcEndAddr": "0x401bea",
            "decompiledFuncCode": "char* sub_401b70(int64_t arg1)\n{\n    sub_403ed0(stderr);\n    char* rax = dcgettext(nullptr, \"Kevin Dalley\", 5);\n    dcgettext(nullptr, \"James Youngman\", 5);\n    dcgettext(nullptr, \"Eric B. Decker\", 5);\n    sub_403b40(stdout, arg1, \"GNU findutils\", data_6081b0);\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_401bf0",
            "funcStartAddr": "0x401bf0",
            "funcEndAddr": "0x401bf8",
            "decompiledFuncCode": "int64_t sub_401bf0(int64_t arg1)\n{\n    data_608260 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_401c00",
            "funcStartAddr": "0x401c00",
            "funcEndAddr": "0x401c08",
            "decompiledFuncCode": "int64_t sub_401c00(char arg1)\n{\n    data_608258 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_401c10",
            "funcStartAddr": "0x401c10",
            "funcEndAddr": "0x401cae",
            "decompiledFuncCode": "void sub_401c10(void* arg1)\n{\n    int32_t rax = sub_4051c0(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_608258 == 0 || (data_608258 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_608260;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_403500(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_608258 != 0) && *rax_1 == 0x20)) && sub_4051c0(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_6081b8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_401cb0",
            "funcStartAddr": "0x401cb0",
            "funcEndAddr": "0x401d49",
            "decompiledFuncCode": "char* sub_401cb0(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_405b68;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_608268 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_401d50",
            "funcStartAddr": "0x401d50",
            "funcEndAddr": "0x401e42",
            "decompiledFuncCode": "char* sub_401d50(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_405230();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_401e31:\n                void* const rbx_1 = &data_405b6c;\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_401e31;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_401e31;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_401e31;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_401e31;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_401e31;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_401e31;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_401e31;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_405b75;\n            if (cond:2_1)\n            {\n                rbx = &data_405b72;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_401e31;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_401e31;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_401e31;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_401e31;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_401e31;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_405b79;\n            if (cond:1_1)\n            {\n                rbx = &data_405b6e;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_401e50",
            "funcStartAddr": "0x4014f0",
            "funcEndAddr": "0x402e53",
            "decompiledFuncCode": "int64_t sub_401e50(char* arg1, int64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    int64_t r14 = arg2;\n    uint32_t rbp_1 = (arg6 & 2);\n    uint64_t rax;\n    uint32_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t r11 = arg5;\n    bool cond:0 = r11 == 0xa;\n    if (r11 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_ac;\n    uint64_t var_98;\n    char const* const var_70;\n    bool var_5b;\n    int64_t rbx;\n    switch (r11)\n    {\n        case 0:\n        {\n            var_5b = false;\n            rbx = 0;\n            var_ac = 0;\n            var_98 = 0;\n            var_70 = nullptr;\n            break;\n        }\n        case 3:\n        {\n            var_5b = true;\n            rbx = 0;\n            r11 = 2;\n            var_ac = 1;\n            var_98 = 1;\n            var_70 = \"'\";\n            break;\n        }\n        case 6:\n        {\n            var_5b = true;\n            rbx = 0;\n            r11 = 5;\n            var_ac = 1;\n            var_98 = 1;\n            var_70 = &data_405b6c;\n            break;\n        }\n        case 7:\n        {\n            var_5b = false;\n            rbx = 0;\n            var_ac = 1;\n            var_98 = 0;\n            var_70 = nullptr;\n            break;\n        }\n    }\n    if (r11 == 2)\n    {\n        if (rbp_1 != 0)\n        {\n            var_5b = true;\n            rbx = 0;\n            var_ac = 0;\n            var_98 = 1;\n            var_70 = \"'\";\n        }\n        else\n        {\n            var_ac = 0;\n        }\n    }\n    if ((r11 == 1 || (r11 == 4 && rbp_1 != 0)))\n    {\n        var_5b = true;\n        rbx = 0;\n        r11 = 2;\n        var_ac = 0;\n        var_98 = 1;\n        var_70 = \"'\";\n    }\n    if ((r11 == 4 && rbp_1 == 0))\n    {\n        var_ac = 1;\n    }\n    if (((r11 == 2 && rbp_1 == 0) || (r11 == 4 && rbp_1 == 0)))\n    {\n        if (r14 != 0)\n        {\n            *r15 = 0x27;\n        }\n        var_5b = false;\n        rbx = 1;\n        r11 = 2;\n        var_98 = 1;\n        var_70 = \"'\";\n    }\n    if (r11 == 5)\n    {\n        if (rbp_1 != 0)\n        {\n            var_5b = true;\n            rbx = 0;\n            var_ac = 1;\n            var_98 = 1;\n            var_70 = &data_405b6c;\n        }\n        else\n        {\n            if (r14 != 0)\n            {\n                *r15 = 0x22;\n            }\n            var_5b = false;\n            rbx = 1;\n            var_ac = 1;\n            var_98 = 1;\n            var_70 = &data_405b6c;\n        }\n    }\n    if (((r11 == 8 || r11 == 9) || r11 == 0xa))\n    {\n        if ((!cond:0))\n        {\n            arg8 = sub_401d50(&data_405b7d, r11);\n            arg9 = sub_401d50(\"'\", r11);\n        }\n        rbx = 0;\n        if (rbp_1 == 0)\n        {\n            char rax_13 = *arg8;\n            if (rax_13 != 0)\n            {\n                do\n                {\n                    if (r14 > rbx)\n                    {\n                        r15[rbx] = rax_13;\n                    }\n                    rbx = (rbx + 1);\n                    rax_13 = arg8[rbx];\n                } while (rax_13 != 0);\n            }\n        }\n        var_5b = rbp_1 != 0;\n        uint64_t rax_14;\n        rax_14 = strlen(arg9);\n        var_ac = 1;\n        var_98 = rax_14;\n        var_70 = arg9;\n    }\n    uint64_t r11_1 = arg4;\n    int32_t r10_1 = r11;\n    uint64_t r13 = 0;\n    uint32_t r8 = 0;\n    while (true)\n    {\n        rbp_1 = r11_1 != r13;\n        if (r11_1 == -1)\n        {\n            rbp_1 = *(arg3 + r13) != 0;\n        }\n        uint64_t rax_2;\n        int32_t r11_3;\n        uint64_t r10_2;\n        if (rbp_1 == 0)\n        {\n            uint32_t rcx_7 = var_5b;\n            r10_2 = r11_1;\n            r11_3 = r10_1;\n            int32_t rax_23;\n            rax_23 = r10_1 == 2;\n            rdx = rbx == 0;\n            rax_2 = ((rax_23 & rcx_7) & rdx);\n            if (rax_2 == 0)\n            {\n                if ((var_70 != 0 && rcx_7 == 0))\n                {\n                    char const rdx_10 = *var_70;\n                    if (rdx_10 != 0)\n                    {\n                        void* rax_25 = (var_70 - rbx);\n                        do\n                        {\n                            if (r14 > rbx)\n                            {\n                                r15[rbx] = rdx_10;\n                            }\n                            rbx = (rbx + 1);\n                            rdx_10 = *(rax_25 + rbx);\n                        } while (rdx_10 != 0);\n                    }\n                }\n                if (rbx < r14)\n                {\n                    r15[rbx] = 0;\n                }\n                break;\n            }\n        }\n        else\n        {\n            rax_2 = r10_1 != 2;\n            rax_2 = (rax_2 & var_ac);\n            uint64_t r9 = (arg3 + r13);\n            uint64_t var_a8;\n            var_a8 = rax_2;\n            int32_t rcx_1;\n            uint64_t r12_2;\n            if (rax_2 == 0)\n            {\n                r12_2 = *r9;\n                if (r12_2 > 0x7e)\n                {\n                    goto label_40257d;\n                }\n                switch (r12_2)\n                {\n                    case 0:\n                    {\n                        if (var_ac != 0)\n                        {\n                        label_402498:\n                            if (var_5b == 0)\n                            {\n                                var_a8 = 0;\n                            label_4024af:\n                                rdx = r10_1 == 2;\n                                rax_2 = ((r8 ^ 1) & rdx);\n                                int64_t rcx_4;\n                                if (rax_2 == 0)\n                                {\n                                    rcx_4 = rbx;\n                                    if (rbx < r14)\n                                    {\n                                        goto label_4024f5;\n                                    }\n                                    goto label_4024fa;\n                                }\n                                if (rbx < r14)\n                                {\n                                    r15[rbx] = 0x27;\n                                }\n                                if (r14 > (rbx + 1))\n                                {\n                                    r15[(rbx + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx + 2))\n                                {\n                                    r15[(rbx + 2)] = 0x27;\n                                }\n                                rcx_4 = (rbx + 3);\n                                if (r14 <= rcx_4)\n                                {\n                                    rbx = (rbx + 4);\n                                    r13 = (r13 + 1);\n                                    r8 = rax_2;\n                                    r12_2 = 0x30;\n                                    goto label_402377;\n                                }\n                                r8 = rax_2;\n                            label_4024f5:\n                                r15[rcx_4] = 0x5c;\n                            label_4024fa:\n                                rbx = (rcx_4 + 1);\n                                rax_2 = (r13 + 1);\n                                if (r10_1 == 2)\n                                {\n                                    r13 = rax_2;\n                                    r12_2 = 0x30;\n                                label_402377:\n                                    if (var_a8 != 0)\n                                    {\n                                        goto label_4022e3;\n                                    }\n                                    goto label_402087;\n                                }\n                                r12_2 = 0x30;\n                                if (rax_2 < r11_1)\n                                {\n                                    rax_2 = (*(arg3 + rax_2) - 0x30);\n                                    if (rax_2 <= 9)\n                                    {\n                                        if (r14 > rbx)\n                                        {\n                                            r15[rbx] = 0x30;\n                                        }\n                                        if (r14 > (rcx_4 + 2))\n                                        {\n                                            r15[(rcx_4 + 2)] = 0x30;\n                                        }\n                                        rbx = (rcx_4 + 3);\n                                        r12_2 = 0x30;\n                                    }\n                                }\n                            label_40252b:\n                                if (var_ac == 0)\n                                {\n                                    goto label_4022d0;\n                                }\n                                if (rdx != 0)\n                                {\n                                    goto label_4022d0;\n                                }\n                                if (arg7 == 0)\n                                {\n                                    goto label_402554;\n                                }\n                                goto label_402022;\n                            }\n                            rax_2 = r10_1;\n                            r10_2 = r11_1;\n                            r11_3 = rax_2;\n                            rax_2 = rax_2 == 2;\n                        }\n                        else if ((arg6 & 1) != 0)\n                        {\n                            r13 = (r13 + 1);\n                            continue;\n                        }\n                        else\n                        {\n                            if (var_5b != 0)\n                            {\n                                rbp_1 = 0;\n                                if (arg7 != 0)\n                                {\n                                    var_a8 = 0;\n                                    r12_2 = 0;\n                                label_402022:\n                                    if (((*(arg7 + ((r12_2 >> 5) << 2)) >> r12_2) & 1) == 0)\n                                    {\n                                        goto label_402554;\n                                    }\n                                    rax_2 = r10_1 == 2;\n                                    goto label_402031;\n                                }\n                                r12_2 = 0;\n                            label_402565:\n                                r13 = (r13 + 1);\n                                rbp_1 = ((rbp_1 ^ 1) & r8);\n                                goto label_402758;\n                            }\n                            r13 = (r13 + 1);\n                            rbp_1 = r8;\n                            r12_2 = 0;\n                        label_402758:\n                            if (rbp_1 != 0)\n                            {\n                                if (rbx < r14)\n                                {\n                                    r15[rbx] = 0x27;\n                                }\n                                if (r14 > (rbx + 1))\n                                {\n                                    r15[(rbx + 1)] = 0x27;\n                                }\n                                rbx = (rbx + 2);\n                                r8 = 0;\n                                goto label_402087;\n                            }\n                        label_402087:\n                            if (rbx >= r14)\n                            {\n                                goto label_402090;\n                            }\n                            r15[rbx] = r12_2;\n                        label_402090:\n                            rbx = (rbx + 1);\n                            continue;\n                        }\n                        break;\n                    }\n                    case 1:\n                    case 2:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 6:\n                    case 0xe:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x40:\n                    {\n                        goto label_40257d;\n                    }\n                    case 7:\n                    {\n                        r12_2 = 7;\n                        rcx_1 = 0x61;\n                        rdx = r10_1 == 2;\n                    label_4023d0:\n                        if (var_ac == 0)\n                        {\n                            goto label_4022c5;\n                        }\n                        rax_2 = rdx;\n                        r12_2 = rcx_1;\n                    label_402031:\n                        if (var_5b == 0)\n                        {\n                        label_40203c:\n                            r13 = (r13 + 1);\n                            goto label_402046;\n                        }\n                    label_4023fe:\n                        r10_2 = r11_1;\n                        r11_3 = r10_1;\n                        break;\n                    }\n                    case 8:\n                    {\n                        r12_2 = 8;\n                        rcx_1 = 0x62;\n                        rdx = r10_1 == 2;\n                        goto label_4023d0;\n                    }\n                    case 9:\n                    {\n                        r12_2 = 9;\n                        rcx_1 = 0x74;\n                        goto label_40260c;\n                    }\n                    case 0xa:\n                    {\n                        r12_2 = 0xa;\n                        rcx_1 = 0x6e;\n                    label_40260c:\n                        rdx = r10_1 == 2;\n                        rax_2 = (var_5b & rdx);\n                        var_a8 = rax_2;\n                        if (rax_2 == 0)\n                        {\n                            goto label_4023d0;\n                        }\n                        r10_2 = r11_1;\n                        r11_3 = r10_1;\n                        rax_2 = var_a8;\n                        break;\n                    }\n                    case 0xb:\n                    {\n                        r12_2 = 0xb;\n                        rcx_1 = 0x76;\n                        rdx = r10_1 == 2;\n                        goto label_4023d0;\n                    }\n                    case 0xc:\n                    {\n                        r12_2 = 0xc;\n                        rcx_1 = 0x66;\n                        rdx = r10_1 == 2;\n                        goto label_4023d0;\n                    }\n                    case 0xd:\n                    {\n                        r12_2 = 0xd;\n                        rcx_1 = 0x72;\n                        goto label_40260c;\n                    }\n                    case 0x20:\n                    case 0x21:\n                    case 0x22:\n                    case 0x24:\n                    case 0x26:\n                    case 0x28:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x3b:\n                    case 0x3c:\n                    case 0x3d:\n                    case 0x3e:\n                    case 0x5b:\n                    case 0x5e:\n                    case 0x60:\n                    case 0x7c:\n                    {\n                        rdx = r10_1 == 2;\n                    label_4022ab:\n                        rax_2 = (var_5b & rdx);\n                        if (rax_2 == 0)\n                        {\n                            goto label_4022c5;\n                        }\n                    label_402aeb:\n                        r10_2 = r11_1;\n                        r11_3 = r10_1;\n                        break;\n                    }\n                    case 0x23:\n                    case 0x7e:\n                    {\n                        rdx = r10_1 == 2;\n                    label_4022a1:\n                        if (r13 != 0)\n                        {\n                            goto label_4022c5;\n                        }\n                        goto label_4022ab;\n                    }\n                    case 0x25:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x32:\n                    case 0x33:\n                    case 0x34:\n                    case 0x35:\n                    case 0x36:\n                    case 0x37:\n                    case 0x38:\n                    case 0x39:\n                    case 0x3a:\n                    case 0x41:\n                    case 0x42:\n                    case 0x43:\n                    case 0x44:\n                    case 0x45:\n                    case 0x46:\n                    case 0x47:\n                    case 0x48:\n                    case 0x49:\n                    case 0x4a:\n                    case 0x4b:\n                    case 0x4c:\n                    case 0x4d:\n                    case 0x4e:\n                    case 0x4f:\n                    case 0x50:\n                    case 0x51:\n                    case 0x52:\n                    case 0x53:\n                    case 0x54:\n                    case 0x55:\n                    case 0x56:\n                    case 0x57:\n                    case 0x58:\n                    case 0x59:\n                    case 0x5a:\n                    case 0x5d:\n                    case 0x5f:\n                    case 0x61:\n                    case 0x62:\n                    case 0x63:\n                    case 0x64:\n                    case 0x65:\n                    case 0x66:\n                    case 0x67:\n                    case 0x68:\n                    case 0x69:\n                    case 0x6a:\n                    case 0x6b:\n                    case 0x6c:\n                    case 0x6d:\n                    case 0x6e:\n                    case 0x6f:\n                    case 0x70:\n                    case 0x71:\n                    case 0x72:\n                    case 0x73:\n                    case 0x74:\n                    case 0x75:\n                    case 0x76:\n                    case 0x77:\n                    case 0x78:\n                    case 0x79:\n                    case 0x7a:\n                    {\n                    label_4025d4:\n                        rdx = r10_1 == 2;\n                    label_4022c5:\n                        rbp_1 = ((((var_ac ^ 1) | rdx) ^ 1) | var_5b);\n                        if (rbp_1 == 0)\n                        {\n                            goto label_4022d0;\n                        }\n                        goto label_401ff8;\n                    }\n                    case 0x27:\n                    {\n                        goto label_402325;\n                    }\n                    case 0x3f:\n                    {\n                        goto label_4022f5;\n                    }\n                    case 0x5c:\n                    {\n                        if (r10_1 != 2)\n                        {\n                            goto label_4023aa;\n                        }\n                        if (var_5b != 0)\n                        {\n                            goto label_402e2f;\n                        }\n                        r13 = (r13 + 1);\n                        rbp_1 = r8;\n                        r12_2 = 0x5c;\n                        goto label_402758;\n                    }\n                    case 0x7b:\n                    case 0x7d:\n                    {\n                        goto label_402281;\n                    }\n                }\n            }\n            else\n            {\n                int32_t var_90;\n                uint64_t var_88;\n                int32_t var_80;\n                if (var_98 != 0)\n                {\n                    uint64_t r12_1 = (r13 + var_98);\n                    if ((r11_1 == -1 && var_98 > 1))\n                    {\n                        var_88 = r8;\n                        var_90 = r9;\n                        uint64_t rax_4;\n                        rax_4 = strlen(arg3);\n                        r8 = var_88;\n                        r9 = var_90;\n                        r11_1 = rax_4;\n                    }\n                    if (r12_1 > r11_1)\n                    {\n                        goto label_402800;\n                    }\n                    int64_t var_78;\n                    var_78 = r10_1;\n                    var_80 = r11_1;\n                    var_88 = r8;\n                    var_90 = r9;\n                    int32_t rax_5;\n                    rax_5 = memcmp(r9, var_70, var_98);\n                    r9 = var_90;\n                    r8 = var_88;\n                    r11_1 = var_80;\n                    r10_1 = var_78;\n                    if (rax_5 != 0)\n                    {\n                        goto label_402800;\n                    }\n                    if (var_5b != 0)\n                    {\n                    label_402e21:\n                        r10_2 = r11_1;\n                        r11_3 = r10_1;\n                    label_402679:\n                        rbx = sub_401e50(r15, r14, arg3, r10_2, r11_3, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        break;\n                    }\n                    r12_2 = *r9;\n                    if (r12_2 > 0x7e)\n                    {\n                        goto label_40257d;\n                    }\n                    switch (r12_2)\n                    {\n                        case 0:\n                        {\n                            goto label_4024af;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_40257d;\n                        }\n                        case 7:\n                        {\n                            goto label_402420;\n                        }\n                        case 8:\n                        {\n                            goto label_402410;\n                        }\n                        case 9:\n                        {\n                            goto label_402488;\n                        }\n                        case 0xa:\n                        {\n                            goto label_4023e8;\n                        }\n                        case 0xb:\n                        {\n                            goto label_402478;\n                        }\n                        case 0xc:\n                        {\n                            goto label_402468;\n                        }\n                        case 0xd:\n                        {\n                            goto label_402439;\n                        }\n                        case 0x20:\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            goto label_402395;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            goto label_402455;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                            goto label_401ff8;\n                        }\n                        case 0x27:\n                        {\n                            goto label_402325;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_4022f5;\n                        }\n                        case 0x5c:\n                        {\n                            goto label_4023aa;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_402281;\n                        }\n                    }\n                }\n                else\n                {\n                label_402800:\n                    r12_2 = *r9;\n                    if (r12_2 > 0x7e)\n                    {\n                    label_402578:\n                        var_a8 = 0;\n                    label_40257d:\n                        uint64_t rcx_5;\n                        if (rax == 1)\n                        {\n                            var_90 = r8;\n                            r8 = var_90;\n                            rcx_5 = 1;\n                            uint32_t rdx_5;\n                            rdx_5 = (*(*__ctype_b_loc() + (r12_2 << 1)) >> 0xe);\n                            rdx = ((rdx_5 ^ 1) & var_ac);\n                        label_4025c8:\n                            if (rdx == 0)\n                            {\n                                goto label_4025d4;\n                            }\n                            rdx = var_ac;\n                        label_402b1e:\n                            uint64_t rcx_13 = (rcx_5 + r13);\n                            rax_2 = 0;\n                            char rsi_11 = var_a8;\n                            while (true)\n                            {\n                                if (rdx != 0)\n                                {\n                                    rbp_1 = r10_1 == 2;\n                                    rax_2 = rbp_1;\n                                    if (var_5b != 0)\n                                    {\n                                        break;\n                                    }\n                                    uint32_t rax_30;\n                                    rax_30 = ((r8 ^ 1) & rbp_1);\n                                    if (rax_30 != 0)\n                                    {\n                                        if (rbx < r14)\n                                        {\n                                            r15[rbx] = 0x27;\n                                        }\n                                        if (r14 > (rbx + 1))\n                                        {\n                                            r15[(rbx + 1)] = 0x24;\n                                        }\n                                        if (r14 > (rbx + 2))\n                                        {\n                                            r15[(rbx + 2)] = 0x27;\n                                        }\n                                        rbx = (rbx + 3);\n                                        r8 = rax_30;\n                                    }\n                                    if (rbx < r14)\n                                    {\n                                        r15[rbx] = 0x5c;\n                                    }\n                                    if (r14 > (rbx + 1))\n                                    {\n                                        r15[(rbx + 1)] = ((r12_2 >> 6) + 0x30);\n                                    }\n                                    if (r14 > (rbx + 2))\n                                    {\n                                        int32_t rax_34;\n                                        rax_34 = (r12_2 >> 3);\n                                        r15[(rbx + 2)] = ((rax_34 & 7) + 0x30);\n                                    }\n                                    r13 = (r13 + 1);\n                                    rbx = (rbx + 3);\n                                    r12_2 = ((r12_2 & 7) + 0x30);\n                                    if (rcx_13 <= r13)\n                                    {\n                                        break;\n                                    }\n                                    rax_2 = rdx;\n                                }\n                                else\n                                {\n                                    rbp_1 = ((rax_2 ^ 1) & r8);\n                                    if (rsi_11 != 0)\n                                    {\n                                        if (rbx < r14)\n                                        {\n                                            r15[rbx] = 0x5c;\n                                        }\n                                        rbx = (rbx + 1);\n                                    }\n                                    r13 = (r13 + 1);\n                                    if (r13 >= rcx_13)\n                                    {\n                                        break;\n                                    }\n                                    if (rbp_1 == 0)\n                                    {\n                                        rsi_11 = 0;\n                                    }\n                                    else\n                                    {\n                                        if (rbx < r14)\n                                        {\n                                            r15[rbx] = 0x27;\n                                        }\n                                        if (r14 > (rbx + 1))\n                                        {\n                                            r15[(rbx + 1)] = 0x27;\n                                        }\n                                        rbx = (rbx + 2);\n                                        rsi_11 = 0;\n                                        r8 = 0;\n                                    }\n                                }\n                                if (rbx < r14)\n                                {\n                                    r15[rbx] = r12_2;\n                                }\n                                r12_2 = *(arg3 + r13);\n                                rbx = (rbx + 1);\n                            }\n                            if ((rdx == 0 && r13 >= rcx_13))\n                            {\n                                goto label_402758;\n                            }\n                            if ((rdx != 0 && var_5b != 0))\n                            {\n                                goto label_402aeb;\n                            }\n                            goto label_402087;\n                        }\n                        mbstate_t var_40;\n                        var_40.__count = 0;\n                        var_40.__value = 0;\n                        if (r11_1 == -1)\n                        {\n                            var_88 = r8;\n                            var_90 = r9;\n                            r8 = var_88;\n                            r9 = var_90;\n                            r11_1 = strlen(arg3);\n                        }\n                        char var_5a_1 = r8;\n                        uint64_t rbx_1 = 0;\n                        char var_59_1 = r12_2;\n                        var_80 = r15;\n                        var_90 = r11_1;\n                        var_88 = r10_1;\n                        while (true)\n                        {\n                            uint64_t r14_1 = (r13 + rbx_1);\n                            uint64_t r12_3 = (arg3 + r14_1);\n                            wchar_t var_44;\n                            rax_2 = sub_405190(&var_44, r12_3, (var_90 - r14_1), &var_40);\n                            uint64_t r15_1 = rax_2;\n                            if (rax_2 == 0)\n                            {\n                                rbp_1 = (rbp_1 ^ 1);\n                                rcx_5 = rbx_1;\n                                r15 = var_80;\n                                r8 = var_5a_1;\n                                r12_2 = var_59_1;\n                                rdx = (var_ac & rbp_1);\n                                r11_1 = var_90;\n                                r10_1 = var_88;\n                                break;\n                            }\n                            if (rax_2 == -1)\n                            {\n                                rcx_5 = rbx_1;\n                                r8 = var_5a_1;\n                                r12_2 = var_59_1;\n                                r15 = var_80;\n                                r11_1 = var_90;\n                                r10_1 = var_88;\n                                rdx = var_ac;\n                                break;\n                            }\n                            if (rax_2 == -2)\n                            {\n                                r11_1 = var_90;\n                                rax_2 = rbx_1;\n                                rcx_5 = rbx_1;\n                                r8 = var_5a_1;\n                                r12_2 = var_59_1;\n                                r15 = var_80;\n                                r10_1 = var_88;\n                                if ((r14_1 < r11_1 && *r12_3 != 0))\n                                {\n                                    do\n                                    {\n                                        rax_2 = (rax_2 + 1);\n                                        if (r11_1 <= (r13 + rax_2))\n                                        {\n                                            break;\n                                        }\n                                    } while (*(r9 + rax_2) != 0);\n                                    rcx_5 = rax_2;\n                                }\n                                rdx = var_ac;\n                                break;\n                            }\n                            rax_2 = var_88 == 2;\n                            rax_2 = (rax_2 & var_5b);\n                            if ((rax_2 != 0 && r15_1 != 1))\n                            {\n                                char* rdx_13 = ((arg3 + r14_1) + 1);\n                                uint64_t r8_2 = ((arg3 + r15_1) + r14_1);\n                                char rcx_11;\n                                do\n                                {\n                                    rcx_11 = (*rdx_13 - 0x5b);\n                                    if ((rcx_11 <= 0x21 && ((1 << rcx_11) & 0x20000002b) != 0))\n                                    {\n                                        break;\n                                    }\n                                    rdx_13 = &rdx_13[1];\n                                } while (r8_2 != rdx_13);\n                                if ((rcx_11 <= 0x21 && ((1 << rcx_11) & 0x20000002b) != 0))\n                                {\n                                    r15 = var_80;\n                                    r10_2 = var_90;\n                                    r11_3 = var_88;\n                                    break;\n                                }\n                            }\n                            mbstate_t* rdi_6 = &var_40;\n                            if (iswprint(var_44) == 0)\n                            {\n                                rbp_1 = 0;\n                            }\n                            rbx_1 = (rbx_1 + r15_1);\n                            rax_2 = mbsinit(rdi_6);\n                            if (rax_2 != 0)\n                            {\n                                rcx_5 = rbx_1;\n                                r8 = var_5a_1;\n                                r12_2 = var_59_1;\n                                r15 = var_80;\n                                r11_1 = var_90;\n                                r10_1 = var_88;\n                                rdx = ((rbp_1 ^ 1) & var_ac);\n                                break;\n                            }\n                        }\n                        if (rax_2 == 0)\n                        {\n                            if (rcx_5 > 1)\n                            {\n                                goto label_402b1e;\n                            }\n                            goto label_4025c8;\n                        }\n                    }\n                    else\n                    {\n                        switch (r12_2)\n                        {\n                            case 0:\n                            {\n                                goto label_402498;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_402578;\n                            }\n                            case 7:\n                            {\n                            label_402420:\n                                r12_2 = 0x61;\n                                rax_2 = 0;\n                                goto label_4023f0;\n                            }\n                            case 8:\n                            {\n                            label_402410:\n                                r12_2 = 0x62;\n                                rax_2 = 0;\n                                goto label_4023f0;\n                            }\n                            case 9:\n                            {\n                            label_402488:\n                                r12_2 = 0x74;\n                                rax_2 = 0;\n                                goto label_4023f0;\n                            }\n                            case 0xa:\n                            {\n                            label_4023e8:\n                                r12_2 = 0x6e;\n                                rax_2 = 0;\n                            label_4023f0:\n                                if (var_5b != 0)\n                                {\n                                    goto label_4023fe;\n                                }\n                                goto label_40203c;\n                            }\n                            case 0xb:\n                            {\n                            label_402478:\n                                r12_2 = 0x76;\n                                rax_2 = 0;\n                                goto label_4023f0;\n                            }\n                            case 0xc:\n                            {\n                            label_402468:\n                                r12_2 = 0x66;\n                                rax_2 = 0;\n                                goto label_4023f0;\n                            }\n                            case 0xd:\n                            {\n                                var_a8 = 0;\n                            label_402439:\n                                r12_2 = 0xd;\n                                rcx_1 = 0x72;\n                                rdx = r10_1 == 2;\n                                goto label_4023d0;\n                            }\n                            case 0x20:\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_a8 = 0;\n                            label_402395:\n                                rdx = 0;\n                                goto label_4022c5;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                var_a8 = 0;\n                            label_402455:\n                                if (r13 != 0)\n                                {\n                                    goto label_401ff8;\n                                }\n                                rdx = 0;\n                                goto label_4022c5;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                var_a8 = 0;\n                            label_401ff8:\n                                rbp_1 = 0;\n                                if (arg7 != 0)\n                                {\n                                    goto label_402022;\n                                }\n                            label_402554:\n                                rax_2 = r10_1 == 2;\n                                if (var_a8 == 0)\n                                {\n                                    goto label_402565;\n                                }\n                                goto label_402031;\n                            }\n                            case 0x27:\n                            {\n                                var_a8 = 0;\n                            label_402325:\n                                rdx = 0;\n                                r12_2 = 0x27;\n                                if (r10_1 != 2)\n                                {\n                                    goto label_4022c5;\n                                }\n                                if (var_5b != 0)\n                                {\n                                    goto label_402e2f;\n                                }\n                                if (rbx < r14)\n                                {\n                                    r15[rbx] = 0x27;\n                                }\n                                if (r14 > (rbx + 1))\n                                {\n                                    r15[(rbx + 1)] = 0x5c;\n                                }\n                                if (r14 > (rbx + 2))\n                                {\n                                    r15[(rbx + 2)] = 0x27;\n                                }\n                                rbx = (rbx + 3);\n                                r13 = (r13 + 1);\n                                r8 = 0;\n                                r12_2 = 0x27;\n                                goto label_402377;\n                            }\n                            case 0x3f:\n                            {\n                                var_a8 = 0;\n                            label_4022f5:\n                                if (r10_1 != 2)\n                                {\n                                    if (r10_1 != 5)\n                                    {\n                                        r12_2 = 0x3f;\n                                        rdx = r10_1 == 2;\n                                        goto label_4022c5;\n                                    }\n                                    if ((arg6 & 4) == 0)\n                                    {\n                                        rdx = 0;\n                                        r12_2 = 0x3f;\n                                        goto label_4022c5;\n                                    }\n                                    rax_2 = (r13 + 2);\n                                    rdx = 0;\n                                    r12_2 = 0x3f;\n                                    if (rax_2 >= r11_1)\n                                    {\n                                        goto label_4022c5;\n                                    }\n                                    if (*((arg3 + r13) + 1) != 0x3f)\n                                    {\n                                        goto label_4022c5;\n                                    }\n                                    r12_2 = *(arg3 + rax_2);\n                                    if (r12_2 > 0x3e)\n                                    {\n                                    label_402e13:\n                                        r12_2 = 0x3f;\n                                        goto label_4022c5;\n                                    }\n                                    if ((!(TEST_BITQ(0x7000a38200000000, r12_2))))\n                                    {\n                                        goto label_402e13;\n                                    }\n                                    if (var_5b != 0)\n                                    {\n                                        goto label_402e21;\n                                    }\n                                    if (rbx < r14)\n                                    {\n                                        r15[rbx] = 0x3f;\n                                    }\n                                    if (r14 > (rbx + 1))\n                                    {\n                                        r15[(rbx + 1)] = 0x22;\n                                    }\n                                    if (r14 > (rbx + 2))\n                                    {\n                                        r15[(rbx + 2)] = 0x22;\n                                    }\n                                    if (r14 > (rbx + 3))\n                                    {\n                                        r15[(rbx + 3)] = 0x3f;\n                                    }\n                                    rbx = (rbx + 4);\n                                    rdx = 0;\n                                    rbp_1 = 0;\n                                    r13 = rax_2;\n                                    goto label_40252b;\n                                }\n                                if (var_5b == 0)\n                                {\n                                    rbp_1 = 0;\n                                    r12_2 = 0x3f;\n                                label_4022d0:\n                                    r13 = (r13 + 1);\n                                    if (var_a8 == 0)\n                                    {\n                                        rbp_1 = ((rbp_1 ^ 1) & r8);\n                                        goto label_402758;\n                                    }\n                                label_4022e3:\n                                    rax_2 = r10_1 == 2;\n                                label_402046:\n                                    rdx = ((r8 ^ 1) & rax_2);\n                                    if (rdx != 0)\n                                    {\n                                        if (r14 > rbx)\n                                        {\n                                            r15[rbx] = 0x27;\n                                        }\n                                        if (r14 > (rbx + 1))\n                                        {\n                                            r15[(rbx + 1)] = 0x24;\n                                        }\n                                        if (r14 > (rbx + 2))\n                                        {\n                                            r15[(rbx + 2)] = 0x27;\n                                        }\n                                        rbx = (rbx + 3);\n                                        r8 = rdx;\n                                    }\n                                    if (rbx < r14)\n                                    {\n                                        r15[rbx] = 0x5c;\n                                    }\n                                    rbx = (rbx + 1);\n                                    goto label_402087;\n                                }\n                            label_402e2f:\n                                r10_2 = r11_1;\n                                r11_3 = r10_1;\n                                rax_2 = var_5b;\n                                break;\n                            }\n                            case 0x5c:\n                            {\n                                var_a8 = 0;\n                            label_4023aa:\n                                rbp_1 = (var_ac & var_5b);\n                                r12_2 = 0x5c;\n                                rcx_1 = 0x5c;\n                                rax_2 = var_98 != 0;\n                                rdx = (rbp_1 & rax_2);\n                                if (rdx == 0)\n                                {\n                                    goto label_4023d0;\n                                }\n                                r13 = (r13 + 1);\n                                rbp_1 = r8;\n                                goto label_402758;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_a8 = 0;\n                            label_402281:\n                                rax_2 = r11_1 != 1;\n                                if (r11_1 == -1)\n                                {\n                                    rax_2 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r10_1 == 2;\n                                if (rax_2 != 0)\n                                {\n                                    goto label_4022c5;\n                                }\n                                goto label_4022a1;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (var_ac == 0)\n        {\n            goto label_402679;\n        }\n        if (rax_2 != 0)\n        {\n            r11_3 = 4;\n        }\n        goto label_402679;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_402e60",
            "funcStartAddr": "0x4014f5",
            "funcEndAddr": "0x402ffb",
            "decompiledFuncCode": "char* sub_402e60(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_6081f8;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_608210 <= r15)\n    {\n        uint64_t rdx = (r15 + 1);\n        int32_t r12_1 = rdx;\n        uint64_t rsi_1 = (rdx << 4);\n        uint64_t rdx_1;\n        if (rbx == 0x608200)\n        {\n            int64_t rax_9 = sub_403cc0(0, rsi_1);\n            int128_t zmm0 = data_608200;\n            rdx_1 = rdx;\n            rbx = rax_9;\n            data_6081f8 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_403cc0(rbx, rsi_1);\n            rdx_1 = rdx;\n            data_6081f8 = rax_2;\n            rbx = rax_2;\n        }\n        uint64_t rdi_1 = data_608210;\n        memset(((rdi_1 << 4) + rbx), 0, ((rdx_1 - rdi_1) << 4));\n        data_608210 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    int64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_401e50(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        uint64_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x608280)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_403c70(rsi_3);\n        int32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_401e50(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_403000",
            "funcStartAddr": "0x403000",
            "funcEndAddr": "0x403034",
            "decompiledFuncCode": "int64_t sub_403000(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x608380;\n    }\n    int64_t rax_1 = sub_403e30(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_403040",
            "funcStartAddr": "0x403040",
            "funcEndAddr": "0x40304f",
            "decompiledFuncCode": "uint64_t sub_403040(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_608380;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_403050",
            "funcStartAddr": "0x403050",
            "funcEndAddr": "0x40305f",
            "decompiledFuncCode": "void sub_403050(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_608380;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_403060",
            "funcStartAddr": "0x403060",
            "funcEndAddr": "0x403093",
            "decompiledFuncCode": "uint64_t sub_403060(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x608380;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_4030a0",
            "funcStartAddr": "0x4030a0",
            "funcEndAddr": "0x4030b3",
            "decompiledFuncCode": "uint64_t sub_4030a0(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_608380;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4030c0",
            "funcStartAddr": "0x4030c0",
            "funcEndAddr": "0x4030eb",
            "decompiledFuncCode": "void sub_4030c0(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_608380;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x608380;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4030f0",
            "funcStartAddr": "0x4030f0",
            "funcEndAddr": "0x403162",
            "decompiledFuncCode": "int64_t sub_4030f0(char* arg1, int64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_608380;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_401e50(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_403170",
            "funcStartAddr": "0x403170",
            "funcEndAddr": "0x403251",
            "decompiledFuncCode": "char* sub_403170(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_608380;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_401e50(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_403c70((rax_2 + 1));\n    sub_401e50(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_403260",
            "funcStartAddr": "0x403260",
            "funcEndAddr": "0x40326a",
            "decompiledFuncCode": "int64_t sub_403260(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_403170(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_403270",
            "funcStartAddr": "0x403270",
            "funcEndAddr": "0x403305",
            "decompiledFuncCode": "uint64_t sub_403270()\n{\n    uint64_t rax_2 = data_608210;\n    int64_t r12 = data_6081f8;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x608280)\n    {\n        rax_2 = free(rdi_2);\n        *data_608200 = 0x100;\n        *(data_608200 + 8) = 0x608280;\n    }\n    if (r12 != 0x608200)\n    {\n        rax_2 = free(r12);\n        data_6081f8 = 0x608200;\n    }\n    data_608210 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_403310",
            "funcStartAddr": "0x403310",
            "funcEndAddr": "0x403321",
            "decompiledFuncCode": "int64_t sub_403310(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_402e60(arg1, arg2, -1, &data_608380);\n}\n\n"
        },
        {
            "funcName": "sub_403330",
            "funcStartAddr": "0x403330",
            "funcEndAddr": "0x40333a",
            "decompiledFuncCode": "int64_t sub_403330(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_402e60(arg1, arg2, arg3, &data_608380);\n}\n\n"
        },
        {
            "funcName": "sub_403340",
            "funcStartAddr": "0x403340",
            "funcEndAddr": "0x403356",
            "decompiledFuncCode": "int64_t sub_403340(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_402e60(0, arg1, -1, &data_608380);\n}\n\n"
        },
        {
            "funcName": "sub_403360",
            "funcStartAddr": "0x403360",
            "funcEndAddr": "0x403372",
            "decompiledFuncCode": "int64_t sub_403360(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_402e60(0, arg1, arg2, &data_608380);\n}\n\n"
        },
        {
            "funcName": "sub_403380",
            "funcStartAddr": "0x4014fa",
            "funcEndAddr": "0x4033e8",
            "decompiledFuncCode": "char* sub_403380(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_402e60(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_4033f0",
            "funcStartAddr": "0x4014ff",
            "funcEndAddr": "0x403454",
            "decompiledFuncCode": "char* sub_4033f0(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_402e60(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_403460",
            "funcStartAddr": "0x403460",
            "funcEndAddr": "0x40346c",
            "decompiledFuncCode": "int64_t sub_403460(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_403380(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_403470",
            "funcStartAddr": "0x403470",
            "funcEndAddr": "0x40347f",
            "decompiledFuncCode": "int64_t sub_403470(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_4033f0(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_403480",
            "funcStartAddr": "0x403480",
            "funcEndAddr": "0x4034f0",
            "decompiledFuncCode": "char* sub_403480(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_6083b0;\n    int128_t var_48 = data_608380;\n    int128_t var_38 = data_608390;\n    int128_t var_28 = data_6083a0;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_402e60(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_4034f0",
            "funcStartAddr": "0x4034f0",
            "funcEndAddr": "0x4034fd",
            "decompiledFuncCode": "int64_t sub_4034f0(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_403480(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_403500",
            "funcStartAddr": "0x403500",
            "funcEndAddr": "0x403511",
            "decompiledFuncCode": "int64_t sub_403500(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_403480(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_403520",
            "funcStartAddr": "0x403520",
            "funcEndAddr": "0x40352a",
            "decompiledFuncCode": "int64_t sub_403520(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_403480(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_403530",
            "funcStartAddr": "0x401504",
            "funcEndAddr": "0x40359e",
            "decompiledFuncCode": "char* sub_403530(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_402e60(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_4035a0",
            "funcStartAddr": "0x4035a0",
            "funcEndAddr": "0x40360c",
            "decompiledFuncCode": "char* sub_4035a0(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_608380;\n    int128_t var_38 = data_608390;\n    int128_t var_28 = data_6083a0;\n    int64_t var_18 = data_6083b0;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_402e60(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4036d0",
            "funcStartAddr": "0x401509",
            "funcEndAddr": "0x403ab5",
            "decompiledFuncCode": "int64_t sub_4036d0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        fprintf();\n    }\n    else\n    {\n        fprintf();\n    }\n    fprintf(arg1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_4068cb, 5), 0x7df);\n    fputs(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58_2;\n    int64_t var_50_1;\n    int64_t var_48_1;\n    int64_t var_40;\n    int64_t rbx_2;\n    char* rsi_2;\n    int64_t r12_2;\n    int64_t r13_1;\n    int64_t r14_1;\n    int64_t r15_1;\n    if (arg6 > 9)\n    {\n        rsi_2 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n        r14_1 = arg5[7];\n        r13_1 = arg5[6];\n        var_40 = arg5[8];\n        r12_2 = arg5[5];\n        r15_1 = arg5[4];\n        var_48_1 = arg5[3];\n        var_50_1 = arg5[2];\n        rbx_2 = *arg5;\n        var_58_2 = arg5[1];\n    }\n    else\n    {\n        int64_t var_78;\n        int64_t var_70;\n        int64_t var_68;\n        int64_t var_68_2;\n        int64_t var_60;\n        int64_t var_58;\n        int64_t var_58_1;\n        int64_t var_50;\n        int64_t var_48;\n        char* rax_5;\n        char* rax_23;\n        int64_t rcx_11;\n        int64_t rbx_1;\n        int64_t rbx_7;\n        int64_t r8_10;\n        int64_t r9_1;\n        int64_t r9_9;\n        switch (arg6)\n        {\n            case 0:\n            {\n                abort();\n                /* no return */\n            }\n            case 1:\n            {\n                /* tailcall */\n                return fprintf(arg1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n                break;\n            }\n            case 2:\n            {\n                /* tailcall */\n                return fprintf(arg1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n                break;\n            }\n            case 3:\n            {\n                /* tailcall */\n                return fprintf(arg1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n                break;\n            }\n            case 4:\n            {\n                /* tailcall */\n                return fprintf(arg1, dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5), *arg5, arg5[1], arg5[2], arg5[3]);\n                break;\n            }\n            case 5:\n            {\n                int64_t r15_2 = arg5[4];\n                int64_t r14_3 = arg5[3];\n                int64_t r13_4 = arg5[2];\n                int64_t r12_6 = arg5[1];\n                rbx_7 = *arg5;\n                rax_23 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n                r9_9 = r14_3;\n                r8_10 = r13_4;\n                var_68_2 = r15_2;\n                rcx_11 = r12_6;\n                break;\n            }\n            case 6:\n            {\n                int64_t r12_7 = arg5[5];\n                int64_t r15_3 = arg5[4];\n                int64_t r14_4 = arg5[3];\n                int64_t r13_5 = arg5[2];\n                rbx_7 = *arg5;\n                var_58 = arg5[1];\n                rax_23 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n                var_60 = r12_7;\n                r9_9 = r14_4;\n                var_68_2 = r15_3;\n                r8_10 = r13_5;\n                rcx_11 = var_58;\n                break;\n            }\n            case 7:\n            {\n                int64_t r13_6 = arg5[6];\n                int64_t r12_8 = arg5[5];\n                int64_t r15_4 = arg5[4];\n                int64_t r14_5 = arg5[3];\n                var_50 = arg5[2];\n                var_58_1 = arg5[1];\n                rbx_1 = *arg5;\n                rax_5 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n                r9_1 = r14_5;\n                var_68 = r13_6;\n                var_70 = r12_8;\n                var_78 = r15_4;\n                break;\n            }\n            case 8:\n            {\n                int64_t r14 = arg5[7];\n                int64_t r13 = arg5[6];\n                int64_t r12_1 = arg5[5];\n                int64_t r15 = arg5[4];\n                var_48 = arg5[3];\n                rbx_1 = *arg5;\n                var_50 = arg5[2];\n                var_58_1 = arg5[1];\n                rax_5 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n                var_60 = r14;\n                var_68 = r13;\n                var_70 = r12_1;\n                var_78 = r15;\n                r9_1 = var_48;\n                break;\n            }\n            case 9:\n            {\n                rsi_2 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n                r14_1 = arg5[7];\n                r13_1 = arg5[6];\n                var_40 = arg5[8];\n                r12_2 = arg5[5];\n                r15_1 = arg5[4];\n                var_48_1 = arg5[3];\n                var_50_1 = arg5[2];\n                rbx_2 = *arg5;\n                var_58_2 = arg5[1];\n                break;\n            }\n        }\n        if ((arg6 == 5 || arg6 == 6))\n        {\n            fprintf(arg1, rax_23, rbx_7, rcx_11, r8_10, r9_9, var_68_2, var_60, var_58);\n            return var_68_2;\n        }\n        else if ((arg6 == 7 || arg6 == 8))\n        {\n            return fprintf(arg1, rax_5, rbx_1, var_58_1, var_50, r9_1, var_78, var_70, var_68, var_60, var_58_1, var_50, var_48);\n        }\n    }\n    return fprintf(arg1, dcgettext(nullptr, rsi_2, 5), rbx_2, var_58_2, var_50_1, var_48_1, r15_1, r12_2, r13_1, r14_1, var_40);\n}\n\n"
        },
        {
            "funcName": "sub_403ac0",
            "funcStartAddr": "0x403ac0",
            "funcEndAddr": "0x403ae0",
            "decompiledFuncCode": "int64_t sub_403ac0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_4036d0(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_403ae0",
            "funcStartAddr": "0x403ae0",
            "funcEndAddr": "0x403b40",
            "decompiledFuncCode": "int64_t sub_403ae0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_4036d0(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_403b40",
            "funcStartAddr": "0x403b40",
            "funcEndAddr": "0x403bfc",
            "decompiledFuncCode": "int64_t sub_403b40(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_4036d0(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_403c00",
            "funcStartAddr": "0x403c00",
            "funcEndAddr": "0x403c6a",
            "decompiledFuncCode": "int64_t sub_403c00()\n{\n    printf(dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-findutils@gnu.org\");\n    printf(dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU findutils\", \"http://www.gnu.org/software/find\u2026\");\n    /* tailcall */\n    return fputs(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_403c70",
            "funcStartAddr": "0x403c70",
            "funcEndAddr": "0x403c8a",
            "decompiledFuncCode": "int64_t sub_403c70(uint64_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_403e90();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_403cc0",
            "funcStartAddr": "0x403cc0",
            "funcEndAddr": "0x403cf6",
            "decompiledFuncCode": "int64_t sub_403cc0(int64_t arg1, uint64_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_403e90();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_403df0",
            "funcStartAddr": "0x403df0",
            "funcEndAddr": "0x403e07",
            "decompiledFuncCode": "int64_t sub_403df0(uint64_t arg1)\n{\n    /* tailcall */\n    return memset(sub_403c70(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_403e10",
            "funcStartAddr": "0x403e10",
            "funcEndAddr": "0x403e28",
            "decompiledFuncCode": "int64_t sub_403e10(uint64_t arg1, uint64_t arg2)\n{\n    int64_t rax = calloc(arg1, arg2);\n    if (rax == 0)\n    {\n        sub_403e90();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_403e30",
            "funcStartAddr": "0x403e30",
            "funcEndAddr": "0x403e58",
            "decompiledFuncCode": "int64_t sub_403e30(int64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_403c70(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_403e60",
            "funcStartAddr": "0x403e60",
            "funcEndAddr": "0x403e8e",
            "decompiledFuncCode": "int64_t sub_403e60(char* arg1)\n{\n    uint64_t rbx = (strlen(arg1) + 1);\n    /* tailcall */\n    return memcpy(sub_403c70(rbx), arg1, rbx);\n}\n\n"
        },
        {
            "funcName": "sub_403e90",
            "funcStartAddr": "0x403e90",
            "funcEndAddr": "0x403ec1",
            "decompiledFuncCode": "int64_t sub_403e90() __noreturn\n{\n    error(data_6081b8, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_403ed0",
            "funcStartAddr": "0x403ed0",
            "funcEndAddr": "0x403f10",
            "decompiledFuncCode": "int64_t sub_403ed0(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_403f10(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_403f10",
            "funcStartAddr": "0x403f10",
            "funcEndAddr": "0x403f67",
            "decompiledFuncCode": "off64_t sub_403f10(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_403f70",
            "funcStartAddr": "0x403f70",
            "funcEndAddr": "0x40404f",
            "decompiledFuncCode": "uint64_t sub_403f70(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xc];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xd];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xd] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xc] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_404050",
            "funcStartAddr": "0x404050",
            "funcEndAddr": "0x405083",
            "decompiledFuncCode": "uint64_t sub_404050(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    char* var_98 = arg3;\n    int32_t rax = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_40439a;\n    }\n    *(arg7 + 0x10) = 0;\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_5;\n    char* r8;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xd] = rax_1;\n        arg7[0xc] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char* rax_17;\n        char rax_19;\n        if (arg8 == 0)\n        {\n            rax_17 = getenv(\"POSIXLY_CORRECT\");\n            if (rax_17 == 0)\n            {\n                arg7[0xb] = 0;\n                rax_19 = *var_98;\n                if (rax_19 == 0x2b)\n                {\n                    r8 = *(arg7 + 0x20);\n                }\n                if ((rax_19 != 0x2d && rax_19 != 0x2b))\n                {\n                    arg7[0xa] = 1;\n                    r8 = *(arg7 + 0x20);\n                label_404103:\n                    arg7[6] = 1;\n                    rax_5 = *var_98;\n                }\n                if (rax_19 == 0x2d)\n                {\n                    r8 = *(arg7 + 0x20);\n                label_404370:\n                    arg7[0xa] = 2;\n                    var_98 = &var_98[1];\n                    goto label_404103;\n                }\n            }\n            else\n            {\n                r8 = *(arg7 + 0x20);\n                arg7[0xb] = 1;\n                char rax_24 = *var_98;\n                if (rax_24 == 0x2d)\n                {\n                    goto label_404370;\n                }\n                if (rax_24 != 0x2b)\n                {\n                    goto label_4040fa;\n                }\n            }\n        }\n        else\n        {\n            arg7[0xb] = 1;\n            r8 = nullptr;\n            char rax_3 = *var_98;\n            if (rax_3 == 0x2d)\n            {\n                goto label_404370;\n            }\n            if (rax_3 != 0x2b)\n            {\n            label_4040fa:\n                arg7[0xa] = 0;\n                goto label_404103;\n            }\n        }\n        if (((((arg8 == 0 && rax_17 == 0) && rax_19 == 0x2b) || (arg8 == 0 && rax_17 != 0)) || arg8 != 0))\n        {\n            arg7[0xa] = 0;\n            var_98 = &var_98[1];\n            goto label_404103;\n        }\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        r8 = *(arg7 + 0x20);\n        rax_5 = *var_98;\n        if (((rax_5 - 0x2b) & 0xfd) == 0)\n        {\n            rax_5 = var_98[1];\n            var_98 = &var_98[1];\n        }\n    }\n    int32_t rax_6 = 0;\n    if (rax_5 != 0x3a)\n    {\n        rax_6 = rax;\n    }\n    int32_t r13_1;\n    if ((r8 == 0 || (r8 != 0 && *r8 == 0)))\n    {\n        int32_t rax_13 = *arg7;\n        if (arg7[0xd] > rax_13)\n        {\n            arg7[0xd] = rax_13;\n        }\n        if (rax_13 < arg7[0xc])\n        {\n            arg7[0xc] = rax_13;\n        }\n        if (arg7[0xa] == 1)\n        {\n            int32_t rdx_8 = arg7[0xd];\n            if (arg7[0xc] == rdx_8)\n            {\n                if (rax_13 != rdx_8)\n                {\n                    arg7[0xc] = rax_13;\n                    rdx_8 = rax_13;\n                }\n            }\n            else if (rax_13 != rdx_8)\n            {\n                sub_403f70(arg2, arg7);\n                rdx_8 = *arg7;\n            }\n            char* rcx_2;\n            if (rbp_1 > rdx_8)\n            {\n                int64_t rax_20 = rdx_8;\n                do\n                {\n                    rcx_2 = arg2[rax_20];\n                    int32_t rsi_5 = rax_20;\n                    rdx_8 = rax_20;\n                    if ((*rcx_2 == 0x2d && rcx_2[1] != 0))\n                    {\n                        break;\n                    }\n                    rdx_8 = (rsi_5 + 1);\n                    rax_20 = (rax_20 + 1);\n                    *arg7 = rdx_8;\n                } while (rbp_1 > rax_20);\n                if ((*rcx_2 == 0x2d && rcx_2[1] != 0))\n                {\n                    rax_13 = *arg7;\n                }\n            }\n            if ((rbp_1 <= rdx_8 || (rbp_1 > rdx_8 && (!(*rcx_2 == 0x2d && rcx_2[1] != 0)))))\n            {\n                rax_13 = rdx_8;\n            }\n            arg7[0xd] = rdx_8;\n        }\n        bool c_1 = rbp_1 < rax_13;\n        bool z_1 = rbp_1 == rax_13;\n        int64_t rcx;\n        char* rdx_6;\n        int32_t rdx_7;\n        char* rsi_2;\n        if (z_1)\n        {\n            rbp_1 = arg7[0xd];\n            rdx_7 = arg7[0xc];\n        }\n        else\n        {\n            rcx = 3;\n            void* const rdi_2 = &data_406c90;\n            rdx_6 = arg2[rax_13];\n            rsi_2 = rdx_6;\n            while (rcx != 0)\n            {\n                char temp0_1 = *rsi_2;\n                char temp1_1 = *rdi_2;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx = (rcx - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rcx = ((!z_1) && (!c_1));\n            rcx = (rcx - 0);\n            if (rcx == 0)\n            {\n                rdx_7 = arg7[0xc];\n                int32_t rcx_1 = arg7[0xd];\n                int32_t rax_14 = (rax_13 + 1);\n                *arg7 = rax_14;\n                if (rdx_7 == rcx_1)\n                {\n                    arg7[0xc] = rax_14;\n                    rdx_7 = rax_14;\n                }\n                else if (rax_14 != rcx_1)\n                {\n                    sub_403f70(arg2, arg7);\n                    rdx_7 = arg7[0xc];\n                }\n                arg7[0xd] = rbp_1;\n                *arg7 = rbp_1;\n            }\n        }\n        if ((z_1 || ((!z_1) && rcx == 0)))\n        {\n            if (rdx_7 == rbp_1)\n            {\n                goto label_40439a;\n            }\n            *arg7 = rdx_7;\n        label_40439a:\n            r13_1 = -1;\n            goto label_40433a;\n        }\n        if (((!z_1) && rcx != 0))\n        {\n            char rcx_3;\n            if (*rdx_6 == 0x2d)\n            {\n                rcx_3 = rdx_6[1];\n                if (rcx_3 != 0)\n                {\n                    rsi_2 = arg4 != 0;\n                    int64_t rax_21;\n                    rax_21 = rcx_3 == 0x2d;\n                    r8 = ((rdx_6 + (rax_21 & rsi_2)) + 1);\n                    *(arg7 + 0x20) = r8;\n                }\n            }\n            if ((*rdx_6 != 0x2d || (*rdx_6 == 0x2d && rcx_3 == 0)))\n            {\n                if (arg7[0xa] == 0)\n                {\n                    goto label_40439a;\n                }\n                *(arg7 + 0x10) = rdx_6;\n                r13_1 = 1;\n                *arg7 = (rax_13 + 1);\n            label_40433a:\n                return r13_1;\n            }\n        }\n    }\n    int32_t var_60;\n    int32_t var_50;\n    int32_t* rax_45;\n    if (arg4 != 0)\n    {\n        int64_t rax_7 = *arg7;\n        int64_t rdx = rax_7;\n        void* rax_8 = arg2[rax_7];\n        int32_t rsi = *(rax_8 + 1);\n        if (rsi != 0x2d)\n        {\n            if (arg6 == 0)\n            {\n                goto label_404198;\n            }\n            if (*(rax_8 + 2) != 0)\n            {\n                goto label_4045e0;\n            }\n            rdx = rdx;\n            if (strchr(var_98, rsi) != 0)\n            {\n                goto label_404198;\n            }\n            goto label_4045e0;\n        }\n    label_4045e0:\n        char rax_32 = *r8;\n        char* r13_4 = r8;\n        int32_t var_6c_3;\n        int32_t rax_35;\n        if ((rax_32 == 0 || rax_32 == 0x3d))\n        {\n            var_6c_3 = 0;\n            rax_35 = 0;\n        }\n        if ((rax_32 != 0 && rax_32 != 0x3d))\n        {\n            while (true)\n            {\n                r13_4 = &r13_4[1];\n                char rax_33 = *r13_4;\n                if (rax_33 == 0)\n                {\n                    break;\n                }\n                if (rax_33 == 0x3d)\n                {\n                    break;\n                }\n                if ((!(rax_33 != 0 && rax_33 != 0x3d)))\n                {\n                    /* nop */\n                }\n            }\n            rax_35 = (r13_4 - r8);\n            var_6c_3 = rax_35;\n        }\n        int64_t* rbx_7 = arg4;\n        char* r15_3 = *rbx_7;\n        int64_t* var_80_4;\n        int32_t rax_38;\n        int32_t rax_39;\n        char rax_41;\n        int32_t rsi_10;\n        if (r15_3 != 0)\n        {\n            uint64_t rax_36 = rax_35;\n            int64_t** r14_5 = nullptr;\n            char* rsi_8 = r8;\n            int32_t rbp_3 = 0;\n            var_60 = 0xffffffff;\n            var_50 = 0;\n            var_80_4 = nullptr;\n            while (true)\n            {\n                rax_38 = strncmp(r15_3, rsi_8, rax_36);\n                if (rax_38 == 0)\n                {\n                    rax_39 = strlen(r15_3);\n                    if (var_6c_3 == rax_39)\n                    {\n                        break;\n                    }\n                    if (var_80_4 == 0)\n                    {\n                        var_80_4 = rbx_7;\n                        rbx_7 = &rbx_7[4];\n                        r15_3 = *rbx_7;\n                        var_60 = rbp_3;\n                        rbp_3 = (rbp_3 + 1);\n                        if (r15_3 == 0)\n                        {\n                            break;\n                        }\n                    }\n                    else if (var_50 == 0)\n                    {\n                        if (arg6 != 0)\n                        {\n                        label_404681:\n                            int64_t** rax_37;\n                            rax_37 = malloc(0x10);\n                            if (rax_37 != 0)\n                            {\n                                *rax_37 = rbx_7;\n                                rax_37[1] = r14_5;\n                                r14_5 = rax_37;\n                            }\n                            else\n                            {\n                                if (r14_5 != 0)\n                                {\n                                    int64_t** rdi_17 = r14_5;\n                                    do\n                                    {\n                                        r14_5 = r14_5[1];\n                                        free(rdi_17);\n                                        rdi_17 = r14_5;\n                                    } while (r14_5 != 0);\n                                }\n                                var_50 = 1;\n                            }\n                        }\n                        else\n                        {\n                            if (var_80_4[1] != rbx_7[1])\n                            {\n                                goto label_404681;\n                            }\n                            if (var_80_4[2] != rbx_7[2])\n                            {\n                                goto label_404681;\n                            }\n                            if (var_80_4[3] != rbx_7[3])\n                            {\n                                goto label_404681;\n                            }\n                            var_50 = arg6;\n                        }\n                    }\n                }\n                if ((rax_38 != 0 || ((rax_38 == 0 && var_6c_3 != rax_39) && var_80_4 != 0)))\n                {\n                    rbx_7 = &rbx_7[4];\n                    r15_3 = *rbx_7;\n                    rbp_3 = (rbp_3 + 1);\n                    if (r15_3 == 0)\n                    {\n                        break;\n                    }\n                }\n                rsi_8 = *(arg7 + 0x20);\n            }\n            char* r13_6;\n            if ((!(rax_38 == 0 && var_6c_3 == rax_39)))\n            {\n                rax_41 = var_50;\n                r13_6 = r13_4;\n                rsi_10 = r14_5 != 0;\n                rdx = *arg7;\n                if (((rax_41 == 0 && rsi_10 == 0) && var_80_4 != 0))\n                {\n                label_404736:\n                    int32_t rax_42 = (rdx + 1);\n                    *arg7 = rax_42;\n                    int32_t rcx_6 = var_80_4[1];\n                    if (*r13_6 == 0)\n                    {\n                        if (rcx_6 != 1)\n                        {\n                            goto label_404761;\n                        }\n                        if (rax_42 < rbp_1)\n                        {\n                            *arg7 = (rdx + 2);\n                            *(arg7 + 0x10) = arg2[rax_42];\n                            goto label_404761;\n                        }\n                        if (rax_6 != 0)\n                        {\n                            int64_t rbx_35 = *arg2;\n                            fprintf(stderr, dcgettext(nullptr, \"%s: option '--%s' requires an ar\u2026\", 5), rbx_35, *var_80_4);\n                        }\n                        char* rbx_30 = *(arg7 + 0x20);\n                        *(arg7 + 0x20) = &rbx_30[strlen(rbx_30)];\n                        arg7[2] = var_80_4[3];\n                        if (*var_98 != 0x3a)\n                        {\n                            goto label_404b66;\n                        }\n                    label_404de8:\n                        r13_1 = 0x3a;\n                    }\n                    else if (rcx_6 == 0)\n                    {\n                        if (rax_6 != 0)\n                        {\n                            char* rax_55 = arg2[(rax_42 - 1)];\n                            int64_t rbp_6 = *var_80_4;\n                            int64_t rbx_14 = *arg2;\n                            if (rax_55[1] == 0x2d)\n                            {\n                                fprintf(stderr, dcgettext(nullptr, \"%s: option '--%s' doesn't allow \u2026\", 5), rbx_14, rbp_6);\n                            }\n                            else\n                            {\n                                fprintf(stderr, dcgettext(nullptr, \"%s: option '%c%s' doesn't allow \u2026\", 5), rbx_14, *rax_55, rbp_6);\n                            }\n                        }\n                        char* rbx_15 = *(arg7 + 0x20);\n                        r13_1 = 0x3f;\n                        *(arg7 + 0x20) = &rbx_15[strlen(rbx_15)];\n                        arg7[2] = var_80_4[3];\n                    }\n                    else\n                    {\n                        *(arg7 + 0x10) = &r13_6[1];\n                    label_404761:\n                        char* rbx_9 = *(arg7 + 0x20);\n                        *(arg7 + 0x20) = &rbx_9[strlen(rbx_9)];\n                        if (arg5 != 0)\n                        {\n                            *arg5 = var_60;\n                        }\n                        rax_45 = var_80_4[2];\n                        r13_1 = var_80_4[3];\n                        if (rax_45 != 0)\n                        {\n                        label_40479c:\n                            *rax_45 = r13_1;\n                            r13_1 = 0;\n                        }\n                    }\n                }\n                if ((rax_41 != 0 || (rax_41 == 0 && rsi_10 != 0)))\n                {\n                    if (rax_6 == 0)\n                    {\n                    label_404b71:\n                        char* rbx_22 = *(arg7 + 0x20);\n                        var_98 = rdx;\n                        uint64_t rax_71 = strlen(rbx_22);\n                        arg7[2] = 0;\n                        *(arg7 + 0x20) = &rbx_22[rax_71];\n                        *arg7 = (var_98 + 1);\n                        if (r14_5 != 0)\n                        {\n                            int64_t** rdi_23 = r14_5;\n                            int64_t** rbx_24;\n                            do\n                            {\n                                rbx_24 = rdi_23[1];\n                                free(rdi_23);\n                                rdi_23 = rbx_24;\n                            } while (rbx_24 != 0);\n                        }\n                        goto label_404b66;\n                    }\n                    if (rsi_10 != 0)\n                    {\n                        int64_t** var_40_1 = r14_5;\n                        int64_t rbp_7 = arg2[rdx];\n                        int64_t rbx_18 = *arg2;\n                        fprintf(stderr, dcgettext(nullptr, \"%s: option '%s' is ambiguous; po\u2026\", 5), rbx_18, rbp_7);\n                        void var_48;\n                        int64_t** rbx_19 = &var_48;\n                        int64_t* rax_68 = var_80_4;\n                        while (true)\n                        {\n                            fprintf(stderr, \" '--%s'\", *rax_68);\n                            rbx_19 = rbx_19[1];\n                            if (rbx_19 == 0)\n                            {\n                                break;\n                            }\n                            rax_68 = *rbx_19;\n                        }\n                        fputc(0xa, stderr);\n                        goto label_404b43;\n                    }\n                    if (rax_41 == 0)\n                    {\n                        goto label_404b71;\n                    }\n                    int64_t rbp_10 = arg2[rdx];\n                    int64_t rbx_29 = *arg2;\n                    fprintf(stderr, dcgettext(nullptr, \"%s: option '%s' is ambiguous\\n\", 5), rbx_29, rbp_10);\n                label_404b43:\n                    char* rbx_20 = *(arg7 + 0x20);\n                    uint64_t rax_70 = strlen(rbx_20);\n                    *arg7 = (*arg7 + 1);\n                    arg7[2] = 0;\n                    *(arg7 + 0x20) = &rbx_20[rax_70];\n                label_404b66:\n                    r13_1 = 0x3f;\n                }\n            }\n            if ((rax_38 == 0 && var_6c_3 == rax_39))\n            {\n                r13_6 = r13_4;\n                if ((var_50 != 0 || (var_50 == 0 && r14_5 != 0)))\n                {\n                    int64_t** rdi_12 = r14_5;\n                    if (r14_5 != 0)\n                    {\n                        int64_t** r14_6;\n                        do\n                        {\n                            r14_6 = rdi_12[1];\n                            free(rdi_12);\n                            rdi_12 = r14_6;\n                        } while (r14_6 != 0);\n                    }\n                }\n                rdx = *arg7;\n                var_60 = rbp_3;\n                var_80_4 = rbx_7;\n                goto label_404736;\n            }\n        }\n        if ((r15_3 == 0 || ((((r15_3 != 0 && (!(rax_38 == 0 && var_6c_3 == rax_39))) && rax_41 == 0) && rsi_10 == 0) && var_80_4 == 0)))\n        {\n            char* rbx_12;\n            char* rbp_9;\n            if (arg6 != 0)\n            {\n                rbx_12 = arg2[rdx];\n                if (rbx_12[1] != 0x2d)\n                {\n                    char* r8_2 = *(arg7 + 0x20);\n                    r8 = r8_2;\n                    rdx = rdx;\n                    if (strchr(var_98, *r8_2) != 0)\n                    {\n                        goto label_404198;\n                    }\n                    if (rax_6 == 0)\n                    {\n                        goto label_404952;\n                    }\n                    goto label_404916;\n                }\n                if (rax_6 == 0)\n                {\n                    goto label_404952;\n                }\n                rbp_9 = *(arg7 + 0x20);\n            label_404cd9:\n                int64_t rbx_28 = *arg2;\n                fprintf(stderr, dcgettext(nullptr, \"%s: unrecognized option '--%s'\\n\", 5), rbx_28, rbp_9);\n                rdx = *arg7;\n                goto label_404952;\n            }\n            if (rax_6 == 0)\n            {\n                goto label_404952;\n            }\n            rbp_9 = *(arg7 + 0x20);\n            rbx_12 = arg2[rdx];\n            r8 = rbp_9;\n            if (rbx_12[1] == 0x2d)\n            {\n                goto label_404cd9;\n            }\n        label_404916:\n            int32_t rbp_5 = *rbx_12;\n            int64_t rbx_13 = *arg2;\n            fprintf(stderr, dcgettext(nullptr, \"%s: unrecognized option '%c%s'\\n\", 5), rbx_13, rbp_5, r8);\n            rdx = *arg7;\n        label_404952:\n            r13_1 = 0x3f;\n            *(arg7 + 0x20) = 0x406cd4;\n            *arg7 = (rdx + 1);\n            arg7[2] = 0;\n        }\n        goto label_40433a;\n    }\nlabel_404198:\n    void* rbx_6 = &r8[1];\n    *(arg7 + 0x20) = rbx_6;\n    r13_1 = *r8;\n    char r14_1 = r13_1;\n    char* rax_10 = strchr(var_98, r13_1);\n    if (r8[1] == 0)\n    {\n        *arg7 = (*arg7 + 1);\n    }\n    if (((r14_1 - 0x3a) > 1 && rax_10 != 0))\n    {\n        char rdx_1 = rax_10[1];\n        if ((*rax_10 == 0x57 && rdx_1 == 0x3b))\n        {\n            if (arg4 == 0)\n            {\n            label_404e37:\n                *(arg7 + 0x20) = 0;\n                r13_1 = 0x57;\n            }\n            else\n            {\n                int64_t rax_25 = *arg7;\n                if (r8[1] != 0)\n                {\n                    *(arg7 + 0x10) = rbx_6;\n                    *arg7 = (rax_25 + 1);\n                label_4044e8:\n                    *(arg7 + 0x20) = rbx_6;\n                    char r13_2 = *rbx_6;\n                    void* r14_3 = rbx_6;\n                    if (r13_2 != 0)\n                    {\n                        while (r13_2 != 0x3d)\n                        {\n                            r14_3 = (r14_3 + 1);\n                            r13_2 = *r14_3;\n                            if (r13_2 == 0)\n                            {\n                                break;\n                            }\n                        }\n                    }\n                    char* r15_1 = *arg4;\n                    if (r15_1 == 0)\n                    {\n                        goto label_404e37;\n                    }\n                    var_50 = r13_2;\n                    uint64_t rax_28 = (r14_3 - rbx_6);\n                    var_60 = r14_3;\n                    int32_t r13_3 = 0;\n                    uint64_t rsi_6 = rax_28;\n                    char* var_58;\n                    var_58 = rbp_1;\n                    int64_t* rbp_2 = arg4;\n                    char* r12_1 = r15_1;\n                    int64_t* r15_2 = nullptr;\n                    int32_t var_6c_2 = 0;\n                    int64_t* var_78;\n                    var_78 = 0;\n                    int32_t rax_30;\n                    uint64_t rax_31;\n                    do\n                    {\n                        rax_30 = strncmp(r12_1, rbx_6, rax_28);\n                        if (rax_30 == 0)\n                        {\n                            rax_31 = strlen(r12_1);\n                            if (rsi_6 == rax_31)\n                            {\n                                break;\n                            }\n                            if (r15_2 == 0)\n                            {\n                                var_6c_2 = r13_3;\n                                r15_2 = rbp_2;\n                            }\n                            else\n                            {\n                                if (((arg6 != 0 || (arg6 == 0 && r15_2[1] != rbp_2[1])) || ((arg6 == 0 && r15_2[1] == rbp_2[1]) && r15_2[2] != rbp_2[2])))\n                                {\n                                    var_78 = 1;\n                                }\n                                if (((arg6 == 0 && r15_2[1] == rbp_2[1]) && r15_2[2] == rbp_2[2]))\n                                {\n                                    int32_t rax_74 = 1;\n                                    if (r15_2[3] == rbp_2[3])\n                                    {\n                                        rax_74 = var_78;\n                                    }\n                                    var_78 = rax_74;\n                                }\n                            }\n                        }\n                        rbp_2 = &rbp_2[4];\n                        r12_1 = *rbp_2;\n                        r13_3 = (r13_3 + 1);\n                    } while (r12_1 != 0);\n                    int32_t rbp_8;\n                    char r13_9;\n                    int64_t r14_8;\n                    if ((rax_30 == 0 && rsi_6 == rax_31))\n                    {\n                        r14_8 = var_60;\n                        r13_9 = var_50;\n                        rbp_8 = var_58;\n                        var_6c_2 = r13_3;\n                        r15_2 = rbp_2;\n                    label_404c1b:\n                        int32_t rax_75 = r15_2[1];\n                        if (r13_9 == 0)\n                        {\n                            if (rax_75 == 1)\n                            {\n                                int64_t rax_97 = *arg7;\n                                if (rax_97 < rbp_8)\n                                {\n                                    *arg7 = (rax_97 + 1);\n                                    *(arg7 + 0x10) = arg2[rax_97];\n                                    goto label_404c49;\n                                }\n                                if (rax_6 != 0)\n                                {\n                                    int64_t rbx_39 = *arg2;\n                                    fprintf(stderr, dcgettext(nullptr, \"%s: option '-W %s' requires an a\u2026\", 5), rbx_39, *r15_2);\n                                }\n                                int64_t rdx_30 = *(arg7 + 0x20);\n                                int64_t rcx_21 = -1;\n                                int64_t rdi_35 = rdx_30;\n                                while (rcx_21 != 0)\n                                {\n                                    bool cond:9_1 = 0 != *rdi_35;\n                                    rdi_35 = (rdi_35 + 1);\n                                    rcx_21 = (rcx_21 - 1);\n                                    if ((!cond:9_1))\n                                    {\n                                        break;\n                                    }\n                                }\n                                *(arg7 + 0x20) = ((rdx_30 + (!rcx_21)) - 1);\n                                if (*var_98 != 0x3a)\n                                {\n                                    goto label_404b66;\n                                }\n                                goto label_404de8;\n                            }\n                            *(arg7 + 0x10) = 0;\n                        label_404c49:\n                            *(arg7 + 0x20) = (rbx_6 + strlen(rbx_6));\n                            if (arg5 != 0)\n                            {\n                                *arg5 = var_6c_2;\n                            }\n                            rax_45 = r15_2[2];\n                            r13_1 = r15_2[3];\n                            if (rax_45 != 0)\n                            {\n                                goto label_40479c;\n                            }\n                        }\n                        else\n                        {\n                            if (rax_75 != 0)\n                            {\n                                *(arg7 + 0x10) = (r14_8 + 1);\n                                goto label_404c49;\n                            }\n                            if (rax_6 != 0)\n                            {\n                                int64_t rbx_38 = *arg2;\n                                fprintf(stderr, dcgettext(nullptr, \"%s: option '-W %s' doesn't allow\u2026\", 5), rbx_38, *r15_2);\n                                rbx_6 = *(arg7 + 0x20);\n                            }\n                            r13_1 = 0x3f;\n                            *(arg7 + 0x20) = (rbx_6 + strlen(rbx_6));\n                        }\n                    }\n                    else\n                    {\n                        r13_9 = var_50;\n                        r14_8 = var_60;\n                        rbp_8 = var_58;\n                        if (var_78 == 0)\n                        {\n                            if (r15_2 == 0)\n                            {\n                                goto label_404e37;\n                            }\n                            goto label_404c1b;\n                        }\n                        if (rax_6 != 0)\n                        {\n                            int64_t rbp_12 = *arg2;\n                            fprintf(stderr, dcgettext(nullptr, \"%s: option '-W %s' is ambiguous\\n\", 5), rbp_12, rbx_6);\n                            rbx_6 = *(arg7 + 0x20);\n                        }\n                        r13_1 = 0x3f;\n                        uint64_t rax_92 = strlen(rbx_6);\n                        *arg7 = (*arg7 + 1);\n                        *(arg7 + 0x20) = (rbx_6 + rax_92);\n                    }\n                }\n                else\n                {\n                    if (rbp_1 != rax_25)\n                    {\n                        *arg7 = (rax_25 + 1);\n                        rbx_6 = arg2[rax_25];\n                        *(arg7 + 0x10) = rbx_6;\n                        goto label_4044e8;\n                    }\n                    if (rax_6 != 0)\n                    {\n                        int64_t rbx_37 = *arg2;\n                        fprintf(stderr, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbx_37, r13_1);\n                    }\n                    arg7[2] = r13_1;\n                    int64_t r13_12;\n                    r13_12 = *var_98 != 0x3a;\n                    r13_1 = ((r13_12 * 5) + 0x3a);\n                }\n            }\n        }\n        if (((*rax_10 != 0x57 || (*rax_10 == 0x57 && rdx_1 != 0x3b)) && rdx_1 == 0x3a))\n        {\n            char rdx_2 = r8[1];\n            if (rax_10[2] != 0x3a)\n            {\n                int64_t rax_11 = *arg7;\n                if (rdx_2 != 0)\n                {\n                    *(arg7 + 0x10) = rbx_6;\n                    *arg7 = (rax_11 + 1);\n                }\n                else if (rbp_1 != rax_11)\n                {\n                    *arg7 = (rax_11 + 1);\n                    *(arg7 + 0x10) = arg2[rax_11];\n                }\n                else\n                {\n                    if (rax_6 != 0)\n                    {\n                        int64_t rbx_33 = *arg2;\n                        fprintf(stderr, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbx_33, r13_1);\n                    }\n                    arg7[2] = r13_1;\n                    int64_t r13_11;\n                    r13_11 = *var_98 != 0x3a;\n                    r13_1 = ((r13_11 * 5) + 0x3a);\n                }\n            }\n            else if (rdx_2 == 0)\n            {\n                *(arg7 + 0x10) = 0;\n            }\n            else\n            {\n                *(arg7 + 0x10) = rbx_6;\n                *arg7 = (*arg7 + 1);\n            }\n            *(arg7 + 0x20) = 0;\n        }\n    }\n    if (((r14_1 - 0x3a) <= 1 || ((r14_1 - 0x3a) > 1 && rax_10 == 0)))\n    {\n        if (rax_6 == 0)\n        {\n            goto label_4047cc;\n        }\n        int64_t rbx_17 = *arg2;\n        fprintf(stderr, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbx_17, r13_1);\n    label_4047cc:\n        arg7[2] = r13_1;\n        r13_1 = 0x3f;\n    }\n    goto label_40433a;\n}\n\n"
        },
        {
            "funcName": "sub_4050f0",
            "funcStartAddr": "0x4050f0",
            "funcEndAddr": "0x405108",
            "decompiledFuncCode": "uint64_t sub_4050f0(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_405190",
            "funcStartAddr": "0x405190",
            "funcEndAddr": "0x4051b9",
            "decompiledFuncCode": "int64_t sub_405190(wchar_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        arg2 = &data_406cb9[0x1b];\n        arg1 = nullptr;\n    }\n    else if (arg3 == 0)\n    {\n        return -2;\n    }\n    /* tailcall */\n    return mbrtowc(arg1, arg2, arg3, arg4);\n}\n\n"
        },
        {
            "funcName": "sub_4051c0",
            "funcStartAddr": "0x4051c0",
            "funcEndAddr": "0x405225",
            "decompiledFuncCode": "uint64_t sub_4051c0(FILE* arg1)\n{\n    uint64_t rax = __fpending(arg1);\n    int32_t rax_1 = ferror(arg1);\n    uint64_t rax_2 = fclose(arg1);\n    if ((rax_1 != 0 && rax_2 == 0))\n    {\n        *__errno_location() = 0;\n        rax_2 = 0xffffffff;\n    }\n    if (((rax_1 != 0 && rax_2 != 0) || ((rax_1 == 0 && rax_2 != 0) && rax != 0)))\n    {\n        rax_2 = 0xffffffff;\n    }\n    if (((rax_1 == 0 && rax_2 != 0) && rax == 0))\n    {\n        int32_t* rax_3;\n        rax_3 = *__errno_location() != 9;\n        rax_2 = (-rax_3);\n    }\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_405230",
            "funcStartAddr": "0x405230",
            "funcEndAddr": "0x405792",
            "decompiledFuncCode": "char* sub_405230()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_6083f8;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_406cb9[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        uint64_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x74;\n            r12_1 = 0x66;\n            r14_1 = 0x65;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            uint64_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_40532c;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_405376;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_40532c:\n            r15 = &data_406cb9[0x1b];\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_405376:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, \"r\");\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_40542c:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_4055bb;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_405468:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_405468;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_4054a2:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_4054a2;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_406cb9[0x1b];\n                                    free(rdi_26);\n                                    fclose(rax_12);\n                                    goto label_4053b7;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_40567b:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_40567b;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_4056c9:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_4056c9;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_40542c;\n                        }\n                        break;\n                    }\n                label_4055bb:\n                    fclose(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_406cb9[0x1b];\n            }\n        label_4053b7:\n            free(rbp_3);\n        }\n        data_6083f8 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x4057a0",
            "funcEndAddr": "0x4057fd",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x405800",
            "funcEndAddr": "0x405801",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_405810",
            "funcStartAddr": "0x405810",
            "funcEndAddr": "0x405828",
            "decompiledFuncCode": "int64_t sub_405810(void (* arg1)(void*))\n{\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, data_6081a8);\n}\n\n"
        },
        {
            "funcName": "sub_405828",
            "funcStartAddr": "0x405828",
            "funcEndAddr": "0x405848",
            "decompiledFuncCode": "int64_t sub_405828(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_607e30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}