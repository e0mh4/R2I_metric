{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_numfmt.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 149,
    "funcInfo": [
        {
            "funcName": "sub_401710",
            "funcStartAddr": "0x401710",
            "funcEndAddr": "0x40171c",
            "decompiledFuncCode": "int64_t sub_401710()\n{\n    int64_t var_8 = data_610008;\n    /* jump -> data_610010 */\n}\n\n"
        },
        {
            "funcName": "sub_401726",
            "funcStartAddr": "0x401726",
            "funcEndAddr": "0x401730",
            "decompiledFuncCode": "int64_t sub_401726()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401736",
            "funcStartAddr": "0x401736",
            "funcEndAddr": "0x401740",
            "decompiledFuncCode": "int64_t sub_401736()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401746",
            "funcStartAddr": "0x401746",
            "funcEndAddr": "0x401750",
            "decompiledFuncCode": "int64_t sub_401746()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401756",
            "funcStartAddr": "0x401756",
            "funcEndAddr": "0x401760",
            "decompiledFuncCode": "int64_t sub_401756()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401766",
            "funcStartAddr": "0x401766",
            "funcEndAddr": "0x401770",
            "decompiledFuncCode": "int64_t sub_401766()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401776",
            "funcStartAddr": "0x401776",
            "funcEndAddr": "0x401780",
            "decompiledFuncCode": "int64_t sub_401776()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401786",
            "funcStartAddr": "0x401786",
            "funcEndAddr": "0x401790",
            "decompiledFuncCode": "int64_t sub_401786()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401796",
            "funcStartAddr": "0x401796",
            "funcEndAddr": "0x4017a0",
            "decompiledFuncCode": "int64_t sub_401796()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_4017a6",
            "funcStartAddr": "0x4017a6",
            "funcEndAddr": "0x4017b0",
            "decompiledFuncCode": "int64_t sub_4017a6()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_4017b6",
            "funcStartAddr": "0x4017b6",
            "funcEndAddr": "0x4017c0",
            "decompiledFuncCode": "int64_t sub_4017b6()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_4017c6",
            "funcStartAddr": "0x4017c6",
            "funcEndAddr": "0x4017d0",
            "decompiledFuncCode": "int64_t sub_4017c6()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_4017d6",
            "funcStartAddr": "0x4017d6",
            "funcEndAddr": "0x4017e0",
            "decompiledFuncCode": "int64_t sub_4017d6()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_4017e6",
            "funcStartAddr": "0x4017e6",
            "funcEndAddr": "0x4017f0",
            "decompiledFuncCode": "int64_t sub_4017e6()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401806",
            "funcStartAddr": "0x401806",
            "funcEndAddr": "0x401810",
            "decompiledFuncCode": "int64_t sub_401806()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401816",
            "funcStartAddr": "0x401816",
            "funcEndAddr": "0x401820",
            "decompiledFuncCode": "int64_t sub_401816()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401826",
            "funcStartAddr": "0x401826",
            "funcEndAddr": "0x401830",
            "decompiledFuncCode": "int64_t sub_401826()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401846",
            "funcStartAddr": "0x401846",
            "funcEndAddr": "0x401850",
            "decompiledFuncCode": "int64_t sub_401846()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401856",
            "funcStartAddr": "0x401856",
            "funcEndAddr": "0x401860",
            "decompiledFuncCode": "int64_t sub_401856()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401866",
            "funcStartAddr": "0x401866",
            "funcEndAddr": "0x401870",
            "decompiledFuncCode": "int64_t sub_401866()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401876",
            "funcStartAddr": "0x401876",
            "funcEndAddr": "0x401880",
            "decompiledFuncCode": "int64_t sub_401876()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401886",
            "funcStartAddr": "0x401886",
            "funcEndAddr": "0x401890",
            "decompiledFuncCode": "int64_t sub_401886()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401896",
            "funcStartAddr": "0x401896",
            "funcEndAddr": "0x4018a0",
            "decompiledFuncCode": "int64_t sub_401896()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_4018a6",
            "funcStartAddr": "0x4018a6",
            "funcEndAddr": "0x4018b0",
            "decompiledFuncCode": "int64_t sub_4018a6()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_4018b6",
            "funcStartAddr": "0x4018b6",
            "funcEndAddr": "0x4018c0",
            "decompiledFuncCode": "int64_t sub_4018b6()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_4018c6",
            "funcStartAddr": "0x4018c6",
            "funcEndAddr": "0x4018d0",
            "decompiledFuncCode": "int64_t sub_4018c6()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_4018d6",
            "funcStartAddr": "0x4018d6",
            "funcEndAddr": "0x4018e0",
            "decompiledFuncCode": "int64_t sub_4018d6()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_4018e6",
            "funcStartAddr": "0x4018e6",
            "funcEndAddr": "0x4018f0",
            "decompiledFuncCode": "int64_t sub_4018e6()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401906",
            "funcStartAddr": "0x401906",
            "funcEndAddr": "0x401910",
            "decompiledFuncCode": "int64_t sub_401906()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401916",
            "funcStartAddr": "0x401916",
            "funcEndAddr": "0x401920",
            "decompiledFuncCode": "int64_t sub_401916()\n{\n    int64_t var_8 = 0x1f;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401926",
            "funcStartAddr": "0x401926",
            "funcEndAddr": "0x401930",
            "decompiledFuncCode": "int64_t sub_401926()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401946",
            "funcStartAddr": "0x401946",
            "funcEndAddr": "0x401950",
            "decompiledFuncCode": "int64_t sub_401946()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401956",
            "funcStartAddr": "0x401956",
            "funcEndAddr": "0x401960",
            "decompiledFuncCode": "int64_t sub_401956()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401966",
            "funcStartAddr": "0x401966",
            "funcEndAddr": "0x401970",
            "decompiledFuncCode": "int64_t sub_401966()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401976",
            "funcStartAddr": "0x401976",
            "funcEndAddr": "0x401980",
            "decompiledFuncCode": "int64_t sub_401976()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401986",
            "funcStartAddr": "0x401986",
            "funcEndAddr": "0x401990",
            "decompiledFuncCode": "int64_t sub_401986()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401996",
            "funcStartAddr": "0x401996",
            "funcEndAddr": "0x4019a0",
            "decompiledFuncCode": "int64_t sub_401996()\n{\n    int64_t var_8 = 0x27;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_4019a6",
            "funcStartAddr": "0x4019a6",
            "funcEndAddr": "0x4019b0",
            "decompiledFuncCode": "int64_t sub_4019a6()\n{\n    int64_t var_8 = 0x28;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_4019b6",
            "funcStartAddr": "0x4019b6",
            "funcEndAddr": "0x4019c0",
            "decompiledFuncCode": "int64_t sub_4019b6()\n{\n    int64_t var_8 = 0x29;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_4019c6",
            "funcStartAddr": "0x4019c6",
            "funcEndAddr": "0x4019d0",
            "decompiledFuncCode": "int64_t sub_4019c6()\n{\n    int64_t var_8 = 0x2a;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_4019d6",
            "funcStartAddr": "0x4019d6",
            "funcEndAddr": "0x4019e0",
            "decompiledFuncCode": "int64_t sub_4019d6()\n{\n    int64_t var_8 = 0x2b;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_4019e6",
            "funcStartAddr": "0x4019e6",
            "funcEndAddr": "0x4019f0",
            "decompiledFuncCode": "int64_t sub_4019e6()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401a06",
            "funcStartAddr": "0x401a06",
            "funcEndAddr": "0x401a10",
            "decompiledFuncCode": "int64_t sub_401a06()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401a16",
            "funcStartAddr": "0x401a16",
            "funcEndAddr": "0x401a20",
            "decompiledFuncCode": "int64_t sub_401a16()\n{\n    int64_t var_8 = 0x2f;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401a26",
            "funcStartAddr": "0x401a26",
            "funcEndAddr": "0x401a30",
            "decompiledFuncCode": "int64_t sub_401a26()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401a46",
            "funcStartAddr": "0x401a46",
            "funcEndAddr": "0x401a50",
            "decompiledFuncCode": "int64_t sub_401a46()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401a56",
            "funcStartAddr": "0x401a56",
            "funcEndAddr": "0x401a60",
            "decompiledFuncCode": "int64_t sub_401a56()\n{\n    int64_t var_8 = 0x33;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401a66",
            "funcStartAddr": "0x401a66",
            "funcEndAddr": "0x401a70",
            "decompiledFuncCode": "int64_t sub_401a66()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401a76",
            "funcStartAddr": "0x401a76",
            "funcEndAddr": "0x401a80",
            "decompiledFuncCode": "int64_t sub_401a76()\n{\n    int64_t var_8 = 0x35;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401a86",
            "funcStartAddr": "0x401a86",
            "funcEndAddr": "0x401a90",
            "decompiledFuncCode": "int64_t sub_401a86()\n{\n    int64_t var_8 = 0x36;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401a96",
            "funcStartAddr": "0x401a96",
            "funcEndAddr": "0x401aa0",
            "decompiledFuncCode": "int64_t sub_401a96()\n{\n    int64_t var_8 = 0x37;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401aa6",
            "funcStartAddr": "0x401aa6",
            "funcEndAddr": "0x401ab0",
            "decompiledFuncCode": "int64_t sub_401aa6()\n{\n    int64_t var_8 = 0x38;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401ab6",
            "funcStartAddr": "0x401ab6",
            "funcEndAddr": "0x401ac0",
            "decompiledFuncCode": "int64_t sub_401ab6()\n{\n    int64_t var_8 = 0x39;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401ac6",
            "funcStartAddr": "0x401ac6",
            "funcEndAddr": "0x401ad0",
            "decompiledFuncCode": "int64_t sub_401ac6()\n{\n    int64_t var_8 = 0x3a;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401ad6",
            "funcStartAddr": "0x401ad6",
            "funcEndAddr": "0x401ae0",
            "decompiledFuncCode": "int64_t sub_401ad6()\n{\n    int64_t var_8 = 0x3b;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401ae6",
            "funcStartAddr": "0x401ae6",
            "funcEndAddr": "0x401af0",
            "decompiledFuncCode": "int64_t sub_401ae6()\n{\n    int64_t var_8 = 0x3c;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401b06",
            "funcStartAddr": "0x401b06",
            "funcEndAddr": "0x401b10",
            "decompiledFuncCode": "int64_t sub_401b06()\n{\n    int64_t var_8 = 0x3e;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401b16",
            "funcStartAddr": "0x401b16",
            "funcEndAddr": "0x401b20",
            "decompiledFuncCode": "int64_t sub_401b16()\n{\n    int64_t var_8 = 0x3f;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "sub_401b26",
            "funcStartAddr": "0x401b26",
            "funcEndAddr": "0x401b30",
            "decompiledFuncCode": "int64_t sub_401b26()\n{\n    int64_t var_8 = 0x40;\n    /* tailcall */\n    return sub_401710();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x401b60",
            "funcEndAddr": "0x4028d0",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rcx = sub_405970(*argv);\n    int32_t var_58;\n    int32_t var_50;\n    char* rbx = setlocale(6, &data_40dc7c[0x1b], rdx, rcx, r8, r9, var_58, var_50);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    char* rax_1 = nl_langinfo(0x10000);\n    data_610340 = rax_1;\n    if ((rax_1 == 0 || (rax_1 != 0 && *rax_1 == 0)))\n    {\n        data_610340 = &data_40a1bd;\n    }\n    data_61033c = strlen(data_610340);\n    sub_409fa0(sub_405490);\n    while (true)\n    {\n        int32_t rax_3 = getopt_long(argc, argv, &data_40a1bf, &data_40bd80, nullptr);\n        if (rax_3 == 0xffffffff)\n        {\n            if ((data_610370 != 0 && data_610398 != 0))\n            {\n                goto label_402762;\n            }\n            if ((rbx == 0 && data_610348 != 0))\n            {\n                error(0, 0, dcgettext(nullptr, \"failed to set locale\", 5));\n            }\n            if (data_610348 == 0)\n            {\n                goto label_402065;\n            }\n            if ((data_6103b0 | data_6103ac) != 0)\n            {\n                goto label_402065;\n            }\n            rbx = data_610370;\n            char rdx_5;\n            if (data_610398 == 0)\n            {\n                if (data_610380 != 0)\n                {\n                    if (rbx != 0)\n                    {\n                        goto label_402075;\n                    }\n                    goto label_4021af;\n                }\n                if (rbx != 0)\n                {\n                    goto label_402075;\n                }\n                error(0, 0, dcgettext(nullptr, \"no conversion option specified\", 5));\n            label_402065:\n                rbx = data_610370;\n                char* var_40;\n                int64_t r14_1;\n                if (rdx_5 != 0)\n                {\n                    char r15_2 = 0;\n                    int64_t r13_1;\n                    char* rcx_9 = &rbx[r13_1];\n                    while (true)\n                    {\n                        uint64_t rax_50 = strspn(rcx_9, &data_40dc9a);\n                        r13_1 = (r13_1 + rax_50);\n                        rcx_9 = &rbx[r13_1];\n                        char rdx_13 = *rcx_9;\n                        if (rdx_13 == 0x27)\n                        {\n                            data_610398 = 1;\n                            r13_1 = (r13_1 + 1);\n                            rcx_9 = &rbx[r13_1];\n                        }\n                        else if (rdx_13 == 0x30)\n                        {\n                            r13_1 = (r13_1 + 1);\n                            r15_2 = 1;\n                            rcx_9 = &rbx[r13_1];\n                        }\n                        else\n                        {\n                            if (rax_50 == 0)\n                            {\n                                break;\n                            }\n                        }\n                    }\n                    int32_t* rax_51 = __errno_location();\n                    *rax_51 = 0;\n                    int64_t rax_52 = strtol(rcx_9, &var_40, 0xa);\n                    if (*rax_51 == 0x22)\n                    {\n                        goto label_402729;\n                    }\n                    if ((var_40 != rcx_9 && rax_52 != 0))\n                    {\n                        if ((data_610348 != 0 && data_610380 != 0))\n                        {\n                            if ((r15_2 != 0 && rax_52 > 0))\n                            {\n                                goto label_40246a;\n                            }\n                            error(0, 0, dcgettext(nullptr, \"--format padding overriding --pa\u2026\", 5));\n                        }\n                        if (rax_52 < 0)\n                        {\n                            data_610258 = 0;\n                            data_610380 = (-rax_52);\n                        }\n                        else if (r15_2 == 0)\n                        {\n                            data_610380 = rax_52;\n                        }\n                        else\n                        {\n                        label_40246a:\n                            data_610378 = rax_52;\n                        }\n                    }\n                    char* rdx_14 = var_40;\n                    char rdx_15 = *rdx_14;\n                    void* rax_54 = (rdx_14 - rbx);\n                    if (rdx_15 == 0)\n                    {\n                        goto label_4027fd;\n                    }\n                    if (rdx_15 == 0x2e)\n                    {\n                        *rax_51 = 0;\n                        void* r15_3 = ((rbx + rax_54) + 1);\n                        int64_t rax_70 = strtol(r15_3, &var_40, 0xa);\n                        data_610260 = rax_70;\n                        if (*rax_51 == 0x22)\n                        {\n                            goto label_40281c;\n                        }\n                        if (rax_70 < 0)\n                        {\n                            goto label_40281c;\n                        }\n                        int64_t rcx_13 = *r15_3;\n                        if ((*__ctype_b_loc()[rcx_13] & 1) != 0)\n                        {\n                            goto label_40281c;\n                        }\n                        if (rcx_13 == 0x2b)\n                        {\n                            goto label_40281c;\n                        }\n                        rax_54 = (var_40 - rbx);\n                    }\n                    if (*(rbx + rax_54) != 0x66)\n                    {\n                        goto label_4027cd;\n                    }\n                    void* rax_55 = (rax_54 + 1);\n                    char* r13_3 = (rbx + rax_55);\n                    char rdx_16 = *r13_3;\n                    if (rdx_16 != 0)\n                    {\n                        char rsi_15;\n                        do\n                        {\n                            void* rcx_12 = (rax_55 + 1);\n                            rsi_15 = *((rbx + rax_55) + 1);\n                            if (rdx_16 != 0x25)\n                            {\n                                rdx_16 = rsi_15;\n                            }\n                            else\n                            {\n                                if (rsi_15 != 0x25)\n                                {\n                                    break;\n                                }\n                                rcx_12 = (rax_55 + 2);\n                                rdx_16 = *((rbx + rax_55) + 2);\n                            }\n                            rax_55 = rcx_12;\n                        } while (rdx_16 != 0);\n                        if ((rdx_16 == 0x25 && rsi_15 != 0x25))\n                        {\n                            goto label_40279d;\n                        }\n                        if (r14_1 != 0)\n                        {\n                            goto label_4020cf;\n                        }\n                        goto label_4025bc;\n                    }\n                    if (r14_1 != 0)\n                    {\n                    label_4020cf:\n                        bool cond:11_1 = *r13_3 != 0;\n                        data_610368 = sub_407de0(rbx);\n                        if (cond:11_1)\n                        {\n                        label_4025bc:\n                            data_610360 = sub_407d80(r13_3);\n                        }\n                    }\n                    if (data_610338 != 0)\n                    {\n                        int64_t rsi_6 = data_610360;\n                        if (rsi_6 == 0)\n                        {\n                            rsi_6 = 0x40dc97;\n                        }\n                        int64_t rax_31 = sub_407570(2, rsi_6);\n                        int64_t rsi_7 = data_610368;\n                        if (rsi_7 == 0)\n                        {\n                            rsi_7 = 0x40dc97;\n                        }\n                        char const* const r14_2 = \"Left\";\n                        void* const r13_2 = &data_40a1b6;\n                        int64_t rax_32 = sub_407570(1, rsi_7);\n                        int64_t r9_6 = data_610380;\n                        if (data_610258 != 0)\n                        {\n                            r14_2 = \"Right\";\n                        }\n                        if (data_610398 == 0)\n                        {\n                            r13_2 = &data_40a1ba;\n                        }\n                        int64_t rax_33;\n                        int64_t rdx_6;\n                        rax_33 = sub_407570(0, rbx);\n                        __fprintf_chk(stderr, 1, \"format String:\\n  input: %s\\n  g\u2026\", rax_33, r13_2, r9_6, r14_2, rax_32, rax_31, rdx_6, r9_6, rax_31);\n                    }\n                label_4021af:\n                    int64_t rdi_12 = data_610380;\n                    if (rdi_12 >= data_610388)\n                    {\n                        sub_402bd0(rdi_12);\n                    }\n                    int32_t rax_35 = 0;\n                    if (data_610380 == 0)\n                    {\n                        rax_35 = data_610254 == 0x80;\n                    }\n                    bool cond:8 = data_6103a8 == 0;\n                    data_610358 = rax_35;\n                    if ((!cond:8))\n                    {\n                        data_61025c = 0;\n                    }\n                    int32_t rax_36 = data_6102fc;\n                    int32_t rax_43;\n                    int32_t rbx_1;\n                    if (rax_36 >= argc)\n                    {\n                        int64_t rax_37 = data_610350;\n                        char* var_48 = nullptr;\n                        var_40 = nullptr;\n                        data_610350 = (rax_37 - 1);\n                        if (rax_37 != 0)\n                        {\n                            int64_t rax_38;\n                            do\n                            {\n                                if (getdelim(&var_48, &var_40, data_610250, stdin) <= 0)\n                                {\n                                    break;\n                                }\n                                fputs_unlocked(var_48, stdout);\n                                rax_38 = data_610350;\n                                data_610350 = (rax_38 - 1);\n                            } while (rax_38 != 0);\n                        }\n                        rbx_1 = 1;\n                        while (true)\n                        {\n                            ssize_t rax_42 = getdelim(&var_48, &var_40, data_610250, stdin);\n                            if (rax_42 <= 0)\n                            {\n                                break;\n                            }\n                            char* rdi_15 = var_48;\n                            void* rcx_7 = &rdi_15[(rax_42 - 1)];\n                            uint32_t rax_40 = data_610250;\n                            int32_t rdx_10 = *rcx_7;\n                            bool rsi_11 = rdx_10 == rax_40;\n                            if (rdx_10 == rax_40)\n                            {\n                                *rcx_7 = 0;\n                                rdi_15 = var_48;\n                            }\n                            rbx_1 = (rbx_1 & sub_4041a0(rdi_15, rsi_11));\n                        }\n                        if ((*stdin & 0x20) != 0)\n                        {\n                            error(0, *__errno_location(), dcgettext(nullptr, \"error reading input\", 5));\n                        }\n                    }\n                    else\n                    {\n                        if ((data_610348 != 0 && data_610350 != 0))\n                        {\n                            error(0, 0, dcgettext(nullptr, \"--header ignored with command-li\u2026\", 5));\n                            rax_36 = data_6102fc;\n                            if (argc <= rax_36)\n                            {\n                            label_402302:\n                                rax_43 = 0;\n                            label_402312:\n                                return rax_43;\n                            }\n                        }\n                        rbx_1 = 1;\n                        do\n                        {\n                            rbx_1 = (rbx_1 & sub_4041a0(argv[rax_36], 1));\n                            rax_36 = (data_6102fc + 1);\n                            data_6102fc = rax_36;\n                        } while (rax_36 < argc);\n                    }\n                    if (data_610348 != 0)\n                    {\n                        if (rbx_1 != 0)\n                        {\n                            goto label_402302;\n                        }\n                        error(0, 0, dcgettext(nullptr, \"failed to convert some of the in\u2026\", 5));\n                    }\n                    else if (rbx_1 != 0)\n                    {\n                        goto label_402302;\n                    }\n                    if ((data_6103a8 - 2) <= 1)\n                    {\n                        goto label_402302;\n                    }\n                    rax_43 = 2;\n                    goto label_402312;\n                    if (data_6103ac != 0)\n                    {\n                        goto label_402784;\n                    }\n                }\n                rbx = sub_407590(rbx);\n                error(1, 0, dcgettext(nullptr, \"format %s has no %% directive\", 5), rbx);\n            label_402729:\n                rbx = sub_407590(rbx);\n                error(1, 0, dcgettext(nullptr, \"invalid format %s (width overflo\u2026\", 5), rbx);\n            label_402762:\n                error(1, 0, dcgettext(nullptr, \"--grouping cannot be combined wi\u2026\", 5));\n            label_402784:\n                error(1, 0, dcgettext(nullptr, \"grouping cannot be combined with\u2026\", 5));\n            label_40279d:\n                rbx = sub_407590(rbx);\n                error(1, 0, dcgettext(nullptr, \"format %s has too many %% direct\u2026\", 5), rbx);\n            label_4027cd:\n                rbx = sub_407590(rbx);\n                error(1, 0, dcgettext(nullptr, \"invalid format %s, directive mus\u2026\", 5), rbx);\n            label_4027fd:\n                rbx = sub_407590(rbx);\n                error(1, 0, dcgettext(nullptr, \"format %s ends in %%\", 5), rbx);\n            label_40281c:\n                error(1, 0, dcgettext(nullptr, \"invalid precision in format %s\", 5), sub_407590(rbx));\n            label_402075:\n                var_40 = nullptr;\n                r14_1 = 0;\n                int64_t rax_29 = 0;\n                while (true)\n                {\n                    rdx_5 = rbx[rax_29];\n                    int64_t rdx_4;\n                    if (rdx_5 == 0x25)\n                    {\n                        if (rbx[(rax_29 + 1)] != 0x25)\n                        {\n                            break;\n                        }\n                        rdx_4 = 2;\n                    }\n                    else\n                    {\n                        if (rdx_5 == 0)\n                        {\n                            break;\n                        }\n                        rdx_4 = 1;\n                    }\n                    rax_29 = (rax_29 + rdx_4);\n                    r14_1 = (r14_1 + 1);\n                }\n            }\n            else if (rbx != 0)\n            {\n                goto label_402075;\n            }\n            if ((data_610398 != 0 || (((data_610398 == 0 && data_610380 == 0) && rbx == 0) && rdx_5 != 0)))\n            {\n                if (data_610348 == 0)\n                {\n                    goto label_4021af;\n                }\n                if (*nl_langinfo(0x10001) == 0)\n                {\n                    error(0, 0, dcgettext(nullptr, \"grouping has no effect in this l\u2026\", 5));\n                }\n                goto label_4021af;\n            }\n        }\n        else\n        {\n            bool cond:0_1 = rax_3 <= 0x84;\n            bool cond:2_1;\n            bool cond:5_1;\n            if ((!cond:0_1))\n            {\n                if (rax_3 != 0x84)\n                {\n                    cond:2_1 = rax_3 > 0x89;\n                    if ((rax_3 != 0x89 && cond:2_1))\n                    {\n                        cond:5_1 = rax_3 < 0x8b;\n                    }\n                }\n                if ((cond:2_1 && rax_3 == 0x8b))\n                {\n                    int64_t rdi_7 = data_610570;\n                    if (rdi_7 == 0)\n                    {\n                        data_610350 = 1;\n                        continue;\n                    }\n                    else\n                    {\n                        if ((sub_408550(rdi_7, nullptr, 0xa, &data_610350, &data_40dc7c[0x1b]) == 0 && data_610350 != 0))\n                        {\n                            continue;\n                        }\n                        rbx = sub_407590(data_610570);\n                        error(1, 0, dcgettext(nullptr, \"invalid header value %s\", 5), rbx);\n                    }\n                }\n            }\n            if ((rax_3 == 0x84 || (((!cond:0_1) && cond:2_1) && rax_3 == 0x8b)))\n            {\n                data_610278 = *((sub_4053b0(\"--round\", data_610570, &data_40c060, 0x40c030, 4, data_610288) << 2) + 0x40c030);\n                continue;\n            }\n            if ((!cond:0_1))\n            {\n                if ((((rax_3 != 0x84 && rax_3 != 0x89) && cond:2_1) && rax_3 != 0x8b))\n                {\n                    if ((!cond:5_1))\n                    {\n                        if (rax_3 == 0x8c)\n                        {\n                            data_610370 = data_610570;\n                            continue;\n                        }\n                        else if (rax_3 == 0x8d)\n                        {\n                            data_6103a8 = *((sub_4053b0(\"--invalid\", data_610570, &data_40c000, 0x40bfe0, 4, data_610288) << 2) + 0x40bfe0);\n                            continue;\n                        }\n                        goto label_401e78;\n                    }\n                    data_610338 = 1;\n                }\n                if ((rax_3 == 0x89 || (((rax_3 != 0x84 && rax_3 != 0x89) && cond:2_1) && rax_3 != 0x8b)))\n                {\n                    data_610348 = 1;\n                    continue;\n                }\n                if (((rax_3 != 0x84 && rax_3 != 0x89) && (!cond:2_1)))\n                {\n                    bool cond:6_1 = rax_3 < 0x86;\n                    if (rax_3 == 0x86)\n                    {\n                        data_610398 = 1;\n                        continue;\n                    }\n                    else if (cond:6_1)\n                    {\n                        data_6103a0 = data_610570;\n                        continue;\n                    }\n                    else\n                    {\n                        if (rax_3 != 0x87)\n                        {\n                            if (rax_3 != 0x88)\n                            {\n                            label_401e78:\n                                sub_404360(1);\n                                /* no return */\n                            }\n                            if (data_610568 == 0)\n                            {\n                                sub_404b00(data_610570, 1);\n                                continue;\n                            }\n                            goto label_40289a;\n                        }\n                        if (sub_407e00(data_610570, nullptr, 0xa, &data_610380, &data_40dc7c[0x1b]) == 0)\n                        {\n                            int64_t rax_5 = data_610380;\n                            bool cond:9_1 = rax_5 >= 0;\n                            if (rax_5 != 0)\n                            {\n                                if (cond:9_1)\n                                {\n                                    continue;\n                                }\n                                else\n                                {\n                                    data_610258 = 0;\n                                    data_610380 = (-rax_5);\n                                    continue;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if ((rax_3 != 0x84 && cond:0_1))\n            {\n                bool cond:1_1 = rax_3 <= 0x7a;\n                if (rax_3 == 0x7a)\n                {\n                    data_610250 = 0;\n                    continue;\n                }\n                else if ((!cond:1_1))\n                {\n                    bool cond:4_1 = rax_3 <= 0x81;\n                    if (rax_3 == 0x81)\n                    {\n                        data_610270 = sub_4029b0(data_610570);\n                        continue;\n                    }\n                    else if (cond:4_1)\n                    {\n                        if (rax_3 == 0x80)\n                        {\n                            data_6103b0 = *((sub_4053b0(\"--from\", data_610570, &data_40c100, 0x40c0d0, 4, data_610288) << 2) + 0x40c0d0);\n                            continue;\n                        }\n                    }\n                    else if (rax_3 == 0x82)\n                    {\n                        data_6103ac = *((sub_4053b0(\"--to\", data_610570, &data_40c0a0, 0x40c090, 4, data_610288) << 2) + 0x40c090);\n                        continue;\n                    }\n                    else if (rax_3 == 0x83)\n                    {\n                        data_610268 = sub_4029b0(data_610570);\n                        continue;\n                    }\n                }\n                else\n                {\n                    if (rax_3 == 0xffffff7e)\n                    {\n                        sub_404360(0);\n                        /* no return */\n                    }\n                    if (rax_3 == 0x64)\n                    {\n                        int64_t rdx_1 = data_610570;\n                        int32_t rax_15 = *rdx_1;\n                        if ((rax_15 != 0 && *(rdx_1 + 1) != 0))\n                        {\n                            break;\n                        }\n                        data_610254 = rax_15;\n                        continue;\n                    }\n                    else if (rax_3 == 0xffffff7d)\n                    {\n                        sub_407a10(stdout, \"numfmt\", \"GNU coreutils\", data_610280);\n                        exit(0);\n                        /* no return */\n                    }\n                }\n                goto label_401e78;\n            }\n        }\n        error(1, 0, dcgettext(nullptr, \"invalid padding value %s\", 5), sub_407590(data_610570));\n    label_40289a:\n        error(1, 0, dcgettext(nullptr, \"multiple field specifications\", 5));\n        break;\n    }\n    void (* rdx_33)();\n    int64_t rsi_18;\n    int64_t rdi_29;\n    rdx_33 = error(1, 0, dcgettext(nullptr, \"the delimiter must be a single c\u2026\", 5));\n    /* tailcall */\n    return _start(rdi_29, rsi_18, rdx_33);\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x4028d0",
            "funcEndAddr": "0x4028fa",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4028fb",
            "funcStartAddr": "0x4028fb",
            "funcEndAddr": "0x40291a",
            "decompiledFuncCode": "void sub_4028fb()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_40291a",
            "funcStartAddr": "0x40291a",
            "funcEndAddr": "0x402951",
            "decompiledFuncCode": "int64_t sub_40291a()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_402951",
            "funcStartAddr": "0x402951",
            "funcEndAddr": "0x4029a8",
            "decompiledFuncCode": "void sub_402951()\n{\n    if (data_610328 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_610330;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_610330 = (rax_1 + 1);\n        *(0x60fe40 + ((rax_1 + 1) << 3))();\n    }\n    sub_4028fb();\n    data_610328 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_4029a8",
            "funcStartAddr": "0x4029a8",
            "funcEndAddr": "0x4029ad",
            "decompiledFuncCode": "int64_t j_sub_40291a()\n{\n    /* tailcall */\n    return sub_40291a();\n}\n\n"
        },
        {
            "funcName": "sub_4029b0",
            "funcStartAddr": "0x4029b0",
            "funcEndAddr": "0x402af0",
            "decompiledFuncCode": "uint64_t sub_4029b0(char* arg1)\n{\n    char* rbp = arg1;\n    uint64_t rax = strlen(arg1);\n    char* var_28 = nullptr;\n    char const* const r8;\n    char* r9;\n    char* r12_2;\n    if (rax != 0)\n    {\n        void* r12_1 = (rax - 1);\n        if ((rbp[(rax - 1)] - 0x30) > 9)\n        {\n            int64_t rax_6 = sub_407b50((rax + 2));\n            char* r12_3 = (r12_1 + rax_6);\n            var_28 = r12_3;\n            r9 = memcpy(rax_6, rbp, rax);\n            if (((*r12_3 != 0x69 || (*r12_3 == 0x69 && rax == 1)) || ((*r12_3 == 0x69 && rax != 1) && (r12_3[-1] - 0x30) <= 9)))\n            {\n                r8 = \"KMGTPEZY0\";\n                var_28 = &r12_3[2];\n                *(r12_3 + 1) = 0x42;\n                r12_2 = r9;\n            }\n            if (((*r12_3 == 0x69 && rax != 1) && (r12_3[-1] - 0x30) > 9))\n            {\n                *r12_3 = 0;\n                r8 = \"KMGTPEZY\";\n                r12_2 = r9;\n            }\n        }\n    }\n    if ((rax == 0 || (rax != 0 && (rbp[(rax - 1)] - 0x30) <= 9)))\n    {\n        r9 = rbp;\n        r8 = \"KMGTPEZY\";\n        r12_2 = nullptr;\n    }\n    uint64_t var_20;\n    if ((sub_408550(r9, &var_28, 0xa, &var_20, r8) == 0 && *var_28 == 0))\n    {\n        uint64_t rbx_2 = var_20;\n        if (rbx_2 != 0)\n        {\n            free(r12_2);\n            return rbx_2;\n        }\n    }\n    free(r12_2);\n    char* rdx_3;\n    long double* rsi_3;\n    int64_t* rdi_6;\n    rdx_3 = error(1, 0, dcgettext(nullptr, \"invalid unit size: %s\", 5), sub_407590(rbp));\n    /* tailcall */\n    return sub_402af0(rdi_6, rsi_3, rdx_3);\n}\n\n"
        },
        {
            "funcName": "sub_402af0",
            "funcStartAddr": "0x402af0",
            "funcEndAddr": "0x402bc9",
            "decompiledFuncCode": "void sub_402af0(int64_t* arg1, long double* arg2, char* arg3)\n{\n    long double* rbp = arg2;\n    char* rcx = *arg1;\n    int32_t rdx_1;\n    long double x87_r7_1;\n    if (rcx != 0)\n    {\n        rdx_1 = (*rcx - 0x30);\n        if (rdx_1 <= 9)\n        {\n            void* rcx_1 = &rcx[1];\n            int32_t r8_1 = 0;\n            x87_r7_1 = 0;\n            do\n            {\n                long double x87_r6_1 = 0;\n                (x87_r6_1 - x87_r7_1);\n                arg2 = (FCMP_UO(x87_r6_1, x87_r7_1));\n                if (x87_r6_1 != x87_r7_1)\n                {\n                    arg2 = 1;\n                }\n                if ((arg2 != 0 || (arg2 == 0 && rdx_1 != 0)))\n                {\n                    r8_1 = (r8_1 + 1);\n                }\n                if ((r8_1 > 0x12 && r8_1 > 0x1b))\n                {\n                    return;\n                }\n                *arg1 = rcx_1;\n                x87_r7_1 = ((x87_r7_1 * 10f) + rdx_1);\n                if (rcx_1 == 0)\n                {\n                    break;\n                }\n                int32_t rdx_2 = *rcx_1;\n                rcx_1 = (rcx_1 + 1);\n                rdx_1 = (rdx_2 - 0x30);\n            } while (rdx_1 <= 9);\n        }\n    }\n    int32_t rax_2;\n    if ((rcx == 0 || (rcx != 0 && rdx_1 > 9)))\n    {\n        rax_2 = strncmp(rcx, data_610340, data_61033c);\n        if (rax_2 == 0)\n        {\n            x87_r7_1 = 0;\n        }\n    }\n    if ((((rcx == 0 || (rcx != 0 && rdx_1 > 9)) && rax_2 == 0) || (rcx != 0 && rdx_1 <= 9)))\n    {\n        if (*arg3 != 0)\n        {\n            x87_r7_1 = (-x87_r7_1);\n        }\n        *rbp = x87_r7_1;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_402bd0",
            "funcStartAddr": "0x402bd0",
            "funcEndAddr": "0x402bf7",
            "decompiledFuncCode": "int64_t sub_402bd0(int64_t arg1)\n{\n    int64_t rdi = data_610390;\n    data_610388 = (arg1 + 1);\n    int64_t rax = sub_407bb0(rdi, (arg1 + 1));\n    data_610390 = rax;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_402c00",
            "funcStartAddr": "0x402c00",
            "funcEndAddr": "0x4041a0",
            "decompiledFuncCode": "uint64_t sub_402c00(char* arg1, int64_t arg2, uint16_t arg3 @ x87control)\n{\n    int64_t r15;\n    int64_t var_8 = r15;\n    int64_t r14;\n    int64_t var_10 = r14;\n    int64_t r13;\n    int64_t var_18 = r13;\n    int64_t r12;\n    int64_t var_20 = r12;\n    char* r12_1 = arg1;\n    int64_t rbp;\n    int64_t var_28 = rbp;\n    int64_t rbx;\n    int64_t var_30 = rbx;\n    float var_168;\n    int32_t* rsp_1 = &var_168;\n    int64_t rax = data_610560;\n    int64_t rdx_1;\n    if (rax != 0)\n    {\n        while (true)\n        {\n            rdx_1 = *rax;\n            if (rdx_1 == -1)\n            {\n                break;\n            }\n            if ((arg2 >= rdx_1 && arg2 <= *(rax + 8)))\n            {\n                break;\n            }\n            rax = (rax + 0x10);\n        }\n    }\n    int32_t rbx_1;\n    if (((rax == 0 && arg2 != 1) || (rax != 0 && rdx_1 == -1)))\n    {\n        rbx_1 = 1;\n        fputs_unlocked(r12_1, stdout);\n    }\n    if (((rax == 0 && arg2 == 1) || (rax != 0 && rdx_1 != -1)))\n    {\n        int64_t r13_2 = data_6103a0;\n        int512_t zmm0;\n        if (r13_2 != 0)\n        {\n            uint64_t rax_2 = strlen(r12_1);\n            uint64_t rax_3 = strlen(r13_2);\n            if (rax_2 > rax_3)\n            {\n                char* rbx_5 = &r12_1[(rax_2 - rax_3)];\n                char rdx_2 = data_610338;\n                if (strcmp(r13_2, rbx_5) == 0)\n                {\n                    *rbx_5 = 0;\n                    if (rdx_2 != 0)\n                    {\n                        int64_t rax_56;\n                        rax_56 = sub_407590(r13_2);\n                        __fprintf_chk(stderr, 1, \"trimming suffix %s\\n\", rax_56);\n                    }\n                }\n                else if (rdx_2 != 0)\n                {\n                    fwrite(\"no valid suffix found\\n\", 1, 0x16, stderr);\n                }\n            }\n        }\n        uint64_t rbx_6 = *r12_1;\n        int32_t rax_8;\n        char* r13_3;\n        if (rbx_6 == 0)\n        {\n            r13_3 = r12_1;\n            rax_8 = 0;\n        }\n        else\n        {\n            r13_3 = r12_1;\n            uint16_t* rax_6 = *__ctype_b_loc();\n            while ((rax_6[rbx_6] & 1) != 0)\n            {\n                r13_3 = &r13_3[1];\n                rbx_6 = *r13_3;\n                if (rbx_6 == 0)\n                {\n                    break;\n                }\n            }\n            rax_8 = (r12_1 - r13_3);\n        }\n        if (data_610358 != 0)\n        {\n            if ((rax_8 != 0 || (rax_8 == 0 && arg2 > 1)))\n            {\n                uint64_t rax_33 = strlen(r12_1);\n                bool cond:1_1 = rax_33 < data_610388;\n                data_610380 = rax_33;\n                if ((!cond:1_1))\n                {\n                    sub_402bd0(rax_33);\n                }\n            }\n            if ((rax_8 == 0 && arg2 <= 1))\n            {\n                data_610380 = 0;\n            }\n            if (data_610338 != 0)\n            {\n                __fprintf_chk(stderr, 1, \"setting Auto-Padding to %ld char\u2026\", data_610380);\n            }\n        }\n        int32_t var_158_1;\n        void* var_108;\n        long double var_f8;\n        uint64_t rbx_9;\n        if (((data_610358 != 0 && data_610338 != 0) || data_610358 == 0))\n        {\n            int32_t rcx_4 = data_6103b0;\n            var_108 = nullptr;\n            var_168 = 0f;\n            var_158_1 = rcx_4;\n            var_f8 = var_168;\n            rbx_9 = (((rbx_6 - rbx_6) & 0x18) + 0x3e8);\n            if (data_610338 != 0)\n            {\n                int64_t rax_27 = sub_407570(1, data_610340);\n                int64_t rax_28;\n                rax_28 = sub_407570(0, r13_3);\n                __fprintf_chk(stderr, 1, \"simple_strtod_human:\\n  input st\u2026\", rax_28, rax_27, 0x12);\n            }\n        }\n        if ((data_610358 != 0 && data_610338 == 0))\n        {\n            int32_t rax_9 = data_6103b0;\n            var_168 = 0f;\n            var_158_1 = rax_9;\n            var_f8 = var_168;\n            rbx_9 = (((rbx_6 - rbx_6) & 0x18) + 0x3e8);\n        }\n        char rdx_4 = 0;\n        void* rax_11 = r13_3;\n        if (*r13_3 == 0x2d)\n        {\n            rax_11 = &r13_3[1];\n            rdx_4 = 1;\n        }\n        char var_10a = rdx_4;\n        var_108 = rax_11;\n        int32_t rax_12;\n        int80_t st0_1;\n        st0_1 = sub_402af0(&var_108, &var_f8, &var_10a);\n        int16_t top_1 = 0xffff;\n        uint64_t rbp_3 = rax_12;\n        int32_t rax_13;\n        int32_t rax_30;\n        char rdx_12;\n        char const* const rbx_14;\n        void* r14_3;\n        int16_t top_2;\n        if (rax_12 <= 1)\n        {\n            int64_t r15_2 = data_61033c;\n            void* r14_2 = var_108;\n            rax_13 = strncmp(r14_2, data_610340, r15_2);\n            if (rax_13 == 0)\n            {\n                void* r14_5 = (r14_2 + r15_2);\n                var_108 = r14_5;\n                long double var_b8 = var_168;\n                if (*r14_5 == 0x2d)\n                {\n                    r14_5 = (r14_5 + 1);\n                    rax_13 = 1;\n                }\n                char var_109 = rax_13;\n                void* var_100 = r14_5;\n                int80_t st0_2;\n                st0_2 = sub_402af0(&var_100, &var_b8, &var_109);\n                top_1 = 0xfffe;\n                bool cond:3_1 = rax_30 == 1;\n                if (rax_30 > 1)\n                {\n                    rbp_3 = rax_30;\n                }\n                else\n                {\n                    if (cond:3_1)\n                    {\n                        rbp_3 = 1;\n                    }\n                    if (var_109 != 0)\n                    {\n                        goto label_4036e4;\n                    }\n                    void* rdx_17 = var_100;\n                    long double x87_r5_1 = var_b8;\n                    r14_3 = (rdx_17 - var_108);\n                    if (r14_3 != 0)\n                    {\n                        int32_t rax_31 = r14_3;\n                        int32_t rax_32 = (rax_31 - 1);\n                        if (rax_31 == 1)\n                        {\n                            x87_r5_1 = (x87_r5_1 / 10f);\n                        }\n                        else\n                        {\n                            long double x87_r4_1 = 10f;\n                            long double x87_r3_1 = x87_r4_1;\n                            int32_t temp2_1;\n                            do\n                            {\n                                x87_r3_1 = (x87_r3_1 * x87_r4_1);\n                                temp2_1 = rax_32;\n                                rax_32 = (rax_32 - 1);\n                            } while (temp2_1 != 1);\n                            x87_r5_1 = (x87_r3_1 / x87_r4_1);\n                        }\n                    }\n                    long double x87_r4_2 = var_f8;\n                    long double x87_r5_3;\n                    if (var_10a != 0)\n                    {\n                        x87_r5_3 = (x87_r4_2 - x87_r5_1);\n                    }\n                    else\n                    {\n                        x87_r5_3 = (x87_r5_1 + x87_r4_2);\n                    }\n                    var_f8 = x87_r5_3;\n                    top_1 = 0xfffe;\n                    var_108 = rdx_17;\n                }\n            }\n            else\n            {\n                r14_3 = nullptr;\n            }\n            if ((rax_13 != 0 || (rax_13 == 0 && rax_30 <= 1)))\n            {\n                if (data_610338 != 0)\n                {\n                    int64_t var_170_1 = *var_f8[8];\n                    int64_t var_178_1 = var_f8;\n                    __fprintf_chk(stderr, 1, \"  parsed numeric value: %Lf\\n  i\u2026\", r14_3);\n                    rsp_1 = &var_168;\n                }\n                void* r15_3 = var_108;\n                char rdx_7 = *r15_3;\n                if (rdx_7 != 0)\n                {\n                    char rdx_8 = rdx_7;\n                    uint16_t* rsi_4 = *__ctype_b_loc();\n                    void* rax_15 = r15_3;\n                    void* r15_4;\n                    while (true)\n                    {\n                        r15_4 = rax_15;\n                        rax_15 = (rax_15 + 1);\n                        if ((rsi_4[rdx_8] & 1) == 0)\n                        {\n                            break;\n                        }\n                        var_108 = rax_15;\n                        rdx_8 = *(r15_4 + 1);\n                    }\n                    if (strchr(\"KMGTPEZY\", rdx_8) == 0)\n                    {\n                        rbp_3 = 5;\n                        rbx_14 = \"invalid suffix in input: %s\";\n                    }\n                    else if (var_158_1 == 0)\n                    {\n                        rbp_3 = 4;\n                        rbx_14 = \"rejecting suffix in input: %s (c\u2026\";\n                    }\n                    else\n                    {\n                        int32_t r8_1 = 0;\n                        char rdx_10 = (rdx_8 - 0x45);\n                        if (rdx_10 <= 0x15)\n                        {\n                            r8_1 = *((rdx_10 << 2) + 0x40bd20);\n                        }\n                        var_108 = (r15_4 + 1);\n                        if (var_158_1 == 4)\n                        {\n                            if (*(r15_4 + 1) != 0x69)\n                            {\n                                r14_3 = nullptr;\n                                rbp_3 = 6;\n                                rbx_14 = \"missing 'i' suffix in input: %s \u2026\";\n                            }\n                            else\n                            {\n                                var_108 = (r15_4 + 2);\n                            }\n                        }\n                        if (((var_158_1 == 4 && *(r15_4 + 1) == 0x69) || (var_158_1 != 1 && var_158_1 != 4)))\n                        {\n                            int32_t var_158_2 = rbx_9;\n                            top_2 = (top_1 - 1);\n                            /* unimplemented  {fild st0, dword [rsp+0x10]} */;\n                            rdx_12 = data_610338;\n                        }\n                        if (var_158_1 == 1)\n                        {\n                            rdx_12 = data_610338;\n                            if (*(r15_4 + 1) != 0x69)\n                            {\n                                int32_t var_158_3 = rbx_9;\n                                top_2 = (top_1 - 1);\n                                /* unimplemented  {fild st0, dword [rsp+0x10]} */;\n                            }\n                            else\n                            {\n                                var_108 = (r15_4 + 2);\n                                if (rdx_12 != 0)\n                                {\n                                    rbx_9 = 0x400;\n                                    __fprintf_chk(stderr, 1, \"  Auto-scaling, found 'i', switc\u2026\", 0x400);\n                                    rdx_12 = data_610338;\n                                    top_2 = (top_1 - 1);\n                                    /* unimplemented  {fld st0, dword [rel &data_40c134]} */;\n                                }\n                                else\n                                {\n                                    top_2 = (top_1 - 1);\n                                    /* unimplemented  {fld st0, dword [rel &data_40c134]} */;\n                                    rbx_9 = 0x400;\n                                }\n                            }\n                        }\n                        if ((((var_158_1 == 4 && *(r15_4 + 1) == 0x69) || (var_158_1 != 1 && var_158_1 != 4)) || var_158_1 == 1))\n                        {\n                            if (r8_1 == 0)\n                            {\n                                goto label_40411c;\n                            }\n                            /* unimplemented  {fld st0, st0} */;\n                            int32_t rax_19 = (r8_1 - 1);\n                            if (r8_1 == 1)\n                            {\n                                /* unimplemented  {fstp st1, st0} */;\n                                /* unimplemented  {fstp st1, st0} */;\n                                r14_3 = nullptr;\n                                goto label_402eb4;\n                            }\n                            int32_t temp5_1;\n                            do\n                            {\n                                /* unimplemented  {fmul st0, st1} */;\n                                temp5_1 = rax_19;\n                                rax_19 = (rax_19 - 1);\n                            } while (temp5_1 != 1);\n                            /* unimplemented  {fstp st1, st0} */;\n                            /* unimplemented  {fstp st1, st0} */;\n                            r14_3 = nullptr;\n                            goto label_402eb4;\n                        }\n                    }\n                }\n                else\n                {\n                    if (var_158_1 != 4)\n                    {\n                        rdx_12 = data_610338;\n                        /* unimplemented  {fld1 } */;\n                        goto label_402eb4;\n                    }\n                    rbp_3 = 6;\n                    rbx_14 = \"missing 'i' suffix in input: %s \u2026\";\n                }\n            }\n        }\n        if ((((rax_12 <= 1 && rax_13 == 0) && rax_30 > 1) || rax_12 > 1))\n        {\n            switch (rbp_3)\n            {\n                case 2:\n                {\n                    r14_3 = nullptr;\n                    rbx_14 = \"value too large to be converted:\u2026\";\n                    break;\n                }\n                case 4:\n                {\n                    r14_3 = nullptr;\n                    rbx_14 = \"rejecting suffix in input: %s (c\u2026\";\n                    break;\n                }\n                case 5:\n                {\n                    r14_3 = nullptr;\n                    rbx_14 = \"invalid suffix in input: %s\";\n                    break;\n                }\n                default:\n                    r14_3 = nullptr;\n                    rbx_14 = nullptr;\n            }\n            if (rbp_3 == 6)\n            {\n                r14_3 = nullptr;\n                rbx_14 = \"missing 'i' suffix in input: %s \u2026\";\n            }\n            if (rbp_3 == 3)\n            {\n            label_4036e4:\n                r14_3 = nullptr;\n                rbp_3 = 3;\n                rbx_14 = \"invalid number: %s\";\n            }\n        }\n        if (data_6103a8 != 3)\n        {\n            int64_t rax_51;\n            rax_51 = sub_407590(r13_3);\n            error(data_61025c, 0, dcgettext(nullptr, rbx_14, 5), rax_51);\n        }\n        while (true)\n        {\n            int64_t rax_24 = data_610270;\n            int64_t rdx_14 = data_610268;\n            int16_t top_7 = (top_1 - 1);\n            /* unimplemented  {fld st0, tword [rsp+0x70]} */;\n            if ((rax_24 != 1 || (rax_24 == 1 && rdx_14 != 1)))\n            {\n                *(rsp_1 + 0x10) = rax_24;\n                int16_t top_8 = (top_7 - 1);\n                /* unimplemented  {fild st0, qword [rsp+0x10]} */;\n                if (rax_24 < 0)\n                {\n                    /* unimplemented  {fadd st0, dword [rel &data_40c138]} */;\n                }\n                /* unimplemented  {fmulp st1, st0} */;\n                /* unimplemented  {fmulp st1, st0} */;\n                *(rsp_1 + 0x10) = rdx_14;\n                /* unimplemented  {fild st0, qword [rsp+0x10]} */;\n                if (rdx_14 < 0)\n                {\n                    /* unimplemented  {fadd st0, dword [rel &data_40c138]} */;\n                }\n                /* unimplemented  {fdivp st1, st0} */;\n                /* unimplemented  {fdivp st1, st0} */;\n                top_7 = (top_8 + 1);\n            }\n            if (rbp_3 > 1)\n            {\n                /* unimplemented  {fstp st0, st0} */;\n                /* unimplemented  {fstp st0, st0} */;\n            }\n            else\n            {\n                void* rax_38 = data_610260;\n                int16_t top_11 = (top_7 - 1);\n                /* unimplemented  {fld st0, tword [rel &data_40c150]} */;\n                /* unimplemented  {fxch st0, st1} */;\n                /* unimplemented  {fxch st0, st1} */;\n                if (rax_38 != -1)\n                {\n                    r14_3 = rax_38;\n                }\n                bool cond:5_1 = /* bool cond:5_1 = unimplemented  {fcomi st0, st1} f< unimplemented  {fcomi st0, st1} */ < /* bool cond:5_1 = unimplemented  {fcomi st0, st1} f< unimplemented  {fcomi st0, st1} */;\n                /* unimplemented  {fstp st1, st0} */;\n                /* unimplemented  {fstp st1, st0} */;\n                int16_t top_12 = (top_11 + 1);\n                int32_t rax_39;\n                bool cond:6_1;\n                if ((!cond:5_1))\n                {\n                    /* unimplemented  {fld st0, tword [rel &data_40c160]} */;\n                    cond:6_1 = /* cond:6_1 = unimplemented  {fcomip st0, st1} f< unimplemented  {fcomip st0, st1} */ < /* cond:6_1 = unimplemented  {fcomip st0, st1} f< unimplemented  {fcomip st0, st1} */;\n                    /* unimplemented  {fcomip st0, st1} */;\n                    if ((!cond:6_1))\n                    {\n                        /* unimplemented  {fld st0, st0} */;\n                        rax_39 = 0;\n                        int16_t top_15 = (top_12 - 2);\n                        /* unimplemented  {fld st0, dword [rel &data_40c130]} */;\n                        int16_t top_18;\n                        while (true)\n                        {\n                            /* unimplemented  {fldz } */;\n                            /* unimplemented  {fld st0, st2} */;\n                            /* unimplemented  {fchs } */;\n                            /* unimplemented  {fxch st0, st1} */;\n                            /* unimplemented  {fxch st0, st1} */;\n                            bool cond:10_1 = /* bool cond:10_1 = unimplemented  {fcomip st0, st3} f<= unimplemented  {fcomip st0, st3} */ <= /* bool cond:10_1 = unimplemented  {fcomip st0, st3} f<= unimplemented  {fcomip st0, st3} */;\n                            /* unimplemented  {fcomip st0, st3} */;\n                            top_18 = (top_15 - 1);\n                            if (cond:10_1)\n                            {\n                                /* unimplemented  {fcmovbe st0, st2} */;\n                            }\n                            /* unimplemented  {fld st0, st1} */;\n                            /* unimplemented  {fxch st0, st1} */;\n                            /* unimplemented  {fxch st0, st1} */;\n                            bool cond:11_1 = /* bool cond:11_1 = unimplemented  {fcomip st0, st1} f>= unimplemented  {fcomip st0, st1} */ >= /* bool cond:11_1 = unimplemented  {fcomip st0, st1} f>= unimplemented  {fcomip st0, st1} */;\n                            /* unimplemented  {fcomip st0, st1} */;\n                            if ((!cond:11_1))\n                            {\n                                break;\n                            }\n                            /* unimplemented  {fdivp st2, st0} */;\n                            /* unimplemented  {fdivp st2, st0} */;\n                            top_15 = (top_18 + 1);\n                            rax_39 = (rax_39 + 1);\n                        }\n                        /* unimplemented  {fstp st0, st0} */;\n                        /* unimplemented  {fstp st0, st0} */;\n                        /* unimplemented  {fstp st0, st0} */;\n                        /* unimplemented  {fstp st0, st0} */;\n                        /* unimplemented  {fstp st0, st0} */;\n                        /* unimplemented  {fstp st0, st0} */;\n                        top_12 = (top_18 + 3);\n                        rbx_9 = data_6103ac;\n                        if ((rbx_9 != 0 || (rbx_9 == 0 && (rax_39 + r14_3) <= 0x12)))\n                        {\n                            if (rax_39 <= 0x1a)\n                            {\n                                goto label_4032ac;\n                            }\n                            *rsp_1 = /* *rsp_1 = unimplemented  {fstp tword [rsp], st0} */;\n                            /* unimplemented  {fstp tword [rsp], st0} */;\n                            if (data_6103a8 != 3)\n                            {\n                                /* unimplemented  {fld st0, tword [rsp]} */;\n                                *(rsp_1 - 0x10) = /* *(rsp_1 - 0x10) = unimplemented  {fstp tword [rsp], st0} */;\n                                /* unimplemented  {fstp tword [rsp], st0} */;\n                                error(data_61025c, 0, dcgettext(nullptr, \"value too large to be printed: '\u2026\", 5));\n                                *(rsp_1 - 0x10);\n                                *(rsp_1 - 8);\n                            }\n                        }\n                    }\n                }\n                if ((cond:5_1 || ((!cond:5_1) && cond:6_1)))\n                {\n                    rbx_9 = data_6103ac;\n                    if (rbx_9 != 0)\n                    {\n                    label_4032ac:\n                        uint64_t rbp_4 = data_610278;\n                        rsp_1[0x1c] = 0x25;\n                        void* rax_43 = &rsp_1[0x1c];\n                        void* r12_3 = (rsp_1 + 0x71);\n                        int32_t r13_4 = data_610398;\n                        if (r13_4 != 0)\n                        {\n                            *(rsp_1 + 0x71) = 0x27;\n                            r12_3 = (rax_43 + 2);\n                        }\n                        int64_t r9_1 = data_610378;\n                        if (r9_1 != 0)\n                        {\n                            *(rsp_1 + 0x10) = /* *(rsp_1 + 0x10) = unimplemented  {fstp tword [rsp+0x10], st0} */;\n                            /* unimplemented  {fstp tword [rsp+0x10], st0} */;\n                            /* unimplemented  {fld st0, tword [rsp+0x10]} */;\n                            r12_3 = (r12_3 + __snprintf_chk(r12_3, 0x3e, 1, 0x3f, \"0%ld\", r9_1));\n                        }\n                        char rcx_7 = data_610338;\n                        if (rcx_7 != 0)\n                        {\n                            *(rsp_1 + 0x10) = /* *(rsp_1 + 0x10) = unimplemented  {fstp tword [rsp+0x10], st0} */;\n                            /* unimplemented  {fstp tword [rsp+0x10], st0} */;\n                            fwrite(\"double_to_human:\\n\", 1, 0x11, stderr);\n                            rcx_7 = data_610338;\n                            /* unimplemented  {fld st0, tword [rsp+0x10]} */;\n                        }\n                        char rbx_16;\n                        if (rbx_9 == 0)\n                        {\n                            int32_t rsi_13 = r14_3;\n                            int32_t rax_55;\n                            int16_t top_58;\n                            int16_t top_63;\n                            int16_t top_66;\n                            if (r14_3 == 0)\n                            {\n                                uint16_t x87status_37;\n                                int16_t temp0_5;\n                                temp0_5 = __fnstcw_memmem16(arg3);\n                                *(rsp_1 + 0x4e) = temp0_5;\n                                /* unimplemented  {fld st0, tword [rel &data_40c170]} */;\n                                /* unimplemented  {fld st0, st1} */;\n                                /* unimplemented  {fdiv st0, st1} */;\n                                int16_t rax_97;\n                                *rax_97[1] = (**(rsp_1 + 0x4e)[1] | 0xc);\n                                rsp_1[0x13] = rax_97;\n                                uint16_t x87control_26;\n                                uint16_t x87status_38;\n                                x87control_26 = __fldcw_memmem16(rsp_1[0x13]);\n                                *(rsp_1 + 0x10) = /* *(rsp_1 + 0x10) = int.q(unimplemented  {fistp qword [rsp+0x10], st0}) */;\n                                /* unimplemented  {fistp qword [rsp+0x10], st0} */;\n                                uint16_t x87status_39;\n                                arg3 = __fldcw_memmem16(*(rsp_1 + 0x4e));\n                                /* unimplemented  {fild st0, qword [rsp+0x10]} */;\n                                /* unimplemented  {fmulp st1, st0} */;\n                                /* unimplemented  {fmulp st1, st0} */;\n                                top_58 = (top_12 - 2);\n                                /* unimplemented  {fld st0, st1} */;\n                                /* unimplemented  {fsub st0, st1} */;\n                                if (rbp_4 <= 4)\n                                {\n                                    /* unimplemented  {fxch st0, st1} */;\n                                    /* unimplemented  {fxch st0, st1} */;\n                                }\n                                else\n                                {\n                                    /* unimplemented  {fstp st0, st0} */;\n                                    /* unimplemented  {fstp st0, st0} */;\n                                    /* unimplemented  {fstp st0, st0} */;\n                                    /* unimplemented  {fstp st0, st0} */;\n                                    top_66 = (top_58 + 1);\n                                    /* unimplemented  {fldz } */;\n                                label_40372b:\n                                    uint64_t r9_2 = r14_3;\n                                    if (rcx_7 == 0)\n                                    {\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        /* unimplemented  {fxch st0, st1} */;\n                                    }\n                                    else\n                                    {\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        *(rsp_1 + 0x10) = /* *(rsp_1 + 0x10) = unimplemented  {fstp tword [rsp+0x10], st0} */;\n                                        /* unimplemented  {fstp tword [rsp+0x10], st0} */;\n                                        int16_t top_67 = (top_66 + 1);\n                                        uint64_t rcx_16 = r14_3;\n                                        char* rdx_30 = \"  no scaling, returning (grouped\u2026\";\n                                        FILE* rdi_26 = stderr;\n                                        rsp_1[8] = r14_3;\n                                        if (r13_4 == 0)\n                                        {\n                                            rdx_30 = \"  no scaling, returning value: %\u2026\";\n                                        }\n                                        /* unimplemented  {fld st0, st0} */;\n                                        *(rsp_1 - 0x10) = /* *(rsp_1 - 0x10) = unimplemented  {fstp tword [rsp], st0} */;\n                                        /* unimplemented  {fstp tword [rsp], st0} */;\n                                        *rsp_1 = /* *rsp_1 = unimplemented  {fstp tword [rsp+0x10], st0} */;\n                                        /* unimplemented  {fstp tword [rsp+0x10], st0} */;\n                                        __fprintf_chk(rdi_26, 1, rdx_30, rcx_16);\n                                        *(rsp_1 - 0x10);\n                                        *(rsp_1 - 8);\n                                        /* unimplemented  {fld st0, tword [rsp]} */;\n                                        top_66 = (top_67 - 1);\n                                        /* unimplemented  {fld st0, tword [rsp+0x10]} */;\n                                        r9_2 = rsp_1[8];\n                                    }\n                                    *(rsp_1 + 0x10) = /* *(rsp_1 + 0x10) = unimplemented  {fstp tword [rsp+0x10], st0} */;\n                                    /* unimplemented  {fstp tword [rsp+0x10], st0} */;\n                                    rbp_3 = &rsp_1[0x2c];\n                                    *r12_3 = 0x664c2a2e;\n                                    *(r12_3 + 4) = 0;\n                                    /* unimplemented  {fld st0, st0} */;\n                                    *(rsp_1 - 0x10) = /* *(rsp_1 - 0x10) = unimplemented  {fstp tword [rsp], st0} */;\n                                    /* unimplemented  {fstp tword [rsp], st0} */;\n                                    *rsp_1 = /* *rsp_1 = unimplemented  {fstp tword [rsp+0x10], st0} */;\n                                    /* unimplemented  {fstp tword [rsp+0x10], st0} */;\n                                    r12_1 = *(rsp_1 - 0x10);\n                                    r13_3 = *(rsp_1 - 8);\n                                    int16_t top_76 = (top_66 + 1);\n                                    /* unimplemented  {fld st0, tword [rsp]} */;\n                                    if (__snprintf_chk(rbp_3, 0x80, 1, 0x80, &rsp_1[0x1c], r9_2) <= 0x7f)\n                                    {\n                                        /* unimplemented  {fstp st0, st0} */;\n                                        /* unimplemented  {fstp st0, st0} */;\n                                        /* unimplemented  {fld st0, tword [rsp+0x10]} */;\n                                        rbx_16 = data_610338;\n                                    }\n                                    else\n                                    {\n                                        *rsp_1 = /* *rsp_1 = unimplemented  {fstp tword [rsp], st0} */;\n                                        /* unimplemented  {fstp tword [rsp], st0} */;\n                                        /* unimplemented  {fld st0, tword [rsp]} */;\n                                        *(rsp_1 - 8) = rbx_9;\n                                        *(rsp_1 - 0x10) = rbx_9;\n                                        rsp_1 = (rsp_1 - 0x10);\n                                        *rsp_1 = /* *rsp_1 = unimplemented  {fstp tword [rsp], st0} */;\n                                        /* unimplemented  {fstp tword [rsp], st0} */;\n                                        top_2 = (top_76 + 1);\n                                        rdx_12 = error(1, 0, dcgettext(nullptr, \"failed to prepare value '%Lf' fo\u2026\", 5));\n                                    label_40411c:\n                                        /* unimplemented  {fstp st0, st0} */;\n                                        /* unimplemented  {fstp st0, st0} */;\n                                        r14_3 = nullptr;\n                                        /* unimplemented  {fld1 } */;\n                                    label_402eb4:\n                                        if (rdx_12 == 0)\n                                        {\n                                            /* unimplemented  {fld st0, tword [rsp+0x70]} */;\n                                            /* unimplemented  {fmulp st1, st0} */;\n                                            /* unimplemented  {fmulp st1, st0} */;\n                                            *(rsp_1 + 0x70) = /* *(rsp_1 + 0x70) = unimplemented  {fstp tword [rsp+0x70], st0} */;\n                                            /* unimplemented  {fstp tword [rsp+0x70], st0} */;\n                                            top_1 = (top_2 + 1);\n                                        }\n                                        else\n                                        {\n                                            /* unimplemented  {fld st0, st0} */;\n                                            *(rsp_1 - 0x10) = /* *(rsp_1 - 0x10) = unimplemented  {fstp tword [rsp], st0} */;\n                                            /* unimplemented  {fstp tword [rsp], st0} */;\n                                            *(rsp_1 + 0x10) = /* *(rsp_1 + 0x10) = unimplemented  {fstp tword [rsp+0x20], st0} */;\n                                            /* unimplemented  {fstp tword [rsp+0x20], st0} */;\n                                            __fprintf_chk(stderr, 1, \"  suffix power=%d^%d = %Lf\\n\", rbx_9);\n                                            /* unimplemented  {fld st0, tword [rsp+0x80]} */;\n                                            /* unimplemented  {fld st0, tword [rsp+0x20]} */;\n                                            /* unimplemented  {fmulp st1, st0} */;\n                                            /* unimplemented  {fmulp st1, st0} */;\n                                            /* unimplemented  {fld st0, st0} */;\n                                            *(rsp_1 + 0x70) = /* *(rsp_1 + 0x70) = unimplemented  {fstp tword [rsp+0x80], st0} */;\n                                            /* unimplemented  {fstp tword [rsp+0x80], st0} */;\n                                            *(rsp_1 - 8);\n                                            if (data_610338 == 0)\n                                            {\n                                                /* unimplemented  {fstp st0, st0} */;\n                                                /* unimplemented  {fstp st0, st0} */;\n                                                top_1 = (top_2 + 1);\n                                            }\n                                            else\n                                            {\n                                                /* unimplemented  {fld st0, st0} */;\n                                                *(rsp_1 - 0x10) = /* *(rsp_1 - 0x10) = unimplemented  {fstp tword [rsp+0x10], st0} */;\n                                                /* unimplemented  {fstp tword [rsp+0x10], st0} */;\n                                                *(rsp_1 - 0x20) = /* *(rsp_1 - 0x20) = unimplemented  {fstp tword [rsp], st0} */;\n                                                /* unimplemented  {fstp tword [rsp], st0} */;\n                                                top_1 = (top_2 + 1);\n                                                __fprintf_chk(stderr, 1, \"  returning value: %Lf (%LG)\\n\");\n                                            }\n                                        }\n                                        char* rsi_6 = *(rsp_1 + 0x60);\n                                        if ((rsi_6 != 0 && *rsi_6 != 0))\n                                        {\n                                            rbp_3 = 5;\n                                            if (data_6103a8 == 3)\n                                            {\n                                                continue;\n                                            }\n                                            else\n                                            {\n                                                int64_t rax_21;\n                                                rax_21 = sub_407570(0, r13_3);\n                                                error(data_61025c, 0, dcgettext(nullptr, \"invalid suffix in input %s: %s\", 5), rax_21, sub_407570(1, rsi_6));\n                                                continue;\n                                            }\n                                        }\n                                        if (rbp_3 != 1)\n                                        {\n                                            continue;\n                                        }\n                                        else if (data_610348 == 0)\n                                        {\n                                            continue;\n                                        }\n                                        else\n                                        {\n                                            int64_t rax_34;\n                                            rax_34 = sub_407590(r13_3);\n                                            error(0, 0, dcgettext(nullptr, \"large input value %s: possible p\u2026\", 5), rax_34);\n                                            continue;\n                                        }\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                int32_t rax_54 = r14_3;\n                                rax_55 = (rax_54 - 1);\n                                if (rax_54 == 1)\n                                {\n                                    uint16_t x87status_44;\n                                    int16_t temp0_6;\n                                    temp0_6 = __fnstcw_memmem16(arg3);\n                                    *(rsp_1 + 0x4e) = temp0_6;\n                                    /* unimplemented  {fld st0, tword [rel &data_40c170]} */;\n                                    /* unimplemented  {fld st0, st1} */;\n                                    /* unimplemented  {fmul st0, dword [rel &data_40c130]} */;\n                                    int16_t rax_102;\n                                    *rax_102[1] = (**(rsp_1 + 0x4e)[1] | 0xc);\n                                    rsp_1[0x13] = rax_102;\n                                    /* unimplemented  {fld st0, st0} */;\n                                    /* unimplemented  {fdiv st0, st2} */;\n                                    uint16_t x87control_29;\n                                    uint16_t x87status_45;\n                                    x87control_29 = __fldcw_memmem16(rsp_1[0x13]);\n                                    *(rsp_1 + 0x10) = /* *(rsp_1 + 0x10) = int.q(unimplemented  {fistp qword [rsp+0x10], st0}) */;\n                                    /* unimplemented  {fistp qword [rsp+0x10], st0} */;\n                                    uint16_t x87status_46;\n                                    arg3 = __fldcw_memmem16(*(rsp_1 + 0x4e));\n                                    /* unimplemented  {fild st0, qword [rsp+0x10]} */;\n                                    /* unimplemented  {fmulp st2, st0} */;\n                                    /* unimplemented  {fmulp st2, st0} */;\n                                    top_58 = (top_12 - 2);\n                                    /* unimplemented  {fsub st0, st1} */;\n                                    if (rbp_4 > 4)\n                                    {\n                                        /* unimplemented  {fstp st0, st0} */;\n                                        /* unimplemented  {fstp st0, st0} */;\n                                        /* unimplemented  {fstp st0, st0} */;\n                                        /* unimplemented  {fstp st0, st0} */;\n                                        top_66 = (top_58 + 1);\n                                        /* unimplemented  {fldz } */;\n                                        goto label_40372b;\n                                    }\n                                    /* unimplemented  {fxch st0, st1} */;\n                                    /* unimplemented  {fxch st0, st1} */;\n                                }\n                                else\n                                {\n                                    /* unimplemented  {fld st0, dword [rel &data_40c130]} */;\n                                    int16_t top_52 = (top_12 - 2);\n                                    /* unimplemented  {fld st0, st0} */;\n                                    do\n                                    {\n                                        /* unimplemented  {fmul st0, st1} */;\n                                    } while (rax_55 != 1);\n                                    uint16_t x87status_4;\n                                    int16_t temp0_2;\n                                    temp0_2 = __fnstcw_memmem16(arg3);\n                                    *(rsp_1 + 0x4e) = temp0_2;\n                                    /* unimplemented  {fmul st0, st2} */;\n                                    /* unimplemented  {fld st0, tword [rel &data_40c170]} */;\n                                    /* unimplemented  {fld st0, st1} */;\n                                    int16_t rdx_27;\n                                    *rdx_27[1] = (**(rsp_1 + 0x4e)[1] | 0xc);\n                                    /* unimplemented  {fdiv st0, st1} */;\n                                    rsp_1[0x13] = rdx_27;\n                                    uint16_t x87control_2;\n                                    uint16_t x87status_5;\n                                    x87control_2 = __fldcw_memmem16(rsp_1[0x13]);\n                                    *(rsp_1 + 0x10) = /* *(rsp_1 + 0x10) = int.q(unimplemented  {fistp qword [rsp+0x10], st0}) */;\n                                    /* unimplemented  {fistp qword [rsp+0x10], st0} */;\n                                    uint16_t x87status_6;\n                                    arg3 = __fldcw_memmem16(*(rsp_1 + 0x4e));\n                                    /* unimplemented  {fild st0, qword [rsp+0x10]} */;\n                                    /* unimplemented  {fmulp st1, st0} */;\n                                    /* unimplemented  {fmulp st1, st0} */;\n                                    int16_t top_57 = (top_52 - 1);\n                                    /* unimplemented  {fsub st1, st0} */;\n                                    if (rbp_4 > 4)\n                                    {\n                                        /* unimplemented  {fstp st0, st0} */;\n                                        /* unimplemented  {fstp st0, st0} */;\n                                        /* unimplemented  {fstp st0, st0} */;\n                                        /* unimplemented  {fstp st0, st0} */;\n                                        top_63 = (top_57 + 1);\n                                        /* unimplemented  {fldz } */;\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        /* unimplemented  {fxch st0, st1} */;\n                                    label_40371d:\n                                        int16_t top_64 = (top_63 - 1);\n                                        /* unimplemented  {fld st0, st0} */;\n                                        do\n                                        {\n                                            /* unimplemented  {fmul st0, st1} */;\n                                            rax_55 = (rax_55 - 1);\n                                        } while (rax_55 != 1);\n                                        /* unimplemented  {fstp st1, st0} */;\n                                        /* unimplemented  {fstp st1, st0} */;\n                                        /* unimplemented  {fdivp st1, st0} */;\n                                        /* unimplemented  {fdivp st1, st0} */;\n                                        top_66 = (top_64 + 2);\n                                        goto label_40372b;\n                                    }\n                                    /* unimplemented  {fstp st2, st0} */;\n                                    /* unimplemented  {fstp st2, st0} */;\n                                    top_58 = (top_57 + 1);\n                                    /* unimplemented  {fxch st0, st1} */;\n                                    /* unimplemented  {fxch st0, st1} */;\n                                }\n                            }\n                            if (((r14_3 == 0 && rbp_4 <= 4) || r14_3 != 0))\n                            {\n                                switch (rbp_4)\n                                {\n                                    case 0:\n                                    {\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        /* unimplemented  {fld st0, st0} */;\n                                        uint16_t x87control_7;\n                                        uint16_t x87status_15;\n                                        x87control_7 = __fldcw_memmem16(rsp_1[0x13]);\n                                        *rsp_1 = /* *rsp_1 = int.q(unimplemented  {fistp qword [rsp], st0}) */;\n                                        /* unimplemented  {fistp qword [rsp], st0} */;\n                                        uint16_t x87status_16;\n                                        arg3 = __fldcw_memmem16(*(rsp_1 + 0x4e));\n                                        /* unimplemented  {fild st0, qword [rsp]} */;\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        bool cond:17_1 = /* bool cond:17_1 = unimplemented  {fcomip st0, st1} f<= unimplemented  {fcomip st0, st1} */ <= /* bool cond:17_1 = unimplemented  {fcomip st0, st1} f<= unimplemented  {fcomip st0, st1} */;\n                                        /* unimplemented  {fcomip st0, st1} */;\n                                        if (cond:17_1)\n                                        {\n                                            goto label_403706;\n                                        }\n                                        /* unimplemented  {fstp st0, st0} */;\n                                        /* unimplemented  {fstp st0, st0} */;\n                                    label_403979:\n                                        *rsp_1 = (*rsp_1 + 1);\n                                        /* unimplemented  {fild st0, qword [rsp]} */;\n                                        goto label_403706;\n                                    }\n                                    case 1:\n                                    {\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        /* unimplemented  {fchs } */;\n                                        /* unimplemented  {fld st0, st0} */;\n                                        uint16_t x87control_5;\n                                        uint16_t x87status_11;\n                                        x87control_5 = __fldcw_memmem16(rsp_1[0x13]);\n                                        *(rsp_1 + 0x40) = /* *(rsp_1 + 0x40) = int.q(unimplemented  {fistp qword [rsp+0x40], st0}) */;\n                                        /* unimplemented  {fistp qword [rsp+0x40], st0} */;\n                                        uint16_t x87status_12;\n                                        arg3 = __fldcw_memmem16(*(rsp_1 + 0x4e));\n                                    label_403997:\n                                        int64_t rax_80 = *(rsp_1 + 0x40);\n                                        *rsp_1 = rax_80;\n                                        /* unimplemented  {fild st0, qword [rsp]} */;\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        bool cond:24_1 = /* bool cond:24_1 = unimplemented  {fcomip st0, st1} f> unimplemented  {fcomip st0, st1} */ > /* bool cond:24_1 = unimplemented  {fcomip st0, st1} f> unimplemented  {fcomip st0, st1} */;\n                                        /* unimplemented  {fcomip st0, st1} */;\n                                        /* unimplemented  {fstp st0, st0} */;\n                                        /* unimplemented  {fstp st0, st0} */;\n                                        int64_t rdx_42;\n                                        rdx_42 = cond:24_1;\n                                        *rsp_1 = (-(rax_80 + rdx_42));\n                                        /* unimplemented  {fild st0, qword [rsp]} */;\n                                        goto label_403706;\n                                    }\n                                    case 2:\n                                    {\n                                        /* unimplemented  {fldz } */;\n                                        bool cond:15_1 = /* bool cond:15_1 = unimplemented  {fcomip st0, st2} f> unimplemented  {fcomip st0, st2} */ > /* bool cond:15_1 = unimplemented  {fcomip st0, st2} f> unimplemented  {fcomip st0, st2} */;\n                                        /* unimplemented  {fcomip st0, st2} */;\n                                        if (cond:15_1)\n                                        {\n                                            /* unimplemented  {fxch st0, st1} */;\n                                            /* unimplemented  {fxch st0, st1} */;\n                                            /* unimplemented  {fchs } */;\n                                            /* unimplemented  {fld st0, st0} */;\n                                            uint16_t x87control_27;\n                                            uint16_t x87status_40;\n                                            x87control_27 = __fldcw_memmem16(rsp_1[0x13]);\n                                            *(rsp_1 + 0x40) = /* *(rsp_1 + 0x40) = int.q(unimplemented  {fistp qword [rsp+0x40], st0}) */;\n                                            /* unimplemented  {fistp qword [rsp+0x40], st0} */;\n                                            uint16_t x87status_41;\n                                            arg3 = __fldcw_memmem16(*(rsp_1 + 0x4e));\n                                            goto label_403997;\n                                        }\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        /* unimplemented  {fld st0, st0} */;\n                                        uint16_t x87control_4;\n                                        uint16_t x87status_9;\n                                        x87control_4 = __fldcw_memmem16(rsp_1[0x13]);\n                                        *rsp_1 = /* *rsp_1 = int.q(unimplemented  {fistp qword [rsp], st0}) */;\n                                        /* unimplemented  {fistp qword [rsp], st0} */;\n                                        uint16_t x87status_10;\n                                        arg3 = __fldcw_memmem16(*(rsp_1 + 0x4e));\n                                        /* unimplemented  {fild st0, qword [rsp]} */;\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        bool cond:21_1 = /* bool cond:21_1 = unimplemented  {fcomip st0, st1} f<= unimplemented  {fcomip st0, st1} */ <= /* bool cond:21_1 = unimplemented  {fcomip st0, st1} f<= unimplemented  {fcomip st0, st1} */;\n                                        /* unimplemented  {fcomip st0, st1} */;\n                                        if (cond:21_1)\n                                        {\n                                            goto label_403706;\n                                        }\n                                        /* unimplemented  {fstp st0, st0} */;\n                                        /* unimplemented  {fstp st0, st0} */;\n                                        goto label_403979;\n                                    }\n                                    case 4:\n                                    {\n                                        /* unimplemented  {fldz } */;\n                                        bool cond:16_1 = /* bool cond:16_1 = unimplemented  {fcomip st0, st2} f> unimplemented  {fcomip st0, st2} */ > /* bool cond:16_1 = unimplemented  {fcomip st0, st2} f> unimplemented  {fcomip st0, st2} */;\n                                        /* unimplemented  {fcomip st0, st2} */;\n                                        if (cond:16_1)\n                                        {\n                                            /* unimplemented  {fxch st0, st1} */;\n                                            /* unimplemented  {fxch st0, st1} */;\n                                            /* unimplemented  {fsub st0, dword [rel &data_40c13c]} */;\n                                            uint16_t x87control_28;\n                                            uint16_t x87status_42;\n                                            x87control_28 = __fldcw_memmem16(rsp_1[0x13]);\n                                            *rsp_1 = /* *rsp_1 = int.q(unimplemented  {fistp qword [rsp], st0}) */;\n                                            /* unimplemented  {fistp qword [rsp], st0} */;\n                                            uint16_t x87status_43;\n                                            arg3 = __fldcw_memmem16(*(rsp_1 + 0x4e));\n                                            /* unimplemented  {fild st0, qword [rsp]} */;\n                                        }\n                                        else\n                                        {\n                                            /* unimplemented  {fxch st0, st1} */;\n                                            /* unimplemented  {fxch st0, st1} */;\n                                            /* unimplemented  {fadd st0, dword [rel &data_40c13c]} */;\n                                            uint16_t x87control_6;\n                                            uint16_t x87status_13;\n                                            x87control_6 = __fldcw_memmem16(rsp_1[0x13]);\n                                            *rsp_1 = /* *rsp_1 = int.q(unimplemented  {fistp qword [rsp], st0}) */;\n                                            /* unimplemented  {fistp qword [rsp], st0} */;\n                                            uint16_t x87status_14;\n                                            arg3 = __fldcw_memmem16(*(rsp_1 + 0x4e));\n                                            /* unimplemented  {fild st0, qword [rsp]} */;\n                                        }\n                                        goto label_403706;\n                                    }\n                                }\n                                if (rbp_4 == 3)\n                                {\n                                    /* unimplemented  {fxch st0, st1} */;\n                                    /* unimplemented  {fxch st0, st1} */;\n                                    uint16_t x87control_3;\n                                    uint16_t x87status_7;\n                                    x87control_3 = __fldcw_memmem16(rsp_1[0x13]);\n                                    *rsp_1 = /* *rsp_1 = int.q(unimplemented  {fistp qword [rsp], st0}) */;\n                                    /* unimplemented  {fistp qword [rsp], st0} */;\n                                    uint16_t x87status_8;\n                                    arg3 = __fldcw_memmem16(*(rsp_1 + 0x4e));\n                                    /* unimplemented  {fild st0, qword [rsp]} */;\n                                label_403706:\n                                    /* unimplemented  {faddp st1, st0} */;\n                                    /* unimplemented  {faddp st1, st0} */;\n                                    top_66 = (top_58 + 1);\n                                    if (rsi_13 != 0)\n                                    {\n                                        top_63 = (top_66 - 1);\n                                        /* unimplemented  {fld st0, dword [rel &data_40c130]} */;\n                                        rax_55 = (rsi_13 - 1);\n                                        if (rsi_13 != 1)\n                                        {\n                                            goto label_40371d;\n                                        }\n                                        /* unimplemented  {fdivp st1, st0} */;\n                                        /* unimplemented  {fdivp st1, st0} */;\n                                        top_66 = (top_63 + 1);\n                                    }\n                                    goto label_40372b;\n                                }\n                            }\n                            goto label_4037ea;\n                        }\n                        if ((rbx_9 - 3) <= 1)\n                        {\n                            rsp_1[8] = 0x400;\n                            *(rsp_1 + 0x10) = 0x4090000000000000;\n                        }\n                        else\n                        {\n                            rsp_1[8] = 0x3e8;\n                            *(rsp_1 + 0x10) = 0x408f400000000000;\n                        }\n                        /* unimplemented  {fld st0, tword [rel &data_40c150]} */;\n                        /* unimplemented  {fxch st0, st1} */;\n                        /* unimplemented  {fxch st0, st1} */;\n                        bool cond:13_1 = /* bool cond:13_1 = unimplemented  {fcomi st0, st1} f< unimplemented  {fcomi st0, st1} */ < /* bool cond:13_1 = unimplemented  {fcomi st0, st1} f< unimplemented  {fcomi st0, st1} */;\n                        /* unimplemented  {fstp st1, st0} */;\n                        /* unimplemented  {fstp st1, st0} */;\n                        uint64_t r13_5;\n                        int16_t top_31;\n                        bool cond:14_1;\n                        if ((!cond:13_1))\n                        {\n                            /* unimplemented  {fld st0, tword [rel &data_40c160]} */;\n                            cond:14_1 = /* cond:14_1 = unimplemented  {fcomip st0, st1} f< unimplemented  {fcomip st0, st1} */ < /* cond:14_1 = unimplemented  {fcomip st0, st1} f< unimplemented  {fcomip st0, st1} */;\n                            /* unimplemented  {fcomip st0, st1} */;\n                            if ((!cond:14_1))\n                            {\n                                /* unimplemented  {fild st0, dword [rsp+0x20]} */;\n                                r13_5 = 0;\n                                int16_t top_27 = (top_12 - 2);\n                                /* unimplemented  {fld st0, st1} */;\n                                while (true)\n                                {\n                                    /* unimplemented  {fldz } */;\n                                    /* unimplemented  {fld st0, st1} */;\n                                    /* unimplemented  {fchs } */;\n                                    /* unimplemented  {fxch st0, st1} */;\n                                    /* unimplemented  {fxch st0, st1} */;\n                                    bool cond:19_1 = /* bool cond:19_1 = unimplemented  {fcomip st0, st2} f<= unimplemented  {fcomip st0, st2} */ <= /* bool cond:19_1 = unimplemented  {fcomip st0, st2} f<= unimplemented  {fcomip st0, st2} */;\n                                    /* unimplemented  {fcomip st0, st2} */;\n                                    int16_t top_30 = (top_27 - 1);\n                                    if (cond:19_1)\n                                    {\n                                        /* unimplemented  {fcmovbe st0, st1} */;\n                                    }\n                                    bool cond:20_1 = /* bool cond:20_1 = unimplemented  {fcomip st0, st2} f>= unimplemented  {fcomip st0, st2} */ >= /* bool cond:20_1 = unimplemented  {fcomip st0, st2} f>= unimplemented  {fcomip st0, st2} */;\n                                    /* unimplemented  {fcomip st0, st2} */;\n                                    top_27 = (top_30 + 1);\n                                    if ((!cond:20_1))\n                                    {\n                                        break;\n                                    }\n                                    /* unimplemented  {fdiv st0, st1} */;\n                                    r13_5 = (r13_5 + 1);\n                                }\n                                /* unimplemented  {fstp st1, st0} */;\n                                /* unimplemented  {fstp st1, st0} */;\n                                top_31 = (top_27 + 1);\n                            }\n                        }\n                        if ((cond:13_1 || ((!cond:13_1) && cond:14_1)))\n                        {\n                            top_31 = (top_12 - 1);\n                            /* unimplemented  {fld st0, st0} */;\n                            r13_5 = 0;\n                        }\n                        if (rcx_7 != 0)\n                        {\n                            /* unimplemented  {fxch st0, st1} */;\n                            /* unimplemented  {fxch st0, st1} */;\n                            *(rsp_1 + 0x30) = /* *(rsp_1 + 0x30) = unimplemented  {fstp tword [rsp+0x30], st0} */;\n                            /* unimplemented  {fstp tword [rsp+0x30], st0} */;\n                            zmm0 = *(rsp_1 + 0x10);\n                            /* unimplemented  {fld st0, st0} */;\n                            *(rsp_1 - 0x10) = /* *(rsp_1 - 0x10) = unimplemented  {fstp tword [rsp], st0} */;\n                            /* unimplemented  {fstp tword [rsp], st0} */;\n                            *(rsp_1 + 0x20) = /* *(rsp_1 + 0x20) = unimplemented  {fstp tword [rsp+0x30], st0} */;\n                            /* unimplemented  {fstp tword [rsp+0x30], st0} */;\n                            __fprintf_chk(stderr, 1, \"  scaled value to %Lf * %0.f ^ %\u2026\", r13_5);\n                            *(rsp_1 - 0x10);\n                            rcx_7 = data_610338;\n                            *(rsp_1 - 8);\n                            /* unimplemented  {fld st0, tword [rsp+0x30]} */;\n                            /* unimplemented  {fld st0, tword [rsp+0x20]} */;\n                        }\n                        int64_t rsi_21 = data_610260;\n                        int32_t rdi_15;\n                        int16_t top_146;\n                        bool cond:23_1;\n                        if (rsi_21 == -1)\n                        {\n                            /* unimplemented  {fldz } */;\n                            /* unimplemented  {fld st0, st1} */;\n                            /* unimplemented  {fchs } */;\n                            /* unimplemented  {fxch st0, st1} */;\n                            /* unimplemented  {fxch st0, st1} */;\n                            bool cond:22_1 = /* bool cond:22_1 = unimplemented  {fcomip st0, st2} f<= unimplemented  {fcomip st0, st2} */ <= /* bool cond:22_1 = unimplemented  {fcomip st0, st2} f<= unimplemented  {fcomip st0, st2} */;\n                            /* unimplemented  {fcomip st0, st2} */;\n                            top_146 = (top_31 - 1);\n                            if (cond:22_1)\n                            {\n                                /* unimplemented  {fcmovbe st0, st1} */;\n                            }\n                            /* unimplemented  {fld st0, dword [rel &data_40c130]} */;\n                            /* unimplemented  {fld st0, st0} */;\n                            cond:23_1 = /* cond:23_1 = unimplemented  {fcomip st0, st2} f<= unimplemented  {fcomip st0, st2} */ <= /* cond:23_1 = unimplemented  {fcomip st0, st2} f<= unimplemented  {fcomip st0, st2} */;\n                            /* unimplemented  {fcomip st0, st2} */;\n                            /* unimplemented  {fstp st1, st0} */;\n                            /* unimplemented  {fstp st1, st0} */;\n                            if (cond:23_1)\n                            {\n                                /* unimplemented  {fstp st0, st0} */;\n                                /* unimplemented  {fstp st0, st0} */;\n                                top_31 = (top_146 + 1);\n                            }\n                        }\n                        else\n                        {\n                            if (rsi_21 > rsi_21)\n                            {\n                                /* nop */\n                            }\n                            rdi_15 = rsi_21;\n                        }\n                        uint64_t rax_46;\n                        int16_t top_40;\n                        int16_t top_95;\n                        int16_t top_101;\n                        int16_t top_104;\n                        if (((rsi_21 == -1 && cond:23_1) || (rsi_21 != -1 && rsi_21 == 0)))\n                        {\n                            uint16_t x87status_29;\n                            int16_t temp0_3;\n                            temp0_3 = __fnstcw_memmem16(arg3);\n                            *(rsp_1 + 0x4e) = temp0_3;\n                            /* unimplemented  {fld st0, tword [rel &data_40c170]} */;\n                            /* unimplemented  {fld st0, st1} */;\n                            /* unimplemented  {fdiv st0, st1} */;\n                            *rax_46[1] = (**(rsp_1 + 0x4e)[1] | 0xc);\n                            rsp_1[0x13] = rax_46;\n                            uint16_t x87control_20;\n                            uint16_t x87status_30;\n                            x87control_20 = __fldcw_memmem16(rsp_1[0x13]);\n                            *(rsp_1 + 0x20) = /* *(rsp_1 + 0x20) = int.q(unimplemented  {fistp qword [rsp+0x20], st0}) */;\n                            /* unimplemented  {fistp qword [rsp+0x20], st0} */;\n                            uint16_t x87control_21;\n                            uint16_t x87status_31;\n                            x87control_21 = __fldcw_memmem16(*(rsp_1 + 0x4e));\n                            /* unimplemented  {fild st0, qword [rsp+0x20]} */;\n                            /* unimplemented  {fmulp st1, st0} */;\n                            /* unimplemented  {fmulp st1, st0} */;\n                            /* unimplemented  {fsub st1, st0} */;\n                            top_95 = (top_31 - 2);\n                            /* unimplemented  {fld st0, qword [rsp+0x10]} */;\n                            if (rbp_4 > 4)\n                            {\n                                /* unimplemented  {fstp st2, st0} */;\n                                /* unimplemented  {fstp st2, st0} */;\n                                /* unimplemented  {fstp st0, st0} */;\n                                /* unimplemented  {fstp st0, st0} */;\n                            label_40418c:\n                                /* unimplemented  {fldz } */;\n                                goto label_403a7d;\n                            }\n                            switch (rbp_4)\n                            {\n                                case 0:\n                                {\n                                    /* unimplemented  {fxch st0, st2} */;\n                                    /* unimplemented  {fxch st0, st2} */;\n                                    rdi_15 = 0;\n                                label_403a1f:\n                                    /* unimplemented  {fld st0, st0} */;\n                                    uint16_t x87control_8;\n                                    uint16_t x87status_17;\n                                    x87control_8 = __fldcw_memmem16(rsp_1[0x13]);\n                                    *(rsp_1 + 0x20) = /* *(rsp_1 + 0x20) = int.q(unimplemented  {fistp qword [rsp+0x20], st0}) */;\n                                    /* unimplemented  {fistp qword [rsp+0x20], st0} */;\n                                    uint16_t x87control_9;\n                                    uint16_t x87status_18;\n                                    x87control_9 = __fldcw_memmem16(*(rsp_1 + 0x4e));\n                                    /* unimplemented  {fild st0, qword [rsp+0x20]} */;\n                                    /* unimplemented  {fxch st0, st1} */;\n                                    /* unimplemented  {fxch st0, st1} */;\n                                    bool cond:28_1 = /* bool cond:28_1 = unimplemented  {fcomip st0, st1} f<= unimplemented  {fcomip st0, st1} */ <= /* bool cond:28_1 = unimplemented  {fcomip st0, st1} f<= unimplemented  {fcomip st0, st1} */;\n                                    /* unimplemented  {fcomip st0, st1} */;\n                                    if ((!cond:28_1))\n                                    {\n                                        /* unimplemented  {fstp st0, st0} */;\n                                        /* unimplemented  {fstp st0, st0} */;\n                                        *(rsp_1 + 0x20) = (*(rsp_1 + 0x20) + 1);\n                                        /* unimplemented  {fild st0, qword [rsp+0x20]} */;\n                                    }\n                                    goto label_403a4b;\n                                }\n                                case 1:\n                                {\n                                    /* unimplemented  {fxch st0, st2} */;\n                                    /* unimplemented  {fxch st0, st2} */;\n                                    rdi_15 = 0;\n                                label_403c10:\n                                    /* unimplemented  {fchs } */;\n                                    /* unimplemented  {fld st0, st0} */;\n                                    uint16_t x87control_14;\n                                    uint16_t x87status_23;\n                                    x87control_14 = __fldcw_memmem16(rsp_1[0x13]);\n                                    *(rsp_1 + 0x40) = /* *(rsp_1 + 0x40) = int.q(unimplemented  {fistp qword [rsp+0x40], st0}) */;\n                                    /* unimplemented  {fistp qword [rsp+0x40], st0} */;\n                                    uint16_t x87control_15;\n                                    uint16_t x87status_24;\n                                    x87control_15 = __fldcw_memmem16(*(rsp_1 + 0x4e));\n                                label_403b9a:\n                                    int64_t rax_89 = *(rsp_1 + 0x40);\n                                    *(rsp_1 + 0x20) = rax_89;\n                                    /* unimplemented  {fild st0, qword [rsp+0x20]} */;\n                                    /* unimplemented  {fxch st0, st1} */;\n                                    /* unimplemented  {fxch st0, st1} */;\n                                    bool cond:31_1 = /* bool cond:31_1 = unimplemented  {fcomip st0, st1} f> unimplemented  {fcomip st0, st1} */ > /* bool cond:31_1 = unimplemented  {fcomip st0, st1} f> unimplemented  {fcomip st0, st1} */;\n                                    /* unimplemented  {fcomip st0, st1} */;\n                                    /* unimplemented  {fstp st0, st0} */;\n                                    /* unimplemented  {fstp st0, st0} */;\n                                    int64_t rdx_43;\n                                    rdx_43 = cond:31_1;\n                                    *(rsp_1 + 0x20) = (-(rax_89 + rdx_43));\n                                    /* unimplemented  {fild st0, qword [rsp+0x20]} */;\n                                label_403a4b:\n                                    /* unimplemented  {faddp st1, st0} */;\n                                    /* unimplemented  {faddp st1, st0} */;\n                                    top_104 = (top_95 + 1);\n                                    if (rdi_15 == 0)\n                                    {\n                                        goto label_403a73;\n                                    }\n                                    top_101 = (top_104 - 1);\n                                    /* unimplemented  {fld st0, dword [rel &data_40c130]} */;\n                                    rax_46 = (rdi_15 - 1);\n                                    if (rdi_15 != 1)\n                                    {\n                                        goto label_403a62;\n                                    }\n                                    goto label_403c5d;\n                                }\n                                case 2:\n                                {\n                                    rdi_15 = 0;\n                                label_403b7e:\n                                    /* unimplemented  {fldz } */;\n                                    bool cond:27_1 = /* bool cond:27_1 = unimplemented  {fcomip st0, st3} f<= unimplemented  {fcomip st0, st3} */ <= /* bool cond:27_1 = unimplemented  {fcomip st0, st3} f<= unimplemented  {fcomip st0, st3} */;\n                                    /* unimplemented  {fcomip st0, st3} */;\n                                    if (cond:27_1)\n                                    {\n                                        /* unimplemented  {fxch st0, st2} */;\n                                        /* unimplemented  {fxch st0, st2} */;\n                                        goto label_403a1f;\n                                    }\n                                    /* unimplemented  {fxch st0, st2} */;\n                                    /* unimplemented  {fxch st0, st2} */;\n                                    /* unimplemented  {fchs } */;\n                                    /* unimplemented  {fld st0, st0} */;\n                                    uint16_t x87control_10;\n                                    uint16_t x87status_19;\n                                    x87control_10 = __fldcw_memmem16(rsp_1[0x13]);\n                                    *(rsp_1 + 0x40) = /* *(rsp_1 + 0x40) = int.q(unimplemented  {fistp qword [rsp+0x40], st0}) */;\n                                    /* unimplemented  {fistp qword [rsp+0x40], st0} */;\n                                    uint16_t x87control_11;\n                                    uint16_t x87status_20;\n                                    x87control_11 = __fldcw_memmem16(*(rsp_1 + 0x4e));\n                                    goto label_403b9a;\n                                }\n                                case 3:\n                                {\n                                    /* unimplemented  {fxch st0, st2} */;\n                                    /* unimplemented  {fxch st0, st2} */;\n                                    uint16_t x87control_22;\n                                    uint16_t x87status_32;\n                                    x87control_22 = __fldcw_memmem16(rsp_1[0x13]);\n                                    *(rsp_1 + 0x20) = /* *(rsp_1 + 0x20) = int.q(unimplemented  {fistp qword [rsp+0x20], st0}) */;\n                                    /* unimplemented  {fistp qword [rsp+0x20], st0} */;\n                                    uint16_t x87control_23;\n                                    uint16_t x87status_33;\n                                    x87control_23 = __fldcw_memmem16(*(rsp_1 + 0x4e));\n                                    /* unimplemented  {fild st0, qword [rsp+0x20]} */;\n                                    /* unimplemented  {faddp st1, st0} */;\n                                    /* unimplemented  {faddp st1, st0} */;\n                                    top_104 = (top_95 + 1);\n                                label_403a73:\n                                    int32_t rax_88;\n                                    while (true)\n                                    {\n                                        /* unimplemented  {fldz } */;\n                                        bool cond:30_1 = /* bool cond:30_1 = unimplemented  {fcomip st0, st1} f> unimplemented  {fcomip st0, st1} */ > /* bool cond:30_1 = unimplemented  {fcomip st0, st1} f> unimplemented  {fcomip st0, st1} */;\n                                        /* unimplemented  {fcomip st0, st1} */;\n                                        int32_t r9_3;\n                                        int16_t top_107;\n                                        if (cond:30_1)\n                                        {\n                                            /* unimplemented  {fld st0, st0} */;\n                                            /* unimplemented  {fchs } */;\n                                            if (/* if (unimplemented  {fcomi st0, st2} f>= unimplemented  {fcomi st0, st2})... */ >= /* if (unimplemented  {fcomi st0, st2} f>= unimplemented  {fcomi st0, st2})... */)\n                                            {\n                                                /* unimplemented  {fstp st0, st0} */;\n                                                /* unimplemented  {fstp st0, st0} */;\n                                            }\n                                            else\n                                            {\n                                                /* unimplemented  {fstp st2, st0} */;\n                                                /* unimplemented  {fstp st2, st0} */;\n                                                /* unimplemented  {fxch st0, st1} */;\n                                                /* unimplemented  {fxch st0, st1} */;\n                                            label_403cea:\n                                                /* unimplemented  {fxch st0, st1} */;\n                                                /* unimplemented  {fxch st0, st1} */;\n                                            label_403cec:\n                                                /* unimplemented  {fld st0, dword [rel &data_40c130]} */;\n                                                rax_46 = r13_5 != 0;\n                                                bool cond:35_1 = /* bool cond:35_1 = unimplemented  {fcomip st0, st2} f> unimplemented  {fcomip st0, st2} */ > /* bool cond:35_1 = unimplemented  {fcomip st0, st2} f> unimplemented  {fcomip st0, st2} */;\n                                                /* unimplemented  {fcomip st0, st2} */;\n                                                /* unimplemented  {fstp st1, st0} */;\n                                                /* unimplemented  {fstp st1, st0} */;\n                                                int32_t r9_4;\n                                                r9_4 = cond:35_1;\n                                                r9_3 = (r9_4 & rax_46);\n                                            }\n                                        }\n                                        else\n                                        {\n                                        label_403a7d:\n                                            if (/* if (unimplemented  {fcomi st0, st1} f< unimplemented  {fcomi st0, st1})... */ < /* if (unimplemented  {fcomi st0, st1} f< unimplemented  {fcomi st0, st1})... */)\n                                            {\n                                                /* unimplemented  {fstp st1, st0} */;\n                                                /* unimplemented  {fstp st1, st0} */;\n                                                top_107 = (top_104 + 1);\n                                            }\n                                        }\n                                        if (((cond:30_1 && /* if ((cond:30_1 && unimplemented  {fcomi st0, st2} f>= unimplemented  {fcomi st0, st2}) || (not(cond:30_1) && not(unimplemented  {fcomi st0, st1} f< unimplemented  {fcomi st0, st1})))... */ >= /* if ((cond:30_1 && unimplemented  {fcomi st0, st2} f>= unimplemented  {fcomi st0, st2}) || (not(cond:30_1) && not(unimplemented  {fcomi st0, st1} f< unimplemented  {fcomi st0, st1})))... */) || ((!cond:30_1) && (!/* if ((cond:30_1 && unimplemented  {fcomi st0, st2} f>= unimplemented  {fcomi st0, st2}) || (not(cond:30_1) && not(unimplemented  {fcomi st0, st1} f< unimplemented  {fcomi st0, st1})))... */ < /* if ((cond:30_1 && unimplemented  {fcomi st0, st2} f>= unimplemented  {fcomi st0, st2}) || (not(cond:30_1) && not(unimplemented  {fcomi st0, st1} f< unimplemented  {fcomi st0, st1})))... */))))\n                                        {\n                                            r13_5 = (r13_5 + 1);\n                                            /* unimplemented  {fdivrp st1, st0} */;\n                                            /* unimplemented  {fdivrp st1, st0} */;\n                                            top_107 = (top_104 + 1);\n                                        }\n                                        if (((((!cond:30_1) && /* if ((not(cond:30_1) && unimplemented  {fcomi st0, st1} f< unimplemented  {fcomi st0, st1}) || (cond:30_1 && unimplemented  {fcomi st0, st2} f>= unimplemented  {fcomi st0, st2}) || (not(cond:30_1) && not(unimplemented  {fcomi st0, st1} f< unimplemented  {fcomi st0, st1})))... */ < /* if ((not(cond:30_1) && unimplemented  {fcomi st0, st1} f< unimplemented  {fcomi st0, st1}) || (cond:30_1 && unimplemented  {fcomi st0, st2} f>= unimplemented  {fcomi st0, st2}) || (not(cond:30_1) && not(unimplemented  {fcomi st0, st1} f< unimplemented  {fcomi st0, st1})))... */) || (cond:30_1 && /* if ((not(cond:30_1) && unimplemented  {fcomi st0, st1} f< unimplemented  {fcomi st0, st1}) || (cond:30_1 && unimplemented  {fcomi st0, st2} f>= unimplemented  {fcomi st0, st2}) || (not(cond:30_1) && not(unimplemented  {fcomi st0, st1} f< unimplemented  {fcomi st0, st1})))... */ >= /* if ((not(cond:30_1) && unimplemented  {fcomi st0, st1} f< unimplemented  {fcomi st0, st1}) || (cond:30_1 && unimplemented  {fcomi st0, st2} f>= unimplemented  {fcomi st0, st2}) || (not(cond:30_1) && not(unimplemented  {fcomi st0, st1} f< unimplemented  {fcomi st0, st1})))... */)) || ((!cond:30_1) && (!/* if ((not(cond:30_1) && unimplemented  {fcomi st0, st1} f< unimplemented  {fcomi st0, st1}) || (cond:30_1 && unimplemented  {fcomi st0, st2} f>= unimplemented  {fcomi st0, st2}) || (not(cond:30_1) && not(unimplemented  {fcomi st0, st1} f< unimplemented  {fcomi st0, st1})))... */ < /* if ((not(cond:30_1) && unimplemented  {fcomi st0, st1} f< unimplemented  {fcomi st0, st1}) || (cond:30_1 && unimplemented  {fcomi st0, st2} f>= unimplemented  {fcomi st0, st2}) || (not(cond:30_1) && not(unimplemented  {fcomi st0, st1} f< unimplemented  {fcomi st0, st1})))... */))))\n                                        {\n                                            /* unimplemented  {fldz } */;\n                                            /* unimplemented  {fxch st0, st1} */;\n                                            /* unimplemented  {fxch st0, st1} */;\n                                            (/* unimplemented  {fucomi st0, st1} f- unimplemented  {fucomi st0, st1} */ - /* unimplemented  {fucomi st0, st1} f- unimplemented  {fucomi st0, st1} */);\n                                            bool cond:33_1 = /* bool cond:33_1 = unimplemented  {fucomi st0, st1} f!= unimplemented  {fucomi st0, st1} */ != /* bool cond:33_1 = unimplemented  {fucomi st0, st1} f!= unimplemented  {fucomi st0, st1} */;\n                                            bool cond:34_1 = (FCMP_UO(/* bool cond:34_1 = is_unordered.t(unimplemented  {fucomi st0, st1}, unimplemented  {fucomi st0, st1}) */, /* bool cond:34_1 = is_unordered.t(unimplemented  {fucomi st0, st1}, unimplemented  {fucomi st0, st1}) */));\n                                            /* unimplemented  {fstp st1, st0} */;\n                                            /* unimplemented  {fstp st1, st0} */;\n                                            if ((cond:34_1 || ((!cond:34_1) && cond:33_1)))\n                                            {\n                                                /* unimplemented  {fldz } */;\n                                                bool cond:32_1 = /* bool cond:32_1 = unimplemented  {fcomip st0, st1} f> unimplemented  {fcomip st0, st1} */ > /* bool cond:32_1 = unimplemented  {fcomip st0, st1} f> unimplemented  {fcomip st0, st1} */;\n                                                /* unimplemented  {fcomip st0, st1} */;\n                                                if (cond:32_1)\n                                                {\n                                                    /* unimplemented  {fld st0, st0} */;\n                                                    /* unimplemented  {fchs } */;\n                                                    goto label_403cea;\n                                                }\n                                                /* unimplemented  {fld st0, st0} */;\n                                                goto label_403cec;\n                                            }\n                                            if (((!cond:34_1) && (!cond:33_1)))\n                                            {\n                                                r9_3 = 0;\n                                            }\n                                        }\n                                        if (rcx_7 != 0)\n                                        {\n                                            /* unimplemented  {fxch st0, st1} */;\n                                            /* unimplemented  {fxch st0, st1} */;\n                                            *(rsp_1 + 0x20) = /* *(rsp_1 + 0x20) = unimplemented  {fstp tword [rsp+0x20], st0} */;\n                                            /* unimplemented  {fstp tword [rsp+0x20], st0} */;\n                                            rsp_1[0xc] = r9_3;\n                                            zmm0 = *(rsp_1 + 0x10);\n                                            /* unimplemented  {fld st0, st0} */;\n                                            *(rsp_1 - 0x10) = /* *(rsp_1 - 0x10) = unimplemented  {fstp tword [rsp], st0} */;\n                                            /* unimplemented  {fstp tword [rsp], st0} */;\n                                            *rsp_1 = /* *rsp_1 = unimplemented  {fstp tword [rsp+0x10], st0} */;\n                                            /* unimplemented  {fstp tword [rsp+0x10], st0} */;\n                                            __fprintf_chk(stderr, 1, \"  after rounding, value=%Lf * %0\u2026\", r13_5);\n                                            *(rsp_1 - 0x10);\n                                            rsi_21 = data_610260;\n                                            /* unimplemented  {fld st0, tword [rsp+0x20]} */;\n                                            /* unimplemented  {fld st0, tword [rsp]} */;\n                                        }\n                                        char const* const rax_85 = \"(error)\";\n                                        *r12_3 = 0x664c2a2e;\n                                        *(r12_3 + 4) = 0x7325;\n                                        *(r12_3 + 6) = 0;\n                                        if (r13_5 > 8)\n                                        {\n                                            /* unimplemented  {fxch st0, st1} */;\n                                            /* unimplemented  {fxch st0, st1} */;\n                                        }\n                                        else\n                                        {\n                                            /* unimplemented  {fxch st0, st1} */;\n                                            /* unimplemented  {fxch st0, st1} */;\n                                            rax_85 = *((r13_5 << 3) + 0x40bcc0);\n                                        }\n                                        *(rsp_1 + 0x10) = /* *(rsp_1 + 0x10) = unimplemented  {fstp tword [rsp+0x10], st0} */;\n                                        /* unimplemented  {fstp tword [rsp+0x10], st0} */;\n                                        rbp_3 = &rsp_1[0x2c];\n                                        *(rsp_1 - 0x10) = rax_85;\n                                        /* unimplemented  {fld st0, st0} */;\n                                        *(rsp_1 - 0x20) = /* *(rsp_1 - 0x20) = unimplemented  {fstp tword [rsp], st0} */;\n                                        /* unimplemented  {fstp tword [rsp], st0} */;\n                                        *rsp_1 = /* *rsp_1 = unimplemented  {fstp tword [rsp+0x20], st0} */;\n                                        /* unimplemented  {fstp tword [rsp+0x20], st0} */;\n                                        rax_88 = __snprintf_chk(rbp_3, 0x7f, 1, 0x80, &rsp_1[0x1c]);\n                                        int16_t top_77 = (top_107 + 1);\n                                        /* unimplemented  {fld st0, tword [rsp+0x30]} */;\n                                        if (rax_88 <= 0x7e)\n                                        {\n                                            break;\n                                        }\n                                        /* unimplemented  {fstp st0, st0} */;\n                                        /* unimplemented  {fstp st0, st0} */;\n                                        char* rax_105;\n                                        int64_t rcx_34;\n                                        rax_105 = dcgettext(nullptr, \"failed to prepare value '%Lf' fo\u2026\", 5);\n                                        /* unimplemented  {fld st0, tword [rsp]} */;\n                                        *(rsp_1 - 8) = rcx_34;\n                                        *(rsp_1 - 0x10) = rcx_34;\n                                        rsp_1 = (rsp_1 - 0x10);\n                                        *rsp_1 = /* *rsp_1 = unimplemented  {fstp tword [rsp], st0} */;\n                                        /* unimplemented  {fstp tword [rsp], st0} */;\n                                        top_40 = (top_77 + 1);\n                                        rax_46 = error(1, 0, rax_105);\n                                    label_404168:\n                                        /* unimplemented  {fstp st3, st0} */;\n                                        /* unimplemented  {fstp st3, st0} */;\n                                        /* unimplemented  {fstp st0, st0} */;\n                                        /* unimplemented  {fstp st0, st0} */;\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        top_101 = (top_40 + 1);\n                                        /* unimplemented  {fldz } */;\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        /* unimplemented  {fxch st0, st2} */;\n                                        /* unimplemented  {fxch st0, st2} */;\n                                    label_403a62:\n                                        int16_t top_102 = (top_101 - 1);\n                                        /* unimplemented  {fld st0, st0} */;\n                                    label_403a68:\n                                        /* unimplemented  {fmul st0, st1} */;\n                                        rax_46 = (rax_46 - 1);\n                                        if (rax_46 != 1)\n                                        {\n                                            break;\n                                        }\n                                        /* unimplemented  {fstp st1, st0} */;\n                                        /* unimplemented  {fstp st1, st0} */;\n                                        /* unimplemented  {fdivp st1, st0} */;\n                                        /* unimplemented  {fdivp st1, st0} */;\n                                        top_104 = (top_102 + 2);\n                                    }\n                                    if ((r13_5 != 0 && rbx_9 == 4))\n                                    {\n                                        *rsp_1 = /* *rsp_1 = unimplemented  {fstp tword [rsp], st0} */;\n                                        /* unimplemented  {fstp tword [rsp], st0} */;\n                                        __strncat_chk(rbp_3, &data_40a35f, (0x7f - rax_88), 0x80);\n                                        /* unimplemented  {fld st0, tword [rsp]} */;\n                                    }\n                                    rbx_16 = data_610338;\n                                    char* rsi_16;\n                                    if (rbx_16 != 0)\n                                    {\n                                        *rsp_1 = /* *rsp_1 = unimplemented  {fstp tword [rsp], st0} */;\n                                        /* unimplemented  {fstp tword [rsp], st0} */;\n                                        __fprintf_chk(stderr, 1, \"  returning value: %s\\n\", sub_407590(rbp_3));\n                                        rbx_16 = data_610338;\n                                        /* unimplemented  {fld st0, tword [rsp]} */;\n                                    label_4037ea:\n                                        rsi_16 = data_6103a0;\n                                        if (rsi_16 != 0)\n                                        {\n                                        label_4037f6:\n                                            uint32_t rcx_21;\n                                            do\n                                            {\n                                                int32_t rcx_18 = *rbp_3;\n                                            } while (rcx_21 == 0);\n                                            *rsp_1 = /* *rsp_1 = unimplemented  {fstp tword [rsp], st0} */;\n                                            /* unimplemented  {fstp tword [rsp], st0} */;\n                                            rcx_21 = (rcx_21 >> 0x10);\n                                            int32_t temp10_1 = (rcx_21 & 0x8080);\n                                            bool cond:25_1 = temp10_1 == 0;\n                                            if (temp10_1 == 0)\n                                            {\n                                                /* nop */\n                                            }\n                                            if (cond:25_1)\n                                            {\n                                                /* nop */\n                                            }\n                                            char rcx_23 = rcx_21;\n                                            __strncat_chk(rbp_3, rsi_16, ((rbp_3 - (rbp_3 - 3)) + 0x7f), 0x80);\n                                            /* unimplemented  {fld st0, tword [rsp]} */;\n                                        }\n                                        if (rbx_16 == 0)\n                                        {\n                                            /* unimplemented  {fstp st0, st0} */;\n                                            /* unimplemented  {fstp st0, st0} */;\n                                        label_403884:\n                                            int64_t rsi_17 = data_610380;\n                                            uint32_t rdx_39;\n                                            do\n                                            {\n                                                int32_t rdx_36 = *rbp_3;\n                                            } while (rdx_39 == 0);\n                                            rdx_39 = (rdx_39 >> 0x10);\n                                            int32_t temp12_1 = (rdx_39 & 0x8080);\n                                            bool cond:26_1 = temp12_1 == 0;\n                                            if (temp12_1 == 0)\n                                            {\n                                                /* nop */\n                                            }\n                                            if (cond:26_1)\n                                            {\n                                                /* nop */\n                                            }\n                                            int64_t rdx_41 = data_610388;\n                                            char rdi_31 = rdx_39;\n                                            int64_t rcx_27 = ((rbp_3 - 3) - rbp_3);\n                                            if ((rsi_17 == 0 || (rsi_17 != 0 && rsi_17 <= rcx_27)))\n                                            {\n                                                int64_t rdi_32 = (rcx_27 + 1);\n                                                if (rdi_32 >= rdx_41)\n                                                {\n                                                    sub_402bd0(rdi_32);\n                                                }\n                                                strcpy(data_610390, rbp_3);\n                                            }\n                                            if ((rsi_17 != 0 && rsi_17 > rcx_27))\n                                            {\n                                                *(rsp_1 + 0x70) = rsi_17;\n                                                sub_405530(rbp_3, data_610390, rdx_41, &rsp_1[0x1c], data_610258, 2);\n                                                if (data_610338 != 0)\n                                                {\n                                                    __fprintf_chk(stderr, 1, \"  After padding: %s\\n\", sub_407590(data_610390));\n                                                }\n                                            }\n                                            int64_t rdi_34 = data_610368;\n                                            FILE* rsi_19 = stdout;\n                                            if (rdi_34 != 0)\n                                            {\n                                                fputs_unlocked(rdi_34, rsi_19);\n                                                rsi_19 = stdout;\n                                            }\n                                            rbx_1 = 1;\n                                            fputs_unlocked(data_610390, rsi_19);\n                                            int64_t rdi_36 = data_610360;\n                                            if (rdi_36 != 0)\n                                            {\n                                                fputs_unlocked(rdi_36, stdout);\n                                            }\n                                            break;\n                                        }\n                                        *rsp_1 = /* *rsp_1 = unimplemented  {fstp tword [rsp], st0} */;\n                                        /* unimplemented  {fstp tword [rsp], st0} */;\n                                        /* unimplemented  {fld st0, tword [rsp]} */;\n                                        *(rsp_1 - 0x10) = /* *(rsp_1 - 0x10) = unimplemented  {fstp tword [rsp], st0} */;\n                                        /* unimplemented  {fstp tword [rsp], st0} */;\n                                        __fprintf_chk(stderr, 1, \"formatting output:\\n  value: %Lf\u2026\", sub_407590(rbp_3));\n                                        *(rsp_1 - 0x10);\n                                        *(rsp_1 - 8);\n                                        goto label_403884;\n                                    }\n                                    rsi_16 = data_6103a0;\n                                    if (rsi_16 != 0)\n                                    {\n                                        goto label_4037f6;\n                                    }\n                                    /* unimplemented  {fstp st0, st0} */;\n                                    /* unimplemented  {fstp st0, st0} */;\n                                    goto label_403884;\n                                }\n                                case 4:\n                                {\n                                    rdi_15 = 0;\n                                label_403bd6:\n                                    /* unimplemented  {fldz } */;\n                                    bool cond:29_1 = /* bool cond:29_1 = unimplemented  {fcomip st0, st3} f> unimplemented  {fcomip st0, st3} */ > /* bool cond:29_1 = unimplemented  {fcomip st0, st3} f> unimplemented  {fcomip st0, st3} */;\n                                    /* unimplemented  {fcomip st0, st3} */;\n                                    if (cond:29_1)\n                                    {\n                                        /* unimplemented  {fxch st0, st2} */;\n                                        /* unimplemented  {fxch st0, st2} */;\n                                        /* unimplemented  {fsub st0, dword [rel &data_40c13c]} */;\n                                        uint16_t x87control_30;\n                                        uint16_t x87status_47;\n                                        x87control_30 = __fldcw_memmem16(rsp_1[0x13]);\n                                        *(rsp_1 + 0x20) = /* *(rsp_1 + 0x20) = int.q(unimplemented  {fistp qword [rsp+0x20], st0}) */;\n                                        /* unimplemented  {fistp qword [rsp+0x20], st0} */;\n                                        uint16_t x87control_31;\n                                        uint16_t x87status_48;\n                                        x87control_31 = __fldcw_memmem16(*(rsp_1 + 0x4e));\n                                        /* unimplemented  {fild st0, qword [rsp+0x20]} */;\n                                    }\n                                    else\n                                    {\n                                        /* unimplemented  {fxch st0, st2} */;\n                                        /* unimplemented  {fxch st0, st2} */;\n                                        /* unimplemented  {fadd st0, dword [rel &data_40c13c]} */;\n                                        uint16_t x87control_12;\n                                        uint16_t x87status_21;\n                                        x87control_12 = __fldcw_memmem16(rsp_1[0x13]);\n                                        *(rsp_1 + 0x20) = /* *(rsp_1 + 0x20) = int.q(unimplemented  {fistp qword [rsp+0x20], st0}) */;\n                                        /* unimplemented  {fistp qword [rsp+0x20], st0} */;\n                                        uint16_t x87control_13;\n                                        uint16_t x87status_22;\n                                        x87control_13 = __fldcw_memmem16(*(rsp_1 + 0x4e));\n                                        /* unimplemented  {fild st0, qword [rsp+0x20]} */;\n                                    }\n                                    goto label_403a4b;\n                                }\n                            }\n                        }\n                        if ((rsi_21 != -1 && rsi_21 != 0))\n                        {\n                            rax_46 = (rsi_21 - 1);\n                            if (rsi_21 == 1)\n                            {\n                                /* unimplemented  {fld st0, dword [rel &data_40c130]} */;\n                            }\n                            else\n                            {\n                                /* unimplemented  {fld st0, dword [rel &data_40c130]} */;\n                                int32_t rdx_23 = rax_46;\n                                int16_t top_33 = (top_31 - 2);\n                                /* unimplemented  {fld st0, st0} */;\n                                do\n                                {\n                                    /* unimplemented  {fmul st0, st1} */;\n                                    rdx_23 = (rdx_23 - 1);\n                                } while (rdx_23 != 1);\n                                uint16_t x87status_1;\n                                int16_t temp0_1;\n                                temp0_1 = __fnstcw_memmem16(arg3);\n                                *(rsp_1 + 0x4e) = temp0_1;\n                                /* unimplemented  {fmulp st2, st0} */;\n                                /* unimplemented  {fmulp st2, st0} */;\n                                /* unimplemented  {fld st0, tword [rel &data_40c170]} */;\n                                /* unimplemented  {fld st0, st2} */;\n                                int16_t rdx_24;\n                                *rdx_24[1] = (**(rsp_1 + 0x4e)[1] | 0xc);\n                                rsp_1[0x13] = rdx_24;\n                                /* unimplemented  {fdiv st0, st1} */;\n                                uint16_t x87control;\n                                uint16_t x87status_2;\n                                x87control = __fldcw_memmem16(rsp_1[0x13]);\n                                *(rsp_1 + 0x20) = /* *(rsp_1 + 0x20) = int.q(unimplemented  {fistp qword [rsp+0x20], st0}) */;\n                                /* unimplemented  {fistp qword [rsp+0x20], st0} */;\n                                uint16_t x87control_1;\n                                uint16_t x87status_3;\n                                x87control_1 = __fldcw_memmem16(*(rsp_1 + 0x4e));\n                                /* unimplemented  {fild st0, qword [rsp+0x20]} */;\n                                /* unimplemented  {fmulp st1, st0} */;\n                                /* unimplemented  {fmulp st1, st0} */;\n                                /* unimplemented  {fsub st2, st0} */;\n                                top_40 = (top_33 - 1);\n                                /* unimplemented  {fld st0, qword [rsp+0x10]} */;\n                                if (rbp_4 > 4)\n                                {\n                                    goto label_404168;\n                                }\n                                switch (rbp_4)\n                                {\n                                    case 0:\n                                    {\n                                        /* unimplemented  {fstp st2, st0} */;\n                                        /* unimplemented  {fstp st2, st0} */;\n                                        top_95 = (top_40 + 1);\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        /* unimplemented  {fxch st0, st2} */;\n                                        /* unimplemented  {fxch st0, st2} */;\n                                        goto label_403a1f;\n                                    }\n                                    case 1:\n                                    {\n                                        /* unimplemented  {fstp st2, st0} */;\n                                        /* unimplemented  {fstp st2, st0} */;\n                                        top_95 = (top_40 + 1);\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        /* unimplemented  {fxch st0, st2} */;\n                                        /* unimplemented  {fxch st0, st2} */;\n                                        goto label_403c10;\n                                    }\n                                    case 2:\n                                    {\n                                        /* unimplemented  {fstp st2, st0} */;\n                                        /* unimplemented  {fstp st2, st0} */;\n                                        top_95 = (top_40 + 1);\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        goto label_403b7e;\n                                    }\n                                    case 3:\n                                    {\n                                        /* unimplemented  {fxch st0, st3} */;\n                                        /* unimplemented  {fxch st0, st3} */;\n                                        uint16_t x87control_16;\n                                        uint16_t x87status_25;\n                                        x87control_16 = __fldcw_memmem16(rsp_1[0x13]);\n                                        *(rsp_1 + 0x20) = /* *(rsp_1 + 0x20) = int.q(unimplemented  {fistp qword [rsp+0x20], st0}) */;\n                                        /* unimplemented  {fistp qword [rsp+0x20], st0} */;\n                                        uint16_t x87control_17;\n                                        uint16_t x87status_26;\n                                        x87control_17 = __fldcw_memmem16(*(rsp_1 + 0x4e));\n                                        /* unimplemented  {fild st0, qword [rsp+0x20]} */;\n                                        /* unimplemented  {faddp st1, st0} */;\n                                        /* unimplemented  {faddp st1, st0} */;\n                                        top_101 = (top_40 + 1);\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        goto label_403a62;\n                                    }\n                                    case 4:\n                                    {\n                                        /* unimplemented  {fstp st2, st0} */;\n                                        /* unimplemented  {fstp st2, st0} */;\n                                        top_95 = (top_40 + 1);\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        /* unimplemented  {fxch st0, st1} */;\n                                        goto label_403bd6;\n                                    }\n                                }\n                            }\n                        }\n                        if (((rsi_21 == -1 && (!cond:23_1)) || (rsi_21 != -1 && rsi_21 != 0)))\n                        {\n                            uint16_t x87status_34;\n                            int16_t temp0_4;\n                            temp0_4 = __fnstcw_memmem16(arg3);\n                            *(rsp_1 + 0x4e) = temp0_4;\n                            /* unimplemented  {fmul st1, st0} */;\n                            /* unimplemented  {fld st0, tword [rel &data_40c170]} */;\n                            /* unimplemented  {fld st0, st2} */;\n                            *rax_46[1] = (**(rsp_1 + 0x4e)[1] | 0xc);\n                            /* unimplemented  {fdiv st0, st1} */;\n                            rsp_1[0x13] = rax_46;\n                            uint16_t x87control_24;\n                            uint16_t x87status_35;\n                            x87control_24 = __fldcw_memmem16(rsp_1[0x13]);\n                            *(rsp_1 + 0x20) = /* *(rsp_1 + 0x20) = int.q(unimplemented  {fistp qword [rsp+0x20], st0}) */;\n                            /* unimplemented  {fistp qword [rsp+0x20], st0} */;\n                            uint16_t x87control_25;\n                            uint16_t x87status_36;\n                            x87control_25 = __fldcw_memmem16(*(rsp_1 + 0x4e));\n                            /* unimplemented  {fild st0, qword [rsp+0x20]} */;\n                            /* unimplemented  {fmulp st1, st0} */;\n                            /* unimplemented  {fmulp st1, st0} */;\n                            /* unimplemented  {fsub st2, st0} */;\n                            int16_t top_156 = (top_146 - 2);\n                            /* unimplemented  {fld st0, qword [rsp+0x10]} */;\n                            if (rbp_4 > 4)\n                            {\n                                /* unimplemented  {fstp st3, st0} */;\n                                /* unimplemented  {fstp st3, st0} */;\n                                /* unimplemented  {fstp st0, st0} */;\n                                /* unimplemented  {fstp st0, st0} */;\n                                /* unimplemented  {fstp st0, st0} */;\n                                /* unimplemented  {fstp st0, st0} */;\n                                goto label_40418c;\n                            }\n                            switch (rbp_4)\n                            {\n                                case 0:\n                                {\n                                    /* unimplemented  {fstp st2, st0} */;\n                                    /* unimplemented  {fstp st2, st0} */;\n                                    top_95 = (top_156 + 1);\n                                    /* unimplemented  {fxch st0, st1} */;\n                                    /* unimplemented  {fxch st0, st1} */;\n                                    /* unimplemented  {fxch st0, st2} */;\n                                    /* unimplemented  {fxch st0, st2} */;\n                                    rdi_15 = 1;\n                                    goto label_403a1f;\n                                }\n                                case 1:\n                                {\n                                    /* unimplemented  {fstp st2, st0} */;\n                                    /* unimplemented  {fstp st2, st0} */;\n                                    top_95 = (top_156 + 1);\n                                    /* unimplemented  {fxch st0, st1} */;\n                                    /* unimplemented  {fxch st0, st1} */;\n                                    /* unimplemented  {fxch st0, st2} */;\n                                    /* unimplemented  {fxch st0, st2} */;\n                                    rdi_15 = 1;\n                                    goto label_403c10;\n                                }\n                                case 2:\n                                {\n                                    /* unimplemented  {fstp st2, st0} */;\n                                    /* unimplemented  {fstp st2, st0} */;\n                                    top_95 = (top_156 + 1);\n                                    /* unimplemented  {fxch st0, st1} */;\n                                    /* unimplemented  {fxch st0, st1} */;\n                                    rdi_15 = 1;\n                                    goto label_403b7e;\n                                }\n                                case 3:\n                                {\n                                    /* unimplemented  {fxch st0, st3} */;\n                                    /* unimplemented  {fxch st0, st3} */;\n                                    uint16_t x87control_18;\n                                    uint16_t x87status_27;\n                                    x87control_18 = __fldcw_memmem16(rsp_1[0x13]);\n                                    *(rsp_1 + 0x20) = /* *(rsp_1 + 0x20) = int.q(unimplemented  {fistp qword [rsp+0x20], st0}) */;\n                                    /* unimplemented  {fistp qword [rsp+0x20], st0} */;\n                                    uint16_t x87control_19;\n                                    uint16_t x87status_28;\n                                    x87control_19 = __fldcw_memmem16(*(rsp_1 + 0x4e));\n                                    /* unimplemented  {fild st0, qword [rsp+0x20]} */;\n                                    /* unimplemented  {faddp st1, st0} */;\n                                    /* unimplemented  {faddp st1, st0} */;\n                                    top_101 = (top_156 + 1);\n                                    /* unimplemented  {fxch st0, st1} */;\n                                    /* unimplemented  {fxch st0, st1} */;\n                                label_403c5d:\n                                    /* unimplemented  {fdivp st1, st0} */;\n                                    /* unimplemented  {fdivp st1, st0} */;\n                                    top_104 = (top_101 + 1);\n                                    goto label_403a73;\n                                }\n                                case 4:\n                                {\n                                    /* unimplemented  {fstp st2, st0} */;\n                                    /* unimplemented  {fstp st2, st0} */;\n                                    top_95 = (top_156 + 1);\n                                    /* unimplemented  {fxch st0, st1} */;\n                                    /* unimplemented  {fxch st0, st1} */;\n                                    rdi_15 = 1;\n                                    goto label_403bd6;\n                                }\n                            }\n                        }\n                    }\n                    else if (r14_3 <= 0x12)\n                    {\n                        goto label_4032ac;\n                    }\n                }\n                if (((((((!cond:5_1) && (!cond:6_1)) && rbx_9 == 0) && (rax_39 + r14_3) > 0x12) || cond:5_1) || ((!cond:5_1) && cond:6_1)))\n                {\n                    if (data_6103a8 == 3)\n                    {\n                        /* unimplemented  {fstp st0, st0} */;\n                        /* unimplemented  {fstp st0, st0} */;\n                    }\n                    else\n                    {\n                        int32_t rbx_15 = data_61025c;\n                        *rsp_1 = /* *rsp_1 = unimplemented  {fstp tword [rsp], st0} */;\n                        /* unimplemented  {fstp tword [rsp], st0} */;\n                        if (r14_3 == 0)\n                        {\n                            /* unimplemented  {fld st0, tword [rsp]} */;\n                            *(rsp_1 - 0x10) = /* *(rsp_1 - 0x10) = unimplemented  {fstp tword [rsp], st0} */;\n                            /* unimplemented  {fstp tword [rsp], st0} */;\n                            error(rbx_15, 0, dcgettext(nullptr, \"value too large to be printed: '\u2026\", 5));\n                            *(rsp_1 - 0x10);\n                            *(rsp_1 - 8);\n                        }\n                        else\n                        {\n                            /* unimplemented  {fld st0, tword [rsp]} */;\n                            *(rsp_1 - 0x10) = /* *(rsp_1 - 0x10) = unimplemented  {fstp tword [rsp], st0} */;\n                            /* unimplemented  {fstp tword [rsp], st0} */;\n                            error(rbx_15, 0, dcgettext(nullptr, \"value/precision too large to be \u2026\", 5), r14_3);\n                            *(rsp_1 - 0x10);\n                            *(rsp_1 - 8);\n                        }\n                    }\n                }\n            }\n            rbx_1 = 0;\n            fputs_unlocked(r12_1, stdout);\n            break;\n        }\n    }\n    *(rsp_1 + 0x138);\n    *(rsp_1 + 0x140);\n    *(rsp_1 + 0x148);\n    *(rsp_1 + 0x150);\n    *(rsp_1 + 0x158);\n    *(rsp_1 + 0x160);\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_4041a0",
            "funcStartAddr": "0x4041a0",
            "funcEndAddr": "0x40435e",
            "decompiledFuncCode": "uint64_t sub_4041a0(char* arg1, char arg2)\n{\n    char* r15 = arg1;\n    int64_t r14 = 0;\n    int32_t r12 = 1;\n    int32_t rax = data_610254;\n    uint16_t x87control;\n    while (true)\n    {\n        r14 = (r14 + 1);\n        char rbp_1 = *r15;\n        char* rbx_1;\n        if (rax != 0x80)\n        {\n            if (rbp_1 == rax)\n            {\n                rbx_1 = r15;\n            }\n            else\n            {\n                if (rbp_1 == 0)\n                {\n                    break;\n                }\n                rbx_1 = r15;\n                int32_t rdx_2;\n                do\n                {\n                    rbx_1 = &rbx_1[1];\n                    rdx_2 = *rbx_1;\n                    if (rdx_2 == 0)\n                    {\n                        break;\n                    }\n                } while (rdx_2 != rax);\n                if (rdx_2 == 0)\n                {\n                    break;\n                }\n            }\n        }\n        else\n        {\n            if (rbp_1 == 0)\n            {\n                break;\n            }\n            rbx_1 = r15;\n            uint16_t* rax_5 = *__ctype_b_loc();\n            while ((!((rax_5[rbp_1] & 1) == 0 && rbp_1 != 0xa)))\n            {\n                rbx_1 = &rbx_1[1];\n                rbp_1 = *rbx_1;\n                if (rbp_1 == 0)\n                {\n                    break;\n                }\n            }\n            if ((!((*(rax_5 + (rbp_1 << 1)) & 1) == 0 && rbp_1 != 0xa)))\n            {\n                break;\n            }\n            char rdx_5 = *rbx_1;\n            if (rdx_5 == 0)\n            {\n                break;\n            }\n            while ((rax_5[rdx_5] & 1) == 0)\n            {\n                if (rdx_5 == 0xa)\n                {\n                    break;\n                }\n                rbx_1 = &rbx_1[1];\n                rdx_5 = *rbx_1;\n                if (rdx_5 == 0)\n                {\n                    break;\n                }\n            }\n            if ((*(rax_5 + (rdx_5 << 1)) & 1) == 0)\n            {\n                break;\n            }\n            rbp_1 = *rbx_1;\n        }\n        if ((((rax != 0x80 && rbp_1 == rax) || rax == 0x80) && rbp_1 == 0))\n        {\n            break;\n        }\n        *rbx_1 = 0;\n        char rax_6;\n        rax_6 = sub_402c00(r15, r14, x87control);\n        uint64_t* const rdi_3 = stdout;\n        char rsi_3 = 0x20;\n        rax = data_610254;\n        if (rax_6 == 0)\n        {\n            r12 = 0;\n        }\n        char* rdx_6 = stdout[5];\n        if (rax != 0x80)\n        {\n            rsi_3 = rax;\n        }\n        if (rdx_6 >= stdout[6])\n        {\n            __overflow(rdi_3, rsi_3);\n            rax = data_610254;\n        }\n        else\n        {\n            stdout[5] = &rdx_6[1];\n            *rdx_6 = rsi_3;\n        }\n        r15 = &rbx_1[1];\n    }\n    if (sub_402c00(r15, r14, x87control) == 0)\n    {\n        r12 = 0;\n    }\n    if (arg2 != 0)\n    {\n        uint64_t* const rdi_1 = stdout;\n        char rdx_3 = data_610250;\n        char* rax_2 = stdout[5];\n        if (rax_2 >= stdout[6])\n        {\n            __overflow(rdi_1, rdx_3);\n        }\n        else\n        {\n            stdout[5] = &rax_2[1];\n            *rax_2 = rdx_3;\n        }\n    }\n    return r12;\n}\n\n"
        },
        {
            "funcName": "sub_404360",
            "funcStartAddr": "0x404360",
            "funcEndAddr": "0x404a0d",
            "decompiledFuncCode": "int64_t sub_404360(int32_t arg1) __noreturn\n{\n    int64_t rbx = data_6103d8;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbx);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [OPTION]... [NUMBER]..\u2026\", 5), rbx);\n        fputs_unlocked(dcgettext(nullptr, \"Reformat NUMBER(s), or the numbe\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nMandatory arguments to long op\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --debug          print war\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -d, --delimiter=X    use X ins\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --field=FIELDS   replace t\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --format=FORMAT  use print\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --from=UNIT      auto-scal\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --from-unit=N    specify t\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --grouping       use local\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --header[=N]     print (wi\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --invalid=MODE   failure m\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --padding=N      pad the o\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --round=METHOD   use METHO\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --suffix=SUFFIX  add SUFFI\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --to=UNIT        auto-scal\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --to-unit=N      the outpu\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -z, --zero-terminated    line \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nUNIT options:\\n\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  none       no auto-scaling is \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  auto       accept optional sin\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  si         accept optional sin\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  iec        accept optional sin\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  iec-i      accept optional two\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nFIELDS supports cut(1) style f\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nFORMAT must be suitable for pr\u2026\", 5), stdout);\n        __printf_chk(1, dcgettext(nullptr, \"\\nExit status is 0 if all input \u2026\", 5), data_6103d8);\n        int64_t rbx_2 = data_6103d8;\n        char* rax_33;\n        int64_t rdx_3;\n        rax_33 = dcgettext(nullptr, \"\\nExamples:\\n  $ %s --to=si 1000\u2026\", 5);\n        __printf_chk(1, rax_33, rbx_2, rbx_2, rbx_2, rbx_2, rbx_2, rbx_2, rbx_2, rbx_2, rbx_2, rdx_3);\n        void* const var_88 = &data_40a123;\n        void* const var_78_1 = \"coreutils\";\n        void* const var_70_1 = \"Multi-call invocation\";\n        void* const var_68_1 = \"sha224sum\";\n        void* const var_60_1 = \"sha2 utilities\";\n        void* const var_58_1 = \"sha256sum\";\n        void* const var_50_1 = \"sha2 utilities\";\n        void* const var_48_1 = \"sha384sum\";\n        void* const var_40_1 = \"sha2 utilities\";\n        void* const var_38_1 = \"sha512sum\";\n        void* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        void* const* rax_35 = &var_88;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_35 = &rax_35[2];\n            void* const rdi_29 = *rax_35;\n            c_1 = false;\n            z_1 = (rdi_29 & rdi_29) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            void* const rsi_31 = \"numfmt\";\n            int64_t rcx_2 = 7;\n            while (rcx_2 != 0)\n            {\n                char temp0_1 = *rsi_31;\n                char temp1_1 = *rdi_29;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_31 = (rsi_31 + 1);\n                rdi_29 = (rdi_29 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        void* const rbx_3 = rax_35[1];\n        char* rax_46;\n        int32_t rax_47;\n        void* const r12_1;\n        if (rbx_3 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_8;\n            uint64_t r8_3;\n            ssize_t r9_3;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_46 = setlocale(5, nullptr, rdx_8, rcx_5, r8_3, r9_3, var_88, \"test invocation\");\n            if (rax_46 != 0)\n            {\n                rax_47 = strncmp(rax_46, &data_40a1a7, 3);\n                if (rax_47 != 0)\n                {\n                    rbx_3 = \"numfmt\";\n                }\n            }\n            if ((rax_46 == 0 || (rax_46 != 0 && rax_47 == 0)))\n            {\n                rbx_3 = \"numfmt\";\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"numfmt\");\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_6;\n            uint64_t r8_2;\n            ssize_t r9_2;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_38 = setlocale(5, nullptr, rdx_6, rcx_3, r8_2, r9_2, var_88, \"test invocation\");\n            if (rax_38 == 0)\n            {\n                goto label_404900;\n            }\n            if (strncmp(rax_38, &data_40a1a7, 3) == 0)\n            {\n                goto label_404900;\n            }\n        }\n        if ((((rbx_3 == 0 && rax_46 != 0) && rax_47 != 0) || rbx_3 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), \"numfmt\");\n        label_404900:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"numfmt\");\n            if (rbx_3 != \"numfmt\")\n            {\n                r12_1 = &data_40dc7c[0x1b];\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbx_3, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404a10",
            "funcStartAddr": "0x404a10",
            "funcEndAddr": "0x404a22",
            "decompiledFuncCode": "uint64_t sub_404a10(int32_t* arg1, int32_t* arg2)\n{\n    uint64_t rax = 0xffffffff;\n    int32_t rdx = *arg2;\n    int32_t temp0 = *arg1;\n    bool cond:0 = temp0 > rdx;\n    if (temp0 >= rdx)\n    {\n        rax = cond:0;\n        rax = rax;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404a30",
            "funcStartAddr": "0x404a30",
            "funcEndAddr": "0x404afc",
            "decompiledFuncCode": "int64_t* sub_404a30(int64_t arg1, int64_t arg2)\n{\n    int64_t rdx = data_610568;\n    int64_t rcx = data_6103c0;\n    void* rax = data_610560;\n    if (rdx == rcx)\n    {\n        uint64_t rsi_1;\n        if (rax != 0)\n        {\n            if (rcx > 0x555555555555554)\n            {\n            label_404ae7:\n                sub_407da0();\n                /* no return */\n            }\n            rcx = ((rcx + (rcx >> 1)) + 1);\n            rsi_1 = (rcx << 4);\n            goto label_404aa9;\n        }\n        if (rcx != 0)\n        {\n            int64_t rdx_4;\n            rdx_4 = (rcx >> 0x3c) != 0;\n            rsi_1 = (rcx << 4);\n            if (rsi_1 < 0)\n            {\n                goto label_404ae7;\n            }\n            if (rdx_4 == 0)\n            {\n                goto label_404aa9;\n            }\n            goto label_404ae7;\n        }\n        rsi_1 = 0x80;\n        rcx = 8;\n    label_404aa9:\n        data_6103c0 = rcx;\n        rax = sub_407bb0(rax, rsi_1);\n        rdx = data_610568;\n        data_610560 = rax;\n    }\n    int64_t* rax_1 = (rax + (rdx << 4));\n    *rax_1 = arg1;\n    rax_1[1] = arg2;\n    data_610568 = (rdx + 1);\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_404b00",
            "funcStartAddr": "0x404b00",
            "funcEndAddr": "0x40509e",
            "decompiledFuncCode": "int64_t* sub_404b00(char* arg1, int32_t arg2)\n{\n    char* r15 = arg1;\n    bool c = false;\n    bool z = (arg2 & 1) == 0;\n    char var_3c = arg2;\n    int32_t var_40 = (arg2 & 1);\n    int32_t rax_1;\n    void* rcx;\n    char rbx;\n    char* rdi_1;\n    if ((!z))\n    {\n        void* const rdi = &data_40dc7a;\n        rcx = 2;\n        char* rsi = r15;\n        while (rcx != 0)\n        {\n            char temp1_1 = *rsi;\n            char temp2_1 = *rdi;\n            c = temp1_1 < temp2_1;\n            z = temp1_1 == temp2_1;\n            rsi = &rsi[1];\n            rdi = (rdi + 1);\n            rcx = (rcx - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rax_1 = ((!z) && (!c));\n        rax_1 = (rax_1 - 0);\n        if (rax_1 == 0)\n        {\n            r15 = &r15[1];\n            rdi_1 = 1;\n            rbx = 1;\n        }\n    }\n    if ((z || ((!z) && rax_1 != 0)))\n    {\n        rdi_1 = nullptr;\n        rbx = 0;\n    }\n    char rbp = rbx;\n    char r12 = 0;\n    char r14 = 0;\n    char* var_50 = 1;\n    char* rax_16;\n    while (true)\n    {\n        char r13_1 = *r15;\n        if (r13_1 == 0x2d)\n        {\n            if (rbp != 0)\n            {\n                if ((var_3c & 4) == 0)\n                {\n                    rax_16 = dcgettext(nullptr, \"invalid field range\", 5);\n                }\n                else\n                {\n                    rax_16 = dcgettext(nullptr, \"invalid byte or character range\", 5);\n                }\n                break;\n            }\n            rcx = rdi_1 == 0;\n            rcx = (rcx & rbx);\n            r12 = rcx;\n            if (rcx == 0)\n            {\n                if (rbx != 0)\n                {\n                    var_50 = rdi_1;\n                    rbp = rbx;\n                    rdi_1 = nullptr;\n                }\n                else\n                {\n                    r12 = rbx;\n                    rdi_1 = nullptr;\n                    rbp = 1;\n                    var_50 = 1;\n                }\n                goto label_404bde;\n            }\n            if ((var_3c & 4) != 0)\n            {\n                rax_16 = dcgettext(nullptr, \"byte/character positions are num\u2026\", 5);\n                break;\n            }\n            goto label_404fdf;\n        }\n        if ((r13_1 != 0x2c && ((*__ctype_b_loc()[r13_1] & 1) == 0 && r13_1 != 0)))\n        {\n            int32_t rax_9 = r13_1;\n            if ((rax_9 - 0x30) > 9)\n            {\n                int64_t rax_23 = sub_407590(r15);\n                char* rax_24;\n                if ((var_3c & 4) == 0)\n                {\n                    rax_24 = dcgettext(nullptr, \"invalid field value %s\", 5);\n                }\n                else\n                {\n                    rax_24 = dcgettext(nullptr, \"invalid byte/character position \u2026\", 5);\n                }\n                error(0, 0, rax_24, rax_23);\n                sub_404360(1);\n                /* no return */\n            }\n            if ((r12 == 0 || (r12 != 0 && data_6103b8 == 0)))\n            {\n                data_6103b8 = r15;\n            }\n            bool cond:5_1 = rbp != 0;\n            if (rbp == 0)\n            {\n                rbx = 1;\n            }\n            if (cond:5_1)\n            {\n                r14 = rbp;\n            }\n            char* rax_12;\n            if (rdi_1 <= 0x1999999999999999)\n            {\n                rax_12 = ((rax_9 - 0x30) + (rdi_1 * 0xa));\n                if ((rax_12 >= rdi_1 && rax_12 != -1))\n                {\n                    rdi_1 = rax_12;\n                    r12 = 1;\n                }\n            }\n            if (((rdi_1 > 0x1999999999999999 || (rdi_1 <= 0x1999999999999999 && rax_12 < rdi_1)) || ((rdi_1 <= 0x1999999999999999 && rax_12 >= rdi_1) && rax_12 == -1)))\n            {\n                int64_t rbx_6 = data_6103b8;\n                strspn(rbx_6, \"0123456789\");\n                char* rax_19 = sub_407de0(rbx_6);\n                int64_t rax_20 = sub_407590(rax_19);\n                char* rax_21;\n                if ((var_3c & 4) == 0)\n                {\n                    rax_21 = dcgettext(nullptr, \"field number %s is too large\", 5);\n                }\n                else\n                {\n                    rax_21 = dcgettext(nullptr, \"byte/character offset %s is too \u2026\", 5);\n                }\n                error(0, 0, rax_21, rax_20);\n                free(rax_19);\n                sub_404360(1);\n                /* no return */\n            }\n            goto label_404bde;\n        }\n        char* rsi_10;\n        if (rbp == 0)\n        {\n            if (rdi_1 == 0)\n            {\n                if ((var_3c & 4) != 0)\n                {\n                    rax_16 = dcgettext(rdi_1, \"byte/character positions are num\u2026\", 5);\n                    break;\n                }\n            label_404fdf:\n                rax_16 = dcgettext(nullptr, \"fields are numbered from 1\", 5);\n                break;\n            }\n            sub_404a30(rdi_1, rdi_1);\n            if (*r15 == 0)\n            {\n            label_404c47:\n                int64_t rsi_2 = data_610568;\n                if (rsi_2 != 0)\n                {\n                    int64_t r15_1 = 0;\n                    qsort(data_610560, rsi_2, 0x10, sub_404a10);\n                    int64_t rbx_1 = data_610568;\n                    int64_t r14_1 = data_610560;\n                    while (r15_1 < rbx_1)\n                    {\n                        do\n                        {\n                            r15_1 = (r15_1 + 1);\n                            if (r15_1 >= rbx_1)\n                            {\n                                break;\n                            }\n                            int64_t rbp_2 = (r15_1 << 4);\n                            int64_t r12_1 = (rbp_2 - 0x10);\n                            int64_t rdi_4 = (r14_1 + rbp_2);\n                            void* rdx_1 = (r14_1 + r12_1);\n                            int64_t rax_5 = *(rdx_1 + 8);\n                            if (rax_5 < *rdi_4)\n                            {\n                                break;\n                            }\n                            int64_t r13_2 = (rbp_2 + 0x10);\n                            do\n                            {\n                                if (*(rdi_4 + 8) >= rax_5)\n                                {\n                                    rax_5 = *(rdi_4 + 8);\n                                }\n                                *(rdx_1 + 8) = rax_5;\n                                memmove(rdi_4, (r14_1 + r13_2), (((rbx_1 - r15_1) << 4) - 0x10));\n                                r14_1 = data_610560;\n                                rbx_1 = (data_610568 - 1);\n                                data_610568 = rbx_1;\n                                if (rbx_1 <= r15_1)\n                                {\n                                    break;\n                                }\n                                rdx_1 = (r14_1 + r12_1);\n                                rdi_4 = (r14_1 + rbp_2);\n                                rax_5 = *(rdx_1 + 8);\n                            } while (*rdi_4 <= rax_5);\n                            if (rbx_1 <= r15_1)\n                            {\n                                break;\n                            }\n                        } while (r15_1 < rbx_1);\n                        if (r15_1 < rbx_1)\n                        {\n                            break;\n                        }\n                    }\n                    if ((var_3c & 2) != 0)\n                    {\n                        data_610560 = 0;\n                        int64_t rax_13 = *r14_1;\n                        data_610568 = 0;\n                        data_6103c0 = 0;\n                        if (rax_13 > 1)\n                        {\n                            sub_404a30(1, (rax_13 - 1));\n                        }\n                        int64_t* rbp_3 = (r14_1 + 0x10);\n                        int64_t r12_4 = ((rbx_1 << 4) + r14_1);\n                        if (rbx_1 > 1)\n                        {\n                            do\n                            {\n                                int64_t rsi_7 = *rbp_3;\n                                int64_t rdi_7 = (rbp_3[-1] + 1);\n                                if (rdi_7 != rsi_7)\n                                {\n                                    sub_404a30(rdi_7, (rsi_7 - 1));\n                                }\n                                rbp_3 = &rbp_3[2];\n                            } while (r12_4 != rbp_3);\n                        }\n                        int64_t rax_15 = *((r14_1 + (rbx_1 << 4)) - 8);\n                        if (rax_15 != -1)\n                        {\n                            sub_404a30((rax_15 + 1), -1);\n                        }\n                        free(r14_1);\n                        rbx_1 = data_610568;\n                        r14_1 = data_610560;\n                    }\n                    data_610568 = (rbx_1 + 1);\n                    int64_t rax_7 = sub_407bb0(r14_1, ((rbx_1 + 1) << 4));\n                    int64_t rdx_3 = data_610568;\n                    data_610560 = rax_7;\n                    *((rax_7 + (rdx_3 << 4)) - 8) = -1;\n                    *((rax_7 + (rdx_3 << 4)) - 0x10) = -1;\n                    return ((rax_7 + (rdx_3 << 4)) - 0x10);\n                }\n                if ((var_3c & 4) != 0)\n                {\n                    rax_16 = dcgettext(nullptr, \"missing list of byte/character p\u2026\", 5);\n                    break;\n                }\n                rsi_10 = \"missing list of fields\";\n                goto label_404f06;\n            }\n        label_404bd2:\n            rdi_1 = nullptr;\n            r12 = 0;\n            rbp = 0;\n            r14 = 0;\n            rbx = 0;\n        label_404bde:\n            r15 = &r15[1];\n        }\n        else\n        {\n            if (((rbx != 0 && r14 != 0) || (rbx == 0 && r14 != 0)))\n            {\n                if (var_50 > rdi_1)\n                {\n                    rsi_10 = \"invalid decreasing range\";\n                    goto label_404f06;\n                }\n                sub_404a30(var_50, rdi_1);\n            }\n            if ((rbx == 0 && r14 == 0))\n            {\n                if (var_40 == 0)\n                {\n                    rsi_10 = \"invalid range with no endpoint: \u2026\";\n                label_404f06:\n                    rax_16 = dcgettext(nullptr, rsi_10, 5);\n                    break;\n                }\n                var_50 = 1;\n            }\n            if (((rbx != 0 && r14 == 0) || (rbx == 0 && r14 == 0)))\n            {\n                sub_404a30(var_50, -1);\n            }\n            if ((((rbx != 0 && r14 == 0) || (rbx == 0 && r14 == 0)) || (((rbx != 0 && r14 != 0) || (rbx == 0 && r14 != 0)) && var_50 <= rdi_1)))\n            {\n                if (*r15 != 0)\n                {\n                    goto label_404bd2;\n                }\n                goto label_404c47;\n            }\n        }\n    }\n    error(0, 0, rax_16);\n    sub_404360(1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4050a0",
            "funcStartAddr": "0x4050a0",
            "funcEndAddr": "0x4050d6",
            "decompiledFuncCode": "int64_t sub_4050a0()\n{\n    int64_t rdi = data_610560;\n    data_610568 = 0;\n    data_6103c0 = 0;\n    int64_t rax = free(rdi);\n    data_610560 = 0;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4050e0",
            "funcStartAddr": "0x4050e0",
            "funcEndAddr": "0x4050ea",
            "decompiledFuncCode": "int64_t sub_4050e0() __noreturn\n{\n    /* tailcall */\n    return sub_404360(1);\n}\n\n"
        },
        {
            "funcName": "sub_4050f0",
            "funcStartAddr": "0x4050f0",
            "funcEndAddr": "0x405206",
            "decompiledFuncCode": "int64_t sub_4050f0(char* arg1, int64_t* arg2, int64_t arg3, uint64_t arg4)\n{\n    int64_t rbp = arg3;\n    uint64_t rax = strlen(arg1);\n    char* r14 = *arg2;\n    int64_t var_58 = -1;\n    if (r14 != 0)\n    {\n        char var_41_1 = 0;\n        int64_t rbx_1 = 0;\n        while (true)\n        {\n            if (strncmp(r14, arg1, rax) == 0)\n            {\n                if (strlen(r14) == rax)\n                {\n                    var_58 = rbx_1;\n                    break;\n                }\n                if (var_58 == -1)\n                {\n                    var_58 = rbx_1;\n                    rbx_1 = (rbx_1 + 1);\n                    rbp = (rbp + arg4);\n                    r14 = arg2[rbx_1];\n                    if (r14 != 0)\n                    {\n                        continue;\n                    }\n                    goto label_4051cd;\n                }\n                if (arg3 == 0)\n                {\n                    var_41_1 = 1;\n                }\n                else\n                {\n                    char rax_3 = var_41_1;\n                    if (memcmp(((var_58 * arg4) + arg3), rbp, arg4) != 0)\n                    {\n                        rax_3 = 1;\n                    }\n                    var_41_1 = rax_3;\n                }\n            }\n            rbx_1 = (rbx_1 + 1);\n            rbp = (rbp + arg4);\n            r14 = arg2[rbx_1];\n            if (r14 == 0)\n            {\n            label_4051cd:\n                int64_t rax_6 = -2;\n                if (var_41_1 == 0)\n                {\n                    rax_6 = var_58;\n                }\n                var_58 = rax_6;\n                break;\n            }\n        }\n    }\n    return var_58;\n}\n\n"
        },
        {
            "funcName": "sub_405210",
            "funcStartAddr": "0x405210",
            "funcEndAddr": "0x405281",
            "decompiledFuncCode": "int64_t sub_405210(uint64_t arg1, uint64_t arg2, int64_t arg3)\n{\n    char* rbx;\n    if (arg3 == -1)\n    {\n        rbx = dcgettext(nullptr, \"invalid argument %s for %s\", 5);\n    }\n    else\n    {\n        rbx = dcgettext(nullptr, \"ambiguous argument %s for %s\", 5);\n    }\n    /* tailcall */\n    return error(0, 0, rbx, sub_407260(0, 8, arg2), sub_407570(1, arg1));\n}\n\n"
        },
        {
            "funcName": "sub_405290",
            "funcStartAddr": "0x405290",
            "funcEndAddr": "0x4053a8",
            "decompiledFuncCode": "char* sub_405290(int64_t* arg1, int64_t arg2, uint64_t arg3)\n{\n    int64_t r14 = 0;\n    int64_t rbp = arg2;\n    int64_t rbx = 0;\n    fputs_unlocked(dcgettext(nullptr, \"Valid arguments are:\", 5), stderr);\n    int64_t r12 = *arg1;\n    if (r12 != 0)\n    {\n        do\n        {\n            if ((rbx != 0 && memcmp(r14, rbp, arg3) == 0))\n            {\n                rbx = (rbx + 1);\n                rbp = (rbp + arg3);\n                __fprintf_chk(stderr, 1, \", %s\", sub_407590(r12));\n                r12 = arg1[rbx];\n                if (r12 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = (rbx + 1);\n            r14 = rbp;\n            rbp = (rbp + arg3);\n            __fprintf_chk(stderr, 1, \"\\n  - %s\", sub_407590(r12));\n            r12 = arg1[rbx];\n        } while (r12 != 0);\n    }\n    uint64_t* const rdi_6 = stderr;\n    char* rax_6 = stderr[5];\n    if (rax_6 >= stderr[6])\n    {\n        /* tailcall */\n        return __overflow(rdi_6, 0xa);\n    }\n    stderr[5] = &rax_6[1];\n    *rax_6 = 0xa;\n    return rax_6;\n}\n\n"
        },
        {
            "funcName": "sub_4053b0",
            "funcStartAddr": "0x4053b0",
            "funcEndAddr": "0x405420",
            "decompiledFuncCode": "int64_t sub_4053b0(int64_t arg1, char* arg2, int64_t* arg3, int64_t arg4, \n    uint64_t arg5, int64_t arg6)\n{\n    int64_t rax = sub_4050f0(arg2, arg3, arg4, arg5);\n    if (rax < 0)\n    {\n        sub_405210(arg1, arg2, rax);\n        sub_405290(arg3, arg4, arg5);\n        arg6();\n        rax = -1;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405420",
            "funcStartAddr": "0x405420",
            "funcEndAddr": "0x40546d",
            "decompiledFuncCode": "int64_t sub_405420(int64_t arg1, int64_t* arg2, int64_t arg3, uint64_t arg4)\n{\n    int64_t r14 = *arg2;\n    if (r14 != 0)\n    {\n        void* rbx_1 = &arg2[1];\n        int64_t rbp_1 = arg3;\n        do\n        {\n            if (memcmp(arg1, rbp_1, arg4) == 0)\n            {\n                break;\n            }\n            r14 = *rbx_1;\n            rbp_1 = (rbp_1 + arg4);\n            rbx_1 = (rbx_1 + 8);\n        } while (r14 != 0);\n    }\n    return r14;\n}\n\n"
        },
        {
            "funcName": "sub_405470",
            "funcStartAddr": "0x405470",
            "funcEndAddr": "0x405478",
            "decompiledFuncCode": "int64_t sub_405470(int64_t arg1)\n{\n    data_6103d0 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_405480",
            "funcStartAddr": "0x405480",
            "funcEndAddr": "0x405488",
            "decompiledFuncCode": "int64_t sub_405480(char arg1)\n{\n    data_6103c8 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_405490",
            "funcStartAddr": "0x405490",
            "funcEndAddr": "0x40552e",
            "decompiledFuncCode": "void sub_405490(void* arg1)\n{\n    int32_t rax = sub_4097e0(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_6103c8 == 0 || (data_6103c8 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_6103d0;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_4073e0(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_6103c8 != 0) && *rax_1 == 0x20)) && sub_4097e0(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_610290);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_405530",
            "funcStartAddr": "0x405530",
            "funcEndAddr": "0x4058cb",
            "decompiledFuncCode": "uint64_t sub_405530(char* arg1, char* arg2, int64_t arg3, uint64_t* arg4, \n    int32_t arg5, int32_t arg6)\n{\n    char* var_50 = arg1;\n    uint64_t rax = strlen(arg1);\n    uint64_t r14 = rax;\n    wchar_t* var_68_1;\n    uint64_t rax_6;\n    uint64_t rax_7;\n    wchar_t* rax_9;\n    uint64_t rdx;\n    char* r12_1;\n    uint64_t r13_3;\n    uint64_t r15_1;\n    if ((arg6 & 2) == 0)\n    {\n        rax_6 = __ctype_get_mb_cur_max();\n        if (rax_6 > 1)\n        {\n            rax_7 = mbstowcs(nullptr, var_50, 0);\n            if (rax_7 != -1)\n            {\n                uint64_t r15_3 = (rax_7 + 1);\n                uint64_t rax_8 = (r15_3 << 2);\n                rax_9 = malloc(rax_8);\n                var_68_1 = rax_9;\n                if (rax_9 == 0)\n                {\n                    r15_1 = r14;\n                    r12_1 = nullptr;\n                    if ((arg6 & 1) != 0)\n                    {\n                        goto label_405576;\n                    }\n                }\n                else\n                {\n                    if (mbstowcs(var_68_1, var_50, r15_3) == 0)\n                    {\n                        r15_1 = r14;\n                        r12_1 = nullptr;\n                        goto label_405576;\n                    }\n                    *((var_68_1 + rax_8) - 4) = 0;\n                    int32_t rdi_5 = *var_68_1;\n                    wchar_t* rdx_9 = var_68_1;\n                    uint64_t var_48_1;\n                    if (rdi_5 == 0)\n                    {\n                        r15_1 = wcswidth(var_68_1);\n                    }\n                    else\n                    {\n                        var_48_1 = 0;\n                        do\n                        {\n                            if (iswprint(rdi_5) == 0)\n                            {\n                                *rdx_9 = 0xfffd;\n                                var_48_1 = 1;\n                            }\n                            rdx_9 = &rdx_9[1];\n                            rdi_5 = *rdx_9;\n                        } while (rdi_5 != 0);\n                        r15_1 = wcswidth(var_68_1);\n                    }\n                    uint64_t var_48_2;\n                    if ((rdi_5 == 0 || (rdi_5 != 0 && var_48_1 == 0)))\n                    {\n                        rdx = *arg4;\n                        if (rdx >= r15_1)\n                        {\n                            r12_1 = nullptr;\n                        }\n                        else\n                        {\n                            var_48_2 = (rax + 1);\n                        }\n                    }\n                    if ((rdi_5 != 0 && var_48_1 != 0))\n                    {\n                        var_48_2 = (wcstombs(nullptr, var_68_1, 0) + 1);\n                    }\n                    if ((((rdi_5 == 0 || (rdi_5 != 0 && var_48_1 == 0)) && rdx < r15_1) || (rdi_5 != 0 && var_48_1 != 0)))\n                    {\n                        char* rax_16 = malloc(var_48_2);\n                        r12_1 = rax_16;\n                        if (rax_16 != 0)\n                        {\n                            wchar_t* r14_1 = var_68_1;\n                            uint64_t rax_17 = *arg4;\n                            int32_t rdi_8 = *r14_1;\n                            if (rdi_8 == 0)\n                            {\n                                r14_1 = var_68_1;\n                                r15_1 = 0;\n                            }\n                            else\n                            {\n                                r15_1 = 0;\n                                do\n                                {\n                                    int32_t rax_20 = wcwidth(rdi_8);\n                                    int64_t rax_18;\n                                    if (rax_20 != 0xffffffff)\n                                    {\n                                        rax_18 = rax_20;\n                                    }\n                                    else\n                                    {\n                                        *r14_1 = 0xfffd;\n                                        rax_18 = 1;\n                                    }\n                                    uint64_t rax_19 = (rax_18 + r15_1);\n                                    if (rax_17 < rax_19)\n                                    {\n                                        break;\n                                    }\n                                    r14_1 = &r14_1[1];\n                                    rdi_8 = *r14_1;\n                                    r15_1 = rax_19;\n                                } while (rdi_8 != 0);\n                            }\n                            *r14_1 = 0;\n                            var_50 = r12_1;\n                            r14 = wcstombs(r12_1, var_68_1, var_48_2);\n                            goto label_405576;\n                        }\n                        if ((arg6 & 1) != 0)\n                        {\n                            goto label_405576;\n                        }\n                        r13_3 = -1;\n                        goto label_405652;\n                    }\n                }\n            }\n            if (((rax_7 == -1 && (arg6 & 1) == 0) || (rax_7 != -1 && rax_9 == 0)))\n            {\n                var_68_1 = nullptr;\n                r12_1 = nullptr;\n                r13_3 = -1;\n            label_405652:\n                free(var_68_1);\n                free(r12_1);\n                return r13_3;\n            }\n        }\n    }\n    uint64_t rax_1;\n    int32_t rsi;\n    if ((((arg6 & 2) != 0 || ((arg6 & 2) == 0 && rax_6 <= 1)) || ((((arg6 & 2) == 0 && rax_6 > 1) && rax_7 == -1) && (arg6 & 1) != 0)))\n    {\n        var_68_1 = nullptr;\n        r15_1 = r14;\n        r12_1 = nullptr;\n    label_405576:\n        rdx = *arg4;\n        if (rdx < r15_1)\n        {\n            r14 = rdx;\n            rax_1 = 0;\n        label_405588:\n            rsi = arg5;\n            *arg4 = rdx;\n            uint64_t r13_1;\n            if (rsi != 0)\n            {\n            label_405598:\n                r13_1 = 0;\n                if (rsi != 1)\n                {\n                    r13_1 = (rax_1 >> 1);\n                    rax_1 = ((rax_1 & 1) + r13_1);\n                }\n                goto label_4055ac;\n            }\n        label_40569d:\n            r13_1 = rax_1;\n            rax_1 = 0;\n        label_4055ac:\n            uint64_t r15_2 = (rax_1 + r14);\n            if ((arg6 & 4) != 0)\n            {\n                r15_2 = r14;\n                rax_1 = 0;\n            }\n            if ((arg6 & 8) != 0)\n            {\n                r13_1 = 0;\n            }\n            if (arg3 != 0)\n            {\n                void* rbp_2 = &arg2[(arg3 - 1)];\n                char* rdi = arg2;\n                if ((arg2 < rbp_2 && rax_1 != 0))\n                {\n                    do\n                    {\n                        rdi = &rdi[1];\n                        rdi[-1] = 0x20;\n                        if ((arg2 - rdi) == (-rax_1))\n                        {\n                            break;\n                        }\n                    } while (rbp_2 > rdi);\n                }\n                *rdi = 0;\n                uint64_t rdx_5 = (rbp_2 - rdi);\n                if (rdx_5 > r14)\n                {\n                    rdx_5 = r14;\n                }\n                char* rax_3 = mempcpy(rdi, var_50, rdx_5);\n                char* rdx_6 = rax_3;\n                if ((rbp_2 > rax_3 && r13_1 != 0))\n                {\n                    do\n                    {\n                        rdx_6 = &rdx_6[1];\n                        rdx_6[-1] = 0x20;\n                        if ((r13_1 - rdx_6) == (-rax_3))\n                        {\n                            break;\n                        }\n                    } while (rbp_2 > rdx_6);\n                }\n                *rdx_6 = 0;\n            }\n            r13_3 = (r13_1 + r15_2);\n            goto label_405652;\n        }\n    }\n    if ((((((((arg6 & 2) == 0 && rax_6 > 1) && rax_7 != -1) && rax_9 != 0) || (arg6 & 2) != 0) || ((arg6 & 2) == 0 && rax_6 <= 1)) || ((((arg6 & 2) == 0 && rax_6 > 1) && rax_7 == -1) && (arg6 & 1) != 0)))\n    {\n        if (r15_1 >= rdx)\n        {\n            rdx = r15_1;\n            rax_1 = 0;\n            goto label_405588;\n        }\n        rsi = arg5;\n        rax_1 = (rdx - r15_1);\n        *arg4 = r15_1;\n        if (rsi == 0)\n        {\n            goto label_40569d;\n        }\n        goto label_405598;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4058d0",
            "funcStartAddr": "0x4058d0",
            "funcEndAddr": "0x40596d",
            "decompiledFuncCode": "char* sub_4058d0(char* arg1, int64_t* arg2, int32_t arg3, int32_t arg4)\n{\n    char* r12 = nullptr;\n    uint64_t r13 = *arg2;\n    uint64_t rax = r13;\n    char* r14_1;\n    uint64_t rbx_1;\n    do\n    {\n        rbx_1 = (rax + 1);\n        char* rax_1 = realloc(r12, rbx_1);\n        r14_1 = rax_1;\n        if (rax_1 == 0)\n        {\n            free(r12);\n            break;\n        }\n        *arg2 = r13;\n        rax = sub_405530(arg1, rax_1, rbx_1, arg2, arg3, arg4);\n        if (rax == -1)\n        {\n            char* rdi_3 = r14_1;\n            r14_1 = nullptr;\n            free(rdi_3);\n            break;\n        }\n        r12 = r14_1;\n    } while (rbx_1 <= rax);\n    return r14_1;\n}\n\n"
        },
        {
            "funcName": "sub_405970",
            "funcStartAddr": "0x405970",
            "funcEndAddr": "0x405a09",
            "decompiledFuncCode": "char* sub_405970(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_40c3c8;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_6103d8 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405a10",
            "funcStartAddr": "0x405a10",
            "funcEndAddr": "0x405b02",
            "decompiledFuncCode": "char* sub_405a10(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_4098a0();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_405af1:\n                void* const rbx_1 = &data_40c3cc;\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_405af1;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_405af1;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_405af1;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_405af1;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_405af1;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_405af1;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_405af1;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_40c3d5;\n            if (cond:2_1)\n            {\n                rbx = &data_40c3d2;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_405af1;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_405af1;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_405af1;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_405af1;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_405af1;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_40c3d9;\n            if (cond:1_1)\n            {\n                rbx = &data_40c3ce;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_405b10",
            "funcStartAddr": "0x401b40",
            "funcEndAddr": "0x406d31",
            "decompiledFuncCode": "int64_t sub_405b10(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    char const* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n    label_405ba8:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_405f1c:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_405f64;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_405b10(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char const rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_405f7b;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_4060b5;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_405d05;\n                            }\n                            goto label_405ff0;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_4060b5;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_405ee0;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_405ee0:\n                            if (var_c0 == 0)\n                            {\n                                goto label_405eeb;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_405d47:\n                            if (var_5c == 0)\n                            {\n                                goto label_405d58;\n                            }\n                        label_405f10:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_405f18;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_40614b;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_40614b:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_40615a:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_405f1c;\n                            }\n                            goto label_405ee0;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_405ee0;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_405ee0;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_40614b;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_405ce6;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_405ce6:\n                            if (var_5c == 0)\n                            {\n                                goto label_405d05;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_405d05;\n                            }\n                            goto label_40615a;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_405cdd:\n                            if (r12_1 != 0)\n                            {\n                                goto label_405eeb;\n                            }\n                            goto label_405ce6;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_406110:\n                            rdx = r11_1 == 2;\n                        label_405d05:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_405e0c;\n                            }\n                            goto label_405d0f;\n                        }\n                        case 0x27:\n                        {\n                            goto label_405e8d;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_405e5d;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_405eba;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_406c4d;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_405e24;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_405cb9;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_4062b0;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_4062b0;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_406c00:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_405f64:\n                            rbx_1 = sub_405b10(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_405f7b:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_4060b5;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_406007;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_4060b5;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_405fd0:\n                                r13 = 0;\n                                goto label_405d8b;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_405d58:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_405d8b:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_405d95;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_405d95:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_405d9d;\n                            }\n                            case 9:\n                            {\n                                goto label_405f80;\n                            }\n                            case 0xa:\n                            {\n                                goto label_405ef8;\n                            }\n                            case 0xb:\n                            {\n                                goto label_405fe0;\n                            }\n                            case 0xc:\n                            {\n                                goto label_405fc0;\n                            }\n                            case 0xd:\n                            {\n                                goto label_405fa9;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_40630a;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_405f95;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_4062ea;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_4062d2;\n                            }\n                            case 0x27:\n                            {\n                                goto label_405e8d;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_405e5d;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_405eba;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_405cb9;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_4062b0:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_4060b0:\n                            var_b8 = 0;\n                        label_4060b5:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_406104:\n                                if (rdx == 0)\n                                {\n                                    goto label_406110;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_406601:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_405e24;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_405f1c;\n                                }\n                                r13 = var_98;\n                                goto label_405d9d;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_409760(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_405f1c;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_406601;\n                            }\n                            goto label_406104;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_405ff0:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_405f1c;\n                                }\n                                var_b8 = 0;\n                            label_406007:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_406052;\n                                    }\n                                    rax_8 = r10;\n                                label_40604a:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_406052:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_405e0c;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_406093;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_40604a;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_405e0c;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_4060b0;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_405fc5;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_405efd;\n                            }\n                            case 9:\n                            {\n                            label_405f80:\n                                rbp_3 = 0x74;\n                                goto label_405efd;\n                            }\n                            case 0xa:\n                            {\n                            label_405ef8:\n                                rbp_3 = 0x6e;\n                            label_405efd:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_405f10;\n                                }\n                                goto label_405d58;\n                            }\n                            case 0xb:\n                            {\n                            label_405fe0:\n                                rbp_3 = 0x76;\n                                goto label_405fc5;\n                            }\n                            case 0xc:\n                            {\n                            label_405fc0:\n                                rbp_3 = 0x66;\n                            label_405fc5:\n                                if (var_5c == 0)\n                                {\n                                    goto label_405fd0;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_405f18:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_405f1c;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_405fa9:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_405ee0;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_40630a:\n                                rbp_3 = 0x20;\n                                goto label_4062d2;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_405f95:\n                                rdx = 0;\n                            label_405eeb:\n                                r13 = 0;\n                                goto label_405d05;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_4062ea:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_405d05;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_405d0f:\n                                rax_8 = 0;\n                                goto label_405d11;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_4062d2:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_405d11;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_405e8d:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_405d05;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_406c4d;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_405e0c;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_405e5d:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_406c4d:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_405f1c;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_405e0c:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_405d47;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_405e24;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_405d05;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_4063f0:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_405d05;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_4063f0;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_4063f0;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_4063f0;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_4063f0;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_406c00;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_406093:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_405e0c;\n                                }\n                            label_405d11:\n                                if (arg7 == 0)\n                                {\n                                    goto label_405e0c;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_405e0c;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_405d47;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_405eba:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_405ee0;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_405e24:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_405d9d;\n                                }\n                            label_405d9d:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_405da6;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_405da6:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_405cb9:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_405eeb;\n                                }\n                                goto label_405cdd;\n                            }\n                        }\n                    }\n                }\n            }\n        label_406396:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = \"'\";\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_405ba8;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = \"'\";\n                goto label_405ba8;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"'\";\n            goto label_405ba8;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40c3cc;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40c3cc;\n            }\n            goto label_405ba8;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_40c3cc;\n            goto label_405ba8;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_405ba8;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_405a10(&data_40c3dd, r13);\n                arg9 = sub_405a10(\"'\", r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_405ba8;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_406396;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n        goto label_405ba8;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_406d40",
            "funcStartAddr": "0x401b45",
            "funcEndAddr": "0x406ede",
            "decompiledFuncCode": "char* sub_406d40(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_6102d8;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_6102f0 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_407da0();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x6102e0)\n        {\n            int64_t rax_9 = sub_407bb0(0, rsi_1);\n            int128_t zmm0 = data_6102e0;\n            rbx = rax_9;\n            data_6102d8 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_407bb0(rbx, rsi_1);\n            data_6102d8 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_6102f0;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_6102f0 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_405b10(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        uint64_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x6103e0)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_407b50(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_405b10(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_406ee0",
            "funcStartAddr": "0x406ee0",
            "funcEndAddr": "0x406f14",
            "decompiledFuncCode": "int64_t sub_406ee0(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x6104e0;\n    }\n    int64_t rax_1 = sub_407d50(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_406f20",
            "funcStartAddr": "0x406f20",
            "funcEndAddr": "0x406f2f",
            "decompiledFuncCode": "uint64_t sub_406f20(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6104e0;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_406f30",
            "funcStartAddr": "0x406f30",
            "funcEndAddr": "0x406f3f",
            "decompiledFuncCode": "void sub_406f30(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6104e0;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_406f40",
            "funcStartAddr": "0x406f40",
            "funcEndAddr": "0x406f73",
            "decompiledFuncCode": "uint64_t sub_406f40(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x6104e0;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_406f80",
            "funcStartAddr": "0x406f80",
            "funcEndAddr": "0x406f93",
            "decompiledFuncCode": "uint64_t sub_406f80(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6104e0;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_406fa0",
            "funcStartAddr": "0x406fa0",
            "funcEndAddr": "0x406fcb",
            "decompiledFuncCode": "void sub_406fa0(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6104e0;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x6104e0;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_406fd0",
            "funcStartAddr": "0x406fd0",
            "funcEndAddr": "0x407042",
            "decompiledFuncCode": "int64_t sub_406fd0(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_6104e0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_405b10(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_407050",
            "funcStartAddr": "0x407050",
            "funcEndAddr": "0x407131",
            "decompiledFuncCode": "char* sub_407050(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_6104e0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_405b10(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_407b50((rax_2 + 1));\n    sub_405b10(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_407140",
            "funcStartAddr": "0x407140",
            "funcEndAddr": "0x40714a",
            "decompiledFuncCode": "int64_t sub_407140(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_407050(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_407150",
            "funcStartAddr": "0x407150",
            "funcEndAddr": "0x4071e5",
            "decompiledFuncCode": "uint64_t sub_407150()\n{\n    uint64_t rax_2 = data_6102f0;\n    int64_t r12 = data_6102d8;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x6103e0)\n    {\n        rax_2 = free(rdi_2);\n        *data_6102e0 = 0x100;\n        *(data_6102e0 + 8) = 0x6103e0;\n    }\n    if (r12 != 0x6102e0)\n    {\n        rax_2 = free(r12);\n        data_6102d8 = 0x6102e0;\n    }\n    data_6102f0 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_4071f0",
            "funcStartAddr": "0x4071f0",
            "funcEndAddr": "0x407201",
            "decompiledFuncCode": "int64_t sub_4071f0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_406d40(arg1, arg2, -1, &data_6104e0);\n}\n\n"
        },
        {
            "funcName": "sub_407210",
            "funcStartAddr": "0x407210",
            "funcEndAddr": "0x40721a",
            "decompiledFuncCode": "int64_t sub_407210(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_406d40(arg1, arg2, arg3, &data_6104e0);\n}\n\n"
        },
        {
            "funcName": "sub_407220",
            "funcStartAddr": "0x407220",
            "funcEndAddr": "0x407236",
            "decompiledFuncCode": "int64_t sub_407220(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_406d40(0, arg1, -1, &data_6104e0);\n}\n\n"
        },
        {
            "funcName": "sub_407240",
            "funcStartAddr": "0x407240",
            "funcEndAddr": "0x407252",
            "decompiledFuncCode": "int64_t sub_407240(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_406d40(0, arg1, arg2, &data_6104e0);\n}\n\n"
        },
        {
            "funcName": "sub_407260",
            "funcStartAddr": "0x401b4a",
            "funcEndAddr": "0x4072c8",
            "decompiledFuncCode": "char* sub_407260(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_406d40(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_4072d0",
            "funcStartAddr": "0x401b4f",
            "funcEndAddr": "0x407334",
            "decompiledFuncCode": "char* sub_4072d0(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_406d40(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_407340",
            "funcStartAddr": "0x407340",
            "funcEndAddr": "0x40734c",
            "decompiledFuncCode": "int64_t sub_407340(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_407260(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_407350",
            "funcStartAddr": "0x407350",
            "funcEndAddr": "0x40735f",
            "decompiledFuncCode": "int64_t sub_407350(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_4072d0(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_407360",
            "funcStartAddr": "0x407360",
            "funcEndAddr": "0x4073d0",
            "decompiledFuncCode": "char* sub_407360(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_610510;\n    int128_t var_48 = data_6104e0;\n    int128_t var_38 = data_6104f0;\n    int128_t var_28 = data_610500;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_406d40(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_4073d0",
            "funcStartAddr": "0x4073d0",
            "funcEndAddr": "0x4073dd",
            "decompiledFuncCode": "int64_t sub_4073d0(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_407360(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_4073e0",
            "funcStartAddr": "0x4073e0",
            "funcEndAddr": "0x4073f1",
            "decompiledFuncCode": "int64_t sub_4073e0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_407360(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_407400",
            "funcStartAddr": "0x407400",
            "funcEndAddr": "0x40740a",
            "decompiledFuncCode": "int64_t sub_407400(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_407360(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_407410",
            "funcStartAddr": "0x401b54",
            "funcEndAddr": "0x40747e",
            "decompiledFuncCode": "char* sub_407410(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_406d40(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_407480",
            "funcStartAddr": "0x407480",
            "funcEndAddr": "0x4074ec",
            "decompiledFuncCode": "char* sub_407480(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_6104e0;\n    int128_t var_38 = data_6104f0;\n    int128_t var_28 = data_610500;\n    int64_t var_18 = data_610510;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_406d40(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_407540",
            "funcStartAddr": "0x407540",
            "funcEndAddr": "0x40754a",
            "decompiledFuncCode": "int64_t sub_407540(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_406d40(arg1, arg2, arg3, &data_6102a0);\n}\n\n"
        },
        {
            "funcName": "sub_407550",
            "funcStartAddr": "0x407550",
            "funcEndAddr": "0x407562",
            "decompiledFuncCode": "int64_t sub_407550(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_406d40(0, arg1, arg2, &data_6102a0);\n}\n\n"
        },
        {
            "funcName": "sub_407570",
            "funcStartAddr": "0x407570",
            "funcEndAddr": "0x407581",
            "decompiledFuncCode": "int64_t sub_407570(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_406d40(arg1, arg2, -1, &data_6102a0);\n}\n\n"
        },
        {
            "funcName": "sub_407590",
            "funcStartAddr": "0x407590",
            "funcEndAddr": "0x4075a6",
            "decompiledFuncCode": "int64_t sub_407590(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_406d40(0, arg1, -1, &data_6102a0);\n}\n\n"
        },
        {
            "funcName": "sub_4075b0",
            "funcStartAddr": "0x401b59",
            "funcEndAddr": "0x40798d",
            "decompiledFuncCode": "int64_t sub_4075b0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_40d12b, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_407990",
            "funcStartAddr": "0x407990",
            "funcEndAddr": "0x4079b0",
            "decompiledFuncCode": "int64_t sub_407990(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_4075b0(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_4079b0",
            "funcStartAddr": "0x4079b0",
            "funcEndAddr": "0x407a10",
            "decompiledFuncCode": "int64_t sub_4079b0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_4075b0(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_407a10",
            "funcStartAddr": "0x407a10",
            "funcEndAddr": "0x407acc",
            "decompiledFuncCode": "int64_t sub_407a10(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_4075b0(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_407ad0",
            "funcStartAddr": "0x407ad0",
            "funcEndAddr": "0x407b44",
            "decompiledFuncCode": "int64_t sub_407ad0()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_407b50",
            "funcStartAddr": "0x407b50",
            "funcEndAddr": "0x407b6a",
            "decompiledFuncCode": "int64_t sub_407b50(uint64_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_407da0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_407bb0",
            "funcStartAddr": "0x407bb0",
            "funcEndAddr": "0x407be6",
            "decompiledFuncCode": "int64_t sub_407bb0(int64_t arg1, uint64_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_407da0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_407cfa",
            "funcStartAddr": "0x407cfa",
            "funcEndAddr": "0x407d00",
            "decompiledFuncCode": "int64_t sub_407cfa() __noreturn\n{\n    sub_407da0();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_407d00",
            "funcStartAddr": "0x407d00",
            "funcEndAddr": "0x407d17",
            "decompiledFuncCode": "int64_t sub_407d00(uint64_t arg1)\n{\n    /* tailcall */\n    return memset(sub_407b50(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_407d20",
            "funcStartAddr": "0x407d20",
            "funcEndAddr": "0x407d4e",
            "decompiledFuncCode": "int64_t sub_407d20(uint64_t arg1, uint64_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_407da0();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_407d50",
            "funcStartAddr": "0x407d50",
            "funcEndAddr": "0x407d78",
            "decompiledFuncCode": "int64_t sub_407d50(int64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_407b50(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_407d80",
            "funcStartAddr": "0x407d80",
            "funcEndAddr": "0x407d93",
            "decompiledFuncCode": "int64_t sub_407d80(char* arg1)\n{\n    /* tailcall */\n    return sub_407d50(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_407da0",
            "funcStartAddr": "0x407da0",
            "funcEndAddr": "0x407dd1",
            "decompiledFuncCode": "int64_t sub_407da0() __noreturn\n{\n    error(data_610290, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_407de0",
            "funcStartAddr": "0x407de0",
            "funcEndAddr": "0x407df8",
            "decompiledFuncCode": "char* sub_407de0(char* arg1)\n{\n    char* rax = strndup(arg1);\n    if (rax == 0)\n    {\n        sub_407da0();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_407e00",
            "funcStartAddr": "0x407e00",
            "funcEndAddr": "0x408542",
            "decompiledFuncCode": "uint64_t sub_407e00(char* arg1, int64_t* arg2, int32_t arg3, int64_t* arg4, \n    char* arg5)\n{\n    if (arg3 > 0x24)\n    {\n        __assert_fail(\"0 <= strtol_base && strtol_base \u2026\", \"lib/xstrtol.c\", 0x60, \"xstrtol\");\n        /* no return */\n    }\n    int64_t* rbx = arg2;\n    void var_40;\n    if (arg2 == 0)\n    {\n        rbx = &var_40;\n    }\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char* r15 = *rbx;\n    int64_t rbp_1 = strtol(arg1, rbx, arg3);\n    int32_t r12_1;\n    uint32_t r13_1;\n    if (r15 != arg1)\n    {\n        int32_t rax_2 = *rax;\n        if (rax_2 != 0)\n        {\n            r12_1 = 4;\n        }\n        if (rax_2 == 0x22)\n        {\n            r12_1 = 1;\n        }\n        if (rax_2 == 0)\n        {\n            r12_1 = 0;\n        }\n        if ((rax_2 == 0 || rax_2 == 0x22))\n        {\n            if (arg5 == 0)\n            {\n            label_407e79:\n                *arg4 = rbp_1;\n            }\n            else\n            {\n                r13_1 = *r15;\n                if (r13_1 == 0)\n                {\n                    goto label_407e79;\n                }\n                if (strchr(arg5, r13_1) != 0)\n                {\n                    goto label_407edd;\n                }\n            label_407f89:\n                r12_1 = (r12_1 | 2);\n                *arg4 = rbp_1;\n            }\n        }\n    }\n    else\n    {\n        if (arg5 != 0)\n        {\n            r13_1 = *r15;\n            r12_1 = 4;\n            if (r13_1 != 0)\n            {\n                rbp_1 = 1;\n                r12_1 = 0;\n                if (strchr(arg5, r13_1) != 0)\n                {\n                label_407edd:\n                    uint64_t rdx_1 = (r13_1 - 0x45);\n                    int32_t rax_6;\n                    char* rax_7;\n                    char rax_8;\n                    int64_t rax_14;\n                    int64_t rcx;\n                    int64_t rcx_1;\n                    int64_t rcx_2;\n                    int64_t rcx_3;\n                    int64_t rcx_4;\n                    int64_t rcx_5;\n                    int64_t rcx_6;\n                    uint64_t rdx_2;\n                    int32_t rsi_2;\n                    int64_t rsi_4;\n                    int64_t rdi_4;\n                    int64_t r9_1;\n                    int64_t r9_2;\n                    int64_t r9_3;\n                    int64_t r9_4;\n                    int64_t r9_5;\n                    int64_t r9_6;\n                    char r13_2;\n                    if (rdx_1 <= 0x2f)\n                    {\n                        char var_49_1 = rdx_1;\n                        if ((!(TEST_BITQ(0x814400308945, rdx_1))))\n                        {\n                            goto label_407ee6;\n                        }\n                        rax_7 = strchr(arg5, 0x30);\n                        if (rax_7 == 0)\n                        {\n                            goto label_407ee6;\n                        }\n                        rax_8 = r15[1];\n                        if ((rax_8 != 0x44 && rax_8 != 0x69))\n                        {\n                            rdx_2 = var_49_1;\n                            if (rax_8 != 0x42)\n                            {\n                                switch (rdx_2)\n                                {\n                                    case 1:\n                                    case 3:\n                                    case 4:\n                                    case 5:\n                                    case 7:\n                                    case 9:\n                                    case 0xa:\n                                    case 0xc:\n                                    case 0xd:\n                                    case 0xe:\n                                    case 0x10:\n                                    case 0x11:\n                                    case 0x12:\n                                    case 0x13:\n                                    case 0x16:\n                                    case 0x17:\n                                    case 0x18:\n                                    case 0x19:\n                                    case 0x1a:\n                                    case 0x1b:\n                                    case 0x1c:\n                                    case 0x1f:\n                                    case 0x20:\n                                    case 0x21:\n                                    case 0x23:\n                                    case 0x24:\n                                    case 0x25:\n                                    case 0x27:\n                                    case 0x29:\n                                    case 0x2a:\n                                    case 0x2b:\n                                    case 0x2c:\n                                    case 0x2d:\n                                    case 0x2e:\n                                    {\n                                        goto label_407f89;\n                                    }\n                                    case 6:\n                                    case 0x26:\n                                    {\n                                        rcx = 0x400;\n                                        rax_14 = -0x20000000000000;\n                                        break;\n                                    }\n                                    case 8:\n                                    case 0x28:\n                                    {\n                                        rcx = 0x400;\n                                        rdi_4 = -0x20000000000000;\n                                        break;\n                                    }\n                                    case 0x1d:\n                                    {\n                                        /* nop */\n                                        break;\n                                    }\n                                }\n                                switch (rdx_2)\n                                {\n                                    case 0xb:\n                                    {\n                                        rsi_4 = 1;\n                                        rcx_1 = 0x400;\n                                        r9_1 = -0x20000000000000;\n                                        goto label_408108;\n                                    }\n                                    case 0xf:\n                                    case 0x2f:\n                                    {\n                                        rsi_4 = 1;\n                                        rcx_2 = 0x400;\n                                        r9_2 = -0x20000000000000;\n                                        goto label_408170;\n                                    }\n                                    case 0x14:\n                                    {\n                                        rsi_4 = 1;\n                                        rcx_5 = 0x400;\n                                        r9_5 = -0x20000000000000;\n                                        goto label_4082a8;\n                                    }\n                                    case 0x15:\n                                    {\n                                        rsi_4 = 1;\n                                        rcx_6 = 0x400;\n                                        r9_6 = -0x20000000000000;\n                                        goto label_408310;\n                                    }\n                                }\n                                if ((rdx_2 == 2 || rdx_2 == 0x22))\n                                {\n                                    rsi_4 = 1;\n                                    rcx_4 = 0x400;\n                                    r9_4 = -0x20000000000000;\n                                    goto label_408240;\n                                }\n                                if (rdx_2 == 0)\n                                {\n                                    rsi_4 = 1;\n                                    rcx_3 = 0x400;\n                                    r9_3 = -0x20000000000000;\n                                    goto label_4081d8;\n                                }\n                                if (rdx_2 == 0x1e)\n                                {\n                                    rsi_4 = 1;\n                                    goto label_407fc8;\n                                }\n                            }\n                        }\n                        if (rax_8 == 0x42)\n                        {\n                            goto label_4084f8;\n                        }\n                        if (rax_8 == 0x69)\n                        {\n                            rax_6 = 0x400;\n                            int32_t rsi_6;\n                            rsi_6 = r15[2] == 0x42;\n                            rsi_2 = ((rsi_6 + rsi_6) + 1);\n                            goto label_407ef0;\n                        }\n                        if (rax_8 == 0x44)\n                        {\n                        label_4084f8:\n                            rsi_2 = 2;\n                            rax_6 = 0x3e8;\n                            goto label_407ef0;\n                        }\n                    }\n                    else\n                    {\n                    label_407ee6:\n                        rsi_2 = 1;\n                        rax_6 = 0x400;\n                    label_407ef0:\n                        r13_2 = (r13_1 - 0x42);\n                        if ((r13_2 == 9 || r13_2 == 0x29))\n                        {\n                            rcx = rax_6;\n                            rsi_4 = rsi_2;\n                            int64_t rax_13;\n                            int64_t rdx_3;\n                            rdx_3 = HIGHD(-0x8000000000000000);\n                            rax_13 = LOWD(-0x8000000000000000);\n                            rax_14 = (COMBINE(rdx_3, rax_13) / rcx);\n                        }\n                    }\n                    int64_t rax_16;\n                    if (((rdx_1 > 0x2f && (r13_2 == 9 || r13_2 == 0x29)) || ((((((rdx_1 <= 0x2f && (TEST_BITQ(0x814400308945, rdx_1))) && rax_7 != 0) && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && (rdx_2 == 6 || rdx_2 == 0x26))))\n                    {\n                        if (rbp_1 < rax_14)\n                        {\n                            goto label_408098;\n                        }\n                        int64_t rax_15;\n                        int64_t rdx_5;\n                        rdx_5 = HIGHD(0x7fffffffffffffff);\n                        rax_15 = LOWD(0x7fffffffffffffff);\n                        rax_16 = (COMBINE(rdx_5, rax_15) / rcx);\n                    }\n                    if ((rdx_1 > 0x2f && (r13_2 == 0xb || r13_2 == 0x2b)))\n                    {\n                        rcx = rax_6;\n                        rsi_4 = rsi_2;\n                        int64_t rax_17;\n                        int64_t rdx_7;\n                        rdx_7 = HIGHD(-0x8000000000000000);\n                        rax_17 = LOWD(-0x8000000000000000);\n                        rdi_4 = (COMBINE(rdx_7, rax_17) / rcx);\n                    }\n                    if (((rdx_1 > 0x2f && (r13_2 == 0xb || r13_2 == 0x2b)) || ((((((rdx_1 <= 0x2f && (TEST_BITQ(0x814400308945, rdx_1))) && rax_7 != 0) && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && (rdx_2 == 8 || rdx_2 == 0x28))))\n                    {\n                        if (rbp_1 < rdi_4)\n                        {\n                            goto label_408098;\n                        }\n                        int64_t rax_19;\n                        int64_t rdx_9;\n                        rdx_9 = HIGHD(0x7fffffffffffffff);\n                        rax_19 = LOWD(0x7fffffffffffffff);\n                        rax_16 = (COMBINE(rdx_9, rax_19) / rcx);\n                        if (rbp_1 > rax_16)\n                        {\n                            goto label_408450;\n                        }\n                        rbp_1 = (rbp_1 * rcx);\n                        if (rbp_1 < rdi_4)\n                        {\n                            goto label_408098;\n                        }\n                    }\n                    if (((((rdx_1 > 0x2f && (r13_2 == 9 || r13_2 == 0x29)) || ((((((rdx_1 <= 0x2f && (TEST_BITQ(0x814400308945, rdx_1))) && rax_7 != 0) && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && (rdx_2 == 6 || rdx_2 == 0x26))) && rbp_1 >= rax_14) || (((rdx_1 > 0x2f && (r13_2 == 0xb || r13_2 == 0x2b)) || ((((((rdx_1 <= 0x2f && (TEST_BITQ(0x814400308945, rdx_1))) && rax_7 != 0) && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && (rdx_2 == 8 || rdx_2 == 0x28))) && rbp_1 >= rdi_4)))\n                    {\n                        if (rax_16 < rbp_1)\n                        {\n                            goto label_408450;\n                        }\n                        rbp_1 = (rbp_1 * rcx);\n                        goto label_407fc8;\n                    }\n                    if ((rdx_1 > 0x2f && r13_2 == 0x20))\n                    {\n                        rsi_4 = rsi_2;\n                    }\n                    if (((rdx_1 > 0x2f && r13_2 == 0x20) || ((((((rdx_1 <= 0x2f && (TEST_BITQ(0x814400308945, rdx_1))) && rax_7 != 0) && rax_8 != 0x44) && rax_8 != 0x69) && rax_8 != 0x42) && rdx_2 == 0x1d)))\n                    {\n                        if (rbp_1 < -0x40000000000000)\n                        {\n                            goto label_408098;\n                        }\n                        if (rbp_1 > 0x3fffffffffffff)\n                        {\n                            goto label_408450;\n                        }\n                        rbp_1 = (rbp_1 << 9);\n                        goto label_407fc8;\n                    }\n                    if (rdx_1 > 0x2f)\n                    {\n                        switch (r13_2)\n                        {\n                            case 0:\n                            {\n                                rsi_4 = rsi_2;\n                                if (rbp_1 < -0x20000000000000)\n                                {\n                                label_408098:\n                                    rbp_1 = -0x8000000000000000;\n                                    r12_1 = 1;\n                                    goto label_407fc8;\n                                }\n                                if (rbp_1 <= 0x1fffffffffffff)\n                                {\n                                    rbp_1 = (rbp_1 << 0xa);\n                                    goto label_407fc8;\n                                }\n                            label_408450:\n                                rbp_1 = 0x7fffffffffffffff;\n                                r12_1 = 1;\n                                goto label_407fc8;\n                            }\n                            case 1:\n                            case 2:\n                            case 4:\n                            case 6:\n                            case 7:\n                            case 8:\n                            case 0xa:\n                            case 0xc:\n                            case 0xd:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x22:\n                            case 0x23:\n                            case 0x24:\n                            case 0x26:\n                            case 0x27:\n                            case 0x28:\n                            case 0x2a:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x33:\n                            case 0x34:\n                            {\n                                goto label_407f89;\n                            }\n                            case 0x21:\n                            {\n                                rsi_4 = rsi_2;\n                            label_407fc8:\n                                void* rsi_5 = &r15[rsi_4];\n                                int32_t rax_12 = (r12_1 | 2);\n                                *rbx = rsi_5;\n                                if (*rsi_5 != 0)\n                                {\n                                    r12_1 = rax_12;\n                                }\n                                goto label_407e79;\n                            }\n                            case 0x35:\n                            {\n                                rsi_4 = rsi_2;\n                                if (rbp_1 < -0x4000000000000000)\n                                {\n                                    goto label_408098;\n                                }\n                                if (rbp_1 > 0x3fffffffffffffff)\n                                {\n                                    goto label_408450;\n                                }\n                                rbp_1 = (rbp_1 + rbp_1);\n                                goto label_407fc8;\n                            }\n                        }\n                        int32_t r10_1;\n                        switch (r13_2)\n                        {\n                            case 3:\n                            {\n                                rcx_3 = rax_6;\n                                rsi_4 = rsi_2;\n                                int64_t rax_28;\n                                int64_t rdx_19;\n                                rdx_19 = HIGHD(-0x8000000000000000);\n                                rax_28 = LOWD(-0x8000000000000000);\n                                r9_3 = (COMBINE(rdx_19, rax_28) / rcx_3);\n                            label_4081d8:\n                                int32_t rdi_7 = 6;\n                                r10_1 = 0;\n                                do\n                                {\n                                    if (rbp_1 < r9_3)\n                                    {\n                                        rbp_1 = -0x8000000000000000;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        int64_t rax_30;\n                                        int64_t rdx_21;\n                                        rdx_21 = HIGHD(0x7fffffffffffffff);\n                                        rax_30 = LOWD(0x7fffffffffffffff);\n                                        if ((COMBINE(rdx_21, rax_30) / rcx_3) < rbp_1)\n                                        {\n                                            rbp_1 = 0x7fffffffffffffff;\n                                            r10_1 = 1;\n                                        }\n                                        else\n                                        {\n                                            rbp_1 = (rbp_1 * rcx_3);\n                                        }\n                                    }\n                                    rdi_7 = (rdi_7 - 1);\n                                } while (rdi_7 != 1);\n                                goto label_408440;\n                            }\n                            case 5:\n                            case 0x25:\n                            {\n                                rcx_4 = rax_6;\n                                rsi_4 = rsi_2;\n                                int64_t rax_32;\n                                int64_t rdx_23;\n                                rdx_23 = HIGHD(-0x8000000000000000);\n                                rax_32 = LOWD(-0x8000000000000000);\n                                r9_4 = (COMBINE(rdx_23, rax_32) / rcx_4);\n                            label_408240:\n                                int32_t rdi_8 = 3;\n                                r10_1 = 0;\n                                do\n                                {\n                                    if (rbp_1 < r9_4)\n                                    {\n                                        rbp_1 = -0x8000000000000000;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        int64_t rax_34;\n                                        int64_t rdx_25;\n                                        rdx_25 = HIGHD(0x7fffffffffffffff);\n                                        rax_34 = LOWD(0x7fffffffffffffff);\n                                        if ((COMBINE(rdx_25, rax_34) / rcx_4) < rbp_1)\n                                        {\n                                            rbp_1 = 0x7fffffffffffffff;\n                                            r10_1 = 1;\n                                        }\n                                        else\n                                        {\n                                            rbp_1 = (rbp_1 * rcx_4);\n                                        }\n                                    }\n                                    rdi_8 = (rdi_8 - 1);\n                                } while (rdi_8 != 1);\n                                goto label_408440;\n                            }\n                            case 0xe:\n                            {\n                                rcx_1 = rax_6;\n                                rsi_4 = rsi_2;\n                                int64_t rax_20;\n                                int64_t rdx_11;\n                                rdx_11 = HIGHD(-0x8000000000000000);\n                                rax_20 = LOWD(-0x8000000000000000);\n                                r9_1 = (COMBINE(rdx_11, rax_20) / rcx_1);\n                            label_408108:\n                                int32_t rdi_5 = 5;\n                                r10_1 = 0;\n                                do\n                                {\n                                    if (r9_1 > rbp_1)\n                                    {\n                                        rbp_1 = -0x8000000000000000;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        int64_t rax_22;\n                                        int64_t rdx_13;\n                                        rdx_13 = HIGHD(0x7fffffffffffffff);\n                                        rax_22 = LOWD(0x7fffffffffffffff);\n                                        if ((COMBINE(rdx_13, rax_22) / rcx_1) < rbp_1)\n                                        {\n                                            rbp_1 = 0x7fffffffffffffff;\n                                            r10_1 = 1;\n                                        }\n                                        else\n                                        {\n                                            rbp_1 = (rbp_1 * rcx_1);\n                                        }\n                                    }\n                                    rdi_5 = (rdi_5 - 1);\n                                } while (rdi_5 != 1);\n                            label_408440:\n                                r12_1 = (r12_1 | r10_1);\n                                goto label_407fc8;\n                            }\n                            case 0x12:\n                            case 0x32:\n                            {\n                                rcx_2 = rax_6;\n                                rsi_4 = rsi_2;\n                                int64_t rax_24;\n                                int64_t rdx_15;\n                                rdx_15 = HIGHD(-0x8000000000000000);\n                                rax_24 = LOWD(-0x8000000000000000);\n                                r9_2 = (COMBINE(rdx_15, rax_24) / rcx_2);\n                            label_408170:\n                                int32_t rdi_6 = 4;\n                                r10_1 = 0;\n                                do\n                                {\n                                    if (r9_2 > rbp_1)\n                                    {\n                                        rbp_1 = -0x8000000000000000;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        int64_t rax_26;\n                                        int64_t rdx_17;\n                                        rdx_17 = HIGHD(0x7fffffffffffffff);\n                                        rax_26 = LOWD(0x7fffffffffffffff);\n                                        if ((COMBINE(rdx_17, rax_26) / rcx_2) < rbp_1)\n                                        {\n                                            rbp_1 = 0x7fffffffffffffff;\n                                            r10_1 = 1;\n                                        }\n                                        else\n                                        {\n                                            rbp_1 = (rbp_1 * rcx_2);\n                                        }\n                                    }\n                                    rdi_6 = (rdi_6 - 1);\n                                } while (rdi_6 != 1);\n                                goto label_408440;\n                            }\n                        }\n                        if (r13_2 == 0x17)\n                        {\n                            rcx_5 = rax_6;\n                            rsi_4 = rsi_2;\n                            int64_t rax_36;\n                            int64_t rdx_27;\n                            rdx_27 = HIGHD(-0x8000000000000000);\n                            rax_36 = LOWD(-0x8000000000000000);\n                            r9_5 = (COMBINE(rdx_27, rax_36) / rcx_5);\n                        label_4082a8:\n                            int32_t rdi_9 = 8;\n                            r10_1 = 0;\n                            do\n                            {\n                                if (r9_5 > rbp_1)\n                                {\n                                    rbp_1 = -0x8000000000000000;\n                                    r10_1 = 1;\n                                }\n                                else\n                                {\n                                    int64_t rax_38;\n                                    int64_t rdx_29;\n                                    rdx_29 = HIGHD(0x7fffffffffffffff);\n                                    rax_38 = LOWD(0x7fffffffffffffff);\n                                    if ((COMBINE(rdx_29, rax_38) / rcx_5) < rbp_1)\n                                    {\n                                        rbp_1 = 0x7fffffffffffffff;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        rbp_1 = (rbp_1 * rcx_5);\n                                    }\n                                }\n                                rdi_9 = (rdi_9 - 1);\n                            } while (rdi_9 != 1);\n                            goto label_408440;\n                        }\n                        if (r13_2 == 0x18)\n                        {\n                            rcx_6 = rax_6;\n                            rsi_4 = rsi_2;\n                            int64_t rax_40;\n                            int64_t rdx_31;\n                            rdx_31 = HIGHD(-0x8000000000000000);\n                            rax_40 = LOWD(-0x8000000000000000);\n                            r9_6 = (COMBINE(rdx_31, rax_40) / rcx_6);\n                        label_408310:\n                            int32_t rdi_10 = 7;\n                            r10_1 = 0;\n                            do\n                            {\n                                if (r9_6 > rbp_1)\n                                {\n                                    rbp_1 = -0x8000000000000000;\n                                    r10_1 = 1;\n                                }\n                                else\n                                {\n                                    int64_t rax_42;\n                                    int64_t rdx_33;\n                                    rdx_33 = HIGHD(0x7fffffffffffffff);\n                                    rax_42 = LOWD(0x7fffffffffffffff);\n                                    if ((COMBINE(rdx_33, rax_42) / rcx_6) < rbp_1)\n                                    {\n                                        rbp_1 = 0x7fffffffffffffff;\n                                        r10_1 = 1;\n                                    }\n                                    else\n                                    {\n                                        rbp_1 = (rbp_1 * rcx_6);\n                                    }\n                                }\n                                rdi_10 = (rdi_10 - 1);\n                            } while (rdi_10 != 1);\n                            goto label_408440;\n                        }\n                        if (r13_2 > 0x35)\n                        {\n                            goto label_407f89;\n                        }\n                    }\n                }\n            }\n        }\n        if ((arg5 == 0 || (arg5 != 0 && r13_1 != 0)))\n        {\n            r12_1 = 4;\n        }\n    }\n    return r12_1;\n}\n\n"
        },
        {
            "funcName": "sub_408550",
            "funcStartAddr": "0x408550",
            "funcEndAddr": "0x408984",
            "decompiledFuncCode": "uint64_t sub_408550(char* arg1, int64_t* arg2, int32_t arg3, uint64_t* arg4, \n    char* arg5)\n{\n    if (arg3 > 0x24)\n    {\n        __assert_fail(\"0 <= strtol_base && strtol_base \u2026\", \"lib/xstrtol.c\", 0x60, \"xstrtoumax\");\n        /* no return */\n    }\n    int64_t* r15 = arg2;\n    void var_40;\n    if (arg2 == 0)\n    {\n        r15 = &var_40;\n    }\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char rbx = *arg1;\n    uint16_t* rsi = *__ctype_b_loc();\n    char* rax_2 = arg1;\n    while ((*(&rsi[rbx] + 1) & 0x20) != 0)\n    {\n        rax_2 = &rax_2[1];\n        rbx = *rax_2;\n    }\n    int32_t rbp_1;\n    if (rbx == 0x2d)\n    {\n    label_40861a:\n        rbp_1 = 4;\n    }\n    else\n    {\n        char* r8 = *r15;\n        uint64_t rbx_1 = __strtoul_internal(arg1, r15, arg3, 0);\n        int32_t var_58;\n        void* r8_1;\n        uint32_t r12_1;\n        if (r8 == arg1)\n        {\n            var_58 = r8;\n            if (arg5 == 0)\n            {\n                goto label_40861a;\n            }\n            r12_1 = *arg1;\n            if (r12_1 == 0)\n            {\n                goto label_40861a;\n            }\n            rbp_1 = 0;\n            rbx_1 = 1;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) == 0)\n            {\n                goto label_40861a;\n            }\n        label_408657:\n            uint64_t rdx_1 = (r12_1 - 0x45);\n            int64_t rdx_3;\n            int32_t rsi_3;\n            if (rdx_1 <= 0x2f)\n            {\n                var_58 = rdx_1;\n                if ((!(TEST_BITQ(0x814400308945, rdx_1))))\n                {\n                    goto label_4086c0;\n                }\n                if (strchr(arg5, 0x30) == 0)\n                {\n                    goto label_4086c0;\n                }\n                char rax_8 = *(r8_1 + 1);\n                if (rax_8 == 0x44)\n                {\n                label_4088e8:\n                    rsi_3 = 2;\n                    rdx_3 = 0x3e8;\n                    goto label_4086ca;\n                }\n                if (rax_8 == 0x69)\n                {\n                    rdx_3 = 0x400;\n                    int32_t rsi_6;\n                    rsi_6 = *(r8_1 + 2) == 0x42;\n                    rsi_3 = ((rsi_6 + rsi_6) + 1);\n                    goto label_4086ca;\n                }\n                uint64_t rdx_2 = var_58;\n                if (rax_8 == 0x42)\n                {\n                    goto label_4088e8;\n                }\n                int32_t r9_1;\n                switch (rdx_2)\n                {\n                    case 0:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40886b:\n                        int64_t rcx_6 = rdx_3;\n                        int32_t rdi_8 = 6;\n                        r9_1 = 0;\n                        int32_t temp15_1;\n                        do\n                        {\n                            uint64_t rax_28;\n                            int64_t rdx_11;\n                            rdx_11 = HIGHD((rbx_1 * rcx_6));\n                            rax_28 = LOWD((rbx_1 * rcx_6));\n                            bool o_8 = ((rbx_1 * rcx_6) >> 0x40) != 0;\n                            rbx_1 = rax_28;\n                            if (o_8)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp15_1 = rdi_8;\n                            rdi_8 = (rdi_8 - 1);\n                        } while (temp15_1 != 1);\n                        goto label_4087c4;\n                    }\n                    case 1:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 7:\n                    case 9:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xe:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1f:\n                    case 0x20:\n                    case 0x21:\n                    case 0x23:\n                    case 0x24:\n                    case 0x25:\n                    case 0x27:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    {\n                        goto label_408765;\n                    }\n                    case 2:\n                    case 0x22:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4088a3:\n                        int64_t rcx_7 = rdx_3;\n                        int64_t rax_30;\n                        int64_t rdx_12;\n                        rdx_12 = HIGHD((rbx_1 * rcx_7));\n                        rax_30 = LOWD((rbx_1 * rcx_7));\n                        int64_t rax_31;\n                        if (((rbx_1 * rcx_7) >> 0x40) == 0)\n                        {\n                            int64_t rdx_13;\n                            rdx_13 = HIGHD((rax_30 * rcx_7));\n                            rax_31 = LOWD((rax_30 * rcx_7));\n                            if (((rax_30 * rcx_7) >> 0x40) == 0)\n                            {\n                                uint64_t rax_32;\n                                int64_t rdx_14;\n                                rdx_14 = HIGHD((rax_31 * rcx_7));\n                                rax_32 = LOWD((rax_31 * rcx_7));\n                                if (((rax_31 * rcx_7) >> 0x40) == 0)\n                                {\n                                    rbx_1 = rax_32;\n                                    rbp_1 = (rbp_1 | 0);\n                                }\n                            }\n                        }\n                        if (((((rbx_1 * rcx_7) >> 0x40) != 0 || (((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) != 0)) || ((((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) == 0) && ((rax_31 * rcx_7) >> 0x40) != 0)))\n                        {\n                            rbx_1 = -1;\n                            rbp_1 = (rbp_1 | 1);\n                        }\n                        goto label_40870d;\n                    }\n                    case 6:\n                    case 0x26:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40872f:\n                        uint64_t rax_15;\n                        int64_t rdx_6;\n                        rdx_6 = HIGHD((rbx_1 * rdx_3));\n                        rax_15 = LOWD((rbx_1 * rdx_3));\n                        bool o_3 = ((rbx_1 * rdx_3) >> 0x40) != 0;\n                        rbx_1 = rax_15;\n                        if ((!o_3))\n                        {\n                            goto label_40870d;\n                        }\n                        goto label_408737;\n                    }\n                    case 8:\n                    case 0x28:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4086ee:\n                        int64_t rcx_1 = rdx_3;\n                        int64_t rax_10;\n                        int64_t rdx_4;\n                        rdx_4 = HIGHD((rbx_1 * rcx_1));\n                        rax_10 = LOWD((rbx_1 * rcx_1));\n                        if (((rbx_1 * rcx_1) >> 0x40) == 0)\n                        {\n                            uint64_t rax_11;\n                            int64_t rdx_5;\n                            rdx_5 = HIGHD((rax_10 * rcx_1));\n                            rax_11 = LOWD((rax_10 * rcx_1));\n                            if (((rax_10 * rcx_1) >> 0x40) != 0)\n                            {\n                                goto label_408737;\n                            }\n                            rbx_1 = rax_11;\n                            goto label_40870d;\n                        }\n                    label_408737:\n                        rbp_1 = 1;\n                        rbx_1 = -1;\n                        goto label_40870d;\n                    }\n                    case 0xb:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_408838:\n                        int64_t rcx_5 = rdx_3;\n                        int32_t rdi_7 = 5;\n                        r9_1 = 0;\n                        int32_t temp14_1;\n                        do\n                        {\n                            uint64_t rax_26;\n                            int64_t rdx_10;\n                            rdx_10 = HIGHD((rbx_1 * rcx_5));\n                            rax_26 = LOWD((rbx_1 * rcx_5));\n                            bool o_7 = ((rbx_1 * rcx_5) >> 0x40) != 0;\n                            rbx_1 = rax_26;\n                            if (o_7)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp14_1 = rdi_7;\n                            rdi_7 = (rdi_7 - 1);\n                        } while (temp14_1 != 1);\n                        goto label_4087c4;\n                    }\n                    case 0xf:\n                    case 0x2f:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_408808:\n                        int64_t rcx_4 = rdx_3;\n                        int32_t rdi_6 = 4;\n                        r9_1 = 0;\n                        int32_t temp13_1;\n                        do\n                        {\n                            uint64_t rax_24;\n                            int64_t rdx_9;\n                            rdx_9 = HIGHD((rbx_1 * rcx_4));\n                            rax_24 = LOWD((rbx_1 * rcx_4));\n                            bool o_6 = ((rbx_1 * rcx_4) >> 0x40) != 0;\n                            rbx_1 = rax_24;\n                            if (o_6)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp13_1 = rdi_6;\n                            rdi_6 = (rdi_6 - 1);\n                        } while (temp13_1 != 1);\n                        goto label_4087c4;\n                    }\n                    case 0x14:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4087d6:\n                        int64_t rcx_3 = rdx_3;\n                        int32_t rdi_5 = 8;\n                        r9_1 = 0;\n                        int32_t temp12_1;\n                        do\n                        {\n                            uint64_t rax_22;\n                            int64_t rdx_8;\n                            rdx_8 = HIGHD((rbx_1 * rcx_3));\n                            rax_22 = LOWD((rbx_1 * rcx_3));\n                            bool o_5 = ((rbx_1 * rcx_3) >> 0x40) != 0;\n                            rbx_1 = rax_22;\n                            if (o_5)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp12_1 = rdi_5;\n                            rdi_5 = (rdi_5 - 1);\n                        } while (temp12_1 != 1);\n                        goto label_4087c4;\n                    }\n                    case 0x15:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40879b:\n                        int64_t rcx_2 = rdx_3;\n                        int32_t rdi_4 = 7;\n                        r9_1 = 0;\n                        int32_t temp11_1;\n                        do\n                        {\n                            uint64_t rax_20;\n                            int64_t rdx_7;\n                            rdx_7 = HIGHD((rbx_1 * rcx_2));\n                            rax_20 = LOWD((rbx_1 * rcx_2));\n                            bool o_4 = ((rbx_1 * rcx_2) >> 0x40) != 0;\n                            rbx_1 = rax_20;\n                            if (o_4)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp11_1 = rdi_4;\n                            rdi_4 = (rdi_4 - 1);\n                        } while (temp11_1 != 1);\n                    label_4087c4:\n                        rbp_1 = (rbp_1 | r9_1);\n                        goto label_40870d;\n                    }\n                    case 0x1d:\n                    {\n                        rsi_3 = 1;\n                        break;\n                    }\n                    case 0x1e:\n                    {\n                        rsi_3 = 1;\n                        goto label_40870d;\n                    }\n                }\n            }\n            else\n            {\n            label_4086c0:\n                rsi_3 = 1;\n                rdx_3 = 0x400;\n            label_4086ca:\n                char r12_2 = (r12_1 - 0x42);\n                if (r12_2 > 0x35)\n                {\n                    goto label_408765;\n                }\n                switch (r12_2)\n                {\n                    case 0:\n                    {\n                        if ((rbx_1 >> 0x36) != 0)\n                        {\n                            goto label_408737;\n                        }\n                        rbx_1 = (rbx_1 << 0xa);\n                        goto label_40870d;\n                    }\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x22:\n                    case 0x23:\n                    case 0x24:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x2a:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x33:\n                    case 0x34:\n                    {\n                        goto label_408765;\n                    }\n                    case 3:\n                    {\n                        goto label_40886b;\n                    }\n                    case 5:\n                    case 0x25:\n                    {\n                        goto label_4088a3;\n                    }\n                    case 9:\n                    case 0x29:\n                    {\n                        goto label_40872f;\n                    }\n                    case 0xb:\n                    case 0x2b:\n                    {\n                        goto label_4086ee;\n                    }\n                    case 0xe:\n                    {\n                        goto label_408838;\n                    }\n                    case 0x12:\n                    case 0x32:\n                    {\n                        goto label_408808;\n                    }\n                    case 0x17:\n                    {\n                        goto label_4087d6;\n                    }\n                    case 0x18:\n                    {\n                        goto label_40879b;\n                    }\n                    case 0x21:\n                    {\n                        goto label_40870d;\n                    }\n                    case 0x35:\n                    {\n                        if (rbx_1 < 0)\n                        {\n                            goto label_408737;\n                        }\n                        rbx_1 = (rbx_1 + rbx_1);\n                    label_40870d:\n                        void* r8_2 = (r8_1 + rsi_3);\n                        int32_t rax_13 = (rbp_1 | 2);\n                        *r15 = r8_2;\n                        if (*r8_2 != 0)\n                        {\n                            rbp_1 = rax_13;\n                        }\n                        goto label_4085f2;\n                    }\n                }\n            }\n            if ((rbx_1 >> 0x37) != 0)\n            {\n                goto label_408737;\n            }\n            rbx_1 = (rbx_1 << 9);\n            goto label_40870d;\n        }\n        int32_t rax_4 = *rax;\n        if (rax_4 == 0)\n        {\n            rbp_1 = 0;\n        }\n        else\n        {\n            rbp_1 = 1;\n            if (rax_4 != 0x22)\n            {\n                goto label_40861a;\n            }\n        }\n        if (arg5 == 0)\n        {\n        label_4085f2:\n            *arg4 = rbx_1;\n        }\n        else\n        {\n            r12_1 = *r8;\n            if (r12_1 == 0)\n            {\n                goto label_4085f2;\n            }\n            var_58 = r8;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) != 0)\n            {\n                goto label_408657;\n            }\n        label_408765:\n            *arg4 = rbx_1;\n            rbp_1 = (rbp_1 | 2);\n        }\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_408990",
            "funcStartAddr": "0x408990",
            "funcEndAddr": "0x408a6f",
            "decompiledFuncCode": "uint64_t sub_408990(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_408a70",
            "funcStartAddr": "0x408a70",
            "funcEndAddr": "0x40908c",
            "decompiledFuncCode": "uint64_t sub_408a70(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_408ca0;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_408bc6;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_408bc6;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_408bc6:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_408ca0:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_408cce;\n                }\n                *arg5 = r12;\n            label_408cce:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_408cec;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_408cec:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_408cec;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_408c5e;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_408c5e:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_409090",
            "funcStartAddr": "0x409090",
            "funcEndAddr": "0x409656",
            "decompiledFuncCode": "uint64_t sub_409090(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_4092cc;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_409158;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_409158:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_408990(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_40dc79;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_408990(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_4092cc;\n                }\n                *arg7 = rdx_2;\n            label_4092cc:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_4093d0;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_40dc79;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_409440;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_4093d0;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_4093d0;\n                            }\n                            goto label_409391;\n                        }\n                    label_409391:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_408a70(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_40dc7a);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_4093d0:\n                            rdx = &r14_1[1];\n                        label_409211:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_40940e;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_40940e:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_40dc98;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_409440:\n                                        r14_2 = sub_408a70(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_4094fd;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_4094fd:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_4092cc;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_409158;\n        }\n        goto label_409211;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4096c0",
            "funcStartAddr": "0x4096c0",
            "funcEndAddr": "0x4096d8",
            "decompiledFuncCode": "uint64_t sub_4096c0(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_409760",
            "funcStartAddr": "0x409760",
            "funcEndAddr": "0x4097da",
            "decompiledFuncCode": "uint64_t sub_409760(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_40dc7c[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_40978a;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_40978a:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_409840() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_4097e0",
            "funcStartAddr": "0x4097e0",
            "funcEndAddr": "0x40983d",
            "decompiledFuncCode": "uint64_t sub_4097e0(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_409e10(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_409840",
            "funcStartAddr": "0x409840",
            "funcEndAddr": "0x40989e",
            "decompiledFuncCode": "int64_t sub_409840()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_40dc9c;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            void* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4098a0",
            "funcStartAddr": "0x4098a0",
            "funcEndAddr": "0x409e02",
            "decompiledFuncCode": "char* sub_4098a0()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_610558;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_40dc7c[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        uint64_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            uint64_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_40999c;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_4099e6;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_40999c:\n            r15 = &data_40dc7c[0x1b];\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_4099e6:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, &data_40a2eb);\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_409a9c:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_409c2b;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_409ad8:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_409ad8;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_409b12:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_409b12;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_40dc7c[0x1b];\n                                    free(rdi_26);\n                                    sub_409e10(rax_12);\n                                    goto label_409a27;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_409ceb:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_409ceb;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_409d39:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_409d39;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_409a9c;\n                        }\n                        break;\n                    }\n                label_409c2b:\n                    sub_409e10(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_40dc7c[0x1b];\n            }\n        label_409a27:\n            free(rbp_3);\n        }\n        data_610558 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_409e10",
            "funcStartAddr": "0x409e10",
            "funcEndAddr": "0x409e8b",
            "decompiledFuncCode": "int64_t sub_409e10(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_409e90(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_409e90",
            "funcStartAddr": "0x409e90",
            "funcEndAddr": "0x409ed0",
            "decompiledFuncCode": "int64_t sub_409e90(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_409ed0(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_409ed0",
            "funcStartAddr": "0x409ed0",
            "funcEndAddr": "0x409f27",
            "decompiledFuncCode": "off64_t sub_409ed0(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x409f30",
            "funcEndAddr": "0x409f8d",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x409f90",
            "funcEndAddr": "0x409f91",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_409fa0",
            "funcStartAddr": "0x409fa0",
            "funcEndAddr": "0x409fb8",
            "decompiledFuncCode": "int64_t sub_409fa0(void (* arg1)(void*))\n{\n    int64_t rdx = data_610248;\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, rdx);\n}\n\n"
        },
        {
            "funcName": "sub_409fb8",
            "funcStartAddr": "0x409fb8",
            "funcEndAddr": "0x409fd8",
            "decompiledFuncCode": "int64_t sub_409fb8(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_60fe30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}