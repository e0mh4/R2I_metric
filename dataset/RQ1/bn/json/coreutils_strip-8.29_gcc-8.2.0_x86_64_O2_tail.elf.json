{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_tail.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 207,
    "funcInfo": [
        {
            "funcName": "sub_401960",
            "funcStartAddr": "0x401960",
            "funcEndAddr": "0x40196c",
            "decompiledFuncCode": "int64_t sub_401960()\n{\n    int64_t var_8 = data_612008;\n    /* jump -> data_612010 */\n}\n\n"
        },
        {
            "funcName": "sub_401976",
            "funcStartAddr": "0x401976",
            "funcEndAddr": "0x401980",
            "decompiledFuncCode": "int64_t sub_401976()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401986",
            "funcStartAddr": "0x401986",
            "funcEndAddr": "0x401990",
            "decompiledFuncCode": "int64_t sub_401986()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401996",
            "funcStartAddr": "0x401996",
            "funcEndAddr": "0x4019a0",
            "decompiledFuncCode": "int64_t sub_401996()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_4019a6",
            "funcStartAddr": "0x4019a6",
            "funcEndAddr": "0x4019b0",
            "decompiledFuncCode": "int64_t sub_4019a6()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_4019b6",
            "funcStartAddr": "0x4019b6",
            "funcEndAddr": "0x4019c0",
            "decompiledFuncCode": "int64_t sub_4019b6()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_4019c6",
            "funcStartAddr": "0x4019c6",
            "funcEndAddr": "0x4019d0",
            "decompiledFuncCode": "int64_t sub_4019c6()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_4019d6",
            "funcStartAddr": "0x4019d6",
            "funcEndAddr": "0x4019e0",
            "decompiledFuncCode": "int64_t sub_4019d6()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_4019e6",
            "funcStartAddr": "0x4019e6",
            "funcEndAddr": "0x4019f0",
            "decompiledFuncCode": "int64_t sub_4019e6()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401a06",
            "funcStartAddr": "0x401a06",
            "funcEndAddr": "0x401a10",
            "decompiledFuncCode": "int64_t sub_401a06()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401a26",
            "funcStartAddr": "0x401a26",
            "funcEndAddr": "0x401a30",
            "decompiledFuncCode": "int64_t sub_401a26()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401a36",
            "funcStartAddr": "0x401a36",
            "funcEndAddr": "0x401a40",
            "decompiledFuncCode": "int64_t sub_401a36()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401a46",
            "funcStartAddr": "0x401a46",
            "funcEndAddr": "0x401a50",
            "decompiledFuncCode": "int64_t sub_401a46()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401a56",
            "funcStartAddr": "0x401a56",
            "funcEndAddr": "0x401a60",
            "decompiledFuncCode": "int64_t sub_401a56()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401a66",
            "funcStartAddr": "0x401a66",
            "funcEndAddr": "0x401a70",
            "decompiledFuncCode": "int64_t sub_401a66()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401a76",
            "funcStartAddr": "0x401a76",
            "funcEndAddr": "0x401a80",
            "decompiledFuncCode": "int64_t sub_401a76()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401a86",
            "funcStartAddr": "0x401a86",
            "funcEndAddr": "0x401a90",
            "decompiledFuncCode": "int64_t sub_401a86()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401a96",
            "funcStartAddr": "0x401a96",
            "funcEndAddr": "0x401aa0",
            "decompiledFuncCode": "int64_t sub_401a96()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401aa6",
            "funcStartAddr": "0x401aa6",
            "funcEndAddr": "0x401ab0",
            "decompiledFuncCode": "int64_t sub_401aa6()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401ab6",
            "funcStartAddr": "0x401ab6",
            "funcEndAddr": "0x401ac0",
            "decompiledFuncCode": "int64_t sub_401ab6()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401ac6",
            "funcStartAddr": "0x401ac6",
            "funcEndAddr": "0x401ad0",
            "decompiledFuncCode": "int64_t sub_401ac6()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401ad6",
            "funcStartAddr": "0x401ad6",
            "funcEndAddr": "0x401ae0",
            "decompiledFuncCode": "int64_t sub_401ad6()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401ae6",
            "funcStartAddr": "0x401ae6",
            "funcEndAddr": "0x401af0",
            "decompiledFuncCode": "int64_t sub_401ae6()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401af6",
            "funcStartAddr": "0x401af6",
            "funcEndAddr": "0x401b00",
            "decompiledFuncCode": "int64_t sub_401af6()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401b06",
            "funcStartAddr": "0x401b06",
            "funcEndAddr": "0x401b10",
            "decompiledFuncCode": "int64_t sub_401b06()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401b16",
            "funcStartAddr": "0x401b16",
            "funcEndAddr": "0x401b20",
            "decompiledFuncCode": "int64_t sub_401b16()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401b26",
            "funcStartAddr": "0x401b26",
            "funcEndAddr": "0x401b30",
            "decompiledFuncCode": "int64_t sub_401b26()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401b36",
            "funcStartAddr": "0x401b36",
            "funcEndAddr": "0x401b40",
            "decompiledFuncCode": "int64_t sub_401b36()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401b46",
            "funcStartAddr": "0x401b46",
            "funcEndAddr": "0x401b50",
            "decompiledFuncCode": "int64_t sub_401b46()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401b56",
            "funcStartAddr": "0x401b56",
            "funcEndAddr": "0x401b60",
            "decompiledFuncCode": "int64_t sub_401b56()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401b66",
            "funcStartAddr": "0x401b66",
            "funcEndAddr": "0x401b70",
            "decompiledFuncCode": "int64_t sub_401b66()\n{\n    int64_t var_8 = 0x1f;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401b76",
            "funcStartAddr": "0x401b76",
            "funcEndAddr": "0x401b80",
            "decompiledFuncCode": "int64_t sub_401b76()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401b86",
            "funcStartAddr": "0x401b86",
            "funcEndAddr": "0x401b90",
            "decompiledFuncCode": "int64_t sub_401b86()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401b96",
            "funcStartAddr": "0x401b96",
            "funcEndAddr": "0x401ba0",
            "decompiledFuncCode": "int64_t sub_401b96()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401ba6",
            "funcStartAddr": "0x401ba6",
            "funcEndAddr": "0x401bb0",
            "decompiledFuncCode": "int64_t sub_401ba6()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401bb6",
            "funcStartAddr": "0x401bb6",
            "funcEndAddr": "0x401bc0",
            "decompiledFuncCode": "int64_t sub_401bb6()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401bc6",
            "funcStartAddr": "0x401bc6",
            "funcEndAddr": "0x401bd0",
            "decompiledFuncCode": "int64_t sub_401bc6()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401bd6",
            "funcStartAddr": "0x401bd6",
            "funcEndAddr": "0x401be0",
            "decompiledFuncCode": "int64_t sub_401bd6()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401be6",
            "funcStartAddr": "0x401be6",
            "funcEndAddr": "0x401bf0",
            "decompiledFuncCode": "int64_t sub_401be6()\n{\n    int64_t var_8 = 0x27;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401c06",
            "funcStartAddr": "0x401c06",
            "funcEndAddr": "0x401c10",
            "decompiledFuncCode": "int64_t sub_401c06()\n{\n    int64_t var_8 = 0x29;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401c26",
            "funcStartAddr": "0x401c26",
            "funcEndAddr": "0x401c30",
            "decompiledFuncCode": "int64_t sub_401c26()\n{\n    int64_t var_8 = 0x2b;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401c36",
            "funcStartAddr": "0x401c36",
            "funcEndAddr": "0x401c40",
            "decompiledFuncCode": "int64_t sub_401c36()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401c46",
            "funcStartAddr": "0x401c46",
            "funcEndAddr": "0x401c50",
            "decompiledFuncCode": "int64_t sub_401c46()\n{\n    int64_t var_8 = 0x2d;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401c56",
            "funcStartAddr": "0x401c56",
            "funcEndAddr": "0x401c60",
            "decompiledFuncCode": "int64_t sub_401c56()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401c66",
            "funcStartAddr": "0x401c66",
            "funcEndAddr": "0x401c70",
            "decompiledFuncCode": "int64_t sub_401c66()\n{\n    int64_t var_8 = 0x2f;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401c76",
            "funcStartAddr": "0x401c76",
            "funcEndAddr": "0x401c80",
            "decompiledFuncCode": "int64_t sub_401c76()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401c86",
            "funcStartAddr": "0x401c86",
            "funcEndAddr": "0x401c90",
            "decompiledFuncCode": "int64_t sub_401c86()\n{\n    int64_t var_8 = 0x31;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401c96",
            "funcStartAddr": "0x401c96",
            "funcEndAddr": "0x401ca0",
            "decompiledFuncCode": "int64_t sub_401c96()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401ca6",
            "funcStartAddr": "0x401ca6",
            "funcEndAddr": "0x401cb0",
            "decompiledFuncCode": "int64_t sub_401ca6()\n{\n    int64_t var_8 = 0x33;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401cb6",
            "funcStartAddr": "0x401cb6",
            "funcEndAddr": "0x401cc0",
            "decompiledFuncCode": "int64_t sub_401cb6()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401cc6",
            "funcStartAddr": "0x401cc6",
            "funcEndAddr": "0x401cd0",
            "decompiledFuncCode": "int64_t sub_401cc6()\n{\n    int64_t var_8 = 0x35;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401cd6",
            "funcStartAddr": "0x401cd6",
            "funcEndAddr": "0x401ce0",
            "decompiledFuncCode": "int64_t sub_401cd6()\n{\n    int64_t var_8 = 0x36;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401ce6",
            "funcStartAddr": "0x401ce6",
            "funcEndAddr": "0x401cf0",
            "decompiledFuncCode": "int64_t sub_401ce6()\n{\n    int64_t var_8 = 0x37;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401cf6",
            "funcStartAddr": "0x401cf6",
            "funcEndAddr": "0x401d00",
            "decompiledFuncCode": "int64_t sub_401cf6()\n{\n    int64_t var_8 = 0x38;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401d06",
            "funcStartAddr": "0x401d06",
            "funcEndAddr": "0x401d10",
            "decompiledFuncCode": "int64_t sub_401d06()\n{\n    int64_t var_8 = 0x39;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401d16",
            "funcStartAddr": "0x401d16",
            "funcEndAddr": "0x401d20",
            "decompiledFuncCode": "int64_t sub_401d16()\n{\n    int64_t var_8 = 0x3a;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401d26",
            "funcStartAddr": "0x401d26",
            "funcEndAddr": "0x401d30",
            "decompiledFuncCode": "int64_t sub_401d26()\n{\n    int64_t var_8 = 0x3b;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401d36",
            "funcStartAddr": "0x401d36",
            "funcEndAddr": "0x401d40",
            "decompiledFuncCode": "int64_t sub_401d36()\n{\n    int64_t var_8 = 0x3c;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401d46",
            "funcStartAddr": "0x401d46",
            "funcEndAddr": "0x401d50",
            "decompiledFuncCode": "int64_t sub_401d46()\n{\n    int64_t var_8 = 0x3d;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401d56",
            "funcStartAddr": "0x401d56",
            "funcEndAddr": "0x401d60",
            "decompiledFuncCode": "int64_t sub_401d56()\n{\n    int64_t var_8 = 0x3e;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401d66",
            "funcStartAddr": "0x401d66",
            "funcEndAddr": "0x401d70",
            "decompiledFuncCode": "int64_t sub_401d66()\n{\n    int64_t var_8 = 0x3f;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401d76",
            "funcStartAddr": "0x401d76",
            "funcEndAddr": "0x401d80",
            "decompiledFuncCode": "int64_t sub_401d76()\n{\n    int64_t var_8 = 0x40;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401d86",
            "funcStartAddr": "0x401d86",
            "funcEndAddr": "0x401d90",
            "decompiledFuncCode": "int64_t sub_401d86()\n{\n    int64_t var_8 = 0x41;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401d96",
            "funcStartAddr": "0x401d96",
            "funcEndAddr": "0x401da0",
            "decompiledFuncCode": "int64_t sub_401d96()\n{\n    int64_t var_8 = 0x42;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401da6",
            "funcStartAddr": "0x401da6",
            "funcEndAddr": "0x401db0",
            "decompiledFuncCode": "int64_t sub_401da6()\n{\n    int64_t var_8 = 0x43;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401db6",
            "funcStartAddr": "0x401db6",
            "funcEndAddr": "0x401dc0",
            "decompiledFuncCode": "int64_t sub_401db6()\n{\n    int64_t var_8 = 0x44;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401dc6",
            "funcStartAddr": "0x401dc6",
            "funcEndAddr": "0x401dd0",
            "decompiledFuncCode": "int64_t sub_401dc6()\n{\n    int64_t var_8 = 0x45;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401dd6",
            "funcStartAddr": "0x401dd6",
            "funcEndAddr": "0x401de0",
            "decompiledFuncCode": "int64_t sub_401dd6()\n{\n    int64_t var_8 = 0x46;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401de6",
            "funcStartAddr": "0x401de6",
            "funcEndAddr": "0x401df0",
            "decompiledFuncCode": "int64_t sub_401de6()\n{\n    int64_t var_8 = 0x47;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "sub_401e06",
            "funcStartAddr": "0x401e06",
            "funcEndAddr": "0x401e10",
            "decompiledFuncCode": "int64_t sub_401e06()\n{\n    int64_t var_8 = 0x49;\n    /* tailcall */\n    return sub_401960();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x401e60",
            "funcEndAddr": "0x4046d6",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    void* r13;\n    void* var_18 = r13;\n    char* rdi = *argv;\n    uint64_t var_178 = 0xa;\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rcx = sub_407b40(rdi);\n    int64_t var_208;\n    char var_200;\n    setlocale(6, &data_40ee81[0x1b], rdx, rcx, r8, r9, var_208, var_200);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    sub_40c180(sub_406590);\n    data_61237a = 0;\n    data_612385 = 1;\n    data_612381 = 0;\n    data_612382 = 0;\n    data_612384 = 0;\n    data_612380 = 0xa;\n    int64_t rax_3;\n    uint64_t* rbx_33;\n    int64_t rbp_17;\n    char r12_2;\n    if (argc == 2)\n    {\n    label_401f0b:\n        int32_t rax_2 = sub_407ac0();\n        char* rdx_1 = argv[1];\n        char rcx_1 = *rdx_1;\n        void* rdi_2 = &rdx_1[1];\n        if (rcx_1 == 0x2b)\n        {\n            r12_2 = 1;\n            if ((rax_2 - 0x30db0) <= 0x2b8)\n            {\n                goto label_401f2d;\n            }\n            goto label_4022f5;\n        }\n        if (rcx_1 != 0x2d)\n        {\n            goto label_401f2d;\n        }\n        if (rax_2 > 0x30daf)\n        {\n            int64_t rax_19;\n            rax_19 = rdx_1[1] == 0x63;\n            if (rdx_1[(rax_19 + 1)] == 0)\n            {\n                goto label_401f2d;\n            }\n            goto label_4022f2;\n        }\n    label_4022f2:\n        r12_2 = 0;\n    label_4022f5:\n        int32_t rax_20 = rdx_1[1];\n        void* rdx_7 = rdi_2;\n        char rcx_5 = rax_20;\n        if ((rax_20 - 0x30) <= 9)\n        {\n            int32_t rax_22;\n            do\n            {\n                rdx_7 = (rdx_7 + 1);\n                rax_22 = *rdx_7;\n                rcx_5 = rax_22;\n            } while ((rax_22 - 0x30) <= 9);\n        }\n        int32_t rcx_6;\n        if (rcx_5 == 0x63)\n        {\n            r13 = nullptr;\n            rcx_6 = 0xa;\n        }\n        else if (rcx_5 == 0x6c)\n        {\n            r13 = 1;\n            rcx_6 = 0xa;\n        }\n        else if (rcx_5 == 0x62)\n        {\n            r13 = nullptr;\n            rcx_6 = 0x1400;\n        }\n        void* rax_24;\n        if (((rcx_5 == 0x62 || rcx_5 == 0x63) || rcx_5 == 0x6c))\n        {\n            rax_24 = (rdx_7 + 1);\n        }\n        if (((rcx_5 != 0x63 && rcx_5 != 0x6c) && rcx_5 != 0x62))\n        {\n            rax_24 = rdx_7;\n            r13 = 1;\n            rcx_6 = 0xa;\n        }\n        char r14_2 = 0;\n        if (*rax_24 == 0x66)\n        {\n            rax_24 = (rax_24 + 1);\n            r14_2 = 1;\n        }\n        if (*rax_24 != 0)\n        {\n            goto label_401f2d;\n        }\n        if (rdi_2 == rdx_7)\n        {\n            var_178 = rcx_6;\n        }\n        else if ((sub_40a260(rdi_2, nullptr, 0xa, &var_178, &data_40c38c) & 0xfffffffd) != 0)\n        {\n            rbp_17 = sub_409760(argv[1]);\n            rbx_33 = dcgettext(nullptr, \"invalid number\", 5);\n            error(1, *__errno_location(), \"%s: %s\", rbx_33, rbp_17);\n            goto label_403f05;\n        }\n        data_612382 = r12_2;\n        rax_3 = 1;\n        data_612385 = r13;\n        data_612384 = r14_2;\n    }\n    else\n    {\n        char* rdi_1;\n        if (argc == 4)\n        {\n            rdi_1 = argv[2];\n        }\n        if ((argc != 3 && argc != 4))\n        {\n        label_401f2d:\n            rax_3 = 0;\n        }\n        if (argc == 3)\n        {\n            rdi_1 = argv[2];\n            if (*rdi_1 != 0x2d)\n            {\n                goto label_401f0b;\n            }\n            if (rdi_1[1] == 0)\n            {\n                goto label_401f0b;\n            }\n        }\n        if ((argc == 4 || argc == 3))\n        {\n            if (strcmp(rdi_1, &data_40c389) == 0)\n            {\n                goto label_401f0b;\n            }\n            goto label_401f2d;\n        }\n    }\n    void* r12_1 = &argv[rax_3];\n    int64_t rbx_1 = 0;\n    int32_t rbp_1 = (argc - rax_3);\n    double var_1d0 = 1.0;\n    double var_c8;\n    int32_t rax_4;\n    int32_t r8_1;\n    while (true)\n    {\n        rax_4 = getopt_long(rbp_1, r12_1, \"c:n:fFqs:vz0123456789\", &data_40d560, nullptr);\n        if (rax_4 == 0xffffffff)\n        {\n            break;\n        }\n        bool cond:1_1 = rax_4 <= 0x71;\n        if (rax_4 == 0x71)\n        {\n            rbx_1 = 2;\n        }\n        else\n        {\n            double zmm0;\n            bool cond:2_1;\n            if ((!cond:1_1))\n            {\n                cond:2_1 = rax_4 > 0x81;\n                if (rax_4 == 0x81)\n                {\n                    int64_t rax_15;\n                    rax_15 = sub_40a130(data_612540, 0, -1, &data_40ee81[0x1b], dcgettext(nullptr, \"invalid maximum number of unchan\u2026\", 5), 0);\n                    data_6122a0 = rax_15;\n                    continue;\n                }\n                else if (cond:2_1)\n                {\n                    bool cond:6_1 = rax_4 < 0x83;\n                    if (rax_4 == 0x83)\n                    {\n                        data_612379 = 1;\n                        continue;\n                    }\n                    else if (cond:6_1)\n                    {\n                        int32_t rax_17;\n                        rax_17 = sub_40a130(data_612540, 0, 0x7fffffff, &data_40ee81[0x1b], dcgettext(nullptr, \"invalid PID\", 5), 0);\n                        data_61237c = rax_17;\n                        continue;\n                    }\n                    else if (rax_4 != 0x84)\n                    {\n                        if (rax_4 == 0x85)\n                        {\n                            data_612378 = 1;\n                            continue;\n                        }\n                        goto label_403adc;\n                    }\n                }\n                else\n                {\n                    bool cond:7_1 = rax_4 <= 0x76;\n                    if (rax_4 == 0x76)\n                    {\n                        rbx_1 = 1;\n                        continue;\n                    }\n                    else\n                    {\n                        if ((!cond:7_1))\n                        {\n                            if (rax_4 == 0x7a)\n                            {\n                                data_612380 = 0;\n                                continue;\n                            }\n                            else if (rax_4 == 0x80)\n                            {\n                                data_612386 = 1;\n                                continue;\n                            }\n                            goto label_403adc;\n                        }\n                        if (rax_4 != 0x73)\n                        {\n                        label_403adc:\n                            sub_405d10(1);\n                            /* no return */\n                        }\n                        if (sub_40a1c0(data_612540, nullptr, &var_c8, 0x406500, zmm0) != 0)\n                        {\n                            double zmm1 = var_c8;\n                            var_1d0 = zmm1;\n                            if ((!(zmm1 < 0.0 | (FCMP_UO(zmm1, 0.0)))))\n                            {\n                                continue;\n                            }\n                        }\n                        rbx_1 = sub_409760(data_612540);\n                        rax_4 = error(1, 0, dcgettext(nullptr, \"invalid number of seconds: %s\", 5), rbx_1);\n                    }\n                }\n            }\n            bool cond:3_1;\n            if ((cond:1_1 && rax_4 > 0x39))\n            {\n                cond:3_1 = rax_4 > 0x63;\n            }\n            if ((((cond:1_1 && cond:3_1) && rax_4 == 0x66) || (((!cond:1_1) && rax_4 != 0x81) && cond:2_1)))\n            {\n                int64_t rsi_1 = data_612540;\n                data_612384 = 1;\n                if (rsi_1 == 0)\n                {\n                    data_6122a8 = 2;\n                    continue;\n                }\n                else\n                {\n                    int64_t rax_5;\n                    rax_5 = sub_406440(\"--follow\", rsi_1, &data_40d770, 0x40d760, 4, data_6122b8);\n                    data_6122a8 = *((rax_5 << 2) + 0x40d760);\n                    continue;\n                }\n            }\n            if ((((((cond:1_1 && rax_4 > 0x39) && rax_4 != 0x63) && cond:3_1) && rax_4 != 0x66) || (((!cond:1_1) && rax_4 != 0x81) && (!cond:2_1))))\n            {\n                if (rax_4 != 0x6e)\n                {\n                    goto label_403adc;\n                }\n                goto label_402151;\n            }\n            if (cond:1_1)\n            {\n                if (((rax_4 > 0x39 && rax_4 != 0x63) && (!cond:3_1)))\n                {\n                    if (rax_4 == 0x46)\n                    {\n                        data_612384 = 1;\n                        data_6122a8 = 1;\n                        data_612386 = 1;\n                        continue;\n                    }\n                    goto label_403adc;\n                }\n                if (rax_4 == 0x63)\n                {\n                label_402151:\n                    int64_t rdx_6 = data_612540;\n                    data_612385 = rax_4 == 0x6e;\n                    char rcx_4 = *rdx_6;\n                    if (rcx_4 == 0x2b)\n                    {\n                        data_612382 = 1;\n                    }\n                    else if (rcx_4 == 0x2d)\n                    {\n                        data_612540 = (rdx_6 + 1);\n                    }\n                    char* r8_3;\n                    if (rax_4 == 0x6e)\n                    {\n                        r8_3 = dcgettext(nullptr, \"invalid number of lines\", 5);\n                    }\n                    else\n                    {\n                        r8_3 = dcgettext(nullptr, \"invalid number of bytes\", 5);\n                    }\n                    uint64_t rax_13;\n                    rax_13 = sub_40a130(data_612540, 0, -1, \"bkKmMGTPEZY0\", r8_3, 0);\n                    var_178 = rax_13;\n                    continue;\n                }\n                if (rax_4 <= 0x39)\n                {\n                    if (rax_4 >= 0x30)\n                    {\n                        error(1, 0, dcgettext(nullptr, \"option used in invalid context -\u2026\", 5), rax_4);\n                    }\n                    else\n                    {\n                        if (rax_4 == 0xffffff7d)\n                        {\n                            int64_t var_218 = 0;\n                            char const* const var_220 = \"Jim Meyering\";\n                            char const* const var_228 = \"Ian Lance Taylor\";\n                            sub_409c90(stdout, \"tail\", \"GNU coreutils\", data_6122b0);\n                            exit(0);\n                            /* no return */\n                        }\n                        if (rax_4 == 0xffffff7e)\n                        {\n                            sub_405d10(0);\n                            /* no return */\n                        }\n                    }\n                    goto label_403adc;\n                }\n            }\n        }\n    }\n    if (data_612386 != 0)\n    {\n        char const* const rsi_8;\n        if (data_612384 == 0)\n        {\n            data_612386 = 0;\n            rsi_8 = \"warning: --retry ignored; --retr\u2026\";\n        }\n        if ((data_612384 != 0 && data_6122a8 == 2))\n        {\n            rsi_8 = \"warning: --retry only effective \u2026\";\n        }\n        if ((data_612384 == 0 || (data_612384 != 0 && data_6122a8 == 2)))\n        {\n            r8_1 = error(0, 0, dcgettext(nullptr, rsi_8, 5));\n        }\n    }\n    uint64_t rdi_10;\n    if (((data_612386 != 0 && (data_612384 == 0 || (data_612384 != 0 && data_6122a8 == 2))) || data_612386 == 0))\n    {\n        rdi_10 = data_61237c;\n        if (rdi_10 != 0)\n        {\n            if (data_612384 == 0)\n            {\n                r8_1 = error(0, 0, dcgettext(nullptr, \"warning: PID ignored; --pid=PID \u2026\", 5));\n            }\n            else\n            {\n            label_402429:\n                int32_t rax_28;\n                rax_28 = kill(rdi_10, 0);\n                if (rax_28 != 0)\n                {\n                    int32_t* rax_193;\n                    rax_193 = __errno_location();\n                    if (*rax_193 == 0x26)\n                    {\n                        r8_1 = error(0, 0, dcgettext(nullptr, \"warning: --pid=PID is not suppor\u2026\", 5));\n                        data_61237c = 0;\n                    }\n                }\n            }\n        }\n    }\n    if (((data_612386 != 0 && data_612384 != 0) && data_6122a8 != 2))\n    {\n        rdi_10 = data_61237c;\n        if (rdi_10 != 0)\n        {\n            goto label_402429;\n        }\n    }\n    if (data_612382 != 0)\n    {\n        uint64_t rax_29 = var_178;\n        if (rax_29 != 0)\n        {\n            var_178 = (rax_29 - 1);\n        }\n    }\n    int64_t rax_31 = data_61233c;\n    void* rbp_3;\n    if (rax_31 >= rbp_1)\n    {\n        rbp_3 = &data_612298;\n        var_208 = 1;\n    }\n    else\n    {\n        rbp_3 = (r12_1 + (rax_31 << 3));\n        var_208 = (rbp_1 - rax_31);\n    }\n    char r8_6 = 0;\n    bool c_2 = false;\n    bool z_1 = (r8_1 ^ r8_1) == 0;\n    void* r12_3 = (rbp_3 + (var_208 << 3));\n    void* rax_33 = rbp_3;\n    do\n    {\n        char* rsi_2 = *rax_33;\n        int64_t rcx_9 = 2;\n        void* const rdi_11 = &data_40c38a;\n        while (rcx_9 != 0)\n        {\n            char temp2_1 = *rsi_2;\n            char temp3_1 = *rdi_11;\n            c_2 = temp2_1 < temp3_1;\n            z_1 = temp2_1 == temp3_1;\n            rsi_2 = &rsi_2[1];\n            rdi_11 = (rdi_11 + 1);\n            rcx_9 = (rcx_9 - 1);\n            if ((!z_1))\n            {\n                break;\n            }\n        }\n        if ((((!z_1) && (!c_2)) - 0) == 0)\n        {\n            r8_6 = 1;\n        }\n        rax_33 = (rax_33 + 8);\n        c_2 = rax_33 < r12_3;\n        z_1 = rax_33 == r12_3;\n    } while ((!z_1));\n    int32_t var_b0;\n    if (r8_6 != 0)\n    {\n        int32_t rax_34 = data_6122a8;\n        if (rax_34 == 1)\n        {\n            error(1, 0, dcgettext(nullptr, \"cannot follow %s by name\", 5), sub_409510(4, &data_40c38a));\n        label_403e5a:\n            __assert_fail(&data_40c4a7, \"src/tail.c\", 0x2c9, \"pipe_lines\");\n            /* no return */\n        }\n        if (data_612384 == 0)\n        {\n            if (var_178 != 0)\n            {\n                goto label_402544;\n            }\n            goto label_4030c4;\n        }\n        if (data_61237c != 0)\n        {\n        label_402841:\n            if (isatty(0) != 0)\n            {\n                error(0, 0, dcgettext(nullptr, \"warning: following standard inpu\u2026\", 5));\n            }\n        }\n        else\n        {\n            if (var_208 != 1)\n            {\n                goto label_402841;\n            }\n            if (rax_34 != 2)\n            {\n                goto label_402841;\n            }\n            if (__fxstat(1, 0, &var_c8) != 0)\n            {\n                goto label_402841;\n            }\n            if ((var_b0 & 0xf000) == 0x8000)\n            {\n                goto label_402841;\n            }\n        }\n    }\n    uint32_t rax_82;\n    if (var_178 != 0)\n    {\n    label_402544:\n        size_t rax_38 = (var_208 * 0x60);\n        size_t var_1a0 = rax_38;\n        void* rax_39 = sub_409dd0(rax_38);\n        void* var_1b8 = rax_39;\n        uint64_t rdx_9;\n        do\n        {\n            rdx_9 = *rbp_3;\n            rbp_3 = (rbp_3 + 8);\n            rax_39 = (rax_39 + 0x60);\n            *(rax_39 - 0x60) = rdx_9;\n        } while (rbp_3 != r12_3);\n        if ((rbx_1 == 1 || (rbx_1 == 0 && var_208 != 1)))\n        {\n            data_612381 = 1;\n        }\n        void* r15_1 = var_1b8;\n        int32_t var_198 = rax_4;\n        char var_17d = 1;\n        bool c_3 = (var_1a0 + r15_1) < var_1a0;\n        bool z_2 = var_1a0 == (-r15_1);\n        int64_t* r14_4 = r15_1;\n        void* var_1c0 = (var_1a0 + r15_1);\n        while (true)\n        {\n            int64_t rcx_10 = 2;\n            void* const rdi_13 = &data_40c38a;\n            uint64_t var_1e0 = var_178;\n            char* rax_43 = *r14_4;\n            char* rsi_3 = rax_43;\n            while (rcx_10 != 0)\n            {\n                char temp5_1 = *rsi_3;\n                char temp6_1 = *rdi_13;\n                c_3 = temp5_1 < temp6_1;\n                z_2 = temp5_1 == temp6_1;\n                rsi_3 = &rsi_3[1];\n                rdi_13 = (rdi_13 + 1);\n                rcx_10 = (rcx_10 - 1);\n                if ((!z_2))\n                {\n                    break;\n                }\n            }\n            rdx_9 = ((!z_2) && (!c_3));\n            rdx_9 = (rdx_9 - 0);\n            int32_t rsi_4 = rdx_9;\n            int32_t var_1d4 = rsi_4;\n            int64_t* var_1f0;\n            int32_t rax_71;\n            char rbx_3;\n            if (rsi_4 != 0)\n            {\n                rax_71 = sub_406780(rax_43, 0, rdx_9);\n                rbx_3 = data_612386;\n                var_200 = rax_71;\n                if (rbx_3 == 0)\n                {\n                    *(r14_4 + 0x36) = 1;\n                    if (var_200 != 0xffffffff)\n                    {\n                        rax_43 = *r14_4;\n                    }\n                }\n                else if (rax_71 != 0xffffffff)\n                {\n                    rax_43 = *r14_4;\n                }\n                else\n                {\n                    *(r14_4 + 0x36) = 0;\n                }\n                if (((rbx_3 != 0 && rax_71 == 0xffffffff) || (rbx_3 == 0 && var_200 == 0xffffffff)))\n                {\n                    int32_t* rax_73 = __errno_location();\n                    if (data_612384 != 0)\n                    {\n                        int32_t rax_74 = *rax_73;\n                        r14_4[7] = 0xffffffff;\n                        *(r14_4 + 0x34) = (rbx_3 ^ 1);\n                        *(r14_4 + 0x3c) = rax_74;\n                        r14_4[5] = 0;\n                        r14_4[4] = 0;\n                    }\n                    error(0, *rax_73, dcgettext(nullptr, \"cannot open %s for reading\", 5), sub_409510(4, sub_4047e0(*r14_4)));\n                    var_1f0 = 0;\n                }\n            }\n            else\n            {\n                data_61237a = 1;\n                var_200 = 0;\n            }\n            if ((rsi_4 == 0 || ((rsi_4 != 0 && rbx_3 != 0) && rax_71 != 0xffffffff)))\n            {\n                *(r14_4 + 0x36) = 1;\n            }\n            char var_1f8;\n            void* var_1e8;\n            char var_1c8;\n            uint32_t var_1b0;\n            int64_t* var_1a8;\n            uint64_t var_158;\n            int64_t var_c0;\n            void* var_98;\n            int64_t var_70;\n            int64_t var_68;\n            if (((rsi_4 == 0 || ((rsi_4 != 0 && rbx_3 != 0) && rax_71 != 0xffffffff)) || ((rsi_4 != 0 && rbx_3 == 0) && var_200 != 0xffffffff)))\n            {\n                if (data_612381 != 0)\n                {\n                    char* rax_101 = sub_4047e0(rax_43);\n                    char const* const rdx_23 = &data_40ee81[0x1b];\n                    if (data_612290 == 0)\n                    {\n                        rdx_23 = \"\\n\";\n                    }\n                    __printf_chk(1, \"%s==> %s <==\\n\", rdx_23, rax_101);\n                    data_612290 = 0;\n                }\n                int32_t rsi_5 = var_200;\n                var_158 = 0;\n                var_1c8 = sub_4047e0(*r14_4);\n                char rax_45 = data_612385;\n                double* rdx_10 = &var_c8;\n                var_1f0 = rax_45;\n                if (rax_45 == 0)\n                {\n                    if (__fxstat(1, rsi_5, rdx_10) != 0)\n                    {\n                        int64_t rax_138 = sub_409510(4, var_1c8);\n                        error(0, *__errno_location(), dcgettext(nullptr, \"cannot fstat %s\", 5), rax_138);\n                    }\n                    else\n                    {\n                        char rax_84 = data_612382;\n                        var_1f0 = rax_84;\n                        char rax_85 = data_612379;\n                        if (rax_84 == 0)\n                        {\n                            if (rax_85 == 0)\n                            {\n                                if (var_1e0 < 0)\n                                {\n                                    goto label_402d5b;\n                                }\n                                int64_t rbx_15;\n                                void* rbp_14;\n                                if ((var_b0 & 0xd000) == 0x8000)\n                                {\n                                    rbp_14 = var_98;\n                                    rbx_15 = -1;\n                                }\n                                else\n                                {\n                                    r15_1 = var_1e0;\n                                    int64_t rax_196 = lseek(var_200, (-r15_1), 2);\n                                    rbx_15 = rax_196;\n                                    if (rax_196 == -1)\n                                    {\n                                        goto label_402d5b;\n                                    }\n                                    rbp_14 = (rax_196 + r15_1);\n                                }\n                                int64_t var_90;\n                                int64_t rax_144 = var_90;\n                                if ((rax_144 - 1) > 0x1fffffffffffffff)\n                                {\n                                    rax_144 = 0x200;\n                                }\n                                if (rbp_14 <= rax_144)\n                                {\n                                    goto label_402d5b;\n                                }\n                                if (rbx_15 == -1)\n                                {\n                                    rbx_15 = sub_404c20(var_200, 0, 1, var_1c8);\n                                }\n                                if ((rbp_14 > rbx_15 && var_1e0 < (rbp_14 - rbx_15)))\n                                {\n                                    rbx_15 = (rbp_14 - var_1e0);\n                                    sub_404c20(var_200, rbx_15, 0, var_1c8);\n                                }\n                                var_158 = rbx_15;\n                                goto label_402a4c;\n                            }\n                        label_402d5b:\n                            void* r12_7 = nullptr;\n                            void* rax_125 = sub_409dd0(0x2010);\n                            *(rax_125 + 0x2000) = 0;\n                            *(rax_125 + 0x2008) = 0;\n                            void* rbp_11 = rax_125;\n                            var_1f8 = r14_4;\n                            r15_1 = var_200;\n                            void* r14_6 = rax_125;\n                            void* rbx_12 = sub_409dd0(0x2010);\n                            r13 = var_1e0;\n                            void* rax_130;\n                            while (true)\n                            {\n                                rax_130 = sub_409780(r15_1, rbx_12, 0x2000);\n                                if ((rax_130 - 1) > -3)\n                                {\n                                    break;\n                                }\n                                var_158 = (var_158 + rax_130);\n                                r12_7 = (r12_7 + rax_130);\n                                *(rbx_12 + 0x2000) = rax_130;\n                                int64_t rdx_28 = *(r14_6 + 0x2000);\n                                *(rbx_12 + 0x2008) = 0;\n                                void* rax_129;\n                                if ((rax_130 + rdx_28) <= 0x1fff)\n                                {\n                                    memcpy((r14_6 + rdx_28), rbx_12, rax_130);\n                                    *(r14_6 + 0x2000) = (*(r14_6 + 0x2000) + *(rbx_12 + 0x2000));\n                                    rax_129 = rbx_12;\n                                    rbx_12 = r14_6;\n                                }\n                                else\n                                {\n                                    void* rax_128 = (r12_7 - *(rbp_11 + 0x2000));\n                                    *(r14_6 + 0x2008) = rbx_12;\n                                    if (r13 >= rax_128)\n                                    {\n                                        rax_129 = sub_409dd0(0x2010);\n                                    }\n                                    else\n                                    {\n                                        r12_7 = rax_128;\n                                        rax_129 = rbp_11;\n                                        rbp_11 = *(rbp_11 + 0x2008);\n                                    }\n                                }\n                                r14_6 = rbx_12;\n                                rbx_12 = rax_129;\n                            }\n                            var_1e8 = rax_130;\n                            r14_4 = var_1f8;\n                            void* rbx_26 = rbp_11;\n                            free(rbx_12);\n                            void* rdi_60;\n                            if (var_1e8 == -1)\n                            {\n                                int64_t rax_235 = sub_409510(4, var_1c8);\n                                error(0, *__errno_location(), dcgettext(nullptr, \"error reading %s\", 5), rax_235);\n                                rdi_60 = rbp_11;\n                            }\n                            else\n                            {\n                                int64_t rsi_46;\n                                while (true)\n                                {\n                                    rsi_46 = *(rbx_26 + 0x2000);\n                                    void* rax_224 = (r12_7 - rsi_46);\n                                    if (var_1e0 >= rax_224)\n                                    {\n                                        break;\n                                    }\n                                    rbx_26 = *(rbx_26 + 0x2008);\n                                    r12_7 = rax_224;\n                                }\n                                void* rax_225 = nullptr;\n                                if (var_1e0 < r12_7)\n                                {\n                                    rax_225 = (r12_7 - var_1e0);\n                                }\n                                uint64_t rsi_47 = (rsi_46 - rax_225);\n                                if (rsi_46 != rax_225)\n                                {\n                                    sub_4048a0((rbx_26 + rax_225), rsi_47);\n                                }\n                                while (true)\n                                {\n                                    rbx_26 = *(rbx_26 + 0x2008);\n                                    if (rbx_26 == 0)\n                                    {\n                                        break;\n                                    }\n                                    uint64_t rsi_48 = *(rbx_26 + 0x2000);\n                                    if (rsi_48 != 0)\n                                    {\n                                        sub_4048a0(rbx_26, rsi_48);\n                                    }\n                                }\n                                var_1f0 = 1;\n                                rdi_60 = rbp_11;\n                            }\n                            void* rbx_27;\n                            for (; rdi_60 != 0; rdi_60 = rbx_27)\n                            {\n                                rbx_27 = *(rdi_60 + 0x2008);\n                                free(rdi_60);\n                            }\n                        }\n                        else if (rax_85 != 0)\n                        {\n                        label_402ae9:\n                            int32_t rax_98;\n                            rax_98 = sub_404b40(var_1c8, var_200, var_1e0, &var_158);\n                            var_1e0 = -1;\n                            if (rax_98 == 0)\n                            {\n                                goto label_402a4c;\n                            }\n                            var_1f0 = (rax_98 >> 0x1f);\n                        }\n                        else\n                        {\n                            if (var_1e0 < 0)\n                            {\n                                goto label_402ae9;\n                            }\n                            off64_t rax_232;\n                            if ((var_b0 & 0xf000) == 0x8000)\n                            {\n                                rax_232 = sub_404c20(var_200, var_1e0, 1, var_1c8);\n                                if (rax_232 >= 0)\n                                {\n                                label_402a2b:\n                                    var_158 = (var_158 + var_1e0);\n                                    var_1e0 = -1;\n                                label_402a4c:\n                                    int64_t rax_91;\n                                    rax_91 = sub_404a20(0, var_1c8, var_200, var_1e0);\n                                    var_158 = (var_158 + rax_91);\n                                    var_1f0 = 1;\n                                }\n                            }\n                            if (((var_b0 & 0xf000) != 0x8000 || ((var_b0 & 0xf000) == 0x8000 && rax_232 < 0)))\n                            {\n                                if (lseek(var_200, var_1e0, 1) == -1)\n                                {\n                                    goto label_402ae9;\n                                }\n                                goto label_402a2b;\n                            }\n                        }\n                    }\n                }\n                else\n                {\n                    if (__fxstat(1, rsi_5, rdx_10) != 0)\n                    {\n                        int64_t rax_134 = sub_409510(4, var_1c8);\n                        error(0, *__errno_location(), dcgettext(nullptr, \"cannot fstat %s\", 5), rax_134);\n                        var_1b0 = 0;\n                    }\n                    else\n                    {\n                        char rax_47 = data_612382;\n                        var_1b0 = rax_47;\n                        if (rax_47 != 0)\n                        {\n                            int32_t rax_132;\n                            rax_132 = sub_404920(var_1c8, var_200, var_1e0, &var_158);\n                            if (rax_132 == 0)\n                            {\n                                int64_t rax_155;\n                                rax_155 = sub_404a20(0, var_1c8, var_200, -1);\n                                var_158 = (var_158 + rax_155);\n                            }\n                            else\n                            {\n                                var_1b0 = (rax_132 >> 0x1f);\n                            }\n                        }\n                        else\n                        {\n                            if (data_612379 != 0)\n                            {\n                                goto label_402687;\n                            }\n                            if ((var_b0 & 0xf000) != 0x8000)\n                            {\n                                goto label_402687;\n                            }\n                            r15_1 = var_200;\n                            off64_t rax_152 = lseek(r15_1, 0, 1);\n                            if (rax_152 == -1)\n                            {\n                                goto label_402687;\n                            }\n                            uint64_t rax_153;\n                            rax_153 = lseek(r15_1, 0, 2);\n                            if (rax_152 < rax_153)\n                            {\n                                var_158 = rax_153;\n                                var_1b0 = var_1f0;\n                                if (rax_153 != 0)\n                                {\n                                    char rax_154;\n                                    rax_154 = sub_404cd0(var_1c8, var_200, var_1e0, rax_152, rax_153, &var_158);\n                                    var_1b0 = rax_154;\n                                }\n                            }\n                            else\n                            {\n                                sub_404c20(var_200, rax_152, 0, var_1c8);\n                            label_402687:\n                                void* rax_50 = sub_409dd0(0x2018);\n                                *(rax_50 + 0x2008) = 0;\n                                *(rax_50 + 0x2000) = 0;\n                                *(rax_50 + 0x2010) = 0;\n                                var_1f8 = rax_50;\n                                var_1a8 = r14_4;\n                                void* r14_5 = rax_50;\n                                var_1e8 = nullptr;\n                                r15_1 = sub_409dd0(0x2018);\n                                ssize_t rax_52;\n                                while (true)\n                                {\n                                    rax_52 = sub_409780(var_200, r15_1, 0x2000);\n                                    if ((rax_52 - 1) > -3)\n                                    {\n                                        break;\n                                    }\n                                    *(r15_1 + 0x2000) = rax_52;\n                                    r13 = (r15_1 + rax_52);\n                                    void* rdi_16 = r15_1;\n                                    int64_t rbp_5 = 0;\n                                    var_158 = (var_158 + rax_52);\n                                    int32_t r12_4 = data_612380;\n                                    *(r15_1 + 0x2008) = 0;\n                                    *(r15_1 + 0x2010) = 0;\n                                    while (true)\n                                    {\n                                        char* rax_54 = sub_40b730(rdi_16, r12_4, (r13 - rdi_16));\n                                        int64_t rdx_13 = (rbp_5 + 1);\n                                        if (rax_54 == 0)\n                                        {\n                                            break;\n                                        }\n                                        *(r15_1 + 0x2008) = rdx_13;\n                                        rdi_16 = &rax_54[1];\n                                        rbp_5 = rdx_13;\n                                    }\n                                    void* rdi_17 = *(var_1f8 + 0x2000);\n                                    void* r12_6 = (var_1e8 + rbp_5);\n                                    if ((rax_52 + rdi_17) <= 0x1fff)\n                                    {\n                                        void* rbp_6 = var_1f8;\n                                        memcpy((rdi_17 + rbp_6), r15_1, rax_52);\n                                        var_1e8 = r12_6;\n                                        *(rbp_6 + 0x2000) = (*(rbp_6 + 0x2000) + *(r15_1 + 0x2000));\n                                        *(rbp_6 + 0x2008) = (*(rbp_6 + 0x2008) + *(r15_1 + 0x2008));\n                                    }\n                                    else\n                                    {\n                                        *(var_1f8 + 0x2010) = r15_1;\n                                        void* rax_59 = (r12_6 - *(r14_5 + 0x2008));\n                                        var_1e8 = rax_59;\n                                        if (var_1e0 >= rax_59)\n                                        {\n                                            var_1f8 = r15_1;\n                                            var_1e8 = r12_6;\n                                            r15_1 = sub_409dd0(0x2018);\n                                        }\n                                        else\n                                        {\n                                            var_1f8 = r15_1;\n                                            r15_1 = r14_5;\n                                            r14_5 = *(r14_5 + 0x2010);\n                                        }\n                                    }\n                                }\n                                r14_4 = var_1a8;\n                                free(r15_1);\n                                int64_t rcx_23;\n                                void* rbx_9;\n                                if (rax_52 == -1)\n                                {\n                                    int64_t rax_228 = sub_409510(4, var_1c8);\n                                    error(0, *__errno_location(), dcgettext(nullptr, \"error reading %s\", 5), rax_228);\n                                }\n                                else\n                                {\n                                    rbx_9 = var_1f8;\n                                    rcx_23 = *(rbx_9 + 0x2000);\n                                    rdx_9 = rcx_23 == 0;\n                                    rdx_9 = (rdx_9 | var_1e0 == 0);\n                                    var_1b0 = rdx_9;\n                                }\n                                void* rdi_29;\n                                if ((rax_52 == -1 || (rax_52 != -1 && rdx_9 != 0)))\n                                {\n                                    rdi_29 = r14_5;\n                                }\n                                if ((rax_52 != -1 && rdx_9 == 0))\n                                {\n                                    int32_t r12_8 = data_612380;\n                                    if (*((rbx_9 + rcx_23) - 1) != r12_8)\n                                    {\n                                        *(rbx_9 + 0x2008) = (*(rbx_9 + 0x2008) + 1);\n                                        var_1e8 = (var_1e8 + 1);\n                                    }\n                                    r13 = r14_5;\n                                    void* rax_148 = (var_1e8 - *(r14_5 + 0x2008));\n                                    if (var_1e0 < rax_148)\n                                    {\n                                        void* rdx_34;\n                                        do\n                                        {\n                                            r13 = *(r13 + 0x2010);\n                                            rdx_34 = rax_148;\n                                            rax_148 = (rax_148 - *(r13 + 0x2008));\n                                        } while (var_1e0 < rax_148);\n                                        var_1e8 = rdx_34;\n                                    }\n                                    void* rdi_36 = r13;\n                                    r15_1 = var_1e8;\n                                    void* rbx_17 = (*(r13 + 0x2000) + r13);\n                                    if (var_1e0 < r15_1)\n                                    {\n                                        r15_1 = (r15_1 - var_1e0);\n                                        char* rax_150;\n                                        void* temp17_1;\n                                        do\n                                        {\n                                            rax_150 = sub_40b730(rdi_36, r12_8, (rbx_17 - rdi_36));\n                                            if (rax_150 == 0)\n                                            {\n                                                break;\n                                            }\n                                            rdi_36 = &rax_150[1];\n                                            temp17_1 = r15_1;\n                                            r15_1 = (r15_1 - 1);\n                                        } while (temp17_1 != 1);\n                                        if (rax_150 == 0)\n                                        {\n                                            goto label_403e5a;\n                                        }\n                                    }\n                                    uint64_t rbx_18 = (rbx_17 - rdi_36);\n                                    if (rbx_17 != rdi_36)\n                                    {\n                                        sub_4048a0(rdi_36, rbx_18);\n                                    }\n                                    void* rbx_19 = *(r13 + 0x2010);\n                                    if (rbx_19 != 0)\n                                    {\n                                        do\n                                        {\n                                            uint64_t rsi_31 = *(rbx_19 + 0x2000);\n                                            if (rsi_31 != 0)\n                                            {\n                                                sub_4048a0(rbx_19, rsi_31);\n                                            }\n                                            rbx_19 = *(rbx_19 + 0x2010);\n                                        } while (rbx_19 != 0);\n                                    }\n                                    rdi_29 = r14_5;\n                                    var_1b0 = var_1f0;\n                                }\n                                if ((((rax_52 == -1 || (rax_52 != -1 && rdx_9 != 0)) && r14_5 != 0) || (rax_52 != -1 && rdx_9 == 0)))\n                                {\n                                    void* rbx_10;\n                                    do\n                                    {\n                                        rbx_10 = *(rdi_29 + 0x2010);\n                                        free(rdi_29);\n                                        rdi_29 = rbx_10;\n                                    } while (rbx_10 != 0);\n                                }\n                            }\n                        }\n                    }\n                    var_1f0 = var_1b0;\n                }\n                if (data_612384 != 0)\n                {\n                    *(r14_4 + 0x3c) = (var_1f0 - 1);\n                    if (__fxstat(1, var_200, &var_c8) < 0)\n                    {\n                        int32_t* rax_116 = __errno_location();\n                        char* rdi_30 = *r14_4;\n                        *(r14_4 + 0x3c) = *rax_116;\n                        error(0, *rax_116, dcgettext(nullptr, \"error reading %s\", 5), sub_409510(4, sub_4047e0(rdi_30)));\n                        goto label_402d21;\n                    }\n                    if (((((var_b0 & 0xf000) - 0x1000) & 0xffffe000) != 0 && (var_b0 & 0xb000) != 0x8000))\n                    {\n                        goto label_403492;\n                    }\n                    if (var_1f0 == 0)\n                    {\n                        goto label_402d21;\n                    }\n                    int32_t rbx_7 = var_200;\n                    int32_t rax_111 = 1;\n                    char* rdi_26 = *r14_4;\n                    r14_4[6] = var_b0;\n                    uint64_t rcx_18 = var_158;\n                    *(r14_4 + 0x34) = 0;\n                    if (var_1d4 == 0)\n                    {\n                        rax_111 = var_198;\n                    }\n                    r14_4[7] = rbx_7;\n                    r14_4[1] = rcx_18;\n                    r14_4[8] = rax_111;\n                    r14_4[2] = var_70;\n                    r14_4[0xb] = 0;\n                    r14_4[3] = var_68;\n                    r14_4[4] = var_c8;\n                    r14_4[5] = var_c0;\n                    char rax_113;\n                    rax_113 = sub_405090(rbx_7, sub_4047e0(rdi_26));\n                    *(r14_4 + 0x35) = rax_113;\n                }\n                else if (var_1d4 != 0)\n                {\n                    int32_t rax_92;\n                    rax_92 = close(var_200);\n                    if (rax_92 != 0)\n                    {\n                        int64_t rax_94 = sub_409510(4, sub_4047e0(*r14_4));\n                        error(0, *__errno_location(), dcgettext(nullptr, \"error reading %s\", 5), rax_94);\n                        var_1f0 = 0;\n                    }\n                }\n            }\n            while (true)\n            {\n                r14_4 = &r14_4[0xc];\n                var_17d = (var_17d & var_1f0);\n                c_3 = var_1c0 < r14_4;\n                z_2 = var_1c0 == r14_4;\n                if ((!z_2))\n                {\n                    break;\n                }\n                char rax_79 = data_612384;\n                var_1c8 = rax_79;\n                if (rax_79 != 0)\n                {\n                    void* rbp_15 = var_1b8;\n                    void* r12_9 = var_1c0;\n                    int64_t rbx_21 = 0;\n                    do\n                    {\n                        if (strcmp(*rbp_15, &data_40c38a) != 0)\n                        {\n                        label_403462:\n                            rbx_21 = (rbx_21 + 1);\n                        }\n                        else\n                        {\n                            if (*(rbp_15 + 0x34) != 0)\n                            {\n                                goto label_403462;\n                            }\n                            int32_t rdi_42 = *(rbp_15 + 0x38);\n                            if (rdi_42 < 0)\n                            {\n                                goto label_403462;\n                            }\n                            if (((*(rbp_15 + 0x30) & 0xf000) != 0x1000 && sub_40b5b0(rdi_42) == 0))\n                            {\n                                goto label_403462;\n                            }\n                            *(rbp_15 + 0x38) = 0xffffffff;\n                            *(rbp_15 + 0x34) = 1;\n                        }\n                        rbp_15 = (rbp_15 + 0x60);\n                    } while (r12_9 != rbp_15);\n                    if (rbx_21 != 0)\n                    {\n                        if (__fxstat(1, 1, &var_158) < 0)\n                        {\n                            error(1, *__errno_location(), dcgettext(nullptr, \"standard output\", 5));\n                            goto label_403e9a;\n                        }\n                        void* rdx_40 = 1;\n                        int32_t var_140;\n                        if ((var_140 & 0xf000) != 0x1000)\n                        {\n                            rdx_40 = sub_40b5b0(1) != 0;\n                        }\n                        data_612383 = rdx_40;\n                        data_612383 = (data_612383 & 1);\n                        char rcx_32;\n                        if (data_612378 == 0)\n                        {\n                            void* rbx_22 = var_1b8;\n                            rbp_15 = var_1c0;\n                            while (true)\n                            {\n                                if (*(rbx_22 + 0x34) == 0)\n                                {\n                                    int32_t rax_163;\n                                    rax_163 = strcmp(*rbx_22, &data_40c38a);\n                                    if (rax_163 == 0)\n                                    {\n                                        break;\n                                    }\n                                }\n                                rbx_22 = (rbx_22 + 0x60);\n                                if (rbp_15 == rbx_22)\n                                {\n                                    rdx_40 = var_1b8;\n                                    int64_t rax_164 = 0;\n                                    while ((!(*((rdx_40 + rax_164) + 0x38) >= 0 && *((rdx_40 + rax_164) + 0x35) != 0)))\n                                    {\n                                        rax_164 = (rax_164 + 0x60);\n                                        if (var_1a0 == rax_164)\n                                        {\n                                            rdx_40 = var_1b8;\n                                            int64_t rax_165 = 0;\n                                            do\n                                            {\n                                                if (*((rdx_40 + rax_165) + 0x38) >= 0)\n                                                {\n                                                    rcx_32 = *((rdx_40 + rax_165) + 0x35);\n                                                    if (rcx_32 == 0)\n                                                    {\n                                                        goto label_403b91;\n                                                    }\n                                                }\n                                                rax_165 = (rax_165 + 0x60);\n                                            } while (var_1a0 != rax_165);\n                                            break;\n                                        }\n                                    }\n                                    break;\n                                }\n                            }\n                        }\n                        int64_t var_168;\n                        uint64_t rcx_33;\n                        char* rbx_24;\n                        while (true)\n                        {\n                            bool cond:13_1 = data_61237c != 0;\n                            data_612378 = 1;\n                            if (cond:13_1)\n                            {\n                            label_4032d2:\n                                r15_1 = nullptr;\n                            }\n                            else\n                            {\n                                if (data_6122a8 != 2)\n                                {\n                                    goto label_4032d2;\n                                }\n                                if (var_208 != 1)\n                                {\n                                    goto label_4032d2;\n                                }\n                                if (*(var_1b8 + 0x38) == 0xffffffff)\n                                {\n                                    goto label_4032d2;\n                                }\n                                int32_t rax_240 = *(var_1b8 + 0x30);\n                                var_200 = rax_240;\n                                r15_1 = (rax_240 & 0xf000) != 0x8000;\n                            }\n                            var_1d4 = 0;\n                            var_1e8 = (r15_1 & 1);\n                            var_1f8 = (var_208 - 1);\n                            var_1f0 = ((var_1b8 + var_1a0) + 0x34);\n                        label_403305:\n                            r14_4 = var_1b8;\n                            var_200 = 0;\n                            rbx_24 = nullptr;\n                        label_4033b5:\n                            if (*(r14_4 + 0x34) != 0)\n                            {\n                                break;\n                            }\n                            rbp_15 = r14_4[7];\n                            if (rbp_15 >= 0)\n                            {\n                                void* rax_172;\n                                int32_t rdx_41;\n                                rax_172 = sub_4047e0(*r14_4);\n                                r12_9 = r14_4[6];\n                                r13 = rax_172;\n                                int32_t rax_173 = r14_4[8];\n                                if (r15_1 != rax_173)\n                                {\n                                    int32_t rax_175 = sub_40a6a0(rbp_15, 3, rdx_41);\n                                    if (r15_1 == 0)\n                                    {\n                                        if (rax_175 < 0)\n                                        {\n                                            goto label_403688;\n                                        }\n                                        int32_t rdx_42;\n                                        *rdx_42[1] = (*rax_175[1] | 8);\n                                        if (rax_175 == rdx_42)\n                                        {\n                                            goto label_403377;\n                                        }\n                                        if (sub_40a6a0(rbp_15, 4, rdx_42) != 0xffffffff)\n                                        {\n                                            goto label_403377;\n                                        }\n                                        goto label_403688;\n                                    }\n                                    if (rax_175 >= 0)\n                                    {\n                                    label_403377:\n                                        r14_4[8] = r15_1;\n                                        rax_173 = r15_1;\n                                    }\n                                    else\n                                    {\n                                    label_403688:\n                                        int32_t* rax_201 = __errno_location();\n                                        if (((r14_4[6] & 0xf000) != 0x8000 || ((r14_4[6] & 0xf000) == 0x8000 && *rax_201 != 1)))\n                                        {\n                                            var_208 = rax_201;\n                                            rcx_32 = error(1, *var_208, dcgettext(nullptr, \"%s: cannot change nonblocking mo\u2026\", 5), sub_4095e0(0, 3, r13));\n                                        label_403b91:\n                                            var_1f8 = rcx_32;\n                                            char** rbx_32 = var_1b8;\n                                            struct fd_set* r15_2 = &var_c8;\n                                        label_403bad:\n                                            int32_t rax_245;\n                                            rax_245 = __lxstat(1, *rbx_32, &var_c8);\n                                            if ((rax_245 == 0 && (var_b0 & 0xf000) == 0xa000))\n                                            {\n                                                continue;\n                                            }\n                                            rbx_32 = &rbx_32[0xc];\n                                            if (var_1c0 != rbx_32)\n                                            {\n                                                goto label_403bad;\n                                            }\n                                            int64_t rax_248 = 0;\n                                        label_403bdf:\n                                            if (*((var_1b8 + rax_248) + 0x38) >= 0)\n                                            {\n                                                rdx_40 = (*((var_1b8 + rax_248) + 0x30) & 0xf000);\n                                                if ((rdx_40 != 0x8000 && rdx_40 != 0x1000))\n                                                {\n                                                    continue;\n                                                }\n                                            }\n                                            rax_248 = (rax_248 + 0x60);\n                                            if (var_1a0 != rax_248)\n                                            {\n                                                goto label_403bdf;\n                                            }\n                                            if ((var_17d == 0 && data_6122a8 == 2))\n                                            {\n                                                continue;\n                                            }\n                                            int32_t rax_249 = inotify_init();\n                                            r13 = rax_249;\n                                            if (rax_249 >= 0)\n                                            {\n                                                int32_t rax_250 = fflush_unlocked(stdout);\n                                                int64_t* rax_251;\n                                                void* rbx_38;\n                                                int32_t r9_5;\n                                                int64_t* rax_339;\n                                                int64_t rdx_78;\n                                                int64_t* rdx_86;\n                                                char* rbx_42;\n                                                if (rax_250 == 0)\n                                                {\n                                                    rax_251 = sub_407060(var_208, nullptr, 0x4047c0, 0x4047d0, 0);\n                                                    var_1f0 = rax_251;\n                                                    if (rax_251 == 0)\n                                                    {\n                                                        goto label_4045da;\n                                                    }\n                                                    int32_t rdx_66 = 2;\n                                                    int32_t rax_252 = 0xc06;\n                                                    uint64_t* r14_7 = var_1b8;\n                                                    if (data_6122a8 != 1)\n                                                    {\n                                                        rax_252 = 2;\n                                                    }\n                                                    var_200 = 0;\n                                                    r12_2 = 0;\n                                                    rbp_17 = 0;\n                                                    var_1e0 = &var_c8;\n                                                    rbx_33 = r14_7;\n                                                    var_1d4 = rax_252;\n                                                label_403c9f:\n                                                    if (*(rbx_33 + 0x34) != 0)\n                                                    {\n                                                    label_403f1c:\n                                                        rbx_33 = &rbx_33[0xc];\n                                                        if (var_1c0 != rbx_33)\n                                                        {\n                                                            goto label_403c9f;\n                                                        }\n                                                        r15_2 = var_1e0;\n                                                        int64_t* var_170;\n                                                        if (data_6122a8 != 2)\n                                                        {\n                                                        label_403f3d:\n                                                            rbx_38 = var_1b8;\n                                                            var_170 = ((rbx_38 + var_1a0) - 0x60);\n                                                        label_403fb2:\n                                                        }\n                                                        if (*(rbx_38 + 0x34) == 0)\n                                                        {\n                                                            if (data_6122a8 == 1)\n                                                            {\n                                                                sub_4056e0(rbx_38, 0, rdx_66);\n                                                            label_403fa4:\n                                                                rdx_66 = sub_404f00(rbx_38, &var_170);\n                                                            label_403fa9:\n                                                                rbx_38 = (rbx_38 + 0x60);\n                                                                if (var_1c0 == rbx_38)\n                                                                {\n                                                                    r14_4 = nullptr;\n                                                                    rbp_15 = nullptr;\n                                                                    var_1e0 = (rbp_17 + 0x11);\n                                                                    var_1b0 = 3;\n                                                                    var_1e8 = sub_409dd0((rbp_17 + 0x11));\n                                                                    r12_9 = (1 << r13);\n                                                                    var_200 = r13;\n                                                                label_40404b:\n                                                                label_404058:\n                                                                    int32_t* r8_12;\n                                                                    if (rbp_15 < r14_4)\n                                                                    {\n                                                                    label_40418b:\n                                                                        void* rbx_39 = (var_1e8 + rbp_15);\n                                                                        uint64_t rdx_76 = *(rbx_39 + 0xc);\n                                                                        r9_5 = *(rbx_39 + 4);\n                                                                        var_1a8 = rbx_39;\n                                                                        int32_t rbx_40 = *rbx_39;\n                                                                        rbp_15 = ((rbp_15 + rdx_76) + 0x10);\n                                                                        if ((r9_5 & 0x400) == 0)\n                                                                        {\n                                                                            int32_t rax_310;\n                                                                            void* rbx_41;\n                                                                            if (rdx_76 != 0)\n                                                                            {\n                                                                            label_4041c3:\n                                                                                var_198 = rbp_15;\n                                                                                int64_t rbp_18 = 0;\n                                                                                int32_t r14_10 = r13;\n                                                                                void* rax_309 = &var_1a8[2];\n                                                                                rbx_41 = var_1b8;\n                                                                            label_4041fc:\n                                                                                if (*(rbx_41 + 0x48) != rbx_40)\n                                                                                {\n                                                                                label_4041ea:\n                                                                                    rbp_18 = (rbp_18 + 1);\n                                                                                    rbx_41 = (rbx_41 + 0x60);\n                                                                                    if (var_208 != rbp_18)\n                                                                                    {\n                                                                                        goto label_4041fc;\n                                                                                    }\n                                                                                    r13 = r14_10;\n                                                                                    rbp_15 = var_198;\n                                                                                    goto label_40404b;\n                                                                                }\n                                                                                rax_310 = strcmp(rax_309, (*(rbx_41 + 0x50) + *rbx_41));\n                                                                                if (rax_310 != 0)\n                                                                                {\n                                                                                    goto label_4041ea;\n                                                                                }\n                                                                                r13 = r14_10;\n                                                                                rbp_15 = var_198;\n                                                                                rdx_78 = (rbp_18 * 0x60);\n                                                                                rbx_42 = (var_1b8 + rdx_78);\n                                                                                if ((r9_5 & 0x200) == 0)\n                                                                                {\n                                                                                    int32_t rax_330;\n                                                                                    rax_330 = inotify_add_watch(r13, *rbx_42, var_1d4);\n                                                                                    var_198 = rax_330;\n                                                                                    if (rax_330 >= 0)\n                                                                                    {\n                                                                                        goto label_4044cd;\n                                                                                    }\n                                                                                    int32_t* rax_331 = __errno_location();\n                                                                                    r8_12 = rax_331;\n                                                                                    if ((*rax_331 & 0xffffffef) == 0xc)\n                                                                                    {\n                                                                                        goto label_4046a3;\n                                                                                    }\n                                                                                    rdx_78 = error(0, *r8_12, dcgettext(nullptr, \"cannot watch %s\", 5), sub_409510(4, *rbx_42), r8_12);\n                                                                                label_4044cd:\n                                                                                    uint64_t rsi_87 = *(rbx_42 + 0x44);\n                                                                                    if ((rsi_87 < 0 || (rsi_87 >= 0 && var_198 != rsi_87)))\n                                                                                    {\n                                                                                        if (rsi_87 < 0)\n                                                                                        {\n                                                                                            goto label_4044fb;\n                                                                                        }\n                                                                                        inotify_rm_watch(r13, rsi_87);\n                                                                                        sub_407840(var_1f0);\n                                                                                    label_4044fb:\n                                                                                        *(rbx_42 + 0x44) = var_198;\n                                                                                        if (var_198 == 0xffffffff)\n                                                                                        {\n                                                                                            goto label_40404b;\n                                                                                        }\n                                                                                        rax_339 = sub_407840(var_1f0);\n                                                                                        rdx_86 = rax_339;\n                                                                                        if (rax_339 == 0)\n                                                                                        {\n                                                                                            goto label_40455a;\n                                                                                        }\n                                                                                        if (rbx_42 == rax_339)\n                                                                                        {\n                                                                                            goto label_40455a;\n                                                                                        }\n                                                                                        if (data_6122a8 == 1)\n                                                                                        {\n                                                                                            goto label_404659;\n                                                                                        }\n                                                                                        goto label_40452e;\n                                                                                    }\n                                                                                }\n                                                                                else if (data_6122a8 == 1)\n                                                                                {\n                                                                                label_404576:\n                                                                                    rdx_78 = sub_4056e0(rbx_42, 0, rdx_78);\n                                                                                }\n                                                                            }\n                                                                            else\n                                                                            {\n                                                                            label_4042a8:\n                                                                                int32_t var_84_1 = rbx_40;\n                                                                                char* rax_314;\n                                                                                rax_314 = sub_406df0(var_1f0, r15_2);\n                                                                                rbx_42 = rax_314;\n                                                                            }\n                                                                            if ((rdx_76 == 0 || (((rdx_76 != 0 && *(rbx_41 + 0x48) == rbx_40) && rax_310 == 0) && (r9_5 & 0x200) != 0)))\n                                                                            {\n                                                                                if (rbx_42 == 0)\n                                                                                {\n                                                                                    goto label_40404b;\n                                                                                }\n                                                                            label_404272:\n                                                                                int32_t rax_313 = *(var_1a8 + 4);\n                                                                                if ((rax_313 & 0xe04) != 0)\n                                                                                {\n                                                                                    if ((*rax_313[1] & 4) != 0)\n                                                                                    {\n                                                                                        inotify_rm_watch(r13, *(rbx_42 + 0x44));\n                                                                                        rdx_78 = sub_407840(var_1f0);\n                                                                                    }\n                                                                                    sub_4056e0(rbx_42, 0, rdx_78);\n                                                                                    goto label_40404b;\n                                                                                }\n                                                                                goto label_40436b;\n                                                                            }\n                                                                        }\n                                                                        else\n                                                                        {\n                                                                            if (rdx_76 != 0)\n                                                                            {\n                                                                                goto label_4041c3;\n                                                                            }\n                                                                            int64_t rax_326 = 0;\n                                                                        label_40441a:\n                                                                            if (*((var_1b8 + (rax_326 * 0x60)) + 0x48) != rbx_40)\n                                                                            {\n                                                                                rax_326 = (rax_326 + 1);\n                                                                                if (var_208 != rax_326)\n                                                                                {\n                                                                                    goto label_40441a;\n                                                                                }\n                                                                                goto label_4042a8;\n                                                                            }\n                                                                            sub_4072a0(var_1f0);\n                                                                            error(0, 0, dcgettext(nullptr, \"directory containing watched fil\u2026\", 5));\n                                                                            *__errno_location() = 0;\n                                                                        }\n                                                                    }\n                                                                    else\n                                                                    {\n                                                                        uint64_t rdi_80 = data_61237c;\n                                                                        if (rdi_80 != 0)\n                                                                        {\n                                                                            if (var_1f8 != 0)\n                                                                            {\n                                                                                exit(0);\n                                                                                /* no return */\n                                                                            }\n                                                                            int32_t rax_299 = kill(rdi_80, 0);\n                                                                            int32_t* rax_300;\n                                                                            if (rax_299 != 0)\n                                                                            {\n                                                                                rax_300 = __errno_location();\n                                                                                if (*rax_300 != 1)\n                                                                                {\n                                                                                    int64_t var_160_2 = 0;\n                                                                                    var_168 = 0;\n                                                                                    var_1f8 = var_1c8;\n                                                                                }\n                                                                            }\n                                                                            if ((rax_299 == 0 || (rax_299 != 0 && *rax_300 == 1)))\n                                                                            {\n                                                                                int64_t rax_305 = (truncf(var_1d0, r13));\n                                                                                var_168 = rax_305;\n                                                                                int64_t var_160_3 = (truncf((1000000.0 * (var_1d0 - rax_305)), r13));\n                                                                            }\n                                                                        }\n                                                                        int64_t rcx_59 = 0x10;\n                                                                        struct fd_set* rdi_81 = r15_2;\n                                                                    label_4040bf:\n                                                                        if (rcx_59 != 0)\n                                                                        {\n                                                                            rdi_81->fds_bits[0] = 0;\n                                                                            rdi_81 = &rdi_81->fds_bits[1];\n                                                                            rcx_59 = (rcx_59 - 1);\n                                                                            goto label_4040bf;\n                                                                        }\n                                                                        int64_t rax_302 = __fdelt_chk(var_200);\n                                                                        &var_c8[rax_302] = (&var_c8[rax_302] | r12_9);\n                                                                        if (data_612383 != 0)\n                                                                        {\n                                                                            var_c8 = (var_c8 | 2);\n                                                                        }\n                                                                        int64_t* r8_11 = nullptr;\n                                                                        int32_t rdi_83 = 1;\n                                                                        if (data_61237c != 0)\n                                                                        {\n                                                                            r8_11 = &var_168;\n                                                                        }\n                                                                        if (r13 > 0)\n                                                                        {\n                                                                            rdi_83 = r13;\n                                                                        }\n                                                                        int32_t rax_303 = select((rdi_83 + 1), r15_2, nullptr, nullptr, r8_11);\n                                                                        if (rax_303 == 0)\n                                                                        {\n                                                                            goto label_404058;\n                                                                        }\n                                                                        if (rax_303 != 0xffffffff)\n                                                                        {\n                                                                            if ((var_c8 & 2) != 0)\n                                                                            {\n                                                                                raise(0xd);\n                                                                                goto label_404058;\n                                                                            }\n                                                                            ssize_t rax_318 = sub_409780(r13, var_1e8, var_1e0);\n                                                                            r14_4 = rax_318;\n                                                                            if (rax_318 != 0)\n                                                                            {\n                                                                                rbp_15 = nullptr;\n                                                                                if (rax_318 != -1)\n                                                                                {\n                                                                                    goto label_40418b;\n                                                                                }\n                                                                                if (*__errno_location() != 0x16)\n                                                                                {\n                                                                                    goto label_404347;\n                                                                                }\n                                                                            }\n                                                                            if (var_1b0 != 0)\n                                                                            {\n                                                                                r14_4 = nullptr;\n                                                                                rbp_15 = nullptr;\n                                                                                var_1b0 = (var_1b0 - 1);\n                                                                                size_t rax_324 = (var_1e0 + var_1e0);\n                                                                                var_1e0 = rax_324;\n                                                                                var_1e8 = sub_409e30(var_1e8, rax_324);\n                                                                                goto label_40404b;\n                                                                            }\n                                                                        label_404347:\n                                                                            rbx_42 = dcgettext(nullptr, \"error reading inotify event\", 5);\n                                                                            error(1, *__errno_location(), rbx_42);\n                                                                        label_40436b:\n                                                                            sub_404f00(rbx_42, &var_170);\n                                                                            goto label_40404b;\n                                                                        }\n                                                                        r8_12 = error(1, *__errno_location(), dcgettext(nullptr, \"error waiting for inotify and ou\u2026\", 5));\n                                                                    label_4046a3:\n                                                                        var_200 = r8_12;\n                                                                        error(0, 0, dcgettext(nullptr, \"inotify resources exhausted\", 5));\n                                                                        sub_4072a0(var_1f0);\n                                                                        *var_200 = 0;\n                                                                    }\n                                                                    if (data_612386 != 0)\n                                                                    {\n                                                                        goto label_404058;\n                                                                    }\n                                                                    if (sub_406bd0(var_1f0) != 0)\n                                                                    {\n                                                                        goto label_404058;\n                                                                    }\n                                                                    error(0, 0, dcgettext(nullptr, \"no files remaining\", 5));\n                                                                label_4042f8:\n                                                                    return 1;\n                                                                }\n                                                                goto label_403fb2;\n                                                            }\n                                                            if ((data_6122a8 != 2 && data_6122a8 != 1))\n                                                            {\n                                                                if (*(rbx_38 + 0x38) == 0xffffffff)\n                                                                {\n                                                                    goto label_403fa4;\n                                                                }\n                                                                if (__xstat(1, *rbx_38, r15_2) != 0)\n                                                                {\n                                                                    goto label_403fa4;\n                                                                }\n                                                                if (*(rbx_38 + 0x20) == var_c8)\n                                                                {\n                                                                    if (*(rbx_38 + 0x28) == var_c0)\n                                                                    {\n                                                                        goto label_403fa4;\n                                                                    }\n                                                                    goto label_404590;\n                                                                }\n                                                            label_404590:\n                                                                int64_t rax_343 = sub_409510(4, sub_4047e0(*rbx_38));\n                                                                char* rax_344 = dcgettext(nullptr, \"%s was replaced\", 5);\n                                                                int32_t* rax_345 = __errno_location();\n                                                                error(0, *rax_345, rax_344, rax_343);\n                                                                sub_4072a0(var_1f0);\n                                                                *rax_345 = 0;\n                                                            }\n                                                        }\n                                                        if ((data_6122a8 != 2 && *(rbx_38 + 0x34) != 0))\n                                                        {\n                                                            goto label_403fa9;\n                                                        }\n                                                        if (data_6122a8 == 2)\n                                                        {\n                                                            if (r12_2 != 0)\n                                                            {\n                                                                goto label_403da0;\n                                                            }\n                                                            if (var_200 != 0)\n                                                            {\n                                                                goto label_403f3d;\n                                                            }\n                                                            goto label_4042f8;\n                                                        }\n                                                    }\n                                                    else\n                                                    {\n                                                        uint64_t r15_3 = *rbx_33;\n                                                        int64_t rcx_54 = -1;\n                                                        uint64_t rdi_67 = r15_3;\n                                                    label_403cb5:\n                                                        if (rcx_54 != 0)\n                                                        {\n                                                            bool cond:9_1 = 0 != *rdi_67;\n                                                            rdi_67 = (rdi_67 + 1);\n                                                            rcx_54 = (rcx_54 - 1);\n                                                            if (cond:9_1)\n                                                            {\n                                                                goto label_403cb5;\n                                                            }\n                                                        }\n                                                        *(rbx_33 + 0x44) = 0xffffffff;\n                                                        int64_t rax_255 = ((!rcx_54) - 1);\n                                                        if (rbp_17 < rax_255)\n                                                        {\n                                                            rbp_17 = rax_255;\n                                                        }\n                                                        if (data_6122a8 == 1)\n                                                        {\n                                                            void* rax_256 = sub_406630(r15_3);\n                                                            void* rsi_58 = (r15_3 + rax_256);\n                                                            var_1b0 = rsi_58;\n                                                            var_1e8 = *rsi_58;\n                                                            rbx_33[0xa] = (sub_4066f0(r15_3) - r15_3);\n                                                            *var_1b0 = 0;\n                                                            uint64_t rsi_60 = &data_40c387;\n                                                            if (rax_256 != 0)\n                                                            {\n                                                                rsi_60 = *rbx_33;\n                                                            }\n                                                            rbx_33[9] = inotify_add_watch(r13, rsi_60, 0x784);\n                                                            uint64_t rax_261 = *rbx_33;\n                                                            *(rax_261 + rax_256) = var_1e8;\n                                                            if (rbx_33[9] < 0)\n                                                            {\n                                                                int32_t* rax_347 = __errno_location();\n                                                                if (*rax_347 == 0x1c)\n                                                                {\n                                                                label_403d96:\n                                                                    error(0, 0, dcgettext(nullptr, \"inotify resources exhausted\", 5));\n                                                                    goto label_403da0;\n                                                                }\n                                                                error(0, *rax_347, dcgettext(nullptr, \"cannot watch parent directory of\u2026\", 5), sub_409510(4, *rbx_33));\n                                                            label_403da0:\n                                                                sub_4072a0(var_1f0);\n                                                                *__errno_location() = 0;\n                                                            }\n                                                        }\n                                                        if ((data_6122a8 != 1 || (data_6122a8 == 1 && rbx_33[9] >= 0)))\n                                                        {\n                                                            int32_t rax_262 = inotify_add_watch(r13, *rbx_33, var_1d4);\n                                                            *(rbx_33 + 0x44) = rax_262;\n                                                            if (rax_262 >= 0)\n                                                            {\n                                                            label_403f05:\n                                                                int64_t rax_285;\n                                                                rax_285 = sub_407800(var_1f0, rbx_33);\n                                                                if (rax_285 == 0)\n                                                                {\n                                                                    goto label_4045da;\n                                                                }\n                                                                var_200 = var_1c8;\n                                                                goto label_403f1c;\n                                                            }\n                                                            if (rbx_33[7] != 0xffffffff)\n                                                            {\n                                                                r12_2 = var_1c8;\n                                                            }\n                                                            int32_t* rax_264 = __errno_location();\n                                                            int32_t rax_265 = *rax_264;\n                                                            rdx_66 = (rax_265 & 0xffffffef);\n                                                            if (rdx_66 == 0xc)\n                                                            {\n                                                                goto label_403d96;\n                                                            }\n                                                            if (rax_265 != *(rbx_33 + 0x3c))\n                                                            {\n                                                                rdx_66 = error(0, *rax_264, dcgettext(nullptr, \"cannot watch %s\", 5), sub_409510(4, *rbx_33));\n                                                            }\n                                                            goto label_403f1c;\n                                                        }\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    rbx_42 = dcgettext(nullptr, \"write error\", 5);\n                                                    rax_339 = error(1, *__errno_location(), rbx_42);\n                                                label_404659:\n                                                    var_198 = rax_339;\n                                                    sub_4056e0(rax_339, 0, rdx_86);\n                                                    rdx_86 = var_198;\n                                                label_40452e:\n                                                    *(rdx_86 + 0x44) = 0xffffffff;\n                                                    var_198 = rdx_86;\n                                                    sub_404820(*(var_198 + 0x38), sub_4047e0(*rdx_86));\n                                                label_40455a:\n                                                    int64_t rax_341;\n                                                    rax_341 = sub_407800(var_1f0, rbx_42);\n                                                    if (rax_341 == 0)\n                                                    {\n                                                    label_4045da:\n                                                        sub_40a020();\n                                                        /* no return */\n                                                    }\n                                                }\n                                                if ((rax_250 != 0 || ((((((((rax_250 == 0 && rax_251 != 0) && *(rbx_33 + 0x34) != 0) && var_1c0 == rbx_33) && *(rbx_38 + 0x34) == 0) && data_6122a8 == 1) && var_1c0 == rbx_38) && rbp_15 < r14_4) && (r9_5 & 0x400) == 0)))\n                                                {\n                                                    if (data_6122a8 != 1)\n                                                    {\n                                                        goto label_404272;\n                                                    }\n                                                    goto label_404576;\n                                                }\n                                            }\n                                            rdx_40 = error(0, *__errno_location(), dcgettext(nullptr, \"inotify cannot be used, revertin\u2026\", 5));\n                                            void* rbx_35 = var_1b8;\n                                            rbp_15 = var_1c0;\n                                        label_403de1:\n                                            uint64_t rsi_64 = *(rbx_35 + 0x44);\n                                            if (rsi_64 != 0xffffffff)\n                                            {\n                                                rdx_40 = inotify_rm_watch(r13, rsi_64);\n                                            }\n                                            uint64_t rsi_65 = *(rbx_35 + 0x48);\n                                            if (rsi_65 != 0xffffffff)\n                                            {\n                                                rdx_40 = inotify_rm_watch(r13, rsi_65);\n                                            }\n                                            rbx_35 = (rbx_35 + 0x60);\n                                            if (rbp_15 != rbx_35)\n                                            {\n                                                goto label_403de1;\n                                            }\n                                            continue;\n                                        }\n                                        if (((r14_4[6] & 0xf000) == 0x8000 && *rax_201 == 1))\n                                        {\n                                            rax_173 = r14_4[8];\n                                        }\n                                    }\n                                }\n                                rcx_33 = -2;\n                                if (rax_173 != 0)\n                                {\n                                    goto label_403394;\n                                }\n                                if (__fxstat(1, rbp_15, &var_c8) != 0)\n                                {\n                                    goto label_403877;\n                                }\n                                int64_t rcx_36;\n                                int64_t rdx_49;\n                                if (r14_4[6] != var_b0)\n                                {\n                                    rdx_49 = var_70;\n                                    rcx_36 = var_68;\n                                }\n                                else\n                                {\n                                    rdx_49 = var_70;\n                                    if (((var_b0 & 0xf000) == 0x8000 && r14_4[1] != var_98))\n                                    {\n                                        rcx_36 = var_68;\n                                    }\n                                    if (((var_b0 & 0xf000) != 0x8000 || ((var_b0 & 0xf000) == 0x8000 && r14_4[1] == var_98)))\n                                    {\n                                        rcx_36 = var_68;\n                                        if ((r14_4[2] == rdx_49 && r14_4[3] == rcx_36))\n                                        {\n                                            void* rax_202 = r14_4[0xb];\n                                            bool cond:22_1 = rax_202 < data_6122a0;\n                                            rdx_40 = (rax_202 + 1);\n                                            r14_4[0xb] = rdx_40;\n                                            if (((!cond:22_1) && data_6122a8 == 1))\n                                            {\n                                                rdx_40 = sub_4056e0(r14_4, r14_4[8] != 0, rdx_40);\n                                                r14_4[0xb] = 0;\n                                            }\n                                            break;\n                                        }\n                                    }\n                                }\n                                int32_t r12_10 = (r12_9 & 0xf000);\n                                r14_4[2] = rdx_49;\n                                r14_4[3] = rcx_36;\n                                r14_4[6] = var_b0;\n                                r14_4[0xb] = 0;\n                                if ((r12_10 == 0x8000 && var_98 < r14_4[1]))\n                                {\n                                    var_1e0 = sub_4095e0(0, 3, r13);\n                                    error(0, 0, dcgettext(nullptr, \"%s: file truncated\", 5), var_1e0);\n                                    sub_404c20(rbp_15, 0, 0, r13);\n                                    r14_4[1] = 0;\n                                }\n                                if (rbx_24 != var_1f8)\n                                {\n                                    var_1f8 = rbx_24;\n                                    if (data_612381 != 0)\n                                    {\n                                        char const* const rdx_50 = \"\\n\";\n                                        if (data_612290 != 0)\n                                        {\n                                            rdx_50 = &data_40ee81[0x1b];\n                                        }\n                                        __printf_chk(1, \"%s==> %s <==\\n\", rdx_50, r13);\n                                        data_612290 = 0;\n                                        var_1f8 = rbx_24;\n                                    }\n                                }\n                                if (r14_4[8] != 0)\n                                {\n                                    break;\n                                }\n                                rcx_33 = -1;\n                                if ((r12_10 == 0x8000 && *(r14_4 + 0x35) != 0))\n                                {\n                                    rcx_33 = (var_98 - r14_4[1]);\n                                }\n                                goto label_403394;\n                            }\n                            int64_t* rdi_47 = r14_4;\n                            rbx_24 = &rbx_24[1];\n                            r14_4 = &r14_4[0xc];\n                            rdx_40 = sub_4056e0(rdi_47, r15_1, rdx_40);\n                            if (var_208 == rbx_24)\n                            {\n                                break;\n                            }\n                            goto label_4033b5;\n                        }\n                        if (((*(r14_4 + 0x34) == 0 && rbp_15 < 0) && var_208 == rbx_24))\n                        {\n                            goto label_4033e1;\n                        }\n                        if (*(r14_4 + 0x34) == 0)\n                        {\n                            goto label_403eb3;\n                        }\n                        while (true)\n                        {\n                            rbx_24 = &rbx_24[1];\n                            r14_4 = &r14_4[0xc];\n                            if (var_208 != rbx_24)\n                            {\n                                goto label_4033b5;\n                            }\n                        label_4033e1:\n                            rdx_40 = data_612386;\n                            if ((rdx_40 == 0 || (rdx_40 != 0 && data_6122a8 != 1)))\n                            {\n                                void* rax_180 = (var_1b8 + 0x34);\n                                while (*(rax_180 + 4) < 0)\n                                {\n                                    if ((*rax_180 != 1 && rdx_40 != 0))\n                                    {\n                                        break;\n                                    }\n                                    rax_180 = (rax_180 + 0x60);\n                                    if (var_1f0 == rax_180)\n                                    {\n                                        break;\n                                    }\n                                }\n                                if (*(rax_180 + 4) < 0)\n                                {\n                                    error(0, 0, dcgettext(nullptr, \"no files remaining\", 5));\n                                    goto label_402988;\n                                }\n                            }\n                            if ((var_200 == 1 && var_1e8 == 0))\n                            {\n                                if (data_612383 == 0)\n                                {\n                                    goto label_403305;\n                                }\n                                goto label_4037bd;\n                            }\n                            int32_t rax_217;\n                            rax_217 = fflush_unlocked(stdout);\n                            if (rax_217 != 0)\n                            {\n                            label_403e9a:\n                                rbx_24 = dcgettext(nullptr, \"write error\", 5);\n                                error(1, *__errno_location(), rbx_24);\n                            label_403eb3:\n                                rcx_33 = -2;\n                            label_403394:\n                                int64_t rax_178;\n                                rax_178 = sub_404a20(0, r13, rbp_15, rcx_33);\n                                rdx_40 = rax_178 != 0;\n                                r14_4[1] = (r14_4[1] + rax_178);\n                                var_200 = (var_200 | rdx_40);\n                            }\n                            else\n                            {\n                                if (data_612383 != 0)\n                                {\n                                label_4037bd:\n                                    int64_t rcx_41 = 0x10;\n                                    int64_t var_160_1 = 0;\n                                    double* rdi_53 = &var_c8;\n                                    var_168 = 0;\n                                    for (; rcx_41 != 0; rcx_41 = (rcx_41 - 1))\n                                    {\n                                        *rdi_53 = 0.0;\n                                        rdi_53 = &rdi_53[1];\n                                    }\n                                    var_c8 = (var_c8 | 2);\n                                    int32_t rax_207;\n                                    rax_207 = select(2, &var_c8, nullptr, nullptr, &var_168);\n                                    if (rax_207 == 1)\n                                    {\n                                        rdx_40 = raise(0xd);\n                                    }\n                                }\n                                if (var_200 != 0)\n                                {\n                                    goto label_403305;\n                                }\n                                if (var_1d4 != 0)\n                                {\n                                    break;\n                                }\n                                uint64_t rdi_54 = data_61237c;\n                                if ((rdi_54 != 0 && kill(rdi_54, 0) != 0))\n                                {\n                                    int32_t* rax_219;\n                                    rax_219 = __errno_location();\n                                    if (*rax_219 != 1)\n                                    {\n                                        var_1d4 = var_1c8;\n                                        goto label_403305;\n                                    }\n                                }\n                                int32_t rax_209;\n                                rax_209 = sub_40a160();\n                                if (rax_209 == 0)\n                                {\n                                    goto label_403305;\n                                }\n                                rbx_24 = dcgettext(nullptr, \"cannot read realtime clock\", 5);\n                                error(1, *__errno_location(), rbx_24);\n                            label_403877:\n                                r14_4[7] = 0xffffffff;\n                                int32_t* rax_213 = __errno_location();\n                                *(r14_4 + 0x3c) = *rax_213;\n                                error(0, *rax_213, \"%s\", sub_4095e0(0, 3, r13));\n                                rdx_40 = close(rbp_15);\n                            }\n                        }\n                    }\n                }\n            label_402988:\n                if (data_61237a == 0)\n                {\n                    break;\n                }\n                if (close(0) >= 0)\n                {\n                    break;\n                }\n                error(1, *__errno_location(), &data_40c38a);\n            label_403492:\n                char rax_187 = data_612386;\n                *(r14_4 + 0x36) = 0;\n                char* rbx_25 = &data_40ee81[0x1b];\n                *(r14_4 + 0x3c) = 0xffffffff;\n                char rax_188 = (rax_187 ^ 1);\n                *(r14_4 + 0x34) = rax_188;\n                if (rax_188 != 0)\n                {\n                    rbx_25 = dcgettext(nullptr, \"; giving up on this name\", 5);\n                }\n                error(0, 0, dcgettext(nullptr, \"%s: cannot follow end of this ty\u2026\", 5), sub_4095e0(0, 3, sub_4047e0(*r14_4)), rbx_25);\n            label_402d21:\n                char* rdi_31 = *r14_4;\n                *(r14_4 + 0x34) = (data_612386 ^ 1);\n                sub_404820(var_200, sub_4047e0(rdi_31));\n                r14_4[7] = 0xffffffff;\n                var_1f0 = 0;\n            }\n            if (z_2)\n            {\n                rax_82 = (var_17d ^ 1);\n                break;\n            }\n        }\n        goto label_4029b4;\n    }\n    if (data_612384 != 0)\n    {\n        goto label_402544;\n    }\nlabel_4030c4:\n    rax_82 = 0;\n    if (data_612382 == 0)\n    {\n    label_4029b4:\n        return rax_82;\n    }\n    goto label_402544;\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x4046e0",
            "funcEndAddr": "0x40470a",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40470b",
            "funcStartAddr": "0x40470b",
            "funcEndAddr": "0x40472a",
            "decompiledFuncCode": "void sub_40470b()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_40472a",
            "funcStartAddr": "0x40472a",
            "funcEndAddr": "0x404761",
            "decompiledFuncCode": "int64_t sub_40472a()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_404761",
            "funcStartAddr": "0x404761",
            "funcEndAddr": "0x4047b8",
            "decompiledFuncCode": "void sub_404761()\n{\n    if (data_612368 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_612370;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_612370 = (rax_1 + 1);\n        *(0x611e40 + ((rax_1 + 1) << 3))();\n    }\n    sub_40470b();\n    data_612368 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_4047b8",
            "funcStartAddr": "0x4047b8",
            "funcEndAddr": "0x4047bd",
            "decompiledFuncCode": "int64_t j_sub_40472a()\n{\n    /* tailcall */\n    return sub_40472a();\n}\n\n"
        },
        {
            "funcName": "sub_4047c0",
            "funcStartAddr": "0x4047c0",
            "funcEndAddr": "0x4047cd",
            "decompiledFuncCode": "uint64_t sub_4047c0(void* arg1, int64_t arg2)\n{\n    return (COMBINE(0, *(arg1 + 0x44)) % arg2);\n}\n\n"
        },
        {
            "funcName": "sub_4047d0",
            "funcStartAddr": "0x4047d0",
            "funcEndAddr": "0x4047da",
            "decompiledFuncCode": "uint64_t sub_4047d0(void* arg1, void* arg2)\n{\n    uint64_t rax;\n    rax = *(arg1 + 0x44) == *(arg2 + 0x44);\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4047e0",
            "funcStartAddr": "0x4047e0",
            "funcEndAddr": "0x404811",
            "decompiledFuncCode": "char* sub_4047e0(char* arg1)\n{\n    int64_t rcx = 2;\n    void* const rdi = &data_40c38a;\n    char* rsi = arg1;\n    bool c;\n    bool z;\n    while (rcx != 0)\n    {\n        char temp0_1 = *rsi;\n        char temp1_1 = *rdi;\n        c = temp0_1 < temp1_1;\n        z = temp0_1 == temp1_1;\n        rsi = &rsi[1];\n        rdi = (rdi + 1);\n        rcx = (rcx - 1);\n        if ((!z))\n        {\n            break;\n        }\n    }\n    if ((((!z) && (!c)) - 0) == 0)\n    {\n        /* tailcall */\n        return dcgettext(nullptr, \"standard input\", 5);\n    }\n    return arg1;\n}\n\n"
        },
        {
            "funcName": "sub_404820",
            "funcStartAddr": "0x404820",
            "funcEndAddr": "0x404891",
            "decompiledFuncCode": "uint64_t sub_404820(int32_t arg1, int64_t arg2)\n{\n    uint64_t rax_6 = (arg1 + 1);\n    if (rax_6 <= 1)\n    {\n        return rax_6;\n    }\n    int64_t rax = close(arg1);\n    if (rax != 0)\n    {\n        /* tailcall */\n        return error(0, *__errno_location(), dcgettext(nullptr, \"closing %s (fd=%d)\", 5), sub_409510(4, arg2), arg1);\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4048a0",
            "funcStartAddr": "0x4048a0",
            "funcEndAddr": "0x404920",
            "decompiledFuncCode": "uint64_t sub_4048a0(int64_t arg1, uint64_t arg2)\n{\n    uint64_t rax = fwrite_unlocked(arg1, 1, arg2, stdout);\n    if (arg2 > rax)\n    {\n        clearerr_unlocked(stdout);\n        int64_t* rcx_2;\n        int64_t rdx_2;\n        int32_t rsi_1;\n        int64_t rdi_1;\n        rcx_2 = error(1, *__errno_location(), dcgettext(nullptr, \"error writing %s\", 5), sub_409510(4, \"standard output\"));\n        /* tailcall */\n        return sub_404920(rdi_1, rsi_1, rdx_2, rcx_2);\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404920",
            "funcStartAddr": "0x404920",
            "funcEndAddr": "0x404a19",
            "decompiledFuncCode": "char* sub_404920(int64_t arg1, int32_t arg2, int64_t arg3, int64_t* arg4)\n{\n    if (arg3 == 0)\n    {\n        return 0;\n    }\n    int64_t rbx = arg3;\n    char* rax_1;\n    while (true)\n    {\n        void var_2038;\n        ssize_t rax = sub_409780(arg2, &var_2038, 0x2000);\n        if (rax == 0)\n        {\n            rax_1 = 0xffffffff;\n            break;\n        }\n        if (rax == -1)\n        {\n            error(0, *__errno_location(), dcgettext(nullptr, \"error reading %s\", 5), sub_409510(4, arg1));\n            rax_1 = 1;\n            break;\n        }\n        *arg4 = (*arg4 + rax);\n        int32_t r12_1 = data_612380;\n        void* rbp_1 = (&var_2038 + rax);\n        void* rdi_1 = &var_2038;\n        int64_t temp0_1;\n        do\n        {\n            rax_1 = sub_40b730(rdi_1, r12_1, (rbp_1 - rdi_1));\n            if (rax_1 == 0)\n            {\n                break;\n            }\n            rdi_1 = &rax_1[1];\n            temp0_1 = rbx;\n            rbx = (rbx - 1);\n        } while (temp0_1 != 1);\n        if (rax_1 != 0)\n        {\n            if (rbp_1 > rdi_1)\n            {\n                void* rbp_2 = (rbp_1 - rdi_1);\n                if (rbp_1 != rdi_1)\n                {\n                    int32_t var_203c_1 = 0;\n                    sub_4048a0(rdi_1, rbp_2);\n                    rax_1 = nullptr;\n                }\n            }\n            break;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_404a20",
            "funcStartAddr": "0x404a20",
            "funcEndAddr": "0x404b40",
            "decompiledFuncCode": "int64_t sub_404a20(char arg1, int64_t arg2, int32_t arg3, uint64_t arg4)\n{\n    int64_t r12 = 0;\n    char rbp = arg1;\n    uint64_t rbx = arg4;\n    while (true)\n    {\n        uint64_t rdx = 0x2000;\n        void var_2038;\n        void* rsi = &var_2038;\n        if (rbx <= 0x2000)\n        {\n            rdx = rbx;\n        }\n        ssize_t rax_1 = sub_409780(arg3, rsi, rdx);\n        if (rax_1 == -1)\n        {\n            int32_t* rax_3 = __errno_location();\n            if (*rax_3 != 0xb)\n            {\n                int64_t* rcx_2;\n                int64_t rdx_3;\n                int32_t rsi_4;\n                int64_t rdi_2;\n                rcx_2 = error(1, *rax_3, dcgettext(nullptr, \"error reading %s\", 5), sub_409510(4, arg2));\n                /* tailcall */\n                return sub_404b40(rdi_2, rsi_4, rdx_3, rcx_2);\n            }\n            break;\n        }\n        if (rax_1 == 0)\n        {\n            break;\n        }\n        if (rbp != 0)\n        {\n            char const* const rdx_1 = &data_40ee81[0x1b];\n            if (data_612290 == 0)\n            {\n                rdx_1 = \"\\n\";\n            }\n            __printf_chk(1, \"%s==> %s <==\\n\", rdx_1, arg2);\n            data_612290 = 0;\n        }\n        r12 = (r12 + rax_1);\n        sub_4048a0(&var_2038, rax_1);\n        if (arg4 != -1)\n        {\n            uint64_t temp0_1 = rbx;\n            rbx = (rbx - rax_1);\n            if (temp0_1 == rax_1)\n            {\n                break;\n            }\n            if ((temp0_1 != rax_1 && arg4 == -2))\n            {\n                break;\n            }\n        }\n        rbp = 0;\n    }\n    return r12;\n}\n\n"
        },
        {
            "funcName": "sub_404b40",
            "funcStartAddr": "0x404b40",
            "funcEndAddr": "0x404c20",
            "decompiledFuncCode": "int64_t sub_404b40(int64_t arg1, int32_t arg2, int64_t arg3, int64_t* arg4)\n{\n    if (arg3 == 0)\n    {\n        return 0;\n    }\n    int64_t rbx = arg3;\n    ssize_t rax_1;\n    int64_t temp0_1;\n    do\n    {\n        void var_2028;\n        rax_1 = sub_409780(arg2, &var_2028, 0x2000);\n        if (rax_1 == 0)\n        {\n            return 0xffffffff;\n        }\n        if (rax_1 == -1)\n        {\n            error(0, *__errno_location(), dcgettext(nullptr, \"error reading %s\", 5), sub_409510(4, arg1));\n            return 1;\n        }\n        *arg4 = (*arg4 + rax_1);\n        if (rax_1 > rbx)\n        {\n            sub_4048a0((&var_2028 + rbx), (rax_1 - rbx));\n            break;\n        }\n        temp0_1 = rbx;\n        rbx = (rbx - rax_1);\n    } while (temp0_1 != rax_1);\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_404c20",
            "funcStartAddr": "0x404c20",
            "funcEndAddr": "0x404cc4",
            "decompiledFuncCode": "off64_t sub_404c20(int32_t arg1, int64_t arg2, int32_t arg3, uint64_t arg4)\n{\n    off64_t rax = lseek(arg1, arg2, arg3);\n    if (rax >= 0)\n    {\n        return rax;\n    }\n    void var_48;\n    void* rax_1 = sub_407a20(arg2, &var_48);\n    int32_t* rax_2 = __errno_location();\n    char* rbx_1;\n    char const* const rsi_1;\n    if (arg3 == 1)\n    {\n        rsi_1 = \"%s: cannot seek to relative offs\u2026\";\n        rbx_1 = sub_4095e0(0, 3, arg4);\n    }\n    else\n    {\n        rsi_1 = \"%s: cannot seek to offset %s\";\n        rbx_1 = sub_4095e0(0, 3, arg4);\n    }\n    error(0, *rax_2, dcgettext(nullptr, rsi_1, 5), rbx_1, rax_1);\n    exit(1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404cd0",
            "funcStartAddr": "0x404cd0",
            "funcEndAddr": "0x404ef1",
            "decompiledFuncCode": "int64_t sub_404cd0(int64_t arg1, int32_t arg2, int64_t arg3, int64_t arg4, \n    uint64_t arg5, int64_t* arg6)\n{\n    uint64_t var_2040 = arg5;\n    int64_t rax_10;\n    if (arg3 != 0)\n    {\n        uint64_t rdi = var_2040;\n        int64_t r15_1 = arg3;\n        int64_t rbp_2 = (rdi - arg4);\n        uint64_t rax_3 = ((rbp_2 >> 0x3f) >> 0x33);\n        uint64_t rbp_4 = ((rbp_2 + rax_3) & 0x1fff);\n        uint64_t rbp_5 = (rbp_4 - rax_3);\n        if (rbp_4 == rax_3)\n        {\n            rbp_5 = 0x2000;\n        }\n        int64_t rdi_1 = (rdi - rbp_5);\n        int64_t r13_1 = rdi_1;\n        sub_404c20(arg2, rdi_1, 0, arg1);\n        void var_2038;\n        ssize_t rax_4 = sub_409780(arg2, &var_2038, rbp_5);\n        ssize_t r12_1 = rax_4;\n        if (rax_4 != -1)\n        {\n            *arg6 = (r13_1 + rax_4);\n            if (r12_1 != 0)\n            {\n                r15_1 = (r15_1 - *(&*var_2040[7] + r12_1) != data_612380);\n                goto label_404dd3;\n            }\n            ssize_t rax_6;\n            int64_t rax_8;\n            ssize_t rdx_1;\n            while (true)\n            {\n                if (r13_1 == arg4)\n                {\n                    sub_404c20(arg2, r13_1, 0, arg1);\n                    *arg6 = (r13_1 + sub_404a20(0, arg1, arg2, var_2040));\n                    break;\n                }\n                r13_1 = (r13_1 - 0x2000);\n                sub_404c20(arg2, r13_1, 0, arg1);\n                rax_6 = sub_409780(arg2, &var_2038, 0x2000);\n                r12_1 = rax_6;\n                if (rax_6 == -1)\n                {\n                    break;\n                }\n                *arg6 = (r13_1 + rax_6);\n                if (r12_1 == 0)\n                {\n                    break;\n                }\n            label_404dd3:\n                int32_t rbp_6 = data_612380;\n                rdx_1 = r12_1;\n            label_404ded:\n                rax_8 = memrchr(&var_2038, rbp_6, rdx_1);\n                if (rax_8 != 0)\n                {\n                    int64_t rcx_2 = (r15_1 - 1);\n                    rdx_1 = (rax_8 - &var_2038);\n                    if (r15_1 == 0)\n                    {\n                        break;\n                    }\n                    r15_1 = rcx_2;\n                    if (rdx_1 != 0)\n                    {\n                        break;\n                    }\n                }\n            }\n            if ((!(r13_1 != arg4 && rax_6 == -1)))\n            {\n                if (r13_1 == arg4)\n                {\n                    goto label_404ea8;\n                }\n                int64_t rsi_7 = (r12_1 - 1);\n                if (rsi_7 != rdx_1)\n                {\n                    sub_4048a0((rax_8 + 1), (rsi_7 - rdx_1));\n                }\n                *arg6 = (*arg6 + sub_404a20(0, arg1, arg2, ((var_2040 - r12_1) - r13_1)));\n                rax_10 = 1;\n                goto label_404e53;\n            }\n        }\n        error(0, *__errno_location(), dcgettext(nullptr, \"error reading %s\", 5), sub_409510(4, arg1));\n        rax_10 = 0;\n        goto label_404e53;\n    }\nlabel_404ea8:\n    rax_10 = 1;\nlabel_404e53:\n    return rax_10;\n}\n\n"
        },
        {
            "funcName": "sub_404f00",
            "funcStartAddr": "0x404f00",
            "funcEndAddr": "0x405090",
            "decompiledFuncCode": "void sub_404f00(int64_t* arg1, int64_t** arg2)\n{\n    if (arg1[7] == 0xffffffff)\n    {\n        return;\n    }\n    int64_t* rbx = arg1;\n    char* rax = sub_4047e0(*arg1);\n    void var_b8;\n    int32_t rax_1 = __fxstat(1, rbx[7], &var_b8);\n    bool rbp = rax_1;\n    if (rax_1 == 0)\n    {\n        if ((rbx[6] & 0xf000) == 0x8000)\n        {\n            int64_t rax_5 = rbx[1];\n            int64_t var_88;\n            bool cond:0_1 = var_88 != rax_5;\n            int64_t var_60;\n            int64_t var_58;\n            if (var_88 < rax_5)\n            {\n                error(0, 0, dcgettext(nullptr, \"%s: file truncated\", 5), sub_4095e0(0, 3, rax));\n                int32_t rdi_4 = rbx[7];\n                sub_404c20(rdi_4, 0, 0, rax);\n                rbx[1] = 0;\n            }\n            else if (((!cond:0_1) && (rbx[2] == var_60 && rbx[3] == var_58)))\n            {\n            label_404f92:\n                return;\n            }\n        }\n        if (data_612381 == 0)\n        {\n            goto label_404f75;\n        }\n        rbp = *arg2 != rbx;\n    label_404f75:\n        int64_t rax_4 = sub_404a20(rbp, rax, rbx[7], -1);\n        rbx[1] = (rbx[1] + rax_4);\n        if (rax_4 == 0)\n        {\n            goto label_404f92;\n        }\n        *arg2 = rbx;\n        if (fflush_unlocked(stdout) == 0)\n        {\n            goto label_404f92;\n        }\n        rbx = dcgettext(nullptr, \"write error\", 5);\n        error(1, *__errno_location(), rbx);\n    }\n    *(rbx + 0x3c) = *__errno_location();\n    sub_404820(rbx[7], rax);\n    rbx[7] = 0xffffffff;\n}\n\n"
        },
        {
            "funcName": "sub_405090",
            "funcStartAddr": "0x405090",
            "funcEndAddr": "0x4056d7",
            "decompiledFuncCode": "uint64_t sub_405090(int64_t arg1, int64_t arg2)\n{\n    int64_t var_98;\n    int64_t rbx;\n    if (fstatfs(arg1, &var_98) == 0)\n    {\n        int64_t rax_7 = var_98;\n        bool cond:1_1 = rax_7 > 0x15013346;\n        if (rax_7 == 0x15013346)\n        {\n        label_4056d0:\n            rbx = 0;\n        }\n        else if (cond:1_1)\n        {\n            bool cond:2_1 = rax_7 > 0x62646576;\n            if (rax_7 == 0x62646576)\n            {\n                goto label_4056d0;\n            }\n            if (cond:2_1)\n            {\n                bool cond:4_1 = rax_7 > 0x73727279;\n                if (rax_7 == 0x73727279)\n                {\n                    goto label_4056d0;\n                }\n                if (cond:4_1)\n                {\n                    bool cond:8_1 = rax_7 > 0xc97e8168;\n                    if (rax_7 == 0xc97e8168)\n                    {\n                        goto label_4056d0;\n                    }\n                    if (cond:8_1)\n                    {\n                        bool cond:16_1 = rax_7 > 0xf2f52010;\n                        if (rax_7 == 0xf2f52010)\n                        {\n                            goto label_4056d0;\n                        }\n                        if (cond:16_1)\n                        {\n                            if (rax_7 == 0xf97cff8c)\n                            {\n                                goto label_4056d0;\n                            }\n                            rbx = rax_7 != 0xf995e849;\n                        }\n                        else\n                        {\n                            if (rax_7 == 0xcafe4a11)\n                            {\n                                goto label_4056d0;\n                            }\n                            rbx = rax_7 != 0xde5e81e4;\n                        }\n                    }\n                    else\n                    {\n                        bool cond:17_1 = rax_7 > 0x9123683e;\n                        if (rax_7 == 0x9123683e)\n                        {\n                            goto label_4056d0;\n                        }\n                        if (cond:17_1)\n                        {\n                            if (rax_7 == 0x958458f6)\n                            {\n                                goto label_4056d0;\n                            }\n                            rbx = rax_7 != 0xabba1974;\n                        }\n                        else\n                        {\n                            if (rax_7 == 0x74726163)\n                            {\n                                goto label_4056d0;\n                            }\n                            rbx = rax_7 != 0x858458f6;\n                        }\n                    }\n                }\n                else\n                {\n                    bool cond:9_1 = rax_7 > 0x64646178;\n                    if (rax_7 == 0x64646178)\n                    {\n                        goto label_4056d0;\n                    }\n                    if (cond:9_1)\n                    {\n                        bool cond:18_1 = rax_7 > 0x6e736673;\n                        if (rax_7 == 0x6e736673)\n                        {\n                            goto label_4056d0;\n                        }\n                        if (cond:18_1)\n                        {\n                            if (rax_7 == 0x73636673)\n                            {\n                                goto label_4056d0;\n                            }\n                            rbx = rax_7 != 0x73717368;\n                        }\n                        else\n                        {\n                            if (rax_7 == 0x67596969)\n                            {\n                                goto label_4056d0;\n                            }\n                            rbx = rax_7 != 0x68191122;\n                        }\n                    }\n                    else\n                    {\n                        bool cond:19_1 = rax_7 > 0x62656572;\n                        if (rax_7 == 0x62656572)\n                        {\n                            goto label_4056d0;\n                        }\n                        if ((!cond:19_1))\n                        {\n                            rbx = rax_7 != 0x62656570;\n                        }\n                        else\n                        {\n                            if (rax_7 == 0x63677270)\n                            {\n                                goto label_4056d0;\n                            }\n                            rbx = rax_7 != 0x64626720;\n                        }\n                    }\n                }\n            }\n            else\n            {\n                bool cond:5_1 = rax_7 > 0x453dcd28;\n                if (rax_7 == 0x453dcd28)\n                {\n                    goto label_4056d0;\n                }\n                if (cond:5_1)\n                {\n                    bool cond:10_1 = rax_7 > 0x54190100;\n                    if (rax_7 == 0x54190100)\n                    {\n                        goto label_4056d0;\n                    }\n                    if (cond:10_1)\n                    {\n                        bool cond:20_1 = rax_7 > 0x58465342;\n                        if (rax_7 == 0x58465342)\n                        {\n                            goto label_4056d0;\n                        }\n                        if (cond:20_1)\n                        {\n                            if (rax_7 == 0x5a3c69f0)\n                            {\n                                goto label_4056d0;\n                            }\n                            rbx = rax_7 != 0x6165676c;\n                        }\n                        else\n                        {\n                            if (rax_7 == 0x565a4653)\n                            {\n                                goto label_4056d0;\n                            }\n                            rbx = rax_7 != 0x58295829;\n                        }\n                    }\n                    else\n                    {\n                        bool cond:21_1 = rax_7 > 0x53464846;\n                        if (rax_7 == 0x53464846)\n                        {\n                            goto label_4056d0;\n                        }\n                        if (cond:21_1)\n                        {\n                            if (rax_7 == 0x5346544e)\n                            {\n                                goto label_4056d0;\n                            }\n                            rbx = rax_7 != 0x534f434b;\n                        }\n                        else\n                        {\n                            if (rax_7 == 0x52654973)\n                            {\n                                goto label_4056d0;\n                            }\n                            rbx = rax_7 != 0x5346314d;\n                        }\n                    }\n                }\n                else\n                {\n                    bool cond:11_1 = rax_7 > 0x2bad1dea;\n                    if (rax_7 == 0x2bad1dea)\n                    {\n                        goto label_4056d0;\n                    }\n                    if (cond:11_1)\n                    {\n                        bool cond:22_1 = rax_7 > 0x42465331;\n                        if (rax_7 == 0x42465331)\n                        {\n                            goto label_4056d0;\n                        }\n                        if (cond:22_1)\n                        {\n                            if (rax_7 == 0x42494e4d)\n                            {\n                                goto label_4056d0;\n                            }\n                            rbx = rax_7 != 0x43415d53;\n                        }\n                        else\n                        {\n                            if (rax_7 == 0x2fc12fc1)\n                            {\n                                goto label_4056d0;\n                            }\n                            rbx = rax_7 != 0x3153464a;\n                        }\n                    }\n                    else\n                    {\n                        bool cond:23_1 = rax_7 > 0x1badface;\n                        if (rax_7 == 0x1badface)\n                        {\n                            goto label_4056d0;\n                        }\n                        if ((!cond:23_1))\n                        {\n                            rbx = rax_7 != 0x19800202;\n                            return rbx;\n                        }\n                        if (rax_7 == 0x24051905)\n                        {\n                            goto label_4056d0;\n                        }\n                        rbx = rax_7 != 0x28cd3d45;\n                    }\n                }\n            }\n        }\n        else\n        {\n            bool cond:3_1 = rax_7 > 0x72b6;\n            if (rax_7 == 0x72b6)\n            {\n                goto label_4056d0;\n            }\n            if (cond:3_1)\n            {\n                bool cond:6_1 = rax_7 > 0x414a53;\n                if (rax_7 == 0x414a53)\n                {\n                    goto label_4056d0;\n                }\n                if ((!cond:6_1))\n                {\n                    bool cond:12_1 = rax_7 > 0xadff;\n                    if (rax_7 == 0xadff)\n                    {\n                        goto label_4056d0;\n                    }\n                    if (cond:12_1)\n                    {\n                        bool cond:25_1 = rax_7 > 0xf15f;\n                        if (rax_7 == 0xf15f)\n                        {\n                            goto label_4056d0;\n                        }\n                        if (cond:25_1)\n                        {\n                            if (rax_7 == 0x11954)\n                            {\n                                goto label_4056d0;\n                            }\n                            rbx = rax_7 != 0x27e0eb;\n                        }\n                        else\n                        {\n                            if (rax_7 == 0xef51)\n                            {\n                                goto label_4056d0;\n                            }\n                            rbx = rax_7 != 0xef53;\n                        }\n                    }\n                    else if (rax_7 > 0x9fa2)\n                    {\n                        rbx = rax_7 != 0xadf5;\n                    }\n                    else\n                    {\n                        if (rax_7 >= 0x9fa0)\n                        {\n                            goto label_4056d0;\n                        }\n                        rbx = rax_7 != 0x9660;\n                    }\n                }\n                else if (rax_7 > 0x12ff7b7)\n                {\n                    bool cond:15_1 = rax_7 > 0xbad1dea;\n                    if (rax_7 == 0xbad1dea)\n                    {\n                        goto label_4056d0;\n                    }\n                    if (cond:15_1)\n                    {\n                        if (rax_7 == 0x11307854)\n                        {\n                            goto label_4056d0;\n                        }\n                        rbx = rax_7 != 0x13661366;\n                    }\n                    else\n                    {\n                        if (rax_7 == 0x7655821)\n                        {\n                            goto label_4056d0;\n                        }\n                        rbx = rax_7 != 0x9041934;\n                    }\n                }\n                else\n                {\n                    if (rax_7 >= 0x12ff7b4)\n                    {\n                        goto label_4056d0;\n                    }\n                    bool cond:24_1 = rax_7 > 0x1021994;\n                    if (rax_7 == 0x1021994)\n                    {\n                        goto label_4056d0;\n                    }\n                    if ((!cond:24_1))\n                    {\n                        rbx = rax_7 != 0xc0ffee;\n                    }\n                    else\n                    {\n                        if (rax_7 == 0x1021997)\n                        {\n                            goto label_4056d0;\n                        }\n                        rbx = rax_7 != 0x12fd16d;\n                    }\n                }\n            }\n            else\n            {\n                bool cond:7_1 = rax_7 > 0x3434;\n                if (rax_7 == 0x3434)\n                {\n                    goto label_4056d0;\n                }\n                if (cond:7_1)\n                {\n                    bool cond:13_1 = rax_7 > 0x482b;\n                    if (rax_7 == 0x482b)\n                    {\n                        goto label_4056d0;\n                    }\n                    if (cond:13_1)\n                    {\n                        bool cond:26_1 = rax_7 > 0x4d5a;\n                        if (rax_7 == 0x4d5a)\n                        {\n                            goto label_4056d0;\n                        }\n                        if (cond:26_1)\n                        {\n                            if (rax_7 == 0x5df5)\n                            {\n                                goto label_4056d0;\n                            }\n                            rbx = rax_7 != 0x7275;\n                        }\n                        else\n                        {\n                            if (rax_7 == 0x4858)\n                            {\n                                goto label_4056d0;\n                            }\n                            rbx = rax_7 != 0x4d44;\n                        }\n                    }\n                    else\n                    {\n                        bool cond:27_1 = rax_7 > 0x4004;\n                        if (rax_7 == 0x4004)\n                        {\n                            goto label_4056d0;\n                        }\n                        if ((!cond:27_1))\n                        {\n                            rbx = rax_7 != 0x4000;\n                        }\n                        else\n                        {\n                            if (rax_7 == 0x4006)\n                            {\n                                goto label_4056d0;\n                            }\n                            rbx = rax_7 != 0x4244;\n                        }\n                    }\n                }\n                else\n                {\n                    bool cond:14_1 = rax_7 > 0x137d;\n                    if (rax_7 == 0x137d)\n                    {\n                        goto label_4056d0;\n                    }\n                    if (cond:14_1)\n                    {\n                        bool cond:28_1 = rax_7 > 0x1cd1;\n                        if (rax_7 == 0x1cd1)\n                        {\n                            goto label_4056d0;\n                        }\n                        if (cond:28_1)\n                        {\n                            if (rax_7 == 0x2468)\n                            {\n                                goto label_4056d0;\n                            }\n                            rbx = rax_7 != 0x2478;\n                        }\n                        else\n                        {\n                            if (rax_7 == 0x137f)\n                            {\n                                goto label_4056d0;\n                            }\n                            rbx = rax_7 != 0x138f;\n                        }\n                    }\n                    else\n                    {\n                        bool cond:29_1 = rax_7 > 0x187;\n                        if (rax_7 == 0x187)\n                        {\n                            goto label_4056d0;\n                        }\n                        if ((!cond:29_1))\n                        {\n                            rbx = rax_7 != 0x2f;\n                            return rbx;\n                        }\n                        if (rax_7 == 0x7c0)\n                        {\n                            goto label_4056d0;\n                        }\n                        rbx = rax_7 != 0x1373;\n                    }\n                }\n            }\n        }\n    }\n    else\n    {\n        int32_t* rax_1 = __errno_location();\n        rbx = 1;\n        if (*rax_1 != 0x26)\n        {\n            error(0, *rax_1, dcgettext(nullptr, \"cannot determine location of %s.\u2026\", 5), sub_409510(4, arg2));\n            return 1;\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_4056e0",
            "funcStartAddr": "0x4056e0",
            "funcEndAddr": "0x405d03",
            "decompiledFuncCode": "uint64_t sub_4056e0(int64_t* arg1, char arg2, int32_t arg3)\n{\n    int64_t rcx = 2;\n    int64_t __saved_rbx;\n    bool c = &__saved_rbx < 0xa8;\n    bool z = &__saved_rbx == 0xa8;\n    char* rax = *arg1;\n    void* const rdi = &data_40c38a;\n    int32_t r14 = *(arg1 + 0x3c);\n    char* rsi = rax;\n    while (rcx != 0)\n    {\n        char temp1_1 = *rsi;\n        char temp2_1 = *rdi;\n        c = temp1_1 < temp2_1;\n        z = temp1_1 == temp2_1;\n        rsi = &rsi[1];\n        rdi = (rdi + 1);\n        rcx = (rcx - 1);\n        if ((!z))\n        {\n            break;\n        }\n    }\n    char rcx_1 = *(arg1 + 0x36);\n    int64_t rbp;\n    rbp = ((!z) && (!c));\n    rbp = (rbp - 0);\n    int32_t rbp_1 = rbp;\n    int32_t rax_3;\n    int32_t r12;\n    if (rbp_1 == 0)\n    {\n        rax_3 = r14;\n        r12 = 0;\n    }\n    else\n    {\n        int32_t rsi_1;\n        rsi_1 = arg2 == 0;\n        int32_t rax_2;\n        rax_2 = sub_406780(rax, (rsi_1 << 0xb), arg3);\n        r12 = rax_2;\n        rax_3 = *(arg1 + 0x3c);\n    }\n    arg3 = arg1[7] == 0xffffffff;\n    rax_3 = rax_3 == 0;\n    if (arg3 == rax_3)\n    {\n        __assert_fail(\"valid_file_spec (f)\", \"src/tail.c\", 0x3c7, \"recheck\");\n        /* no return */\n    }\n    char r15 = data_612386;\n    char rax_4 = data_612378;\n    uint64_t rax_9;\n    int64_t var_c8;\n    int32_t var_b0;\n    char* rbp_2;\n    struct stat* r8_1;\n    if (r15 == 0)\n    {\n        *(arg1 + 0x36) = 1;\n        if ((rax_4 == 0 && (__lxstat(1, *arg1, &var_c8) == 0 && (var_b0 & 0xf000) == 0xa000)))\n        {\n        label_405bf0:\n            *(arg1 + 0x3c) = 0xffffffff;\n            char* rdi_18 = *arg1;\n            *(arg1 + 0x34) = 1;\n            error(0, 0, dcgettext(nullptr, \"%s has been replaced with an unt\u2026\", 5), sub_409510(4, sub_4047e0(rdi_18)));\n            rbp_2 = *arg1;\n            goto label_4057bc;\n        }\n        if (r12 == 0xffffffff)\n        {\n            goto label_405787;\n        }\n        r8_1 = &var_c8;\n    label_405826:\n        if (__fxstat(1, r12, r8_1) < 0)\n        {\n            goto label_405787;\n        }\n        if ((((var_b0 & 0xf000) - 0x1000) & 0xffffe000) != 0)\n        {\n            if ((var_b0 & 0xb000) == 0x8000)\n            {\n                goto label_40586a;\n            }\n            *(arg1 + 0x3c) = 0xffffffff;\n            *(arg1 + 0x36) = 0;\n            char* r13_3;\n            if ((r15 == 0 || (r15 != 0 && data_6122a8 != 1)))\n            {\n                *(arg1 + 0x34) = 1;\n                if ((rcx_1 == 0 && r14 == 0xffffffff))\n                {\n                    goto label_405bad;\n                }\n                rbp_2 = *arg1;\n                r13_3 = dcgettext(nullptr, \"; giving up on this name\", 5);\n                goto label_405b80;\n            }\n            if ((r15 != 0 && data_6122a8 == 1))\n            {\n                rbp_2 = *arg1;\n                *(arg1 + 0x34) = 0;\n                if (rcx_1 == 0)\n                {\n                    r13_3 = &data_40ee81[0x1b];\n                    if (r14 != 0xffffffff)\n                    {\n                        goto label_405b80;\n                    }\n                }\n                else\n                {\n                    r13_3 = &data_40ee81[0x1b];\n                label_405b80:\n                    error(0, 0, dcgettext(nullptr, \"%s has been replaced with an unt\u2026\", 5), sub_409510(4, sub_4047e0(rbp_2)), r13_3);\n                label_405bad:\n                    rbp_2 = *arg1;\n                }\n            }\n            goto label_4057bc;\n        }\n    label_40586a:\n        char rax_15 = sub_405090(r12, sub_4047e0(*arg1));\n        *(arg1 + 0x35) = rax_15;\n        if (rax_15 != 0)\n        {\n            if (data_612378 != 0)\n            {\n                goto label_405887;\n            }\n            *(arg1 + 0x3c) = 0xffffffff;\n            error(0, 0, dcgettext(nullptr, \"%s has been replaced with an unt\u2026\", 5), sub_409510(4, sub_4047e0(*arg1)));\n            rbp_2 = *arg1;\n            *(arg1 + 0x34) = 0x101;\n            goto label_4057bc;\n        }\n    label_405887:\n        *(arg1 + 0x3c) = 0;\n        int32_t rax_16 = arg1[7];\n        int64_t var_c0;\n        char const* const rsi_8;\n        int64_t r14_2;\n        if ((r14 & 0xfffffffd) == 0)\n        {\n            char* rdi_13 = *arg1;\n            if (rax_16 == 0xffffffff)\n            {\n                rsi_8 = \"%s has appeared;  following new \u2026\";\n                r14_2 = sub_409510(4, sub_4047e0(rdi_13));\n            }\n            else\n            {\n                if ((arg1[5] != var_c0 || (arg1[5] == var_c0 && arg1[4] != var_c8)))\n                {\n                    error(0, 0, dcgettext(nullptr, \"%s has been replaced;  following\u2026\", 5), sub_409510(4, sub_4047e0(rdi_13)));\n                    char* rdi_15 = *arg1;\n                    sub_404820(arg1[7], sub_4047e0(rdi_15));\n                    goto label_4058e1;\n                }\n                if ((arg1[5] == var_c0 && arg1[4] == var_c8))\n                {\n                    rax_9 = sub_404820(r12, sub_4047e0(rdi_13));\n                }\n            }\n        }\n        else\n        {\n            if (rax_16 != 0xffffffff)\n            {\n                __assert_fail(\"f->fd == -1\", \"src/tail.c\", 0x414, \"recheck\");\n                /* no return */\n            }\n            rsi_8 = \"%s has become accessible\";\n            r14_2 = sub_409510(4, sub_4047e0(*arg1));\n        }\n        if ((((r14 & 0xfffffffd) == 0 && rax_16 == 0xffffffff) || (r14 & 0xfffffffd) != 0))\n        {\n            error(0, 0, dcgettext(nullptr, rsi_8, 5), r14_2);\n        label_4058e1:\n            uint32_t r13_2 = arg2;\n            arg1[7] = r12;\n            if (rbp_1 == 0)\n            {\n                r13_2 = -1;\n            }\n            char* rdi_9 = *arg1;\n            *(arg1 + 0x34) = 0;\n            arg1[1] = 0;\n            int64_t var_70;\n            arg1[2] = var_70;\n            arg1[8] = r13_2;\n            int64_t var_68;\n            arg1[3] = var_68;\n            int64_t rax_23 = var_c8;\n            arg1[0xb] = 0;\n            arg1[4] = rax_23;\n            arg1[5] = var_c0;\n            arg1[6] = var_b0;\n            rax_9 = sub_404c20(r12, 0, 0, sub_4047e0(rdi_9));\n        }\n    }\n    else\n    {\n        if (r12 != 0xffffffff)\n        {\n            *(arg1 + 0x36) = 1;\n            r8_1 = &var_c8;\n            if (rax_4 != 0)\n            {\n                goto label_405826;\n            }\n            r8_1 = &var_c8;\n            if (__lxstat(1, *arg1, &var_c8) != 0)\n            {\n                goto label_405826;\n            }\n            if ((var_b0 & 0xf000) != 0xa000)\n            {\n                goto label_405826;\n            }\n            goto label_405bf0;\n        }\n        *(arg1 + 0x36) = 0;\n        rbp_2 = *arg1;\n        if (rax_4 != 0)\n        {\n            *(arg1 + 0x3c) = *__errno_location();\n        }\n        else\n        {\n            if (__lxstat(1, rbp_2, &var_c8) == 0)\n            {\n                if ((var_b0 & 0xf000) != 0xa000)\n                {\n                    goto label_405787;\n                }\n                goto label_405bf0;\n            }\n        label_405787:\n            int32_t* rax_5 = __errno_location();\n            char r15_1 = *(arg1 + 0x36);\n            rbp_2 = *arg1;\n            int32_t rax_6 = *rax_5;\n            *(arg1 + 0x3c) = rax_6;\n            if (r15_1 != 0)\n            {\n                if (rax_6 != r14)\n                {\n                    uint64_t rsi_11 = *rax_5;\n                    error(0, rsi_11, \"%s\", sub_4095e0(0, 3, sub_4047e0(rbp_2)));\n                    rbp_2 = *arg1;\n                }\n                goto label_4057bc;\n            }\n        }\n        if (rcx_1 == 0)\n        {\n            goto label_4057bc;\n        }\n        error(0, *(arg1 + 0x3c), dcgettext(nullptr, \"%s has become inaccessible\", 5), sub_409510(4, sub_4047e0(rbp_2)));\n        rbp_2 = *arg1;\n    label_4057bc:\n        sub_404820(r12, sub_4047e0(rbp_2));\n        char* rdi_4 = *arg1;\n        rax_9 = sub_404820(arg1[7], sub_4047e0(rdi_4));\n        arg1[7] = 0xffffffff;\n    }\n    return rax_9;\n}\n\n"
        },
        {
            "funcName": "sub_405d10",
            "funcStartAddr": "0x405d10",
            "funcEndAddr": "0x406165",
            "decompiledFuncCode": "int64_t sub_405d10(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_6123a0;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [OPTION]... [FILE]...\\n\", 5), rbp);\n        __printf_chk(1, dcgettext(nullptr, \"Print the last %d lines of each \u2026\", 5), 0xa);\n        fputs_unlocked(dcgettext(nullptr, \"\\nWith no FILE, or when FILE is \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nMandatory arguments to long op\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -c, --bytes=[+]NUM       outpu\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -f, --follow[={name|descriptor\u2026\", 5), stdout);\n        __printf_chk(1, dcgettext(nullptr, \"  -n, --lines=[+]NUM       outpu\u2026\", 5), 0xa, 5);\n        fputs_unlocked(dcgettext(nullptr, \"      --pid=PID            with \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -s, --sleep-interval=N   with \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -z, --zero-terminated    line \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nNUM may have a multiplier suff\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"With --follow (-f), tail default\u2026\", 5), stdout);\n        void* const var_88 = &data_40c2ff;\n        void* const* rax_19 = &var_88;\n        char const* const var_78_1 = \"coreutils\";\n        char const* const var_70_1 = \"Multi-call invocation\";\n        char const* const var_68_1 = \"sha224sum\";\n        char const* const var_60_1 = \"sha2 utilities\";\n        char const* const var_58_1 = \"sha256sum\";\n        char const* const var_50_1 = \"sha2 utilities\";\n        char const* const var_48_1 = \"sha384sum\";\n        char const* const var_40_1 = \"sha2 utilities\";\n        char const* const var_38_1 = \"sha512sum\";\n        char const* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_19 = &rax_19[2];\n            void* const rdi_13 = *rax_19;\n            c_1 = false;\n            z_1 = (rdi_13 & rdi_13) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            char const* const rsi_15 = \"tail\";\n            int64_t rcx_2 = 5;\n            while (rcx_2 != 0)\n            {\n                char const temp0_1 = *rsi_15;\n                char temp1_1 = *rdi_13;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_15 = &rsi_15[1];\n                rdi_13 = (rdi_13 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        char const* const rbp_1 = rax_19[1];\n        char* rax_30;\n        int32_t rax_31;\n        char const* const r12_1;\n        if (rbp_1 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_5;\n            uint64_t r8_2;\n            ssize_t r9_2;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_30 = setlocale(5, nullptr, rdx_5, rcx_5, r8_2, r9_2, var_88, \"test invocation\");\n            if (rax_30 != 0)\n            {\n                rax_31 = strncmp(rax_30, &data_40c383, 3);\n                if (rax_31 != 0)\n                {\n                    rbp_1 = \"tail\";\n                }\n            }\n            if ((rax_30 == 0 || (rax_30 != 0 && rax_31 == 0)))\n            {\n                rbp_1 = \"tail\";\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"tail\");\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_3;\n            uint64_t r8_1;\n            ssize_t r9_1;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_22 = setlocale(5, nullptr, rdx_3, rcx_3, r8_1, r9_1, var_88, \"test invocation\");\n            if (rax_22 == 0)\n            {\n                goto label_406058;\n            }\n            if (strncmp(rax_22, &data_40c383, 3) == 0)\n            {\n                goto label_406058;\n            }\n        }\n        if ((((rbp_1 == 0 && rax_30 != 0) && rax_31 != 0) || rbp_1 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), \"tail\");\n        label_406058:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"tail\");\n            if (rbp_1 != \"tail\")\n            {\n                r12_1 = &data_40ee81[0x1b];\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_1, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_406170",
            "funcStartAddr": "0x406170",
            "funcEndAddr": "0x40617a",
            "decompiledFuncCode": "int64_t sub_406170() __noreturn\n{\n    /* tailcall */\n    return sub_405d10(1);\n}\n\n"
        },
        {
            "funcName": "sub_406180",
            "funcStartAddr": "0x406180",
            "funcEndAddr": "0x406296",
            "decompiledFuncCode": "int64_t sub_406180(char* arg1, int64_t* arg2, int64_t arg3, uint64_t arg4)\n{\n    int64_t rbp = arg3;\n    uint64_t rax = strlen(arg1);\n    char* r14 = *arg2;\n    int64_t var_58 = -1;\n    if (r14 != 0)\n    {\n        char var_41_1 = 0;\n        int64_t rbx_1 = 0;\n        while (true)\n        {\n            if (strncmp(r14, arg1, rax) == 0)\n            {\n                if (strlen(r14) == rax)\n                {\n                    var_58 = rbx_1;\n                    break;\n                }\n                if (var_58 == -1)\n                {\n                    var_58 = rbx_1;\n                    rbx_1 = (rbx_1 + 1);\n                    rbp = (rbp + arg4);\n                    r14 = arg2[rbx_1];\n                    if (r14 != 0)\n                    {\n                        continue;\n                    }\n                    goto label_40625d;\n                }\n                if (arg3 == 0)\n                {\n                    var_41_1 = 1;\n                }\n                else\n                {\n                    char rax_3 = var_41_1;\n                    if (memcmp(((var_58 * arg4) + arg3), rbp, arg4) != 0)\n                    {\n                        rax_3 = 1;\n                    }\n                    var_41_1 = rax_3;\n                }\n            }\n            rbx_1 = (rbx_1 + 1);\n            rbp = (rbp + arg4);\n            r14 = arg2[rbx_1];\n            if (r14 == 0)\n            {\n            label_40625d:\n                int64_t rax_6 = -2;\n                if (var_41_1 == 0)\n                {\n                    rax_6 = var_58;\n                }\n                var_58 = rax_6;\n                break;\n            }\n        }\n    }\n    return var_58;\n}\n\n"
        },
        {
            "funcName": "sub_4062a0",
            "funcStartAddr": "0x4062a0",
            "funcEndAddr": "0x406311",
            "decompiledFuncCode": "int64_t sub_4062a0(uint64_t arg1, uint64_t arg2, int64_t arg3)\n{\n    char* rbx;\n    if (arg3 == -1)\n    {\n        rbx = dcgettext(nullptr, \"invalid argument %s for %s\", 5);\n    }\n    else\n    {\n        rbx = dcgettext(nullptr, \"ambiguous argument %s for %s\", 5);\n    }\n    /* tailcall */\n    return error(0, 0, rbx, sub_409430(0, 8, arg2), sub_409740(1, arg1));\n}\n\n"
        },
        {
            "funcName": "sub_406320",
            "funcStartAddr": "0x406320",
            "funcEndAddr": "0x406438",
            "decompiledFuncCode": "char* sub_406320(int64_t* arg1, int64_t arg2, uint64_t arg3)\n{\n    int64_t r14 = 0;\n    int64_t rbp = arg2;\n    int64_t rbx = 0;\n    fputs_unlocked(dcgettext(nullptr, \"Valid arguments are:\", 5), stderr);\n    int64_t r12 = *arg1;\n    if (r12 != 0)\n    {\n        do\n        {\n            if ((rbx != 0 && memcmp(r14, rbp, arg3) == 0))\n            {\n                rbx = (rbx + 1);\n                rbp = (rbp + arg3);\n                __fprintf_chk(stderr, 1, \", %s\", sub_409760(r12));\n                r12 = arg1[rbx];\n                if (r12 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = (rbx + 1);\n            r14 = rbp;\n            rbp = (rbp + arg3);\n            __fprintf_chk(stderr, 1, \"\\n  - %s\", sub_409760(r12));\n            r12 = arg1[rbx];\n        } while (r12 != 0);\n    }\n    uint64_t* const rdi_6 = stderr;\n    char* rax_6 = stderr[5];\n    if (rax_6 >= stderr[6])\n    {\n        /* tailcall */\n        return __overflow(rdi_6, 0xa);\n    }\n    stderr[5] = &rax_6[1];\n    *rax_6 = 0xa;\n    return rax_6;\n}\n\n"
        },
        {
            "funcName": "sub_406440",
            "funcStartAddr": "0x406440",
            "funcEndAddr": "0x4064b0",
            "decompiledFuncCode": "int64_t sub_406440(int64_t arg1, char* arg2, int64_t* arg3, int64_t arg4, \n    uint64_t arg5, int64_t arg6)\n{\n    int64_t rax = sub_406180(arg2, arg3, arg4, arg5);\n    if (rax < 0)\n    {\n        sub_4062a0(arg1, arg2, rax);\n        sub_406320(arg3, arg4, arg5);\n        arg6();\n        rax = -1;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4064b0",
            "funcStartAddr": "0x4064b0",
            "funcEndAddr": "0x4064fd",
            "decompiledFuncCode": "int64_t sub_4064b0(int64_t arg1, int64_t* arg2, int64_t arg3, uint64_t arg4)\n{\n    int64_t r14 = *arg2;\n    if (r14 != 0)\n    {\n        void* rbx_1 = &arg2[1];\n        int64_t rbp_1 = arg3;\n        do\n        {\n            if (memcmp(arg1, rbp_1, arg4) == 0)\n            {\n                break;\n            }\n            r14 = *rbx_1;\n            rbp_1 = (rbp_1 + arg4);\n            rbx_1 = (rbx_1 + 8);\n        } while (r14 != 0);\n    }\n    return r14;\n}\n\n"
        },
        {
            "funcName": "sub_406500",
            "funcStartAddr": "0x406500",
            "funcEndAddr": "0x40656a",
            "decompiledFuncCode": "int64_t sub_406500(char* arg1, char** arg2)\n{\n    int64_t rax = data_612388;\n    if (rax == 0)\n    {\n        int64_t rcx;\n        int32_t r8;\n        rax = newlocale(0x1fbf, &data_40d7ff, nullptr, rcx, r8);\n        data_612388 = rax;\n    }\n    int64_t rdx = data_612388;\n    if (rdx != 0)\n    {\n        /* tailcall */\n        return strtod_l(arg1, arg2, rdx);\n    }\n    if (arg2 != 0)\n    {\n        *arg2 = arg1;\n    }\n    int512_t zmm0;\n    zmm0 = 0;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_406570",
            "funcStartAddr": "0x406570",
            "funcEndAddr": "0x406578",
            "decompiledFuncCode": "int64_t sub_406570(int64_t arg1)\n{\n    data_612398 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_406580",
            "funcStartAddr": "0x406580",
            "funcEndAddr": "0x406588",
            "decompiledFuncCode": "int64_t sub_406580(char arg1)\n{\n    data_612390 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_406590",
            "funcStartAddr": "0x406590",
            "funcEndAddr": "0x40662e",
            "decompiledFuncCode": "void sub_406590(void* arg1)\n{\n    int32_t rax = sub_40b8f0(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_612390 == 0 || (data_612390 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_612398;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_4095b0(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_612390 != 0) && *rax_1 == 0x20)) && sub_40b8f0(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_6122c0);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_406630",
            "funcStartAddr": "0x406630",
            "funcEndAddr": "0x40668d",
            "decompiledFuncCode": "void* sub_406630(char* arg1)\n{\n    int64_t rbp;\n    rbp = *arg1 == 0x2f;\n    char* rax = sub_4066f0(arg1);\n    void* rcx_1 = (rax - arg1);\n    if (rcx_1 > rbp)\n    {\n        void* rdx_1 = (rcx_1 - 1);\n        if (rax[-1] == 0x2f)\n        {\n            void* rax_1;\n            for (; rbp != rdx_1; rdx_1 = rax_1)\n            {\n                rax_1 = (rdx_1 - 1);\n                if (*((arg1 + rdx_1) - 1) != 0x2f)\n                {\n                    break;\n                }\n            }\n            return rdx_1;\n        }\n    }\n    return rcx_1;\n}\n\n"
        },
        {
            "funcName": "sub_406690",
            "funcStartAddr": "0x406690",
            "funcEndAddr": "0x4066ea",
            "decompiledFuncCode": "char* sub_406690(char* arg1)\n{\n    void* rax = sub_406630(arg1);\n    void* rbx = rax;\n    rax = rax == 0;\n    char* rax_2 = malloc(((rbx + rax) + 1));\n    char* rcx = rax_2;\n    if (rax_2 != 0)\n    {\n        char* rax_3 = memcpy(rax_2, arg1, rbx);\n        rcx = rax_3;\n        if (rbx == 0)\n        {\n            *rax_3 = 0x2e;\n            rbx = 1;\n        }\n        *(rcx + rbx) = 0;\n    }\n    return rcx;\n}\n\n"
        },
        {
            "funcName": "sub_4066f0",
            "funcStartAddr": "0x4066f0",
            "funcEndAddr": "0x40674b",
            "decompiledFuncCode": "char* sub_4066f0(char* arg1)\n{\n    char rdx = *arg1;\n    char* rax = arg1;\n    if (rdx == 0x2f)\n    {\n        do\n        {\n            rax = &rax[1];\n            rdx = *rax;\n        } while (rdx == 0x2f);\n    }\n    if (rdx != 0)\n    {\n        char* rcx_1 = rax;\n        char rsi_1 = 0;\n        while (true)\n        {\n            if (rdx == 0x2f)\n            {\n                rcx_1 = &rcx_1[1];\n                rdx = *rcx_1;\n                rsi_1 = 1;\n                if (rdx == 0)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                if (rsi_1 != 0)\n                {\n                    rax = rcx_1;\n                    rsi_1 = 0;\n                }\n                rcx_1 = &rcx_1[1];\n                rdx = *rcx_1;\n                if (rdx == 0)\n                {\n                    break;\n                }\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_406750",
            "funcStartAddr": "0x406750",
            "funcEndAddr": "0x40677b",
            "decompiledFuncCode": "uint64_t sub_406750(char* arg1)\n{\n    uint64_t rax = strlen(arg1);\n    if (rax > 1)\n    {\n        while (true)\n        {\n            uint64_t rdx_1 = (rax - 1);\n            if (arg1[(rax - 1)] != 0x2f)\n            {\n                break;\n            }\n            rax = rdx_1;\n            if (rdx_1 == 1)\n            {\n                return rax;\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_406780",
            "funcStartAddr": "0x406780",
            "funcEndAddr": "0x4067ca",
            "decompiledFuncCode": "uint64_t sub_406780(char* arg1, int64_t arg2, int32_t arg3)\n{\n    uint64_t rdx = 0;\n    if ((arg2 & 0x40) != 0)\n    {\n        int32_t var_50_1 = 0x10;\n        rdx = arg3;\n        void* var_48_1 = &arg_8;\n        void var_38;\n        void* var_40_1 = &var_38;\n    }\n    return sub_4097e0(open(arg1, arg2, rdx));\n}\n\n"
        },
        {
            "funcName": "sub_4067d0",
            "funcStartAddr": "0x4067d0",
            "funcEndAddr": "0x406863",
            "decompiledFuncCode": "int64_t sub_4067d0(int64_t arg1)\n{\n    int64_t rsi = 0xa;\n    if (arg1 >= 0xa)\n    {\n        rsi = arg1;\n    }\n    int64_t rsi_1 = (rsi | 1);\n    if (rsi_1 != -1)\n    {\n        do\n        {\n            int64_t rax_2;\n            int64_t rdx_1;\n            rdx_1 = HIGHD((rsi_1 * -0x5555555555555555));\n            rax_2 = LOWD((rsi_1 * -0x5555555555555555));\n            uint64_t rcx_2 = (rsi_1 - ((rdx_1 >> 1) * 3));\n            uint64_t rax_6 = rcx_2;\n            int64_t rdi;\n            if ((rsi_1 > 9 && rcx_2 != 0))\n            {\n                int64_t r8_1 = 0x10;\n                rdi = 9;\n                int64_t rcx_3 = 3;\n                uint64_t temp1_1;\n                do\n                {\n                    rcx_3 = (rcx_3 + 2);\n                    rdi = (rdi + r8_1);\n                    temp1_1 = (COMBINE(0, rsi_1) % rcx_3);\n                    rax_6 = temp1_1;\n                    if (rdi >= rsi_1)\n                    {\n                        break;\n                    }\n                    r8_1 = (r8_1 + 8);\n                } while (temp1_1 != 0);\n            }\n            if (((rsi_1 <= 9 || ((rsi_1 > 9 && rcx_2 != 0) && rdi >= rsi_1)) && rax_6 != 0))\n            {\n                break;\n            }\n            rsi_1 = (rsi_1 + 2);\n        } while (rsi_1 != -1);\n    }\n    return rsi_1;\n}\n\n"
        },
        {
            "funcName": "sub_406870",
            "funcStartAddr": "0x406870",
            "funcEndAddr": "0x406880",
            "decompiledFuncCode": "uint64_t sub_406870(int64_t arg1, int64_t arg2)\n{\n    return (COMBINE(0, (RORQ(arg1, 3))) % arg2);\n}\n\n"
        },
        {
            "funcName": "sub_406880",
            "funcStartAddr": "0x406880",
            "funcEndAddr": "0x406887",
            "decompiledFuncCode": "int64_t sub_406880(int64_t arg1, int64_t arg2)\n{\n    int64_t rax;\n    rax = arg1 == arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_406890",
            "funcStartAddr": "0x401e20",
            "funcEndAddr": "0x4068b1",
            "decompiledFuncCode": "int64_t sub_406890(void* arg1, int64_t arg2)\n{\n    int64_t rax = *(arg1 + 0x30)(arg2, *(arg1 + 0x10));\n    if (*(arg1 + 0x10) <= rax)\n    {\n        abort();\n        /* no return */\n    }\n    return ((rax << 4) + *arg1);\n}\n\n"
        },
        {
            "funcName": "sub_4068c0",
            "funcStartAddr": "0x4068c0",
            "funcEndAddr": "0x4069d9",
            "decompiledFuncCode": "int64_t sub_4068c0(void* arg1, int64_t arg2, int64_t* arg3, char arg4)\n{\n    int64_t* rax = sub_406890(arg1, arg2);\n    *arg3 = rax;\n    int64_t rsi = *rax;\n    if (rsi != 0)\n    {\n        int64_t* rbx_1 = rax;\n        char rax_1;\n        if (rsi != arg2)\n        {\n            rax_1 = *(arg1 + 0x38)(arg2, rsi);\n            if (rax_1 != 0)\n            {\n                rsi = *rbx_1;\n            }\n            else\n            {\n                int64_t* rax_2 = rbx_1[1];\n                if (rax_2 != 0)\n                {\n                    rsi = *rax_2;\n                    if (arg2 != rsi)\n                    {\n                        do\n                        {\n                            if (*(arg1 + 0x38)(arg2, rsi) != 0)\n                            {\n                                rax_2 = rbx_1[1];\n                                rsi = *rax_2;\n                                break;\n                            }\n                            rbx_1 = rbx_1[1];\n                            rax_2 = rbx_1[1];\n                            if (rax_2 == 0)\n                            {\n                                return 0;\n                            }\n                            rsi = *rax_2;\n                        } while (rsi != arg2);\n                    }\n                    if (arg4 != 0)\n                    {\n                        rbx_1[1] = rax_2[1];\n                        *rax_2 = 0;\n                        rax_2[1] = *(arg1 + 0x48);\n                        *(arg1 + 0x48) = rax_2;\n                    }\n                    goto label_406979;\n                }\n            }\n        }\n        if (((rsi != arg2 && rax_1 != 0) || rsi == arg2))\n        {\n            if (arg4 == 0)\n            {\n            label_406979:\n                return rsi;\n            }\n            int128_t* rax_5 = rbx_1[1];\n            if (rax_5 != 0)\n            {\n                *rbx_1 = *rax_5;\n                *rax_5 = 0;\n                *(rax_5 + 8) = *(arg1 + 0x48);\n                *(arg1 + 0x48) = rax_5;\n                return rsi;\n            }\n            *rbx_1 = 0;\n            goto label_406979;\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_4069e0",
            "funcStartAddr": "0x4069e0",
            "funcEndAddr": "0x406a5e",
            "decompiledFuncCode": "int64_t sub_4069e0(int64_t* arg1)\n{\n    int32_t* rax_3 = *arg1;\n    if (rax_3 != 0x40d880)\n    {\n        int32_t zmm0 = rax_3[2];\n        if (((zmm0 == 0.100000001f | (FCMP_UO(zmm0, 0.100000001f))) || (zmm0 < 0.100000001f | (FCMP_UO(zmm0, 0.100000001f)))))\n        {\n        label_406a4a:\n            *arg1 = 0x40d880;\n            return 0;\n        }\n        if (((0.899999976f == zmm0 | (FCMP_UO(0.899999976f, zmm0))) || (0.899999976f < zmm0 | (FCMP_UO(0.899999976f, zmm0)))))\n        {\n            goto label_406a4a;\n        }\n        float zmm1 = rax_3[3];\n        if (((zmm1 == 1.10000002f | (FCMP_UO(zmm1, 1.10000002f))) || (zmm1 < 1.10000002f | (FCMP_UO(zmm1, 1.10000002f)))))\n        {\n            goto label_406a4a;\n        }\n        zmm1 = *rax_3;\n        if ((zmm1 < 0f | (FCMP_UO(zmm1, 0f))))\n        {\n            goto label_406a4a;\n        }\n        zmm1 = (zmm1 + 0.100000001f);\n        int32_t zmm2 = rax_3[1];\n        if (((zmm2 == zmm1 | (FCMP_UO(zmm2, zmm1))) || (zmm2 < zmm1 | (FCMP_UO(zmm2, zmm1)))))\n        {\n            goto label_406a4a;\n        }\n        int512_t zmm3;\n        zmm3 = 0x3f800000;\n        if ((1f < zmm2 | (FCMP_UO(1f, zmm2))))\n        {\n            goto label_406a4a;\n        }\n        if ((!((!(zmm0 == zmm1 | (FCMP_UO(zmm0, zmm1)))) && (!(zmm0 < zmm1 | (FCMP_UO(zmm0, zmm1)))))))\n        {\n            goto label_406a4a;\n        }\n    }\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_406a60",
            "funcStartAddr": "0x406a60",
            "funcEndAddr": "0x406baa",
            "decompiledFuncCode": "int64_t sub_406a60(void* arg1, int64_t* arg2, char arg3)\n{\n    int64_t* r12 = *arg2;\n    if (r12 < arg2[1])\n    {\n        do\n        {\n            int64_t r15_2 = *r12;\n            if (r15_2 != 0)\n            {\n                int64_t* rbx_1 = r12[1];\n                if (rbx_1 != 0)\n                {\n                    while (true)\n                    {\n                        int64_t r15_1 = *rbx_1;\n                        int64_t* rax_1 = sub_406890(arg1, r15_1);\n                        int64_t* rdx = rbx_1[1];\n                        if (*rax_1 != 0)\n                        {\n                            rbx_1[1] = rax_1[1];\n                            rax_1[1] = rbx_1;\n                            rbx_1 = rdx;\n                            if (rdx == 0)\n                            {\n                                break;\n                            }\n                        }\n                        else\n                        {\n                            *rax_1 = r15_1;\n                            *(arg1 + 0x18) = (*(arg1 + 0x18) + 1);\n                            *rbx_1 = 0;\n                            rbx_1[1] = *(arg1 + 0x48);\n                            *(arg1 + 0x48) = rbx_1;\n                            rbx_1 = rdx;\n                            if (rdx == 0)\n                            {\n                                break;\n                            }\n                        }\n                    }\n                    r15_2 = *r12;\n                }\n                r12[1] = 0;\n                if (arg3 == 0)\n                {\n                    int64_t* rax_3 = sub_406890(arg1, r15_2);\n                    if (*rax_3 == 0)\n                    {\n                        *rax_3 = r15_2;\n                        *(arg1 + 0x18) = (*(arg1 + 0x18) + 1);\n                    }\n                    else\n                    {\n                        int64_t* rax_4 = *(arg1 + 0x48);\n                        if (rax_4 != 0)\n                        {\n                            *(arg1 + 0x48) = rax_4[1];\n                        }\n                        else\n                        {\n                            rax_4 = malloc(0x10);\n                            if (rax_4 == 0)\n                            {\n                                return 0;\n                            }\n                        }\n                        int64_t rdx_2 = rax_3[1];\n                        *rax_4 = r15_2;\n                        rax_4[1] = rdx_2;\n                        rax_3[1] = rax_4;\n                    }\n                    *r12 = 0;\n                    r12 = &r12[2];\n                    arg2[3] = (arg2[3] - 1);\n                    if (arg2[1] <= r12)\n                    {\n                        break;\n                    }\n                    continue;\n                }\n            }\n            r12 = &r12[2];\n        } while (arg2[1] > r12);\n    }\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_406bb0",
            "funcStartAddr": "0x406bb0",
            "funcEndAddr": "0x406bb5",
            "decompiledFuncCode": "int64_t sub_406bb0(void* arg1)\n{\n    return *(arg1 + 0x10);\n}\n\n"
        },
        {
            "funcName": "sub_406bc0",
            "funcStartAddr": "0x406bc0",
            "funcEndAddr": "0x406bc5",
            "decompiledFuncCode": "int64_t sub_406bc0(void* arg1)\n{\n    return *(arg1 + 0x18);\n}\n\n"
        },
        {
            "funcName": "sub_406bd0",
            "funcStartAddr": "0x406bd0",
            "funcEndAddr": "0x406bd5",
            "decompiledFuncCode": "int64_t sub_406bd0(void* arg1)\n{\n    return *(arg1 + 0x20);\n}\n\n"
        },
        {
            "funcName": "sub_406be0",
            "funcStartAddr": "0x406be0",
            "funcEndAddr": "0x406c2f",
            "decompiledFuncCode": "int64_t sub_406be0(int64_t* arg1)\n{\n    int64_t* rsi = *arg1;\n    int64_t rdi = arg1[1];\n    int64_t rax = 0;\n    if (rsi >= rdi)\n    {\n        return 0;\n    }\n    while (true)\n    {\n        if (*rsi == 0)\n        {\n            rsi = &rsi[2];\n            if (rsi >= rdi)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rdx_1 = rsi[1];\n            int64_t rcx_1 = 1;\n            if (rdx_1 != 0)\n            {\n                do\n                {\n                    rdx_1 = *(rdx_1 + 8);\n                    rcx_1 = (rcx_1 + 1);\n                } while (rdx_1 != 0);\n            }\n            if (rax < rcx_1)\n            {\n                rax = rcx_1;\n            }\n            rsi = &rsi[2];\n            if (rsi >= rdi)\n            {\n                break;\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_406c30",
            "funcStartAddr": "0x406c30",
            "funcEndAddr": "0x406c97",
            "decompiledFuncCode": "int64_t sub_406c30(int64_t* arg1)\n{\n    int64_t* rcx = *arg1;\n    int64_t rsi = arg1[1];\n    int64_t rdx = 0;\n    int64_t r8 = 0;\n    if (rcx < rsi)\n    {\n        do\n        {\n            if (*rcx != 0)\n            {\n                void* rax_1 = rcx[1];\n                r8 = (r8 + 1);\n                rdx = (rdx + 1);\n                if (rax_1 != 0)\n                {\n                    do\n                    {\n                        rax_1 = *(rax_1 + 8);\n                        rdx = (rdx + 1);\n                    } while (rax_1 != 0);\n                    rcx = &rcx[2];\n                    if (rcx >= rsi)\n                    {\n                        break;\n                    }\n                    continue;\n                }\n            }\n            rcx = &rcx[2];\n        } while (rcx < rsi);\n    }\n    if (arg1[3] == r8)\n    {\n        int64_t rax_2;\n        rax_2 = arg1[4] == rdx;\n        return rax_2;\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_406ca0",
            "funcStartAddr": "0x406ca0",
            "funcEndAddr": "0x406de8",
            "decompiledFuncCode": "int64_t sub_406ca0(int64_t* arg1, FILE* arg2)\n{\n    int64_t rbx = 0;\n    int64_t r12 = arg1[2];\n    int64_t r13 = arg1[3];\n    int64_t* rsi = *arg1;\n    int64_t rdi = arg1[1];\n    if (rsi < rdi)\n    {\n        while (true)\n        {\n            if (*rsi == 0)\n            {\n                rsi = &rsi[2];\n                if (rsi >= rdi)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                void* rax_1 = rsi[1];\n                int64_t rdx_1 = 1;\n                if (rax_1 != 0)\n                {\n                    do\n                    {\n                        rax_1 = *(rax_1 + 8);\n                        rdx_1 = (rdx_1 + 1);\n                    } while (rax_1 != 0);\n                }\n                if (rbx < rdx_1)\n                {\n                    rbx = rdx_1;\n                }\n                rsi = &rsi[2];\n                if (rsi >= rdi)\n                {\n                    break;\n                }\n            }\n        }\n    }\n    __fprintf_chk(arg2, 1, \"# entries:         %lu\\n\");\n    __fprintf_chk(arg2, 1, \"# buckets:         %lu\\n\", r12);\n    __fprintf_chk(arg2, 1, \"# buckets used:    %lu (%.2f%%)\\n\", r13);\n    /* tailcall */\n    return __fprintf_chk(arg2, 1, \"max bucket length: %lu\\n\", rbx);\n}\n\n"
        },
        {
            "funcName": "sub_406df0",
            "funcStartAddr": "0x406df0",
            "funcEndAddr": "0x406e43",
            "decompiledFuncCode": "int64_t sub_406df0(void* arg1, int64_t arg2)\n{\n    int64_t rbp = arg2;\n    int64_t* rax = sub_406890(arg1, arg2);\n    int64_t rsi = *rax;\n    if (rsi != 0)\n    {\n        int64_t* rbx_1 = rax;\n        while (true)\n        {\n            if (rsi != rbp)\n            {\n                if (*(arg1 + 0x38)(rbp, rsi) != 0)\n                {\n                    rbp = *rbx_1;\n                }\n                else\n                {\n                    rbx_1 = rbx_1[1];\n                    if (rbx_1 == 0)\n                    {\n                        break;\n                    }\n                    rsi = *rbx_1;\n                    continue;\n                }\n            }\n            return rbp;\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_406e50",
            "funcStartAddr": "0x401e25",
            "funcEndAddr": "0x406e98",
            "decompiledFuncCode": "int64_t sub_406e50(int64_t* arg1)\n{\n    if (arg1[4] == 0)\n    {\n        return 0;\n    }\n    int64_t* rdx = *arg1;\n    int64_t rcx = arg1[1];\n    if (rdx < rcx)\n    {\n        do\n        {\n            int64_t rax_1 = *rdx;\n            if (rax_1 != 0)\n            {\n                return rax_1;\n            }\n            rdx = &rdx[2];\n        } while (rdx < rcx);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_406ea0",
            "funcStartAddr": "0x406ea0",
            "funcEndAddr": "0x406f0a",
            "decompiledFuncCode": "int64_t sub_406ea0(void* arg1, int64_t arg2)\n{\n    int64_t* rax = sub_406890(arg1, arg2);\n    int64_t* rcx = rax;\n    int64_t* rdx = rax;\n    do\n    {\n        int64_t rax_1 = *rdx;\n        rdx = rdx[1];\n        if (rax_1 == arg2)\n        {\n            if (rdx != 0)\n            {\n                return *rdx;\n            }\n            break;\n        }\n    } while (rdx != 0);\n    int64_t rdx_1 = *(arg1 + 8);\n    int64_t rax_2;\n    do\n    {\n        rcx = &rcx[2];\n        if (rdx_1 <= rcx)\n        {\n            rax_2 = 0;\n            break;\n        }\n        rax_2 = *rcx;\n    } while (rax_2 == 0);\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_406f10",
            "funcStartAddr": "0x406f10",
            "funcEndAddr": "0x406f74",
            "decompiledFuncCode": "int64_t sub_406f10(int64_t* arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rdx = *arg1;\n    if (arg1[1] <= rdx)\n    {\n        return 0;\n    }\n    int64_t r9 = 0;\n    do\n    {\n        int64_t r8_1 = *rdx;\n        if (r8_1 != 0)\n        {\n            if (arg3 <= r9)\n            {\n                break;\n            }\n            *(arg2 + (r9 << 3)) = r8_1;\n            int64_t* r8_2 = rdx[1];\n            int64_t rcx_1 = (r9 + 1);\n            if (r8_2 != 0)\n            {\n                do\n                {\n                    if (arg3 == rcx_1)\n                    {\n                        return arg3;\n                    }\n                    rcx_1 = (rcx_1 + 1);\n                    *((arg2 + (rcx_1 << 3)) - 8) = *r8_2;\n                    r8_2 = r8_2[1];\n                } while (r8_2 != 0);\n            }\n            r9 = rcx_1;\n        }\n        rdx = &rdx[2];\n    } while (arg1[1] > rdx);\n    return r9;\n}\n\n"
        },
        {
            "funcName": "sub_406f80",
            "funcStartAddr": "0x406f80",
            "funcEndAddr": "0x406ff8",
            "decompiledFuncCode": "int64_t sub_406f80(int64_t* arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* r14 = *arg1;\n    int64_t rbp;\n    if (arg1[1] <= r14)\n    {\n        rbp = 0;\n    }\n    else\n    {\n        rbp = 0;\n        do\n        {\n            int64_t rdi = *r14;\n            if (rdi != 0)\n            {\n                int64_t* rbx_1 = r14;\n                while (true)\n                {\n                    if (arg2(rdi, arg3) == 0)\n                    {\n                        return rbp;\n                    }\n                    rbx_1 = rbx_1[1];\n                    rbp = (rbp + 1);\n                    if (rbx_1 == 0)\n                    {\n                        break;\n                    }\n                    rdi = *rbx_1;\n                }\n            }\n            r14 = &r14[2];\n        } while (arg1[1] > r14);\n    }\n    return rbp;\n}\n\n"
        },
        {
            "funcName": "sub_407000",
            "funcStartAddr": "0x407000",
            "funcEndAddr": "0x407031",
            "decompiledFuncCode": "uint64_t sub_407000(char* arg1, int64_t arg2)\n{\n    uint64_t rcx = *arg1;\n    uint64_t rdx = 0;\n    if (rcx != 0)\n    {\n        do\n        {\n            arg1 = &arg1[1];\n            int64_t rax_4 = (((rdx << 5) - rdx) + rcx);\n            rcx = *arg1;\n            rdx = (COMBINE(0, rax_4) % arg2);\n        } while (rcx != 0);\n    }\n    return rdx;\n}\n\n"
        },
        {
            "funcName": "sub_407040",
            "funcStartAddr": "0x407040",
            "funcEndAddr": "0x407060",
            "decompiledFuncCode": "void sub_407040(int64_t* arg1)\n{\n    arg1[2] = 0;\n    *arg1 = 0x3f80000000000000;\n    arg1[1] = 0x3fb4fdf43f4ccccd;\n}\n\n"
        },
        {
            "funcName": "sub_407060",
            "funcStartAddr": "0x407060",
            "funcEndAddr": "0x4071ea",
            "decompiledFuncCode": "int64_t* sub_407060(int64_t arg1, void* arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5)\n{\n    int64_t r13 = arg4;\n    int64_t r12 = arg3;\n    int64_t rbp = arg1;\n    if (arg3 == 0)\n    {\n        r12 = 0x406870;\n    }\n    if (arg4 == 0)\n    {\n        r13 = 0x406880;\n    }\n    int64_t* rax = malloc(0x50);\n    int64_t* rbx = rax;\n    if (rax != 0)\n    {\n        int64_t* rdi = &rax[5];\n        float zmm1_1;\n        if (arg2 == 0)\n        {\n            rax[5] = 0x40d880;\n            zmm1_1 = 0.800000012f;\n            if (sub_4069e0(rdi) != 0)\n            {\n                float zmm0_1;\n                if (rbp < 0)\n                {\n                label_4071d3:\n                    zmm0_1 = ((rbp >> 1) | (rbp & 1));\n                    zmm0_1 = (zmm0_1 + zmm0_1);\n                label_407187:\n                    zmm0_1 = (zmm0_1 / zmm1_1);\n                    if ((!(zmm0_1 < 1.84467441e+19f | (FCMP_UO(zmm0_1, 1.84467441e+19f)))))\n                    {\n                        goto label_407140;\n                    }\n                    if ((zmm0_1 < 9.22337204e+18f | (FCMP_UO(zmm0_1, 9.22337204e+18f))))\n                    {\n                        rbp = (truncf(zmm0_1, arg4));\n                    }\n                    else\n                    {\n                        zmm0_1 = (zmm0_1 - 9.22337204e+18f);\n                        rbp = ((truncf(zmm0_1, arg4)) ^ 0x8000000000000000);\n                    }\n                    goto label_4070d3;\n                }\n            label_407182:\n                zmm0_1 = rbp;\n                goto label_407187;\n            }\n        label_407140:\n            int64_t* rdi_3 = rbx;\n            rbx = nullptr;\n            free(rdi_3);\n        }\n        else\n        {\n            rax[5] = arg2;\n            if (sub_4069e0(rdi) == 0)\n            {\n                goto label_407140;\n            }\n            if (*(arg2 + 0x10) == 0)\n            {\n                zmm1_1 = *(arg2 + 8);\n                if (rbp < 0)\n                {\n                    goto label_4071d3;\n                }\n                goto label_407182;\n            }\n        label_4070d3:\n            size_t rax_2 = sub_4067d0(rbp);\n            uint64_t rax_3;\n            rax_3 = (rax_2 >> 0x3d) != 0;\n            uint64_t rax_4 = rax_3;\n            if ((TEST_BITQ(rax_2, 0x3c)))\n            {\n                goto label_407140;\n            }\n            if (rax_4 != 0)\n            {\n                goto label_407140;\n            }\n            rbx[2] = rax_2;\n            if (rax_2 == 0)\n            {\n                goto label_407140;\n            }\n            int64_t rax_5 = calloc(rax_2, 0x10);\n            *rbx = rax_5;\n            if (rax_5 == 0)\n            {\n                goto label_407140;\n            }\n            rbx[3] = 0;\n            rbx[4] = 0;\n            rbx[1] = ((rax_2 << 4) + rax_5);\n            rbx[6] = r12;\n            rbx[7] = r13;\n            rbx[8] = arg5;\n            rbx[9] = 0;\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_4071f0",
            "funcStartAddr": "0x4071f0",
            "funcEndAddr": "0x407298",
            "decompiledFuncCode": "void sub_4071f0(int64_t* arg1)\n{\n    int64_t* r12 = *arg1;\n    if (r12 < arg1[1])\n    {\n        while (true)\n        {\n            if (*r12 == 0)\n            {\n                r12 = &r12[2];\n                if (arg1[1] <= r12)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                int64_t* rbx_1 = r12[1];\n                int64_t rax = arg1[8];\n                if (rbx_1 != 0)\n                {\n                    int64_t* rdx_1;\n                    do\n                    {\n                        if (rax != 0)\n                        {\n                            rax(*rbx_1);\n                            rax = arg1[8];\n                        }\n                        rdx_1 = rbx_1[1];\n                        int64_t rcx_1 = arg1[9];\n                        *rbx_1 = 0;\n                        rbx_1[1] = rcx_1;\n                        arg1[9] = rbx_1;\n                        rbx_1 = rdx_1;\n                    } while (rdx_1 != 0);\n                }\n                if (rax != 0)\n                {\n                    rax(*r12);\n                }\n                *r12 = 0;\n                r12 = &r12[2];\n                r12[-1] = 0;\n                if (arg1[1] <= r12)\n                {\n                    break;\n                }\n            }\n        }\n    }\n    arg1[3] = 0;\n    arg1[4] = 0;\n}\n\n"
        },
        {
            "funcName": "sub_4072a0",
            "funcStartAddr": "0x4072a0",
            "funcEndAddr": "0x407376",
            "decompiledFuncCode": "int64_t sub_4072a0(int64_t* arg1)\n{\n    int64_t* rbp = *arg1;\n    int64_t rax = arg1[1];\n    if (((arg1[8] != 0 && arg1[4] != 0) && rbp < rax))\n    {\n        while (true)\n        {\n            int64_t rdi = *rbp;\n            if (rdi == 0)\n            {\n                rbp = &rbp[2];\n                if (rax <= rbp)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                int64_t* rbx_1 = rbp;\n                while (true)\n                {\n                    arg1[8](rdi);\n                    rbx_1 = rbx_1[1];\n                    if (rbx_1 == 0)\n                    {\n                        break;\n                    }\n                    rdi = *rbx_1;\n                }\n                rax = arg1[1];\n                rbp = &rbp[2];\n                if (rax <= rbp)\n                {\n                    break;\n                }\n            }\n        }\n        rbp = *arg1;\n    }\n    if ((((arg1[8] == 0 || (arg1[8] != 0 && arg1[4] == 0)) || ((arg1[8] != 0 && arg1[4] != 0) && rbp < rax)) && rbp < rax))\n    {\n        do\n        {\n            void* rdi_1 = rbp[1];\n            if (rdi_1 != 0)\n            {\n                void* rbx_2;\n                do\n                {\n                    rbx_2 = *(rdi_1 + 8);\n                    free(rdi_1);\n                    rdi_1 = rbx_2;\n                } while (rbx_2 != 0);\n            }\n            rbp = &rbp[2];\n        } while (arg1[1] > rbp);\n    }\n    void* rdi_2 = arg1[9];\n    if (rdi_2 != 0)\n    {\n        void* rbx_3;\n        do\n        {\n            rbx_3 = *(rdi_2 + 8);\n            free(rdi_2);\n            rdi_2 = rbx_3;\n        } while (rbx_3 != 0);\n    }\n    free(*arg1);\n    /* tailcall */\n    return free(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_407380",
            "funcStartAddr": "0x401e2a",
            "funcEndAddr": "0x40757a",
            "decompiledFuncCode": "uint64_t sub_407380(int64_t* arg1, int64_t arg2)\n{\n    void* r12 = arg1[5];\n    int32_t rbx_4;\n    if (*(r12 + 0x10) == 0)\n    {\n        float zmm0;\n        if (arg2 < 0)\n        {\n            zmm0 = ((arg2 >> 1) | (arg2 & 1));\n            zmm0 = (zmm0 + zmm0);\n        }\n        else\n        {\n            zmm0 = arg2;\n        }\n        zmm0 = (zmm0 / *(r12 + 8));\n        if ((!(zmm0 < 1.84467441e+19f | (FCMP_UO(zmm0, 1.84467441e+19f)))))\n        {\n        label_4074f0:\n            rbx_4 = 0;\n        label_4074fc:\n            return rbx_4;\n        }\n        if ((zmm0 < 9.22337204e+18f | (FCMP_UO(zmm0, 9.22337204e+18f))))\n        {\n            arg2 = (truncf(zmm0, 0x28));\n        }\n        else\n        {\n            zmm0 = (zmm0 - 9.22337204e+18f);\n            arg2 = ((truncf(zmm0, 0x28)) ^ 0x8000000000000000);\n        }\n    }\n    size_t rax_1 = sub_4067d0(arg2);\n    uint64_t rax_2;\n    rax_2 = (rax_1 >> 0x3d) != 0;\n    uint64_t rax_3 = rax_2;\n    if ((rax_1 << 3) < 0)\n    {\n        rax_3 = 1;\n    }\n    if (rax_1 == 0)\n    {\n        goto label_4074f0;\n    }\n    if (rax_3 != 0)\n    {\n        goto label_4074f0;\n    }\n    if (arg1[2] == rax_1)\n    {\n        return 1;\n    }\n    int64_t rax_4 = calloc(rax_1, 0x10);\n    int64_t var_68 = rax_4;\n    if (rax_4 == 0)\n    {\n        goto label_4074f0;\n    }\n    int64_t rbx_3 = ((rax_1 << 4) + rax_4);\n    int64_t var_38_1 = arg1[6];\n    int64_t var_48_1 = 0;\n    int64_t var_30_1 = arg1[7];\n    void* var_40_1 = r12;\n    int64_t var_28_1 = arg1[8];\n    int64_t rax_8 = arg1[9];\n    int32_t rax_9 = sub_406a60(&var_68, arg1, 0);\n    rbx_4 = rax_9;\n    if (rax_9 == 0)\n    {\n        arg1[9] = rax_8;\n        if ((sub_406a60(arg1, &var_68, 1) != 0 && sub_406a60(arg1, &var_68, 0) != 0))\n        {\n            free(var_68);\n            return rbx_4;\n        }\n        abort();\n        /* no return */\n    }\n    free(*arg1);\n    *arg1 = var_68;\n    arg1[1] = rbx_3;\n    arg1[2] = rax_1;\n    arg1[3] = 0;\n    arg1[9] = rax_8;\n    goto label_4074fc;\n}\n\n"
        },
        {
            "funcName": "sub_407580",
            "funcStartAddr": "0x401e2f",
            "funcEndAddr": "0x4077f4",
            "decompiledFuncCode": "int64_t sub_407580(int64_t* arg1, int64_t arg2, int64_t* arg3)\n{\n    if (arg2 != 0)\n    {\n        int64_t* var_20;\n        int64_t rax_1 = sub_4068c0(arg1, arg2, &var_20, 0);\n        if (rax_1 != 0)\n        {\n            if (arg3 != 0)\n            {\n                *arg3 = rax_1;\n            }\n            return 0;\n        }\n        int64_t rax_3 = arg1[3];\n        int64_t rax_4;\n        void* rdx_2;\n        float zmm1;\n        if (rax_3 < 0)\n        {\n            rax_4 = arg1[2];\n            zmm1 = ((rax_3 >> 1) | (rax_3 & 1));\n            rdx_2 = arg1[5];\n            zmm1 = (zmm1 + zmm1);\n        }\n        else\n        {\n            rdx_2 = arg1[5];\n            zmm1 = rax_3;\n            rax_4 = arg1[2];\n        }\n        float zmm0_1;\n        if (((rax_3 < 0 && rax_4 >= 0) || (rax_3 >= 0 && rax_4 >= 0)))\n        {\n            zmm0_1 = (rax_4 * *(rdx_2 + 8));\n            if ((!((!(zmm1 == zmm0_1 | (FCMP_UO(zmm1, zmm0_1)))) && (!(zmm1 < zmm0_1 | (FCMP_UO(zmm1, zmm0_1)))))))\n            {\n            label_407602:\n                int64_t* r12_2 = var_20;\n                if (*r12_2 == 0)\n                {\n                    *r12_2 = arg2;\n                    arg1[4] = (arg1[4] + 1);\n                    arg1[3] = (arg1[3] + 1);\n                    return 1;\n                }\n                int64_t* rax_5 = arg1[9];\n                if (rax_5 == 0)\n                {\n                    rax_5 = malloc(0x10);\n                }\n                else\n                {\n                    arg1[9] = rax_5[1];\n                }\n                int64_t rdx_4 = r12_2[1];\n                *rax_5 = arg2;\n                rax_5[1] = rdx_4;\n                r12_2[1] = rax_5;\n                arg1[4] = (arg1[4] + 1);\n                return 1;\n                goto label_407714;\n            }\n        label_4076a5:\n            sub_4069e0(&arg1[5]);\n            void* rdx_8 = arg1[5];\n            int64_t rax_9 = arg1[2];\n            float zmm2_1 = *(rdx_8 + 8);\n            float zmm0_2;\n            if (rax_9 < 0)\n            {\n                zmm0_2 = ((rax_9 >> 1) | (rax_9 & 1));\n                zmm0_2 = (zmm0_2 + zmm0_2);\n            }\n            else\n            {\n                zmm0_2 = rax_9;\n            }\n            int64_t rax_10 = arg1[3];\n            float zmm1_1;\n            if (rax_10 < 0)\n            {\n                zmm1_1 = ((rax_10 >> 1) | (rax_10 & 1));\n                zmm1_1 = (zmm1_1 + zmm1_1);\n            }\n            else\n            {\n                zmm1_1 = rax_10;\n            }\n            float zmm3_1 = (zmm2_1 * zmm0_2);\n            if (((zmm1_1 == zmm3_1 | (FCMP_UO(zmm1_1, zmm3_1))) || (zmm1_1 < zmm3_1 | (FCMP_UO(zmm1_1, zmm3_1)))))\n            {\n                goto label_407602;\n            }\n            zmm0_2 = (zmm0_2 * *(rdx_8 + 0xc));\n            if (*(rdx_8 + 0x10) == 0)\n            {\n                zmm0_2 = (zmm0_2 * zmm2_1);\n            }\n            if ((!(zmm0_2 < 1.84467441e+19f | (FCMP_UO(zmm0_2, 1.84467441e+19f)))))\n            {\n            label_407714:\n                return 0xffffffff;\n            }\n            int64_t rsi;\n            if ((!(zmm0_2 < 9.22337204e+18f | (FCMP_UO(zmm0_2, 9.22337204e+18f)))))\n            {\n                zmm0_2 = (zmm0_2 - 9.22337204e+18f);\n                rsi = ((truncf(zmm0_2, arg1)) ^ 0x8000000000000000);\n            }\n            else\n            {\n                rsi = (truncf(zmm0_2, arg1));\n            }\n            if (sub_407380(arg1, rsi) == 0)\n            {\n                goto label_407714;\n            }\n            if (sub_4068c0(arg1, arg2, &var_20, 0) == 0)\n            {\n                goto label_407602;\n            }\n        }\n        if (((rax_3 < 0 && rax_4 < 0) || (rax_3 >= 0 && rax_4 < 0)))\n        {\n            zmm0_1 = ((rax_4 >> 1) | (rax_4 & 1));\n            zmm0_1 = (zmm0_1 + zmm0_1);\n            zmm0_1 = (zmm0_1 * *(rdx_2 + 8));\n            if ((!((zmm1 == zmm0_1 | (FCMP_UO(zmm1, zmm0_1))) || (zmm1 < zmm0_1 | (FCMP_UO(zmm1, zmm0_1))))))\n            {\n                goto label_4076a5;\n            }\n            goto label_407602;\n        }\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_407800",
            "funcStartAddr": "0x407800",
            "funcEndAddr": "0x40783b",
            "decompiledFuncCode": "int64_t sub_407800(int64_t* arg1, int64_t arg2)\n{\n    int64_t rbx = arg2;\n    int64_t var_10;\n    int32_t rax = sub_407580(arg1, arg2, &var_10);\n    if (rax == 0xffffffff)\n    {\n        return 0;\n    }\n    if (rax == 0)\n    {\n        rbx = var_10;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_407840",
            "funcStartAddr": "0x407840",
            "funcEndAddr": "0x407a17",
            "decompiledFuncCode": "int64_t sub_407840(int64_t* arg1)\n{\n    int64_t* var_20;\n    int64_t rsi;\n    int64_t rax = sub_4068c0(arg1, rsi, &var_20, 1);\n    if (rax != 0)\n    {\n        int64_t* rax_1 = var_20;\n        arg1[4] = (arg1[4] - 1);\n        if (*rax_1 == 0)\n        {\n            int64_t rax_3 = arg1[3];\n            int64_t rax_4 = (rax_3 - 1);\n            arg1[3] = rax_4;\n            int64_t rax_5;\n            float* rdx_1;\n            float zmm0_1;\n            if ((rax_3 - 1) < 0)\n            {\n                rax_5 = arg1[2];\n                zmm0_1 = ((rax_4 >> 1) | (rax_4 & 1));\n                rdx_1 = arg1[5];\n                zmm0_1 = (zmm0_1 + zmm0_1);\n            }\n            else\n            {\n                rdx_1 = arg1[5];\n                zmm0_1 = rax_4;\n                rax_5 = arg1[2];\n            }\n            float zmm1;\n            if ((((rax_3 - 1) < 0 && rax_5 >= 0) || ((rax_3 - 1) >= 0 && rax_5 >= 0)))\n            {\n                zmm1 = rax_5;\n            }\n            if ((((rax_3 - 1) < 0 && rax_5 < 0) || ((rax_3 - 1) >= 0 && rax_5 < 0)))\n            {\n                zmm1 = ((rax_5 >> 1) | (rax_5 & 1));\n                zmm1 = (zmm1 + zmm1);\n            }\n            zmm1 = (zmm1 * *rdx_1);\n            if ((!((zmm1 == zmm0_1 | (FCMP_UO(zmm1, zmm0_1))) || (zmm1 < zmm0_1 | (FCMP_UO(zmm1, zmm0_1))))))\n            {\n                sub_4069e0(&arg1[5]);\n                int64_t rax_6 = arg1[2];\n                int32_t* rdx_2 = arg1[5];\n                float zmm0_2;\n                if (rax_6 < 0)\n                {\n                    zmm0_2 = ((rax_6 >> 1) | (rax_6 & 1));\n                    zmm0_2 = (zmm0_2 + zmm0_2);\n                }\n                else\n                {\n                    zmm0_2 = rax_6;\n                }\n                int64_t rax_7 = arg1[3];\n                float zmm1_1;\n                if (rax_7 < 0)\n                {\n                    zmm1_1 = ((rax_7 >> 1) | (rax_7 & 1));\n                    zmm1_1 = (zmm1_1 + zmm1_1);\n                }\n                else\n                {\n                    zmm1_1 = rax_7;\n                }\n                float zmm2_1 = (*rdx_2 * zmm0_2);\n                if ((!((zmm2_1 == zmm1_1 | (FCMP_UO(zmm2_1, zmm1_1))) || (zmm2_1 < zmm1_1 | (FCMP_UO(zmm2_1, zmm1_1))))))\n                {\n                    zmm0_2 = (zmm0_2 * rdx_2[1]);\n                    if (rdx_2[4] == 0)\n                    {\n                        zmm0_2 = (zmm0_2 * rdx_2[2]);\n                    }\n                    int64_t rsi_1;\n                    if ((!(zmm0_2 < 9.22337204e+18f | (FCMP_UO(zmm0_2, 9.22337204e+18f)))))\n                    {\n                        zmm0_2 = (zmm0_2 - 9.22337204e+18f);\n                        rsi_1 = ((truncf(zmm0_2, arg1)) ^ 0x8000000000000000);\n                    }\n                    else\n                    {\n                        rsi_1 = (truncf(zmm0_2, arg1));\n                    }\n                    if (sub_407380(arg1, rsi_1) == 0)\n                    {\n                        void* rdi_2 = arg1[9];\n                        if (rdi_2 != 0)\n                        {\n                            void* r12_1;\n                            do\n                            {\n                                r12_1 = *(rdi_2 + 8);\n                                free(rdi_2);\n                                rdi_2 = r12_1;\n                            } while (r12_1 != 0);\n                        }\n                        arg1[9] = 0;\n                    }\n                }\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_407a20",
            "funcStartAddr": "0x407a20",
            "funcEndAddr": "0x407abc",
            "decompiledFuncCode": "void* sub_407a20(uint64_t arg1, void* arg2)\n{\n    void* rcx = (arg2 + 0x14);\n    *(arg2 + 0x14) = 0;\n    if (arg1 < 0)\n    {\n        void* rsi;\n        while (true)\n        {\n            rsi = (rcx - 1);\n            int64_t rax_7;\n            int64_t rdx_3;\n            rdx_3 = HIGHD((arg1 * 0x6666666666666667));\n            rax_7 = LOWD((arg1 * 0x6666666666666667));\n            int64_t rdx_5 = ((rdx_3 >> 2) - (arg1 >> 0x3f));\n            char rax_12 = ((0x30 + (rdx_5 * 0xa)) - arg1);\n            arg1 = rdx_5;\n            *(rcx - 1) = rax_12;\n            if (rdx_5 == 0)\n            {\n                break;\n            }\n            rcx = rsi;\n        }\n        *(rsi - 1) = 0x2d;\n        return (rcx - 2);\n    }\n    uint64_t rdx_2;\n    do\n    {\n        rcx = (rcx - 1);\n        int64_t rax_2;\n        int64_t rdx_1;\n        rdx_1 = HIGHD((arg1 * -0x3333333333333333));\n        rax_2 = LOWD((arg1 * -0x3333333333333333));\n        rdx_2 = (rdx_1 >> 3);\n        char rax_3 = (rdx_2 + (rdx_2 << 2));\n        *rcx = ((arg1 - (rax_3 + rax_3)) + 0x30);\n        arg1 = rdx_2;\n    } while (rdx_2 != 0);\n    return rcx;\n}\n\n"
        },
        {
            "funcName": "sub_407ac0",
            "funcStartAddr": "0x407ac0",
            "funcEndAddr": "0x407b32",
            "decompiledFuncCode": "uint64_t sub_407ac0()\n{\n    int32_t rbx = 0x31069;\n    char* rax = getenv(\"_POSIX2_VERSION\");\n    if ((rax != 0 && *rax != 0))\n    {\n        char* var_10;\n        int64_t rax_2 = strtol(rax, &var_10, 0xa);\n        if (*var_10 == 0)\n        {\n            if (rax_2 >= -0x80000000)\n            {\n                int32_t rbx_1 = 0x7fffffff;\n                if (rax_2 <= 0x7fffffff)\n                {\n                    rbx_1 = rax_2;\n                }\n                return rbx_1;\n            }\n            rbx = -0x80000000;\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_407b40",
            "funcStartAddr": "0x407b40",
            "funcEndAddr": "0x407bd9",
            "decompiledFuncCode": "char* sub_407b40(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            char const* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char const temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = &rdi[1];\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_40d910;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_6123a0 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_407be0",
            "funcStartAddr": "0x407be0",
            "funcEndAddr": "0x407cd2",
            "decompiledFuncCode": "char* sub_407be0(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_40ba70();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_407cc1:\n                void* const rbx_1 = &data_40d914;\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_407cc1;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_407cc1;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_407cc1;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_407cc1;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_407cc1;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_407cc1;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_407cc1;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_40d91d;\n            if (cond:2_1)\n            {\n                rbx = &data_40d91a;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_407cc1;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_407cc1;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_407cc1;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_407cc1;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_407cc1;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_40d921;\n            if (cond:1_1)\n            {\n                rbx = &data_40d916;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_407ce0",
            "funcStartAddr": "0x401e34",
            "funcEndAddr": "0x408f01",
            "decompiledFuncCode": "int64_t sub_407ce0(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    char const* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n    label_407d78:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_4080ec:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_408134;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_407ce0(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char const rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_40814b;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_408285;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_407ed5;\n                            }\n                            goto label_4081c0;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_408285;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_4080b0;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_4080b0:\n                            if (var_c0 == 0)\n                            {\n                                goto label_4080bb;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_407f17:\n                            if (var_5c == 0)\n                            {\n                                goto label_407f28;\n                            }\n                        label_4080e0:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_4080e8;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_40831b;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_40831b:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_40832a:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_4080ec;\n                            }\n                            goto label_4080b0;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_4080b0;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_4080b0;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_40831b;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_407eb6;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_407eb6:\n                            if (var_5c == 0)\n                            {\n                                goto label_407ed5;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_407ed5;\n                            }\n                            goto label_40832a;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_407ead:\n                            if (r12_1 != 0)\n                            {\n                                goto label_4080bb;\n                            }\n                            goto label_407eb6;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_4082e0:\n                            rdx = r11_1 == 2;\n                        label_407ed5:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_407fdc;\n                            }\n                            goto label_407edf;\n                        }\n                        case 0x27:\n                        {\n                            goto label_40805d;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_40802d;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_40808a;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_408e1d;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_407ff4;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_407e89;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_408480;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_408480;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_408dd0:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_408134:\n                            rbx_1 = sub_407ce0(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_40814b:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_408285;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_4081d7;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_408285;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_4081a0:\n                                r13 = 0;\n                                goto label_407f5b;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_407f28:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_407f5b:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_407f65;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_407f65:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_407f6d;\n                            }\n                            case 9:\n                            {\n                                goto label_408150;\n                            }\n                            case 0xa:\n                            {\n                                goto label_4080c8;\n                            }\n                            case 0xb:\n                            {\n                                goto label_4081b0;\n                            }\n                            case 0xc:\n                            {\n                                goto label_408190;\n                            }\n                            case 0xd:\n                            {\n                                goto label_408179;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_4084da;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_408165;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_4084ba;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_4084a2;\n                            }\n                            case 0x27:\n                            {\n                                goto label_40805d;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_40802d;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_40808a;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_407e89;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_408480:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_408280:\n                            var_b8 = 0;\n                        label_408285:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_4082d4:\n                                if (rdx == 0)\n                                {\n                                    goto label_4082e0;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_4087d1:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_407ff4;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_4080ec;\n                                }\n                                r13 = var_98;\n                                goto label_407f6d;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_40b6b0(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_4080ec;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_4087d1;\n                            }\n                            goto label_4082d4;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_4081c0:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_4080ec;\n                                }\n                                var_b8 = 0;\n                            label_4081d7:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_408222;\n                                    }\n                                    rax_8 = r10;\n                                label_40821a:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_408222:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_407fdc;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_408263;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_40821a;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_407fdc;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_408280;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_408195;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_4080cd;\n                            }\n                            case 9:\n                            {\n                            label_408150:\n                                rbp_3 = 0x74;\n                                goto label_4080cd;\n                            }\n                            case 0xa:\n                            {\n                            label_4080c8:\n                                rbp_3 = 0x6e;\n                            label_4080cd:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_4080e0;\n                                }\n                                goto label_407f28;\n                            }\n                            case 0xb:\n                            {\n                            label_4081b0:\n                                rbp_3 = 0x76;\n                                goto label_408195;\n                            }\n                            case 0xc:\n                            {\n                            label_408190:\n                                rbp_3 = 0x66;\n                            label_408195:\n                                if (var_5c == 0)\n                                {\n                                    goto label_4081a0;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_4080e8:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_4080ec;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_408179:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_4080b0;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_4084da:\n                                rbp_3 = 0x20;\n                                goto label_4084a2;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_408165:\n                                rdx = 0;\n                            label_4080bb:\n                                r13 = 0;\n                                goto label_407ed5;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_4084ba:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_407ed5;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_407edf:\n                                rax_8 = 0;\n                                goto label_407ee1;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_4084a2:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_407ee1;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_40805d:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_407ed5;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_408e1d;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_407fdc;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_40802d:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_408e1d:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_4080ec;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_407fdc:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_407f17;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_407ff4;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_407ed5;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_4085c0:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_407ed5;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_4085c0;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_4085c0;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_4085c0;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_4085c0;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_408dd0;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_408263:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_407fdc;\n                                }\n                            label_407ee1:\n                                if (arg7 == 0)\n                                {\n                                    goto label_407fdc;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_407fdc;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_407f17;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_40808a:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_4080b0;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_407ff4:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_407f6d;\n                                }\n                            label_407f6d:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_407f76;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_407f76:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_407e89:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_4080bb;\n                                }\n                                goto label_407ead;\n                            }\n                        }\n                    }\n                }\n            }\n        label_408566:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = \"'\";\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_407d78;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = \"'\";\n                goto label_407d78;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"'\";\n            goto label_407d78;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40d914;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40d914;\n            }\n            goto label_407d78;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_40d914;\n            goto label_407d78;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_407d78;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_407be0(&data_40d925, r13);\n                arg9 = sub_407be0(\"'\", r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_407d78;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_408566;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n        goto label_407d78;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_408f10",
            "funcStartAddr": "0x401e39",
            "funcEndAddr": "0x4090ae",
            "decompiledFuncCode": "char* sub_408f10(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_612318;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_612330 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_40a020();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x612320)\n        {\n            int64_t rax_9 = sub_409e30(0, rsi_1);\n            int128_t zmm0 = data_612320;\n            rbx = rax_9;\n            data_612318 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_409e30(rbx, rsi_1);\n            data_612318 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_612330;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_612330 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_407ce0(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        size_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x6123c0)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_409dd0(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_407ce0(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_4090b0",
            "funcStartAddr": "0x4090b0",
            "funcEndAddr": "0x4090e4",
            "decompiledFuncCode": "int64_t sub_4090b0(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x6124c0;\n    }\n    int64_t rax_1 = sub_409fd0(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4090f0",
            "funcStartAddr": "0x4090f0",
            "funcEndAddr": "0x4090ff",
            "decompiledFuncCode": "uint64_t sub_4090f0(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6124c0;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_409100",
            "funcStartAddr": "0x409100",
            "funcEndAddr": "0x40910f",
            "decompiledFuncCode": "void sub_409100(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6124c0;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_409110",
            "funcStartAddr": "0x409110",
            "funcEndAddr": "0x409143",
            "decompiledFuncCode": "uint64_t sub_409110(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x6124c0;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_409150",
            "funcStartAddr": "0x409150",
            "funcEndAddr": "0x409163",
            "decompiledFuncCode": "uint64_t sub_409150(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6124c0;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_409170",
            "funcStartAddr": "0x409170",
            "funcEndAddr": "0x40919b",
            "decompiledFuncCode": "void sub_409170(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_6124c0;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x6124c0;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4091a0",
            "funcStartAddr": "0x4091a0",
            "funcEndAddr": "0x409212",
            "decompiledFuncCode": "int64_t sub_4091a0(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_6124c0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_407ce0(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_409220",
            "funcStartAddr": "0x409220",
            "funcEndAddr": "0x409301",
            "decompiledFuncCode": "char* sub_409220(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_6124c0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_407ce0(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_409dd0((rax_2 + 1));\n    sub_407ce0(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_409310",
            "funcStartAddr": "0x409310",
            "funcEndAddr": "0x40931a",
            "decompiledFuncCode": "int64_t sub_409310(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_409220(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_409320",
            "funcStartAddr": "0x409320",
            "funcEndAddr": "0x4093b5",
            "decompiledFuncCode": "uint64_t sub_409320()\n{\n    uint64_t rax_2 = data_612330;\n    int64_t r12 = data_612318;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x6123c0)\n    {\n        rax_2 = free(rdi_2);\n        *data_612320 = 0x100;\n        *(data_612320 + 8) = 0x6123c0;\n    }\n    if (r12 != 0x612320)\n    {\n        rax_2 = free(r12);\n        data_612318 = 0x612320;\n    }\n    data_612330 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_4093c0",
            "funcStartAddr": "0x4093c0",
            "funcEndAddr": "0x4093d1",
            "decompiledFuncCode": "int64_t sub_4093c0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_408f10(arg1, arg2, -1, &data_6124c0);\n}\n\n"
        },
        {
            "funcName": "sub_4093e0",
            "funcStartAddr": "0x4093e0",
            "funcEndAddr": "0x4093ea",
            "decompiledFuncCode": "int64_t sub_4093e0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_408f10(arg1, arg2, arg3, &data_6124c0);\n}\n\n"
        },
        {
            "funcName": "sub_4093f0",
            "funcStartAddr": "0x4093f0",
            "funcEndAddr": "0x409406",
            "decompiledFuncCode": "int64_t sub_4093f0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_408f10(0, arg1, -1, &data_6124c0);\n}\n\n"
        },
        {
            "funcName": "sub_409410",
            "funcStartAddr": "0x409410",
            "funcEndAddr": "0x409422",
            "decompiledFuncCode": "int64_t sub_409410(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_408f10(0, arg1, arg2, &data_6124c0);\n}\n\n"
        },
        {
            "funcName": "sub_409430",
            "funcStartAddr": "0x401e3e",
            "funcEndAddr": "0x409498",
            "decompiledFuncCode": "char* sub_409430(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_408f10(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_4094a0",
            "funcStartAddr": "0x401e43",
            "funcEndAddr": "0x409504",
            "decompiledFuncCode": "char* sub_4094a0(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_408f10(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_409510",
            "funcStartAddr": "0x409510",
            "funcEndAddr": "0x40951c",
            "decompiledFuncCode": "int64_t sub_409510(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_409430(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_409520",
            "funcStartAddr": "0x409520",
            "funcEndAddr": "0x40952f",
            "decompiledFuncCode": "int64_t sub_409520(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_4094a0(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_409530",
            "funcStartAddr": "0x409530",
            "funcEndAddr": "0x4095a0",
            "decompiledFuncCode": "char* sub_409530(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_6124f0;\n    int128_t var_48 = data_6124c0;\n    int128_t var_38 = data_6124d0;\n    int128_t var_28 = data_6124e0;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_408f10(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_4095a0",
            "funcStartAddr": "0x4095a0",
            "funcEndAddr": "0x4095ad",
            "decompiledFuncCode": "int64_t sub_4095a0(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_409530(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_4095b0",
            "funcStartAddr": "0x4095b0",
            "funcEndAddr": "0x4095c1",
            "decompiledFuncCode": "int64_t sub_4095b0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_409530(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_4095d0",
            "funcStartAddr": "0x4095d0",
            "funcEndAddr": "0x4095da",
            "decompiledFuncCode": "int64_t sub_4095d0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_409530(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_4095e0",
            "funcStartAddr": "0x401e48",
            "funcEndAddr": "0x40964e",
            "decompiledFuncCode": "char* sub_4095e0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_408f10(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_409650",
            "funcStartAddr": "0x409650",
            "funcEndAddr": "0x4096bc",
            "decompiledFuncCode": "char* sub_409650(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_6124c0;\n    int128_t var_38 = data_6124d0;\n    int128_t var_28 = data_6124e0;\n    int64_t var_18 = data_6124f0;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_408f10(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_409710",
            "funcStartAddr": "0x409710",
            "funcEndAddr": "0x40971a",
            "decompiledFuncCode": "int64_t sub_409710(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_408f10(arg1, arg2, arg3, &data_6122e0);\n}\n\n"
        },
        {
            "funcName": "sub_409720",
            "funcStartAddr": "0x409720",
            "funcEndAddr": "0x409732",
            "decompiledFuncCode": "int64_t sub_409720(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_408f10(0, arg1, arg2, &data_6122e0);\n}\n\n"
        },
        {
            "funcName": "sub_409740",
            "funcStartAddr": "0x409740",
            "funcEndAddr": "0x409751",
            "decompiledFuncCode": "int64_t sub_409740(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_408f10(arg1, arg2, -1, &data_6122e0);\n}\n\n"
        },
        {
            "funcName": "sub_409760",
            "funcStartAddr": "0x409760",
            "funcEndAddr": "0x409776",
            "decompiledFuncCode": "int64_t sub_409760(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_408f10(0, arg1, -1, &data_6122e0);\n}\n\n"
        },
        {
            "funcName": "sub_409780",
            "funcStartAddr": "0x409780",
            "funcEndAddr": "0x4097de",
            "decompiledFuncCode": "ssize_t sub_409780(int32_t arg1, int64_t arg2, uint64_t arg3)\n{\n    uint64_t rbx = arg3;\n    ssize_t rax_1;\n    while (true)\n    {\n        rax_1 = read(arg1, arg2, rbx);\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        int32_t rax_3 = *__errno_location();\n        if (rax_3 != 4)\n        {\n            if (rbx <= 0x7fffe000)\n            {\n                break;\n            }\n            if (rax_3 != 0x16)\n            {\n                break;\n            }\n            rbx = 0x7fffe000;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4097e0",
            "funcStartAddr": "0x4097e0",
            "funcEndAddr": "0x40982e",
            "decompiledFuncCode": "uint64_t sub_4097e0(int32_t arg1)\n{\n    if (arg1 <= 2)\n    {\n        int32_t rax_1 = sub_40bfe0(arg1);\n        int32_t* rax_2 = __errno_location();\n        int32_t r13 = *rax_2;\n        close(arg1);\n        *rax_2 = r13;\n        return rax_1;\n    }\n    return arg1;\n}\n\n"
        },
        {
            "funcName": "sub_409830",
            "funcStartAddr": "0x401e4d",
            "funcEndAddr": "0x409c0d",
            "decompiledFuncCode": "int64_t sub_409830(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_40e66b, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_409c10",
            "funcStartAddr": "0x409c10",
            "funcEndAddr": "0x409c30",
            "decompiledFuncCode": "int64_t sub_409c10(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_409830(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_409c30",
            "funcStartAddr": "0x409c30",
            "funcEndAddr": "0x409c90",
            "decompiledFuncCode": "int64_t sub_409c30(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_409830(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_409c90",
            "funcStartAddr": "0x409c90",
            "funcEndAddr": "0x409d4c",
            "decompiledFuncCode": "int64_t sub_409c90(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_409830(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_409d50",
            "funcStartAddr": "0x409d50",
            "funcEndAddr": "0x409dc4",
            "decompiledFuncCode": "int64_t sub_409d50()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_409dd0",
            "funcStartAddr": "0x409dd0",
            "funcEndAddr": "0x409dea",
            "decompiledFuncCode": "int64_t sub_409dd0(size_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_40a020();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_409e30",
            "funcStartAddr": "0x409e30",
            "funcEndAddr": "0x409e66",
            "decompiledFuncCode": "int64_t sub_409e30(int64_t arg1, size_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_40a020();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_409f7a",
            "funcStartAddr": "0x409f7a",
            "funcEndAddr": "0x409f80",
            "decompiledFuncCode": "int64_t sub_409f7a() __noreturn\n{\n    sub_40a020();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_409f80",
            "funcStartAddr": "0x409f80",
            "funcEndAddr": "0x409f97",
            "decompiledFuncCode": "int64_t sub_409f80(size_t arg1)\n{\n    /* tailcall */\n    return memset(sub_409dd0(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_409fa0",
            "funcStartAddr": "0x409fa0",
            "funcEndAddr": "0x409fce",
            "decompiledFuncCode": "int64_t sub_409fa0(size_t arg1, size_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_40a020();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_409fd0",
            "funcStartAddr": "0x409fd0",
            "funcEndAddr": "0x409ff8",
            "decompiledFuncCode": "int64_t sub_409fd0(int64_t arg1, size_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_409dd0(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_40a000",
            "funcStartAddr": "0x40a000",
            "funcEndAddr": "0x40a013",
            "decompiledFuncCode": "int64_t sub_40a000(char* arg1)\n{\n    /* tailcall */\n    return sub_409fd0(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_40a020",
            "funcStartAddr": "0x40a020",
            "funcEndAddr": "0x40a051",
            "decompiledFuncCode": "int64_t sub_40a020() __noreturn\n{\n    error(data_6122c0, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40a060",
            "funcStartAddr": "0x40a060",
            "funcEndAddr": "0x40a130",
            "decompiledFuncCode": "int64_t sub_40a060(char* arg1, int32_t arg2, int64_t arg3, int64_t arg4, \n    char* arg5, int64_t arg6, int32_t arg7)\n{\n    int32_t rbx = arg7;\n    int64_t var_40;\n    int32_t rax = sub_40a260(arg1, nullptr, arg2, &var_40, arg5);\n    int64_t rbp;\n    int32_t* r14_1;\n    if (rax == 0)\n    {\n        rbp = var_40;\n        if ((rbp < arg3 || (rbp >= arg3 && rbp > arg4)))\n        {\n            int32_t* rax_1 = __errno_location();\n            r14_1 = rax_1;\n            *r14_1 = (((rax_1 - rax_1) & 0xffffffd7) + 0x4b);\n        }\n    }\n    else\n    {\n        int32_t* rax_8 = __errno_location();\n        r14_1 = rax_8;\n        if (rax == 1)\n        {\n            *rax_8 = 0x4b;\n        }\n        else if (rax == 3)\n        {\n            *rax_8 = 0;\n        }\n    }\n    if (((rax == 0 && (rbp < arg3 || (rbp >= arg3 && rbp > arg4))) || rax != 0))\n    {\n        int64_t rax_5 = sub_409760(arg1);\n        uint64_t rsi = *r14_1;\n        if (rsi == 0x16)\n        {\n            rsi = 0;\n        }\n        if (rbx == 0)\n        {\n            rbx = 1;\n        }\n        error(rbx, rsi, \"%s: %s\", arg6, rax_5);\n        rbp = var_40;\n    }\n    return rbp;\n}\n\n"
        },
        {
            "funcName": "sub_40a130",
            "funcStartAddr": "0x40a130",
            "funcEndAddr": "0x40a151",
            "decompiledFuncCode": "int64_t sub_40a130(char* arg1, int64_t arg2, int64_t arg3, char* arg4, \n    int64_t arg5, int32_t arg6)\n{\n    return sub_40a060(arg1, 0xa, arg2, arg3, arg4, arg5, arg6);\n}\n\n"
        },
        {
            "funcName": "sub_40a160",
            "funcStartAddr": "0x40a160",
            "funcEndAddr": "0x40a1b3",
            "decompiledFuncCode": "int64_t sub_40a160()\n{\n    int64_t rax;\n    int64_t rdx;\n    double zmm0;\n    rax = sub_40b950(zmm0);\n    int64_t var_18 = rax;\n    int64_t var_10 = rdx;\n    int32_t* rax_1 = __errno_location();\n    do\n    {\n        *rax_1 = 0;\n        int64_t rax_2 = sub_40b840(&var_18, nullptr);\n        if (rax_2 == 0)\n        {\n            return rax_2;\n        }\n    } while ((*rax_1 & 0xfffffffb) == 0);\n    return 0xffffffff;\n}\n\n"
        },
        {
            "funcName": "sub_40a1c0",
            "funcStartAddr": "0x40a1c0",
            "funcEndAddr": "0x40a25c",
            "decompiledFuncCode": "int64_t sub_40a1c0(int64_t arg1, int64_t* arg2, double* arg3, int64_t arg4, \n    double arg5 @ zmm0)\n{\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char* var_30;\n    arg4(arg1, &var_30);\n    char* rcx = var_30;\n    int64_t rax_1;\n    if (rcx == arg1)\n    {\n        rax_1 = 0;\n    }\n    else if (arg2 == 0)\n    {\n        rax_1 = 0;\n        if (*rcx == 0)\n        {\n            bool z_2 = (arg5 == 0.0 | (FCMP_UO(arg5, 0.0)));\n            if ((FCMP_UO(arg5, 0.0)))\n            {\n                goto label_40a216;\n            }\n            if ((!z_2))\n            {\n                goto label_40a216;\n            }\n            rax_1 = 1;\n        }\n    }\n    else\n    {\n        bool z_1 = (arg5 == 0.0 | (FCMP_UO(arg5, 0.0)));\n        if ((!(FCMP_UO(arg5, 0.0))))\n        {\n            rax_1 = 1;\n            if (z_1)\n            {\n                goto label_40a21e;\n            }\n            goto label_40a216;\n        }\n    label_40a216:\n        rax_1 = *rax != 0x22;\n    }\n    if (((rcx == arg1 || (rcx != arg1 && arg2 != 0)) && arg2 != 0))\n    {\n    label_40a21e:\n        *arg2 = rcx;\n    }\n    *arg3 = arg5;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40a260",
            "funcStartAddr": "0x40a260",
            "funcEndAddr": "0x40a694",
            "decompiledFuncCode": "uint64_t sub_40a260(char* arg1, int64_t* arg2, int32_t arg3, uint64_t* arg4, \n    char* arg5)\n{\n    if (arg3 > 0x24)\n    {\n        __assert_fail(\"0 <= strtol_base && strtol_base \u2026\", \"lib/xstrtol.c\", 0x60, \"xstrtoumax\");\n        /* no return */\n    }\n    int64_t* r15 = arg2;\n    void var_40;\n    if (arg2 == 0)\n    {\n        r15 = &var_40;\n    }\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char rbx = *arg1;\n    uint16_t* rsi = *__ctype_b_loc();\n    char* rax_2 = arg1;\n    while ((*(&rsi[rbx] + 1) & 0x20) != 0)\n    {\n        rax_2 = &rax_2[1];\n        rbx = *rax_2;\n    }\n    int32_t rbp_1;\n    if (rbx == 0x2d)\n    {\n    label_40a32a:\n        rbp_1 = 4;\n    }\n    else\n    {\n        char* r8 = *r15;\n        uint64_t rbx_1 = __strtoul_internal(arg1, r15, arg3, 0);\n        int32_t var_58;\n        void* r8_1;\n        uint32_t r12_1;\n        if (r8 == arg1)\n        {\n            var_58 = r8;\n            if (arg5 == 0)\n            {\n                goto label_40a32a;\n            }\n            r12_1 = *arg1;\n            if (r12_1 == 0)\n            {\n                goto label_40a32a;\n            }\n            rbp_1 = 0;\n            rbx_1 = 1;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) == 0)\n            {\n                goto label_40a32a;\n            }\n        label_40a367:\n            uint64_t rdx_1 = (r12_1 - 0x45);\n            int64_t rdx_3;\n            int32_t rsi_3;\n            if (rdx_1 <= 0x2f)\n            {\n                var_58 = rdx_1;\n                if ((!(TEST_BITQ(0x814400308945, rdx_1))))\n                {\n                    goto label_40a3d0;\n                }\n                if (strchr(arg5, 0x30) == 0)\n                {\n                    goto label_40a3d0;\n                }\n                char rax_8 = *(r8_1 + 1);\n                if (rax_8 == 0x44)\n                {\n                label_40a5f8:\n                    rsi_3 = 2;\n                    rdx_3 = 0x3e8;\n                    goto label_40a3da;\n                }\n                if (rax_8 == 0x69)\n                {\n                    rdx_3 = 0x400;\n                    int32_t rsi_6;\n                    rsi_6 = *(r8_1 + 2) == 0x42;\n                    rsi_3 = ((rsi_6 + rsi_6) + 1);\n                    goto label_40a3da;\n                }\n                uint64_t rdx_2 = var_58;\n                if (rax_8 == 0x42)\n                {\n                    goto label_40a5f8;\n                }\n                int32_t r9_1;\n                switch (rdx_2)\n                {\n                    case 0:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40a57b:\n                        int64_t rcx_6 = rdx_3;\n                        int32_t rdi_8 = 6;\n                        r9_1 = 0;\n                        int32_t temp15_1;\n                        do\n                        {\n                            uint64_t rax_28;\n                            int64_t rdx_11;\n                            rdx_11 = HIGHD((rbx_1 * rcx_6));\n                            rax_28 = LOWD((rbx_1 * rcx_6));\n                            bool o_8 = ((rbx_1 * rcx_6) >> 0x40) != 0;\n                            rbx_1 = rax_28;\n                            if (o_8)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp15_1 = rdi_8;\n                            rdi_8 = (rdi_8 - 1);\n                        } while (temp15_1 != 1);\n                        goto label_40a4d4;\n                    }\n                    case 1:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 7:\n                    case 9:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xe:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1f:\n                    case 0x20:\n                    case 0x21:\n                    case 0x23:\n                    case 0x24:\n                    case 0x25:\n                    case 0x27:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    {\n                        goto label_40a475;\n                    }\n                    case 2:\n                    case 0x22:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40a5b3:\n                        int64_t rcx_7 = rdx_3;\n                        int64_t rax_30;\n                        int64_t rdx_12;\n                        rdx_12 = HIGHD((rbx_1 * rcx_7));\n                        rax_30 = LOWD((rbx_1 * rcx_7));\n                        int64_t rax_31;\n                        if (((rbx_1 * rcx_7) >> 0x40) == 0)\n                        {\n                            int64_t rdx_13;\n                            rdx_13 = HIGHD((rax_30 * rcx_7));\n                            rax_31 = LOWD((rax_30 * rcx_7));\n                            if (((rax_30 * rcx_7) >> 0x40) == 0)\n                            {\n                                uint64_t rax_32;\n                                int64_t rdx_14;\n                                rdx_14 = HIGHD((rax_31 * rcx_7));\n                                rax_32 = LOWD((rax_31 * rcx_7));\n                                if (((rax_31 * rcx_7) >> 0x40) == 0)\n                                {\n                                    rbx_1 = rax_32;\n                                    rbp_1 = (rbp_1 | 0);\n                                }\n                            }\n                        }\n                        if (((((rbx_1 * rcx_7) >> 0x40) != 0 || (((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) != 0)) || ((((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) == 0) && ((rax_31 * rcx_7) >> 0x40) != 0)))\n                        {\n                            rbx_1 = -1;\n                            rbp_1 = (rbp_1 | 1);\n                        }\n                        goto label_40a41d;\n                    }\n                    case 6:\n                    case 0x26:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40a43f:\n                        uint64_t rax_15;\n                        int64_t rdx_6;\n                        rdx_6 = HIGHD((rbx_1 * rdx_3));\n                        rax_15 = LOWD((rbx_1 * rdx_3));\n                        bool o_3 = ((rbx_1 * rdx_3) >> 0x40) != 0;\n                        rbx_1 = rax_15;\n                        if ((!o_3))\n                        {\n                            goto label_40a41d;\n                        }\n                        goto label_40a447;\n                    }\n                    case 8:\n                    case 0x28:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40a3fe:\n                        int64_t rcx_1 = rdx_3;\n                        int64_t rax_10;\n                        int64_t rdx_4;\n                        rdx_4 = HIGHD((rbx_1 * rcx_1));\n                        rax_10 = LOWD((rbx_1 * rcx_1));\n                        if (((rbx_1 * rcx_1) >> 0x40) == 0)\n                        {\n                            uint64_t rax_11;\n                            int64_t rdx_5;\n                            rdx_5 = HIGHD((rax_10 * rcx_1));\n                            rax_11 = LOWD((rax_10 * rcx_1));\n                            if (((rax_10 * rcx_1) >> 0x40) != 0)\n                            {\n                                goto label_40a447;\n                            }\n                            rbx_1 = rax_11;\n                            goto label_40a41d;\n                        }\n                    label_40a447:\n                        rbp_1 = 1;\n                        rbx_1 = -1;\n                        goto label_40a41d;\n                    }\n                    case 0xb:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40a548:\n                        int64_t rcx_5 = rdx_3;\n                        int32_t rdi_7 = 5;\n                        r9_1 = 0;\n                        int32_t temp14_1;\n                        do\n                        {\n                            uint64_t rax_26;\n                            int64_t rdx_10;\n                            rdx_10 = HIGHD((rbx_1 * rcx_5));\n                            rax_26 = LOWD((rbx_1 * rcx_5));\n                            bool o_7 = ((rbx_1 * rcx_5) >> 0x40) != 0;\n                            rbx_1 = rax_26;\n                            if (o_7)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp14_1 = rdi_7;\n                            rdi_7 = (rdi_7 - 1);\n                        } while (temp14_1 != 1);\n                        goto label_40a4d4;\n                    }\n                    case 0xf:\n                    case 0x2f:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40a518:\n                        int64_t rcx_4 = rdx_3;\n                        int32_t rdi_6 = 4;\n                        r9_1 = 0;\n                        int32_t temp13_1;\n                        do\n                        {\n                            uint64_t rax_24;\n                            int64_t rdx_9;\n                            rdx_9 = HIGHD((rbx_1 * rcx_4));\n                            rax_24 = LOWD((rbx_1 * rcx_4));\n                            bool o_6 = ((rbx_1 * rcx_4) >> 0x40) != 0;\n                            rbx_1 = rax_24;\n                            if (o_6)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp13_1 = rdi_6;\n                            rdi_6 = (rdi_6 - 1);\n                        } while (temp13_1 != 1);\n                        goto label_40a4d4;\n                    }\n                    case 0x14:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40a4e6:\n                        int64_t rcx_3 = rdx_3;\n                        int32_t rdi_5 = 8;\n                        r9_1 = 0;\n                        int32_t temp12_1;\n                        do\n                        {\n                            uint64_t rax_22;\n                            int64_t rdx_8;\n                            rdx_8 = HIGHD((rbx_1 * rcx_3));\n                            rax_22 = LOWD((rbx_1 * rcx_3));\n                            bool o_5 = ((rbx_1 * rcx_3) >> 0x40) != 0;\n                            rbx_1 = rax_22;\n                            if (o_5)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp12_1 = rdi_5;\n                            rdi_5 = (rdi_5 - 1);\n                        } while (temp12_1 != 1);\n                        goto label_40a4d4;\n                    }\n                    case 0x15:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40a4ab:\n                        int64_t rcx_2 = rdx_3;\n                        int32_t rdi_4 = 7;\n                        r9_1 = 0;\n                        int32_t temp11_1;\n                        do\n                        {\n                            uint64_t rax_20;\n                            int64_t rdx_7;\n                            rdx_7 = HIGHD((rbx_1 * rcx_2));\n                            rax_20 = LOWD((rbx_1 * rcx_2));\n                            bool o_4 = ((rbx_1 * rcx_2) >> 0x40) != 0;\n                            rbx_1 = rax_20;\n                            if (o_4)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp11_1 = rdi_4;\n                            rdi_4 = (rdi_4 - 1);\n                        } while (temp11_1 != 1);\n                    label_40a4d4:\n                        rbp_1 = (rbp_1 | r9_1);\n                        goto label_40a41d;\n                    }\n                    case 0x1d:\n                    {\n                        rsi_3 = 1;\n                        break;\n                    }\n                    case 0x1e:\n                    {\n                        rsi_3 = 1;\n                        goto label_40a41d;\n                    }\n                }\n            }\n            else\n            {\n            label_40a3d0:\n                rsi_3 = 1;\n                rdx_3 = 0x400;\n            label_40a3da:\n                char r12_2 = (r12_1 - 0x42);\n                if (r12_2 > 0x35)\n                {\n                    goto label_40a475;\n                }\n                switch (r12_2)\n                {\n                    case 0:\n                    {\n                        if ((rbx_1 >> 0x36) != 0)\n                        {\n                            goto label_40a447;\n                        }\n                        rbx_1 = (rbx_1 << 0xa);\n                        goto label_40a41d;\n                    }\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x22:\n                    case 0x23:\n                    case 0x24:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x2a:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x33:\n                    case 0x34:\n                    {\n                        goto label_40a475;\n                    }\n                    case 3:\n                    {\n                        goto label_40a57b;\n                    }\n                    case 5:\n                    case 0x25:\n                    {\n                        goto label_40a5b3;\n                    }\n                    case 9:\n                    case 0x29:\n                    {\n                        goto label_40a43f;\n                    }\n                    case 0xb:\n                    case 0x2b:\n                    {\n                        goto label_40a3fe;\n                    }\n                    case 0xe:\n                    {\n                        goto label_40a548;\n                    }\n                    case 0x12:\n                    case 0x32:\n                    {\n                        goto label_40a518;\n                    }\n                    case 0x17:\n                    {\n                        goto label_40a4e6;\n                    }\n                    case 0x18:\n                    {\n                        goto label_40a4ab;\n                    }\n                    case 0x21:\n                    {\n                        goto label_40a41d;\n                    }\n                    case 0x35:\n                    {\n                        if (rbx_1 < 0)\n                        {\n                            goto label_40a447;\n                        }\n                        rbx_1 = (rbx_1 + rbx_1);\n                    label_40a41d:\n                        void* r8_2 = (r8_1 + rsi_3);\n                        int32_t rax_13 = (rbp_1 | 2);\n                        *r15 = r8_2;\n                        if (*r8_2 != 0)\n                        {\n                            rbp_1 = rax_13;\n                        }\n                        goto label_40a302;\n                    }\n                }\n            }\n            if ((rbx_1 >> 0x37) != 0)\n            {\n                goto label_40a447;\n            }\n            rbx_1 = (rbx_1 << 9);\n            goto label_40a41d;\n        }\n        int32_t rax_4 = *rax;\n        if (rax_4 == 0)\n        {\n            rbp_1 = 0;\n        }\n        else\n        {\n            rbp_1 = 1;\n            if (rax_4 != 0x22)\n            {\n                goto label_40a32a;\n            }\n        }\n        if (arg5 == 0)\n        {\n        label_40a302:\n            *arg4 = rbx_1;\n        }\n        else\n        {\n            r12_1 = *r8;\n            if (r12_1 == 0)\n            {\n                goto label_40a302;\n            }\n            var_58 = r8;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) != 0)\n            {\n                goto label_40a367;\n            }\n        label_40a475:\n            *arg4 = rbx_1;\n            rbp_1 = (rbp_1 | 2);\n        }\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_40a6a0",
            "funcStartAddr": "0x40a6a0",
            "funcEndAddr": "0x40a7d5",
            "decompiledFuncCode": "uint64_t sub_40a6a0(int32_t arg1, int32_t arg2, int32_t arg3)\n{\n    void* var_58 = &arg_8;\n    int64_t rcx;\n    int64_t var_30 = rcx;\n    int32_t var_60 = 0x10;\n    void var_48;\n    void* var_50 = &var_48;\n    if (arg2 != 0x406)\n    {\n        return fcntl();\n    }\n    int32_t var_60_1 = 0x18;\n    int32_t rax_2;\n    int32_t rax_5;\n    int32_t* rax_15;\n    int32_t rax_17;\n    int32_t rbx;\n    if (data_6124f8 < 0)\n    {\n        rax_5 = sub_40a6a0();\n        rbx = rax_5;\n    }\n    else\n    {\n        rax_2 = fcntl();\n        rbx = rax_2;\n        if (rax_2 < 0)\n        {\n            rax_15 = __errno_location();\n            if (*rax_15 == 0x16)\n            {\n                rax_17 = sub_40a6a0(arg1, 0, arg3);\n                rbx = rax_17;\n                if (rax_17 >= 0)\n                {\n                    data_6124f8 = 0xffffffff;\n                }\n            }\n        }\n    }\n    if (((((data_6124f8 >= 0 && rax_2 < 0) && *rax_15 == 0x16) && rax_17 >= 0) || (rax_5 >= 0 && data_6124f8 == 0xffffffff)))\n    {\n        int32_t rax_7 = fcntl(rbx, 1);\n        int32_t rax_10;\n        if (rax_7 >= 0)\n        {\n            rax_10 = fcntl(rbx, 2, (rax_7 | 1));\n        }\n        if ((rax_7 < 0 || (rax_7 >= 0 && rax_10 == 0xffffffff)))\n        {\n            int32_t* rax_11 = __errno_location();\n            int32_t rdi_2 = rbx;\n            rbx = -1;\n            int32_t r12_1 = *rax_11;\n            close(rdi_2);\n            *rax_11 = r12_1;\n        }\n    }\n    if ((data_6124f8 >= 0 && (rax_2 >= 0 || (rax_2 < 0 && *rax_15 != 0x16))))\n    {\n        data_6124f8 = 1;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40a7e0",
            "funcStartAddr": "0x40a7e0",
            "funcEndAddr": "0x40a8bf",
            "decompiledFuncCode": "uint64_t sub_40a7e0(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_40a8c0",
            "funcStartAddr": "0x40a8c0",
            "funcEndAddr": "0x40aedc",
            "decompiledFuncCode": "uint64_t sub_40a8c0(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_40aaf0;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_40aa16;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_40aa16;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_40aa16:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_40aaf0:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_40ab1e;\n                }\n                *arg5 = r12;\n            label_40ab1e:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_40ab3c;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_40ab3c:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_40ab3c;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_40aaae;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_40aaae:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_40aee0",
            "funcStartAddr": "0x40aee0",
            "funcEndAddr": "0x40b4a6",
            "decompiledFuncCode": "uint64_t sub_40aee0(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_40b11c;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_40afa8;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_40afa8:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_40a7e0(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_40c389;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_40a7e0(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_40b11c;\n                }\n                *arg7 = rdx_2;\n            label_40b11c:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_40b220;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_40c389;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_40b290;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_40b220;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_40b220;\n                            }\n                            goto label_40b1e1;\n                        }\n                    label_40b1e1:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_40a8c0(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_40c38a);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_40b220:\n                            rdx = &r14_1[1];\n                        label_40b061:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_40b25e;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_40b25e:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_40ee9d;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_40b290:\n                                        r14_2 = sub_40a8c0(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_40b34d;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_40b34d:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_40b11c;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_40afa8;\n        }\n        goto label_40b061;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_40b510",
            "funcStartAddr": "0x40b510",
            "funcEndAddr": "0x40b528",
            "decompiledFuncCode": "uint64_t sub_40b510(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_40b5b0",
            "funcStartAddr": "0x40b5b0",
            "funcEndAddr": "0x40b6a1",
            "decompiledFuncCode": "uint64_t sub_40b5b0(int32_t arg1)\n{\n    void var_138;\n    int32_t rax = __fxstat(1, arg1, &var_138);\n    int32_t rbx = rax;\n    if (rax == 0)\n    {\n        int32_t var_120;\n        int32_t rax_2 = (var_120 & 0xf000);\n        rbx = rax_2 == 0x1000;\n        rax_2 = rax_2 == 0xc000;\n        rbx = (rbx | rax_2);\n        int64_t var_128;\n        int64_t var_98;\n        int32_t var_90;\n        int32_t rax_4;\n        if (rbx != 0)\n        {\n            int32_t var_140;\n            rax_4 = pipe(&var_140);\n            rbx = rax_4;\n            if (rax_4 == 0)\n            {\n                void var_a8;\n                rbx = __fxstat(1, var_140, &var_a8);\n                int32_t* rax_6 = __errno_location();\n                int32_t r12_1 = *rax_6;\n                close(var_140);\n                int32_t var_13c;\n                close(var_13c);\n                if (rbx != 0)\n                {\n                    *rax_6 = r12_1;\n                }\n                else if (var_128 <= var_98)\n                {\n                    int32_t rdx_3 = (var_120 & 0xf000);\n                    rbx = rdx_3 == 0x1000;\n                    if ((var_90 & 0xf000) != 0x1000)\n                    {\n                        rbx = rdx_3 == 0xc000;\n                    }\n                }\n            }\n        }\n        if ((((((rbx != 0 && rax_4 == 0) && rbx == 0) && var_128 <= var_98) && (var_90 & 0xf000) != 0x1000) || rbx == 0))\n        {\n            rbx = rbx;\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40b6b0",
            "funcStartAddr": "0x40b6b0",
            "funcEndAddr": "0x40b72a",
            "decompiledFuncCode": "uint64_t sub_40b6b0(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_40ee81[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_40b6da;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_40b6da:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_40ba10() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_40b730",
            "funcStartAddr": "0x40b730",
            "funcEndAddr": "0x40b834",
            "decompiledFuncCode": "char* sub_40b730(char* arg1, int32_t arg2, int64_t arg3)\n{\n    char r8 = arg2;\n    if (arg3 != 0)\n    {\n        if ((arg1 & 7) != 0)\n        {\n            if (arg2 == *arg1)\n            {\n            label_40b830:\n                return arg1;\n            }\n            do\n            {\n                arg1 = &arg1[1];\n                int64_t temp0_1 = arg3;\n                arg3 = (arg3 - 1);\n                if (temp0_1 == 1)\n                {\n                    return 0;\n                }\n                if ((arg1 & 7) == 0)\n                {\n                    break;\n                }\n            } while (*arg1 != r8);\n            if ((arg1 & 7) != 0)\n            {\n                goto label_40b830;\n            }\n        }\n        int64_t r9_5 = ((arg2 << 8) | arg2);\n        int64_t r9_6 = (r9_5 | (r9_5 << 0x10));\n        int64_t r9_7 = (r9_6 | (r9_6 << 0x20));\n        int64_t rax_8;\n        if (arg3 > 7)\n        {\n            rax_8 = (*arg1 ^ r9_7);\n            if ((((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0)\n            {\n                int64_t rax_12;\n                do\n                {\n                    arg3 = (arg3 - 8);\n                    arg1 = &arg1[8];\n                    if (arg3 <= 7)\n                    {\n                        break;\n                    }\n                    rax_12 = (*arg1 ^ r9_7);\n                } while ((((!rax_12) & (rax_12 - 0x101010101010101)) & 0x8080808080808080) == 0);\n            }\n        }\n        if ((((arg3 <= 7 || (arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) != 0)) || (((arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0) && arg3 <= 7) && arg3 != 0)) || ((arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0) && arg3 > 7)))\n        {\n            if (arg2 == *arg1)\n            {\n                goto label_40b830;\n            }\n            char* rcx_3 = &arg1[1];\n            void* rdi = &arg1[arg3];\n            while (true)\n            {\n                char* rax_15 = rcx_3;\n                if (rcx_3 == rdi)\n                {\n                    return 0;\n                }\n                rcx_3 = &rcx_3[1];\n                if (rcx_3[-1] == r8)\n                {\n                    return rax_15;\n                }\n            }\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_40b840",
            "funcStartAddr": "0x40b840",
            "funcEndAddr": "0x40b8e2",
            "decompiledFuncCode": "int64_t sub_40b840(int64_t* arg1, struct timespec* arg2)\n{\n    int64_t rax = arg1[1];\n    int64_t rax_1;\n    if (rax > 0x3b9ac9ff)\n    {\n        *__errno_location() = 0x16;\n        rax_1 = 0xffffffff;\n    }\n    else\n    {\n        int64_t rbx_1 = *arg1;\n        int64_t var_20_1 = rax;\n        int64_t var_28;\n        if (rbx_1 > 0x1fa400)\n        {\n            do\n            {\n                var_28 = 0x1fa400;\n                rbx_1 = (rbx_1 - 0x1fa400);\n                rax_1 = nanosleep(&var_28, arg2);\n                if (rax_1 != 0)\n                {\n                    break;\n                }\n                int64_t var_20_2 = 0;\n            } while (rbx_1 > 0x1fa400);\n        }\n        if ((rbx_1 <= 0x1fa400 || (rbx_1 > 0x1fa400 && rax_1 == 0)))\n        {\n            var_28 = rbx_1;\n            rax_1 = nanosleep(&var_28, arg2);\n        }\n        if (((rbx_1 > 0x1fa400 && rax_1 != 0) && arg2 != 0))\n        {\n            arg2->tv_sec = (arg2->tv_sec + rbx_1);\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40b8f0",
            "funcStartAddr": "0x40b8f0",
            "funcEndAddr": "0x40b94d",
            "decompiledFuncCode": "uint64_t sub_40b8f0(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_40bff0(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40b950",
            "funcStartAddr": "0x40b950",
            "funcEndAddr": "0x40ba0c",
            "decompiledFuncCode": "int64_t sub_40b950(double arg1 @ zmm0)\n{\n    if (((arg1 == -9.2233720368547758e+18 | (FCMP_UO(arg1, -9.2233720368547758e+18))) || (arg1 < -9.2233720368547758e+18 | (FCMP_UO(arg1, -9.2233720368547758e+18)))))\n    {\n        return -0x8000000000000000;\n    }\n    double zmm1 = 9.2233720368547758e+18;\n    if ((!((!(zmm1 == arg1 | (FCMP_UO(zmm1, arg1)))) && (!(zmm1 < arg1 | (FCMP_UO(zmm1, arg1)))))))\n    {\n        return 0x7fffffffffffffff;\n    }\n    int64_t rsi = (truncf(arg1, -0x8000000000000000));\n    arg1 = (arg1 - rsi);\n    arg1 = (arg1 * 1000000000.0);\n    int64_t rdx_1 = (truncf(arg1, -0x8000000000000000));\n    zmm1 = rdx_1;\n    int64_t rcx;\n    rcx = ((!(arg1 == zmm1 | (FCMP_UO(arg1, zmm1)))) && (!(arg1 < zmm1 | (FCMP_UO(arg1, zmm1)))));\n    int64_t rcx_1 = (rcx + rdx_1);\n    int64_t rax_2;\n    int64_t rdx_2;\n    rdx_2 = HIGHD((rcx_1 * 0x112e0be826d694b3));\n    rax_2 = LOWD((rcx_1 * 0x112e0be826d694b3));\n    int64_t rdx_4 = ((rdx_2 >> 0x1a) - (rcx_1 >> 0x3f));\n    int64_t rax_5 = (rdx_4 + rsi);\n    if ((rcx_1 - (rdx_4 * 0x3b9aca00)) < 0)\n    {\n        return (rax_5 - 1);\n    }\n    return rax_5;\n}\n\n"
        },
        {
            "funcName": "sub_40ba10",
            "funcStartAddr": "0x40ba10",
            "funcEndAddr": "0x40ba6e",
            "decompiledFuncCode": "int64_t sub_40ba10()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_40d7ff;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            char const* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char const temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = &rdi_2[1];\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_40ba70",
            "funcStartAddr": "0x40ba70",
            "funcEndAddr": "0x40bfd2",
            "decompiledFuncCode": "char* sub_40ba70()\n{\n    char* rax = nl_langinfo(0xe);\n    int64_t r15 = data_612538;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_40ee81[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        size_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            size_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_40bb6c;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_40bbb6;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_40bb6c:\n            r15 = 0x40ee9c;\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_40bbb6:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = 0;\n                rax_12 = fdopen(rax_11, \"r\");\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_40bc6c:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_40bdfb;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_40bca8:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_40bca8;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_40bce2:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_40bce2;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                int64_t rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    int64_t rdi_26 = r15;\n                                    r15 = 0x40ee9c;\n                                    free(rdi_26);\n                                    sub_40bff0(rax_12);\n                                    goto label_40bbf7;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                char* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = (&rsi_13[8] & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_40bebb:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_40bebb;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_40bf09:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_40bf09;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_40bc6c;\n                        }\n                        break;\n                    }\n                label_40bdfb:\n                    sub_40bff0(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = 0x40ee9c;\n            }\n        label_40bbf7:\n            free(rbp_3);\n        }\n        data_612538 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && *(r15 + 1) != 0))))\n            {\n                char* rbp_1 = ((r15 + strlen(r15)) + 1);\n                r15 = &rbp_1[(strlen(rbp_1) + 1)];\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = ((r15 + strlen(r15)) + 1);\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40bfe0",
            "funcStartAddr": "0x40bfe0",
            "funcEndAddr": "0x40bfee",
            "decompiledFuncCode": "int64_t sub_40bfe0(int32_t arg1)\n{\n    /* tailcall */\n    return sub_40a6a0(arg1, 0, 3);\n}\n\n"
        },
        {
            "funcName": "sub_40bff0",
            "funcStartAddr": "0x40bff0",
            "funcEndAddr": "0x40c06b",
            "decompiledFuncCode": "int64_t sub_40bff0(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_40c070(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_40c070",
            "funcStartAddr": "0x40c070",
            "funcEndAddr": "0x40c0b0",
            "decompiledFuncCode": "int64_t sub_40c070(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_40c0b0(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_40c0b0",
            "funcStartAddr": "0x40c0b0",
            "funcEndAddr": "0x40c107",
            "decompiledFuncCode": "off64_t sub_40c0b0(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x40c110",
            "funcEndAddr": "0x40c16d",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x40c170",
            "funcEndAddr": "0x40c171",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_40c180",
            "funcStartAddr": "0x40c180",
            "funcEndAddr": "0x40c198",
            "decompiledFuncCode": "int64_t sub_40c180(void (* arg1)(void*))\n{\n    int64_t rdx = data_612288;\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, rdx);\n}\n\n"
        },
        {
            "funcName": "sub_40c198",
            "funcStartAddr": "0x40c198",
            "funcEndAddr": "0x40c1b8",
            "decompiledFuncCode": "int64_t sub_40c198(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_611e30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}