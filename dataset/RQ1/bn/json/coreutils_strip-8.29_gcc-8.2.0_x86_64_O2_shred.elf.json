{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_shred.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 189,
    "funcInfo": [
        {
            "funcName": "sub_401b30",
            "funcStartAddr": "0x401b30",
            "funcEndAddr": "0x401b3c",
            "decompiledFuncCode": "int64_t sub_401b30()\n{\n    int64_t var_8 = data_60f008;\n    /* jump -> data_60f010 */\n}\n\n"
        },
        {
            "funcName": "sub_401b46",
            "funcStartAddr": "0x401b46",
            "funcEndAddr": "0x401b50",
            "decompiledFuncCode": "int64_t sub_401b46()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401b56",
            "funcStartAddr": "0x401b56",
            "funcEndAddr": "0x401b60",
            "decompiledFuncCode": "int64_t sub_401b56()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401b66",
            "funcStartAddr": "0x401b66",
            "funcEndAddr": "0x401b70",
            "decompiledFuncCode": "int64_t sub_401b66()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401b76",
            "funcStartAddr": "0x401b76",
            "funcEndAddr": "0x401b80",
            "decompiledFuncCode": "int64_t sub_401b76()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401b86",
            "funcStartAddr": "0x401b86",
            "funcEndAddr": "0x401b90",
            "decompiledFuncCode": "int64_t sub_401b86()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401b96",
            "funcStartAddr": "0x401b96",
            "funcEndAddr": "0x401ba0",
            "decompiledFuncCode": "int64_t sub_401b96()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401ba6",
            "funcStartAddr": "0x401ba6",
            "funcEndAddr": "0x401bb0",
            "decompiledFuncCode": "int64_t sub_401ba6()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401bb6",
            "funcStartAddr": "0x401bb6",
            "funcEndAddr": "0x401bc0",
            "decompiledFuncCode": "int64_t sub_401bb6()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401bc6",
            "funcStartAddr": "0x401bc6",
            "funcEndAddr": "0x401bd0",
            "decompiledFuncCode": "int64_t sub_401bc6()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401bd6",
            "funcStartAddr": "0x401bd6",
            "funcEndAddr": "0x401be0",
            "decompiledFuncCode": "int64_t sub_401bd6()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401be6",
            "funcStartAddr": "0x401be6",
            "funcEndAddr": "0x401bf0",
            "decompiledFuncCode": "int64_t sub_401be6()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401bf6",
            "funcStartAddr": "0x401bf6",
            "funcEndAddr": "0x401c00",
            "decompiledFuncCode": "int64_t sub_401bf6()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401c06",
            "funcStartAddr": "0x401c06",
            "funcEndAddr": "0x401c10",
            "decompiledFuncCode": "int64_t sub_401c06()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401c16",
            "funcStartAddr": "0x401c16",
            "funcEndAddr": "0x401c20",
            "decompiledFuncCode": "int64_t sub_401c16()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401c26",
            "funcStartAddr": "0x401c26",
            "funcEndAddr": "0x401c30",
            "decompiledFuncCode": "int64_t sub_401c26()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401c36",
            "funcStartAddr": "0x401c36",
            "funcEndAddr": "0x401c40",
            "decompiledFuncCode": "int64_t sub_401c36()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401c46",
            "funcStartAddr": "0x401c46",
            "funcEndAddr": "0x401c50",
            "decompiledFuncCode": "int64_t sub_401c46()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401c56",
            "funcStartAddr": "0x401c56",
            "funcEndAddr": "0x401c60",
            "decompiledFuncCode": "int64_t sub_401c56()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401c66",
            "funcStartAddr": "0x401c66",
            "funcEndAddr": "0x401c70",
            "decompiledFuncCode": "int64_t sub_401c66()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401c76",
            "funcStartAddr": "0x401c76",
            "funcEndAddr": "0x401c80",
            "decompiledFuncCode": "int64_t sub_401c76()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401c86",
            "funcStartAddr": "0x401c86",
            "funcEndAddr": "0x401c90",
            "decompiledFuncCode": "int64_t sub_401c86()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401c96",
            "funcStartAddr": "0x401c96",
            "funcEndAddr": "0x401ca0",
            "decompiledFuncCode": "int64_t sub_401c96()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401ca6",
            "funcStartAddr": "0x401ca6",
            "funcEndAddr": "0x401cb0",
            "decompiledFuncCode": "int64_t sub_401ca6()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401cb6",
            "funcStartAddr": "0x401cb6",
            "funcEndAddr": "0x401cc0",
            "decompiledFuncCode": "int64_t sub_401cb6()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401cc6",
            "funcStartAddr": "0x401cc6",
            "funcEndAddr": "0x401cd0",
            "decompiledFuncCode": "int64_t sub_401cc6()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401cd6",
            "funcStartAddr": "0x401cd6",
            "funcEndAddr": "0x401ce0",
            "decompiledFuncCode": "int64_t sub_401cd6()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401ce6",
            "funcStartAddr": "0x401ce6",
            "funcEndAddr": "0x401cf0",
            "decompiledFuncCode": "int64_t sub_401ce6()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401cf6",
            "funcStartAddr": "0x401cf6",
            "funcEndAddr": "0x401d00",
            "decompiledFuncCode": "int64_t sub_401cf6()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401d06",
            "funcStartAddr": "0x401d06",
            "funcEndAddr": "0x401d10",
            "decompiledFuncCode": "int64_t sub_401d06()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401d16",
            "funcStartAddr": "0x401d16",
            "funcEndAddr": "0x401d20",
            "decompiledFuncCode": "int64_t sub_401d16()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401d26",
            "funcStartAddr": "0x401d26",
            "funcEndAddr": "0x401d30",
            "decompiledFuncCode": "int64_t sub_401d26()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401d36",
            "funcStartAddr": "0x401d36",
            "funcEndAddr": "0x401d40",
            "decompiledFuncCode": "int64_t sub_401d36()\n{\n    int64_t var_8 = 0x1f;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401d46",
            "funcStartAddr": "0x401d46",
            "funcEndAddr": "0x401d50",
            "decompiledFuncCode": "int64_t sub_401d46()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401d56",
            "funcStartAddr": "0x401d56",
            "funcEndAddr": "0x401d60",
            "decompiledFuncCode": "int64_t sub_401d56()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401d66",
            "funcStartAddr": "0x401d66",
            "funcEndAddr": "0x401d70",
            "decompiledFuncCode": "int64_t sub_401d66()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401d76",
            "funcStartAddr": "0x401d76",
            "funcEndAddr": "0x401d80",
            "decompiledFuncCode": "int64_t sub_401d76()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401d86",
            "funcStartAddr": "0x401d86",
            "funcEndAddr": "0x401d90",
            "decompiledFuncCode": "int64_t sub_401d86()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401d96",
            "funcStartAddr": "0x401d96",
            "funcEndAddr": "0x401da0",
            "decompiledFuncCode": "int64_t sub_401d96()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401da6",
            "funcStartAddr": "0x401da6",
            "funcEndAddr": "0x401db0",
            "decompiledFuncCode": "int64_t sub_401da6()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401db6",
            "funcStartAddr": "0x401db6",
            "funcEndAddr": "0x401dc0",
            "decompiledFuncCode": "int64_t sub_401db6()\n{\n    int64_t var_8 = 0x27;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401dc6",
            "funcStartAddr": "0x401dc6",
            "funcEndAddr": "0x401dd0",
            "decompiledFuncCode": "int64_t sub_401dc6()\n{\n    int64_t var_8 = 0x28;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401dd6",
            "funcStartAddr": "0x401dd6",
            "funcEndAddr": "0x401de0",
            "decompiledFuncCode": "int64_t sub_401dd6()\n{\n    int64_t var_8 = 0x29;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401de6",
            "funcStartAddr": "0x401de6",
            "funcEndAddr": "0x401df0",
            "decompiledFuncCode": "int64_t sub_401de6()\n{\n    int64_t var_8 = 0x2a;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401df6",
            "funcStartAddr": "0x401df6",
            "funcEndAddr": "0x401e00",
            "decompiledFuncCode": "int64_t sub_401df6()\n{\n    int64_t var_8 = 0x2b;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401e06",
            "funcStartAddr": "0x401e06",
            "funcEndAddr": "0x401e10",
            "decompiledFuncCode": "int64_t sub_401e06()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401e16",
            "funcStartAddr": "0x401e16",
            "funcEndAddr": "0x401e20",
            "decompiledFuncCode": "int64_t sub_401e16()\n{\n    int64_t var_8 = 0x2d;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401e26",
            "funcStartAddr": "0x401e26",
            "funcEndAddr": "0x401e30",
            "decompiledFuncCode": "int64_t sub_401e26()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401e36",
            "funcStartAddr": "0x401e36",
            "funcEndAddr": "0x401e40",
            "decompiledFuncCode": "int64_t sub_401e36()\n{\n    int64_t var_8 = 0x2f;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401e46",
            "funcStartAddr": "0x401e46",
            "funcEndAddr": "0x401e50",
            "decompiledFuncCode": "int64_t sub_401e46()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401e56",
            "funcStartAddr": "0x401e56",
            "funcEndAddr": "0x401e60",
            "decompiledFuncCode": "int64_t sub_401e56()\n{\n    int64_t var_8 = 0x31;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401e66",
            "funcStartAddr": "0x401e66",
            "funcEndAddr": "0x401e70",
            "decompiledFuncCode": "int64_t sub_401e66()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401e76",
            "funcStartAddr": "0x401e76",
            "funcEndAddr": "0x401e80",
            "decompiledFuncCode": "int64_t sub_401e76()\n{\n    int64_t var_8 = 0x33;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401e86",
            "funcStartAddr": "0x401e86",
            "funcEndAddr": "0x401e90",
            "decompiledFuncCode": "int64_t sub_401e86()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401e96",
            "funcStartAddr": "0x401e96",
            "funcEndAddr": "0x401ea0",
            "decompiledFuncCode": "int64_t sub_401e96()\n{\n    int64_t var_8 = 0x35;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401ea6",
            "funcStartAddr": "0x401ea6",
            "funcEndAddr": "0x401eb0",
            "decompiledFuncCode": "int64_t sub_401ea6()\n{\n    int64_t var_8 = 0x36;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401eb6",
            "funcStartAddr": "0x401eb6",
            "funcEndAddr": "0x401ec0",
            "decompiledFuncCode": "int64_t sub_401eb6()\n{\n    int64_t var_8 = 0x37;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401ec6",
            "funcStartAddr": "0x401ec6",
            "funcEndAddr": "0x401ed0",
            "decompiledFuncCode": "int64_t sub_401ec6()\n{\n    int64_t var_8 = 0x38;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401ed6",
            "funcStartAddr": "0x401ed6",
            "funcEndAddr": "0x401ee0",
            "decompiledFuncCode": "int64_t sub_401ed6()\n{\n    int64_t var_8 = 0x39;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401ee6",
            "funcStartAddr": "0x401ee6",
            "funcEndAddr": "0x401ef0",
            "decompiledFuncCode": "int64_t sub_401ee6()\n{\n    int64_t var_8 = 0x3a;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401ef6",
            "funcStartAddr": "0x401ef6",
            "funcEndAddr": "0x401f00",
            "decompiledFuncCode": "int64_t sub_401ef6()\n{\n    int64_t var_8 = 0x3b;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401f06",
            "funcStartAddr": "0x401f06",
            "funcEndAddr": "0x401f10",
            "decompiledFuncCode": "int64_t sub_401f06()\n{\n    int64_t var_8 = 0x3c;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401f16",
            "funcStartAddr": "0x401f16",
            "funcEndAddr": "0x401f20",
            "decompiledFuncCode": "int64_t sub_401f16()\n{\n    int64_t var_8 = 0x3d;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401f26",
            "funcStartAddr": "0x401f26",
            "funcEndAddr": "0x401f30",
            "decompiledFuncCode": "int64_t sub_401f26()\n{\n    int64_t var_8 = 0x3e;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401f36",
            "funcStartAddr": "0x401f36",
            "funcEndAddr": "0x401f40",
            "decompiledFuncCode": "int64_t sub_401f36()\n{\n    int64_t var_8 = 0x3f;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401f46",
            "funcStartAddr": "0x401f46",
            "funcEndAddr": "0x401f50",
            "decompiledFuncCode": "int64_t sub_401f46()\n{\n    int64_t var_8 = 0x40;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401f56",
            "funcStartAddr": "0x401f56",
            "funcEndAddr": "0x401f60",
            "decompiledFuncCode": "int64_t sub_401f56()\n{\n    int64_t var_8 = 0x41;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401f66",
            "funcStartAddr": "0x401f66",
            "funcEndAddr": "0x401f70",
            "decompiledFuncCode": "int64_t sub_401f66()\n{\n    int64_t var_8 = 0x42;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401f76",
            "funcStartAddr": "0x401f76",
            "funcEndAddr": "0x401f80",
            "decompiledFuncCode": "int64_t sub_401f76()\n{\n    int64_t var_8 = 0x43;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401f86",
            "funcStartAddr": "0x401f86",
            "funcEndAddr": "0x401f90",
            "decompiledFuncCode": "int64_t sub_401f86()\n{\n    int64_t var_8 = 0x44;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401f96",
            "funcStartAddr": "0x401f96",
            "funcEndAddr": "0x401fa0",
            "decompiledFuncCode": "int64_t sub_401f96()\n{\n    int64_t var_8 = 0x45;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401fa6",
            "funcStartAddr": "0x401fa6",
            "funcEndAddr": "0x401fb0",
            "decompiledFuncCode": "int64_t sub_401fa6()\n{\n    int64_t var_8 = 0x46;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401fb6",
            "funcStartAddr": "0x401fb6",
            "funcEndAddr": "0x401fc0",
            "decompiledFuncCode": "int64_t sub_401fb6()\n{\n    int64_t var_8 = 0x47;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401fc6",
            "funcStartAddr": "0x401fc6",
            "funcEndAddr": "0x401fd0",
            "decompiledFuncCode": "int64_t sub_401fc6()\n{\n    int64_t var_8 = 0x48;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401fd6",
            "funcStartAddr": "0x401fd6",
            "funcEndAddr": "0x401fe0",
            "decompiledFuncCode": "int64_t sub_401fd6()\n{\n    int64_t var_8 = 0x49;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "sub_401fe6",
            "funcStartAddr": "0x401fe6",
            "funcEndAddr": "0x401ff0",
            "decompiledFuncCode": "int64_t sub_401fe6()\n{\n    int64_t var_8 = 0x4a;\n    /* tailcall */\n    return sub_401b30();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x4020a0",
            "funcEndAddr": "0x402920",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    int128_t zmm0 = 0;\n    char* r12 = nullptr;\n    int128_t var_58 = zmm0;\n    int104_t var_48 = zmm0;\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rcx = sub_4051c0(*argv);\n    void var_a8;\n    int32_t var_a0;\n    setlocale(6, &data_40ccb4[0x1b], rdx, rcx, r8, r9, var_a8, var_a0);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    sub_40a210(sub_4042c0);\n    *var_58[8] = 3;\n    var_48 = -1;\n    while (true)\n    {\n        int32_t rax_1 = getopt_long(argc, argv, \"fn:s:uvxz\", &data_40b420, nullptr);\n        if (rax_1 == 0xffffffff)\n        {\n            int64_t r14_1 = data_60f35c;\n            int32_t rbp_1 = (argc - r14_1);\n            if (argc == r14_1)\n            {\n                error(0, 0, dcgettext(nullptr, \"missing file operand\", 5));\n                break;\n            }\n            FILE*** rax_11 = sub_406e30(r12, -1);\n            data_60f398 = rax_11;\n            if (rax_11 != 0)\n            {\n                int32_t rdi_7 = sub_40a210(sub_402a00);\n                char var_a1;\n                if (rbp_1 <= 0)\n                {\n                    var_a1 = 1;\n                }\n                else\n                {\n                    void* r15_1 = &argv[r14_1];\n                    var_a1 = 1;\n                    void* rax_14 = &argv[(((rbp_1 - 1) + r14_1) + 1)];\n                    do\n                    {\n                        bool c_1 = false;\n                        bool z_1 = (rdi_7 ^ rdi_7) == 0;\n                        char* rax_18;\n                        int32_t rdx_4;\n                        rax_18 = sub_408470(sub_406c60(0, 3, *r15_1));\n                        char* r12_1 = *r15_1;\n                        int64_t rcx_3 = 2;\n                        void* const rdi_10 = &data_40ccb2;\n                        char* rbp_2 = rax_18;\n                        int64_t rbx_1 = data_60f398;\n                        char* rsi_4 = r12_1;\n                        while (rcx_3 != 0)\n                        {\n                            char temp3_1 = *rsi_4;\n                            char temp4_1 = *rdi_10;\n                            c_1 = temp3_1 < temp4_1;\n                            z_1 = temp3_1 == temp4_1;\n                            rsi_4 = &rsi_4[1];\n                            rdi_10 = (rdi_10 + 1);\n                            rcx_3 = (rcx_3 - 1);\n                            if ((!z_1))\n                            {\n                                break;\n                            }\n                        }\n                        rax_18 = ((!z_1) && (!c_1));\n                        rax_18 = (rax_18 - 0);\n                        if (rax_18 == 0)\n                        {\n                            int32_t rax_15 = sub_408a90(1, 3, rdx_4);\n                            char rax_16;\n                            if (rax_15 < 0)\n                            {\n                                error(0, *__errno_location(), dcgettext(nullptr, \"%s: fcntl failed\", 5), rbp_2);\n                                rax_16 = 0;\n                            }\n                            else if ((*rax_15[1] & 4) != 0)\n                            {\n                                error(0, 0, dcgettext(nullptr, \"%s: cannot shred append-only fil\u2026\", 5), rbp_2);\n                                rax_16 = 0;\n                            }\n                            else\n                            {\n                                rax_16 = sub_4033d0(1, rbp_2, rbx_1, &var_58);\n                            }\n                            var_a1 = (var_a1 & rax_16);\n                        }\n                        else\n                        {\n                            int32_t rax_20 = sub_4044d0(r12_1, 0x101, rdx_4);\n                            int32_t r14_2 = rax_20;\n                            int32_t* rax_23;\n                            char r13_3;\n                            if (rax_20 < 0)\n                            {\n                                rax_23 = __errno_location();\n                                if (*rax_23 != 0xd)\n                                {\n                                label_402496:\n                                    r13_3 = 0;\n                                    error(0, *rax_23, dcgettext(nullptr, \"%s: failed to open for writing\", 5), rbp_2);\n                                }\n                                else\n                                {\n                                    if (var_58 == 0)\n                                    {\n                                        goto label_402496;\n                                    }\n                                    int32_t rax_37;\n                                    int32_t rdx_10;\n                                    rax_37 = chmod(r12_1, 0x80);\n                                    if (rax_37 != 0)\n                                    {\n                                        goto label_402496;\n                                    }\n                                    int32_t rax_38 = sub_4044d0(r12_1, 0x101, rdx_10);\n                                    r14_2 = rax_38;\n                                    if (rax_38 < 0)\n                                    {\n                                        goto label_402496;\n                                    }\n                                }\n                            }\n                            if ((rax_20 >= 0 || (rax_20 < 0 && *rax_23 == 0xd)))\n                            {\n                                r13_3 = sub_4033d0(r14_2, rbp_2, rbx_1, &var_58);\n                                if (close(r14_2) != 0)\n                                {\n                                    r13_3 = 0;\n                                    error(0, *__errno_location(), dcgettext(nullptr, \"%s: failed to close\", 5), rbp_2);\n                                }\n                                else if ((r13_3 != 0 && *var_48[8] != 0))\n                                {\n                                    char* rax_39 = sub_408470(r12_1);\n                                    char* rax_40 = sub_404440(rax_39);\n                                    char* rax_41 = sub_404360(rax_39);\n                                    int64_t rax_43;\n                                    int32_t rdx_12;\n                                    rax_43 = sub_408470(sub_406c60(0, 3, rax_41));\n                                    int32_t var_98_1 = rax_1;\n                                    if (*var_48[8] == 3)\n                                    {\n                                        var_98_1 = sub_4044d0(rax_41, 0x10900, rdx_12);\n                                    }\n                                    if (*var_48[0xc] != 0)\n                                    {\n                                        error(0, 0, dcgettext(nullptr, \"%s: removing\", 5), rbp_2);\n                                    }\n                                    if (*var_48[8] != 1)\n                                    {\n                                        char var_88_1 = r13_3;\n                                        int64_t r14_4 = (sub_4044a0(rax_40) - 1);\n                                        int64_t rax_48 = ((rax_40 - rax_39) + r12_1);\n                                        while (true)\n                                        {\n                                            uint64_t rdx_14 = (r14_4 + 1);\n                                            if (r14_4 == -1)\n                                            {\n                                                break;\n                                            }\n                                            memset(rax_40, 0x30, rdx_14);\n                                            rax_40[(r14_4 + 1)] = 0;\n                                            while (true)\n                                            {\n                                                if (sub_407a00(0xffffff9c, r12_1, 0xffffff9c, rax_39, 1) == 0)\n                                                {\n                                                    if ((var_98_1 >= 0 && sub_402a60(var_98_1, rax_43) != 0))\n                                                    {\n                                                        r13_3 = 0;\n                                                    }\n                                                    if (*var_48[0xc] != 0)\n                                                    {\n                                                        char* rcx_12 = rbp_2;\n                                                        if (var_88_1 == 0)\n                                                        {\n                                                            rcx_12 = r12_1;\n                                                        }\n                                                        var_88_1 = rcx_12;\n                                                        error(0, 0, dcgettext(nullptr, \"%s: renamed to %s\", 5), var_88_1, rax_39);\n                                                        var_88_1 = 0;\n                                                    }\n                                                    memcpy(rax_48, rax_40, (r14_4 + 2));\n                                                    break;\n                                                }\n                                                if (*__errno_location() != 0x11)\n                                                {\n                                                    break;\n                                                }\n                                                void* rbp_3 = &rax_40[r14_4];\n                                                char rax_53;\n                                                while (true)\n                                                {\n                                                    char* rax_52 = strchr(\"0123456789abcdefghijklmnopqrstuv\u2026\", *rbp_3);\n                                                    if (rax_52 == 0)\n                                                    {\n                                                        __assert_fail(&data_40a4f9, \"src/shred.c\", 0x40a, \"incname\");\n                                                        /* no return */\n                                                    }\n                                                    rax_53 = rax_52[1];\n                                                    if (rax_53 != 0)\n                                                    {\n                                                        break;\n                                                    }\n                                                    *rbp_3 = 0x30;\n                                                    void* rax_51 = (rbp_3 - 1);\n                                                    if (rax_40 == rbp_3)\n                                                    {\n                                                        break;\n                                                    }\n                                                    rbp_3 = rax_51;\n                                                }\n                                                if (rax_53 == 0)\n                                                {\n                                                    break;\n                                                }\n                                                *rbp_3 = rax_53;\n                                            }\n                                            r14_4 = (r14_4 - 1);\n                                        }\n                                    }\n                                    if (unlink(r12_1) != 0)\n                                    {\n                                        r13_3 = 0;\n                                        error(0, *__errno_location(), dcgettext(nullptr, \"%s: failed to remove\", 5), rbp_2);\n                                    }\n                                    else if (*var_48[0xc] != 0)\n                                    {\n                                        error(0, 0, dcgettext(nullptr, \"%s: removed\", 5), rbp_2);\n                                    }\n                                    if (var_98_1 >= 0)\n                                    {\n                                        if (sub_402a60(var_98_1, rax_43) != 0)\n                                        {\n                                            r13_3 = 0;\n                                        }\n                                        if (close(var_98_1) != 0)\n                                        {\n                                            r13_3 = 0;\n                                            error(0, *__errno_location(), dcgettext(nullptr, \"%s: failed to close\", 5), rax_43);\n                                        }\n                                    }\n                                    free(rax_39);\n                                    free(rax_41);\n                                    free(rax_43);\n                                }\n                            }\n                            var_a1 = (var_a1 & r13_3);\n                        }\n                        r15_1 = (r15_1 + 8);\n                        rdi_7 = free(rbp_2);\n                    } while (rax_14 != r15_1);\n                }\n                return (var_a1 ^ 1);\n            }\n            error(1, *__errno_location(), \"%s\", sub_406c60(0, 3, r12));\n        }\n        else\n        {\n            bool cond:0_1 = rax_1 <= 0x73;\n            if (rax_1 == 0x73)\n            {\n                var_48 = sub_4084d0(data_60f540, 0, 0, 0x7fffffffffffffff, \"cbBkKMGTPEZY0\", dcgettext(nullptr, \"invalid file size\", 5), 0);\n                continue;\n            }\n            else if (cond:0_1)\n            {\n                bool cond:1_1 = rax_1 <= 0xffffff7e;\n                if (rax_1 == 0xffffff7e)\n                {\n                    sub_403ac0(0);\n                    /* no return */\n                }\n                if (cond:1_1)\n                {\n                    if (rax_1 == 0xffffff7d)\n                    {\n                        sub_408100(stdout, \"shred\", \"GNU coreutils\", data_60f2d0);\n                        exit(0);\n                        /* no return */\n                    }\n                    break;\n                }\n                if (rax_1 == 0x66)\n                {\n                    var_58 = 1;\n                    continue;\n                }\n                else\n                {\n                    if (rax_1 != 0x6e)\n                    {\n                        break;\n                    }\n                    *var_58[8] = sub_4085a0(data_60f540, 0, 0x3fffffffffffffff, &data_40ccb4[0x1b], dcgettext(nullptr, \"invalid number of passes\", 5), 0);\n                    continue;\n                }\n            }\n            else\n            {\n                bool cond:2_1 = rax_1 > 0x78;\n                if (rax_1 == 0x78)\n                {\n                    *var_48[0xd] = 1;\n                    continue;\n                }\n                else if (cond:2_1)\n                {\n                    if (rax_1 == 0x7a)\n                    {\n                        *var_48[0xe] = 1;\n                        continue;\n                    }\n                    else\n                    {\n                        if (rax_1 != 0x80)\n                        {\n                            break;\n                        }\n                        int64_t r13_1 = data_60f540;\n                        int32_t rax_7;\n                        if (r12 != 0)\n                        {\n                            rax_7 = strcmp(r12, r13_1);\n                        }\n                        if ((r12 == 0 || (r12 != 0 && rax_7 == 0)))\n                        {\n                            r12 = r13_1;\n                            continue;\n                        }\n                    }\n                }\n                else if (rax_1 == 0x75)\n                {\n                    int64_t rsi_1 = data_60f540;\n                    if (rsi_1 == 0)\n                    {\n                        *var_48[8] = 3;\n                        continue;\n                    }\n                    else\n                    {\n                        *var_48[8] = *((sub_4041e0(\"--remove\", rsi_1, &data_40b5a0, 0x40b580, 4, data_60f2d8) << 2) + 0x40b580);\n                        continue;\n                    }\n                }\n                else\n                {\n                    if (rax_1 != 0x76)\n                    {\n                        break;\n                    }\n                    *var_48[0xc] = 1;\n                    continue;\n                }\n            }\n        }\n        void (* rdx_24)();\n        int64_t rsi_17;\n        int64_t rdi_31;\n        rdx_24 = error(1, 0, dcgettext(nullptr, \"multiple random sources specifie\u2026\", 5));\n        /* tailcall */\n        return _start(rdi_31, rsi_17, rdx_24);\n    }\n    sub_403ac0(1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x402920",
            "funcEndAddr": "0x40294a",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40294b",
            "funcStartAddr": "0x40294b",
            "funcEndAddr": "0x40296a",
            "decompiledFuncCode": "void sub_40294b()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_40296a",
            "funcStartAddr": "0x40296a",
            "funcEndAddr": "0x4029a1",
            "decompiledFuncCode": "int64_t sub_40296a()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_4029a1",
            "funcStartAddr": "0x4029a1",
            "funcEndAddr": "0x4029f8",
            "decompiledFuncCode": "void sub_4029a1()\n{\n    if (data_60f388 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_60f390;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_60f390 = (rax_1 + 1);\n        *(0x60ee40 + ((rax_1 + 1) << 3))();\n    }\n    sub_40294b();\n    data_60f388 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_4029f8",
            "funcStartAddr": "0x4029f8",
            "funcEndAddr": "0x4029fd",
            "decompiledFuncCode": "int64_t j_sub_40296a()\n{\n    /* tailcall */\n    return sub_40296a();\n}\n\n"
        },
        {
            "funcName": "sub_402a00",
            "funcStartAddr": "0x402a00",
            "funcEndAddr": "0x402a0c",
            "decompiledFuncCode": "void sub_402a00(void* arg1)\n{\n    /* tailcall */\n    return sub_406f90(data_60f398);\n}\n\n"
        },
        {
            "funcName": "sub_402a10",
            "funcStartAddr": "0x402a10",
            "funcEndAddr": "0x402a5c",
            "decompiledFuncCode": "uint64_t sub_402a10(int32_t arg1, char arg2)\n{\n    int32_t rdx;\n    uint64_t rax_1 = sub_408a90(arg1, 3, rdx);\n    if (rax_1 > 0)\n    {\n        int32_t rcx_1;\n        *rcx_1[1] = (*rax_1[1] | 0x40);\n        int32_t rdx_1;\n        *rdx_1[1] = (*rax_1[1] & 0xbf);\n        if (arg2 != 0)\n        {\n            rdx_1 = rcx_1;\n        }\n        if (rdx_1 != rax_1)\n        {\n            /* tailcall */\n            return sub_408a90(arg1, 4, rdx_1);\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_402a60",
            "funcStartAddr": "0x402a60",
            "funcEndAddr": "0x402b1d",
            "decompiledFuncCode": "int64_t sub_402a60(int32_t arg1, int64_t arg2)\n{\n    if (fdatasync(arg1) == 0)\n    {\n        goto label_402ae1;\n    }\n    int32_t* rax_1 = __errno_location();\n    int32_t rbp_1 = *rax_1;\n    int64_t rax_5;\n    if (((rbp_1 - 0x15) <= 1 || ((rbp_1 - 0x15) > 1 && rbp_1 == 9)))\n    {\n        if (fsync(arg1) == 0)\n        {\n            goto label_402ae1;\n        }\n        int32_t rbx_1 = *rax_1;\n        if (((rbx_1 - 0x15) <= 1 || ((rbx_1 - 0x15) > 1 && rbx_1 == 9)))\n        {\n            sync();\n        label_402ae1:\n            rax_5 = 0;\n        }\n        if (((rbx_1 - 0x15) > 1 && rbx_1 != 9))\n        {\n            error(0, rbx_1, dcgettext(nullptr, \"%s: fsync failed\", 5), arg2);\n            *rax_1 = rbx_1;\n            rax_5 = 0xffffffff;\n        }\n    }\n    if (((rbp_1 - 0x15) > 1 && rbp_1 != 9))\n    {\n        error(0, rbp_1, dcgettext(nullptr, \"%s: fdatasync failed\", 5), arg2);\n        *rax_1 = rbp_1;\n        rax_5 = 0xffffffff;\n    }\n    return rax_5;\n}\n\n"
        },
        {
            "funcName": "sub_402b20",
            "funcStartAddr": "0x402b20",
            "funcEndAddr": "0x4033c8",
            "decompiledFuncCode": "uint64_t sub_402b20(int32_t arg1, void* arg2, int64_t arg3, int64_t* arg4, \n    int32_t arg5, int64_t* arg6, int64_t arg7, int64_t arg8)\n{\n    int64_t r13 = *arg4;\n    int64_t r14 = getpagesize();\n    uint64_t var_838;\n    int32_t rax_3;\n    uint8_t rdx_1;\n    int64_t r15;\n    if (arg5 > 0)\n    {\n        int32_t rbx_1 = (arg5 & 0xfff);\n        rax_3 = ((rbx_1 << 0xc) | rbx_1);\n        rdx_1 = (rax_3 >> 4);\n        if ((*rax_3[1] != rdx_1 || (*rax_3[1] == rdx_1 && rdx_1 != rax_3)))\n        {\n            var_838 = 0xf000;\n            r15 = 0xf000;\n        }\n    }\n    if ((arg5 <= 0 || ((arg5 > 0 && *rax_3[1] == rdx_1) && rdx_1 == rax_3)))\n    {\n        var_838 = 0x10000;\n        r15 = 0x10002;\n    }\n    int64_t rax_4 = sub_408240((r15 + (r14 - 1)));\n    int64_t rbx_3 = ((r14 - 1) + rax_4);\n    int64_t r14_1 = r13;\n    char* rbx_4 = (rbx_3 - (COMBINE(0, rbx_3) % r14));\n    uint64_t rdx_3;\n    rdx_3 = r13 > 0;\n    rdx_3 = (rdx_3 & r13 < var_838);\n    char var_83d = rdx_3;\n    if (rdx_3 == 0)\n    {\n        sub_402a10(arg1, 1);\n    }\n    uint64_t rax_13;\n    int32_t rax_51;\n    int64_t rcx;\n    int32_t rcx_1;\n    char* rdx_4;\n    uint64_t rsi;\n    int64_t rdi_23;\n    if ((*(arg2 + 0x18) & 0xf000) == 0x2000)\n    {\n        int16_t var_2c8 = 6;\n        int32_t var_2c4_1 = 1;\n        rax_51 = ioctl(arg1, 0x40086d01, &var_2c8);\n        if (rax_51 == 0)\n        {\n            rcx_1 = arg5;\n            int32_t var_7ef;\n            if (rcx_1 >= 0)\n            {\n            label_402c6a:\n                int32_t rax_17 = (((rcx_1 << 0xc) & 0xfff000) | (rcx_1 & 0xfff));\n                int32_t rdx_5 = rax_17;\n                rax_17 = (ROLW(rax_17, 8));\n                *(rbx_4 + 1) = rax_17;\n                *rbx_4 = (rdx_5 >> 4);\n                uint64_t rbp_2;\n                if ((r13 >= r15 || (r13 < r15 && r13 < 0)))\n                {\n                    r14_1 = r15;\n                    rbp_2 = (r15 >> 1);\n                }\n                if ((r13 < r15 && r13 >= 0))\n                {\n                    rbp_2 = (r13 >> 1);\n                }\n                uint64_t r15_1;\n                if (((r13 >= r15 || (r13 < r15 && r13 < 0)) || ((r13 < r15 && r13 >= 0) && rbp_2 > 2)))\n                {\n                    r15_1 = 3;\n                    do\n                    {\n                        void* rdi_2 = &rbx_4[r15_1];\n                        uint64_t rdx_7 = r15_1;\n                        r15_1 = (r15_1 + r15_1);\n                        memcpy(rdi_2, rbx_4, rdx_7);\n                    } while (r15_1 <= rbp_2);\n                }\n                if (((r13 < r15 && r13 >= 0) && rbp_2 <= 2))\n                {\n                    r15_1 = 3;\n                }\n                int32_t rbp_4 = (arg5 & 0x1000);\n                if (r15_1 < r14_1)\n                {\n                    memcpy(&rbx_4[r15_1], rbx_4, (r14_1 - r15_1));\n                }\n                if (((r15_1 < r14_1 && rbp_4 != 0) || ((r15_1 >= r14_1 && rbp_4 != 0) && r14_1 != 0)))\n                {\n                    int64_t rax_56 = 0;\n                    do\n                    {\n                        rbx_4[rax_56] = (rbx_4[rax_56] - 0x80);\n                        rax_56 = (rax_56 + 0x200);\n                    } while (rax_56 < r14_1);\n                }\n                __sprintf_chk(&var_7ef, 1, 7, \"%02x%02x%02x\", *rbx_4, rbx_4[1], rbx_4[2]);\n                if (arg8 == 0)\n                {\n                    goto label_402d18;\n                }\n                goto label_403169;\n            }\n        label_40310e:\n            var_7ef = 0x646e6172;\n            int16_t var_7eb_1 = 0x6d6f;\n            char var_7e9_1 = 0;\n            if (arg8 == 0)\n            {\n                goto label_402d18;\n            }\n        label_403169:\n            error(0, 0, dcgettext(nullptr, \"%s: pass %lu/%lu (%s)...\", 5), arg3, arg7, arg8, &var_7ef);\n            int64_t var_800 = (time(nullptr) + 5);\n        label_402d18:\n            void* var_810_1 = &data_40ccb4[0x1b];\n            char var_850_1 = 0;\n            time_t var_808_1 = 0;\n            int64_t var_858_1 = 0;\n        label_402d37:\n            uint64_t rbp_6;\n            if (r13 < 0)\n            {\n            label_403064:\n                rbp_6 = var_838;\n                if (arg5 >= 0)\n                {\n                    goto label_402d7c;\n                }\n            label_40307c:\n                sub_407360(arg6, rbx_4, rbp_6);\n            label_402d7c:\n                int64_t r13_1 = 0;\n                while (true)\n                {\n                    ssize_t rax_22 = write(arg1, &rbx_4[r13_1], (rbp_6 - r13_1));\n                    int32_t r14_2;\n                    int32_t r14_4;\n                    if (rax_22 > 0)\n                    {\n                        r13_1 = (r13_1 + rax_22);\n                    }\n                    else\n                    {\n                        if (r13 >= 0)\n                        {\n                            int32_t* rax_23 = __errno_location();\n                            r14_2 = *rax_23;\n                            if ((var_83d != 0 || (var_83d == 0 && r14_2 != 0x16)))\n                            {\n                                var_850_1 = sub_405170((var_858_1 + r13_1), &var_2c8);\n                                error(0, r14_2, dcgettext(nullptr, \"%s: error writing at offset %s\", 5), arg3, var_850_1);\n                                if (r14_2 != 5)\n                                {\n                                    goto label_402c21;\n                                }\n                                int64_t r9_2 = (r13_1 | 0x1ff);\n                                if (r9_2 >= rbp_6)\n                                {\n                                    goto label_402c21;\n                                }\n                                r13_1 = (r9_2 + 1);\n                                if (lseek(arg1, (var_858_1 + r13_1), 0) == -1)\n                                {\n                                    error(0, *rax_23, dcgettext(nullptr, \"%s: lseek failed\", 5), arg3);\n                                    goto label_402c21;\n                                }\n                                var_850_1 = 1;\n                                if (rbp_6 > r13_1)\n                                {\n                                    continue;\n                                }\n                            }\n                        }\n                        else if (rax_22 != 0)\n                        {\n                            r14_4 = *__errno_location();\n                            if ((r14_4 != 0x1c && (var_83d != 0 || (var_83d == 0 && r14_4 != 0x16))))\n                            {\n                                error(0, r14_4, dcgettext(nullptr, \"%s: error writing at offset %s\", 5), arg3, sub_405170((var_858_1 + r13_1), &var_2c8));\n                                goto label_402c21;\n                            }\n                        }\n                        if ((((r13 >= 0 && var_83d == 0) && r14_2 == 0x16) || ((r13 < 0 && rax_22 != 0) && r14_4 != 0x1c)))\n                        {\n                            sub_402a10(arg1, 0);\n                            var_83d = 1;\n                        }\n                    }\n                    if (((rax_22 > 0 || (rax_22 <= 0 && (((r13 >= 0 && var_83d == 0) && r14_2 == 0x16) || ((r13 < 0 && rax_22 != 0) && r14_4 != 0x1c)))) && rbp_6 > r13_1))\n                    {\n                        continue;\n                    }\n                    void var_558;\n                    char* rbp_7;\n                    int64_t r15_4;\n                    int16_t top;\n                    if ((((rax_22 > 0 || (rax_22 <= 0 && (((r13 >= 0 && var_83d == 0) && r14_2 == 0x16) || ((r13 < 0 && rax_22 != 0) && r14_4 != 0x1c)))) && rbp_6 <= r13_1) || ((rax_22 <= 0 && r13 >= 0) && (var_83d != 0 || (var_83d == 0 && r14_2 != 0x16)))))\n                    {\n                        if ((0x7fffffffffffffff - var_858_1) < r13_1)\n                        {\n                        label_4032e1:\n                            rcx = arg3;\n                            rsi = 0;\n                            rdx_4 = dcgettext(nullptr, \"%s: file too large\", 5);\n                            goto label_402c1c;\n                        }\n                        r15_4 = (r13_1 + var_858_1);\n                        var_858_1 = r15_4;\n                        if (arg8 == 0)\n                        {\n                            goto label_402d37;\n                        }\n                        if (r13 != r15_4)\n                        {\n                            time_t rax_32 = time(nullptr);\n                            var_808_1 = rax_32;\n                            if (var_800 > rax_32)\n                            {\n                                goto label_402d37;\n                            }\n                            char* rax_33 = sub_4045e0(var_858_1, &var_558, 0x1b2, 1, 1);\n                            top = (top - 1);\n                            /* unimplemented  {call sub_4045e0} */;\n                            rbp_7 = rax_33;\n                            if (strcmp(var_810_1, rax_33) == 0)\n                            {\n                                goto label_402d37;\n                            }\n                            goto label_402ef3;\n                        }\n                    }\n                    if (((r13 < 0 && (rax_22 == 0 || ((rax_22 <= 0 && rax_22 != 0) && r14_4 == 0x1c))) && (0x7fffffffffffffff - var_858_1) >= r13_1))\n                    {\n                        r15_4 = (r13_1 + var_858_1);\n                        r13 = r15_4;\n                        var_858_1 = r15_4;\n                        *arg4 = r15_4;\n                        if (arg8 == 0)\n                        {\n                            goto label_402d37;\n                        }\n                    }\n                    if ((((r13 < 0 && (rax_22 == 0 || ((rax_22 <= 0 && rax_22 != 0) && r14_4 == 0x1c))) && (0x7fffffffffffffff - var_858_1) >= r13_1) || ((((rax_22 > 0 || (rax_22 <= 0 && (((r13 >= 0 && var_83d == 0) && r14_2 == 0x16) || ((r13 < 0 && rax_22 != 0) && r14_4 != 0x1c)))) && rbp_6 <= r13_1) || ((rax_22 <= 0 && r13 >= 0) && (var_83d != 0 || (var_83d == 0 && r14_2 != 0x16)))) && (0x7fffffffffffffff - var_858_1) >= r13_1)))\n                    {\n                        if (*var_810_1 != 0)\n                        {\n                        label_4032c3:\n                            top = (top - 1);\n                            /* unimplemented  {call sub_4045e0} */;\n                            rbp_7 = sub_4045e0(r15_4, &var_558, 0x1b2, 1, 1);\n                        label_402ef3:\n                            bool cond:6_1 = r13 == 0;\n                            if (r13 < 0)\n                            {\n                                error(0, 0, dcgettext(nullptr, \"%s: pass %lu/%lu (%s)...%s\", 5), arg3, arg7, arg8, &var_7ef, rbp_7, var_858_1, var_850_1, arg3);\n                            }\n                            else\n                            {\n                                uint32_t r9_3 = 0x64;\n                                if ((!cond:6_1))\n                                {\n                                    if (r15_4 > 0x28f5c28f5c28f5c)\n                                    {\n                                        int64_t rax_70;\n                                        int64_t rdx_23;\n                                        rdx_23 = HIGHD((-0x5c28f5c28f5c28f5 * r13));\n                                        rax_70 = LOWD((-0x5c28f5c28f5c28f5 * r13));\n                                        r9_3 = (COMBINE(0, r15_4) / (((rdx_23 + r13) >> 6) - (r13 >> 0x3f)));\n                                    }\n                                    else\n                                    {\n                                        r9_3 = (COMBINE(0, (r15_4 * 0x64)) / r13);\n                                    }\n                                }\n                                int32_t* var_830;\n                                var_830 = r9_3;\n                                char* rax_39 = sub_4045e0(r13, &var_2c8, 0x1b0, 1, 1);\n                                top = (top - 1);\n                                /* unimplemented  {call sub_4045e0} */;\n                                if (r13 == r15_4)\n                                {\n                                    rbp_7 = rax_39;\n                                }\n                                error(0, 0, dcgettext(nullptr, \"%s: pass %lu/%lu (%s)...%s/%s %d\u2026\", 5), arg3, arg7, arg8, &var_7ef, rbp_7, rax_39, var_830, var_858_1, var_850_1, arg3);\n                            }\n                            void var_7e8;\n                            __strcpy_chk(&var_7e8, rbp_7, 0x28c);\n                            var_800 = (var_808_1 + 5);\n                            if (sub_402a60(arg1, arg3) == 0)\n                            {\n                                var_810_1 = &var_7e8;\n                                goto label_402d37;\n                            }\n                            if (*__errno_location() != 5)\n                            {\n                                break;\n                            }\n                            var_850_1 = 1;\n                            var_810_1 = &var_7e8;\n                            goto label_402d37;\n                        }\n                        time_t rax_63 = time(nullptr);\n                        var_808_1 = rax_63;\n                        if (var_800 > rax_63)\n                        {\n                            goto label_402d37;\n                        }\n                        goto label_4032c3;\n                    }\n                    if (((r13 < 0 && (rax_22 == 0 || ((rax_22 <= 0 && rax_22 != 0) && r14_4 == 0x1c))) && (0x7fffffffffffffff - var_858_1) < r13_1))\n                    {\n                        goto label_4032e1;\n                    }\n                }\n                goto label_402c21;\n            }\n            rbp_6 = (r13 - var_858_1);\n            if (rbp_6 >= var_838)\n            {\n                goto label_403064;\n            }\n            if (rbp_6 != 0)\n            {\n                if (r13 < var_858_1)\n                {\n                    goto label_403307;\n                }\n                if (arg5 >= 0)\n                {\n                    goto label_402d7c;\n                }\n                goto label_40307c;\n            }\n        label_403307:\n            if (sub_402a60(arg1, arg3) == 0)\n            {\n                free(rax_4);\n                rax_13 = var_850_1;\n            }\n            else\n            {\n                rdi_23 = rax_4;\n                if (*__errno_location() != 5)\n                {\n                    goto label_402c26;\n                }\n                free(rdi_23);\n                rax_13 = 1;\n            }\n        }\n    }\n    if (((*(arg2 + 0x18) & 0xf000) != 0x2000 || ((*(arg2 + 0x18) & 0xf000) == 0x2000 && rax_51 != 0)))\n    {\n        off64_t rax_9 = lseek(arg1, 0, 0);\n        bool cond:1_1 = rax_9 != 0;\n        int32_t* rbx_5;\n        if (rax_9 > 0)\n        {\n            int32_t* rax_10 = __errno_location();\n            *rax_10 = 0x16;\n            rbx_5 = rax_10;\n        }\n        else\n        {\n            if ((!cond:1_1))\n            {\n                rcx_1 = arg5;\n                if (rcx_1 >= 0)\n                {\n                    goto label_402c6a;\n                }\n                goto label_40310e;\n            }\n            rbx_5 = __errno_location();\n        }\n        rcx = arg3;\n        rsi = *rbx_5;\n        rdx_4 = dcgettext(nullptr, \"%s: cannot rewind\", 5);\n    label_402c1c:\n        error(0, rsi, rdx_4, rcx);\n    label_402c21:\n        rdi_23 = rax_4;\n    label_402c26:\n        free(rdi_23);\n        rax_13 = 0xffffffff;\n    }\n    return rax_13;\n}\n\n"
        },
        {
            "funcName": "sub_4033d0",
            "funcStartAddr": "0x4033d0",
            "funcEndAddr": "0x403ab5",
            "decompiledFuncCode": "uint64_t sub_4033d0(int32_t arg1, int64_t arg2, int64_t* arg3, void* arg4)\n{\n    int32_t rbp = arg1;\n    void* rbx = arg4;\n    int64_t var_100 = 0;\n    if (*(arg4 + 0x1c) != 0)\n    {\n        var_100 = (*(arg4 + 0x1e) + *(arg4 + 8));\n    }\n    bool var_e5_1;\n    void var_c8;\n    if (__fxstat(1, rbp, &var_c8) != 0)\n    {\n        error(0, *__errno_location(), dcgettext(nullptr, \"%s: fstat failed\", 5), arg2);\n        var_e5_1 = false;\n    }\n    else\n    {\n        int32_t var_b0;\n        int32_t rax_5 = (var_b0 & 0xf000);\n        int32_t rax_46;\n        if (rax_5 == 0x2000)\n        {\n            rax_46 = isatty(rbp);\n            if (rax_46 == 0)\n            {\n                rax_5 = (var_b0 & 0xf000);\n            }\n        }\n        bool rcx;\n        if (((rax_5 == 0x2000 && rax_46 == 0) || rax_5 != 0x2000))\n        {\n            rcx = (rax_5 == 0xc000 | rax_5 == 0x1000);\n            var_e5_1 = rcx;\n        }\n        if (((rax_5 == 0x2000 && rax_46 != 0) || (((rax_5 == 0x2000 && rax_46 == 0) || rax_5 != 0x2000) && rcx != 0)))\n        {\n            error(0, 0, dcgettext(nullptr, \"%s: invalid file type\", 5), arg2);\n            var_e5_1 = false;\n        }\n        if ((((rax_5 == 0x2000 && rax_46 == 0) || rax_5 != 0x2000) && rcx == 0))\n        {\n            off64_t var_98;\n            if ((rax_5 == 0x8000 && var_98 < 0))\n            {\n                error(0, 0, dcgettext(nullptr, \"%s: file has negative size\", 5), arg2);\n            }\n            if ((rax_5 != 0x8000 || (rax_5 == 0x8000 && var_98 >= 0)))\n            {\n                int64_t rdi = *(rbx + 8);\n                uint64_t rax_7;\n                rax_7 = (rdi >> 0x3e) != 0;\n                int64_t rdi_1 = (rdi << 2);\n                uint64_t rax_8 = rax_7;\n                if ((rdi_1 < 0 || (rdi_1 >= 0 && rax_8 != 0)))\n                {\n                    sub_408490();\n                    /* no return */\n                }\n                if ((rdi_1 >= 0 && rax_8 == 0))\n                {\n                    int32_t* r13_1 = sub_408240(rdi_1);\n                    off64_t rax_10 = *(rbx + 0x10);\n                    off64_t var_108_1 = rax_10;\n                    bool var_118;\n                    int64_t var_f8_1;\n                    off64_t var_f0_1;\n                    int64_t rdx_8;\n                    int64_t* r14_2;\n                    off64_t var_90;\n                    if (rax_10 != -1)\n                    {\n                        var_f8_1 = *(rbx + 8);\n                        off64_t rax_24;\n                        if ((var_b0 & 0xf000) == 0x8000)\n                        {\n                            rax_24 = var_90;\n                            var_f0_1 = var_98;\n                            if ((rax_24 - 1) > 0x1fffffffffffffff)\n                            {\n                                rax_24 = 0x200;\n                            }\n                            if (rax_24 > var_108_1)\n                            {\n                                rax_24 = var_108_1;\n                            }\n                            if ((var_98 >= rax_24 && var_f8_1 != 0))\n                            {\n                                var_f0_1 = 0;\n                            label_4034de:\n                                int32_t* r9_1 = r13_1;\n                                int32_t rax_14 = -2;\n                                int64_t rbx_1 = var_f8_1;\n                                int32_t* r12_2 = &data_40b340;\n                                int64_t r14_1 = 0;\n                                void* rbx_4;\n                                int32_t rbp_2;\n                                while (true)\n                                {\n                                    if (rax_14 == 0)\n                                    {\n                                        rax_14 = -2;\n                                        r12_2 = &data_40b344;\n                                    }\n                                    else\n                                    {\n                                        r12_2 = &r12_2[1];\n                                    }\n                                    if ((rax_14 == 0 || (rax_14 != 0 && rax_14 < 0)))\n                                    {\n                                        int64_t rax_16 = (-rax_14);\n                                        if (rax_16 >= rbx_1)\n                                        {\n                                            rbp_2 = rbp;\n                                            rbx_4 = rbx;\n                                            var_118 = (r14_1 + rbx_1);\n                                            break;\n                                        }\n                                        r14_1 = (r14_1 + rax_16);\n                                        rbx_1 = (rbx_1 - rax_16);\n                                    }\n                                    if ((rax_14 != 0 && rax_14 >= 0))\n                                    {\n                                        int64_t r15_1 = rax_14;\n                                        if (r15_1 > rbx_1)\n                                        {\n                                            var_118 = r14_1;\n                                            int32_t* r14_3 = r12_2;\n                                            int64_t r12_4 = rbx_1;\n                                            rbp_2 = rbp;\n                                            rbx_4 = rbx;\n                                            if ((r12_4 <= 1 || (r12_4 > 1 && r15_1 > (r12_4 * 3))))\n                                            {\n                                                var_118 = (var_118 + r12_4);\n                                            }\n                                            if ((r12_4 > 1 && r15_1 <= (r12_4 * 3)))\n                                            {\n                                                int32_t* rbx_5 = r9_1;\n                                                while (true)\n                                                {\n                                                    r14_3 = &r14_3[1];\n                                                    int64_t rax_40;\n                                                    int64_t rbp_3;\n                                                    if (r12_4 != r15_1)\n                                                    {\n                                                        rbp_3 = (r15_1 - 1);\n                                                        rax_40 = sub_406e70(arg3, rbp_3);\n                                                    }\n                                                    if ((r12_4 == r15_1 || (r12_4 != r15_1 && r12_4 > rax_40)))\n                                                    {\n                                                        void* rcx_9 = &rbx_5[1];\n                                                        *rbx_5 = r14_3[-1];\n                                                        int64_t temp3_1 = r12_4;\n                                                        r12_4 = (r12_4 - 1);\n                                                        if (temp3_1 == 1)\n                                                        {\n                                                            break;\n                                                        }\n                                                        rbx_5 = rcx_9;\n                                                        rbp_3 = (r15_1 - 1);\n                                                    }\n                                                    r15_1 = rbp_3;\n                                                }\n                                            }\n                                            break;\n                                        }\n                                        int64_t rbp_1 = (r15_1 << 2);\n                                        int32_t* rsi_1 = r12_2;\n                                        rbx_1 = (rbx_1 - r15_1);\n                                        r12_2 = (r12_2 + rbp_1);\n                                        r9_1 = (memcpy(r9_1, rsi_1, rbp_1) + rbp_1);\n                                    }\n                                    rax_14 = *r12_2;\n                                }\n                                int64_t rdi_11 = var_118;\n                                int64_t r14_4 = 0;\n                                int64_t r12_5 = (rdi_11 - 1);\n                                int64_t r8_2 = (var_f8_1 - 1);\n                                int64_t r15_3 = r12_5;\n                                int64_t r12_6 = (var_f8_1 - rdi_11);\n                                while (true)\n                                {\n                                    int32_t r9_4 = r13_1[r14_4];\n                                    if (r15_3 <= r12_5)\n                                    {\n                                        r13_1[r12_6] = r9_4;\n                                        r12_6 = (r12_6 + 1);\n                                        r13_1[r14_4] = 0xffffffff;\n                                        r14_4 = (r14_4 + 1);\n                                        r15_3 = ((r15_3 + r8_2) - r12_5);\n                                        if (r14_4 == var_f8_1)\n                                        {\n                                            break;\n                                        }\n                                    }\n                                    else\n                                    {\n                                        r15_3 = (r15_3 - r12_5);\n                                        var_118 = r9_4;\n                                        void* rax_45 = &r13_1[(sub_406e70(arg3, ((r12_6 - 1) - r14_4)) + r14_4)];\n                                        r13_1[r14_4] = *rax_45;\n                                        r14_4 = (r14_4 + 1);\n                                        *rax_45 = var_118;\n                                        if (r14_4 == var_f8_1)\n                                        {\n                                            break;\n                                        }\n                                    }\n                                }\n                                rbp = rbp_2;\n                                rbx = rbx_4;\n                                goto label_4036f2;\n                            }\n                        }\n                        else\n                        {\n                            var_f0_1 = 0;\n                            if (var_f8_1 != 0)\n                            {\n                                goto label_4034de;\n                            }\n                        }\n                        if ((((var_b0 & 0xf000) == 0x8000 && var_98 >= rax_24) || (var_b0 & 0xf000) != 0x8000))\n                        {\n                            var_118 = true;\n                            r14_2 = sub_406e60(arg3);\n                            goto label_403785;\n                        }\n                    }\n                    else\n                    {\n                        if ((var_b0 & 0xf000) != 0x8000)\n                        {\n                            off64_t rax_51 = lseek(rbp, 0, 2);\n                            int64_t rax_54;\n                            int64_t rdi_16;\n                            if (rax_51 <= 0)\n                            {\n                                var_f0_1 = 0;\n                                rax_54 = *(rbx + 8);\n                                var_f8_1 = rax_54;\n                            }\n                            else\n                            {\n                                rdi_16 = *(rbx + 8);\n                                var_108_1 = rax_51;\n                                var_f0_1 = 0;\n                                var_f8_1 = rdi_16;\n                            }\n                            if (((rax_51 <= 0 && rax_54 == 0) || (rax_51 > 0 && rdi_16 == 0)))\n                            {\n                                rdx_8 = 0;\n                                var_118 = true;\n                                r14_2 = sub_406e60(arg3);\n                                goto label_403795;\n                            }\n                            goto label_4034de;\n                        }\n                        bool rdi_4 = *(rbx + 0x1d);\n                        var_108_1 = var_98;\n                        var_118 = rdi_4;\n                        var_f8_1 = *(rbx + 8);\n                        if (rdi_4 != 0)\n                        {\n                            var_f0_1 = 0;\n                            if (var_f8_1 == 0)\n                            {\n                                r14_2 = sub_406e60(arg3);\n                                goto label_403785;\n                            }\n                            goto label_4034de;\n                        }\n                        off64_t rcx_5 = var_90;\n                        if ((rcx_5 - 1) > 0x1fffffffffffffff)\n                        {\n                            rcx_5 = 0x200;\n                        }\n                        int64_t rax_29;\n                        int64_t rdx_6;\n                        rdx_6 = HIGHD(var_98);\n                        rax_29 = LOWD(var_98);\n                        int64_t temp1_1 = (COMBINE(rdx_6, rax_29) % rcx_5);\n                        if (rcx_5 > var_98)\n                        {\n                            var_f0_1 = var_98;\n                        }\n                        if ((rcx_5 <= var_98 || (rcx_5 > var_98 && var_98 == 0)))\n                        {\n                            var_f0_1 = 0;\n                        }\n                        if (temp1_1 != 0)\n                        {\n                            int64_t rcx_6 = (rcx_5 - temp1_1);\n                            int64_t rax_31 = (0x7fffffffffffffff - var_108_1);\n                            if (rax_31 <= rcx_6)\n                            {\n                                rcx_6 = rax_31;\n                            }\n                            var_108_1 = (var_108_1 + rcx_6);\n                        }\n                    }\n                    if (var_f8_1 != 0)\n                    {\n                        goto label_4034de;\n                    }\n                label_4036f2:\n                    r14_2 = sub_406e60(arg3);\n                    if (var_f0_1 == 0)\n                    {\n                        var_118 = true;\n                        goto label_403785;\n                    }\n                    off64_t var_d0 = var_f0_1;\n                    rdx_8 = *(rbx + 8);\n                    int64_t r12_3 = 0;\n                    var_118 = true;\n                    int64_t rbx_3;\n                    while (true)\n                    {\n                        rbx_3 = 0;\n                        while ((*(rbx + 0x1e) + rdx_8) > rbx_3)\n                        {\n                            int32_t r8_1 = 0;\n                            if (rbx_3 < rdx_8)\n                            {\n                                r8_1 = r13_1[rbx_3];\n                            }\n                            rbx_3 = (rbx_3 + 1);\n                            int32_t rax_35 = sub_402b20(rbp, &var_c8, arg2, &var_d0, r8_1, r14_2, rbx_3, r12_3);\n                            bool cond:5_1 = rax_35 < 0;\n                            if (rax_35 != 0)\n                            {\n                                if (cond:5_1)\n                                {\n                                    break;\n                                }\n                                var_118 = false;\n                            }\n                            rdx_8 = *(rbx + 8);\n                        }\n                        if ((*(rbx + 0x1e) + rdx_8) > rbx_3)\n                        {\n                            break;\n                        }\n                    label_403785:\n                        if (var_108_1 == 0)\n                        {\n                            break;\n                        }\n                        rdx_8 = *(rbx + 8);\n                    label_403795:\n                        off64_t rax_38 = var_108_1;\n                        r12_3 = var_100;\n                        var_108_1 = 0;\n                        var_d0 = rax_38;\n                    }\n                    if ((*(rbx + 0x1e) + rdx_8) > rbx_3)\n                    {\n                        goto label_4037c0;\n                    }\n                    if ((*(rbx + 0x18) != 0 && (ftruncate(rbp) != 0 && (var_b0 & 0xf000) == 0x8000)))\n                    {\n                        error(0, *__errno_location(), dcgettext(nullptr, \"%s: error truncating\", 5), arg2);\n                        goto label_4037c0;\n                    }\n                    var_e5_1 = var_118;\n                label_4037c0:\n                    free(r13_1);\n                }\n            }\n        }\n    }\n    return var_e5_1;\n}\n\n"
        },
        {
            "funcName": "sub_403ac0",
            "funcStartAddr": "0x403ac0",
            "funcEndAddr": "0x403f0d",
            "decompiledFuncCode": "int64_t sub_403ac0(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_60f3b0;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [OPTION]... FILE...\\n\", 5), rbp);\n        fputs_unlocked(dcgettext(nullptr, \"Overwrite the specified FILE(s) \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nIf FILE is -, shred standard o\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nMandatory arguments to long op\u2026\", 5), stdout);\n        __printf_chk(1, dcgettext(nullptr, \"  -f, --force    change permissi\u2026\", 5), 3);\n        fputs_unlocked(dcgettext(nullptr, \"  -u             deallocate and \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nDelete FILE(s) if --remove (-u\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"CAUTION: Note that shred relies \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"* log-structured or journaled fi\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"* file systems that cache in tem\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"In the case of ext3 file systems\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"In addition, file system backups\u2026\", 5), stdout);\n        void* const var_88 = &data_40a35e;\n        void* const* rax_18 = &var_88;\n        void* const var_78_1 = \"coreutils\";\n        void* const var_70_1 = \"Multi-call invocation\";\n        void* const var_68_1 = \"sha224sum\";\n        void* const var_60_1 = \"sha2 utilities\";\n        void* const var_58_1 = \"sha256sum\";\n        void* const var_50_1 = \"sha2 utilities\";\n        void* const var_48_1 = \"sha384sum\";\n        void* const var_40_1 = \"sha2 utilities\";\n        void* const var_38_1 = \"sha512sum\";\n        void* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_18 = &rax_18[2];\n            void* const rdi_14 = *rax_18;\n            c_1 = false;\n            z_1 = (rdi_14 & rdi_14) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            void* const rsi_15 = \"shred\";\n            int64_t rcx_2 = 6;\n            while (rcx_2 != 0)\n            {\n                char temp0_1 = *rsi_15;\n                char temp1_1 = *rdi_14;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_15 = (rsi_15 + 1);\n                rdi_14 = (rdi_14 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        void* const rbp_1 = rax_18[1];\n        char* rax_29;\n        int32_t rax_30;\n        void* const r12_1;\n        if (rbp_1 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_5;\n            uint64_t r8_2;\n            ssize_t r9_2;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_29 = setlocale(5, nullptr, rdx_5, rcx_5, r8_2, r9_2, var_88, \"test invocation\");\n            if (rax_29 != 0)\n            {\n                rax_30 = strncmp(rax_29, &data_40a3e2, 3);\n                if (rax_30 != 0)\n                {\n                    rbp_1 = \"shred\";\n                }\n            }\n            if ((rax_29 == 0 || (rax_29 != 0 && rax_30 == 0)))\n            {\n                rbp_1 = \"shred\";\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"shred\");\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_3;\n            uint64_t r8_1;\n            ssize_t r9_1;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_21 = setlocale(5, nullptr, rdx_3, rcx_3, r8_1, r9_1, var_88, \"test invocation\");\n            if (rax_21 == 0)\n            {\n                goto label_403e00;\n            }\n            if (strncmp(rax_21, &data_40a3e2, 3) == 0)\n            {\n                goto label_403e00;\n            }\n        }\n        if ((((rbp_1 == 0 && rax_29 != 0) && rax_30 != 0) || rbp_1 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), \"shred\");\n        label_403e00:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"shred\");\n            if (rbp_1 != \"shred\")\n            {\n                r12_1 = &data_40ccb4[0x1b];\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_1, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_403f10",
            "funcStartAddr": "0x403f10",
            "funcEndAddr": "0x403f1a",
            "decompiledFuncCode": "int64_t sub_403f10() __noreturn\n{\n    /* tailcall */\n    return sub_403ac0(1);\n}\n\n"
        },
        {
            "funcName": "sub_403f20",
            "funcStartAddr": "0x403f20",
            "funcEndAddr": "0x404036",
            "decompiledFuncCode": "int64_t sub_403f20(char* arg1, int64_t* arg2, int64_t arg3, uint64_t arg4)\n{\n    int64_t rbp = arg3;\n    uint64_t rax = strlen(arg1);\n    char* r14 = *arg2;\n    int64_t var_58 = -1;\n    if (r14 != 0)\n    {\n        char var_41_1 = 0;\n        int64_t rbx_1 = 0;\n        while (true)\n        {\n            if (strncmp(r14, arg1, rax) == 0)\n            {\n                if (strlen(r14) == rax)\n                {\n                    var_58 = rbx_1;\n                    break;\n                }\n                if (var_58 == -1)\n                {\n                    var_58 = rbx_1;\n                    rbx_1 = (rbx_1 + 1);\n                    rbp = (rbp + arg4);\n                    r14 = arg2[rbx_1];\n                    if (r14 != 0)\n                    {\n                        continue;\n                    }\n                    goto label_403ffd;\n                }\n                if (arg3 == 0)\n                {\n                    var_41_1 = 1;\n                }\n                else\n                {\n                    char rax_3 = var_41_1;\n                    if (memcmp(((var_58 * arg4) + arg3), rbp, arg4) != 0)\n                    {\n                        rax_3 = 1;\n                    }\n                    var_41_1 = rax_3;\n                }\n            }\n            rbx_1 = (rbx_1 + 1);\n            rbp = (rbp + arg4);\n            r14 = arg2[rbx_1];\n            if (r14 == 0)\n            {\n            label_403ffd:\n                int64_t rax_6 = -2;\n                if (var_41_1 == 0)\n                {\n                    rax_6 = var_58;\n                }\n                var_58 = rax_6;\n                break;\n            }\n        }\n    }\n    return var_58;\n}\n\n"
        },
        {
            "funcName": "sub_404040",
            "funcStartAddr": "0x404040",
            "funcEndAddr": "0x4040b1",
            "decompiledFuncCode": "int64_t sub_404040(uint64_t arg1, uint64_t arg2, int64_t arg3)\n{\n    char* rbx;\n    if (arg3 == -1)\n    {\n        rbx = dcgettext(nullptr, \"invalid argument %s for %s\", 5);\n    }\n    else\n    {\n        rbx = dcgettext(nullptr, \"ambiguous argument %s for %s\", 5);\n    }\n    /* tailcall */\n    return error(0, 0, rbx, sub_406ab0(0, 8, arg2), sub_406dc0(1, arg1));\n}\n\n"
        },
        {
            "funcName": "sub_4040c0",
            "funcStartAddr": "0x4040c0",
            "funcEndAddr": "0x4041d8",
            "decompiledFuncCode": "char* sub_4040c0(int64_t* arg1, int64_t arg2, uint64_t arg3)\n{\n    int64_t r14 = 0;\n    int64_t rbp = arg2;\n    int64_t rbx = 0;\n    fputs_unlocked(dcgettext(nullptr, \"Valid arguments are:\", 5), stderr);\n    int64_t r12 = *arg1;\n    if (r12 != 0)\n    {\n        do\n        {\n            if ((rbx != 0 && memcmp(r14, rbp, arg3) == 0))\n            {\n                rbx = (rbx + 1);\n                rbp = (rbp + arg3);\n                __fprintf_chk(stderr, 1, \", %s\", sub_406de0(r12));\n                r12 = arg1[rbx];\n                if (r12 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = (rbx + 1);\n            r14 = rbp;\n            rbp = (rbp + arg3);\n            __fprintf_chk(stderr, 1, \"\\n  - %s\", sub_406de0(r12));\n            r12 = arg1[rbx];\n        } while (r12 != 0);\n    }\n    uint64_t* const rdi_6 = stderr;\n    char* rax_6 = stderr[5];\n    if (rax_6 >= stderr[6])\n    {\n        /* tailcall */\n        return __overflow(rdi_6, 0xa);\n    }\n    stderr[5] = &rax_6[1];\n    *rax_6 = 0xa;\n    return rax_6;\n}\n\n"
        },
        {
            "funcName": "sub_4041e0",
            "funcStartAddr": "0x4041e0",
            "funcEndAddr": "0x404250",
            "decompiledFuncCode": "int64_t sub_4041e0(int64_t arg1, char* arg2, int64_t* arg3, int64_t arg4, \n    uint64_t arg5, int64_t arg6)\n{\n    int64_t rax = sub_403f20(arg2, arg3, arg4, arg5);\n    if (rax < 0)\n    {\n        sub_404040(arg1, arg2, rax);\n        sub_4040c0(arg3, arg4, arg5);\n        arg6();\n        rax = -1;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404250",
            "funcStartAddr": "0x404250",
            "funcEndAddr": "0x40429d",
            "decompiledFuncCode": "int64_t sub_404250(int64_t arg1, int64_t* arg2, int64_t arg3, uint64_t arg4)\n{\n    int64_t r14 = *arg2;\n    if (r14 != 0)\n    {\n        void* rbx_1 = &arg2[1];\n        int64_t rbp_1 = arg3;\n        do\n        {\n            if (memcmp(arg1, rbp_1, arg4) == 0)\n            {\n                break;\n            }\n            r14 = *rbx_1;\n            rbp_1 = (rbp_1 + arg4);\n            rbx_1 = (rbx_1 + 8);\n        } while (r14 != 0);\n    }\n    return r14;\n}\n\n"
        },
        {
            "funcName": "sub_4042a0",
            "funcStartAddr": "0x4042a0",
            "funcEndAddr": "0x4042a8",
            "decompiledFuncCode": "int64_t sub_4042a0(int64_t arg1)\n{\n    data_60f3a8 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4042b0",
            "funcStartAddr": "0x4042b0",
            "funcEndAddr": "0x4042b8",
            "decompiledFuncCode": "int64_t sub_4042b0(char arg1)\n{\n    data_60f3a0 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4042c0",
            "funcStartAddr": "0x4042c0",
            "funcEndAddr": "0x40435e",
            "decompiledFuncCode": "void sub_4042c0(void* arg1)\n{\n    int32_t rax = sub_409ac0(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_60f3a0 == 0 || (data_60f3a0 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_60f3a8;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_406c30(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_60f3a0 != 0) && *rax_1 == 0x20)) && sub_409ac0(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_60f2e0);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404360",
            "funcStartAddr": "0x404360",
            "funcEndAddr": "0x404378",
            "decompiledFuncCode": "char* sub_404360(char* arg1)\n{\n    char* rax = sub_4043e0(arg1);\n    if (rax == 0)\n    {\n        sub_408490();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404380",
            "funcStartAddr": "0x404380",
            "funcEndAddr": "0x4043dd",
            "decompiledFuncCode": "void* sub_404380(char* arg1)\n{\n    int64_t rbp;\n    rbp = *arg1 == 0x2f;\n    char* rax = sub_404440(arg1);\n    void* rcx_1 = (rax - arg1);\n    if (rcx_1 > rbp)\n    {\n        void* rdx_1 = (rcx_1 - 1);\n        if (rax[-1] == 0x2f)\n        {\n            void* rax_1;\n            for (; rbp != rdx_1; rdx_1 = rax_1)\n            {\n                rax_1 = (rdx_1 - 1);\n                if (*((arg1 + rdx_1) - 1) != 0x2f)\n                {\n                    break;\n                }\n            }\n            return rdx_1;\n        }\n    }\n    return rcx_1;\n}\n\n"
        },
        {
            "funcName": "sub_4043e0",
            "funcStartAddr": "0x4043e0",
            "funcEndAddr": "0x40443a",
            "decompiledFuncCode": "char* sub_4043e0(char* arg1)\n{\n    void* rax = sub_404380(arg1);\n    void* rbx = rax;\n    rax = rax == 0;\n    char* rax_2 = malloc(((rbx + rax) + 1));\n    char* rcx = rax_2;\n    if (rax_2 != 0)\n    {\n        char* rax_3 = memcpy(rax_2, arg1, rbx);\n        rcx = rax_3;\n        if (rbx == 0)\n        {\n            *rax_3 = 0x2e;\n            rbx = 1;\n        }\n        *(rcx + rbx) = 0;\n    }\n    return rcx;\n}\n\n"
        },
        {
            "funcName": "sub_404440",
            "funcStartAddr": "0x404440",
            "funcEndAddr": "0x40449b",
            "decompiledFuncCode": "char* sub_404440(char* arg1)\n{\n    char rdx = *arg1;\n    char* rax = arg1;\n    if (rdx == 0x2f)\n    {\n        do\n        {\n            rax = &rax[1];\n            rdx = *rax;\n        } while (rdx == 0x2f);\n    }\n    if (rdx != 0)\n    {\n        char* rcx_1 = rax;\n        char rsi_1 = 0;\n        while (true)\n        {\n            if (rdx == 0x2f)\n            {\n                rcx_1 = &rcx_1[1];\n                rdx = *rcx_1;\n                rsi_1 = 1;\n                if (rdx == 0)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                if (rsi_1 != 0)\n                {\n                    rax = rcx_1;\n                    rsi_1 = 0;\n                }\n                rcx_1 = &rcx_1[1];\n                rdx = *rcx_1;\n                if (rdx == 0)\n                {\n                    break;\n                }\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4044a0",
            "funcStartAddr": "0x4044a0",
            "funcEndAddr": "0x4044cb",
            "decompiledFuncCode": "uint64_t sub_4044a0(char* arg1)\n{\n    uint64_t rax = strlen(arg1);\n    if (rax > 1)\n    {\n        while (true)\n        {\n            uint64_t rdx_1 = (rax - 1);\n            if (arg1[(rax - 1)] != 0x2f)\n            {\n                break;\n            }\n            rax = rdx_1;\n            if (rdx_1 == 1)\n            {\n                return rax;\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4044d0",
            "funcStartAddr": "0x4044d0",
            "funcEndAddr": "0x40451a",
            "decompiledFuncCode": "uint64_t sub_4044d0(char* arg1, int64_t arg2, int32_t arg3)\n{\n    uint64_t rdx = 0;\n    if ((arg2 & 0x40) != 0)\n    {\n        int32_t var_50_1 = 0x10;\n        rdx = arg3;\n        void* var_48_1 = &arg_8;\n        void var_38;\n        void* var_40_1 = &var_38;\n    }\n    return sub_407c50(open(arg1, arg2, rdx));\n}\n\n"
        },
        {
            "funcName": "sub_404520",
            "funcStartAddr": "0x404520",
            "funcEndAddr": "0x4045d7",
            "decompiledFuncCode": "long double sub_404520(int32_t arg1, uint16_t arg2 @ x87control, \n    long double arg3)\n{\n    long double x87_r7 = 9.22337204e+18f;\n    int64_t rax_1;\n    if (arg3 >= x87_r7)\n    {\n        uint16_t x87status_3;\n        int16_t temp0_2;\n        temp0_2 = __fnstcw_memmem16(arg2);\n        long double x87_r7_1 = (arg3 - x87_r7);\n        x87_r7 = arg3;\n        int16_t rax_3;\n        *rax_3[1] = (*temp0_2[1] | 0xc);\n        uint16_t x87control_2;\n        uint16_t x87status_4;\n        x87control_2 = __fldcw_memmem16(rax_3);\n        uint16_t x87control_3;\n        uint16_t x87status_5;\n        x87control_3 = __fldcw_memmem16(temp0_2);\n        rax_1 = (x87_r7_1 ^ 0x8000000000000000);\n    }\n    else\n    {\n        uint16_t x87status;\n        int16_t temp0;\n        temp0 = __fnstcw_memmem16(arg2);\n        int16_t rax;\n        *rax[1] = (*temp0[1] | 0xc);\n        uint16_t x87control;\n        uint16_t x87status_1;\n        x87control = __fldcw_memmem16(rax);\n        uint16_t x87control_1;\n        uint16_t x87status_2;\n        x87control_1 = __fldcw_memmem16(temp0);\n        rax_1 = x87_r7;\n    }\n    long double x87_r6_2 = rax_1;\n    if (rax_1 < 0)\n    {\n        x87_r6_2 = (x87_r6_2 + 1.84467441e+19f);\n    }\n    if (arg1 == 0)\n    {\n        long double x87_r6_3 = x87_r7;\n        x87_r7 = x87_r6_2;\n        (x87_r6_3 - x87_r7);\n        if (((FCMP_UO(x87_r6_3, x87_r7)) || ((!(FCMP_UO(x87_r6_3, x87_r7))) && (!x87_r6_3 == x87_r7))))\n        {\n            x87_r7 = (rax_1 + 1);\n            if ((rax_1 + 1) < 0)\n            {\n                return (x87_r7 + 1.84467441e+19f);\n            }\n        }\n    }\n    return x87_r7;\n}\n\n"
        },
        {
            "funcName": "sub_4045e0",
            "funcStartAddr": "0x4045e0",
            "funcEndAddr": "0x404fae",
            "decompiledFuncCode": "void sub_4045e0(int64_t arg1, char* arg2, int32_t arg3, int64_t arg4, \n    int64_t arg5)\n{\n    int32_t rax_1 = (arg3 & 0x20);\n    int32_t rcx_1 = (arg3 & 3);\n    int32_t rax_4 = (((rax_1 - rax_1) & 0xffffffe8) + 0x400);\n    struct lconv* rax_5 = localeconv();\n    char* r15 = rax_5->decimal_point;\n    uint64_t rax_6 = strlen(r15);\n    uint64_t r8 = rax_6;\n    bool cond:1 = (rax_6 - 1) >= 0x10;\n    if ((rax_6 - 1) >= 0x10)\n    {\n        r15 = \".\";\n    }\n    char* rax_8 = rax_5->grouping;\n    char* r12_1 = rax_5->thousands_sep;\n    if (cond:1)\n    {\n        r8 = 1;\n    }\n    uint64_t r8_1 = r8;\n    if (strlen(r12_1) >= 0x11)\n    {\n        r12_1 = &data_40ccb4[0x1b];\n    }\n    void* var_a8 = &arg2[0x287];\n    int32_t rcx_8;\n    int64_t rdx;\n    int32_t rbx_1;\n    uint64_t rsi_1;\n    uint32_t rdi_15;\n    uint32_t r9_1;\n    uint64_t temp0_1;\n    void* r14_3;\n    void* r15_5;\n    if (arg5 <= arg4)\n    {\n        rdx = 0;\n        temp0_1 = (COMBINE(rdx, arg4) / arg5);\n        if ((COMBINE(rdx, arg4) % arg5) != 0)\n        {\n            goto label_4046ca;\n        }\n        rsi_1 = (temp0_1 * arg1);\n        if ((COMBINE(0, rsi_1) / temp0_1) != arg1)\n        {\n            goto label_4046ca;\n        }\n        rdi_15 = 0;\n        r9_1 = 0;\n        rcx_8 = (arg3 & 0x10);\n        if (rcx_8 == 0)\n        {\n        label_404c3a:\n            rbx_1 = -1;\n        label_404996:\n            r14_3 = var_a8;\n            if (rcx_1 == 1)\n            {\n                if ((r9_1 + (rsi_1 & 1) != (-rdi_15)) > 5)\n                {\n                    r14_3 = var_a8;\n                label_4049b1:\n                    rsi_1 = (rsi_1 + 1);\n                    if (rcx_8 == 0)\n                    {\n                        goto label_4049da;\n                    }\n                    if (rax_4 != rsi_1)\n                    {\n                        goto label_4049da;\n                    }\n                    if (rbx_1 == 8)\n                    {\n                        goto label_4049da;\n                    }\n                    rbx_1 = (rbx_1 + 1);\n                    if ((arg3 & 8) == 0)\n                    {\n                        *(r14_3 - 1) = 0x30;\n                        r14_3 = (r14_3 + (!r8_1));\n                        uint64_t rax_67 = r8_1;\n                        if (r8_1 >= 8)\n                        {\n                            void* rcx_21 = ((r14_3 + 8) & 0xfffffffffffffff8);\n                            *r14_3 = *r15;\n                            uint64_t rax_69 = r8_1;\n                            *((r14_3 + rax_69) - 8) = *((r15 + rax_69) - 8);\n                            void* rax_71 = (r14_3 - rcx_21);\n                            int64_t* r15_8 = (r15 - rax_71);\n                            int32_t rax_73 = ((rax_71 + r8_1) & 0xfffffff8);\n                            if (rax_73 >= 8)\n                            {\n                                int32_t rax_74 = (rax_73 & 0xfffffff8);\n                                int32_t rdx_37 = 0;\n                                do\n                                {\n                                    uint64_t rsi_11 = rdx_37;\n                                    rdx_37 = (rdx_37 + 8);\n                                    *(rcx_21 + rsi_11) = *(r15_8 + rsi_11);\n                                } while (rdx_37 < rax_74);\n                            }\n                        }\n                        else if ((r8_1 & 4) != 0)\n                        {\n                            *r14_3 = *r15;\n                            *((r14_3 + rax_67) - 4) = *((r15 + rax_67) - 4);\n                        }\n                        else if (rax_67 != 0)\n                        {\n                            *r14_3 = *r15;\n                            if ((rax_67 & 2) != 0)\n                            {\n                                *((r14_3 + rax_67) - 2) = *((r15 + rax_67) - 2);\n                            }\n                        }\n                    }\n                    r15_5 = (r14_3 - 1);\n                    *(r14_3 - 1) = 0x31;\n                }\n                else\n                {\n                label_4049da:\n                    r15_5 = r14_3;\n                    while (true)\n                    {\n                        r15_5 = (r15_5 - 1);\n                        int64_t rax_35;\n                        int64_t rdx_12;\n                        rdx_12 = HIGHD((rsi_1 * -0x3333333333333333));\n                        rax_35 = LOWD((rsi_1 * -0x3333333333333333));\n                        uint64_t rdx_13 = (rdx_12 >> 3);\n                        char rax_36 = (rdx_13 + (rdx_13 << 2));\n                        *r15_5 = ((rsi_1 - (rax_36 + rax_36)) + 0x30);\n                        if (rsi_1 <= 9)\n                        {\n                            break;\n                        }\n                        rsi_1 = rdx_13;\n                    }\n                    if ((arg3 & 4) != 0)\n                    {\n                    label_404a25:\n                        uint64_t rax_40 = strlen(r12_1);\n                        uint64_t rbp_4 = (r14_3 - r15_5);\n                        void var_68;\n                        __memcpy_chk(&var_68, r15_5, rbp_4, 0x29);\n                        char* r15_6 = rax_8;\n                        uint64_t rbx_4 = rbp_4;\n                        uint64_t rbp_5 = -1;\n                        while (true)\n                        {\n                            char rdx_15 = *r15_6;\n                            if (rdx_15 != 0)\n                            {\n                                uint64_t rax_41 = rdx_15;\n                                if (rdx_15 >= 0x7f)\n                                {\n                                    rax_41 = rbx_4;\n                                }\n                                r15_6 = &r15_6[1];\n                                rbp_5 = rax_41;\n                            }\n                            if (rbp_5 > rbx_4)\n                            {\n                                memcpy((r14_3 - rbx_4), &var_68, rbx_4);\n                                break;\n                            }\n                            void* r14_4 = (r14_3 - rbp_5);\n                            rbx_4 = (rbx_4 - rbp_5);\n                            memcpy(r14_4, (&var_68 + rbx_4), rbp_5);\n                            if (rbx_4 == 0)\n                            {\n                                break;\n                            }\n                            r14_3 = (r14_4 - rax_40);\n                            memcpy(r14_3, r12_1, rax_40);\n                        }\n                    }\n                }\n            }\n        }\n        else\n        {\n        label_40497e:\n            uint64_t r10_1 = rax_4;\n            rbx_1 = 0;\n            int32_t rbp_2 = r10_1;\n            if (r10_1 > rsi_1)\n            {\n                goto label_404996;\n            }\n            uint32_t rax_49;\n            int32_t rdx_24;\n            uint64_t temp0_8;\n            do\n            {\n                int64_t rdx_21 = 0;\n                temp0_8 = (COMBINE(rdx_21, rsi_1) / r10_1);\n                uint32_t rax_48 = (r9_1 + (((COMBINE(rdx_21, rsi_1) % r10_1) * 5) << 1));\n                rax_49 = (COMBINE(0, rax_48) / rbp_2);\n                rdx_24 = ((rdi_15 >> 1) + ((COMBINE(0, rax_48) % rbp_2) << 1));\n                r9_1 = rax_49;\n                rsi_1 = temp0_8;\n                int32_t rdi_26 = (rdi_15 + rdx_24);\n                if (rbp_2 > rdx_24)\n                {\n                    rdi_26 = rdi_26 != 0;\n                    rdi_15 = rdi_26;\n                }\n                else\n                {\n                    rdi_26 = rbp_2 < rdi_26;\n                    rdi_15 = (rdi_26 + 2);\n                }\n                rbx_1 = (rbx_1 + 1);\n                if (r10_1 > temp0_8)\n                {\n                    break;\n                }\n            } while (rbx_1 != 8);\n            if (r10_1 <= temp0_8)\n            {\n                goto label_404996;\n            }\n            if (temp0_8 > 9)\n            {\n                goto label_404996;\n            }\n            int32_t rdx_27;\n            if (rcx_1 == 1)\n            {\n                rdx_27 = ((rax_49 & 1) + rdi_15) > 2;\n            }\n            else\n            {\n                rdx_24 = rcx_1 == 0;\n                r9_1 = rdi_15 > 0;\n                rdx_27 = (rdx_24 & r9_1);\n            }\n            if (rdx_27 == 0)\n            {\n                if (rax_49 != 0)\n                {\n                    goto label_404e48;\n                }\n                goto label_404db7;\n            }\n            rax_49 = (rax_49 + 1);\n            char rax_56;\n            if (rax_49 != 0xa)\n            {\n            label_404e48:\n                rax_56 = (rax_49 + 0x30);\n            label_404dd3:\n                arg2[0x286] = rax_56;\n                uint64_t rax_57 = r8_1;\n                r14_3 = (&arg2[0x286] - r8_1);\n                if (r8_1 >= 8)\n                {\n                    void* r9_5 = ((r14_3 + 8) & 0xfffffffffffffff8);\n                    *r14_3 = *r15;\n                    uint64_t rax_59 = r8_1;\n                    *((r14_3 + rax_59) - 8) = *((r15 + rax_59) - 8);\n                    void* rax_61 = (r14_3 - r9_5);\n                    void* r10_4 = (r15 - rax_61);\n                    int32_t rax_63 = ((rax_61 + r8_1) & 0xfffffff8);\n                    if (rax_63 >= 8)\n                    {\n                        int32_t rax_64 = (rax_63 & 0xfffffff8);\n                        int32_t rdx_33 = 0;\n                        do\n                        {\n                            uint64_t rdi_33 = rdx_33;\n                            rdx_33 = (rdx_33 + 8);\n                            *(r9_5 + rdi_33) = *(r10_4 + rdi_33);\n                        } while (rdx_33 < rax_64);\n                    }\n                }\n                else if ((r8_1 & 4) != 0)\n                {\n                    *r14_3 = *r15;\n                    *((r14_3 + rax_57) - 4) = *((r15 + rax_57) - 4);\n                }\n                else if (rax_57 != 0)\n                {\n                    *r14_3 = *r15;\n                    if ((rax_57 & 2) != 0)\n                    {\n                        *((r14_3 + rax_57) - 2) = *((r15 + rax_57) - 2);\n                    }\n                }\n                goto label_404dfe;\n            }\n            rsi_1 = (temp0_8 + 1);\n            if (rsi_1 == 0xa)\n            {\n                r14_3 = var_a8;\n            label_404dfe:\n                rdi_15 = 0;\n            }\n            else\n            {\n                rdi_15 = 0;\n            label_404db7:\n                r14_3 = var_a8;\n                if ((arg3 & 8) == 0)\n                {\n                    rax_56 = 0x30;\n                    goto label_404dd3;\n                }\n            }\n            if (rcx_1 == 1)\n            {\n                goto label_4049da;\n            }\n            r9_1 = 0;\n        }\n        if (((rcx_8 == 0 && rcx_1 != 1) || rcx_8 != 0))\n        {\n            if (rcx_1 != 0)\n            {\n                goto label_4049da;\n            }\n            if ((rdi_15 + r9_1) <= 0)\n            {\n                goto label_4049da;\n            }\n            goto label_4049b1;\n        }\n    }\n    else\n    {\n        if (arg4 != 0)\n        {\n            int64_t rdx_5 = 0;\n            uint64_t temp0_5 = (COMBINE(rdx_5, arg5) / arg4);\n            if ((COMBINE(rdx_5, arg5) % arg4) != 0)\n            {\n                goto label_4046ca;\n            }\n            int64_t rdx_7 = 0;\n            uint64_t rax_30 = ((COMBINE(rdx_7, arg1) % temp0_5) * 5);\n            int64_t rdx_9 = 0;\n            uint64_t rax_31 = (rax_30 + rax_30);\n            rsi_1 = (COMBINE(rdx_7, arg1) / temp0_5);\n            uint64_t temp1_5 = (COMBINE(rdx_9, rax_31) % temp0_5);\n            uint64_t rdx_11 = (temp1_5 + temp1_5);\n            r9_1 = (COMBINE(rdx_9, rax_31) / temp0_5);\n            bool c_1 = temp0_5 < rdx_11;\n            if ((temp0_5 == rdx_11 || c_1))\n            {\n                rdi_15 = (c_1 + 2);\n            }\n            else\n            {\n                rdi_15 = rdx_11 != 0;\n            }\n            rcx_8 = (arg3 & 0x10);\n            if (rcx_8 != 0)\n            {\n                goto label_40497e;\n            }\n            goto label_404c3a;\n        }\n    label_4046ca:\n        long double x87_r7_1 = arg4;\n        if (arg4 < 0)\n        {\n            x87_r7_1 = (x87_r7_1 + 1.84467441e+19f);\n        }\n        long double x87_r6_1 = arg5;\n        long double x87_r6_2;\n        long double x87_r7_2;\n        if (arg5 < 0)\n        {\n            x87_r7_2 = (x87_r7_1 / (x87_r6_1 + 1.84467441e+19f));\n            x87_r6_2 = arg1;\n        }\n        else\n        {\n            x87_r7_2 = (x87_r7_1 / x87_r6_1);\n            x87_r6_2 = arg1;\n        }\n        uint64_t rax_18;\n        uint64_t r14_2;\n        uint16_t x87control;\n        long double x87_r7_3;\n        if (((arg5 < 0 && arg1 >= 0) || (arg5 >= 0 && arg1 >= 0)))\n        {\n            x87_r7_3 = (x87_r7_2 * x87_r6_2);\n            if ((arg3 & 0x10) != 0)\n            {\n            label_40470f:\n                long double x87_r6_3 = rax_4;\n                rbx_1 = 0;\n                long double x87_r5_1 = x87_r6_3;\n                while (true)\n                {\n                    rbx_1 = (rbx_1 + 1);\n                    long double x87_r7_4 = (x87_r5_1 * x87_r6_3);\n                    if (x87_r7_3 < x87_r7_4)\n                    {\n                        break;\n                    }\n                    if (rbx_1 == 8)\n                    {\n                        break;\n                    }\n                    x87_r6_3 = x87_r7_3;\n                    int64_t temp0_3 = x87_r5_1;\n                    x87_r5_1 = x87_r7_4;\n                    x87_r7_3 = temp0_3;\n                }\n                int64_t r14_1 = (r8_1 + 1);\n                long double x87_r7_7 = (x87_r6_3 / x87_r6_3);\n                int64_t rax_16;\n                rax_16 = rax_1 == 0;\n                int64_t r15_1 = ((r14_1 + rax_16) + 1);\n                int64_t var_88_3;\n                long double x87_r6_6;\n                long double x87_r7_8;\n                long double x87_r7_9;\n                if (rcx_1 == 1)\n                {\n                    long double var_b8_7 = x87_r7_7;\n                    var_88_3 = x87_r7_7;\n                    __sprintf_chk(arg2, 1, -1, \"%.1Lf\");\n                    rax_18 = strlen(arg2);\n                    x87_r7_8 = var_88_3;\n                    if (rax_18 > r15_1)\n                    {\n                        x87_r6_6 = 10f;\n                        x87_r7_9 = (x87_r7_8 * x87_r6_6);\n                    label_404807:\n                        int64_t var_b8_3 = (x87_r7_9 / x87_r6_6);\n                        __sprintf_chk(arg2, 1, -1, \"%.0Lf\");\n                        rax_18 = strlen(arg2);\n                        r14_2 = rax_18;\n                    }\n                }\n                else\n                {\n                    long double x87_r6_5;\n                    if (data_40b6d0 > x87_r7_7)\n                    {\n                        var_88_3 = x87_r7_7;\n                        long double st0_3;\n                        st0_3 = sub_404520(rcx_1, x87control, x87_r7_7);\n                        x87_r7_7 = st0_3;\n                        x87_r6_5 = var_88_3;\n                    }\n                    else\n                    {\n                        x87_r6_5 = x87_r7_7;\n                    }\n                    var_88_3 = x87_r6_5;\n                    long double var_b8_1 = x87_r7_7;\n                    __sprintf_chk(arg2, 1, -1, \"%.1Lf\");\n                    rax_18 = strlen(arg2);\n                    x87_r7_8 = var_88_3;\n                    if (rax_18 > r15_1)\n                    {\n                        x87_r6_6 = 10f;\n                        x87_r7_9 = (x87_r7_8 * x87_r6_6);\n                    }\n                }\n                if (((rcx_1 == 1 && rax_18 <= r15_1) || (rcx_1 != 1 && rax_18 <= r15_1)))\n                {\n                    if (((arg3 & 8) == 0 || ((arg3 & 8) != 0 && arg2[(rax_18 - 1)] != 0x30)))\n                    {\n                        r14_2 = (rax_18 - r14_1);\n                    }\n                    if (((arg3 & 8) != 0 && arg2[(rax_18 - 1)] == 0x30))\n                    {\n                        x87_r6_6 = 10f;\n                        x87_r7_9 = (x87_r7_8 * x87_r6_6);\n                        if (rcx_1 == 1)\n                        {\n                            goto label_404807;\n                        }\n                    }\n                }\n                if (((rcx_1 != 1 && rax_18 > r15_1) || ((((rcx_1 == 1 && rax_18 <= r15_1) || (rcx_1 != 1 && rax_18 <= r15_1)) && (arg3 & 8) != 0) && arg2[(rax_18 - 1)] == 0x30)))\n                {\n                    if (data_40b6d0 <= x87_r7_9)\n                    {\n                        goto label_404807;\n                    }\n                    var_88_3 = x87_r6_6;\n                    x87_r7_9 = sub_404520(rcx_1, x87control, x87_r7_9);\n                    x87_r6_6 = var_88_3;\n                    goto label_404807;\n                }\n                goto label_40487c;\n            }\n        }\n        if (((arg5 < 0 && arg1 < 0) || (arg5 >= 0 && arg1 < 0)))\n        {\n            x87_r7_3 = (x87_r7_2 * (x87_r6_2 + 1.84467441e+19f));\n            if ((arg3 & 0x10) != 0)\n            {\n                goto label_40470f;\n            }\n        }\n        if (rcx_1 != 1)\n        {\n            if (data_40b6d0 > x87_r7_3)\n            {\n                long double var_b8_5 = x87_r7_3;\n                x87_r7_3 = sub_404520(rcx_1, x87control, var_b8_5);\n                r8_1 = var_b8_5;\n            }\n            goto label_404853;\n        }\n    label_404853:\n        long double var_b8_4 = x87_r7_3;\n        __sprintf_chk(arg2, 1, -1, \"%.0Lf\", r8_1);\n        rbx_1 = -1;\n        rax_18 = strlen(arg2);\n        r14_2 = rax_18;\n    label_40487c:\n        r15_5 = (var_a8 - rax_18);\n        r14_3 = (r14_2 + r15_5);\n        memmove(r15_5, arg2, rax_18);\n    }\n    if (((((((((arg5 <= arg4 && (COMBINE(rdx, arg4) % arg5) == 0) && (COMBINE(0, rsi_1) / temp0_1) == arg1) && rcx_8 == 0) && rcx_1 == 1) && (r9_1 + (rsi_1 & 1) != (-rdi_15)) > 5) || arg5 > arg4) && (arg3 & 4) == 0) || (((((arg5 <= arg4 && (COMBINE(rdx, arg4) % arg5) == 0) && (COMBINE(0, rsi_1) / temp0_1) == arg1) && rcx_8 == 0) && rcx_1 == 1) && (r9_1 + (rsi_1 & 1) != (-rdi_15)) <= 5)))\n    {\n        if ((arg3 & 0x80) == 0)\n        {\n        label_4048bc:\n            *var_a8 = 0;\n            return;\n        }\n        if ((rbx_1 == 0xffffffff && arg5 <= 1))\n        {\n            rbx_1 = 0;\n        }\n        int32_t rax_23;\n        void* rdx_20;\n        if (((rbx_1 == 0xffffffff && arg5 <= 1) || rbx_1 != 0xffffffff))\n        {\n            rax_23 = (arg3 & 0x100);\n            if ((rax_23 | rbx_1) != 0)\n            {\n                if ((arg3 & 0x40) != 0)\n                {\n                label_404b2d:\n                    arg2[0x287] = 0x20;\n                    var_a8 = &arg2[0x288];\n                }\n                if (rbx_1 == 0)\n                {\n                    rdx_20 = var_a8;\n                    if (rax_23 != 0)\n                    {\n                    label_404b81:\n                        *rdx_20 = 0x42;\n                        var_a8 = (rdx_20 + 1);\n                    }\n                }\n            }\n        }\n        if ((rbx_1 == 0xffffffff && arg5 > 1))\n        {\n            uint64_t rdx_19 = rax_4;\n            rbx_1 = 1;\n            int64_t rax_42 = 1;\n            do\n            {\n                rax_42 = (rax_42 * rdx_19);\n                if (arg5 <= rax_42)\n                {\n                    break;\n                }\n                rbx_1 = (rbx_1 + 1);\n            } while (rbx_1 != 8);\n            rax_23 = (arg3 & 0x100);\n            if ((arg3 & 0x40) != 0)\n            {\n                goto label_404b2d;\n            }\n        }\n        if ((((((rbx_1 == 0xffffffff && arg5 <= 1) || rbx_1 != 0xffffffff) && (rax_23 | rbx_1) != 0) && rbx_1 != 0) || (rbx_1 == 0xffffffff && arg5 > 1)))\n        {\n            if (rax_1 == 0)\n            {\n                if (rbx_1 != 1)\n                {\n                    goto label_404b56;\n                }\n                rdx_20 = (var_a8 + 1);\n                *var_a8 = 0x6b;\n                if (rax_23 != 0)\n                {\n                    goto label_404b81;\n                }\n                goto label_404d73;\n            }\n        label_404b56:\n            char* rdi_25 = var_a8;\n            rdx_20 = &rdi_25[1];\n            *rdi_25 = *(rbx_1 + 0x40b6b8);\n            if (rax_23 != 0)\n            {\n                if (rax_1 != 0)\n                {\n                    rdx_20 = &rdi_25[2];\n                    rdi_25[1] = 0x69;\n                }\n                goto label_404b81;\n            }\n        label_404d73:\n            var_a8 = rdx_20;\n        }\n        goto label_4048bc;\n    }\n    if ((((((((arg5 <= arg4 && (COMBINE(rdx, arg4) % arg5) == 0) && (COMBINE(0, rsi_1) / temp0_1) == arg1) && rcx_8 == 0) && rcx_1 == 1) && (r9_1 + (rsi_1 & 1) != (-rdi_15)) > 5) || arg5 > arg4) && (arg3 & 4) != 0))\n    {\n        goto label_404a25;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_404fb0",
            "funcStartAddr": "0x404fb0",
            "funcEndAddr": "0x405167",
            "decompiledFuncCode": "uint64_t sub_404fb0(char* arg1, int32_t* arg2, int64_t* arg3)\n{\n    char* rbx = arg1;\n    uint64_t rax_3;\n    char* rax_9;\n    char* rax_10;\n    if (arg1 == 0)\n    {\n        rax_9 = getenv(\"BLOCK_SIZE\");\n        rbx = rax_9;\n        if (rax_9 == 0)\n        {\n            rax_10 = getenv(\"BLOCKSIZE\");\n            rbx = rax_10;\n            if (rax_10 == 0)\n            {\n                rax_3 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_3 == 0)\n                {\n                    *arg3 = 0x400;\n                    *arg2 = 0;\n                }\n                else\n                {\n                    *arg3 = 0x200;\n                    rax_3 = 0;\n                    *arg2 = 0;\n                }\n            }\n        }\n    }\n    if (((arg1 != 0 || (arg1 == 0 && rax_9 != 0)) || ((arg1 == 0 && rax_9 == 0) && rax_10 != 0)))\n    {\n        int32_t rbp_1 = 0;\n        if (*rbx == 0x27)\n        {\n            rbx = &rbx[1];\n            rbp_1 = 4;\n        }\n        int32_t rax_1 = sub_403f20(rbx, &data_40b6a0, 0x40b690, 4);\n        if (rax_1 >= 0)\n        {\n            *arg3 = 1;\n            rax_3 = 0;\n            *arg2 = (rbp_1 | *((rax_1 << 2) + 0x40b690));\n        }\n        else\n        {\n            void* var_30;\n            rax_3 = sub_4085d0(rbx, &var_30, 0, arg3, \"eEgGkKmMpPtTyYzZ0\");\n            int64_t rdx_2;\n            if (rax_3 != 0)\n            {\n                *arg2 = 0;\n                rdx_2 = *arg3;\n            }\n            else\n            {\n                if ((*rbx - 0x30) > 9)\n                {\n                    void* rcx_2 = var_30;\n                    if (rbx != rcx_2)\n                    {\n                        do\n                        {\n                            rbx = &rbx[1];\n                            if ((*rbx - 0x30) <= 9)\n                            {\n                                break;\n                            }\n                        } while (rbx != rcx_2);\n                    }\n                    if ((rbx == rcx_2 || (rbx != rcx_2 && (*rbx - 0x30) > 9)))\n                    {\n                        if (*(rcx_2 - 1) == 0x42)\n                        {\n                            rbp_1 = (rbp_1 | 0x180);\n                        }\n                        else\n                        {\n                            rbp_1 = (rbp_1 | 0x80);\n                        }\n                        if ((*(rcx_2 - 1) != 0x42 || (*(rcx_2 - 1) == 0x42 && *(rcx_2 - 2) == 0x69)))\n                        {\n                            rbp_1 = (rbp_1 | 0x20);\n                        }\n                    }\n                }\n                rdx_2 = *arg3;\n                *arg2 = rbp_1;\n            }\n            if (rdx_2 == 0)\n            {\n                char* rax_4 = getenv(\"POSIXLY_CORRECT\");\n                *arg3 = (((rax_4 - rax_4) & 0x200) + 0x200);\n                return 4;\n            }\n        }\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_405170",
            "funcStartAddr": "0x405170",
            "funcEndAddr": "0x4051b8",
            "decompiledFuncCode": "void* sub_405170(uint64_t arg1, void* arg2)\n{\n    void* rcx = (arg2 + 0x14);\n    *(arg2 + 0x14) = 0;\n    while (true)\n    {\n        rcx = (rcx - 1);\n        int64_t rax_2;\n        int64_t rdx_1;\n        rdx_1 = HIGHD((arg1 * -0x3333333333333333));\n        rax_2 = LOWD((arg1 * -0x3333333333333333));\n        uint64_t rdx_2 = (rdx_1 >> 3);\n        char rax_3 = (rdx_2 + (rdx_2 << 2));\n        *rcx = ((arg1 - (rax_3 + rax_3)) + 0x30);\n        if (arg1 <= 9)\n        {\n            break;\n        }\n        arg1 = rdx_2;\n    }\n    return rcx;\n}\n\n"
        },
        {
            "funcName": "sub_4051c0",
            "funcStartAddr": "0x4051c0",
            "funcEndAddr": "0x405259",
            "decompiledFuncCode": "char* sub_4051c0(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_40b720;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_60f3b0 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405260",
            "funcStartAddr": "0x405260",
            "funcEndAddr": "0x405352",
            "decompiledFuncCode": "char* sub_405260(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_409c20();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_405341:\n                void* const rbx_1 = &data_40b724;\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_405341;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_405341;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_405341;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_405341;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_405341;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_405341;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_405341;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_40b72d;\n            if (cond:2_1)\n            {\n                rbx = &data_40b72a;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_405341;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_405341;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_405341;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_405341;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_405341;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_40b731;\n            if (cond:1_1)\n            {\n                rbx = &data_40b726;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_405360",
            "funcStartAddr": "0x402070",
            "funcEndAddr": "0x406581",
            "decompiledFuncCode": "int64_t sub_405360(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    char const* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n    label_4053f8:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_40576c:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_4057b4;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_405360(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char const rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_4057cb;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_405905;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_405555;\n                            }\n                            goto label_405840;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_405905;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_405730;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_405730:\n                            if (var_c0 == 0)\n                            {\n                                goto label_40573b;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_405597:\n                            if (var_5c == 0)\n                            {\n                                goto label_4055a8;\n                            }\n                        label_405760:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_405768;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_40599b;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_40599b:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_4059aa:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_40576c;\n                            }\n                            goto label_405730;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_405730;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_405730;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_40599b;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_405536;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_405536:\n                            if (var_5c == 0)\n                            {\n                                goto label_405555;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_405555;\n                            }\n                            goto label_4059aa;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_40552d:\n                            if (r12_1 != 0)\n                            {\n                                goto label_40573b;\n                            }\n                            goto label_405536;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_405960:\n                            rdx = r11_1 == 2;\n                        label_405555:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_40565c;\n                            }\n                            goto label_40555f;\n                        }\n                        case 0x27:\n                        {\n                            goto label_4056dd;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_4056ad;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_40570a;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_40649d;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_405674;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_405509;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_405b00;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_405b00;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_406450:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_4057b4:\n                            rbx_1 = sub_405360(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_4057cb:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_405905;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_405857;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_405905;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_405820:\n                                r13 = 0;\n                                goto label_4055db;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_4055a8:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_4055db:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_4055e5;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_4055e5:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_4055ed;\n                            }\n                            case 9:\n                            {\n                                goto label_4057d0;\n                            }\n                            case 0xa:\n                            {\n                                goto label_405748;\n                            }\n                            case 0xb:\n                            {\n                                goto label_405830;\n                            }\n                            case 0xc:\n                            {\n                                goto label_405810;\n                            }\n                            case 0xd:\n                            {\n                                goto label_4057f9;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_405b5a;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_4057e5;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_405b3a;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_405b22;\n                            }\n                            case 0x27:\n                            {\n                                goto label_4056dd;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_4056ad;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_40570a;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_405509;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_405b00:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_405900:\n                            var_b8 = 0;\n                        label_405905:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_405954:\n                                if (rdx == 0)\n                                {\n                                    goto label_405960;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_405e51:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_405674;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_40576c;\n                                }\n                                r13 = var_98;\n                                goto label_4055ed;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_409a40(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_40576c;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_405e51;\n                            }\n                            goto label_405954;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_405840:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_40576c;\n                                }\n                                var_b8 = 0;\n                            label_405857:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_4058a2;\n                                    }\n                                    rax_8 = r10;\n                                label_40589a:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_4058a2:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_40565c;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_4058e3;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_40589a;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_40565c;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_405900;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_405815;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_40574d;\n                            }\n                            case 9:\n                            {\n                            label_4057d0:\n                                rbp_3 = 0x74;\n                                goto label_40574d;\n                            }\n                            case 0xa:\n                            {\n                            label_405748:\n                                rbp_3 = 0x6e;\n                            label_40574d:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_405760;\n                                }\n                                goto label_4055a8;\n                            }\n                            case 0xb:\n                            {\n                            label_405830:\n                                rbp_3 = 0x76;\n                                goto label_405815;\n                            }\n                            case 0xc:\n                            {\n                            label_405810:\n                                rbp_3 = 0x66;\n                            label_405815:\n                                if (var_5c == 0)\n                                {\n                                    goto label_405820;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_405768:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_40576c;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_4057f9:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_405730;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_405b5a:\n                                rbp_3 = 0x20;\n                                goto label_405b22;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_4057e5:\n                                rdx = 0;\n                            label_40573b:\n                                r13 = 0;\n                                goto label_405555;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_405b3a:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_405555;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_40555f:\n                                rax_8 = 0;\n                                goto label_405561;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_405b22:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_405561;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_4056dd:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_405555;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_40649d;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_40565c;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_4056ad:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_40649d:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_40576c;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_40565c:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_405597;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_405674;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_405555;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_405c40:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_405555;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_405c40;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_405c40;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_405c40;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_405c40;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_406450;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_4058e3:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_40565c;\n                                }\n                            label_405561:\n                                if (arg7 == 0)\n                                {\n                                    goto label_40565c;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_40565c;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_405597;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_40570a:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_405730;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_405674:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_4055ed;\n                                }\n                            label_4055ed:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_4055f6;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_4055f6:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_405509:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_40573b;\n                                }\n                                goto label_40552d;\n                            }\n                        }\n                    }\n                }\n            }\n        label_405be6:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = \"'\";\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_4053f8;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = \"'\";\n                goto label_4053f8;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"'\";\n            goto label_4053f8;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40b724;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40b724;\n            }\n            goto label_4053f8;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_40b724;\n            goto label_4053f8;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_4053f8;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_405260(&data_40b735, r13);\n                arg9 = sub_405260(\"'\", r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_4053f8;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_405be6;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n        goto label_4053f8;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_406590",
            "funcStartAddr": "0x402075",
            "funcEndAddr": "0x40672e",
            "decompiledFuncCode": "char* sub_406590(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_60f338;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_60f350 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_408490();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x60f340)\n        {\n            int64_t rax_9 = sub_4082a0(0, rsi_1);\n            int128_t zmm0 = data_60f340;\n            rbx = rax_9;\n            data_60f338 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_4082a0(rbx, rsi_1);\n            data_60f338 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_60f350;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_60f350 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_405360(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        size_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x60f3c0)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_408240(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_405360(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_406730",
            "funcStartAddr": "0x406730",
            "funcEndAddr": "0x406764",
            "decompiledFuncCode": "int64_t sub_406730(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x60f4c0;\n    }\n    int64_t rax_1 = sub_408440(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_406770",
            "funcStartAddr": "0x406770",
            "funcEndAddr": "0x40677f",
            "decompiledFuncCode": "uint64_t sub_406770(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60f4c0;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_406780",
            "funcStartAddr": "0x406780",
            "funcEndAddr": "0x40678f",
            "decompiledFuncCode": "void sub_406780(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60f4c0;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_406790",
            "funcStartAddr": "0x406790",
            "funcEndAddr": "0x4067c3",
            "decompiledFuncCode": "uint64_t sub_406790(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x60f4c0;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_4067d0",
            "funcStartAddr": "0x4067d0",
            "funcEndAddr": "0x4067e3",
            "decompiledFuncCode": "uint64_t sub_4067d0(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60f4c0;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4067f0",
            "funcStartAddr": "0x4067f0",
            "funcEndAddr": "0x40681b",
            "decompiledFuncCode": "void sub_4067f0(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60f4c0;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x60f4c0;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_406820",
            "funcStartAddr": "0x406820",
            "funcEndAddr": "0x406892",
            "decompiledFuncCode": "int64_t sub_406820(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_60f4c0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_405360(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_4068a0",
            "funcStartAddr": "0x4068a0",
            "funcEndAddr": "0x406981",
            "decompiledFuncCode": "char* sub_4068a0(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_60f4c0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_405360(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_408240((rax_2 + 1));\n    sub_405360(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_406990",
            "funcStartAddr": "0x406990",
            "funcEndAddr": "0x40699a",
            "decompiledFuncCode": "int64_t sub_406990(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_4068a0(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_4069a0",
            "funcStartAddr": "0x4069a0",
            "funcEndAddr": "0x406a35",
            "decompiledFuncCode": "uint64_t sub_4069a0()\n{\n    uint64_t rax_2 = data_60f350;\n    int64_t r12 = data_60f338;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x60f3c0)\n    {\n        rax_2 = free(rdi_2);\n        *data_60f340 = 0x100;\n        *(data_60f340 + 8) = 0x60f3c0;\n    }\n    if (r12 != 0x60f340)\n    {\n        rax_2 = free(r12);\n        data_60f338 = 0x60f340;\n    }\n    data_60f350 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_406a40",
            "funcStartAddr": "0x406a40",
            "funcEndAddr": "0x406a51",
            "decompiledFuncCode": "int64_t sub_406a40(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_406590(arg1, arg2, -1, &data_60f4c0);\n}\n\n"
        },
        {
            "funcName": "sub_406a60",
            "funcStartAddr": "0x406a60",
            "funcEndAddr": "0x406a6a",
            "decompiledFuncCode": "int64_t sub_406a60(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_406590(arg1, arg2, arg3, &data_60f4c0);\n}\n\n"
        },
        {
            "funcName": "sub_406a70",
            "funcStartAddr": "0x406a70",
            "funcEndAddr": "0x406a86",
            "decompiledFuncCode": "int64_t sub_406a70(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_406590(0, arg1, -1, &data_60f4c0);\n}\n\n"
        },
        {
            "funcName": "sub_406a90",
            "funcStartAddr": "0x406a90",
            "funcEndAddr": "0x406aa2",
            "decompiledFuncCode": "int64_t sub_406a90(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_406590(0, arg1, arg2, &data_60f4c0);\n}\n\n"
        },
        {
            "funcName": "sub_406ab0",
            "funcStartAddr": "0x40207a",
            "funcEndAddr": "0x406b18",
            "decompiledFuncCode": "char* sub_406ab0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_406590(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_406b20",
            "funcStartAddr": "0x40207f",
            "funcEndAddr": "0x406b84",
            "decompiledFuncCode": "char* sub_406b20(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_406590(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_406b90",
            "funcStartAddr": "0x406b90",
            "funcEndAddr": "0x406b9c",
            "decompiledFuncCode": "int64_t sub_406b90(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_406ab0(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_406ba0",
            "funcStartAddr": "0x406ba0",
            "funcEndAddr": "0x406baf",
            "decompiledFuncCode": "int64_t sub_406ba0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_406b20(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_406bb0",
            "funcStartAddr": "0x406bb0",
            "funcEndAddr": "0x406c20",
            "decompiledFuncCode": "char* sub_406bb0(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_60f4f0;\n    int128_t var_48 = data_60f4c0;\n    int128_t var_38 = data_60f4d0;\n    int128_t var_28 = data_60f4e0;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_406590(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_406c20",
            "funcStartAddr": "0x406c20",
            "funcEndAddr": "0x406c2d",
            "decompiledFuncCode": "int64_t sub_406c20(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_406bb0(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_406c30",
            "funcStartAddr": "0x406c30",
            "funcEndAddr": "0x406c41",
            "decompiledFuncCode": "int64_t sub_406c30(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_406bb0(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_406c50",
            "funcStartAddr": "0x406c50",
            "funcEndAddr": "0x406c5a",
            "decompiledFuncCode": "int64_t sub_406c50(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_406bb0(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_406c60",
            "funcStartAddr": "0x402084",
            "funcEndAddr": "0x406cce",
            "decompiledFuncCode": "char* sub_406c60(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_406590(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_406cd0",
            "funcStartAddr": "0x406cd0",
            "funcEndAddr": "0x406d3c",
            "decompiledFuncCode": "char* sub_406cd0(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_60f4c0;\n    int128_t var_38 = data_60f4d0;\n    int128_t var_28 = data_60f4e0;\n    int64_t var_18 = data_60f4f0;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_406590(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_406d90",
            "funcStartAddr": "0x406d90",
            "funcEndAddr": "0x406d9a",
            "decompiledFuncCode": "int64_t sub_406d90(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_406590(arg1, arg2, arg3, &data_60f300);\n}\n\n"
        },
        {
            "funcName": "sub_406da0",
            "funcStartAddr": "0x406da0",
            "funcEndAddr": "0x406db2",
            "decompiledFuncCode": "int64_t sub_406da0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_406590(0, arg1, arg2, &data_60f300);\n}\n\n"
        },
        {
            "funcName": "sub_406dc0",
            "funcStartAddr": "0x406dc0",
            "funcEndAddr": "0x406dd1",
            "decompiledFuncCode": "int64_t sub_406dc0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_406590(arg1, arg2, -1, &data_60f300);\n}\n\n"
        },
        {
            "funcName": "sub_406de0",
            "funcStartAddr": "0x406de0",
            "funcEndAddr": "0x406df6",
            "decompiledFuncCode": "int64_t sub_406de0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_406590(0, arg1, -1, &data_60f300);\n}\n\n"
        },
        {
            "funcName": "sub_406e00",
            "funcStartAddr": "0x406e00",
            "funcEndAddr": "0x406e23",
            "decompiledFuncCode": "int64_t* sub_406e00(int64_t arg1)\n{\n    int64_t* rax = sub_408240(0x18);\n    *rax = arg1;\n    rax[2] = 0;\n    rax[1] = 0;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_406e30",
            "funcStartAddr": "0x406e30",
            "funcEndAddr": "0x406e5f",
            "decompiledFuncCode": "FILE*** sub_406e30(char* arg1, uint64_t arg2)\n{\n    FILE** rax = sub_407050(arg1, arg2);\n    FILE*** rax_1 = nullptr;\n    if (rax != 0)\n    {\n        rax_1 = sub_408240(0x18);\n        *rax_1 = rax;\n        rax_1[2] = 0;\n        rax_1[1] = 0;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_406e60",
            "funcStartAddr": "0x406e60",
            "funcEndAddr": "0x406e64",
            "decompiledFuncCode": "int64_t sub_406e60(int64_t* arg1)\n{\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_406e70",
            "funcStartAddr": "0x406e70",
            "funcEndAddr": "0x406f65",
            "decompiledFuncCode": "int64_t sub_406e70(int64_t* arg1, int64_t arg2)\n{\n    int64_t r14 = (arg2 + 1);\n    int64_t* r12 = *arg1;\n    int64_t rbp = arg1[1];\n    int64_t rbx = arg1[2];\n    while (true)\n    {\n        if (rbx < arg2)\n        {\n            int64_t rax_6 = rbx;\n            uint64_t rdx_5 = 0;\n            do\n            {\n                rdx_5 = (rdx_5 + 1);\n                rax_6 = ((rax_6 << 8) + 0xff);\n            } while (arg2 > rax_6);\n            void var_40;\n            sub_407360(r12, &var_40, rdx_5);\n            void* rax_8 = &var_40;\n            do\n            {\n                uint64_t rdx_6 = *rax_8;\n                rax_8 = (rax_8 + 1);\n                rbx = ((rbx << 8) + 0xff);\n                rbp = ((rbp << 8) + rdx_6);\n            } while (arg2 > rbx);\n        }\n        if (((rbx >= arg2 && rbx == arg2) || (rbx < arg2 && rbx == arg2)))\n        {\n            arg1[2] = 0;\n            arg1[1] = 0;\n            break;\n        }\n        if (((rbx >= arg2 && rbx != arg2) || (rbx < arg2 && rbx != arg2)))\n        {\n            int64_t rdx_1 = 0;\n            int64_t rax_2 = (rbx - arg2);\n            uint64_t temp0_1 = (COMBINE(rdx_1, rax_2) / r14);\n            uint64_t temp1_1 = (COMBINE(rdx_1, rax_2) % r14);\n            int64_t rdx_3 = 0;\n            uint64_t temp0_2 = (COMBINE(rdx_3, rbp) / r14);\n            uint64_t temp1_2 = (COMBINE(rdx_3, rbp) % r14);\n            if (rbp <= (rbx - temp1_1))\n            {\n                arg1[1] = temp0_2;\n                rbp = temp1_2;\n                arg1[2] = temp0_1;\n                break;\n            }\n            rbx = (temp1_1 - 1);\n            rbp = temp1_2;\n        }\n    }\n    return rbp;\n}\n\n"
        },
        {
            "funcName": "sub_406f70",
            "funcStartAddr": "0x406f70",
            "funcEndAddr": "0x406f8e",
            "decompiledFuncCode": "int64_t sub_406f70(int64_t arg1)\n{\n    __explicit_bzero_chk(arg1, 0x18, -1);\n    /* tailcall */\n    return free(arg1);\n}\n\n"
        },
        {
            "funcName": "sub_406f90",
            "funcStartAddr": "0x406f90",
            "funcEndAddr": "0x406fe1",
            "decompiledFuncCode": "uint64_t sub_406f90(int64_t* arg1)\n{\n    int32_t rax = sub_4074c0(*arg1);\n    int32_t* rax_1 = __errno_location();\n    int32_t r13 = *rax_1;\n    __explicit_bzero_chk(arg1, 0x18, -1);\n    free(arg1);\n    *rax_1 = r13;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_406ff0",
            "funcStartAddr": "0x402089",
            "funcEndAddr": "0x40704d",
            "decompiledFuncCode": "int64_t sub_406ff0(uint64_t arg1) __noreturn\n{\n    if (arg1 != 0)\n    {\n        int64_t rax_1 = sub_406de0(arg1);\n        int32_t* rax_2 = __errno_location();\n        char* rax_3;\n        if (*rax_2 == 0)\n        {\n            rax_3 = dcgettext(nullptr, \"%s: end of file\", 5);\n        }\n        else\n        {\n            rax_3 = dcgettext(nullptr, \"%s: read error\", 5);\n        }\n        error(data_60f2e0, *rax_2, rax_3, rax_1);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_407050",
            "funcStartAddr": "0x407050",
            "funcEndAddr": "0x40733f",
            "decompiledFuncCode": "FILE** sub_407050(char* arg1, uint64_t arg2)\n{\n    FILE** rbx;\n    if (arg2 == 0)\n    {\n        FILE** rax_7 = sub_408240(0x1038);\n        rbx = rax_7;\n        *rax_7 = nullptr;\n        rax_7[1] = 0x406ff0;\n        rax_7[2] = 0;\n    }\n    else\n    {\n        ssize_t r12_1 = arg1;\n        if (arg1 == 0)\n        {\n            FILE** rax_3 = sub_408240(0x1038);\n            *rax_3 = nullptr;\n            rbx = rax_3;\n            void* r13_2 = &rax_3[4];\n            rax_3[1] = 0x406ff0;\n            rax_3[2] = 0;\n            rax_3[3] = 0;\n            int32_t rax_5 = open(\"/dev/urandom\", 0);\n            int128_t var_48;\n            ssize_t rbp_2;\n            int64_t rbp_6;\n            int64_t r14_1;\n            if (rax_5 < 0)\n            {\n                r14_1 = 0x14;\n                gettimeofday(&var_48, nullptr);\n                *(rbx + 0x20) = var_48;\n                int32_t rax_8 = getpid();\n                var_48 = rax_8;\n                rbx[6] = rax_8;\n            }\n            else\n            {\n                uint64_t rdx_1 = arg2;\n                if (arg2 > 0x800)\n                {\n                    rdx_1 = 0x800;\n                }\n                rbp_2 = __read_chk(rax_5, r13_2, rdx_1, 0x1018);\n                close(rax_5);\n                if (rbp_2 <= 0x7ff)\n                {\n                    if (rbp_2 < 0)\n                    {\n                        rbp_2 = r12_1;\n                    }\n                    int128_t* rdi_8 = &var_48;\n                    int64_t rcx_5 = (0x800 - rbp_2);\n                    void* r15_2 = (r13_2 + rbp_2);\n                    if (rcx_5 > 0x10)\n                    {\n                        rcx_5 = 0x10;\n                    }\n                    rbp_6 = (rbp_2 + rcx_5);\n                    gettimeofday(rdi_8, nullptr);\n                    void* rdi_9 = r15_2;\n                    void* rsi_5 = &var_48;\n                    for (uint64_t rcx_7 = rcx_5; rcx_7 != 0; rcx_7 = (rcx_7 - 1))\n                    {\n                        *rdi_9 = *rsi_5;\n                        rdi_9 = (rdi_9 + 1);\n                        rsi_5 = (rsi_5 + 1);\n                    }\n                    if (rbp_6 <= 0x7ff)\n                    {\n                        int64_t r14_3 = (0x800 - rbp_6);\n                        if (r14_3 > 4)\n                        {\n                            r14_3 = 4;\n                        }\n                        void* rsi_6 = &var_48;\n                        var_48 = getpid(rdi_9, rsi_5);\n                        uint64_t rcx_8 = r14_3;\n                        r14_1 = (r14_3 + rbp_6);\n                        void* rdi_10 = (r13_2 + rbp_6);\n                        for (; rcx_8 != 0; rcx_8 = (rcx_8 - 1))\n                        {\n                            *rdi_10 = *rsi_6;\n                            rdi_10 = (rdi_10 + 1);\n                            rsi_6 = (rsi_6 + 1);\n                        }\n                    }\n                }\n            }\n            if ((rax_5 < 0 || (((rax_5 >= 0 && rbp_2 <= 0x7ff) && rbp_6 <= 0x7ff) && r14_1 <= 0x7ff)))\n            {\n                int64_t rbp_3 = (0x800 - r14_1);\n                if (rbp_3 > 4)\n                {\n                    rbp_3 = 4;\n                }\n                void* rsi_2 = (r13_2 + r14_1);\n                var_48 = getppid();\n                int32_t rdi_5 = rbp_3;\n                if (rbp_3 != 0)\n                {\n                    int32_t rax_10 = 0;\n                    do\n                    {\n                        uint64_t rdx_2 = rax_10;\n                        rax_10 = (rax_10 + 1);\n                        *(rsi_2 + rdx_2) = *(&var_48 + rdx_2);\n                    } while (rax_10 < rdi_5);\n                }\n                int64_t rbp_4 = (rbp_3 + r14_1);\n                if (rbp_4 <= 0x7ff)\n                {\n                    int64_t r14_2 = (0x800 - rbp_4);\n                    if (r14_2 > 4)\n                    {\n                        r14_2 = 4;\n                    }\n                    void* rsi_3 = (r13_2 + rbp_4);\n                    var_48 = getuid();\n                    int32_t rdi_6 = r14_2;\n                    if (r14_2 != 0)\n                    {\n                        int32_t rax_12 = 0;\n                        do\n                        {\n                            uint64_t rdx_3 = rax_12;\n                            rax_12 = (rax_12 + 1);\n                            *(rsi_3 + rdx_3) = *(&var_48 + rdx_3);\n                        } while (rax_12 < rdi_6);\n                    }\n                    int64_t rbp_5 = (rbp_4 + r14_2);\n                    if (rbp_5 <= 0x7ff)\n                    {\n                        void* rsi_4 = (r13_2 + rbp_5);\n                        var_48 = getgid();\n                        int64_t rax_14 = (0x800 - rbp_5);\n                        if (rax_14 > 4)\n                        {\n                            rax_14 = 4;\n                        }\n                        int32_t rdi_7 = rax_14;\n                        if (rax_14 != 0)\n                        {\n                            int32_t rax_15 = 0;\n                            do\n                            {\n                                uint64_t rdx_4 = rax_15;\n                                rax_15 = (rax_15 + 1);\n                                *(rsi_4 + rdx_4) = *(&var_48 + rdx_4);\n                            } while (rax_15 < rdi_7);\n                        }\n                    }\n                }\n            }\n            sub_4077c0(r13_2);\n        }\n        else\n        {\n            FILE* rax = sub_409b20(arg1, &data_40c4a4);\n            if (rax == 0)\n            {\n                rbx = nullptr;\n            }\n            else\n            {\n                FILE** rax_1 = sub_408240(0x1038);\n                uint64_t rcx_1 = 0x1000;\n                *rax_1 = rax;\n                if (arg2 <= 0x1000)\n                {\n                    rcx_1 = arg2;\n                }\n                rax_1[1] = 0x406ff0;\n                rbx = rax_1;\n                rax_1[2] = r12_1;\n                setvbuf(rax, &rax_1[3], 0, rcx_1);\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_407340",
            "funcStartAddr": "0x407340",
            "funcEndAddr": "0x407345",
            "decompiledFuncCode": "int64_t sub_407340(void* arg1, int64_t arg2)\n{\n    *(arg1 + 8) = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_407350",
            "funcStartAddr": "0x407350",
            "funcEndAddr": "0x407355",
            "decompiledFuncCode": "int64_t sub_407350(void* arg1, int64_t arg2)\n{\n    *(arg1 + 0x10) = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_407360",
            "funcStartAddr": "0x407360",
            "funcEndAddr": "0x4074bc",
            "decompiledFuncCode": "uint64_t sub_407360(int64_t* arg1, int64_t* arg2, uint64_t arg3)\n{\n    int64_t* rbp = arg2;\n    uint64_t rbx = arg3;\n    FILE* r13 = *arg1;\n    uint64_t rax_3;\n    if (r13 == 0)\n    {\n        uint64_t r15_1 = arg1[3];\n        int64_t* r13_1 = &arg1[0x107];\n        void* r14_1 = &arg1[4];\n        if (arg3 <= r15_1)\n        {\n            r13_1 = ((r13_1 - r15_1) + 0x800);\n        }\n        else\n        {\n            do\n            {\n                int64_t* rdi_2 = rbp;\n                rbp = (rbp + r15_1);\n                rbx = (rbx - r15_1);\n                memcpy(rdi_2, ((0x800 - r15_1) + r13_1), r15_1);\n                if ((rbp & 7) == 0)\n                {\n                    while (rbx > 0x7ff)\n                    {\n                        int64_t* rsi_3 = rbp;\n                        rbp = &rbp[0x100];\n                        int64_t* rax_4 = sub_407510(r14_1, rsi_3);\n                        uint64_t temp1_1 = rbx;\n                        rbx = (rbx - 0x800);\n                        if (temp1_1 == 0x800)\n                        {\n                            arg1[3] = 0;\n                            return rax_4;\n                        }\n                    }\n                    sub_407510(r14_1, r13_1);\n                    break;\n                }\n                r15_1 = 0x800;\n                sub_407510(r14_1, r13_1);\n            } while (rbx > 0x800);\n            r15_1 = 0x800;\n        }\n        rax_3 = memcpy(rbp, r13_1, rbx);\n        arg1[3] = (r15_1 - rbx);\n    }\n    else\n    {\n        int32_t* rax_1 = __errno_location();\n        while (true)\n        {\n            rax_3 = fread_unlocked(rbp, 1, rbx, r13);\n            int32_t rdx = *rax_1;\n            rbp = (rbp + rax_3);\n            uint64_t temp0_1 = rbx;\n            rbx = (rbx - rax_3);\n            if (temp0_1 == rax_3)\n            {\n                break;\n            }\n            int64_t rdi = arg1[2];\n            if ((**arg1 & 0x20) == 0)\n            {\n                rdx = 0;\n            }\n            *rax_1 = rdx;\n            arg1[1](rdi);\n            r13 = *arg1;\n        }\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_4074c0",
            "funcStartAddr": "0x4074c0",
            "funcEndAddr": "0x407509",
            "decompiledFuncCode": "int64_t sub_4074c0(int64_t* arg1)\n{\n    FILE* rbp = *arg1;\n    __explicit_bzero_chk(arg1, 0x1038, -1);\n    free(arg1);\n    if (rbp == 0)\n    {\n        return 0;\n    }\n    /* tailcall */\n    return sub_408a10(rbp);\n}\n\n"
        },
        {
            "funcName": "sub_407510",
            "funcStartAddr": "0x407510",
            "funcEndAddr": "0x4077b5",
            "decompiledFuncCode": "int64_t* sub_407510(int64_t* arg1, int64_t* arg2)\n{\n    int64_t r11 = arg1[0x101];\n    void* r10 = &arg1[0x80];\n    int64_t rdx = arg1[0x100];\n    int64_t* r9 = arg2;\n    int64_t r8 = (arg1[0x102] + 1);\n    int64_t* rax = arg1;\n    arg1[0x102] = r8;\n    int64_t r11_1 = (r11 + r8);\n    do\n    {\n        int64_t rcx_3 = *rax;\n        int64_t rdx_3 = ((!(rdx ^ (rdx << 0x15))) + rax[0x80]);\n        int64_t r8_4 = ((*(arg1 + (rcx_3 & 0x7f8)) + rdx_3) + r11_1);\n        *rax = r8_4;\n        int64_t rbx_4 = (*(arg1 + ((r8_4 >> 8) & 0x7f8)) + rcx_3);\n        *r9 = rbx_4;\n        int64_t r8_7 = rax[1];\n        int64_t rdx_5 = ((rdx_3 ^ (rdx_3 >> 5)) + rax[0x81]);\n        int64_t rcx_6 = ((*(arg1 + (r8_7 & 0x7f8)) + rdx_5) + rbx_4);\n        rax[1] = rcx_6;\n        int64_t rbx_6 = (*(arg1 + ((rcx_6 >> 8) & 0x7f8)) + r8_7);\n        r9[1] = rbx_6;\n        int64_t rcx_9 = rax[2];\n        int64_t rdx_11 = (((rdx_5 << 0xc) ^ rdx_5) + rax[0x82]);\n        int64_t r8_11 = ((*(arg1 + (rcx_9 & 0x7f8)) + rdx_11) + rbx_6);\n        rax[2] = r8_11;\n        int64_t rcx_10 = (rcx_9 + *(arg1 + ((r8_11 >> 8) & 0x7f8)));\n        r9[2] = rcx_10;\n        int64_t r8_14 = rax[3];\n        rdx = ((rdx_11 ^ (rdx_11 >> 0x21)) + rax[0x83]);\n        int64_t rcx_16 = ((*(arg1 + (r8_14 & 0x7f8)) + rdx) + rcx_10);\n        rax = &rax[4];\n        r9 = &r9[4];\n        rax[-1] = rcx_16;\n        r11_1 = (*(arg1 + ((rcx_16 >> 8) & 0x7f8)) + r8_14);\n        r9[-1] = r11_1;\n    } while (rax != r10);\n    void* rsi = &arg2[0x80];\n    void* r9_1 = &arg1[0x100];\n    do\n    {\n        int64_t rcx_21 = *rax;\n        int64_t rdx_15 = ((!(rdx ^ (rdx << 0x15))) + rax[-0x80]);\n        int64_t r8_18 = ((*(arg1 + (rcx_21 & 0x7f8)) + rdx_15) + r11_1);\n        *rax = r8_18;\n        int64_t rcx_22 = (rcx_21 + *(arg1 + ((r8_18 >> 8) & 0x7f8)));\n        *rsi = rcx_22;\n        int64_t r8_21 = rax[1];\n        int64_t rdx_17 = ((rdx_15 ^ (rdx_15 >> 5)) + rax[-0x7f]);\n        int64_t rcx_25 = ((*(arg1 + (r8_21 & 0x7f8)) + rdx_17) + rcx_22);\n        rax[1] = rcx_25;\n        int64_t r11_11 = (*(arg1 + ((rcx_25 >> 8) & 0x7f8)) + r8_21);\n        *(rsi + 8) = r11_11;\n        int64_t rcx_28 = rax[2];\n        int64_t rdx_23 = (((rdx_17 << 0xc) ^ rdx_17) + rax[-0x7e]);\n        int64_t r8_25 = ((*(arg1 + (rcx_28 & 0x7f8)) + rdx_23) + r11_11);\n        rax[2] = r8_25;\n        int64_t rcx_29 = (rcx_28 + *(arg1 + ((r8_25 >> 8) & 0x7f8)));\n        *(rsi + 0x10) = rcx_29;\n        int64_t r8_28 = rax[3];\n        rdx = ((rdx_23 ^ (rdx_23 >> 0x21)) + rax[-0x7d]);\n        int64_t rcx_35 = ((*(arg1 + (r8_28 & 0x7f8)) + rdx) + rcx_29);\n        rax = &rax[4];\n        rsi = (rsi + 0x20);\n        rax[-1] = rcx_35;\n        r11_1 = (*(arg1 + ((rcx_35 >> 8) & 0x7f8)) + r8_28);\n        *(rsi - 8) = r11_1;\n    } while (rax != r9_1);\n    arg1[0x100] = rdx;\n    arg1[0x101] = r11_1;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4077c0",
            "funcStartAddr": "0x4077c0",
            "funcEndAddr": "0x4079f4",
            "decompiledFuncCode": "int64_t sub_4077c0(int64_t* arg1)\n{\n    int64_t* rdx = arg1;\n    int64_t* rax = arg1;\n    int64_t rcx = -0x670a8fb093bb3f55;\n    int64_t rsi = -0x7d0fac247caa1f32;\n    int64_t r11 = -0x4d64d17db5a6aadc;\n    int64_t r12 = -0x5167a40d34037613;\n    int64_t r10 = -0x73f15afac2b8ed60;\n    int64_t r9 = -0x46074cdd38c5379e;\n    void* rbp = &arg1[0x100];\n    int64_t r8 = 0x647c4677a2884b7c;\n    int64_t rbx = 0x48fe4a0fa5a09315;\n    do\n    {\n        int64_t rsi_1 = (rsi + rax[4]);\n        int64_t rcx_1 = (rcx + rax[7]);\n        int64_t r8_1 = (r8 + (*rax - rsi_1));\n        int64_t rbx_2 = ((rbx + rax[5]) ^ (rcx_1 >> 9));\n        int64_t r9_1 = (r9 + (rax[1] - rbx_2));\n        int64_t r12_2 = ((r12 + rax[6]) ^ (r8_1 << 9));\n        int64_t r10_1 = (r10 + (rax[2] - r12_2));\n        int64_t rcx_3 = ((rcx_1 + r8_1) ^ (r9_1 >> 0x17));\n        int64_t r11_1 = (r11 + (rax[3] - rcx_3));\n        r8 = ((r8_1 + r9_1) ^ (r10_1 << 0xf));\n        int64_t rsi_2 = (rsi_1 - r8);\n        *rax = r8;\n        r9 = ((r9_1 + r10_1) ^ (r11_1 >> 0xe));\n        int64_t rbx_3 = (rbx_2 - r9);\n        rax[1] = r9;\n        r10 = ((r10_1 + r11_1) ^ (rsi_2 << 0x14));\n        int64_t r12_3 = (r12_2 - r10);\n        rax[2] = r10;\n        rax = &rax[8];\n        r11 = ((r11_1 + rsi_2) ^ (rbx_3 >> 0x11));\n        rbx = (rbx_3 + r12_3);\n        rcx = (rcx_3 - r11);\n        rax[-5] = r11;\n        rsi = ((r12_3 << 0xe) ^ (rsi_2 + rbx_3));\n        r12 = (r12_3 + rcx);\n        rax[-3] = rbx;\n        rax[-4] = rsi;\n        rax[-2] = r12;\n        rax[-1] = rcx;\n    } while (rbp != rax);\n    int64_t rax_13;\n    do\n    {\n        int64_t rcx_4 = (rcx + rdx[7]);\n        int64_t rsi_7 = (rsi + rdx[4]);\n        int64_t r8_4 = ((r8 + *rdx) - rsi_7);\n        int64_t rbx_5 = ((rbx + rdx[5]) ^ (rcx_4 >> 9));\n        int64_t r9_4 = ((r9 + rdx[1]) - rbx_5);\n        int64_t r12_5 = ((r12 + rdx[6]) ^ (r8_4 << 9));\n        int64_t r10_4 = ((r10 + rdx[2]) - r12_5);\n        int64_t rcx_6 = ((rcx_4 + r8_4) ^ (r9_4 >> 0x17));\n        int64_t r11_4 = ((r11 + rdx[3]) - rcx_6);\n        r8 = ((r8_4 + r9_4) ^ (r10_4 << 0xf));\n        int64_t rsi_8 = (rsi_7 - r8);\n        *rdx = r8;\n        r9 = ((r9_4 + r10_4) ^ (r11_4 >> 0xe));\n        int64_t rbx_6 = (rbx_5 - r9);\n        rdx[1] = r9;\n        r10 = ((r10_4 + r11_4) ^ (rsi_8 << 0x14));\n        rax_13 = (rsi_8 + rbx_6);\n        int64_t r12_6 = (r12_5 - r10);\n        rdx[2] = r10;\n        rdx = &rdx[8];\n        r11 = ((r11_4 + rsi_8) ^ (rbx_6 >> 0x11));\n        rbx = (rbx_6 + r12_6);\n        rcx = (rcx_6 - r11);\n        rdx[-5] = r11;\n        rsi = ((r12_6 << 0xe) ^ rax_13);\n        r12 = (r12_6 + rcx);\n        rdx[-3] = rbx;\n        rdx[-4] = rsi;\n        rdx[-2] = r12;\n        rdx[-1] = rcx;\n    } while (rbp != rdx);\n    arg1[0x102] = 0;\n    arg1[0x101] = 0;\n    arg1[0x100] = 0;\n    return rax_13;\n}\n\n"
        },
        {
            "funcName": "sub_407a00",
            "funcStartAddr": "0x407a00",
            "funcEndAddr": "0x407c42",
            "decompiledFuncCode": "uint64_t sub_407a00(int32_t arg1, char* arg2, int32_t arg3, char* arg4, \n    int32_t arg5)\n{\n    int32_t rax_1 = syscall(0x13c, arg1, arg2, arg3, arg4, arg5);\n    int32_t rdx_1 = rax_1;\n    if (rax_1 < 0)\n    {\n        int32_t* rax_2 = __errno_location();\n        rdx_1 = rax_1;\n        int32_t* r9_1 = rax_2;\n        int32_t rax_3 = *rax_2;\n        int64_t r15;\n        r15 = ((rax_3 - 0x16) & 0xffffffef) != 0;\n        rax_3 = rax_3 != 0x5f;\n        r15 = (r15 & rax_3);\n        if (r15 == 0)\n        {\n            int32_t var_160_1;\n            void var_c8;\n            int32_t rax_5;\n            int32_t rax_6;\n            if (((arg5 & 0xfffffffe) == 0 && arg5 != 0))\n            {\n                var_160_1 = r9_1;\n                rax_5 = __fxstatat(1, arg3, arg4, &var_c8, 0x100);\n                r9_1 = var_160_1;\n                if (rax_5 != 0)\n                {\n                    rax_6 = *r9_1;\n                    if (rax_6 != 0x4b)\n                    {\n                        if (rax_6 != 2)\n                        {\n                            goto label_407ba0;\n                        }\n                        r15 = 1;\n                    }\n                }\n            }\n            if ((arg5 == 0 || (((arg5 != 0 && (arg5 & 0xfffffffe) == 0) && rax_5 != 0) && rax_6 != 0x4b)))\n            {\n                var_160_1 = r9_1;\n                uint64_t rax_7 = strlen(arg2);\n                uint64_t rax_8 = strlen(arg4);\n                if (rax_7 == 0)\n                {\n                label_407c09:\n                    rdx_1 = renameat(arg1, arg2, arg3, arg4);\n                }\n                else\n                {\n                    int64_t r9_2 = var_160_1;\n                    if (rax_8 == 0)\n                    {\n                        goto label_407c09;\n                    }\n                    if ((arg2[(rax_7 - 1)] != 0x2f && arg4[(rax_8 - 1)] != 0x2f))\n                    {\n                        goto label_407c09;\n                    }\n                    var_160_1 = r9_2;\n                    void var_158;\n                    if (__fxstatat(1, arg1, arg2, &var_158, 0x100) != 0)\n                    {\n                        goto label_407ba0;\n                    }\n                    int32_t* r9_3 = var_160_1;\n                    int32_t var_140;\n                    if (r15 == 0)\n                    {\n                        var_160_1 = r9_3;\n                        int32_t* r9_4 = var_160_1;\n                        if (__fxstatat(1, arg3, arg4, &var_c8, 0x100) != 0)\n                        {\n                            if (*r9_4 != 2)\n                            {\n                                goto label_407ba0;\n                            }\n                            if ((var_140 & 0xf000) == 0x4000)\n                            {\n                                goto label_407c09;\n                            }\n                            goto label_407ba0;\n                        }\n                        int32_t var_b0;\n                        if ((var_b0 & 0xf000) != 0x4000)\n                        {\n                            *r9_4 = 0x14;\n                        label_407ba0:\n                            rdx_1 = -1;\n                        }\n                        else\n                        {\n                            if ((var_140 & 0xf000) == 0x4000)\n                            {\n                                goto label_407c09;\n                            }\n                            *r9_4 = 0x15;\n                            rdx_1 = -1;\n                        }\n                    }\n                    else\n                    {\n                        if ((var_140 & 0xf000) == 0x4000)\n                        {\n                            goto label_407c09;\n                        }\n                        *r9_3 = 2;\n                        rdx_1 = -1;\n                    }\n                }\n            }\n            if (arg5 != 0)\n            {\n                if (((arg5 & 0xfffffffe) == 0 && (rax_5 == 0 || (rax_5 != 0 && rax_6 == 0x4b))))\n                {\n                    *r9_1 = 0x11;\n                    rdx_1 = -1;\n                }\n                if ((arg5 & 0xfffffffe) != 0)\n                {\n                    *r9_1 = 0x5f;\n                    rdx_1 = -1;\n                }\n            }\n        }\n    }\n    return rdx_1;\n}\n\n"
        },
        {
            "funcName": "sub_407c50",
            "funcStartAddr": "0x407c50",
            "funcEndAddr": "0x407c9e",
            "decompiledFuncCode": "uint64_t sub_407c50(int32_t arg1)\n{\n    if (arg1 <= 2)\n    {\n        int32_t rax_1 = sub_40a190(arg1);\n        int32_t* rax_2 = __errno_location();\n        int32_t r13 = *rax_2;\n        close(arg1);\n        *rax_2 = r13;\n        return rax_1;\n    }\n    return arg1;\n}\n\n"
        },
        {
            "funcName": "sub_407ca0",
            "funcStartAddr": "0x40208e",
            "funcEndAddr": "0x40807d",
            "decompiledFuncCode": "int64_t sub_407ca0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_40c4ba, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_408080",
            "funcStartAddr": "0x408080",
            "funcEndAddr": "0x4080a0",
            "decompiledFuncCode": "int64_t sub_408080(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_407ca0(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_4080a0",
            "funcStartAddr": "0x4080a0",
            "funcEndAddr": "0x408100",
            "decompiledFuncCode": "int64_t sub_4080a0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_407ca0(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_408100",
            "funcStartAddr": "0x408100",
            "funcEndAddr": "0x4081bc",
            "decompiledFuncCode": "int64_t sub_408100(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_407ca0(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_4081c0",
            "funcStartAddr": "0x4081c0",
            "funcEndAddr": "0x408234",
            "decompiledFuncCode": "int64_t sub_4081c0()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_408240",
            "funcStartAddr": "0x408240",
            "funcEndAddr": "0x40825a",
            "decompiledFuncCode": "int64_t sub_408240(size_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_408490();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4082a0",
            "funcStartAddr": "0x4082a0",
            "funcEndAddr": "0x4082d6",
            "decompiledFuncCode": "int64_t sub_4082a0(int64_t arg1, size_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_408490();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4083ea",
            "funcStartAddr": "0x4083ea",
            "funcEndAddr": "0x4083f0",
            "decompiledFuncCode": "int64_t sub_4083ea() __noreturn\n{\n    sub_408490();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4083f0",
            "funcStartAddr": "0x4083f0",
            "funcEndAddr": "0x408407",
            "decompiledFuncCode": "int64_t sub_4083f0(size_t arg1)\n{\n    /* tailcall */\n    return memset(sub_408240(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_408410",
            "funcStartAddr": "0x408410",
            "funcEndAddr": "0x40843e",
            "decompiledFuncCode": "int64_t sub_408410(size_t arg1, size_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_408490();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_408440",
            "funcStartAddr": "0x408440",
            "funcEndAddr": "0x408468",
            "decompiledFuncCode": "int64_t sub_408440(int64_t arg1, size_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_408240(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_408470",
            "funcStartAddr": "0x408470",
            "funcEndAddr": "0x408483",
            "decompiledFuncCode": "int64_t sub_408470(char* arg1)\n{\n    /* tailcall */\n    return sub_408440(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_408490",
            "funcStartAddr": "0x408490",
            "funcEndAddr": "0x4084c1",
            "decompiledFuncCode": "int64_t sub_408490() __noreturn\n{\n    error(data_60f2e0, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4084d0",
            "funcStartAddr": "0x4084d0",
            "funcEndAddr": "0x4085a0",
            "decompiledFuncCode": "int64_t sub_4084d0(char* arg1, int32_t arg2, int64_t arg3, int64_t arg4, \n    char* arg5, int64_t arg6, int32_t arg7)\n{\n    int32_t rbx = arg7;\n    int64_t var_40;\n    int32_t rax = sub_4085d0(arg1, nullptr, arg2, &var_40, arg5);\n    int64_t rbp;\n    int32_t* r14_1;\n    if (rax == 0)\n    {\n        rbp = var_40;\n        if ((rbp < arg3 || (rbp >= arg3 && rbp > arg4)))\n        {\n            int32_t* rax_1 = __errno_location();\n            r14_1 = rax_1;\n            *r14_1 = (((rax_1 - rax_1) & 0xffffffd7) + 0x4b);\n        }\n    }\n    else\n    {\n        int32_t* rax_8 = __errno_location();\n        r14_1 = rax_8;\n        if (rax == 1)\n        {\n            *rax_8 = 0x4b;\n        }\n        else if (rax == 3)\n        {\n            *rax_8 = 0;\n        }\n    }\n    if (((rax == 0 && (rbp < arg3 || (rbp >= arg3 && rbp > arg4))) || rax != 0))\n    {\n        int64_t rax_5 = sub_406de0(arg1);\n        uint64_t rsi = *r14_1;\n        if (rsi == 0x16)\n        {\n            rsi = 0;\n        }\n        if (rbx == 0)\n        {\n            rbx = 1;\n        }\n        error(rbx, rsi, \"%s: %s\", arg6, rax_5);\n        rbp = var_40;\n    }\n    return rbp;\n}\n\n"
        },
        {
            "funcName": "sub_4085a0",
            "funcStartAddr": "0x4085a0",
            "funcEndAddr": "0x4085c1",
            "decompiledFuncCode": "int64_t sub_4085a0(char* arg1, int64_t arg2, int64_t arg3, char* arg4, \n    int64_t arg5, int32_t arg6)\n{\n    return sub_4084d0(arg1, 0xa, arg2, arg3, arg4, arg5, arg6);\n}\n\n"
        },
        {
            "funcName": "sub_4085d0",
            "funcStartAddr": "0x4085d0",
            "funcEndAddr": "0x408a04",
            "decompiledFuncCode": "uint64_t sub_4085d0(char* arg1, int64_t* arg2, int32_t arg3, uint64_t* arg4, \n    char* arg5)\n{\n    if (arg3 > 0x24)\n    {\n        __assert_fail(\"0 <= strtol_base && strtol_base \u2026\", \"lib/xstrtol.c\", 0x60, \"xstrtoumax\");\n        /* no return */\n    }\n    int64_t* r15 = arg2;\n    void var_40;\n    if (arg2 == 0)\n    {\n        r15 = &var_40;\n    }\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char rbx = *arg1;\n    uint16_t* rsi = *__ctype_b_loc();\n    char* rax_2 = arg1;\n    while ((*(&rsi[rbx] + 1) & 0x20) != 0)\n    {\n        rax_2 = &rax_2[1];\n        rbx = *rax_2;\n    }\n    int32_t rbp_1;\n    if (rbx == 0x2d)\n    {\n    label_40869a:\n        rbp_1 = 4;\n    }\n    else\n    {\n        char* r8 = *r15;\n        uint64_t rbx_1 = __strtoul_internal(arg1, r15, arg3, 0);\n        int32_t var_58;\n        void* r8_1;\n        uint32_t r12_1;\n        if (r8 == arg1)\n        {\n            var_58 = r8;\n            if (arg5 == 0)\n            {\n                goto label_40869a;\n            }\n            r12_1 = *arg1;\n            if (r12_1 == 0)\n            {\n                goto label_40869a;\n            }\n            rbp_1 = 0;\n            rbx_1 = 1;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) == 0)\n            {\n                goto label_40869a;\n            }\n        label_4086d7:\n            uint64_t rdx_1 = (r12_1 - 0x45);\n            int64_t rdx_3;\n            int32_t rsi_3;\n            if (rdx_1 <= 0x2f)\n            {\n                var_58 = rdx_1;\n                if ((!(TEST_BITQ(0x814400308945, rdx_1))))\n                {\n                    goto label_408740;\n                }\n                if (strchr(arg5, 0x30) == 0)\n                {\n                    goto label_408740;\n                }\n                char rax_8 = *(r8_1 + 1);\n                if (rax_8 == 0x44)\n                {\n                label_408968:\n                    rsi_3 = 2;\n                    rdx_3 = 0x3e8;\n                    goto label_40874a;\n                }\n                if (rax_8 == 0x69)\n                {\n                    rdx_3 = 0x400;\n                    int32_t rsi_6;\n                    rsi_6 = *(r8_1 + 2) == 0x42;\n                    rsi_3 = ((rsi_6 + rsi_6) + 1);\n                    goto label_40874a;\n                }\n                uint64_t rdx_2 = var_58;\n                if (rax_8 == 0x42)\n                {\n                    goto label_408968;\n                }\n                int32_t r9_1;\n                switch (rdx_2)\n                {\n                    case 0:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4088eb:\n                        int64_t rcx_6 = rdx_3;\n                        int32_t rdi_8 = 6;\n                        r9_1 = 0;\n                        int32_t temp15_1;\n                        do\n                        {\n                            uint64_t rax_28;\n                            int64_t rdx_11;\n                            rdx_11 = HIGHD((rbx_1 * rcx_6));\n                            rax_28 = LOWD((rbx_1 * rcx_6));\n                            bool o_8 = ((rbx_1 * rcx_6) >> 0x40) != 0;\n                            rbx_1 = rax_28;\n                            if (o_8)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp15_1 = rdi_8;\n                            rdi_8 = (rdi_8 - 1);\n                        } while (temp15_1 != 1);\n                        goto label_408844;\n                    }\n                    case 1:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 7:\n                    case 9:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xe:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1f:\n                    case 0x20:\n                    case 0x21:\n                    case 0x23:\n                    case 0x24:\n                    case 0x25:\n                    case 0x27:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    {\n                        goto label_4087e5;\n                    }\n                    case 2:\n                    case 0x22:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_408923:\n                        int64_t rcx_7 = rdx_3;\n                        int64_t rax_30;\n                        int64_t rdx_12;\n                        rdx_12 = HIGHD((rbx_1 * rcx_7));\n                        rax_30 = LOWD((rbx_1 * rcx_7));\n                        int64_t rax_31;\n                        if (((rbx_1 * rcx_7) >> 0x40) == 0)\n                        {\n                            int64_t rdx_13;\n                            rdx_13 = HIGHD((rax_30 * rcx_7));\n                            rax_31 = LOWD((rax_30 * rcx_7));\n                            if (((rax_30 * rcx_7) >> 0x40) == 0)\n                            {\n                                uint64_t rax_32;\n                                int64_t rdx_14;\n                                rdx_14 = HIGHD((rax_31 * rcx_7));\n                                rax_32 = LOWD((rax_31 * rcx_7));\n                                if (((rax_31 * rcx_7) >> 0x40) == 0)\n                                {\n                                    rbx_1 = rax_32;\n                                    rbp_1 = (rbp_1 | 0);\n                                }\n                            }\n                        }\n                        if (((((rbx_1 * rcx_7) >> 0x40) != 0 || (((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) != 0)) || ((((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) == 0) && ((rax_31 * rcx_7) >> 0x40) != 0)))\n                        {\n                            rbx_1 = -1;\n                            rbp_1 = (rbp_1 | 1);\n                        }\n                        goto label_40878d;\n                    }\n                    case 6:\n                    case 0x26:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4087af:\n                        uint64_t rax_15;\n                        int64_t rdx_6;\n                        rdx_6 = HIGHD((rbx_1 * rdx_3));\n                        rax_15 = LOWD((rbx_1 * rdx_3));\n                        bool o_3 = ((rbx_1 * rdx_3) >> 0x40) != 0;\n                        rbx_1 = rax_15;\n                        if ((!o_3))\n                        {\n                            goto label_40878d;\n                        }\n                        goto label_4087b7;\n                    }\n                    case 8:\n                    case 0x28:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40876e:\n                        int64_t rcx_1 = rdx_3;\n                        int64_t rax_10;\n                        int64_t rdx_4;\n                        rdx_4 = HIGHD((rbx_1 * rcx_1));\n                        rax_10 = LOWD((rbx_1 * rcx_1));\n                        if (((rbx_1 * rcx_1) >> 0x40) == 0)\n                        {\n                            uint64_t rax_11;\n                            int64_t rdx_5;\n                            rdx_5 = HIGHD((rax_10 * rcx_1));\n                            rax_11 = LOWD((rax_10 * rcx_1));\n                            if (((rax_10 * rcx_1) >> 0x40) != 0)\n                            {\n                                goto label_4087b7;\n                            }\n                            rbx_1 = rax_11;\n                            goto label_40878d;\n                        }\n                    label_4087b7:\n                        rbp_1 = 1;\n                        rbx_1 = -1;\n                        goto label_40878d;\n                    }\n                    case 0xb:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4088b8:\n                        int64_t rcx_5 = rdx_3;\n                        int32_t rdi_7 = 5;\n                        r9_1 = 0;\n                        int32_t temp14_1;\n                        do\n                        {\n                            uint64_t rax_26;\n                            int64_t rdx_10;\n                            rdx_10 = HIGHD((rbx_1 * rcx_5));\n                            rax_26 = LOWD((rbx_1 * rcx_5));\n                            bool o_7 = ((rbx_1 * rcx_5) >> 0x40) != 0;\n                            rbx_1 = rax_26;\n                            if (o_7)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp14_1 = rdi_7;\n                            rdi_7 = (rdi_7 - 1);\n                        } while (temp14_1 != 1);\n                        goto label_408844;\n                    }\n                    case 0xf:\n                    case 0x2f:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_408888:\n                        int64_t rcx_4 = rdx_3;\n                        int32_t rdi_6 = 4;\n                        r9_1 = 0;\n                        int32_t temp13_1;\n                        do\n                        {\n                            uint64_t rax_24;\n                            int64_t rdx_9;\n                            rdx_9 = HIGHD((rbx_1 * rcx_4));\n                            rax_24 = LOWD((rbx_1 * rcx_4));\n                            bool o_6 = ((rbx_1 * rcx_4) >> 0x40) != 0;\n                            rbx_1 = rax_24;\n                            if (o_6)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp13_1 = rdi_6;\n                            rdi_6 = (rdi_6 - 1);\n                        } while (temp13_1 != 1);\n                        goto label_408844;\n                    }\n                    case 0x14:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_408856:\n                        int64_t rcx_3 = rdx_3;\n                        int32_t rdi_5 = 8;\n                        r9_1 = 0;\n                        int32_t temp12_1;\n                        do\n                        {\n                            uint64_t rax_22;\n                            int64_t rdx_8;\n                            rdx_8 = HIGHD((rbx_1 * rcx_3));\n                            rax_22 = LOWD((rbx_1 * rcx_3));\n                            bool o_5 = ((rbx_1 * rcx_3) >> 0x40) != 0;\n                            rbx_1 = rax_22;\n                            if (o_5)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp12_1 = rdi_5;\n                            rdi_5 = (rdi_5 - 1);\n                        } while (temp12_1 != 1);\n                        goto label_408844;\n                    }\n                    case 0x15:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40881b:\n                        int64_t rcx_2 = rdx_3;\n                        int32_t rdi_4 = 7;\n                        r9_1 = 0;\n                        int32_t temp11_1;\n                        do\n                        {\n                            uint64_t rax_20;\n                            int64_t rdx_7;\n                            rdx_7 = HIGHD((rbx_1 * rcx_2));\n                            rax_20 = LOWD((rbx_1 * rcx_2));\n                            bool o_4 = ((rbx_1 * rcx_2) >> 0x40) != 0;\n                            rbx_1 = rax_20;\n                            if (o_4)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp11_1 = rdi_4;\n                            rdi_4 = (rdi_4 - 1);\n                        } while (temp11_1 != 1);\n                    label_408844:\n                        rbp_1 = (rbp_1 | r9_1);\n                        goto label_40878d;\n                    }\n                    case 0x1d:\n                    {\n                        rsi_3 = 1;\n                        break;\n                    }\n                    case 0x1e:\n                    {\n                        rsi_3 = 1;\n                        goto label_40878d;\n                    }\n                }\n            }\n            else\n            {\n            label_408740:\n                rsi_3 = 1;\n                rdx_3 = 0x400;\n            label_40874a:\n                char r12_2 = (r12_1 - 0x42);\n                if (r12_2 > 0x35)\n                {\n                    goto label_4087e5;\n                }\n                switch (r12_2)\n                {\n                    case 0:\n                    {\n                        if ((rbx_1 >> 0x36) != 0)\n                        {\n                            goto label_4087b7;\n                        }\n                        rbx_1 = (rbx_1 << 0xa);\n                        goto label_40878d;\n                    }\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x22:\n                    case 0x23:\n                    case 0x24:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x2a:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x33:\n                    case 0x34:\n                    {\n                        goto label_4087e5;\n                    }\n                    case 3:\n                    {\n                        goto label_4088eb;\n                    }\n                    case 5:\n                    case 0x25:\n                    {\n                        goto label_408923;\n                    }\n                    case 9:\n                    case 0x29:\n                    {\n                        goto label_4087af;\n                    }\n                    case 0xb:\n                    case 0x2b:\n                    {\n                        goto label_40876e;\n                    }\n                    case 0xe:\n                    {\n                        goto label_4088b8;\n                    }\n                    case 0x12:\n                    case 0x32:\n                    {\n                        goto label_408888;\n                    }\n                    case 0x17:\n                    {\n                        goto label_408856;\n                    }\n                    case 0x18:\n                    {\n                        goto label_40881b;\n                    }\n                    case 0x21:\n                    {\n                        goto label_40878d;\n                    }\n                    case 0x35:\n                    {\n                        if (rbx_1 < 0)\n                        {\n                            goto label_4087b7;\n                        }\n                        rbx_1 = (rbx_1 + rbx_1);\n                    label_40878d:\n                        void* r8_2 = (r8_1 + rsi_3);\n                        int32_t rax_13 = (rbp_1 | 2);\n                        *r15 = r8_2;\n                        if (*r8_2 != 0)\n                        {\n                            rbp_1 = rax_13;\n                        }\n                        goto label_408672;\n                    }\n                }\n            }\n            if ((rbx_1 >> 0x37) != 0)\n            {\n                goto label_4087b7;\n            }\n            rbx_1 = (rbx_1 << 9);\n            goto label_40878d;\n        }\n        int32_t rax_4 = *rax;\n        if (rax_4 == 0)\n        {\n            rbp_1 = 0;\n        }\n        else\n        {\n            rbp_1 = 1;\n            if (rax_4 != 0x22)\n            {\n                goto label_40869a;\n            }\n        }\n        if (arg5 == 0)\n        {\n        label_408672:\n            *arg4 = rbx_1;\n        }\n        else\n        {\n            r12_1 = *r8;\n            if (r12_1 == 0)\n            {\n                goto label_408672;\n            }\n            var_58 = r8;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) != 0)\n            {\n                goto label_4086d7;\n            }\n        label_4087e5:\n            *arg4 = rbx_1;\n            rbp_1 = (rbp_1 | 2);\n        }\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_408a10",
            "funcStartAddr": "0x408a10",
            "funcEndAddr": "0x408a8b",
            "decompiledFuncCode": "int64_t sub_408a10(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_408bd0(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_408a90",
            "funcStartAddr": "0x408a90",
            "funcEndAddr": "0x408bc5",
            "decompiledFuncCode": "uint64_t sub_408a90(int32_t arg1, int32_t arg2, int32_t arg3)\n{\n    void* var_58 = &arg_8;\n    int64_t rcx;\n    int64_t var_30 = rcx;\n    int32_t var_60 = 0x10;\n    void var_48;\n    void* var_50 = &var_48;\n    if (arg2 != 0x406)\n    {\n        return fcntl();\n    }\n    int32_t var_60_1 = 0x18;\n    int32_t rax_2;\n    int32_t rax_5;\n    int32_t* rax_15;\n    int32_t rax_17;\n    int32_t rbx;\n    if (data_60f4f8 < 0)\n    {\n        rax_5 = sub_408a90();\n        rbx = rax_5;\n    }\n    else\n    {\n        rax_2 = fcntl();\n        rbx = rax_2;\n        if (rax_2 < 0)\n        {\n            rax_15 = __errno_location();\n            if (*rax_15 == 0x16)\n            {\n                rax_17 = sub_408a90(arg1, 0, arg3);\n                rbx = rax_17;\n                if (rax_17 >= 0)\n                {\n                    data_60f4f8 = 0xffffffff;\n                }\n            }\n        }\n    }\n    if (((((data_60f4f8 >= 0 && rax_2 < 0) && *rax_15 == 0x16) && rax_17 >= 0) || (rax_5 >= 0 && data_60f4f8 == 0xffffffff)))\n    {\n        int32_t rax_7 = fcntl(rbx, 1);\n        int32_t rax_10;\n        if (rax_7 >= 0)\n        {\n            rax_10 = fcntl(rbx, 2, (rax_7 | 1));\n        }\n        if ((rax_7 < 0 || (rax_7 >= 0 && rax_10 == 0xffffffff)))\n        {\n            int32_t* rax_11 = __errno_location();\n            int32_t rdi_2 = rbx;\n            rbx = -1;\n            int32_t r12_1 = *rax_11;\n            close(rdi_2);\n            *rax_11 = r12_1;\n        }\n    }\n    if ((data_60f4f8 >= 0 && (rax_2 >= 0 || (rax_2 < 0 && *rax_15 != 0x16))))\n    {\n        data_60f4f8 = 1;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_408bd0",
            "funcStartAddr": "0x408bd0",
            "funcEndAddr": "0x408c10",
            "decompiledFuncCode": "int64_t sub_408bd0(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_408c10(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_408c10",
            "funcStartAddr": "0x408c10",
            "funcEndAddr": "0x408c67",
            "decompiledFuncCode": "off64_t sub_408c10(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_408c70",
            "funcStartAddr": "0x408c70",
            "funcEndAddr": "0x408d4f",
            "decompiledFuncCode": "uint64_t sub_408c70(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_408d50",
            "funcStartAddr": "0x408d50",
            "funcEndAddr": "0x40936c",
            "decompiledFuncCode": "uint64_t sub_408d50(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_408f80;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_408ea6;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_408ea6;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_408ea6:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_408f80:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_408fae;\n                }\n                *arg5 = r12;\n            label_408fae:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_408fcc;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_408fcc:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_408fcc;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_408f3e;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_408f3e:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_409370",
            "funcStartAddr": "0x409370",
            "funcEndAddr": "0x409936",
            "decompiledFuncCode": "uint64_t sub_409370(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_4095ac;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_409438;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_409438:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_408c70(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_40ccb1;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_408c70(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_4095ac;\n                }\n                *arg7 = rdx_2;\n            label_4095ac:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_4096b0;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_40ccb1;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_409720;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_4096b0;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_4096b0;\n                            }\n                            goto label_409671;\n                        }\n                    label_409671:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_408d50(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_40ccb2);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_4096b0:\n                            rdx = &r14_1[1];\n                        label_4094f1:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_4096ee;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_4096ee:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_40ccd0;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_409720:\n                                        r14_2 = sub_408d50(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_4097dd;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_4097dd:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_4095ac;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_409438;\n        }\n        goto label_4094f1;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4099a0",
            "funcStartAddr": "0x4099a0",
            "funcEndAddr": "0x4099b8",
            "decompiledFuncCode": "uint64_t sub_4099a0(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_409a40",
            "funcStartAddr": "0x409a40",
            "funcEndAddr": "0x409aba",
            "decompiledFuncCode": "uint64_t sub_409a40(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_40ccb4[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_409a6a;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_409a6a:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_409bc0() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_409ac0",
            "funcStartAddr": "0x409ac0",
            "funcEndAddr": "0x409b1d",
            "decompiledFuncCode": "uint64_t sub_409ac0(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_408a10(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_409b20",
            "funcStartAddr": "0x409b20",
            "funcEndAddr": "0x409bb3",
            "decompiledFuncCode": "FILE* sub_409b20(char* arg1, char* arg2)\n{\n    FILE* rax = fopen(arg1, arg2);\n    FILE* rbx = rax;\n    if (rax != 0)\n    {\n        int32_t rax_1 = fileno(rax);\n        if (rax_1 <= 2)\n        {\n            int32_t rax_3 = sub_40a190(rax_1);\n            if (rax_3 < 0)\n            {\n                int32_t* rax_7 = __errno_location();\n                FILE* rdi_5 = rbx;\n                rbx = nullptr;\n                int32_t r12_2 = *rax_7;\n                sub_408a10(rdi_5);\n                *rax_7 = r12_2;\n            }\n            else\n            {\n                int32_t rax_4 = sub_408a10(rbx);\n                FILE* rax_5;\n                if (rax_4 == 0)\n                {\n                    rax_5 = fdopen(rax_3, arg2);\n                    rbx = rax_5;\n                }\n                if ((rax_4 != 0 || (rax_4 == 0 && rax_5 == 0)))\n                {\n                    int32_t* rax_6 = __errno_location();\n                    int32_t rbp_1 = *rax_6;\n                    close(rax_3);\n                    *rax_6 = rbp_1;\n                    rbx = nullptr;\n                }\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_409bc0",
            "funcStartAddr": "0x409bc0",
            "funcEndAddr": "0x409c1e",
            "decompiledFuncCode": "int64_t sub_409bc0()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_40ccd4;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            void* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_409c20",
            "funcStartAddr": "0x409c20",
            "funcEndAddr": "0x40a182",
            "decompiledFuncCode": "char* sub_409c20()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_60f538;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_40ccb4[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        size_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            size_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_409d1c;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_409d66;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_409d1c:\n            r15 = &data_40ccb4[0x1b];\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_409d66:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, \"r\");\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_409e1c:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_409fab;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_409e58:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_409e58;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_409e92:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_409e92;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_40ccb4[0x1b];\n                                    free(rdi_26);\n                                    sub_408a10(rax_12);\n                                    goto label_409da7;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_40a06b:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_40a06b;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_40a0b9:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_40a0b9;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_409e1c;\n                        }\n                        break;\n                    }\n                label_409fab:\n                    sub_408a10(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_40ccb4[0x1b];\n            }\n        label_409da7:\n            free(rbp_3);\n        }\n        data_60f538 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_40a190",
            "funcStartAddr": "0x40a190",
            "funcEndAddr": "0x40a19e",
            "decompiledFuncCode": "int64_t sub_40a190(int32_t arg1)\n{\n    /* tailcall */\n    return sub_408a90(arg1, 0, 3);\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x40a1a0",
            "funcEndAddr": "0x40a1fd",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x40a200",
            "funcEndAddr": "0x40a201",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_40a210",
            "funcStartAddr": "0x40a210",
            "funcEndAddr": "0x40a228",
            "decompiledFuncCode": "int64_t sub_40a210(void (* arg1)(void*))\n{\n    int64_t rdx = data_60f2c8;\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, rdx);\n}\n\n"
        },
        {
            "funcName": "sub_40a228",
            "funcStartAddr": "0x40a228",
            "funcEndAddr": "0x40a248",
            "decompiledFuncCode": "int64_t sub_40a228(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_60ee30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}