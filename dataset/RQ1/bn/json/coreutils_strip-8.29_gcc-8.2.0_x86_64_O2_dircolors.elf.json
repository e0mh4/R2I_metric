{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_dircolors.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 158,
    "funcInfo": [
        {
            "funcName": "sub_4018f0",
            "funcStartAddr": "0x4018f0",
            "funcEndAddr": "0x4018fc",
            "decompiledFuncCode": "int64_t sub_4018f0()\n{\n    int64_t var_8 = data_60f008;\n    /* jump -> data_60f010 */\n}\n\n"
        },
        {
            "funcName": "sub_401906",
            "funcStartAddr": "0x401906",
            "funcEndAddr": "0x401910",
            "decompiledFuncCode": "int64_t sub_401906()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401916",
            "funcStartAddr": "0x401916",
            "funcEndAddr": "0x401920",
            "decompiledFuncCode": "int64_t sub_401916()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401926",
            "funcStartAddr": "0x401926",
            "funcEndAddr": "0x401930",
            "decompiledFuncCode": "int64_t sub_401926()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401946",
            "funcStartAddr": "0x401946",
            "funcEndAddr": "0x401950",
            "decompiledFuncCode": "int64_t sub_401946()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401956",
            "funcStartAddr": "0x401956",
            "funcEndAddr": "0x401960",
            "decompiledFuncCode": "int64_t sub_401956()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401966",
            "funcStartAddr": "0x401966",
            "funcEndAddr": "0x401970",
            "decompiledFuncCode": "int64_t sub_401966()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401976",
            "funcStartAddr": "0x401976",
            "funcEndAddr": "0x401980",
            "decompiledFuncCode": "int64_t sub_401976()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401986",
            "funcStartAddr": "0x401986",
            "funcEndAddr": "0x401990",
            "decompiledFuncCode": "int64_t sub_401986()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401996",
            "funcStartAddr": "0x401996",
            "funcEndAddr": "0x4019a0",
            "decompiledFuncCode": "int64_t sub_401996()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_4019a6",
            "funcStartAddr": "0x4019a6",
            "funcEndAddr": "0x4019b0",
            "decompiledFuncCode": "int64_t sub_4019a6()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_4019b6",
            "funcStartAddr": "0x4019b6",
            "funcEndAddr": "0x4019c0",
            "decompiledFuncCode": "int64_t sub_4019b6()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_4019c6",
            "funcStartAddr": "0x4019c6",
            "funcEndAddr": "0x4019d0",
            "decompiledFuncCode": "int64_t sub_4019c6()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_4019d6",
            "funcStartAddr": "0x4019d6",
            "funcEndAddr": "0x4019e0",
            "decompiledFuncCode": "int64_t sub_4019d6()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_4019e6",
            "funcStartAddr": "0x4019e6",
            "funcEndAddr": "0x4019f0",
            "decompiledFuncCode": "int64_t sub_4019e6()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_4019f6",
            "funcStartAddr": "0x4019f6",
            "funcEndAddr": "0x401a00",
            "decompiledFuncCode": "int64_t sub_4019f6()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401a06",
            "funcStartAddr": "0x401a06",
            "funcEndAddr": "0x401a10",
            "decompiledFuncCode": "int64_t sub_401a06()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401a16",
            "funcStartAddr": "0x401a16",
            "funcEndAddr": "0x401a20",
            "decompiledFuncCode": "int64_t sub_401a16()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401a26",
            "funcStartAddr": "0x401a26",
            "funcEndAddr": "0x401a30",
            "decompiledFuncCode": "int64_t sub_401a26()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401a36",
            "funcStartAddr": "0x401a36",
            "funcEndAddr": "0x401a40",
            "decompiledFuncCode": "int64_t sub_401a36()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401a46",
            "funcStartAddr": "0x401a46",
            "funcEndAddr": "0x401a50",
            "decompiledFuncCode": "int64_t sub_401a46()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401a56",
            "funcStartAddr": "0x401a56",
            "funcEndAddr": "0x401a60",
            "decompiledFuncCode": "int64_t sub_401a56()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401a66",
            "funcStartAddr": "0x401a66",
            "funcEndAddr": "0x401a70",
            "decompiledFuncCode": "int64_t sub_401a66()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401a76",
            "funcStartAddr": "0x401a76",
            "funcEndAddr": "0x401a80",
            "decompiledFuncCode": "int64_t sub_401a76()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401a86",
            "funcStartAddr": "0x401a86",
            "funcEndAddr": "0x401a90",
            "decompiledFuncCode": "int64_t sub_401a86()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401a96",
            "funcStartAddr": "0x401a96",
            "funcEndAddr": "0x401aa0",
            "decompiledFuncCode": "int64_t sub_401a96()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401aa6",
            "funcStartAddr": "0x401aa6",
            "funcEndAddr": "0x401ab0",
            "decompiledFuncCode": "int64_t sub_401aa6()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401ab6",
            "funcStartAddr": "0x401ab6",
            "funcEndAddr": "0x401ac0",
            "decompiledFuncCode": "int64_t sub_401ab6()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401ac6",
            "funcStartAddr": "0x401ac6",
            "funcEndAddr": "0x401ad0",
            "decompiledFuncCode": "int64_t sub_401ac6()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401ad6",
            "funcStartAddr": "0x401ad6",
            "funcEndAddr": "0x401ae0",
            "decompiledFuncCode": "int64_t sub_401ad6()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401ae6",
            "funcStartAddr": "0x401ae6",
            "funcEndAddr": "0x401af0",
            "decompiledFuncCode": "int64_t sub_401ae6()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401af6",
            "funcStartAddr": "0x401af6",
            "funcEndAddr": "0x401b00",
            "decompiledFuncCode": "int64_t sub_401af6()\n{\n    int64_t var_8 = 0x1f;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401b06",
            "funcStartAddr": "0x401b06",
            "funcEndAddr": "0x401b10",
            "decompiledFuncCode": "int64_t sub_401b06()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401b16",
            "funcStartAddr": "0x401b16",
            "funcEndAddr": "0x401b20",
            "decompiledFuncCode": "int64_t sub_401b16()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401b26",
            "funcStartAddr": "0x401b26",
            "funcEndAddr": "0x401b30",
            "decompiledFuncCode": "int64_t sub_401b26()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401b36",
            "funcStartAddr": "0x401b36",
            "funcEndAddr": "0x401b40",
            "decompiledFuncCode": "int64_t sub_401b36()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401b46",
            "funcStartAddr": "0x401b46",
            "funcEndAddr": "0x401b50",
            "decompiledFuncCode": "int64_t sub_401b46()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401b56",
            "funcStartAddr": "0x401b56",
            "funcEndAddr": "0x401b60",
            "decompiledFuncCode": "int64_t sub_401b56()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401b66",
            "funcStartAddr": "0x401b66",
            "funcEndAddr": "0x401b70",
            "decompiledFuncCode": "int64_t sub_401b66()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401b76",
            "funcStartAddr": "0x401b76",
            "funcEndAddr": "0x401b80",
            "decompiledFuncCode": "int64_t sub_401b76()\n{\n    int64_t var_8 = 0x27;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401b86",
            "funcStartAddr": "0x401b86",
            "funcEndAddr": "0x401b90",
            "decompiledFuncCode": "int64_t sub_401b86()\n{\n    int64_t var_8 = 0x28;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401b96",
            "funcStartAddr": "0x401b96",
            "funcEndAddr": "0x401ba0",
            "decompiledFuncCode": "int64_t sub_401b96()\n{\n    int64_t var_8 = 0x29;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401ba6",
            "funcStartAddr": "0x401ba6",
            "funcEndAddr": "0x401bb0",
            "decompiledFuncCode": "int64_t sub_401ba6()\n{\n    int64_t var_8 = 0x2a;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401bb6",
            "funcStartAddr": "0x401bb6",
            "funcEndAddr": "0x401bc0",
            "decompiledFuncCode": "int64_t sub_401bb6()\n{\n    int64_t var_8 = 0x2b;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401bc6",
            "funcStartAddr": "0x401bc6",
            "funcEndAddr": "0x401bd0",
            "decompiledFuncCode": "int64_t sub_401bc6()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401bd6",
            "funcStartAddr": "0x401bd6",
            "funcEndAddr": "0x401be0",
            "decompiledFuncCode": "int64_t sub_401bd6()\n{\n    int64_t var_8 = 0x2d;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401be6",
            "funcStartAddr": "0x401be6",
            "funcEndAddr": "0x401bf0",
            "decompiledFuncCode": "int64_t sub_401be6()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401c06",
            "funcStartAddr": "0x401c06",
            "funcEndAddr": "0x401c10",
            "decompiledFuncCode": "int64_t sub_401c06()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401c16",
            "funcStartAddr": "0x401c16",
            "funcEndAddr": "0x401c20",
            "decompiledFuncCode": "int64_t sub_401c16()\n{\n    int64_t var_8 = 0x31;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401c26",
            "funcStartAddr": "0x401c26",
            "funcEndAddr": "0x401c30",
            "decompiledFuncCode": "int64_t sub_401c26()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401c46",
            "funcStartAddr": "0x401c46",
            "funcEndAddr": "0x401c50",
            "decompiledFuncCode": "int64_t sub_401c46()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401c56",
            "funcStartAddr": "0x401c56",
            "funcEndAddr": "0x401c60",
            "decompiledFuncCode": "int64_t sub_401c56()\n{\n    int64_t var_8 = 0x35;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401c66",
            "funcStartAddr": "0x401c66",
            "funcEndAddr": "0x401c70",
            "decompiledFuncCode": "int64_t sub_401c66()\n{\n    int64_t var_8 = 0x36;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401c76",
            "funcStartAddr": "0x401c76",
            "funcEndAddr": "0x401c80",
            "decompiledFuncCode": "int64_t sub_401c76()\n{\n    int64_t var_8 = 0x37;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401c86",
            "funcStartAddr": "0x401c86",
            "funcEndAddr": "0x401c90",
            "decompiledFuncCode": "int64_t sub_401c86()\n{\n    int64_t var_8 = 0x38;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401c96",
            "funcStartAddr": "0x401c96",
            "funcEndAddr": "0x401ca0",
            "decompiledFuncCode": "int64_t sub_401c96()\n{\n    int64_t var_8 = 0x39;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401ca6",
            "funcStartAddr": "0x401ca6",
            "funcEndAddr": "0x401cb0",
            "decompiledFuncCode": "int64_t sub_401ca6()\n{\n    int64_t var_8 = 0x3a;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401cb6",
            "funcStartAddr": "0x401cb6",
            "funcEndAddr": "0x401cc0",
            "decompiledFuncCode": "int64_t sub_401cb6()\n{\n    int64_t var_8 = 0x3b;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401cc6",
            "funcStartAddr": "0x401cc6",
            "funcEndAddr": "0x401cd0",
            "decompiledFuncCode": "int64_t sub_401cc6()\n{\n    int64_t var_8 = 0x3c;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401cd6",
            "funcStartAddr": "0x401cd6",
            "funcEndAddr": "0x401ce0",
            "decompiledFuncCode": "int64_t sub_401cd6()\n{\n    int64_t var_8 = 0x3d;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401ce6",
            "funcStartAddr": "0x401ce6",
            "funcEndAddr": "0x401cf0",
            "decompiledFuncCode": "int64_t sub_401ce6()\n{\n    int64_t var_8 = 0x3e;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401d06",
            "funcStartAddr": "0x401d06",
            "funcEndAddr": "0x401d10",
            "decompiledFuncCode": "int64_t sub_401d06()\n{\n    int64_t var_8 = 0x40;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401d16",
            "funcStartAddr": "0x401d16",
            "funcEndAddr": "0x401d20",
            "decompiledFuncCode": "int64_t sub_401d16()\n{\n    int64_t var_8 = 0x41;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "sub_401d26",
            "funcStartAddr": "0x401d26",
            "funcEndAddr": "0x401d30",
            "decompiledFuncCode": "int64_t sub_401d26()\n{\n    int64_t var_8 = 0x42;\n    /* tailcall */\n    return sub_4018f0();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x401d70",
            "funcEndAddr": "0x4021a2",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    int32_t r13 = 2;\n    char rbp_1 = 0;\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rcx = sub_403110(*argv);\n    int32_t rbx;\n    int32_t rbp;\n    setlocale(6, &data_40ca14[0x1b], rdx, rcx, r8, r9, rbx, rbp);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    sub_409580(sub_402de0);\n    while (true)\n    {\n        int32_t rax_1 = getopt_long(argc, argv, &data_40970a, &data_409d80, nullptr);\n        if (rax_1 == 0xffffffff)\n        {\n            int64_t rax_3 = data_60f2bc;\n            int32_t r12_1 = (argc - rax_3);\n            void* rbx_2 = &argv[rax_3];\n            if ((r13 != 2 && rbp_1 != 0))\n            {\n                error(0, 0, dcgettext(nullptr, \"the options to output dircolors'\u2026\", 5));\n            }\n            if ((r13 == 2 || (r13 != 2 && rbp_1 == 0)))\n            {\n                if (((rbp_1 ^ 1) < r12_1 && rbp_1 != 0))\n                {\n                    error(0, 0, dcgettext(nullptr, \"extra operand %s\", 5), sub_404d30(*rbx_2));\n                    __fprintf_chk(stderr, 1, \"%s\\n\", dcgettext(nullptr, \"file operands cannot be combined\u2026\", 5));\n                }\n                if ((rbp_1 ^ 1) >= r12_1)\n                {\n                    char* rax_20;\n                    if (rbp_1 == 0)\n                    {\n                        if (r13 == 2)\n                        {\n                            rax_20 = getenv(\"SHELL\");\n                            if ((rax_20 == 0 || (rax_20 != 0 && *rax_20 == 0)))\n                            {\n                                error(1, 0, dcgettext(nullptr, \"no SHELL environment variable, a\u2026\", 5));\n                            }\n                            if ((rax_20 != 0 && *rax_20 != 0))\n                            {\n                                char* rax_21 = sub_402e80(rax_20);\n                                if (strcmp(rax_21, \"csh\") == 0)\n                                {\n                                    r13 = 1;\n                                }\n                                else\n                                {\n                                    r13 = strcmp(rax_21, \"tcsh\") == 0;\n                                }\n                            }\n                        }\n                        if ((r13 != 2 || ((r13 == 2 && rax_20 != 0) && *rax_20 != 0)))\n                        {\n                            _obstack_begin(&data_60f320, 0, 0, 0x401b90, 0x401930);\n                            int32_t rax_12;\n                            FILE* rax_13;\n                            if (r12_1 == 0)\n                            {\n                                rbp_1 = sub_402480(nullptr, 0);\n                            }\n                            else\n                            {\n                                char* rbx_4 = *rbx_2;\n                                rax_12 = strcmp(rbx_4, &data_40ca12);\n                                if (rax_12 != 0)\n                                {\n                                    rax_13 = sub_402f60(rbx_4, \"r\", stdin);\n                                    if (rax_13 == 0)\n                                    {\n                                    label_402093:\n                                        error(0, *__errno_location(), \"%s\", sub_404bb0(0, 3, rbx_4));\n                                    }\n                                }\n                                if ((rax_12 == 0 || (rax_12 != 0 && rax_13 != 0)))\n                                {\n                                    char rax_14 = sub_402480(stdin, rbx_4);\n                                    if (sub_4055a0(stdin) != 0)\n                                    {\n                                        goto label_402093;\n                                    }\n                                    rbp_1 = rax_14;\n                                }\n                            }\n                            if (((r12_1 == 0 || (r12_1 != 0 && (rax_12 == 0 || (rax_12 != 0 && rax_13 != 0)))) && rbp_1 != 0))\n                            {\n                                int64_t rax_16 = data_60f338;\n                                int64_t r12_3 = data_60f330;\n                                int64_t rbx_6 = (rax_16 - r12_3);\n                                if (rax_16 == r12_3)\n                                {\n                                    data_60f370 = (data_60f370 | 2);\n                                }\n                                int64_t rdx_2 = data_60f350;\n                                int64_t rcx_3 = data_60f328;\n                                char const* const r14_1 = \"';\\nexport LS_COLORS\\n\";\n                                int64_t rax_18 = ((rax_16 + rdx_2) & (!rdx_2));\n                                int64_t rdx_4 = data_60f340;\n                                char const* const rdi_11 = \"LS_COLORS='\";\n                                FILE* rsi_4 = stdout;\n                                if ((rax_18 - rcx_3) > (rdx_4 - rcx_3))\n                                {\n                                    rax_18 = rdx_4;\n                                }\n                                bool cond:4_1 = r13 != 0;\n                                data_60f338 = rax_18;\n                                data_60f330 = rax_18;\n                                if (r13 != 0)\n                                {\n                                    r14_1 = \"'\\n\";\n                                }\n                                if (cond:4_1)\n                                {\n                                    rdi_11 = \"setenv LS_COLORS '\";\n                                }\n                                fputs_unlocked(rdi_11, rsi_4);\n                                fwrite_unlocked(r12_3, 1, rbx_6, stdout);\n                                fputs_unlocked(r14_1, stdout);\n                            }\n                        }\n                    }\n                    else\n                    {\n                        char const* const rbx_3 = \"# Configuration file for dircolo\u2026\";\n                        do\n                        {\n                            puts(rbx_3);\n                            char const* const rdi_4 = rbx_3;\n                            int64_t rcx_2 = -1;\n                            while (rcx_2 != 0)\n                            {\n                                bool cond:1_1 = 0 != *rdi_4;\n                                rdi_4 = &rdi_4[1];\n                                rcx_2 = (rcx_2 - 1);\n                                if ((!cond:1_1))\n                                {\n                                    break;\n                                }\n                            }\n                            rbx_3 = &rbx_3[(!rcx_2)];\n                        } while ((rbx_3 - \"# Configuration file for dircolo\u2026\") <= 0x104c);\n                    }\n                    if ((rbp_1 != 0 || (rbp_1 == 0 && (r13 != 2 || ((r13 == 2 && rax_20 != 0) && *rax_20 != 0)))))\n                    {\n                        return (rbp_1 ^ 1);\n                    }\n                }\n                if ((((rbp_1 ^ 1) < r12_1 && rbp_1 == 0) || (rbp_1 ^ 1) >= r12_1))\n                {\n                    error(0, 0, dcgettext(nullptr, \"extra operand %s\", 5), sub_404d30(*(rbx_2 + 8)));\n                }\n            }\n            break;\n        }\n        bool cond:0_1 = rax_1 <= 0x62;\n        if (rax_1 == 0x62)\n        {\n            r13 = 0;\n        }\n        else\n        {\n            if (cond:0_1)\n            {\n                if (rax_1 == 0xffffff7d)\n                {\n                    sub_4051b0(stdout, \"dircolors\", \"GNU coreutils\", data_60f250);\n                    exit(0);\n                    /* no return */\n                }\n                if (rax_1 == 0xffffff7e)\n                {\n                    sub_402a50(0);\n                    /* no return */\n                }\n                break;\n            }\n            if (rax_1 == 0x63)\n            {\n                r13 = 1;\n            }\n            else\n            {\n                if (rax_1 != 0x70)\n                {\n                    break;\n                }\n                rbp_1 = 1;\n            }\n        }\n    }\n    sub_402a50(1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x4021b0",
            "funcEndAddr": "0x4021da",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4021db",
            "funcStartAddr": "0x4021db",
            "funcEndAddr": "0x4021fa",
            "decompiledFuncCode": "void sub_4021db()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_4021fa",
            "funcStartAddr": "0x4021fa",
            "funcEndAddr": "0x402231",
            "decompiledFuncCode": "int64_t sub_4021fa()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_402231",
            "funcStartAddr": "0x402231",
            "funcEndAddr": "0x402288",
            "decompiledFuncCode": "void sub_402231()\n{\n    if (data_60f308 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_60f310;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_60f310 = (rax_1 + 1);\n        *(0x60ee40 + ((rax_1 + 1) << 3))();\n    }\n    sub_4021db();\n    data_60f308 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_402288",
            "funcStartAddr": "0x402288",
            "funcEndAddr": "0x40228d",
            "decompiledFuncCode": "int64_t j_sub_4021fa()\n{\n    /* tailcall */\n    return sub_4021fa();\n}\n\n"
        },
        {
            "funcName": "sub_402290",
            "funcStartAddr": "0x402290",
            "funcEndAddr": "0x402471",
            "decompiledFuncCode": "uint64_t sub_402290(char* arg1)\n{\n    uint64_t rax_5 = *arg1;\n    if (rax_5 == 0)\n    {\n        return rax_5;\n    }\n    int32_t rbp = 1;\n    char* rbx = arg1;\n    do\n    {\n        int64_t rcx_1 = data_60f340;\n        char* rdx_1 = data_60f338;\n        bool cond:0_1 = rax_5 > 0x3d;\n        if ((!cond:0_1))\n        {\n            if (rax_5 == 0x27)\n            {\n                if (rcx_1 == rdx_1)\n                {\n                    _obstack_newchunk(&data_60f320, 1);\n                    rdx_1 = data_60f338;\n                }\n                data_60f338 = &rdx_1[1];\n                *rdx_1 = 0x27;\n                char* rax_1 = data_60f338;\n                if (data_60f340 == rax_1)\n                {\n                    _obstack_newchunk(&data_60f320, 1);\n                    rax_1 = data_60f338;\n                }\n                data_60f338 = &rax_1[1];\n                *rax_1 = 0x5c;\n                char* rax_2 = data_60f338;\n                if (data_60f340 == rax_2)\n                {\n                    _obstack_newchunk(&data_60f320, 1);\n                    rax_2 = data_60f338;\n                }\n                rbp = 1;\n                data_60f338 = &rax_2[1];\n                *rax_2 = 0x27;\n                rcx_1 = data_60f340;\n                rdx_1 = data_60f338;\n            }\n            if (((rax_5 != 0x3d && rax_5 != 0x27) && rax_5 != 0x3a))\n            {\n                goto label_4023b8;\n            }\n        }\n        if ((rax_5 != 0x3d && cond:0_1))\n        {\n            if ((rax_5 != 0x5c && rax_5 != 0x5e))\n            {\n                goto label_4023b8;\n            }\n            rbp = (rbp ^ 1);\n        }\n        if (((rax_5 == 0x3d || ((rax_5 != 0x3d && (!cond:0_1)) && rax_5 != 0x27)) && rbp == 0))\n        {\n        label_4023b8:\n            rbp = 1;\n        }\n        if ((((((rax_5 == 0x3d || ((rax_5 != 0x3d && (!cond:0_1)) && rax_5 != 0x27)) && rbp == 0) || ((!cond:0_1) && rax_5 == 0x27)) || (rax_5 != 0x3d && cond:0_1)) && rcx_1 == rdx_1))\n        {\n        label_4023a2:\n            _obstack_newchunk(&data_60f320, 1);\n            rdx_1 = data_60f338;\n        }\n        if (((rax_5 == 0x3d || ((rax_5 != 0x3d && (!cond:0_1)) && rax_5 != 0x27)) && rbp != 0))\n        {\n            if (rcx_1 == rdx_1)\n            {\n                _obstack_newchunk(&data_60f320, 1);\n                rdx_1 = data_60f338;\n            }\n            data_60f338 = &rdx_1[1];\n            *rdx_1 = 0x5c;\n            rdx_1 = data_60f338;\n            if (data_60f340 == rdx_1)\n            {\n                goto label_4023a2;\n            }\n        }\n        rbx = &rbx[1];\n        data_60f338 = &rdx_1[1];\n        *rdx_1 = rbx[-1];\n        rax_5 = *rbx;\n    } while (rax_5 != 0);\n    return rax_5;\n}\n\n"
        },
        {
            "funcName": "sub_402480",
            "funcStartAddr": "0x402480",
            "funcEndAddr": "0x402a41",
            "decompiledFuncCode": "uint64_t sub_402480(FILE* arg1, uint64_t arg2)\n{\n    char* var_48 = nullptr;\n    int64_t var_40 = 0;\n    char* rax = getenv(\"TERM\");\n    char* var_58;\n    if (rax == 0)\n    {\n        var_58 = \"none\";\n    }\n    else\n    {\n        char* rax_1 = \"none\";\n        if (*rax != 0)\n        {\n            rax_1 = rax;\n        }\n        var_58 = rax_1;\n    }\n    char var_4d = 1;\n    int32_t r15 = 3;\n    char const* const r12 = \"# Configuration file for dircolo\u2026\";\n    int64_t rbp = 0;\nlabel_4024e8:\n    rbp = (rbp + 1);\n    char const* const rbx_2;\n    if (arg1 == 0)\n    {\n        while (true)\n        {\n            if (r12 == \"8.29\")\n            {\n                return var_4d;\n            }\n            rbx_2 = r12;\n            r12 = &r12[(strlen(r12) + 1)];\n        label_40251a:\n            uint16_t** rax_3 = __ctype_b_loc();\n            uint16_t* rsi_1 = *rax_3;\n        label_402525:\n            uint64_t rcx_2 = *rbx_2;\n            if ((*(&rsi_1[rcx_2] + 1) & 0x20) != 0)\n            {\n                rbx_2 = &rbx_2[1];\n                goto label_402525;\n            }\n            if (rcx_2 == 0)\n            {\n                goto label_4024e8;\n            }\n            if (rcx_2 == 0x23)\n            {\n                goto label_4024e8;\n            }\n            char const* const r13_1 = rbx_2;\n        label_402540:\n            r13_1 = &r13_1[1];\n            uint64_t rax_4 = *r13_1;\n            if ((rax_4 != 0 & ((rsi_1[rax_4] >> 0xd) ^ 1)) != 0)\n            {\n                goto label_402540;\n            }\n            char* rax_7 = sub_405580(rbx_2);\n            if (*r13_1 != 0)\n            {\n                uint16_t* rdi_2 = *rax_3;\n            label_402590:\n                r13_1 = &r13_1[1];\n                uint64_t rax_8 = *r13_1;\n                char rdx_3 = rax_8;\n                if ((*(&rdi_2[rax_8] + 1) & 0x20) != 0)\n                {\n                    goto label_402590;\n                }\n                if (rax_8 != 0)\n                {\n                    char const* const rax_9 = r13_1;\n                    if (rdx_3 != 0x23)\n                    {\n                    label_4025c3:\n                        bool rdx_4 = rax_9[1];\n                        char const* const rsi_4 = &rax_9[1];\n                        bool rcx_4 = rdx_4 != 0;\n                        rdx_4 = rdx_4 != 0x23;\n                        if ((rcx_4 & rdx_4) != 0)\n                        {\n                            rax_9 = rsi_4;\n                            goto label_4025c3;\n                        }\n                        if ((*(&rdi_2[rsi_4[-1]] + 1) & 0x20) != 0)\n                        {\n                            rsi_4 = rax_9;\n                        label_4027f7:\n                            void* rdx_11 = &rsi_4[-1];\n                            if ((*(&rdi_2[rsi_4[-1]] + 1) & 0x20) != 0)\n                            {\n                                rsi_4 = rdx_11;\n                                goto label_4027f7;\n                            }\n                        }\n                        char* rax_10 = sub_405580(r13_1);\n                        if (rax_7 == 0)\n                        {\n                            goto label_4024e8;\n                        }\n                        if (rax_10 == 0)\n                        {\n                            goto label_4026e5;\n                        }\n                        if (sub_402d60(rax_7, \"TERM\") == 0)\n                        {\n                            int32_t rax_20 = sub_407910(rax_10, var_58, 0);\n                            bool cond:2_1;\n                            if (rax_20 != 0)\n                            {\n                                cond:2_1 = r15 != 2;\n                                r15 = 0;\n                            }\n                            if ((rax_20 == 0 || (rax_20 != 0 && (!cond:2_1))))\n                            {\n                                r15 = 2;\n                            }\n                        }\n                        else\n                        {\n                            char rax_12;\n                            if (r15 == 2)\n                            {\n                                rax_12 = *rax_7;\n                                r15 = 1;\n                            }\n                            if ((r15 != 2 && r15 != 0))\n                            {\n                                rax_12 = *rax_7;\n                            }\n                            int64_t rax_23;\n                            if (((r15 == 2 && rax_12 == 0x2e) || ((r15 != 2 && r15 != 0) && rax_12 == 0x2e)))\n                            {\n                                int64_t rax_21 = data_60f338;\n                                if (data_60f340 == rax_21)\n                                {\n                                    _obstack_newchunk(&data_60f320, 1);\n                                    rax_21 = data_60f338;\n                                }\n                                data_60f338 = (rax_21 + 1);\n                                *rax_21 = 0x2a;\n                                sub_402290(rax_7);\n                                int64_t rax_22 = data_60f338;\n                                if (data_60f340 == rax_22)\n                                {\n                                    _obstack_newchunk(&data_60f320, 1);\n                                    rax_22 = data_60f338;\n                                }\n                                data_60f338 = (rax_22 + 1);\n                                *rax_22 = 0x3d;\n                                sub_402290(rax_10);\n                                rax_23 = data_60f338;\n                                if (data_60f340 == rax_23)\n                                {\n                                    goto label_40288f;\n                                }\n                                goto label_4027dd;\n                            }\n                            if (((r15 == 2 && rax_12 != 0x2e) || ((r15 != 2 && r15 != 0) && rax_12 != 0x2e)))\n                            {\n                                int32_t rax_13;\n                                int32_t rax_14;\n                                int32_t rax_15;\n                                int32_t rax_29;\n                                if (rax_12 != 0x2a)\n                                {\n                                    rax_13 = sub_402d60(rax_7, \"OPTIONS\");\n                                    if (rax_13 != 0)\n                                    {\n                                        rax_14 = sub_402d60(rax_7, \"COLOR\");\n                                        if (rax_14 != 0)\n                                        {\n                                            rax_15 = sub_402d60(rax_7, \"EIGHTBIT\");\n                                            if (rax_15 != 0)\n                                            {\n                                                int64_t rdx_13 = 0;\n                                                char const* const rsi_7 = \"NORMAL\";\n                                            label_402904:\n                                                int32_t var_4c_1 = rdx_13;\n                                                rax_29 = sub_402d60(rax_7, rsi_7);\n                                                if (rax_29 != 0)\n                                                {\n                                                    rdx_13 = (rdx_13 + 1);\n                                                    rsi_7 = *((rdx_13 << 3) + 0x409fc0);\n                                                    if (rsi_7 != 0)\n                                                    {\n                                                        goto label_402904;\n                                                    }\n                                                    if (r15 != 3)\n                                                    {\n                                                        char* rcx_9;\n                                                        if (arg2 == 0)\n                                                        {\n                                                            rcx_9 = dcgettext(nullptr, \"<internal>\", 5);\n                                                        }\n                                                        else\n                                                        {\n                                                            rcx_9 = sub_404bb0(0, 3, arg2);\n                                                        }\n                                                        error(0, 0, dcgettext(nullptr, \"%s:%lu: unrecognized keyword %s\", 5), rcx_9, rbp, rax_7, rcx_9, arg2, var_58);\n                                                        var_4d = 0;\n                                                    }\n                                                }\n                                                else\n                                                {\n                                                    if (data_60f340 == data_60f338)\n                                                    {\n                                                        _obstack_newchunk(&data_60f320, 1);\n                                                    }\n                                                    char* rdx_15 = *((var_4c_1 << 3) + 0x409e80);\n                                                    int64_t rax_32 = data_60f338;\n                                                    data_60f338 = (rax_32 + 1);\n                                                    *rax_32 = *rdx_15;\n                                                    if (data_60f340 == data_60f338)\n                                                    {\n                                                        _obstack_newchunk(&data_60f320, 1);\n                                                    }\n                                                    int64_t rax_34 = data_60f338;\n                                                    data_60f338 = (rax_34 + 1);\n                                                    *rax_34 = rdx_15[1];\n                                                    if (data_60f340 != data_60f338)\n                                                    {\n                                                        goto label_40284c;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                else\n                                {\n                                    sub_402290(rax_7);\n                                    if (data_60f340 != data_60f338)\n                                    {\n                                        goto label_40284c;\n                                    }\n                                }\n                                if ((rax_12 == 0x2a || ((((rax_12 != 0x2a && rax_13 != 0) && rax_14 != 0) && rax_15 != 0) && rax_29 == 0)))\n                                {\n                                    _obstack_newchunk(&data_60f320, 1);\n                                label_40284c:\n                                    int64_t rax_27 = data_60f338;\n                                    data_60f338 = (rax_27 + 1);\n                                    *rax_27 = 0x3d;\n                                    sub_402290(rax_10);\n                                    if (data_60f340 != data_60f338)\n                                    {\n                                        goto label_402879;\n                                    }\n                                label_40288f:\n                                    _obstack_newchunk(&data_60f320, 1);\n                                label_402879:\n                                    rax_23 = data_60f338;\n                                label_4027dd:\n                                    data_60f338 = (rax_23 + 1);\n                                    *rax_23 = 0x3a;\n                                }\n                            }\n                        }\n                        rbp = (rbp + 1);\n                        free(rax_7);\n                        free(rax_10);\n                        if (arg1 != 0)\n                        {\n                            break;\n                        }\n                        continue;\n                    }\n                }\n            }\n            if (rax_7 == 0)\n            {\n                goto label_4024e8;\n            }\n        label_4026e5:\n            error(0, 0, dcgettext(nullptr, \"%s:%lu: invalid line;  missing s\u2026\", 5), sub_404bb0(0, 3, arg2), rbp);\n            free(rax_7);\n            var_4d = 0;\n            goto label_4024e8;\n        }\n    }\n    if (__getdelim(&var_48, &var_40, 0xa, arg1) <= 0)\n    {\n        free(var_48);\n        return var_4d;\n    }\n    rbx_2 = var_48;\n    goto label_40251a;\n}\n\n"
        },
        {
            "funcName": "sub_402a50",
            "funcStartAddr": "0x402a50",
            "funcEndAddr": "0x402d5d",
            "decompiledFuncCode": "int64_t sub_402a50(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_60f388;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [OPTION]... [FILE]\\n\", 5), rbp);\n        fputs_unlocked(dcgettext(nullptr, \"Output commands to set the LS_CO\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nIf FILE is specified, read it \u2026\", 5), stdout);\n        void* const var_88 = &data_40963f;\n        void* const* rax_8 = &var_88;\n        void* const var_78_1 = \"coreutils\";\n        void* const var_70_1 = \"Multi-call invocation\";\n        void* const var_68_1 = \"sha224sum\";\n        void* const var_60_1 = \"sha2 utilities\";\n        void* const var_58_1 = \"sha256sum\";\n        void* const var_50_1 = \"sha2 utilities\";\n        void* const var_48_1 = \"sha384sum\";\n        void* const var_40_1 = \"sha2 utilities\";\n        void* const var_38_1 = \"sha512sum\";\n        void* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_8 = &rax_8[2];\n            void* const rdi_6 = *rax_8;\n            c_1 = false;\n            z_1 = (rdi_6 & rdi_6) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            void* const rsi_6 = \"dircolors\";\n            int64_t rcx_2 = 0xa;\n            while (rcx_2 != 0)\n            {\n                char temp0_1 = *rsi_6;\n                char temp1_1 = *rdi_6;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_6 = (rsi_6 + 1);\n                rdi_6 = (rdi_6 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        void* const rbp_1 = rax_8[1];\n        char* rax_19;\n        int32_t rax_20;\n        void* const r12_1;\n        if (rbp_1 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_5;\n            uint64_t r8_2;\n            ssize_t r9_2;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_19 = setlocale(5, nullptr, rdx_5, rcx_5, r8_2, r9_2, var_88, \"test invocation\");\n            if (rax_19 != 0)\n            {\n                rax_20 = strncmp(rax_19, &data_4096c3, 3);\n                if (rax_20 != 0)\n                {\n                    rbp_1 = \"dircolors\";\n                }\n            }\n            if ((rax_19 == 0 || (rax_19 != 0 && rax_20 == 0)))\n            {\n                rbp_1 = \"dircolors\";\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"dircolors\");\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_3;\n            uint64_t r8_1;\n            ssize_t r9_1;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_11 = setlocale(5, nullptr, rdx_3, rcx_3, r8_1, r9_1, var_88, \"test invocation\");\n            if (rax_11 == 0)\n            {\n                goto label_402c50;\n            }\n            if (strncmp(rax_11, &data_4096c3, 3) == 0)\n            {\n                goto label_402c50;\n            }\n        }\n        if ((((rbp_1 == 0 && rax_19 != 0) && rax_20 != 0) || rbp_1 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), \"dircolors\");\n        label_402c50:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"dircolors\");\n            if (rbp_1 != \"dircolors\")\n            {\n                r12_1 = &data_40ca14[0x1b];\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_1, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_402d60",
            "funcStartAddr": "0x402d60",
            "funcEndAddr": "0x402db9",
            "decompiledFuncCode": "uint64_t sub_402d60(void* arg1, void* arg2)\n{\n    uint64_t rax_2 = 0;\n    if (arg1 != arg2)\n    {\n        int64_t rdx_1 = 0;\n        uint32_t r8_1;\n        uint32_t r9_1;\n        uint32_t rax;\n        uint32_t rcx_2;\n        do\n        {\n            r8_1 = *(arg1 + rdx_1);\n            rax = r8_1;\n            if ((r8_1 - 0x41) <= 0x19)\n            {\n                r8_1 = (r8_1 + 0x20);\n                rax = (rax + 0x20);\n            }\n            r9_1 = *(arg2 + rdx_1);\n            rcx_2 = r9_1;\n            if ((r9_1 - 0x41) <= 0x19)\n            {\n                r9_1 = (r9_1 + 0x20);\n                rcx_2 = (rcx_2 + 0x20);\n            }\n            if (rax == 0)\n            {\n                break;\n            }\n            rdx_1 = (rdx_1 + 1);\n        } while (rax == rcx_2);\n        rax_2 = (r8_1 - r9_1);\n    }\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_402dc0",
            "funcStartAddr": "0x402dc0",
            "funcEndAddr": "0x402dc8",
            "decompiledFuncCode": "int64_t sub_402dc0(int64_t arg1)\n{\n    data_60f380 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_402dd0",
            "funcStartAddr": "0x402dd0",
            "funcEndAddr": "0x402dd8",
            "decompiledFuncCode": "int64_t sub_402dd0(char arg1)\n{\n    data_60f378 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_402de0",
            "funcStartAddr": "0x402de0",
            "funcEndAddr": "0x402e7e",
            "decompiledFuncCode": "void sub_402de0(void* arg1)\n{\n    int32_t rax = sub_408ee0(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_60f378 == 0 || (data_60f378 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_60f380;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_404b80(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_60f378 != 0) && *rax_1 == 0x20)) && sub_408ee0(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_60f258);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_402e80",
            "funcStartAddr": "0x402e80",
            "funcEndAddr": "0x402edb",
            "decompiledFuncCode": "char* sub_402e80(char* arg1)\n{\n    char rdx = *arg1;\n    char* rax = arg1;\n    if (rdx == 0x2f)\n    {\n        do\n        {\n            rax = &rax[1];\n            rdx = *rax;\n        } while (rdx == 0x2f);\n    }\n    if (rdx != 0)\n    {\n        char* rcx_1 = rax;\n        char rsi_1 = 0;\n        while (true)\n        {\n            if (rdx == 0x2f)\n            {\n                rcx_1 = &rcx_1[1];\n                rdx = *rcx_1;\n                rsi_1 = 1;\n                if (rdx == 0)\n                {\n                    break;\n                }\n            }\n            else\n            {\n                if (rsi_1 != 0)\n                {\n                    rax = rcx_1;\n                    rsi_1 = 0;\n                }\n                rcx_1 = &rcx_1[1];\n                rdx = *rcx_1;\n                if (rdx == 0)\n                {\n                    break;\n                }\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_402ee0",
            "funcStartAddr": "0x402ee0",
            "funcEndAddr": "0x402f0b",
            "decompiledFuncCode": "uint64_t sub_402ee0(char* arg1)\n{\n    uint64_t rax = strlen(arg1);\n    if (rax > 1)\n    {\n        while (true)\n        {\n            uint64_t rdx_1 = (rax - 1);\n            if (arg1[(rax - 1)] != 0x2f)\n            {\n                break;\n            }\n            rax = rdx_1;\n            if (rdx_1 == 1)\n            {\n                return rax;\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_402f10",
            "funcStartAddr": "0x402f10",
            "funcEndAddr": "0x402f5b",
            "decompiledFuncCode": "uint64_t sub_402f10(int32_t arg1)\n{\n    int32_t rbx = 1;\n    int32_t rax_1 = open(\"/dev/null\", 0);\n    if (arg1 != rax_1)\n    {\n        rbx = 0;\n        if (rax_1 >= 0)\n        {\n            close(rax_1);\n            *__errno_location() = 9;\n            return 0;\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_402f60",
            "funcStartAddr": "0x402f60",
            "funcEndAddr": "0x40310f",
            "decompiledFuncCode": "FILE* sub_402f60(char* arg1, char* arg2, FILE* arg3)\n{\n    int32_t rax = fileno(arg3);\n    int32_t* rax_1 = __errno_location();\n    int32_t rbx;\n    uint64_t rbp;\n    FILE* r12_1;\n    char r13;\n    if (rax == 1)\n    {\n        rbx = 0;\n        rbp = 0;\n    }\n    else\n    {\n        if (rax == 2)\n        {\n            rbx = 0;\n        }\n        else\n        {\n            if (rax == 0)\n            {\n                rbx = 0;\n                rbp = 0;\n                r13 = 0;\n            label_40301c:\n                r12_1 = sub_407b50(arg1, arg2, arg3);\n                goto label_40301f;\n            }\n            rbx = dup2(2, 2) != 2;\n        }\n        rbp = dup2(1, 1) != 1;\n    }\n    int32_t rax_4 = dup2(0, 0);\n    char rax_5;\n    if (rax_4 == 0)\n    {\n        r13 = 0;\n    }\n    else\n    {\n        rax_5 = sub_402f10(0);\n        r13 = rax_5;\n    }\n    int32_t r15_1;\n    if (((rax_4 == 0 && rbp != 0) || ((rax_4 != 0 && rax_5 != 0) && rbp != 0)))\n    {\n        int32_t rax_9 = sub_402f10(1);\n        rbp = rax_9;\n        if (rax_9 == 0)\n        {\n            r15_1 = *rax_1;\n            r12_1 = nullptr;\n            if (rbx != 0)\n            {\n                close(2);\n            }\n            goto label_403085;\n        }\n    }\n    if (((((rax_4 == 0 && rbp == 0) || ((rax_4 != 0 && rax_5 != 0) && rbp == 0)) || (rax_4 == 0 && rbp != 0)) || ((rax_4 != 0 && rax_5 != 0) && rbp != 0)))\n    {\n        if (rbx == 0)\n        {\n            goto label_40301c;\n        }\n        int32_t rax_6 = sub_402f10(2);\n        rbx = rax_6;\n        if (rax_6 != 0)\n        {\n            goto label_40301c;\n        }\n        r15_1 = *rax_1;\n        r12_1 = nullptr;\n    label_4030cb:\n        close(2);\n    }\n    if ((rax_4 != 0 && rax_5 == 0))\n    {\n        r13 = 1;\n        r12_1 = nullptr;\n    label_40301f:\n        r15_1 = *rax_1;\n        if (rbx != 0)\n        {\n            goto label_4030cb;\n        }\n    }\n    if (((((((rax_4 == 0 && rbp == 0) || ((rax_4 != 0 && rax_5 != 0) && rbp == 0)) || (rax_4 == 0 && rbp != 0)) || ((rax_4 != 0 && rax_5 != 0) && rbp != 0)) && rbx != 0) || (rax_4 != 0 && rax_5 == 0)))\n    {\n        if (rbp != 0)\n        {\n        label_403085:\n            close(1);\n            if (r13 != 0)\n            {\n            label_403091:\n                close(0);\n                if (r12_1 == 0)\n                {\n                    goto label_40309b;\n                }\n                goto label_40304a;\n            }\n        }\n        else if (r13 != 0)\n        {\n            goto label_403091;\n        }\n        if (r12_1 != 0)\n        {\n            goto label_40304a;\n        }\n    label_40309b:\n        *rax_1 = r15_1;\n    label_40304a:\n        return r12_1;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_403110",
            "funcStartAddr": "0x403110",
            "funcEndAddr": "0x4031a9",
            "decompiledFuncCode": "char* sub_403110(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_40b1b0;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_60f388 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4031b0",
            "funcStartAddr": "0x4031b0",
            "funcEndAddr": "0x4032a2",
            "decompiledFuncCode": "char* sub_4031b0(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_408fa0();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_403291:\n                void* const rbx_1 = &data_40b1b4;\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_403291;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_403291;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_403291;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_403291;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_403291;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_403291;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_403291;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_40b1bd;\n            if (cond:2_1)\n            {\n                rbx = &data_40b1ba;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_403291;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_403291;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_403291;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_403291;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_403291;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_40b1c1;\n            if (cond:1_1)\n            {\n                rbx = &data_40b1b6;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_4032b0",
            "funcStartAddr": "0x401d40",
            "funcEndAddr": "0x4044d1",
            "decompiledFuncCode": "int64_t sub_4032b0(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    char const* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n    label_403348:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_4036bc:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_403704;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_4032b0(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char const rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_40371b;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_403855;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_4034a5;\n                            }\n                            goto label_403790;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_403855;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_403680;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_403680:\n                            if (var_c0 == 0)\n                            {\n                                goto label_40368b;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_4034e7:\n                            if (var_5c == 0)\n                            {\n                                goto label_4034f8;\n                            }\n                        label_4036b0:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_4036b8;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_4038eb;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_4038eb:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_4038fa:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_4036bc;\n                            }\n                            goto label_403680;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_403680;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_403680;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_4038eb;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_403486;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_403486:\n                            if (var_5c == 0)\n                            {\n                                goto label_4034a5;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_4034a5;\n                            }\n                            goto label_4038fa;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_40347d:\n                            if (r12_1 != 0)\n                            {\n                                goto label_40368b;\n                            }\n                            goto label_403486;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_4038b0:\n                            rdx = r11_1 == 2;\n                        label_4034a5:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_4035ac;\n                            }\n                            goto label_4034af;\n                        }\n                        case 0x27:\n                        {\n                            goto label_40362d;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_4035fd;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_40365a;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_4043ed;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_4035c4;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_403459;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_403a50;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_403a50;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_4043a0:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_403704:\n                            rbx_1 = sub_4032b0(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_40371b:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_403855;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_4037a7;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_403855;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_403770:\n                                r13 = 0;\n                                goto label_40352b;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_4034f8:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_40352b:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_403535;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_403535:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_40353d;\n                            }\n                            case 9:\n                            {\n                                goto label_403720;\n                            }\n                            case 0xa:\n                            {\n                                goto label_403698;\n                            }\n                            case 0xb:\n                            {\n                                goto label_403780;\n                            }\n                            case 0xc:\n                            {\n                                goto label_403760;\n                            }\n                            case 0xd:\n                            {\n                                goto label_403749;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_403aaa;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_403735;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_403a8a;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_403a72;\n                            }\n                            case 0x27:\n                            {\n                                goto label_40362d;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_4035fd;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_40365a;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_403459;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_403a50:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_403850:\n                            var_b8 = 0;\n                        label_403855:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_4038a4:\n                                if (rdx == 0)\n                                {\n                                    goto label_4038b0;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_403da1:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_4035c4;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_4036bc;\n                                }\n                                r13 = var_98;\n                                goto label_40353d;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_408a20(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_4036bc;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_403da1;\n                            }\n                            goto label_4038a4;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_403790:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_4036bc;\n                                }\n                                var_b8 = 0;\n                            label_4037a7:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_4037f2;\n                                    }\n                                    rax_8 = r10;\n                                label_4037ea:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_4037f2:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_4035ac;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_403833;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_4037ea;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_4035ac;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_403850;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_403765;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_40369d;\n                            }\n                            case 9:\n                            {\n                            label_403720:\n                                rbp_3 = 0x74;\n                                goto label_40369d;\n                            }\n                            case 0xa:\n                            {\n                            label_403698:\n                                rbp_3 = 0x6e;\n                            label_40369d:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_4036b0;\n                                }\n                                goto label_4034f8;\n                            }\n                            case 0xb:\n                            {\n                            label_403780:\n                                rbp_3 = 0x76;\n                                goto label_403765;\n                            }\n                            case 0xc:\n                            {\n                            label_403760:\n                                rbp_3 = 0x66;\n                            label_403765:\n                                if (var_5c == 0)\n                                {\n                                    goto label_403770;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_4036b8:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_4036bc;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_403749:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_403680;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_403aaa:\n                                rbp_3 = 0x20;\n                                goto label_403a72;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_403735:\n                                rdx = 0;\n                            label_40368b:\n                                r13 = 0;\n                                goto label_4034a5;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_403a8a:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_4034a5;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_4034af:\n                                rax_8 = 0;\n                                goto label_4034b1;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_403a72:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_4034b1;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_40362d:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_4034a5;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_4043ed;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_4035ac;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_4035fd:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_4043ed:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_4036bc;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_4035ac:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_4034e7;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_4035c4;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_4034a5;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_403b90:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_4034a5;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_403b90;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_403b90;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_403b90;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_403b90;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_4043a0;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_403833:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_4035ac;\n                                }\n                            label_4034b1:\n                                if (arg7 == 0)\n                                {\n                                    goto label_4035ac;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_4035ac;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_4034e7;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_40365a:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_403680;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_4035c4:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_40353d;\n                                }\n                            label_40353d:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_403546;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_403546:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_403459:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_40368b;\n                                }\n                                goto label_40347d;\n                            }\n                        }\n                    }\n                }\n            }\n        label_403b36:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = \"'\";\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_403348;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = \"'\";\n                goto label_403348;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"'\";\n            goto label_403348;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40b1b4;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40b1b4;\n            }\n            goto label_403348;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_40b1b4;\n            goto label_403348;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_403348;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_4031b0(&data_40b1c5, r13);\n                arg9 = sub_4031b0(\"'\", r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_403348;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_403b36;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n        goto label_403348;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4044e0",
            "funcStartAddr": "0x401d45",
            "funcEndAddr": "0x40467e",
            "decompiledFuncCode": "char* sub_4044e0(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_60f298;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_60f2b0 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_405540();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x60f2a0)\n        {\n            int64_t rax_9 = sub_405350(0, rsi_1);\n            int128_t zmm0 = data_60f2a0;\n            rbx = rax_9;\n            data_60f298 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_405350(rbx, rsi_1);\n            data_60f298 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_60f2b0;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_60f2b0 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_4032b0(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        uint64_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x60f3a0)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_4052f0(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_4032b0(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_404680",
            "funcStartAddr": "0x404680",
            "funcEndAddr": "0x4046b4",
            "decompiledFuncCode": "int64_t sub_404680(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x60f4a0;\n    }\n    int64_t rax_1 = sub_4054f0(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4046c0",
            "funcStartAddr": "0x4046c0",
            "funcEndAddr": "0x4046cf",
            "decompiledFuncCode": "uint64_t sub_4046c0(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60f4a0;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4046d0",
            "funcStartAddr": "0x4046d0",
            "funcEndAddr": "0x4046df",
            "decompiledFuncCode": "void sub_4046d0(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60f4a0;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_4046e0",
            "funcStartAddr": "0x4046e0",
            "funcEndAddr": "0x404713",
            "decompiledFuncCode": "uint64_t sub_4046e0(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x60f4a0;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_404720",
            "funcStartAddr": "0x404720",
            "funcEndAddr": "0x404733",
            "decompiledFuncCode": "uint64_t sub_404720(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60f4a0;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404740",
            "funcStartAddr": "0x404740",
            "funcEndAddr": "0x40476b",
            "decompiledFuncCode": "void sub_404740(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60f4a0;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x60f4a0;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404770",
            "funcStartAddr": "0x404770",
            "funcEndAddr": "0x4047e2",
            "decompiledFuncCode": "int64_t sub_404770(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_60f4a0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_4032b0(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_4047f0",
            "funcStartAddr": "0x4047f0",
            "funcEndAddr": "0x4048d1",
            "decompiledFuncCode": "char* sub_4047f0(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_60f4a0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_4032b0(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_4052f0((rax_2 + 1));\n    sub_4032b0(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_4048e0",
            "funcStartAddr": "0x4048e0",
            "funcEndAddr": "0x4048ea",
            "decompiledFuncCode": "int64_t sub_4048e0(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_4047f0(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_4048f0",
            "funcStartAddr": "0x4048f0",
            "funcEndAddr": "0x404985",
            "decompiledFuncCode": "uint64_t sub_4048f0()\n{\n    uint64_t rax_2 = data_60f2b0;\n    int64_t r12 = data_60f298;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x60f3a0)\n    {\n        rax_2 = free(rdi_2);\n        *data_60f2a0 = 0x100;\n        *(data_60f2a0 + 8) = 0x60f3a0;\n    }\n    if (r12 != 0x60f2a0)\n    {\n        rax_2 = free(r12);\n        data_60f298 = 0x60f2a0;\n    }\n    data_60f2b0 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_404990",
            "funcStartAddr": "0x404990",
            "funcEndAddr": "0x4049a1",
            "decompiledFuncCode": "int64_t sub_404990(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4044e0(arg1, arg2, -1, &data_60f4a0);\n}\n\n"
        },
        {
            "funcName": "sub_4049b0",
            "funcStartAddr": "0x4049b0",
            "funcEndAddr": "0x4049ba",
            "decompiledFuncCode": "int64_t sub_4049b0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_4044e0(arg1, arg2, arg3, &data_60f4a0);\n}\n\n"
        },
        {
            "funcName": "sub_4049c0",
            "funcStartAddr": "0x4049c0",
            "funcEndAddr": "0x4049d6",
            "decompiledFuncCode": "int64_t sub_4049c0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_4044e0(0, arg1, -1, &data_60f4a0);\n}\n\n"
        },
        {
            "funcName": "sub_4049e0",
            "funcStartAddr": "0x4049e0",
            "funcEndAddr": "0x4049f2",
            "decompiledFuncCode": "int64_t sub_4049e0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4044e0(0, arg1, arg2, &data_60f4a0);\n}\n\n"
        },
        {
            "funcName": "sub_404a00",
            "funcStartAddr": "0x401d4a",
            "funcEndAddr": "0x404a68",
            "decompiledFuncCode": "char* sub_404a00(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_4044e0(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_404a70",
            "funcStartAddr": "0x401d4f",
            "funcEndAddr": "0x404ad4",
            "decompiledFuncCode": "char* sub_404a70(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_4044e0(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_404ae0",
            "funcStartAddr": "0x404ae0",
            "funcEndAddr": "0x404aec",
            "decompiledFuncCode": "int64_t sub_404ae0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_404a00(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_404af0",
            "funcStartAddr": "0x404af0",
            "funcEndAddr": "0x404aff",
            "decompiledFuncCode": "int64_t sub_404af0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_404a70(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_404b00",
            "funcStartAddr": "0x404b00",
            "funcEndAddr": "0x404b70",
            "decompiledFuncCode": "char* sub_404b00(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_60f4d0;\n    int128_t var_48 = data_60f4a0;\n    int128_t var_38 = data_60f4b0;\n    int128_t var_28 = data_60f4c0;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_4044e0(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_404b70",
            "funcStartAddr": "0x404b70",
            "funcEndAddr": "0x404b7d",
            "decompiledFuncCode": "int64_t sub_404b70(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_404b00(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_404b80",
            "funcStartAddr": "0x404b80",
            "funcEndAddr": "0x404b91",
            "decompiledFuncCode": "int64_t sub_404b80(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_404b00(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_404ba0",
            "funcStartAddr": "0x404ba0",
            "funcEndAddr": "0x404baa",
            "decompiledFuncCode": "int64_t sub_404ba0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_404b00(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_404bb0",
            "funcStartAddr": "0x401d54",
            "funcEndAddr": "0x404c1e",
            "decompiledFuncCode": "char* sub_404bb0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_4044e0(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_404c20",
            "funcStartAddr": "0x404c20",
            "funcEndAddr": "0x404c8c",
            "decompiledFuncCode": "char* sub_404c20(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_60f4a0;\n    int128_t var_38 = data_60f4b0;\n    int128_t var_28 = data_60f4c0;\n    int64_t var_18 = data_60f4d0;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_4044e0(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404d30",
            "funcStartAddr": "0x404d30",
            "funcEndAddr": "0x404d46",
            "decompiledFuncCode": "int64_t sub_404d30(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_4044e0(0, arg1, -1, &data_60f260);\n}\n\n"
        },
        {
            "funcName": "sub_404d50",
            "funcStartAddr": "0x401d59",
            "funcEndAddr": "0x40512d",
            "decompiledFuncCode": "int64_t sub_404d50(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_40bf0b, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_405130",
            "funcStartAddr": "0x405130",
            "funcEndAddr": "0x405150",
            "decompiledFuncCode": "int64_t sub_405130(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_404d50(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_405150",
            "funcStartAddr": "0x405150",
            "funcEndAddr": "0x4051b0",
            "decompiledFuncCode": "int64_t sub_405150(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_404d50(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_4051b0",
            "funcStartAddr": "0x4051b0",
            "funcEndAddr": "0x40526c",
            "decompiledFuncCode": "int64_t sub_4051b0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_404d50(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_405270",
            "funcStartAddr": "0x405270",
            "funcEndAddr": "0x4052e4",
            "decompiledFuncCode": "int64_t sub_405270()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_4052f0",
            "funcStartAddr": "0x4052f0",
            "funcEndAddr": "0x40530a",
            "decompiledFuncCode": "int64_t sub_4052f0(uint64_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_405540();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405350",
            "funcStartAddr": "0x405350",
            "funcEndAddr": "0x405386",
            "decompiledFuncCode": "int64_t sub_405350(int64_t arg1, uint64_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_405540();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_40549a",
            "funcStartAddr": "0x40549a",
            "funcEndAddr": "0x4054a0",
            "decompiledFuncCode": "int64_t sub_40549a() __noreturn\n{\n    sub_405540();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4054a0",
            "funcStartAddr": "0x4054a0",
            "funcEndAddr": "0x4054b7",
            "decompiledFuncCode": "int64_t sub_4054a0(uint64_t arg1)\n{\n    /* tailcall */\n    return memset(sub_4052f0(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_4054c0",
            "funcStartAddr": "0x4054c0",
            "funcEndAddr": "0x4054ee",
            "decompiledFuncCode": "int64_t sub_4054c0(uint64_t arg1, uint64_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_405540();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4054f0",
            "funcStartAddr": "0x4054f0",
            "funcEndAddr": "0x405518",
            "decompiledFuncCode": "int64_t sub_4054f0(int64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_4052f0(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405520",
            "funcStartAddr": "0x405520",
            "funcEndAddr": "0x405533",
            "decompiledFuncCode": "int64_t sub_405520(char* arg1)\n{\n    /* tailcall */\n    return sub_4054f0(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_405540",
            "funcStartAddr": "0x405540",
            "funcEndAddr": "0x405571",
            "decompiledFuncCode": "int64_t sub_405540() __noreturn\n{\n    error(data_60f258, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_405580",
            "funcStartAddr": "0x405580",
            "funcEndAddr": "0x405598",
            "decompiledFuncCode": "char* sub_405580(char* arg1)\n{\n    char* rax = strndup(arg1);\n    if (rax == 0)\n    {\n        sub_405540();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4055a0",
            "funcStartAddr": "0x4055a0",
            "funcEndAddr": "0x40561b",
            "decompiledFuncCode": "int64_t sub_4055a0(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_405620(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_405620",
            "funcStartAddr": "0x405620",
            "funcEndAddr": "0x405660",
            "decompiledFuncCode": "int64_t sub_405620(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_407bf0(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_405660",
            "funcStartAddr": "0x405660",
            "funcEndAddr": "0x405759",
            "decompiledFuncCode": "void* sub_405660(void* arg1)\n{\n    void* rbx = arg1;\n    while (true)\n    {\n        int32_t rdx_1 = *(rbx + 4);\n        if (rdx_1 == 0)\n        {\n            break;\n        }\n        while (true)\n        {\n            if (rdx_1 == 0x5b)\n            {\n                if (data_60f4d8 == 0)\n                {\n                    char* rax_4 = getenv(\"POSIXLY_CORRECT\");\n                    data_60f4d8 = ((rax_4 - rax_4) | 1);\n                }\n                int32_t rdx_3 = *(rbx + 8);\n                if ((rdx_3 == 0x21 || (data_60f4d8 < 0 && rdx_3 == 0x5e)))\n                {\n                    rdx_3 = *(rbx + 0xc);\n                    rbx = (rbx + 0xc);\n                }\n                if ((rdx_3 != 0x21 && (data_60f4d8 >= 0 || (data_60f4d8 < 0 && rdx_3 != 0x5e))))\n                {\n                    rbx = (rbx + 8);\n                }\n                if (rdx_3 == 0x5d)\n                {\n                    rdx_3 = *(rbx + 4);\n                    rbx = (rbx + 4);\n                }\n                while (true)\n                {\n                    void* rcx_2 = (rbx + 4);\n                    if (rdx_3 == 0x5d)\n                    {\n                        break;\n                    }\n                    if (rdx_3 == 0)\n                    {\n                        return arg1;\n                    }\n                    rdx_3 = *rcx_2;\n                    rbx = rcx_2;\n                }\n                break;\n            }\n            uint64_t rcx_1 = (rdx_1 - 0x21);\n            if (rcx_1 <= 0x1f)\n            {\n                if (((TEST_BITQ(0xc0000601, rcx_1)) && *(rbx + 8) == 0x28))\n                {\n                    rbx = sub_405660((rbx + 8));\n                    break;\n                }\n                if (rdx_1 == 0x29)\n                {\n                    return (rbx + 8);\n                }\n            }\n            rbx = (rbx + 4);\n            rdx_1 = *(rbx + 4);\n            if (rdx_1 == 0)\n            {\n                return arg1;\n            }\n        }\n    }\n    return arg1;\n}\n\n"
        },
        {
            "funcName": "sub_405760",
            "funcStartAddr": "0x405760",
            "funcEndAddr": "0x405859",
            "decompiledFuncCode": "void* sub_405760(void* arg1)\n{\n    void* rbx = arg1;\n    while (true)\n    {\n        uint32_t rdx_1 = *(rbx + 1);\n        if (rdx_1 == 0)\n        {\n            break;\n        }\n        while (true)\n        {\n            if (rdx_1 == 0x5b)\n            {\n                if (data_60f4d8 == 0)\n                {\n                    char* rax_4 = getenv(\"POSIXLY_CORRECT\");\n                    data_60f4d8 = ((rax_4 - rax_4) | 1);\n                }\n                char rdx_3 = *(rbx + 2);\n                if ((rdx_3 == 0x21 || (data_60f4d8 < 0 && rdx_3 == 0x5e)))\n                {\n                    rdx_3 = *(rbx + 3);\n                    rbx = (rbx + 3);\n                }\n                if ((rdx_3 != 0x21 && (data_60f4d8 >= 0 || (data_60f4d8 < 0 && rdx_3 != 0x5e))))\n                {\n                    rbx = (rbx + 2);\n                }\n                if (rdx_3 == 0x5d)\n                {\n                    rdx_3 = *(rbx + 1);\n                    rbx = (rbx + 1);\n                }\n                while (true)\n                {\n                    void* rcx_2 = (rbx + 1);\n                    if (rdx_3 == 0x5d)\n                    {\n                        break;\n                    }\n                    if (rdx_3 == 0)\n                    {\n                        return arg1;\n                    }\n                    rdx_3 = *rcx_2;\n                    rbx = rcx_2;\n                }\n                break;\n            }\n            uint64_t rcx_1 = (rdx_1 - 0x21);\n            if (rcx_1 <= 0x1f)\n            {\n                if (((TEST_BITQ(0xc0000601, rcx_1)) && *(rbx + 2) == 0x28))\n                {\n                    rbx = sub_405760((rbx + 2));\n                    break;\n                }\n                if (rdx_1 == 0x29)\n                {\n                    return (rbx + 2);\n                }\n            }\n            rbx = (rbx + 1);\n            rdx_1 = *(rbx + 1);\n            if (rdx_1 == 0)\n            {\n                return arg1;\n            }\n        }\n    }\n    return arg1;\n}\n\n"
        },
        {
            "funcName": "sub_405860",
            "funcStartAddr": "0x405860",
            "funcEndAddr": "0x405de3",
            "decompiledFuncCode": "int64_t sub_405860(int32_t arg1, wchar_t* arg2, uint64_t arg3, uint64_t arg4, \n    bool arg5, int32_t arg6)\n{\n    void var_88;\n    void* rsp = &var_88;\n    void** var_40 = nullptr;\n    uint64_t var_50 = wcslen(arg2);\n    int32_t rax_1 = arg2[1];\n    int64_t rax_2;\n    if (rax_1 == 0)\n    {\n    label_405920:\n        rax_2 = 0xffffffff;\n    }\n    else\n    {\n        void* r14_1 = &arg2[1];\n        void* rsi = r14_1;\n        int64_t* rbx_1 = &var_40;\n        int64_t r13_1 = 0;\n        uint64_t rdx;\n        do\n        {\n            if (rax_1 != 0x5b)\n            {\n                while (true)\n                {\n                    rdx = (rax_1 - 0x21);\n                    if (rdx > 0x1f)\n                    {\n                        break;\n                    }\n                    if ((!(TEST_BITQ(0xc0000601, rdx))))\n                    {\n                        break;\n                    }\n                    if (*(r14_1 + 4) != 0x28)\n                    {\n                        break;\n                    }\n                    r13_1 = (r13_1 + 1);\n                    r14_1 = (r14_1 + 4);\n                    rax_1 = 0x28;\n                }\n                if (((rdx > 0x1f && rax_1 == 0x7c) && r13_1 == 0))\n                {\n                    uint64_t rdx_4 = var_50;\n                    if ((arg1 - 0x3f) > 1)\n                    {\n                        rdx_4 = (((r14_1 - rsi) >> 2) + 1);\n                    }\n                    int64_t rax_7 = (((rdx_4 << 2) + 0xf) & 0xfffffffffffffff8);\n                    if ((rax_7 - 8) > 0x1f37)\n                    {\n                        break;\n                    }\n                    if (rdx_4 > 0x3fffffffffffffff)\n                    {\n                        break;\n                    }\n                    rsp = (rsp - ((rax_7 + 0x17) & 0xfffffffffffffff0));\n                    int64_t* r13_3 = ((rsp + 0xf) & 0xfffffffffffffff0);\n                    rsi = (r14_1 + 4);\n                    *wmempcpy(&r13_3[1], rsi, ((r14_1 - rsi) >> 2)) = 0;\n                    rax_1 = *(r14_1 + 4);\n                    r14_1 = rsi;\n                    *r13_3 = 0;\n                    *rbx_1 = r13_3;\n                    rbx_1 = r13_3;\n                    r13_1 = 0;\n                }\n                if ((rdx <= 0x1f && rax_1 == 0x29))\n                {\n                    int64_t rdx_1 = (r13_1 - 1);\n                    if (r13_1 == 0)\n                    {\n                        break;\n                    }\n                    rax_1 = *(r14_1 + 4);\n                    r13_1 = rdx_1;\n                    r14_1 = (r14_1 + 4);\n                    if (rax_1 == 0)\n                    {\n                        break;\n                    }\n                    continue;\n                }\n                if ((((rdx > 0x1f && rax_1 != 0x7c) || ((rdx > 0x1f && rax_1 == 0x7c) && r13_1 != 0)) || rdx <= 0x1f))\n                {\n                    rax_1 = *(r14_1 + 4);\n                    r14_1 = (r14_1 + 4);\n                }\n            }\n            else\n            {\n                if (data_60f4d8 == 0)\n                {\n                    char* rax_11 = getenv(\"POSIXLY_CORRECT\");\n                    data_60f4d8 = ((rax_11 - rax_11) | 1);\n                }\n                int32_t rax_3 = *(r14_1 + 4);\n                void* rdx_3;\n                if ((rax_3 == 0x21 || (data_60f4d8 < 0 && rax_3 == 0x5e)))\n                {\n                    rdx_3 = (r14_1 + 8);\n                    rax_3 = *(r14_1 + 8);\n                }\n                if ((rax_3 != 0x21 && (data_60f4d8 >= 0 || (data_60f4d8 < 0 && rax_3 != 0x5e))))\n                {\n                    rdx_3 = (r14_1 + 4);\n                }\n                if (rax_3 == 0x5d)\n                {\n                    rax_3 = *(rdx_3 + 4);\n                    rdx_3 = (rdx_3 + 4);\n                }\n                while (true)\n                {\n                    r14_1 = (rdx_3 + 4);\n                    if (rax_3 == 0x5d)\n                    {\n                        break;\n                    }\n                    if (rax_3 == 0)\n                    {\n                        break;\n                    }\n                    rax_3 = *r14_1;\n                    rdx_3 = r14_1;\n                }\n                if (rax_3 == 0)\n                {\n                    break;\n                }\n                rax_1 = *(rdx_3 + 4);\n            }\n        } while (rax_1 != 0);\n        if ((!((rdx <= 0x1f && rax_1 == 0x29) && r13_1 == 0)))\n        {\n            goto label_405920;\n        }\n        void** r13_4 = rbx_1;\n        if ((arg1 - 0x3f) > 1)\n        {\n            var_50 = (((r14_1 - rsi) >> 2) + 1);\n        }\n        int64_t rax_21 = (((var_50 << 2) + 0xf) & 0xfffffffffffffff8);\n        if ((rax_21 - 8) > 0x1f37)\n        {\n            goto label_405920;\n        }\n        if (var_50 > 0x3fffffffffffffff)\n        {\n            goto label_405920;\n        }\n        void* rax_25 = (((rsp - ((rax_21 + 0x17) & 0xfffffffffffffff0)) + 0xf) & 0xfffffffffffffff0);\n        *wmempcpy((rax_25 + 8), rsi, ((r14_1 - rsi) >> 2)) = 0;\n        *r13_4 = rax_25;\n        void** r13_5 = var_40;\n        *rax_25 = 0;\n        if (r13_5 == 0)\n        {\n            __assert_fail(\"list != NULL\", \"lib/fnmatch_loop.c\", 0x454, \"ext_wmatch\");\n            /* no return */\n        }\n        if (*(r14_1 - 4) != 0x29)\n        {\n            __assert_fail(\"p[-1] == L_(')')\", \"lib/fnmatch_loop.c\", 0x455, \"ext_wmatch\");\n            /* no return */\n        }\n        uint64_t r15_3 = (arg1 - 0x21);\n        if (r15_3 > 0x1f)\n        {\n        label_405dac:\n            __assert_fail(\"! \"Invalid extended matching ope\u2026\", \"lib/fnmatch_loop.c\", 0x4ad, \"ext_wmatch\");\n            /* no return */\n        }\n        int32_t rax_27;\n        if (r15_3 == 9)\n        {\n            rax_27 = sub_405df0(r14_1, arg3, arg4, arg5, arg6);\n        }\n        if ((r15_3 == 0xa || (r15_3 == 9 && rax_27 != 0)))\n        {\n            int32_t* var_78_2 = r14_1;\n            int32_t* r14_2 = arg3;\n            int32_t r12_2 = (arg6 & 0xfffffffb);\n            int32_t r15_5 = (arg6 & 1);\n            if (r15_5 != 0)\n            {\n                r12_2 = arg6;\n            }\n            void* rax_29 = &arg2[-1];\n            int32_t var_58_1 = r15_5;\n            do\n            {\n                if (r14_2 <= arg4)\n                {\n                    int32_t* r15_6 = r14_2;\n                    var_50 = arg5;\n                    int32_t rax_37;\n                    int32_t rax_38;\n                    do\n                    {\n                        rax_37 = sub_405df0(&r13_5[1], r14_2, r15_6, var_50, r12_2);\n                        if (rax_37 == 0)\n                        {\n                            if (r14_2 != r15_6)\n                            {\n                                bool rcx_3 = false;\n                                if (r15_6[-1] == 0x2f)\n                                {\n                                    rcx_3 = (arg6 & 5) == 5;\n                                }\n                                if (sub_405df0(var_78_2, r15_6, arg4, rcx_3, r12_2) == 0)\n                                {\n                                    break;\n                                }\n                                bool rcx_4 = false;\n                                if (r15_6[-1] == 0x2f)\n                                {\n                                    rcx_4 = (arg6 & 5) == 5;\n                                }\n                                if (sub_405df0(rax_29, r15_6, arg4, rcx_4, r12_2) == 0)\n                                {\n                                    break;\n                                }\n                            }\n                            else\n                            {\n                                rax_38 = sub_405df0(var_78_2, r14_2, arg4, var_50, r12_2);\n                                if (rax_38 == 0)\n                                {\n                                    break;\n                                }\n                            }\n                            r13_5 = var_40;\n                        }\n                        r15_6 = &r15_6[1];\n                    } while (arg4 >= r15_6);\n                    if (((rax_37 == 0 && r14_2 == r15_6) && rax_38 == 0))\n                    {\n                        goto label_405c53;\n                    }\n                }\n                r13_5 = *r13_5;\n                var_40 = r13_5;\n            } while (r13_5 != 0);\n            goto label_405cf7;\n        }\n        bool r12_4;\n        if (r15_3 == 0x1f)\n        {\n            r12_4 = arg5;\n        }\n        int32_t rax_47;\n        if (r15_3 == 0x1e)\n        {\n            r12_4 = arg5;\n            rax_47 = sub_405df0(r14_1, arg3, arg4, r12_4, arg6);\n        }\n        if ((r15_3 == 0x1f || (r15_3 == 0x1e && rax_47 != 0)))\n        {\n            int32_t rbx_7 = (arg6 & 0xfffffffb);\n            if ((arg6 & 1) != 0)\n            {\n                rbx_7 = arg6;\n            }\n            int32_t rax_46;\n            do\n            {\n                rax_46 = sub_405df0(wcscat(&r13_5[1], r14_1), arg3, arg4, r12_4, rbx_7);\n                if (rax_46 == 0)\n                {\n                    break;\n                }\n                r13_5 = *r13_5;\n                var_40 = r13_5;\n            } while (r13_5 != 0);\n            if (rax_46 != 0)\n            {\n                goto label_405cf7;\n            }\n            rax_2 = 0;\n        }\n        if ((r15_3 == 0x1e && rax_47 == 0))\n        {\n            rax_2 = 0;\n        }\n        if (r15_3 == 0)\n        {\n            if (arg3 > arg4)\n            {\n            label_405cf7:\n                rax_2 = 1;\n            }\n            else\n            {\n                int32_t var_58;\n                var_58 = r14_1;\n                uint64_t r14_3 = arg3;\n                int32_t rbx_5 = (arg6 & 0xfffffffb);\n                if ((arg6 & 1) != 0)\n                {\n                    rbx_5 = arg6;\n                }\n                int32_t rax_40;\n                int32_t rax_43;\n                do\n                {\n                    void** r13_6 = r13_5;\n                    do\n                    {\n                        rax_40 = sub_405df0(&r13_6[1], arg3, r14_3, arg5, rbx_5);\n                        if (rax_40 == 0)\n                        {\n                            break;\n                        }\n                        r13_6 = *r13_6;\n                    } while (r13_6 != 0);\n                    if (rax_40 != 0)\n                    {\n                        bool rcx_9;\n                        if (arg3 == r14_3)\n                        {\n                            rcx_9 = arg5;\n                        }\n                        else\n                        {\n                            rcx_9 = false;\n                            if (*(r14_3 - 4) == 0x2f)\n                            {\n                                rcx_9 = (arg6 & 5) == 5;\n                            }\n                        }\n                        rax_43 = sub_405df0(var_58, r14_3, arg4, rcx_9, rbx_5);\n                        if (rax_43 == 0)\n                        {\n                            break;\n                        }\n                    }\n                    r14_3 = (r14_3 + 4);\n                } while (arg4 >= r14_3);\n                if ((!(rax_40 != 0 && rax_43 == 0)))\n                {\n                    goto label_405cf7;\n                }\n            }\n        }\n        if (((r15_3 == 9 && rax_27 == 0) || (r15_3 == 0 && arg3 <= arg4)))\n        {\n        label_405c53:\n            rax_2 = 0;\n        }\n        if (((((((((((((((((((((((((((r15_3 == 1 || r15_3 == 2) || r15_3 == 3) || r15_3 == 4) || r15_3 == 5) || r15_3 == 6) || r15_3 == 7) || r15_3 == 8) || r15_3 == 0xb) || r15_3 == 0xc) || r15_3 == 0xd) || r15_3 == 0xe) || r15_3 == 0xf) || r15_3 == 0x10) || r15_3 == 0x11) || r15_3 == 0x12) || r15_3 == 0x13) || r15_3 == 0x14) || r15_3 == 0x15) || r15_3 == 0x16) || r15_3 == 0x17) || r15_3 == 0x18) || r15_3 == 0x19) || r15_3 == 0x1a) || r15_3 == 0x1b) || r15_3 == 0x1c) || r15_3 == 0x1d))\n        {\n            goto label_405dac;\n        }\n    }\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_405df0",
            "funcStartAddr": "0x405df0",
            "funcEndAddr": "0x4068cc",
            "decompiledFuncCode": "uint64_t sub_405df0(int32_t* arg1, int32_t* arg2, uint64_t arg3, bool arg4, \n    int32_t arg5)\n{\n    uint64_t r14 = arg3;\n    int32_t* rbx = arg2;\n    wint_t r15 = *arg1;\n    int32_t var_570 = arg5;\n    wchar_t* var_580 = &arg1[1];\n    uint64_t rax_12;\n    if (r15 != 0)\n    {\n        int32_t r8 = (arg5 & 5);\n        uint64_t var_578_1 = arg3;\n        int32_t rbp_2 = (arg5 & 0x10);\n        bool r10_1 = arg4;\n        int32_t r12_2 = (arg5 & 2);\n        int32_t* rbp_3 = arg1;\n        while (true)\n        {\n            if (rbp_2 != 0)\n            {\n                wint_t rax_1;\n                rax_1 = towlower(r15);\n                r15 = rax_1;\n            }\n            uint64_t rax_2 = (r15 - 0x21);\n            bool var_56c;\n            if (rax_2 <= 0x3b)\n            {\n                switch (rax_2)\n                {\n                    case 0:\n                    case 0xa:\n                    case 0x1f:\n                    {\n                        if (((var_570 & 0x20) != 0 && rbp_3[1] == 0x28))\n                        {\n                            rax_12 = sub_405860(r15, var_580, rbx, var_578_1, r10_1, var_570);\n                            if (rax_12 != 0xffffffff)\n                            {\n                                return rax_12;\n                            }\n                        }\n                        break;\n                    }\n                    case 9:\n                    {\n                        wchar_t* r14_3 = var_578_1;\n                        int32_t rax_15 = (var_570 & 0x20);\n                        if ((rax_15 != 0 && rbp_3[1] == 0x28))\n                        {\n                            var_578_1 = r10_1;\n                            rax_12 = sub_405860(0x2a, var_580, rbx, r14_3, r10_1, var_570);\n                            if (rax_12 != 0xffffffff)\n                            {\n                                return rax_12;\n                            }\n                            r10_1 = var_578_1;\n                        }\n                        if ((r14_3 != rbx && (*rbx == 0x2e && r10_1 != 0)))\n                        {\n                            goto label_4060a0;\n                        }\n                        int32_t r11_1 = rbp_3[1];\n                        void* r15_2 = &rbp_3[2];\n                        if ((r11_1 == 0x2a || r11_1 == 0x3f))\n                        {\n                            arg3 = rax_15 != 0;\n                            int32_t r13_4 = (var_570 & 1);\n                            while (true)\n                            {\n                                void* rax_17;\n                                if ((arg3 != 0 && *r15_2 == 0x28))\n                                {\n                                    var_578_1 = r10_1;\n                                    var_580 = arg3;\n                                    var_56c = r11_1;\n                                    rax_17 = sub_405660(r15_2);\n                                    arg3 = var_580;\n                                    r10_1 = var_578_1;\n                                    if (rax_17 == r15_2)\n                                    {\n                                        r11_1 = var_56c;\n                                    }\n                                }\n                                if (((((*r15_2 == 0x28 && arg3 != 0) && rax_17 == r15_2) || *r15_2 != 0x28) || (*r15_2 == 0x28 && arg3 == 0)))\n                                {\n                                    if (r11_1 == 0x3f)\n                                    {\n                                        if (rbx == r14_3)\n                                        {\n                                            goto label_4060a0;\n                                        }\n                                        if ((*rbx == 0x2f && r13_4 != 0))\n                                        {\n                                            goto label_4060a0;\n                                        }\n                                        rbx = &rbx[1];\n                                    }\n                                    rax_17 = r15_2;\n                                }\n                                r11_1 = *rax_17;\n                                r15_2 = (rax_17 + 4);\n                                if (r11_1 == 0x3f)\n                                {\n                                    continue;\n                                }\n                                if ((r11_1 != 0x3f && r11_1 != 0x2a))\n                                {\n                                    break;\n                                }\n                                if (r11_1 != 0x2a)\n                                {\n                                    /* nop */\n                                }\n                            }\n                        }\n                        int32_t rcx_2 = (var_570 & 1);\n                        if (r11_1 != 0)\n                        {\n                            var_578_1 = r11_1;\n                            var_580 = rcx_2;\n                            wchar_t* rax_18 = wmemchr(rbx, ((-rcx_2) & 0x2f), ((r14_3 - rbx) >> 2));\n                            wint_t r11_2 = var_578_1;\n                            int32_t rcx_3 = var_580;\n                            wchar_t* r9_2 = rax_18;\n                            bool r10_2 = r10_1;\n                            if (rax_18 == 0)\n                            {\n                                r9_2 = r14_3;\n                            }\n                            if (r11_2 != 0x5b)\n                            {\n                                uint64_t rax_25;\n                                if (rax_15 != 0)\n                                {\n                                    rax_25 = (r11_2 - 0x21);\n                                }\n                                if ((((rax_15 == 0 || (rax_15 != 0 && rax_25 > 0x1f)) || ((rax_15 != 0 && rax_25 <= 0x1f) && (!(TEST_BITQ(0x80000401, rax_25))))) || (((rax_15 != 0 && rax_25 <= 0x1f) && (TEST_BITQ(0x80000401, rax_25))) && *r15_2 != 0x28)))\n                                {\n                                    if (r11_2 != 0x2f)\n                                    {\n                                        if (rcx_3 != 0)\n                                        {\n                                            goto label_406208;\n                                        }\n                                    label_4067bf:\n                                        var_570 = (var_570 & 0xfffffffb);\n                                    label_406208:\n                                        uint32_t r13_6 = r10_2;\n                                        if ((r11_2 == 0x5c && r12_2 == 0))\n                                        {\n                                            r11_2 = *r15_2;\n                                        }\n                                        if (rbp_2 != 0)\n                                        {\n                                            r11_2 = towlower(r11_2);\n                                        }\n                                        void* r15_3 = (r15_2 - 4);\n                                        if (r9_2 <= rbx)\n                                        {\n                                            goto label_4060a0;\n                                        }\n                                        uint32_t r14_4 = r13_6;\n                                        int32_t* r13_7 = rbx;\n                                        wint_t rax_20;\n                                        int32_t rax_21;\n                                        do\n                                        {\n                                            rax_20 = *r13_7;\n                                            if (rbp_2 != 0)\n                                            {\n                                                rax_20 = towlower(rax_20);\n                                            }\n                                            if (r11_2 == rax_20)\n                                            {\n                                                rax_21 = sub_405df0(r15_3, r13_7, r14_3, r14_4, var_570);\n                                                if (rax_21 == 0)\n                                                {\n                                                    break;\n                                                }\n                                            }\n                                            r13_7 = &r13_7[1];\n                                            r14_4 = 0;\n                                        } while (r9_2 > r13_7);\n                                        if ((r11_2 == rax_20 && rax_21 == 0))\n                                        {\n                                            goto label_406290;\n                                        }\n                                        goto label_4060a0;\n                                    }\n                                    if (rcx_3 != 0)\n                                    {\n                                        if (r14_3 <= rbx)\n                                        {\n                                            goto label_4060a0;\n                                        }\n                                        while (*rbx != 0x2f)\n                                        {\n                                            rbx = &rbx[1];\n                                            if (r14_3 <= rbx)\n                                            {\n                                                break;\n                                            }\n                                        }\n                                        if (*rbx != 0x2f)\n                                        {\n                                            goto label_4060a0;\n                                        }\n                                        int32_t rax_31;\n                                        rax_31 = sub_405df0(r15_2, &rbx[1], r14_3, ((var_570 >> 2) & 1)) != 0;\n                                        rax_12 = rax_31;\n                                        return rax_12;\n                                    }\n                                    goto label_4067bf;\n                                }\n                            }\n                            int32_t rax_27 = (var_570 & 0xfffffffb);\n                            if (rcx_3 != 0)\n                            {\n                                rax_27 = var_570;\n                            }\n                            void* r15_4 = (r15_2 - 4);\n                            if (r9_2 <= rbx)\n                            {\n                                goto label_4060a0;\n                            }\n                            int32_t rax_28;\n                            do\n                            {\n                                rax_28 = sub_405df0(r15_4, rbx, r14_3, r10_2, rax_27);\n                                if (rax_28 == 0)\n                                {\n                                    break;\n                                }\n                                rbx = &rbx[1];\n                                r10_2 = false;\n                            } while (r9_2 > rbx);\n                            if (rax_28 == 0)\n                            {\n                                goto label_406290;\n                            }\n                            goto label_4060a0;\n                        }\n                        if (rcx_2 == 0)\n                        {\n                            goto label_406290;\n                        }\n                        if ((var_570 & 8) != 0)\n                        {\n                            goto label_406290;\n                        }\n                        wchar_t* rax_29;\n                        rax_29 = wmemchr(rbx, 0x2f, ((r14_3 - rbx) >> 2)) != 0;\n                        rax_12 = rax_29;\n                        return rax_12;\n                        break;\n                    }\n                    case 0xe:\n                    {\n                        if (r8 == 5)\n                        {\n                            if (var_578_1 == rbx)\n                            {\n                                goto label_4060a0;\n                            }\n                            if (*rbx != 0x2f)\n                            {\n                                goto label_4060a0;\n                            }\n                            rbp_3 = var_580;\n                            r10_1 = true;\n                            goto label_40606d;\n                        }\n                        break;\n                    }\n                    case 0x1e:\n                    {\n                        if (((var_570 & 0x20) != 0 && rbp_3[1] == 0x28))\n                        {\n                            rax_12 = sub_405860(0x3f, var_580, rbx, var_578_1, r10_1, var_570);\n                            if (rax_12 != 0xffffffff)\n                            {\n                                return rax_12;\n                            }\n                        }\n                        if (var_578_1 == rbx)\n                        {\n                            goto label_4060a0;\n                        }\n                        int32_t rax_9 = *rbx;\n                        if (rax_9 != 0x2f)\n                        {\n                            rax_9 = rax_9 == 0x2e;\n                            r10_1 = (r10_1 & rax_9);\n                            if (r10_1 != 0)\n                            {\n                                goto label_4060a0;\n                            }\n                            rbp_3 = var_580;\n                            goto label_40606d;\n                        }\n                        if ((var_570 & 1) != 0)\n                        {\n                            goto label_4060a0;\n                        }\n                        goto label_406065;\n                    }\n                    case 0x3a:\n                    {\n                        if (data_60f4d8 == 0)\n                        {\n                            char* rax_22;\n                            rax_22 = getenv(\"POSIXLY_CORRECT\");\n                            data_60f4d8 = ((rax_22 - rax_22) | 1);\n                        }\n                        if (var_578_1 == rbx)\n                        {\n                            goto label_4060a0;\n                        }\n                        wint_t r8_2 = *rbx;\n                        if (r8_2 == 0x2e)\n                        {\n                            if (r10_1 != 0)\n                            {\n                                goto label_4060a0;\n                            }\n                        }\n                        else if ((r8_2 == 0x2f && (var_570 & 1) != 0))\n                        {\n                            goto label_4060a0;\n                        }\n                        int32_t rax_6 = rbp_3[1];\n                        wchar_t* r14_1;\n                        if ((rax_6 == 0x21 || (data_60f4d8 < 0 && rax_6 == 0x5e)))\n                        {\n                            r14_1 = &rbp_3[2];\n                            var_56c = 1;\n                        }\n                        if ((rax_6 != 0x21 && (data_60f4d8 >= 0 || (data_60f4d8 < 0 && rax_6 != 0x5e))))\n                        {\n                            var_56c = 0;\n                            r14_1 = var_580;\n                        }\n                        if (rbp_2 != 0)\n                        {\n                            wint_t rax_7;\n                            rax_7 = towlower(r8_2);\n                            r8_2 = rax_7;\n                        }\n                        rbp_3 = &r14_1[1];\n                        wint_t* r15_1 = rbx;\n                        uint64_t rax_8 = *r14_1;\n                        while (true)\n                        {\n                            int32_t r14_2;\n                            if ((r12_2 == 0 && rax_8 == 0x5c))\n                            {\n                                rax_8 = *rbp_3;\n                                if (rax_8 != 0)\n                                {\n                                    if (rbp_2 != 0)\n                                    {\n                                        rax_8 = towlower(rax_8);\n                                    }\n                                    r14_2 = rbp_3[1];\n                                    rbp_3 = &rbp_3[1];\n                                    goto label_405fa6;\n                                }\n                                goto label_4060a0;\n                            }\n                            void* rsi_1;\n                            if (rax_8 == 0x5b)\n                            {\n                                r14_2 = *rbp_3;\n                                if (r14_2 == 0x3a)\n                                {\n                                    void* r14_5 = rbp_3;\n                                    arg3 = 0;\n                                    void* r8_5;\n                                    do\n                                    {\n                                        rax_8 = *(r14_5 + 4);\n                                        r8_5 = (r14_5 + 4);\n                                        if (rax_8 == 0x3a)\n                                        {\n                                            break;\n                                        }\n                                        if ((rax_8 - 0x61) > 0x18)\n                                        {\n                                            break;\n                                        }\n                                        arg3 = (arg3 + 1);\n                                        r14_5 = r8_5;\n                                        var_44c;\n                                        *(&var_44c + (arg3 << 2)) = rax_8;\n                                    } while (arg3 != 0x100);\n                                    if ((rax_8 == 0x3a && *(r8_5 + 4) == 0x5d))\n                                    {\n                                        int32_t var_448;\n                                        &var_448[arg3] = 0;\n                                        void var_558;\n                                        void* rsi_11 = &var_558;\n                                        int32_t* rdx_13 = &var_448;\n                                        int32_t rax_30 = var_448;\n                                        do\n                                        {\n                                            if (rax_30 > 0x3f)\n                                            {\n                                                if (rax_30 < 0x41)\n                                                {\n                                                    break;\n                                                }\n                                                if ((rax_30 > 0x5f && (rax_30 - 0x61) > 0x1d))\n                                                {\n                                                    break;\n                                                }\n                                            }\n                                            else if ((rax_30 < 0x25 && (rax_30 - 0x20) > 3))\n                                            {\n                                                break;\n                                            }\n                                            void var_48;\n                                            if (rdx_13 == &var_48)\n                                            {\n                                                break;\n                                            }\n                                            rdx_13 = &rdx_13[1];\n                                            rsi_11 = (rsi_11 + 1);\n                                            *(rsi_11 - 1) = rax_30;\n                                            rax_30 = *rdx_13;\n                                        } while (rax_30 != 0);\n                                        if ((rax_30 > 0x3f && rax_30 < 0x41))\n                                        {\n                                            goto label_4060a0;\n                                        }\n                                        *rsi_11 = 0;\n                                        wctype_t rax_33 = wctype(&var_558);\n                                        if (rax_33 == 0)\n                                        {\n                                            goto label_4060a0;\n                                        }\n                                        rax_8 = iswctype(*r15_1, rax_33);\n                                        if (rax_8 != 0)\n                                        {\n                                            rbp_3 = (r14_5 + 0xc);\n                                            rbx = r15_1;\n                                            r14_2 = *(r14_5 + 0xc);\n                                            rsi_1 = (r14_5 + 0x10);\n                                            goto label_4065d3;\n                                        }\n                                        rbp_3 = (r8_5 + 0xc);\n                                        rax_8 = *(r8_5 + 8);\n                                    }\n                                    if ((rax_8 != 0x3a && (!(rax_8 != 0x3a && (rax_8 - 0x61) > 0x18))))\n                                    {\n                                        goto label_4060a0;\n                                    }\n                                    if (((rax_8 == 0x3a && *(r8_5 + 4) != 0x5d) || rax_8 != 0x3a))\n                                    {\n                                        rsi_1 = &rbp_3[1];\n                                        if (r8_2 != 0x5b)\n                                        {\n                                            rbp_3 = rsi_1;\n                                            rax_8 = 0x3a;\n                                            continue;\n                                        }\n                                        goto label_4065b0;\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                if (rax_8 == 0)\n                                {\n                                    rbx = r15_1;\n                                    break;\n                                }\n                                r14_2 = *rbp_3;\n                            }\n                            if (((rax_8 == 0x5b && r14_2 != 0x3a) || rax_8 != 0x5b))\n                            {\n                                while (true)\n                                {\n                                    if (rbp_2 != 0)\n                                    {\n                                        rax_8 = towlower(rax_8);\n                                    }\n                                label_405fa6:\n                                    rsi_1 = &rbp_3[1];\n                                    if (r14_2 != 0x2d)\n                                    {\n                                        break;\n                                    }\n                                    arg3 = rbp_3[1];\n                                    if ((arg3 != 0x5d && arg3 != 0))\n                                    {\n                                        break;\n                                    }\n                                    if (rax_8 == r8_2)\n                                    {\n                                        break;\n                                    }\n                                    if (arg3 != 0x5d)\n                                    {\n                                        break;\n                                    }\n                                    r14_2 = 0x5d;\n                                    rbp_3 = rsi_1;\n                                    rax_8 = 0x2d;\n                                }\n                                if (r14_2 != 0x2d)\n                                {\n                                    if (rax_8 == r8_2)\n                                    {\n                                    label_4065b0:\n                                        rbx = r15_1;\n                                        r14_2 = *rbp_3;\n                                    label_4065d3:\n                                        void* r8_9;\n                                        while (true)\n                                        {\n                                            r8_9 = rsi_1;\n                                            arg3 = r14_2;\n                                            if (r14_2 == 0)\n                                            {\n                                                break;\n                                            }\n                                            rax_8 = r12_2 == 0;\n                                            r10_1 = (r14_2 == 0x5c & rax_8);\n                                            if (r10_1 != 0)\n                                            {\n                                                if (rbp_3[1] == 0)\n                                                {\n                                                    break;\n                                                }\n                                                r14_2 = rbp_3[2];\n                                                rbp_3 = &rbp_3[2];\n                                            }\n                                            else\n                                            {\n                                                if (r14_2 == 0x5b)\n                                                {\n                                                    r14_2 = rbp_3[1];\n                                                    if (r14_2 == 0x3a)\n                                                    {\n                                                        rax_8 = &rbp_3[2];\n                                                        r14_2 = rbp_3[2];\n                                                        void* rbp_7 = &rbp_3[0x101];\n                                                        while (r14_2 != 0x3a)\n                                                        {\n                                                            if ((r14_2 - 0x61) > 0x18)\n                                                            {\n                                                                break;\n                                                            }\n                                                            rax_8 = (rax_8 + 4);\n                                                            r14_2 = *rax_8;\n                                                            if (rbp_7 == rax_8)\n                                                            {\n                                                                break;\n                                                            }\n                                                        }\n                                                        if ((r14_2 == 0x3a && *(rax_8 + 4) == 0x5d))\n                                                        {\n                                                            r8_9 = (rax_8 + 0xc);\n                                                            arg3 = *(rax_8 + 8);\n                                                        }\n                                                        if (r14_2 != 0x3a)\n                                                        {\n                                                            if ((!(r14_2 != 0x3a && (r14_2 - 0x61) > 0x18)))\n                                                            {\n                                                                break;\n                                                            }\n                                                            r14_2 = 0x3a;\n                                                            rbp_3 = rsi_1;\n                                                        }\n                                                    }\n                                                    void* rbp_6 = &rbp_3[2];\n                                                    if ((r14_2 == 0x3a && *(rax_8 + 4) != 0x5d))\n                                                    {\n                                                        rbp_3 = rsi_1;\n                                                    }\n                                                    if (r14_2 != 0x3a)\n                                                    {\n                                                        if (r14_2 == 0x2e)\n                                                        {\n                                                            while (true)\n                                                            {\n                                                                rax_8 = *(rbp_6 + 4);\n                                                                void* rdx_8 = (rbp_6 + 4);\n                                                                if (rax_8 == 0)\n                                                                {\n                                                                    break;\n                                                                }\n                                                                if ((rax_8 == 0x2e && *(rdx_8 + 4) == 0x5d))\n                                                                {\n                                                                    break;\n                                                                }\n                                                                rbp_6 = rdx_8;\n                                                            }\n                                                            if (rax_8 == 0)\n                                                            {\n                                                                break;\n                                                            }\n                                                            r8_9 = (rbp_6 + 0x10);\n                                                            arg3 = *(rbp_6 + 0xc);\n                                                        }\n                                                        if (r14_2 == 0x3d)\n                                                        {\n                                                            if (rbp_3[2] == 0)\n                                                            {\n                                                                break;\n                                                            }\n                                                            if (rbp_3[3] != 0x3d)\n                                                            {\n                                                                break;\n                                                            }\n                                                            if (rbp_3[4] != 0x5d)\n                                                            {\n                                                                break;\n                                                            }\n                                                            r8_9 = &rbp_3[6];\n                                                            arg3 = rbp_3[5];\n                                                        }\n                                                    }\n                                                }\n                                                if (((((((r14_2 == 0x5b && r14_2 == 0x3a) && r14_2 == 0x3a) && *(rax_8 + 4) == 0x5d) || r14_2 != 0x5b) || (((r14_2 == 0x5b && r14_2 != 0x3a) && r14_2 != 0x3d) && r14_2 == 0x2e)) || ((r14_2 == 0x5b && r14_2 != 0x3a) && r14_2 == 0x3d)))\n                                                {\n                                                    if (arg3 == 0x5d)\n                                                    {\n                                                        break;\n                                                    }\n                                                    r14_2 = *r8_9;\n                                                    rbp_3 = r8_9;\n                                                }\n                                            }\n                                            rsi_1 = &rbp_3[1];\n                                        }\n                                        if (r14_2 == 0)\n                                        {\n                                            goto label_4060a0;\n                                        }\n                                        if (var_56c == 0)\n                                        {\n                                            rbp_3 = r8_9;\n                                            break;\n                                        }\n                                        goto label_4060a0;\n                                    }\n                                    rax_8 = r14_2;\n                                    rbp_3 = rsi_1;\n                                }\n                                else\n                                {\n                                    if (((r14_2 == 0x2d && (arg3 == 0x5d || arg3 == 0)) && rax_8 == r8_2))\n                                    {\n                                        rbx = r15_1;\n                                        goto label_4065d3;\n                                    }\n                                    int32_t* rsi = &rbp_3[2];\n                                    if ((arg3 == 0x5c && r12_2 == 0))\n                                    {\n                                        rsi = &rbp_3[3];\n                                        arg3 = rbp_3[2];\n                                    }\n                                    if (arg3 == 0)\n                                    {\n                                        goto label_4060a0;\n                                    }\n                                    r14_2 = *rsi;\n                                    rbp_3 = &rsi[1];\n                                    arg1 = rax_8 <= r8_2;\n                                    arg3 = arg3 >= r8_2;\n                                    rax_8 = r14_2;\n                                    if ((arg1 & arg3) != 0)\n                                    {\n                                        rbp_3 = rsi;\n                                        rbx = r15_1;\n                                        rsi_1 = &rsi[1];\n                                        goto label_4065d3;\n                                    }\n                                }\n                            }\n                            if (rax_8 == 0x5d)\n                            {\n                                rbx = r15_1;\n                                if (var_56c == 0)\n                                {\n                                    goto label_4060a0;\n                                }\n                                goto label_4062c4;\n                            }\n                        }\n                        if (rax_8 == 0)\n                        {\n                            goto label_406052;\n                        }\n                        goto label_40606d;\n                    }\n                    case 0x3b:\n                    {\n                        if (r12_2 == 0)\n                        {\n                            r15 = rbp_3[1];\n                            var_580 = &rbp_3[2];\n                            if (r15 == 0)\n                            {\n                                goto label_4060a0;\n                            }\n                            if (rbp_2 != 0)\n                            {\n                                r15 = towlower(r15);\n                                if (var_578_1 == rbx)\n                                {\n                                    goto label_4060a0;\n                                }\n                            }\n                            else if (var_578_1 == rbx)\n                            {\n                                goto label_4060a0;\n                            }\n                        }\n                        wint_t rax_5;\n                        if ((((r12_2 != 0 && var_578_1 != rbx) && rbp_2 != 0) || ((r12_2 == 0 && r15 != 0) && rbp_2 != 0)))\n                        {\n                            rax_5 = towlower(*rbx);\n                            rbp_3 = var_580;\n                        }\n                        if ((((r12_2 != 0 && var_578_1 != rbx) && rbp_2 == 0) || ((r12_2 == 0 && r15 != 0) && rbp_2 == 0)))\n                        {\n                            rax_5 = *rbx;\n                            rbp_3 = var_580;\n                        }\n                        if ((((((r12_2 != 0 && var_578_1 != rbx) && rbp_2 != 0) || ((r12_2 == 0 && r15 != 0) && rbp_2 != 0)) || ((r12_2 != 0 && var_578_1 != rbx) && rbp_2 == 0)) || ((r12_2 == 0 && r15 != 0) && rbp_2 == 0)))\n                        {\n                            if (rax_5 != r15)\n                            {\n                                goto label_4060a0;\n                            }\n                        label_4062c4:\n                            r10_1 = false;\n                        }\n                        if ((r12_2 != 0 && var_578_1 == rbx))\n                        {\n                            goto label_4060a0;\n                        }\n                        goto label_40606d;\n                    }\n                }\n            }\n            if (var_578_1 == rbx)\n            {\n                goto label_4060a0;\n            }\n        label_406052:\n            wint_t rax_10 = *rbx;\n            if (rbp_2 != 0)\n            {\n                rax_10 = towlower(rax_10);\n            }\n            if (rax_10 != r15)\n            {\n                goto label_4060a0;\n            }\n        label_406065:\n            rbp_3 = var_580;\n            r10_1 = false;\n        label_40606d:\n            r15 = *rbp_3;\n            rbx = &rbx[1];\n            var_580 = &rbp_3[1];\n            if (r15 == 0)\n            {\n                r14 = var_578_1;\n                break;\n            }\n        }\n    }\n    if (rbx == r14)\n    {\n    label_406290:\n        rax_12 = 0;\n    }\n    else if ((var_570 & 8) != 0)\n    {\n        rax_12 = *rbx != 0x2f;\n    }\n    else\n    {\n    label_4060a0:\n        rax_12 = 1;\n    }\n    return rax_12;\n}\n\n"
        },
        {
            "funcName": "sub_4068d0",
            "funcStartAddr": "0x4068d0",
            "funcEndAddr": "0x406e13",
            "decompiledFuncCode": "int64_t sub_4068d0(int32_t arg1, char* arg2, char* arg3, char* arg4, char arg5, \n    int32_t arg6)\n{\n    void* var_88;\n    int64_t* rsp = &var_88;\n    void** var_40 = nullptr;\n    uint64_t rax = strlen(arg2);\n    uint32_t rax_1 = arg2[1];\n    int64_t rax_2;\n    if (rax_1 == 0)\n    {\n    label_4069a0:\n        rax_2 = 0xffffffff;\n    }\n    else\n    {\n        void* r14_1 = &arg2[1];\n        void* rsi = r14_1;\n        int64_t* rbx_1 = &var_40;\n        int32_t rdi_2 = (arg1 - 0x3f);\n        int64_t r15_1 = 0;\n        uint64_t rdx;\n        do\n        {\n            if (rax_1 != 0x5b)\n            {\n                while (true)\n                {\n                    rdx = (rax_1 - 0x21);\n                    if (rdx > 0x1f)\n                    {\n                        break;\n                    }\n                    if ((!(TEST_BITQ(0xc0000601, rdx))))\n                    {\n                        break;\n                    }\n                    if (*(r14_1 + 1) != 0x28)\n                    {\n                        break;\n                    }\n                    r15_1 = (r15_1 + 1);\n                    r14_1 = (r14_1 + 1);\n                    rax_1 = 0x28;\n                }\n                if (((rdx > 0x1f && rax_1 == 0x7c) && r15_1 == 0))\n                {\n                    uint64_t rdx_4 = (r14_1 - rsi);\n                    uint64_t rax_4 = (rdx_4 + 1);\n                    if (rdi_2 <= 1)\n                    {\n                        rax_4 = rax;\n                    }\n                    int64_t rax_6 = ((rax_4 + 0xf) & 0xfffffffffffffff8);\n                    if ((rax_6 - 8) > 0x1f37)\n                    {\n                        break;\n                    }\n                    rsp = (rsp - ((rax_6 + 0x17) & 0xfffffffffffffff0));\n                    int64_t* r15_3 = ((rsp + 0xf) & 0xfffffffffffffff0);\n                    rsi = (r14_1 + 1);\n                    *mempcpy(&r15_3[1], rsi, rdx_4) = 0;\n                    rax_1 = *(r14_1 + 1);\n                    r14_1 = rsi;\n                    *r15_3 = 0;\n                    *rbx_1 = r15_3;\n                    rbx_1 = r15_3;\n                    r15_1 = 0;\n                }\n                if ((rdx <= 0x1f && rax_1 == 0x29))\n                {\n                    int64_t rdx_1 = (r15_1 - 1);\n                    if (r15_1 == 0)\n                    {\n                        break;\n                    }\n                    rax_1 = *(r14_1 + 1);\n                    r15_1 = rdx_1;\n                    r14_1 = (r14_1 + 1);\n                    if (rax_1 == 0)\n                    {\n                        break;\n                    }\n                    continue;\n                }\n                if ((((rdx > 0x1f && rax_1 != 0x7c) || ((rdx > 0x1f && rax_1 == 0x7c) && r15_1 != 0)) || rdx <= 0x1f))\n                {\n                    rax_1 = *(r14_1 + 1);\n                    r14_1 = (r14_1 + 1);\n                }\n            }\n            else\n            {\n                if (data_60f4d8 == 0)\n                {\n                    var_88 = rsi;\n                    char* rax_10 = getenv(\"POSIXLY_CORRECT\");\n                    rsi = var_88;\n                    data_60f4d8 = ((rax_10 - rax_10) | 1);\n                }\n                char rax_3 = *(r14_1 + 1);\n                void* rcx_1;\n                if ((rax_3 == 0x21 || (data_60f4d8 < 0 && rax_3 == 0x5e)))\n                {\n                    rcx_1 = (r14_1 + 2);\n                    rax_3 = *(r14_1 + 2);\n                }\n                if ((rax_3 != 0x21 && (data_60f4d8 >= 0 || (data_60f4d8 < 0 && rax_3 != 0x5e))))\n                {\n                    rcx_1 = (r14_1 + 1);\n                }\n                if (rax_3 == 0x5d)\n                {\n                    rax_3 = *(rcx_1 + 1);\n                    rcx_1 = (rcx_1 + 1);\n                    r14_1 = (rcx_1 + 1);\n                    if (rax_3 != 0x5d)\n                    {\n                        goto label_406a10;\n                    }\n                }\n                else\n                {\n                    while (true)\n                    {\n                        r14_1 = (rcx_1 + 1);\n                        if (rax_3 == 0x5d)\n                        {\n                            break;\n                        }\n                    label_406a10:\n                        if (rax_3 == 0)\n                        {\n                            break;\n                        }\n                        rax_3 = *r14_1;\n                        rcx_1 = r14_1;\n                    }\n                    if (rax_3 == 0)\n                    {\n                        break;\n                    }\n                }\n                rax_1 = *(rcx_1 + 1);\n            }\n        } while (rax_1 != 0);\n        if ((!((rdx <= 0x1f && rax_1 == 0x29) && r15_1 == 0)))\n        {\n            goto label_4069a0;\n        }\n        void** r15_4 = rbx_1;\n        uint64_t rdx_6 = (r14_1 - rsi);\n        uint64_t rax_14 = (rdx_6 + 1);\n        if ((arg1 - 0x3f) <= 1)\n        {\n            rax_14 = rax;\n        }\n        int64_t rax_16 = ((rax_14 + 0xf) & 0xfffffffffffffff8);\n        if ((rax_16 - 8) > 0x1f37)\n        {\n            goto label_4069a0;\n        }\n        void* rax_20 = (((rsp - ((rax_16 + 0x17) & 0xfffffffffffffff0)) + 0xf) & 0xfffffffffffffff0);\n        char* rax_21 = mempcpy((rax_20 + 8), rsi, rdx_6);\n        *r15_4 = rax_20;\n        *rax_21 = 0;\n        void** rax_22 = var_40;\n        *rax_20 = 0;\n        if (rax_22 == 0)\n        {\n            __assert_fail(\"list != NULL\", \"lib/fnmatch_loop.c\", 0x454, \"ext_match\");\n            /* no return */\n        }\n        if (*(r14_1 - 1) != 0x29)\n        {\n            __assert_fail(\"p[-1] == L_(')')\", \"lib/fnmatch_loop.c\", 0x455, \"ext_match\");\n            /* no return */\n        }\n        uint64_t r13_3 = (arg1 - 0x21);\n        if (r13_3 > 0x1f)\n        {\n        label_406ddc:\n            __assert_fail(\"! \"Invalid extended matching ope\u2026\", \"lib/fnmatch_loop.c\", 0x4ad, \"ext_match\");\n            /* no return */\n        }\n        int32_t rax_23;\n        if (r13_3 == 9)\n        {\n            rax_23 = sub_406e20(r14_1, arg3, arg4, arg5, arg6);\n        }\n        if ((r13_3 == 0xa || (r13_3 == 9 && rax_23 != 0)))\n        {\n            int32_t var_60_1;\n            var_60_1 = r14_1;\n            void** r14_2 = rax_22;\n            int32_t r12_2 = (arg6 & 0xfffffffb);\n            int32_t r13_5 = (arg6 & 1);\n            if (r13_5 != 0)\n            {\n                r12_2 = arg6;\n            }\n            void* rax_25 = &arg2[-1];\n            void** var_58_1;\n            var_58_1 = r13_5;\n            do\n            {\n                if (arg3 <= arg4)\n                {\n                    uint32_t rax_26 = arg5;\n                    char* r13_6 = arg3;\n                    int32_t rax_33;\n                    int32_t rax_34;\n                    do\n                    {\n                        rax_33 = sub_406e20(&r14_2[1], arg3, r13_6, rax_26, r12_2);\n                        if (rax_33 == 0)\n                        {\n                            if (arg3 != r13_6)\n                            {\n                                int32_t rcx_6 = 0;\n                                if (r13_6[-1] == 0x2f)\n                                {\n                                    rcx_6 = (arg6 & 5) == 5;\n                                }\n                                if (sub_406e20(var_60_1, r13_6, arg4, rcx_6, r12_2) == 0)\n                                {\n                                    break;\n                                }\n                                int32_t rcx_7 = 0;\n                                if (r13_6[-1] == 0x2f)\n                                {\n                                    rcx_7 = (arg6 & 5) == 5;\n                                }\n                                if (sub_406e20(rax_25, r13_6, arg4, rcx_7, r12_2) == 0)\n                                {\n                                    break;\n                                }\n                            }\n                            else\n                            {\n                                rax_34 = sub_406e20(var_60_1, arg3, arg4, rax_26, r12_2);\n                                if (rax_34 == 0)\n                                {\n                                    break;\n                                }\n                            }\n                            r14_2 = var_40;\n                        }\n                        r13_6 = &r13_6[1];\n                    } while (arg4 >= r13_6);\n                    if (((rax_33 == 0 && arg3 == r13_6) && rax_34 == 0))\n                    {\n                        goto label_406c7e;\n                    }\n                }\n                r14_2 = *r14_2;\n                var_40 = r14_2;\n            } while (r14_2 != 0);\n            goto label_406d1e;\n        }\n        uint32_t r12_4;\n        if (r13_3 == 0x1f)\n        {\n            r12_4 = arg5;\n        }\n        int32_t rax_43;\n        if (r13_3 == 0x1e)\n        {\n            r12_4 = arg5;\n            rax_43 = sub_406e20(r14_1, arg3, arg4, r12_4, arg6);\n        }\n        if ((r13_3 == 0x1f || (r13_3 == 0x1e && rax_43 != 0)))\n        {\n            void** r13_8 = rax_22;\n            int32_t rbx_7 = (arg6 & 0xfffffffb);\n            if ((arg6 & 1) != 0)\n            {\n                rbx_7 = arg6;\n            }\n            int32_t rax_42;\n            do\n            {\n                rax_42 = sub_406e20(strcat(&r13_8[1], r14_1), arg3, arg4, r12_4, rbx_7);\n                if (rax_42 == 0)\n                {\n                    break;\n                }\n                r13_8 = *r13_8;\n                var_40 = r13_8;\n            } while (r13_8 != 0);\n            if (rax_42 != 0)\n            {\n                goto label_406d1e;\n            }\n            rax_2 = 0;\n        }\n        if ((r13_3 == 0x1e && rax_43 == 0))\n        {\n            rax_2 = 0;\n        }\n        if (r13_3 == 0)\n        {\n            if (arg3 > arg4)\n            {\n            label_406d1e:\n                rax_2 = 1;\n            }\n            else\n            {\n                int32_t var_50;\n                var_50 = r14_1;\n                uint32_t r12_3 = arg5;\n                char* r13_7 = arg3;\n                int32_t rbx_5 = (arg6 & 0xfffffffb);\n                if ((arg6 & 1) != 0)\n                {\n                    rbx_5 = arg6;\n                }\n                int32_t rax_36;\n                int32_t rax_39;\n                do\n                {\n                    void** r14_3 = rax_22;\n                    do\n                    {\n                        rax_36 = sub_406e20(&r14_3[1], arg3, r13_7, r12_3, rbx_5);\n                        if (rax_36 == 0)\n                        {\n                            break;\n                        }\n                        r14_3 = *r14_3;\n                    } while (r14_3 != 0);\n                    if (rax_36 != 0)\n                    {\n                        uint32_t rcx_11;\n                        if (arg3 == r13_7)\n                        {\n                            rcx_11 = r12_3;\n                        }\n                        else\n                        {\n                            rcx_11 = 0;\n                            if (r13_7[-1] == 0x2f)\n                            {\n                                rcx_11 = (arg6 & 5) == 5;\n                            }\n                        }\n                        rax_39 = sub_406e20(var_50, r13_7, arg4, rcx_11, rbx_5);\n                        if (rax_39 == 0)\n                        {\n                            break;\n                        }\n                    }\n                    r13_7 = &r13_7[1];\n                } while (arg4 >= r13_7);\n                if ((!(rax_36 != 0 && rax_39 == 0)))\n                {\n                    goto label_406d1e;\n                }\n            }\n        }\n        if (((r13_3 == 9 && rax_23 == 0) || (r13_3 == 0 && arg3 <= arg4)))\n        {\n        label_406c7e:\n            rax_2 = 0;\n        }\n        if (((((((((((((((((((((((((((r13_3 == 1 || r13_3 == 2) || r13_3 == 3) || r13_3 == 4) || r13_3 == 5) || r13_3 == 6) || r13_3 == 7) || r13_3 == 8) || r13_3 == 0xb) || r13_3 == 0xc) || r13_3 == 0xd) || r13_3 == 0xe) || r13_3 == 0xf) || r13_3 == 0x10) || r13_3 == 0x11) || r13_3 == 0x12) || r13_3 == 0x13) || r13_3 == 0x14) || r13_3 == 0x15) || r13_3 == 0x16) || r13_3 == 0x17) || r13_3 == 0x18) || r13_3 == 0x19) || r13_3 == 0x1a) || r13_3 == 0x1b) || r13_3 == 0x1c) || r13_3 == 0x1d))\n        {\n            goto label_406ddc;\n        }\n    }\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_406e20",
            "funcStartAddr": "0x406e20",
            "funcEndAddr": "0x407903",
            "decompiledFuncCode": "uint64_t sub_406e20(char* arg1, char* arg2, char* arg3, int32_t arg4, \n    int32_t arg5)\n{\n    char* r14 = arg2;\n    uint64_t r12 = *arg1;\n    char* var_170 = arg3;\n    int32_t var_158 = arg5;\n    void* var_168 = &arg1[1];\n    uint64_t rax_18;\n    if (r12 != 0)\n    {\n        int32_t r8 = (arg5 & 5);\n        char* r13_1 = arg1;\n        uint64_t r15_1 = arg4;\n        int32_t rbp_2 = (arg5 & 2);\n        int32_t rbx_2 = (arg5 & 0x10);\n        do\n        {\n            if (rbx_2 != 0)\n            {\n                int32_t** rax_1;\n                rax_1 = __ctype_tolower_loc();\n                r12 = *rax_1[r12];\n            }\n            char rax_3 = (r12 - 0x21);\n            uint64_t var_160;\n            if (rax_3 <= 0x3b)\n            {\n                switch (rax_3)\n                {\n                    case 0:\n                    case 0xa:\n                    case 0x1f:\n                    {\n                        if (((var_158 & 0x20) != 0 && r13_1[1] == 0x28))\n                        {\n                            rax_18 = sub_4068d0(r12, var_168, r14, var_170, r15_1, var_158);\n                            if (rax_18 != 0xffffffff)\n                            {\n                                return rax_18;\n                            }\n                        }\n                        break;\n                    }\n                    case 9:\n                    {\n                        int32_t rax_20 = (var_158 & 0x20);\n                        if ((rax_20 != 0 && r13_1[1] == 0x28))\n                        {\n                            rax_18 = sub_4068d0(0x2a, var_168, r14, var_170, r15_1, var_158);\n                            if (rax_18 != 0xffffffff)\n                            {\n                                return rax_18;\n                            }\n                        }\n                        if ((r14 != var_170 && (*r14 == 0x2e && r15_1 != 0)))\n                        {\n                            goto label_407130;\n                        }\n                        char r8_3 = r13_1[1];\n                        void* r9_2 = &r13_1[2];\n                        if ((r8_3 == 0x2a || r8_3 == 0x3f))\n                        {\n                            r12 = rax_20 != 0;\n                            int32_t r13_4 = (var_158 & 1);\n                            while (true)\n                            {\n                                void* rax_21;\n                                if ((r12 != 0 && *r9_2 == 0x28))\n                                {\n                                    var_160 = r8_3;\n                                    rax_21 = sub_405760(r9_2);\n                                    if (rax_21 == r9_2)\n                                    {\n                                        r8_3 = var_160;\n                                    }\n                                }\n                                if (((((*r9_2 == 0x28 && r12 != 0) && rax_21 == r9_2) || *r9_2 != 0x28) || (*r9_2 == 0x28 && r12 == 0)))\n                                {\n                                    if (r8_3 == 0x3f)\n                                    {\n                                        if (r14 == var_170)\n                                        {\n                                            goto label_407130;\n                                        }\n                                        if ((*r14 == 0x2f && r13_4 != 0))\n                                        {\n                                            goto label_407130;\n                                        }\n                                        r14 = &r14[1];\n                                    }\n                                    rax_21 = r9_2;\n                                }\n                                r8_3 = *rax_21;\n                                r9_2 = (rax_21 + 1);\n                                if (r8_3 == 0x3f)\n                                {\n                                    continue;\n                                }\n                                if ((r8_3 != 0x3f && r8_3 != 0x2a))\n                                {\n                                    break;\n                                }\n                                if (r8_3 != 0x2a)\n                                {\n                                    /* nop */\n                                }\n                            }\n                        }\n                        int32_t rcx_5 = (var_158 & 1);\n                        if (r8_3 != 0)\n                        {\n                            int32_t var_150_1;\n                            var_150_1 = r8_3;\n                            var_168 = rcx_5;\n                            char* rax_22 = sub_408aa0(r14, ((-rcx_5) & 0x2f), (var_170 - r14));\n                            uint32_t r8_4 = var_150_1;\n                            int32_t rcx_6 = var_168;\n                            char* r12_3 = rax_22;\n                            void* r9_3 = r9_2;\n                            if (rax_22 == 0)\n                            {\n                                r12_3 = var_170;\n                            }\n                            if (r8_4 != 0x5b)\n                            {\n                                uint64_t rax_41;\n                                if (rax_20 != 0)\n                                {\n                                    rax_41 = (r8_4 - 0x21);\n                                }\n                                if ((((rax_20 == 0 || (rax_20 != 0 && rax_41 > 0x1f)) || ((rax_20 != 0 && rax_41 <= 0x1f) && (!(TEST_BITQ(0x80000401, rax_41))))) || (((rax_20 != 0 && rax_41 <= 0x1f) && (TEST_BITQ(0x80000401, rax_41))) && *r9_3 != 0x28)))\n                                {\n                                    if (r8_4 != 0x2f)\n                                    {\n                                        if (rcx_6 != 0)\n                                        {\n                                            goto label_407291;\n                                        }\n                                    label_407842:\n                                        var_158 = (var_158 & 0xfffffffb);\n                                    label_407291:\n                                        uint32_t r15_4 = r15_1;\n                                        if ((r8_4 == 0x5c && rbp_2 == 0))\n                                        {\n                                            r8_4 = *r9_3;\n                                        }\n                                        if (rbx_2 != 0)\n                                        {\n                                            void* var_160_1;\n                                            var_160_1 = r8_4;\n                                            r8_4 = *__ctype_tolower_loc()[var_160_1];\n                                        }\n                                        void* rax_25 = (r9_3 - 1);\n                                        if (r12_3 <= r14)\n                                        {\n                                            goto label_407130;\n                                        }\n                                        uint32_t rbp_3 = r8_4;\n                                        uint32_t r13_6 = r15_4;\n                                        uint32_t rax_28;\n                                        int32_t rax_29;\n                                        do\n                                        {\n                                            rax_28 = *r14;\n                                            char r15_5 = rax_28;\n                                            if (rbx_2 != 0)\n                                            {\n                                                rax_28 = *__ctype_tolower_loc()[r15_5];\n                                            }\n                                            if (rax_28 == rbp_3)\n                                            {\n                                                rax_29 = sub_406e20(rax_25, r14, var_170, r13_6, var_158);\n                                                if (rax_29 == 0)\n                                                {\n                                                    break;\n                                                }\n                                            }\n                                            r14 = &r14[1];\n                                            r13_6 = 0;\n                                        } while (r12_3 != r14);\n                                        if ((rax_28 == rbp_3 && rax_29 == 0))\n                                        {\n                                            goto label_407330;\n                                        }\n                                        goto label_407130;\n                                    }\n                                    if (rcx_6 != 0)\n                                    {\n                                        if (var_170 <= r14)\n                                        {\n                                            goto label_407130;\n                                        }\n                                        while (*r14 != 0x2f)\n                                        {\n                                            r14 = &r14[1];\n                                            if (var_170 == r14)\n                                            {\n                                                break;\n                                            }\n                                        }\n                                        if (*r14 != 0x2f)\n                                        {\n                                            goto label_407130;\n                                        }\n                                        int32_t rax_50;\n                                        rax_50 = sub_406e20(r9_3, &r14[1], var_170, ((var_158 >> 2) & 1)) != 0;\n                                        rax_18 = rax_50;\n                                        return rax_18;\n                                    }\n                                    goto label_407842;\n                                }\n                            }\n                            void* rbx_3 = (r9_3 - 1);\n                            int32_t rax_43 = (var_158 & 0xfffffffb);\n                            if (rcx_6 != 0)\n                            {\n                                rax_43 = var_158;\n                            }\n                            if (r12_3 <= r14)\n                            {\n                                goto label_407130;\n                            }\n                            int32_t rax_44;\n                            do\n                            {\n                                rax_44 = sub_406e20(rbx_3, r14, var_170, r15_1, rax_43);\n                                if (rax_44 == 0)\n                                {\n                                    break;\n                                }\n                                r14 = &r14[1];\n                                r15_1 = 0;\n                            } while (r12_3 != r14);\n                            if (rax_44 == 0)\n                            {\n                                goto label_407330;\n                            }\n                            goto label_407130;\n                        }\n                        if (rcx_5 == 0)\n                        {\n                            goto label_407330;\n                        }\n                        if ((var_158 & 8) != 0)\n                        {\n                            goto label_407330;\n                        }\n                        char* rax_45;\n                        rax_45 = sub_408aa0(r14, 0x2f, (var_170 - r14)) != 0;\n                        rax_18 = rax_45;\n                        return rax_18;\n                        break;\n                    }\n                    case 0xe:\n                    {\n                        if (r8 == 5)\n                        {\n                            if (r14 == var_170)\n                            {\n                                goto label_407130;\n                            }\n                            if (*r14 != 0x2f)\n                            {\n                                goto label_407130;\n                            }\n                            r13_1 = var_168;\n                            r15_1 = 1;\n                            goto label_4070fe;\n                        }\n                        break;\n                    }\n                    case 0x1e:\n                    {\n                        if (((var_158 & 0x20) != 0 && r13_1[1] == 0x28))\n                        {\n                            rax_18 = sub_4068d0(0x3f, var_168, r14, var_170, r15_1, var_158);\n                            if (rax_18 != 0xffffffff)\n                            {\n                                return rax_18;\n                            }\n                        }\n                        if (r14 == var_170)\n                        {\n                            goto label_407130;\n                        }\n                        bool rax_13 = *r14;\n                        if (rax_13 != 0x2f)\n                        {\n                            rax_13 = rax_13 == 0x2e;\n                            r15_1 = (r15_1 & rax_13);\n                            if (r15_1 != 0)\n                            {\n                                goto label_407130;\n                            }\n                            r13_1 = var_168;\n                            goto label_4070fe;\n                        }\n                        if ((var_158 & 1) != 0)\n                        {\n                            goto label_407130;\n                        }\n                        goto label_4070f6;\n                    }\n                    case 0x3a:\n                    {\n                        if (data_60f4d8 == 0)\n                        {\n                            char* rax_35;\n                            rax_35 = getenv(\"POSIXLY_CORRECT\");\n                            data_60f4d8 = ((rax_35 - rax_35) | 1);\n                        }\n                        if (r14 == var_170)\n                        {\n                            goto label_407130;\n                        }\n                        uint64_t r12_2 = *r14;\n                        if (r12_2 == 0x2e)\n                        {\n                            if (r15_1 != 0)\n                            {\n                                goto label_407130;\n                            }\n                        }\n                        else if ((r12_2 == 0x2f && (var_158 & 1) != 0))\n                        {\n                            goto label_407130;\n                        }\n                        char rax_6 = r13_1[1];\n                        int32_t var_14c;\n                        void* r15_3;\n                        if ((rax_6 == 0x21 || (data_60f4d8 < 0 && rax_6 == 0x5e)))\n                        {\n                            r15_3 = &r13_1[2];\n                            var_14c = 1;\n                        }\n                        if ((rax_6 != 0x21 && (data_60f4d8 >= 0 || (data_60f4d8 < 0 && rax_6 != 0x5e))))\n                        {\n                            var_14c = 0;\n                            r15_3 = var_168;\n                        }\n                        if (rbx_2 != 0)\n                        {\n                            int32_t** rax_7;\n                            rax_7 = __ctype_tolower_loc();\n                            r12_2 = *rax_7[r12_2];\n                        }\n                        uint32_t rax_9 = r12_2;\n                        r13_1 = (r15_3 + 1);\n                        r15_1 = *r15_3;\n                        while (true)\n                        {\n                            char rsi_1;\n                            if ((rbp_2 == 0 && r15_1 == 0x5c))\n                            {\n                                r15_1 = *r13_1;\n                                if (r15_1 != 0)\n                                {\n                                    if (rbx_2 != 0)\n                                    {\n                                        int32_t** rax_32;\n                                        rax_32 = __ctype_tolower_loc();\n                                        r15_1 = *rax_32[r15_1];\n                                    }\n                                    rsi_1 = r13_1[1];\n                                    r13_1 = &r13_1[1];\n                                    goto label_406fdb;\n                                }\n                                goto label_407130;\n                            }\n                            char* rax_12;\n                            if (r15_1 == 0x5b)\n                            {\n                                rsi_1 = *r13_1;\n                                if (rsi_1 == 0x3a)\n                                {\n                                    r15_1 = r13_1;\n                                    arg3 = nullptr;\n                                    char rax_31;\n                                    uint64_t rcx_8;\n                                    do\n                                    {\n                                        rax_31 = *(r15_1 + 1);\n                                        rcx_8 = (r15_1 + 1);\n                                        if (rax_31 == 0x3a)\n                                        {\n                                            break;\n                                        }\n                                        if ((rax_31 - 0x61) > 0x18)\n                                        {\n                                            break;\n                                        }\n                                        arg3 = &arg3[1];\n                                        r15_1 = rcx_8;\n                                        *(&*var_14c[3] + arg3) = rax_31;\n                                    } while (arg3 != 0x100);\n                                    if ((rax_31 == 0x3a && *(rcx_8 + 1) == 0x5d))\n                                    {\n                                        void var_148;\n                                        *(&var_148 + arg3) = 0;\n                                        wctype_t rax_46 = wctype(&var_148);\n                                        if (rax_46 == 0)\n                                        {\n                                            goto label_407130;\n                                        }\n                                        int32_t rax_48;\n                                        rax_48 = iswctype(btowc(*r14), rax_46);\n                                        if (rax_48 != 0)\n                                        {\n                                            r13_1 = (r15_1 + 3);\n                                            rsi_1 = *(r15_1 + 3);\n                                            rax_12 = (r15_1 + 4);\n                                        label_407047:\n                                            void* r8_1;\n                                            while (true)\n                                            {\n                                                r8_1 = rax_12;\n                                                char rcx_2 = rsi_1;\n                                                if (rsi_1 == 0)\n                                                {\n                                                    break;\n                                                }\n                                                r15_1 = rsi_1 == 0x5c;\n                                                arg3 = rbp_2 == 0;\n                                                r15_1 = (r15_1 & arg3);\n                                                if (r15_1 != 0)\n                                                {\n                                                    if (r13_1[1] == 0)\n                                                    {\n                                                        break;\n                                                    }\n                                                    rsi_1 = r13_1[2];\n                                                    r13_1 = &r13_1[2];\n                                                }\n                                                else\n                                                {\n                                                    if (rsi_1 == 0x5b)\n                                                    {\n                                                        rsi_1 = r13_1[1];\n                                                        if (rsi_1 == 0x3a)\n                                                        {\n                                                            arg3 = &r13_1[2];\n                                                            rsi_1 = r13_1[2];\n                                                            void* r13_9 = &r13_1[0x101];\n                                                            while (rsi_1 != 0x3a)\n                                                            {\n                                                                if ((rsi_1 - 0x61) > 0x18)\n                                                                {\n                                                                    break;\n                                                                }\n                                                                arg3 = &arg3[1];\n                                                                rsi_1 = *arg3;\n                                                                if (r13_9 == arg3)\n                                                                {\n                                                                    break;\n                                                                }\n                                                            }\n                                                            if ((rsi_1 == 0x3a && arg3[1] == 0x5d))\n                                                            {\n                                                                r8_1 = &arg3[3];\n                                                                rcx_2 = arg3[2];\n                                                            }\n                                                            if (rsi_1 != 0x3a)\n                                                            {\n                                                                if ((!(rsi_1 != 0x3a && (rsi_1 - 0x61) > 0x18)))\n                                                                {\n                                                                    break;\n                                                                }\n                                                                rsi_1 = 0x3a;\n                                                                r13_1 = rax_12;\n                                                            }\n                                                        }\n                                                        char* r13_7 = &r13_1[2];\n                                                        if ((rsi_1 == 0x3a && arg3[1] != 0x5d))\n                                                        {\n                                                        label_407040:\n                                                            r13_1 = rax_12;\n                                                        }\n                                                        if (rsi_1 != 0x3a)\n                                                        {\n                                                            if (rsi_1 == 0x2e)\n                                                            {\n                                                                char rax_34;\n                                                                while (true)\n                                                                {\n                                                                    rax_34 = r13_7[1];\n                                                                    arg3 = &r13_7[1];\n                                                                    if (rax_34 == 0)\n                                                                    {\n                                                                        break;\n                                                                    }\n                                                                    if ((rax_34 == 0x2e && arg3[1] == 0x5d))\n                                                                    {\n                                                                        break;\n                                                                    }\n                                                                    r13_7 = arg3;\n                                                                }\n                                                                if (rax_34 == 0)\n                                                                {\n                                                                    break;\n                                                                }\n                                                                r8_1 = &r13_7[4];\n                                                                rcx_2 = r13_7[3];\n                                                            }\n                                                            if (rsi_1 == 0x3d)\n                                                            {\n                                                                if (r13_1[2] == 0)\n                                                                {\n                                                                    break;\n                                                                }\n                                                                if (r13_1[3] != 0x3d)\n                                                                {\n                                                                    break;\n                                                                }\n                                                                if (r13_1[4] != 0x5d)\n                                                                {\n                                                                    break;\n                                                                }\n                                                                r8_1 = &r13_1[6];\n                                                                rcx_2 = r13_1[5];\n                                                            }\n                                                        }\n                                                    }\n                                                    if (((((((rsi_1 == 0x5b && rsi_1 == 0x3a) && rsi_1 == 0x3a) && arg3[1] == 0x5d) || rsi_1 != 0x5b) || (((rsi_1 == 0x5b && rsi_1 != 0x3a) && rsi_1 != 0x3d) && rsi_1 == 0x2e)) || ((rsi_1 == 0x5b && rsi_1 != 0x3a) && rsi_1 == 0x3d)))\n                                                    {\n                                                        if (rcx_2 == 0x5d)\n                                                        {\n                                                            break;\n                                                        }\n                                                        r13_1 = r8_1;\n                                                        rsi_1 = *r8_1;\n                                                        rax_12 = &r13_1[1];\n                                                        continue;\n                                                    }\n                                                }\n                                                rax_12 = &r13_1[1];\n                                            }\n                                            if (rsi_1 == 0)\n                                            {\n                                                goto label_407130;\n                                            }\n                                            if (var_14c == 0)\n                                            {\n                                                r13_1 = r8_1;\n                                                break;\n                                            }\n                                            goto label_407130;\n                                        }\n                                        r13_1 = (r15_1 + 4);\n                                        r15_1 = *(rcx_8 + 2);\n                                    }\n                                    if ((rax_31 != 0x3a && (!(rax_31 != 0x3a && (rax_31 - 0x61) > 0x18))))\n                                    {\n                                        goto label_407130;\n                                    }\n                                    if (((rax_31 == 0x3a && *(rcx_8 + 1) != 0x5d) || rax_31 != 0x3a))\n                                    {\n                                        rax_12 = &r13_1[1];\n                                        if (r12_2 != 0x5b)\n                                        {\n                                            r13_1 = rax_12;\n                                            r15_1 = 0x3a;\n                                            continue;\n                                        }\n                                        goto label_407790;\n                                    }\n                                }\n                            }\n                            else\n                            {\n                                if (r15_1 == 0)\n                                {\n                                    r12 = 0x5b;\n                                    break;\n                                }\n                                rsi_1 = *r13_1;\n                            }\n                            if (((r15_1 == 0x5b && rsi_1 != 0x3a) || r15_1 != 0x5b))\n                            {\n                                int32_t rcx_1;\n                                while (true)\n                                {\n                                    if (rbx_2 != 0)\n                                    {\n                                        var_160 = rsi_1;\n                                        int32_t** rax_10;\n                                        rax_10 = __ctype_tolower_loc();\n                                        rsi_1 = var_160;\n                                        r15_1 = *rax_10[r15_1];\n                                    }\n                                label_406fdb:\n                                    rax_12 = &r13_1[1];\n                                    if (rsi_1 != 0x2d)\n                                    {\n                                        break;\n                                    }\n                                    arg3 = r13_1[1];\n                                    if ((arg3 != 0x5d && arg3 != 0))\n                                    {\n                                        break;\n                                    }\n                                    if (r12_2 == r15_1)\n                                    {\n                                        break;\n                                    }\n                                    rcx_1 = r15_1;\n                                    if (arg3 != 0x5d)\n                                    {\n                                        break;\n                                    }\n                                    rsi_1 = 0x5d;\n                                    r13_1 = rax_12;\n                                    r15_1 = 0x2d;\n                                }\n                                if (rsi_1 != 0x2d)\n                                {\n                                    if (r12_2 == r15_1)\n                                    {\n                                    label_407790:\n                                        rsi_1 = *r13_1;\n                                        goto label_407047;\n                                    }\n                                    r15_1 = rsi_1;\n                                    r13_1 = rax_12;\n                                }\n                                else\n                                {\n                                    if (((rsi_1 == 0x2d && (arg3 == 0x5d || arg3 == 0)) && r12_2 != r15_1))\n                                    {\n                                        goto label_406fff;\n                                    }\n                                    if ((!((rsi_1 == 0x2d && arg3 != 0x5d) && arg3 != 0)))\n                                    {\n                                        goto label_407047;\n                                    }\n                                    rcx_1 = r15_1;\n                                label_406fff:\n                                    rax_12 = &r13_1[2];\n                                    if ((rbp_2 == 0 && arg3 == 0x5c))\n                                    {\n                                        rax_12 = &r13_1[3];\n                                        arg3 = r13_1[2];\n                                    }\n                                    if (arg3 == 0)\n                                    {\n                                        goto label_407130;\n                                    }\n                                    rsi_1 = *rax_12;\n                                    r13_1 = &rax_12[1];\n                                    r15_1 = rsi_1;\n                                    if ((rcx_1 <= rax_9 && r12_2 <= arg3))\n                                    {\n                                        goto label_407040;\n                                    }\n                                }\n                            }\n                            if (r15_1 == 0x5d)\n                            {\n                                if (var_14c == 0)\n                                {\n                                    goto label_407130;\n                                }\n                                goto label_406ee7;\n                            }\n                        }\n                        if (r15_1 == 0)\n                        {\n                            goto label_4070da;\n                        }\n                        goto label_4070fe;\n                    }\n                    case 0x3b:\n                    {\n                        uint32_t rax_5;\n                        int32_t* rdx_5;\n                        char r12_1;\n                        if (rbp_2 == 0)\n                        {\n                            r12_1 = r13_1[1];\n                            void* r15_2 = &r13_1[2];\n                            var_168 = r15_2;\n                            if (r12_1 == 0)\n                            {\n                                goto label_407130;\n                            }\n                            if (rbx_2 != 0)\n                            {\n                                rdx_5 = *__ctype_tolower_loc();\n                                char rax_40 = rdx_5[r12_1];\n                                if (r14 == var_170)\n                                {\n                                    goto label_407130;\n                                }\n                                rax_5 = rax_40;\n                                r13_1 = r15_2;\n                            }\n                            else\n                            {\n                                if (r14 == var_170)\n                                {\n                                    goto label_407130;\n                                }\n                                rax_5 = r12_1;\n                            }\n                        }\n                        if (((rbp_2 != 0 && r14 != var_170) && rbx_2 == 0))\n                        {\n                            rax_5 = 0x5c;\n                        }\n                        if ((((rbp_2 != 0 && r14 != var_170) && rbx_2 == 0) || ((rbp_2 == 0 && r12_1 != 0) && rbx_2 == 0)))\n                        {\n                            arg3 = *r14;\n                            r13_1 = var_168;\n                        }\n                        if (((rbp_2 != 0 && r14 != var_170) && rbx_2 != 0))\n                        {\n                            r13_1 = var_168;\n                            rdx_5 = *__ctype_tolower_loc();\n                            rax_5 = 0x5c;\n                        }\n                        if ((((rbp_2 != 0 && r14 != var_170) && rbx_2 != 0) || ((rbp_2 == 0 && r12_1 != 0) && rbx_2 != 0)))\n                        {\n                            arg3 = rdx_5[*r14];\n                        }\n                        if ((((((rbp_2 != 0 && r14 != var_170) && rbx_2 == 0) || ((rbp_2 == 0 && r12_1 != 0) && rbx_2 == 0)) || ((rbp_2 != 0 && r14 != var_170) && rbx_2 != 0)) || ((rbp_2 == 0 && r12_1 != 0) && rbx_2 != 0)))\n                        {\n                            if (arg3 != rax_5)\n                            {\n                                goto label_407130;\n                            }\n                        label_406ee7:\n                            r15_1 = 0;\n                        }\n                        if ((rbp_2 != 0 && r14 == var_170))\n                        {\n                            goto label_407130;\n                        }\n                        goto label_4070fe;\n                    }\n                }\n            }\n            if (r14 == var_170)\n            {\n                goto label_407130;\n            }\n        label_4070da:\n            uint64_t rax_16 = *r14;\n            if (rbx_2 != 0)\n            {\n                int32_t** rax_14;\n                rax_14 = __ctype_tolower_loc();\n                rax_16 = *rax_14[rax_16];\n            }\n            if (rax_16 != r12)\n            {\n                goto label_407130;\n            }\n        label_4070f6:\n            r13_1 = var_168;\n            r15_1 = 0;\n        label_4070fe:\n            r12 = *r13_1;\n            r14 = &r14[1];\n            var_168 = &r13_1[1];\n        } while (r12 != 0);\n    }\n    if (var_170 == r14)\n    {\n    label_407330:\n        rax_18 = 0;\n    }\n    else if ((var_158 & 8) != 0)\n    {\n        rax_18 = *r14 != 0x2f;\n    }\n    else\n    {\n    label_407130:\n        rax_18 = 1;\n    }\n    return rax_18;\n}\n\n"
        },
        {
            "funcName": "sub_407910",
            "funcStartAddr": "0x407910",
            "funcEndAddr": "0x407b48",
            "decompiledFuncCode": "uint64_t sub_407910(char* arg1, char* arg2, int32_t arg3)\n{\n    char* var_50 = arg1;\n    char* var_58 = arg2;\n    uint64_t rax_2;\n    if (__ctype_get_mb_cur_max() != 1)\n    {\n        mbstate_t var_40;\n        var_40.__count = 0;\n        var_40.__value = 0;\n        uint64_t rax_3 = mbsrtowcs(nullptr, &var_50, 0, &var_40);\n        uint64_t rax_4 = (rax_3 + 1);\n        if (rax_3 != -1)\n        {\n            if (mbsinit(&var_40) == 0)\n            {\n                __assert_fail(\"mbsinit (&ps)\", \"lib/fnmatch.c\", 0x129, \"gnu_fnmatch\");\n                /* no return */\n            }\n            uint64_t rax_6 = mbsrtowcs(nullptr, &var_58, 0, &var_40);\n            uint64_t rax_7 = (rax_6 + 1);\n            if (rax_6 != -1)\n            {\n                if (mbsinit(&var_40) == 0)\n                {\n                    __assert_fail(\"mbsinit (&ps)\", \"lib/fnmatch.c\", 0x12d, \"gnu_fnmatch\");\n                    /* no return */\n                }\n                uint64_t rax_10 = (rax_4 + rax_7);\n                wchar_t* rax_13;\n                uint64_t rdi_4;\n                int32_t* r14_3;\n                if (((rax_4 + rax_7) >= rax_4 && rax_10 <= 0x3fffffffffffffff))\n                {\n                    rdi_4 = (rax_10 << 2);\n                    if (rax_10 > 0x7cf)\n                    {\n                        rax_13 = malloc(rdi_4);\n                        r14_3 = rax_13;\n                    }\n                }\n                if ((((rax_4 + rax_7) < rax_4 || ((rax_4 + rax_7) >= rax_4 && rax_10 > 0x3fffffffffffffff)) || ((((rax_4 + rax_7) >= rax_4 && rax_10 <= 0x3fffffffffffffff) && rax_10 > 0x7cf) && rax_13 == 0)))\n                {\n                    *__errno_location() = 0xc;\n                    rax_2 = 0xffffffff;\n                }\n                if (((rax_4 + rax_7) >= rax_4 && rax_10 <= 0x3fffffffffffffff))\n                {\n                    int32_t rax_11;\n                    int32_t rax_14;\n                    if (rax_10 > 0x7cf)\n                    {\n                        if (rax_13 != 0)\n                        {\n                            void* r15_2 = &rax_13[rax_4];\n                            mbsrtowcs(rax_13, &var_50, rax_4, &var_40);\n                            rax_14 = mbsinit(&var_40);\n                            if (rax_14 != 0)\n                            {\n                                mbsrtowcs(r15_2, &var_58, rax_7, &var_40);\n                                int32_t rax_15 = sub_405df0(r14_3, r15_2, ((r15_2 + (rax_7 << 2)) - 4), ((arg3 >> 2) & 1), arg3);\n                                free(r14_3);\n                                rax_2 = rax_15;\n                            }\n                        }\n                    }\n                    else\n                    {\n                        void var_68;\n                        void* r14_2 = (((&var_68 - ((rdi_4 + 0x17) & 0xfffffffffffffff0)) + 0xf) & 0xfffffffffffffff0);\n                        int32_t* r15_1 = (r14_2 + (rax_4 << 2));\n                        mbsrtowcs(r14_2, &var_50, rax_4, &var_40);\n                        rax_11 = mbsinit(&var_40);\n                        if (rax_11 != 0)\n                        {\n                            mbsrtowcs(r15_1, &var_58, rax_7, &var_40);\n                            rax_2 = sub_405df0(r14_2, r15_1, &r15_1[(rax_7 - 1)], ((arg3 >> 2) & 1), arg3);\n                        }\n                    }\n                    if (((rax_10 <= 0x7cf && rax_11 == 0) || ((rax_10 > 0x7cf && rax_13 != 0) && rax_14 == 0)))\n                    {\n                        __assert_fail(\"mbsinit (&ps)\", \"lib/fnmatch.c\", 0x147, \"gnu_fnmatch\");\n                        /* no return */\n                    }\n                }\n                goto label_40796d;\n            }\n        }\n    }\n    char* rbx_1 = var_58;\n    rax_2 = sub_406e20(var_50, rbx_1, &rbx_1[strlen(rbx_1)], ((arg3 >> 2) & 1), arg3);\nlabel_40796d:\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_407b50",
            "funcStartAddr": "0x407b50",
            "funcEndAddr": "0x407bee",
            "decompiledFuncCode": "FILE* sub_407b50(char* arg1, char* arg2, FILE* arg3)\n{\n    FILE* rax = freopen(arg1, arg2, arg3);\n    if ((rax != 0 && arg1 != 0))\n    {\n        int32_t rax_1 = fileno(rax);\n        if ((dup2(rax_1, rax_1) < 0 && *__errno_location() == 9))\n        {\n            int32_t rax_6 = open(\"/dev/null\", 0x80000);\n            int32_t rax_7;\n            if (rax_1 != rax_6)\n            {\n                rax_7 = dup2(rax_6, rax_1);\n                if (rax_7 < 0)\n                {\n                    close(rax_6);\n                }\n                else\n                {\n                    close(rax_6);\n                }\n            }\n            if (((rax_1 != rax_6 && rax_7 >= 0) || rax_1 == rax_6))\n            {\n                /* tailcall */\n                return freopen(arg1, arg2, rax);\n            }\n        }\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_407bf0",
            "funcStartAddr": "0x407bf0",
            "funcEndAddr": "0x407c47",
            "decompiledFuncCode": "off64_t sub_407bf0(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_407c50",
            "funcStartAddr": "0x407c50",
            "funcEndAddr": "0x407d2f",
            "decompiledFuncCode": "uint64_t sub_407c50(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_407d30",
            "funcStartAddr": "0x407d30",
            "funcEndAddr": "0x40834c",
            "decompiledFuncCode": "uint64_t sub_407d30(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_407f60;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_407e86;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_407e86;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_407e86:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_407f60:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_407f8e;\n                }\n                *arg5 = r12;\n            label_407f8e:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_407fac;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_407fac:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_407fac;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_407f1e;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_407f1e:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_408350",
            "funcStartAddr": "0x408350",
            "funcEndAddr": "0x408916",
            "decompiledFuncCode": "uint64_t sub_408350(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_40858c;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_408418;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_408418:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_407c50(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_40ca11;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_407c50(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_40858c;\n                }\n                *arg7 = rdx_2;\n            label_40858c:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_408690;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_40ca11;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_408700;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_408690;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_408690;\n                            }\n                            goto label_408651;\n                        }\n                    label_408651:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_407d30(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_40ca12);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_408690:\n                            rdx = &r14_1[1];\n                        label_4084d1:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_4086ce;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_4086ce:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_40ca30;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_408700:\n                                        r14_2 = sub_407d30(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_4087bd;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_4087bd:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_40858c;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_408418;\n        }\n        goto label_4084d1;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_408980",
            "funcStartAddr": "0x408980",
            "funcEndAddr": "0x408998",
            "decompiledFuncCode": "uint64_t sub_408980(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_408a20",
            "funcStartAddr": "0x408a20",
            "funcEndAddr": "0x408a9a",
            "decompiledFuncCode": "uint64_t sub_408a20(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_40ca14[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_408a4a;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_408a4a:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_408f40() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_408aa0",
            "funcStartAddr": "0x408aa0",
            "funcEndAddr": "0x408ba4",
            "decompiledFuncCode": "char* sub_408aa0(char* arg1, int32_t arg2, int64_t arg3)\n{\n    char r8 = arg2;\n    if (arg3 != 0)\n    {\n        if ((arg1 & 7) != 0)\n        {\n            if (arg2 == *arg1)\n            {\n            label_408ba0:\n                return arg1;\n            }\n            do\n            {\n                arg1 = &arg1[1];\n                int64_t temp0_1 = arg3;\n                arg3 = (arg3 - 1);\n                if (temp0_1 == 1)\n                {\n                    return 0;\n                }\n                if ((arg1 & 7) == 0)\n                {\n                    break;\n                }\n            } while (*arg1 != r8);\n            if ((arg1 & 7) != 0)\n            {\n                goto label_408ba0;\n            }\n        }\n        int64_t r9_5 = ((arg2 << 8) | arg2);\n        int64_t r9_6 = (r9_5 | (r9_5 << 0x10));\n        int64_t r9_7 = (r9_6 | (r9_6 << 0x20));\n        int64_t rax_8;\n        if (arg3 > 7)\n        {\n            rax_8 = (*arg1 ^ r9_7);\n            if ((((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0)\n            {\n                int64_t rax_12;\n                do\n                {\n                    arg3 = (arg3 - 8);\n                    arg1 = &arg1[8];\n                    if (arg3 <= 7)\n                    {\n                        break;\n                    }\n                    rax_12 = (*arg1 ^ r9_7);\n                } while ((((!rax_12) & (rax_12 - 0x101010101010101)) & 0x8080808080808080) == 0);\n            }\n        }\n        if ((((arg3 <= 7 || (arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) != 0)) || (((arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0) && arg3 <= 7) && arg3 != 0)) || ((arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0) && arg3 > 7)))\n        {\n            if (arg2 == *arg1)\n            {\n                goto label_408ba0;\n            }\n            char* rcx_3 = &arg1[1];\n            void* rdi = &arg1[arg3];\n            while (true)\n            {\n                char* rax_15 = rcx_3;\n                if (rcx_3 == rdi)\n                {\n                    return 0;\n                }\n                rcx_3 = &rcx_3[1];\n                if (rcx_3[-1] == r8)\n                {\n                    return rax_15;\n                }\n            }\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_408bb0",
            "funcStartAddr": "0x408bb0",
            "funcEndAddr": "0x408beb",
            "decompiledFuncCode": "int64_t sub_408bb0() __noreturn\n{\n    __fprintf_chk(stderr, 1, \"%s\\n\", dcgettext(nullptr, \"memory exhausted\", 5));\n    exit(data_60f258);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_408bf0",
            "funcStartAddr": "0x408bf0",
            "funcEndAddr": "0x408c05",
            "decompiledFuncCode": "int64_t sub_408bf0(void* arg1)\n{\n    int64_t rax = *(arg1 + 0x38);\n    if ((*(arg1 + 0x50) & 1) == 0)\n    {\n        /* jump -> rax */\n    }\n    *(arg1 + 0x48);\n    /* jump -> rax */\n}\n\n"
        },
        {
            "funcName": "sub_408c10",
            "funcStartAddr": "0x408c10",
            "funcEndAddr": "0x408c25",
            "decompiledFuncCode": "int64_t sub_408c10(void* arg1)\n{\n    int64_t rax = *(arg1 + 0x40);\n    if ((*(arg1 + 0x50) & 1) == 0)\n    {\n        /* jump -> rax */\n    }\n    *(arg1 + 0x48);\n    /* jump -> rax */\n}\n\n"
        },
        {
            "funcName": "sub_408c30",
            "funcStartAddr": "0x408c30",
            "funcEndAddr": "0x408cc0",
            "decompiledFuncCode": "int64_t sub_408c30(int64_t* arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t rbp;\n    int64_t r12;\n    if (arg3 == 0)\n    {\n        r12 = 0xf;\n        rbp = 0x10;\n    }\n    else\n    {\n        rbp = arg3;\n        r12 = (arg3 - 1);\n    }\n    arg1[6] = r12;\n    if (arg2 == 0)\n    {\n        arg2 = 0xfe0;\n    }\n    *arg1 = arg2;\n    int64_t* rax = sub_408bf0(arg1, arg2);\n    arg1[1] = rax;\n    if (rax == 0)\n    {\n        int64_t rcx;\n        int64_t rdx_3;\n        int64_t rsi;\n        int64_t* rdi_1;\n        int64_t r8;\n        rcx = obstack_alloc_failed_handler();\n        /* tailcall */\n        return _obstack_begin(rdi_1, rsi, rdx_3, rcx, r8);\n    }\n    void* rbp_2 = ((-rbp) & ((rax + r12) + 0x10));\n    void* rdx_1 = *arg1;\n    arg1[2] = rbp_2;\n    void* rdx_2 = (rdx_1 + rax);\n    arg1[3] = rbp_2;\n    *rax = rdx_2;\n    arg1[4] = rdx_2;\n    rax[1] = 0;\n    arg1[0xa] = (arg1[0xa] & 0xf9);\n    return 1;\n}\n\n"
        },
        {
            "funcName": "obstack_begin",
            "funcStartAddr": "0x408cc0",
            "funcEndAddr": "0x408cd1",
            "decompiledFuncCode": "int64_t _obstack_begin(int64_t* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5)\n{\n    arg1[0xa] = (arg1[0xa] & 0xfe);\n    arg1[7] = arg4;\n    arg1[8] = arg5;\n    /* tailcall */\n    return sub_408c30(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "obstack_begin_1",
            "funcStartAddr": "0x408ce0",
            "funcEndAddr": "0x408cf5",
            "decompiledFuncCode": "int64_t _obstack_begin_1(int64_t* arg1, int64_t arg2, int64_t arg3, \n    int64_t arg4, int64_t arg5, int64_t arg6)\n{\n    arg1[0xa] = (arg1[0xa] | 1);\n    arg1[7] = arg4;\n    arg1[8] = arg5;\n    arg1[9] = arg6;\n    /* tailcall */\n    return sub_408c30(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "obstack_newchunk",
            "funcStartAddr": "0x408d00",
            "funcEndAddr": "0x408e00",
            "decompiledFuncCode": "void* _obstack_newchunk(int64_t* arg1, int64_t arg2)\n{\n    uint64_t r13_1 = (arg1[3] - arg1[2]);\n    void* rbp = arg1[1];\n    int64_t rsi = (arg2 + r13_1);\n    int64_t rax;\n    rax = (arg2 + r13_1) < arg2;\n    int64_t rsi_1 = (rsi + arg1[6]);\n    bool c_1 = (rsi + arg1[6]) < rsi;\n    int64_t rbx = ((rsi_1 + (r13_1 >> 3)) + 0x64);\n    if (*arg1 >= rsi_1)\n    {\n        rsi_1 = *arg1;\n    }\n    if (rsi_1 >= rbx)\n    {\n        rbx = rsi_1;\n    }\n    if ((rax == 0 && c_1 == 0))\n    {\n        int64_t* rax_1 = sub_408bf0();\n        if (rax_1 != 0)\n        {\n            void* rsi_2 = (rax_1 + rbx);\n            arg1[1] = rax_1;\n            rax_1[1] = rbp;\n            arg1[4] = rsi_2;\n            *rax_1 = rsi_2;\n            int64_t rax_2 = arg1[6];\n            void* rbx_2 = (((rax_1 + rax_2) + 0x10) & (!rax_2));\n            void* rax_4 = memcpy(rbx_2, arg1[2], r13_1);\n            if ((arg1[0xa] & 2) == 0)\n            {\n                int64_t rax_5 = arg1[6];\n                rax_4 = ((!rax_5) & ((rbp + rax_5) + 0x10));\n                if (arg1[2] == rax_4)\n                {\n                    rax_1[1] = *(rbp + 8);\n                    rax_4 = sub_408c10(arg1, rbp);\n                }\n            }\n            arg1[2] = rbx_2;\n            arg1[3] = (r13_1 + rbx_2);\n            arg1[0xa] = (arg1[0xa] & 0xfd);\n            return rax_4;\n        }\n    }\n    int64_t rsi_5;\n    void* rdi_2;\n    rsi_5 = obstack_alloc_failed_handler();\n    /* tailcall */\n    return _obstack_allocated_p(rdi_2, rsi_5);\n}\n\n"
        },
        {
            "funcName": "obstack_allocated_p",
            "funcStartAddr": "0x408e00",
            "funcEndAddr": "0x408e37",
            "decompiledFuncCode": "int64_t* _obstack_allocated_p(void* arg1, int64_t arg2)\n{\n    int64_t* rax = *(arg1 + 8);\n    if (rax == 0)\n    {\n        return rax;\n    }\n    do\n    {\n        if ((arg2 > rax && *rax >= arg2))\n        {\n            return 1;\n        }\n        rax = rax[1];\n    } while (rax != 0);\n    return 0;\n}\n\n"
        },
        {
            "funcName": "obstack_free",
            "funcStartAddr": "0x401d5e",
            "funcEndAddr": "0x408ea5",
            "decompiledFuncCode": "void _obstack_free(void* arg1, int64_t arg2)\n{\n    int64_t* rsi = *(arg1 + 8);\n    if (rsi != 0)\n    {\n        int64_t* r12_1;\n        do\n        {\n            if (rsi < arg2)\n            {\n                int64_t rax_1 = *rsi;\n                if (rax_1 >= arg2)\n                {\n                    *(arg1 + 0x18) = arg2;\n                    *(arg1 + 0x10) = arg2;\n                    *(arg1 + 0x20) = rax_1;\n                    *(arg1 + 8) = rsi;\n                    return;\n                }\n            }\n            r12_1 = rsi[1];\n            sub_408c10(arg1);\n            *(arg1 + 0x50) = (*(arg1 + 0x50) | 2);\n            rsi = r12_1;\n        } while (r12_1 != 0);\n    }\n    if (arg2 != 0)\n    {\n        abort();\n        /* no return */\n    }\n}\n\n"
        },
        {
            "funcName": "obstack_memory_used",
            "funcStartAddr": "0x408eb0",
            "funcEndAddr": "0x408ed9",
            "decompiledFuncCode": "void* _obstack_memory_used(void* arg1)\n{\n    int64_t* rdx = *(arg1 + 8);\n    void* rax = nullptr;\n    if (rdx == 0)\n    {\n        return 0;\n    }\n    do\n    {\n        void* rcx_2 = (*rdx - rdx);\n        rdx = rdx[1];\n        rax = (rax + rcx_2);\n    } while (rdx != 0);\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_408ee0",
            "funcStartAddr": "0x408ee0",
            "funcEndAddr": "0x408f3d",
            "decompiledFuncCode": "uint64_t sub_408ee0(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_4055a0(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_408f40",
            "funcStartAddr": "0x408f40",
            "funcEndAddr": "0x408f9e",
            "decompiledFuncCode": "int64_t sub_408f40()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_4097f2;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            void* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_408fa0",
            "funcStartAddr": "0x408fa0",
            "funcEndAddr": "0x409502",
            "decompiledFuncCode": "char* sub_408fa0()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_60f518;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_40ca14[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        uint64_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            uint64_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_40909c;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_4090e6;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_40909c:\n            r15 = &data_40ca14[0x1b];\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_4090e6:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, \"r\");\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_40919c:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_40932b;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_4091d8:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_4091d8;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_409212:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_409212;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_40ca14[0x1b];\n                                    free(rdi_26);\n                                    sub_4055a0(rax_12);\n                                    goto label_409127;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_4093eb:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_4093eb;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_409439:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_409439;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_40919c;\n                        }\n                        break;\n                    }\n                label_40932b:\n                    sub_4055a0(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_40ca14[0x1b];\n            }\n        label_409127:\n            free(rbp_3);\n        }\n        data_60f518 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x409510",
            "funcEndAddr": "0x40956d",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x409570",
            "funcEndAddr": "0x409571",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_409580",
            "funcStartAddr": "0x409580",
            "funcEndAddr": "0x409598",
            "decompiledFuncCode": "int64_t sub_409580(void (* arg1)(void*))\n{\n    int64_t rdx = data_60f248;\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, rdx);\n}\n\n"
        },
        {
            "funcName": "sub_409598",
            "funcStartAddr": "0x409598",
            "funcEndAddr": "0x4095b8",
            "decompiledFuncCode": "int64_t sub_409598(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_60ee30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}