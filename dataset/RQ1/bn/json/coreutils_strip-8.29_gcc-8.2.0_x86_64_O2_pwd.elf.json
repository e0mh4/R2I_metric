{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pwd.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 135,
    "funcInfo": [
        {
            "funcName": "sub_401640",
            "funcStartAddr": "0x401640",
            "funcEndAddr": "0x40164c",
            "decompiledFuncCode": "int64_t sub_401640()\n{\n    int64_t var_8 = data_60a008;\n    /* jump -> data_60a010 */\n}\n\n"
        },
        {
            "funcName": "sub_401656",
            "funcStartAddr": "0x401656",
            "funcEndAddr": "0x401660",
            "decompiledFuncCode": "int64_t sub_401656()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401666",
            "funcStartAddr": "0x401666",
            "funcEndAddr": "0x401670",
            "decompiledFuncCode": "int64_t sub_401666()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401676",
            "funcStartAddr": "0x401676",
            "funcEndAddr": "0x401680",
            "decompiledFuncCode": "int64_t sub_401676()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401686",
            "funcStartAddr": "0x401686",
            "funcEndAddr": "0x401690",
            "decompiledFuncCode": "int64_t sub_401686()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401696",
            "funcStartAddr": "0x401696",
            "funcEndAddr": "0x4016a0",
            "decompiledFuncCode": "int64_t sub_401696()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4016a6",
            "funcStartAddr": "0x4016a6",
            "funcEndAddr": "0x4016b0",
            "decompiledFuncCode": "int64_t sub_4016a6()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4016b6",
            "funcStartAddr": "0x4016b6",
            "funcEndAddr": "0x4016c0",
            "decompiledFuncCode": "int64_t sub_4016b6()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4016c6",
            "funcStartAddr": "0x4016c6",
            "funcEndAddr": "0x4016d0",
            "decompiledFuncCode": "int64_t sub_4016c6()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4016d6",
            "funcStartAddr": "0x4016d6",
            "funcEndAddr": "0x4016e0",
            "decompiledFuncCode": "int64_t sub_4016d6()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4016e6",
            "funcStartAddr": "0x4016e6",
            "funcEndAddr": "0x4016f0",
            "decompiledFuncCode": "int64_t sub_4016e6()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4016f6",
            "funcStartAddr": "0x4016f6",
            "funcEndAddr": "0x401700",
            "decompiledFuncCode": "int64_t sub_4016f6()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401706",
            "funcStartAddr": "0x401706",
            "funcEndAddr": "0x401710",
            "decompiledFuncCode": "int64_t sub_401706()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401716",
            "funcStartAddr": "0x401716",
            "funcEndAddr": "0x401720",
            "decompiledFuncCode": "int64_t sub_401716()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401726",
            "funcStartAddr": "0x401726",
            "funcEndAddr": "0x401730",
            "decompiledFuncCode": "int64_t sub_401726()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401736",
            "funcStartAddr": "0x401736",
            "funcEndAddr": "0x401740",
            "decompiledFuncCode": "int64_t sub_401736()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401746",
            "funcStartAddr": "0x401746",
            "funcEndAddr": "0x401750",
            "decompiledFuncCode": "int64_t sub_401746()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401756",
            "funcStartAddr": "0x401756",
            "funcEndAddr": "0x401760",
            "decompiledFuncCode": "int64_t sub_401756()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401766",
            "funcStartAddr": "0x401766",
            "funcEndAddr": "0x401770",
            "decompiledFuncCode": "int64_t sub_401766()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401776",
            "funcStartAddr": "0x401776",
            "funcEndAddr": "0x401780",
            "decompiledFuncCode": "int64_t sub_401776()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401786",
            "funcStartAddr": "0x401786",
            "funcEndAddr": "0x401790",
            "decompiledFuncCode": "int64_t sub_401786()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401796",
            "funcStartAddr": "0x401796",
            "funcEndAddr": "0x4017a0",
            "decompiledFuncCode": "int64_t sub_401796()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4017a6",
            "funcStartAddr": "0x4017a6",
            "funcEndAddr": "0x4017b0",
            "decompiledFuncCode": "int64_t sub_4017a6()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4017b6",
            "funcStartAddr": "0x4017b6",
            "funcEndAddr": "0x4017c0",
            "decompiledFuncCode": "int64_t sub_4017b6()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4017c6",
            "funcStartAddr": "0x4017c6",
            "funcEndAddr": "0x4017d0",
            "decompiledFuncCode": "int64_t sub_4017c6()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4017d6",
            "funcStartAddr": "0x4017d6",
            "funcEndAddr": "0x4017e0",
            "decompiledFuncCode": "int64_t sub_4017d6()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4017e6",
            "funcStartAddr": "0x4017e6",
            "funcEndAddr": "0x4017f0",
            "decompiledFuncCode": "int64_t sub_4017e6()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401816",
            "funcStartAddr": "0x401816",
            "funcEndAddr": "0x401820",
            "decompiledFuncCode": "int64_t sub_401816()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401826",
            "funcStartAddr": "0x401826",
            "funcEndAddr": "0x401830",
            "decompiledFuncCode": "int64_t sub_401826()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401856",
            "funcStartAddr": "0x401856",
            "funcEndAddr": "0x401860",
            "decompiledFuncCode": "int64_t sub_401856()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401866",
            "funcStartAddr": "0x401866",
            "funcEndAddr": "0x401870",
            "decompiledFuncCode": "int64_t sub_401866()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401876",
            "funcStartAddr": "0x401876",
            "funcEndAddr": "0x401880",
            "decompiledFuncCode": "int64_t sub_401876()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401886",
            "funcStartAddr": "0x401886",
            "funcEndAddr": "0x401890",
            "decompiledFuncCode": "int64_t sub_401886()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401896",
            "funcStartAddr": "0x401896",
            "funcEndAddr": "0x4018a0",
            "decompiledFuncCode": "int64_t sub_401896()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4018a6",
            "funcStartAddr": "0x4018a6",
            "funcEndAddr": "0x4018b0",
            "decompiledFuncCode": "int64_t sub_4018a6()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4018b6",
            "funcStartAddr": "0x4018b6",
            "funcEndAddr": "0x4018c0",
            "decompiledFuncCode": "int64_t sub_4018b6()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4018c6",
            "funcStartAddr": "0x4018c6",
            "funcEndAddr": "0x4018d0",
            "decompiledFuncCode": "int64_t sub_4018c6()\n{\n    int64_t var_8 = 0x27;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4018d6",
            "funcStartAddr": "0x4018d6",
            "funcEndAddr": "0x4018e0",
            "decompiledFuncCode": "int64_t sub_4018d6()\n{\n    int64_t var_8 = 0x28;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4018e6",
            "funcStartAddr": "0x4018e6",
            "funcEndAddr": "0x4018f0",
            "decompiledFuncCode": "int64_t sub_4018e6()\n{\n    int64_t var_8 = 0x29;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4018f6",
            "funcStartAddr": "0x4018f6",
            "funcEndAddr": "0x401900",
            "decompiledFuncCode": "int64_t sub_4018f6()\n{\n    int64_t var_8 = 0x2a;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401906",
            "funcStartAddr": "0x401906",
            "funcEndAddr": "0x401910",
            "decompiledFuncCode": "int64_t sub_401906()\n{\n    int64_t var_8 = 0x2b;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401916",
            "funcStartAddr": "0x401916",
            "funcEndAddr": "0x401920",
            "decompiledFuncCode": "int64_t sub_401916()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401926",
            "funcStartAddr": "0x401926",
            "funcEndAddr": "0x401930",
            "decompiledFuncCode": "int64_t sub_401926()\n{\n    int64_t var_8 = 0x2d;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401936",
            "funcStartAddr": "0x401936",
            "funcEndAddr": "0x401940",
            "decompiledFuncCode": "int64_t sub_401936()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401946",
            "funcStartAddr": "0x401946",
            "funcEndAddr": "0x401950",
            "decompiledFuncCode": "int64_t sub_401946()\n{\n    int64_t var_8 = 0x2f;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401956",
            "funcStartAddr": "0x401956",
            "funcEndAddr": "0x401960",
            "decompiledFuncCode": "int64_t sub_401956()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401966",
            "funcStartAddr": "0x401966",
            "funcEndAddr": "0x401970",
            "decompiledFuncCode": "int64_t sub_401966()\n{\n    int64_t var_8 = 0x31;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401976",
            "funcStartAddr": "0x401976",
            "funcEndAddr": "0x401980",
            "decompiledFuncCode": "int64_t sub_401976()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401986",
            "funcStartAddr": "0x401986",
            "funcEndAddr": "0x401990",
            "decompiledFuncCode": "int64_t sub_401986()\n{\n    int64_t var_8 = 0x33;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401996",
            "funcStartAddr": "0x401996",
            "funcEndAddr": "0x4019a0",
            "decompiledFuncCode": "int64_t sub_401996()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4019a6",
            "funcStartAddr": "0x4019a6",
            "funcEndAddr": "0x4019b0",
            "decompiledFuncCode": "int64_t sub_4019a6()\n{\n    int64_t var_8 = 0x35;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4019b6",
            "funcStartAddr": "0x4019b6",
            "funcEndAddr": "0x4019c0",
            "decompiledFuncCode": "int64_t sub_4019b6()\n{\n    int64_t var_8 = 0x36;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4019c6",
            "funcStartAddr": "0x4019c6",
            "funcEndAddr": "0x4019d0",
            "decompiledFuncCode": "int64_t sub_4019c6()\n{\n    int64_t var_8 = 0x37;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4019d6",
            "funcStartAddr": "0x4019d6",
            "funcEndAddr": "0x4019e0",
            "decompiledFuncCode": "int64_t sub_4019d6()\n{\n    int64_t var_8 = 0x38;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_4019e6",
            "funcStartAddr": "0x4019e6",
            "funcEndAddr": "0x4019f0",
            "decompiledFuncCode": "int64_t sub_4019e6()\n{\n    int64_t var_8 = 0x39;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401a16",
            "funcStartAddr": "0x401a16",
            "funcEndAddr": "0x401a20",
            "decompiledFuncCode": "int64_t sub_401a16()\n{\n    int64_t var_8 = 0x3c;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "sub_401a26",
            "funcStartAddr": "0x401a26",
            "funcEndAddr": "0x401a30",
            "decompiledFuncCode": "int64_t sub_401a26()\n{\n    int64_t var_8 = 0x3d;\n    /* tailcall */\n    return sub_401640();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x401a70",
            "funcEndAddr": "0x401c23",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    int32_t rbx;\n    int32_t __saved_rbx = rbx;\n    rbx = getenv(\"POSIXLY_CORRECT\") != 0;\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rcx = sub_4027f0(*argv);\n    int32_t rbp;\n    setlocale(6, &data_40895c[0x1b], rdx, rcx, r8, r9, __saved_rbx, rbp);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    sub_4070f0(sub_402750);\n    while (true)\n    {\n        int32_t rax_1 = getopt_long(argc, argv, &data_407257, &data_407680, nullptr);\n        if (rax_1 == 0xffffffff)\n        {\n            break;\n        }\n        bool cond:0_1 = rax_1 <= 0xffffff7e;\n        if (rax_1 == 0xffffff7e)\n        {\n            sub_4023d0(0);\n            /* no return */\n        }\n        if (cond:0_1)\n        {\n            if (rax_1 == 0xffffff7d)\n            {\n                sub_4048e0(stdout, &data_4071a4, \"GNU coreutils\", data_60a230);\n                exit(0);\n                /* no return */\n            }\n        }\n        else if (rax_1 == 0x4c)\n        {\n            rbx = 1;\n            continue;\n        }\n        else if (rax_1 == 0x50)\n        {\n            rbx = 0;\n            continue;\n        }\n        sub_4023d0(1);\n        /* no return */\n    }\n    if (data_60a29c < argc)\n    {\n        error(0, 0, dcgettext(nullptr, \"ignoring non-option arguments\", 5));\n    }\n    char* rax_3;\n    if (rbx != 0)\n    {\n        rax_3 = sub_401d10();\n        if (rax_3 != 0)\n        {\n            puts(rax_3);\n        }\n    }\n    if ((rbx == 0 || (rbx != 0 && rax_3 == 0)))\n    {\n        void* rax_4 = sub_404cb0();\n        if (rax_4 == 0)\n        {\n            int64_t* rax_6 = sub_404a20(0x18);\n            rax_6[1] = 0x2000;\n            int64_t rax_7 = sub_404a20(0x2000);\n            int64_t rdx_1 = rax_6[1];\n            *rax_6 = rax_7;\n            rax_6[2] = ((rax_7 + rdx_1) - 1);\n            *((rax_7 + rdx_1) - 1) = 0;\n            sub_401f10(rax_6);\n            puts(rax_6[2]);\n            free(*rax_6);\n            free(rax_6);\n        }\n        else\n        {\n            puts(rax_4);\n            free(rax_4);\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x401c30",
            "funcEndAddr": "0x401c5a",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_401c5b",
            "funcStartAddr": "0x401c5b",
            "funcEndAddr": "0x401c7a",
            "decompiledFuncCode": "void sub_401c5b()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_401c7a",
            "funcStartAddr": "0x401c7a",
            "funcEndAddr": "0x401cb1",
            "decompiledFuncCode": "int64_t sub_401c7a()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_401cb1",
            "funcStartAddr": "0x401cb1",
            "funcEndAddr": "0x401d08",
            "decompiledFuncCode": "void sub_401cb1()\n{\n    if (data_60a2c8 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_60a2d0;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_60a2d0 = (rax_1 + 1);\n        *(0x609e40 + ((rax_1 + 1) << 3))();\n    }\n    sub_401c5b();\n    data_60a2c8 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_401d08",
            "funcStartAddr": "0x401d08",
            "funcEndAddr": "0x401d0d",
            "decompiledFuncCode": "int64_t j_sub_401c7a()\n{\n    /* tailcall */\n    return sub_401c7a();\n}\n\n"
        },
        {
            "funcName": "sub_401d10",
            "funcStartAddr": "0x401d10",
            "funcEndAddr": "0x401dcc",
            "decompiledFuncCode": "char* sub_401d10()\n{\n    char* rax = getenv(&data_407144);\n    char* rbx_1;\n    if (rax == 0)\n    {\n    label_401d70:\n        rbx_1 = nullptr;\n    }\n    else\n    {\n        rbx_1 = rax;\n        char* rdi_1 = rax;\n        if (*rax != 0x2f)\n        {\n            goto label_401d70;\n        }\n        char* rax_1;\n        while (true)\n        {\n            rax_1 = sub_406480(rdi_1, &data_407148);\n            if (rax_1 == 0)\n            {\n                break;\n            }\n            char rdx_1 = rax_1[2];\n            if (rdx_1 == 0)\n            {\n                break;\n            }\n            if (rdx_1 == 0x2f)\n            {\n                break;\n            }\n            if (rdx_1 == 0x2e)\n            {\n                char rdx_2 = rax_1[3];\n                if (rdx_2 == 0)\n                {\n                    break;\n                }\n                if (rdx_2 == 0x2f)\n                {\n                    break;\n                }\n            }\n            rdi_1 = &rax_1[1];\n        }\n        if (rax_1 != 0)\n        {\n            goto label_401d70;\n        }\n        int64_t var_128;\n        if (__xstat(1, rbx_1, &var_128) != 0)\n        {\n            goto label_401d70;\n        }\n        int64_t var_98;\n        if (__xstat(1, &data_40715e, &var_98) != 0)\n        {\n            goto label_401d70;\n        }\n        int64_t var_120;\n        int64_t var_90;\n        if (var_120 != var_90)\n        {\n            goto label_401d70;\n        }\n        if (var_128 != var_98)\n        {\n            goto label_401d70;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_401dd0",
            "funcStartAddr": "0x401dd0",
            "funcEndAddr": "0x401e4b",
            "decompiledFuncCode": "void* sub_401dd0(int64_t arg1)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((3 * arg1));\n    rax = LOWD((3 * arg1));\n    if ((rax >= 0 && ((3 * arg1) >> 0x40) != 0 == 0))\n    {\n        size_t rbx = (arg1 * 3);\n        void* rax_1 = sub_404a20(rbx);\n        if (arg1 == 0)\n        {\n            *(rax_1 - 1) = 0;\n            return rax_1;\n        }\n        void* rdi_1 = (rax_1 + rbx);\n        void* rdx_2 = rax_1;\n        do\n        {\n            *(rdx_2 + 2) = 0x2f;\n            rdx_2 = (rdx_2 + 3);\n            *(rdx_2 - 3) = 0x2e2e;\n        } while (rdx_2 != rdi_1);\n        *(rdi_1 - 1) = 0;\n        return rax_1;\n    }\n    sub_404c70();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_401e50",
            "funcStartAddr": "0x401e50",
            "funcEndAddr": "0x401f10",
            "decompiledFuncCode": "int64_t sub_401e50(int64_t* arg1, int64_t arg2, uint64_t arg3)\n{\n    void* rax = arg1[2];\n    void* r12_1 = (rax - *arg1);\n    int64_t rdi = (arg3 + 1);\n    if (rdi > r12_1)\n    {\n        int64_t rdi_1 = (rdi + arg1[1]);\n        rax = (rdi + arg1[1]) < 0;\n        uint64_t rax_1 = rax;\n        size_t rbp_2 = (rdi_1 + rdi_1);\n        if (((rdi_1 + rdi_1) < 0 || ((rdi_1 + rdi_1) >= 0 && rax_1 != 0)))\n        {\n            sub_404c70();\n            /* no return */\n        }\n        if (((rdi_1 + rdi_1) >= 0 && rax_1 == 0))\n        {\n            int64_t rax_2 = sub_404a20(rbp_2);\n            int64_t rdx = arg1[1];\n            void* rcx_1 = *arg1;\n            void* rdi_5 = (((r12_1 + rbp_2) - rdx) + rax_2);\n            arg1[2] = rdi_5;\n            memcpy(rdi_5, (rcx_1 + r12_1), (rdx - r12_1));\n            free(rcx_1);\n            *arg1 = rax_2;\n            rax = arg1[2];\n            arg1[1] = rbp_2;\n        }\n    }\n    char* rax_3 = (rax + (!arg3));\n    arg1[2] = rax_3;\n    *rax_3 = 0x2f;\n    /* tailcall */\n    return memcpy((arg1[2] + 1), arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_401f10",
            "funcStartAddr": "0x401f10",
            "funcEndAddr": "0x4023d0",
            "decompiledFuncCode": "char* sub_401f10(int64_t* arg1)\n{\n    void var_1f8;\n    int64_t* rax = sub_404430(&var_1f8);\n    if (rax != 0)\n    {\n        int64_t var_1e8;\n        if (__xstat(1, &data_40715e, &var_1e8) >= 0)\n        {\n            int64_t r15_1 = 1;\n        label_401f68:\n            int64_t var_1e0;\n            if ((var_1e0 == *rax && var_1e8 == rax[1]))\n            {\n                char* rax_27 = arg1[2];\n                if (*rax_27 == 0)\n                {\n                    rax_27 = sub_401e50(arg1, 0x408977, 0);\n                }\n                return rax_27;\n            }\n            int64_t rax_4 = (r15_1 + 1);\n            DIR* rax_5 = opendir(&data_40715d);\n            DIR* rbx_1 = rax_5;\n            if (rax_5 != 0)\n            {\n                int32_t rax_6 = dirfd(rax_5);\n                int64_t var_158;\n                uint8_t rbp_2;\n                if (rax_6 < 0)\n                {\n                    while (true)\n                    {\n                        if (chdir(&data_40715d) < 0)\n                        {\n                            break;\n                        }\n                        rbp_2 = (__xstat(1, &data_40715e, &var_158) >> 0x1f);\n                    label_401fd7:\n                        int32_t* rax_10 = __errno_location();\n                        if (rbp_2 == 0)\n                        {\n                            int64_t r13_1 = var_158;\n                            int64_t r12_1 = var_1e8;\n                            bool var_211_1 = r13_1 != r12_1;\n                        label_402000:\n                            *rax_10 = 0;\n                        label_40200a:\n                            struct dirent64* rax_11 = readdir(rbx_1);\n                            if (rax_11 != 0)\n                            {\n                            label_40201c:\n                                char (* rbp_3)[0x100] = &rax_11->d_name;\n                                char rdx_6;\n                                if (rax_11->d_name[0] == 0x2e)\n                                {\n                                    int64_t rdx_5;\n                                    rdx_5 = rax_11->d_name[1] == 0x2e;\n                                    rdx_6 = rax_11->d_name[(1 + rdx_5)];\n                                    if (rdx_6 == 0x2f)\n                                    {\n                                        rax_11 = readdir(rbx_1);\n                                        if (rax_11 != 0)\n                                        {\n                                            goto label_40201c;\n                                        }\n                                    }\n                                    if (rdx_6 == 0)\n                                    {\n                                        goto label_40200a;\n                                    }\n                                }\n                                if ((rax_11->d_name[0] != 0x2e || ((rax_11->d_name[0] == 0x2e && rdx_6 != 0) && rdx_6 != 0x2f)))\n                                {\n                                    uint64_t rax_12 = rax_11->d_ino;\n                                    if ((rax_12 == 0 || (rax_12 != 0 && var_211_1 != 0)))\n                                    {\n                                        int64_t var_c8;\n                                        if (__lxstat(1, rbp_3, &var_c8) < 0)\n                                        {\n                                            goto label_402000;\n                                        }\n                                        int64_t var_c0;\n                                        if (var_c0 != var_1e0)\n                                        {\n                                            goto label_402000;\n                                        }\n                                        if ((r13_1 != r12_1 && var_c8 != var_1e8))\n                                        {\n                                            goto label_402000;\n                                        }\n                                    }\n                                    if (((rax_12 != 0 && var_211_1 == 0) && rax_12 != var_1e0))\n                                    {\n                                        goto label_402000;\n                                    }\n                                    sub_401e50(arg1, rbp_3, strlen(rbp_3));\n                                    if (closedir(rbx_1) == 0)\n                                    {\n                                        r15_1 = rax_4;\n                                        var_1e8 = var_158;\n                                        int128_t var_148;\n                                        int128_t var_1d8_1 = var_148;\n                                        int128_t var_138;\n                                        int128_t var_1c8_1 = var_138;\n                                        int128_t var_128;\n                                        int128_t var_1b8_1 = var_128;\n                                        int128_t var_118;\n                                        int128_t var_1a8_1 = var_118;\n                                        int128_t var_108;\n                                        int128_t var_198_1 = var_108;\n                                        int128_t var_f8;\n                                        int128_t var_188_1 = var_f8;\n                                        int128_t var_e8;\n                                        int128_t var_178_1 = var_e8;\n                                        int128_t var_d8;\n                                        int128_t var_168_1 = var_d8;\n                                        goto label_401f68;\n                                    }\n                                    goto label_402269;\n                                }\n                            }\n                            int32_t rbp_4 = *rax_10;\n                            if (rbp_4 != 0)\n                            {\n                                closedir(rbx_1);\n                                *rax_10 = rbp_4;\n                                goto label_402269;\n                            }\n                            if (closedir(rbx_1) == 0)\n                            {\n                                rbx_1 = sub_404410(sub_401dd0(r15_1));\n                                error(1, 0, dcgettext(nullptr, \"couldn't find directory entry in\u2026\", 5), rbx_1);\n                                continue;\n                            }\n                        label_402269:\n                            error(1, *rax_10, dcgettext(nullptr, \"reading directory %s\", 5), sub_404410(sub_401dd0(r15_1)));\n                        }\n                        error(1, *rax_10, dcgettext(nullptr, \"failed to stat %s\", 5), sub_404410(sub_401dd0(r15_1)));\n                        break;\n                    }\n                }\n                else if (fchdir(rax_6) >= 0)\n                {\n                    rbp_2 = (__fxstat(1, rax_6, &var_158) >> 0x1f);\n                    goto label_401fd7;\n                }\n                error(1, *__errno_location(), dcgettext(nullptr, \"failed to chdir to %s\", 5), sub_404410(sub_401dd0(r15_1)));\n            }\n            error(1, *__errno_location(), dcgettext(nullptr, \"cannot open directory %s\", 5), sub_404410(sub_401dd0(r15_1)));\n        }\n        error(1, *__errno_location(), dcgettext(nullptr, \"failed to stat %s\", 5), sub_4041c0(4, &data_40715e));\n    }\n    int32_t rdi_21 = error(1, *__errno_location(), dcgettext(nullptr, \"failed to get attributes of %s\", 5), sub_4041c0(4, \"/\"));\n    /* tailcall */\n    return sub_4023d0(rdi_21);\n}\n\n"
        },
        {
            "funcName": "sub_4023d0",
            "funcStartAddr": "0x4023d0",
            "funcEndAddr": "0x40272d",
            "decompiledFuncCode": "int64_t sub_4023d0(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_60a2e8;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [OPTION]...\\n\", 5), rbp);\n        fputs_unlocked(dcgettext(nullptr, \"Print the full filename of the c\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -L, --logical   use PWD from e\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nIf no option is specified, -P \u2026\", 5), stdout);\n        __printf_chk(1, dcgettext(nullptr, \"\\nNOTE: your shell may have its \u2026\", 5), &data_4071a4);\n        void* const var_88 = &data_4071bf;\n        void* const* rax_11 = &var_88;\n        void* const var_78_1 = \"coreutils\";\n        void* const var_70_1 = \"Multi-call invocation\";\n        void* const var_68_1 = \"sha224sum\";\n        void* const var_60_1 = \"sha2 utilities\";\n        void* const var_58_1 = \"sha256sum\";\n        void* const var_50_1 = \"sha2 utilities\";\n        void* const var_48_1 = \"sha384sum\";\n        void* const var_40_1 = \"sha2 utilities\";\n        void* const var_38_1 = \"sha512sum\";\n        void* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_11 = &rax_11[2];\n            void* const rdi_7 = *rax_11;\n            c_1 = false;\n            z_1 = (rdi_7 & rdi_7) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            void* const rsi_8 = &data_4071a4;\n            int64_t rcx_2 = 4;\n            while (rcx_2 != 0)\n            {\n                char temp0_1 = *rsi_8;\n                char temp1_1 = *rdi_7;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_8 = (rsi_8 + 1);\n                rdi_7 = (rdi_7 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        void* const rbp_1 = rax_11[1];\n        char* rax_22;\n        int32_t rax_23;\n        void* const r12_1;\n        if (rbp_1 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_5;\n            uint64_t r8_2;\n            ssize_t r9_2;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_22 = setlocale(5, nullptr, rdx_5, rcx_5, r8_2, r9_2, var_88, \"test invocation\");\n            if (rax_22 != 0)\n            {\n                rax_23 = strncmp(rax_22, &data_407243, 3);\n                if (rax_23 != 0)\n                {\n                    rbp_1 = &data_4071a4;\n                }\n            }\n            if ((rax_22 == 0 || (rax_22 != 0 && rax_23 == 0)))\n            {\n                rbp_1 = &data_4071a4;\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", &data_4071a4);\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_3;\n            uint64_t r8_1;\n            ssize_t r9_1;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_14 = setlocale(5, nullptr, rdx_3, rcx_3, r8_1, r9_1, var_88, \"test invocation\");\n            if (rax_14 == 0)\n            {\n                goto label_402620;\n            }\n            if (strncmp(rax_14, &data_407243, 3) == 0)\n            {\n                goto label_402620;\n            }\n        }\n        if ((((rbp_1 == 0 && rax_22 != 0) && rax_23 != 0) || rbp_1 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), &data_4071a4);\n        label_402620:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", &data_4071a4);\n            if (rbp_1 != &data_4071a4)\n            {\n                r12_1 = &data_40895c[0x1b];\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_1, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_402730",
            "funcStartAddr": "0x402730",
            "funcEndAddr": "0x402738",
            "decompiledFuncCode": "int64_t sub_402730(int64_t arg1)\n{\n    data_60a2e0 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_402740",
            "funcStartAddr": "0x402740",
            "funcEndAddr": "0x402748",
            "decompiledFuncCode": "int64_t sub_402740(char arg1)\n{\n    data_60a2d8 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_402750",
            "funcStartAddr": "0x402750",
            "funcEndAddr": "0x4027ee",
            "decompiledFuncCode": "void sub_402750(void* arg1)\n{\n    int32_t rax = sub_406820(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_60a2d8 == 0 || (data_60a2d8 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_60a2e0;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_404260(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_60a2d8 != 0) && *rax_1 == 0x20)) && sub_406820(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_60a238);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4027f0",
            "funcStartAddr": "0x4027f0",
            "funcEndAddr": "0x402889",
            "decompiledFuncCode": "char* sub_4027f0(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_407778;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_60a2e8 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_402890",
            "funcStartAddr": "0x402890",
            "funcEndAddr": "0x402982",
            "decompiledFuncCode": "char* sub_402890(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_4068e0();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_402971:\n                void* const rbx_1 = &data_40777c;\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_402971;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_402971;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_402971;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_402971;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_402971;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_402971;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_402971;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_407785;\n            if (cond:2_1)\n            {\n                rbx = &data_407782;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_402971;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_402971;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_402971;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_402971;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_402971;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_407789;\n            if (cond:1_1)\n            {\n                rbx = &data_40777e;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_402990",
            "funcStartAddr": "0x401a50",
            "funcEndAddr": "0x403bb1",
            "decompiledFuncCode": "int64_t sub_402990(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    char const* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n    label_402a28:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_402d9c:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_402de4;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_402990(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char const rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_402dfb;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_402f35;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_402b85;\n                            }\n                            goto label_402e70;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_402f35;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_402d60;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_402d60:\n                            if (var_c0 == 0)\n                            {\n                                goto label_402d6b;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_402bc7:\n                            if (var_5c == 0)\n                            {\n                                goto label_402bd8;\n                            }\n                        label_402d90:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_402d98;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_402fcb;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_402fcb:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_402fda:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_402d9c;\n                            }\n                            goto label_402d60;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_402d60;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_402d60;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_402fcb;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_402b66;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_402b66:\n                            if (var_5c == 0)\n                            {\n                                goto label_402b85;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_402b85;\n                            }\n                            goto label_402fda;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_402b5d:\n                            if (r12_1 != 0)\n                            {\n                                goto label_402d6b;\n                            }\n                            goto label_402b66;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_402f90:\n                            rdx = r11_1 == 2;\n                        label_402b85:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_402c8c;\n                            }\n                            goto label_402b8f;\n                        }\n                        case 0x27:\n                        {\n                            goto label_402d0d;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_402cdd;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_402d3a;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_403acd;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_402ca4;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_402b39;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_403130;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_403130;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_403a80:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_402de4:\n                            rbx_1 = sub_402990(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_402dfb:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_402f35;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_402e87;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_402f35;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_402e50:\n                                r13 = 0;\n                                goto label_402c0b;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_402bd8:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_402c0b:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_402c15;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_402c15:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_402c1d;\n                            }\n                            case 9:\n                            {\n                                goto label_402e00;\n                            }\n                            case 0xa:\n                            {\n                                goto label_402d78;\n                            }\n                            case 0xb:\n                            {\n                                goto label_402e60;\n                            }\n                            case 0xc:\n                            {\n                                goto label_402e40;\n                            }\n                            case 0xd:\n                            {\n                                goto label_402e29;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_40318a;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_402e15;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_40316a;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_403152;\n                            }\n                            case 0x27:\n                            {\n                                goto label_402d0d;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_402cdd;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_402d3a;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_402b39;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_403130:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_402f30:\n                            var_b8 = 0;\n                        label_402f35:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_402f84:\n                                if (rdx == 0)\n                                {\n                                    goto label_402f90;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_403481:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_402ca4;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_402d9c;\n                                }\n                                r13 = var_98;\n                                goto label_402c1d;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_405f80(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_402d9c;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_403481;\n                            }\n                            goto label_402f84;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_402e70:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_402d9c;\n                                }\n                                var_b8 = 0;\n                            label_402e87:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_402ed2;\n                                    }\n                                    rax_8 = r10;\n                                label_402eca:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_402ed2:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_402c8c;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_402f13;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_402eca;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_402c8c;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_402f30;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_402e45;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_402d7d;\n                            }\n                            case 9:\n                            {\n                            label_402e00:\n                                rbp_3 = 0x74;\n                                goto label_402d7d;\n                            }\n                            case 0xa:\n                            {\n                            label_402d78:\n                                rbp_3 = 0x6e;\n                            label_402d7d:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_402d90;\n                                }\n                                goto label_402bd8;\n                            }\n                            case 0xb:\n                            {\n                            label_402e60:\n                                rbp_3 = 0x76;\n                                goto label_402e45;\n                            }\n                            case 0xc:\n                            {\n                            label_402e40:\n                                rbp_3 = 0x66;\n                            label_402e45:\n                                if (var_5c == 0)\n                                {\n                                    goto label_402e50;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_402d98:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_402d9c;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_402e29:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_402d60;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_40318a:\n                                rbp_3 = 0x20;\n                                goto label_403152;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_402e15:\n                                rdx = 0;\n                            label_402d6b:\n                                r13 = 0;\n                                goto label_402b85;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_40316a:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_402b85;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_402b8f:\n                                rax_8 = 0;\n                                goto label_402b91;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_403152:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_402b91;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_402d0d:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_402b85;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_403acd;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_402c8c;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_402cdd:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_403acd:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_402d9c;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_402c8c:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_402bc7;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_402ca4;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_402b85;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_403270:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_402b85;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_403270;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_403270;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_403270;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_403270;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_403a80;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_402f13:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_402c8c;\n                                }\n                            label_402b91:\n                                if (arg7 == 0)\n                                {\n                                    goto label_402c8c;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_402c8c;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_402bc7;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_402d3a:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_402d60;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_402ca4:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_402c1d;\n                                }\n                            label_402c1d:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_402c26;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_402c26:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_402b39:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_402d6b;\n                                }\n                                goto label_402b5d;\n                            }\n                        }\n                    }\n                }\n            }\n        label_403216:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = \"'\";\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_402a28;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = \"'\";\n                goto label_402a28;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"'\";\n            goto label_402a28;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40777c;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40777c;\n            }\n            goto label_402a28;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_40777c;\n            goto label_402a28;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_402a28;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_402890(&data_40778d, r13);\n                arg9 = sub_402890(\"'\", r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_402a28;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_403216;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n        goto label_402a28;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_403bc0",
            "funcStartAddr": "0x401a55",
            "funcEndAddr": "0x403d5e",
            "decompiledFuncCode": "char* sub_403bc0(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_60a278;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_60a290 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_404c70();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x60a280)\n        {\n            int64_t rax_9 = sub_404a80(0, rsi_1);\n            int128_t zmm0 = data_60a280;\n            rbx = rax_9;\n            data_60a278 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_404a80(rbx, rsi_1);\n            data_60a278 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_60a290;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_60a290 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_402990(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        size_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x60a300)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_404a20(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_402990(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_403d60",
            "funcStartAddr": "0x403d60",
            "funcEndAddr": "0x403d94",
            "decompiledFuncCode": "int64_t sub_403d60(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x60a400;\n    }\n    int64_t rax_1 = sub_404c20(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_403da0",
            "funcStartAddr": "0x403da0",
            "funcEndAddr": "0x403daf",
            "decompiledFuncCode": "uint64_t sub_403da0(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60a400;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_403db0",
            "funcStartAddr": "0x403db0",
            "funcEndAddr": "0x403dbf",
            "decompiledFuncCode": "void sub_403db0(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60a400;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_403dc0",
            "funcStartAddr": "0x403dc0",
            "funcEndAddr": "0x403df3",
            "decompiledFuncCode": "uint64_t sub_403dc0(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x60a400;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_403e00",
            "funcStartAddr": "0x403e00",
            "funcEndAddr": "0x403e13",
            "decompiledFuncCode": "uint64_t sub_403e00(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60a400;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_403e20",
            "funcStartAddr": "0x403e20",
            "funcEndAddr": "0x403e4b",
            "decompiledFuncCode": "void sub_403e20(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60a400;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x60a400;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_403e50",
            "funcStartAddr": "0x403e50",
            "funcEndAddr": "0x403ec2",
            "decompiledFuncCode": "int64_t sub_403e50(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_60a400;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_402990(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_403ed0",
            "funcStartAddr": "0x403ed0",
            "funcEndAddr": "0x403fb1",
            "decompiledFuncCode": "char* sub_403ed0(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_60a400;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_402990(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_404a20((rax_2 + 1));\n    sub_402990(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_403fc0",
            "funcStartAddr": "0x403fc0",
            "funcEndAddr": "0x403fca",
            "decompiledFuncCode": "int64_t sub_403fc0(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_403ed0(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_403fd0",
            "funcStartAddr": "0x403fd0",
            "funcEndAddr": "0x404065",
            "decompiledFuncCode": "uint64_t sub_403fd0()\n{\n    uint64_t rax_2 = data_60a290;\n    int64_t r12 = data_60a278;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x60a300)\n    {\n        rax_2 = free(rdi_2);\n        *data_60a280 = 0x100;\n        *(data_60a280 + 8) = 0x60a300;\n    }\n    if (r12 != 0x60a280)\n    {\n        rax_2 = free(r12);\n        data_60a278 = 0x60a280;\n    }\n    data_60a290 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_404070",
            "funcStartAddr": "0x404070",
            "funcEndAddr": "0x404081",
            "decompiledFuncCode": "int64_t sub_404070(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_403bc0(arg1, arg2, -1, &data_60a400);\n}\n\n"
        },
        {
            "funcName": "sub_404090",
            "funcStartAddr": "0x404090",
            "funcEndAddr": "0x40409a",
            "decompiledFuncCode": "int64_t sub_404090(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_403bc0(arg1, arg2, arg3, &data_60a400);\n}\n\n"
        },
        {
            "funcName": "sub_4040a0",
            "funcStartAddr": "0x4040a0",
            "funcEndAddr": "0x4040b6",
            "decompiledFuncCode": "int64_t sub_4040a0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_403bc0(0, arg1, -1, &data_60a400);\n}\n\n"
        },
        {
            "funcName": "sub_4040c0",
            "funcStartAddr": "0x4040c0",
            "funcEndAddr": "0x4040d2",
            "decompiledFuncCode": "int64_t sub_4040c0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_403bc0(0, arg1, arg2, &data_60a400);\n}\n\n"
        },
        {
            "funcName": "sub_4040e0",
            "funcStartAddr": "0x401a5a",
            "funcEndAddr": "0x404148",
            "decompiledFuncCode": "char* sub_4040e0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_403bc0(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_404150",
            "funcStartAddr": "0x401a5f",
            "funcEndAddr": "0x4041b4",
            "decompiledFuncCode": "char* sub_404150(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_403bc0(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_4041c0",
            "funcStartAddr": "0x4041c0",
            "funcEndAddr": "0x4041cc",
            "decompiledFuncCode": "int64_t sub_4041c0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4040e0(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_4041d0",
            "funcStartAddr": "0x4041d0",
            "funcEndAddr": "0x4041df",
            "decompiledFuncCode": "int64_t sub_4041d0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_404150(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_4041e0",
            "funcStartAddr": "0x4041e0",
            "funcEndAddr": "0x404250",
            "decompiledFuncCode": "char* sub_4041e0(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_60a430;\n    int128_t var_48 = data_60a400;\n    int128_t var_38 = data_60a410;\n    int128_t var_28 = data_60a420;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_403bc0(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_404250",
            "funcStartAddr": "0x404250",
            "funcEndAddr": "0x40425d",
            "decompiledFuncCode": "int64_t sub_404250(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_4041e0(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_404260",
            "funcStartAddr": "0x404260",
            "funcEndAddr": "0x404271",
            "decompiledFuncCode": "int64_t sub_404260(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_4041e0(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_404280",
            "funcStartAddr": "0x404280",
            "funcEndAddr": "0x40428a",
            "decompiledFuncCode": "int64_t sub_404280(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4041e0(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_404290",
            "funcStartAddr": "0x401a64",
            "funcEndAddr": "0x4042fe",
            "decompiledFuncCode": "char* sub_404290(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_403bc0(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_404300",
            "funcStartAddr": "0x404300",
            "funcEndAddr": "0x40436c",
            "decompiledFuncCode": "char* sub_404300(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_60a400;\n    int128_t var_38 = data_60a410;\n    int128_t var_28 = data_60a420;\n    int64_t var_18 = data_60a430;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_403bc0(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404410",
            "funcStartAddr": "0x404410",
            "funcEndAddr": "0x404426",
            "decompiledFuncCode": "int64_t sub_404410(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_403bc0(0, arg1, -1, &data_60a240);\n}\n\n"
        },
        {
            "funcName": "sub_404430",
            "funcStartAddr": "0x404430",
            "funcEndAddr": "0x40447b",
            "decompiledFuncCode": "int64_t* sub_404430(int64_t* arg1)\n{\n    int64_t var_98;\n    if (__lxstat(1, \"/\", &var_98) != 0)\n    {\n        return 0;\n    }\n    int64_t var_90;\n    *arg1 = var_90;\n    arg1[1] = var_98;\n    return arg1;\n}\n\n"
        },
        {
            "funcName": "sub_404480",
            "funcStartAddr": "0x401a69",
            "funcEndAddr": "0x40485d",
            "decompiledFuncCode": "int64_t sub_404480(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_4084cb, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_404860",
            "funcStartAddr": "0x404860",
            "funcEndAddr": "0x404880",
            "decompiledFuncCode": "int64_t sub_404860(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_404480(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_404880",
            "funcStartAddr": "0x404880",
            "funcEndAddr": "0x4048e0",
            "decompiledFuncCode": "int64_t sub_404880(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_404480(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_4048e0",
            "funcStartAddr": "0x4048e0",
            "funcEndAddr": "0x40499c",
            "decompiledFuncCode": "int64_t sub_4048e0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_404480(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_4049a0",
            "funcStartAddr": "0x4049a0",
            "funcEndAddr": "0x404a14",
            "decompiledFuncCode": "int64_t sub_4049a0()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_404a20",
            "funcStartAddr": "0x404a20",
            "funcEndAddr": "0x404a3a",
            "decompiledFuncCode": "int64_t sub_404a20(size_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_404c70();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404a80",
            "funcStartAddr": "0x404a80",
            "funcEndAddr": "0x404ab6",
            "decompiledFuncCode": "int64_t sub_404a80(int64_t arg1, size_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_404c70();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404bca",
            "funcStartAddr": "0x404bca",
            "funcEndAddr": "0x404bd0",
            "decompiledFuncCode": "int64_t sub_404bca() __noreturn\n{\n    sub_404c70();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404bd0",
            "funcStartAddr": "0x404bd0",
            "funcEndAddr": "0x404be7",
            "decompiledFuncCode": "int64_t sub_404bd0(size_t arg1)\n{\n    /* tailcall */\n    return memset(sub_404a20(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_404bf0",
            "funcStartAddr": "0x404bf0",
            "funcEndAddr": "0x404c1e",
            "decompiledFuncCode": "int64_t sub_404bf0(size_t arg1, size_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_404c70();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404c20",
            "funcStartAddr": "0x404c20",
            "funcEndAddr": "0x404c48",
            "decompiledFuncCode": "int64_t sub_404c20(int64_t arg1, size_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_404a20(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_404c50",
            "funcStartAddr": "0x404c50",
            "funcEndAddr": "0x404c63",
            "decompiledFuncCode": "int64_t sub_404c50(char* arg1)\n{\n    /* tailcall */\n    return sub_404c20(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_404c70",
            "funcStartAddr": "0x404c70",
            "funcEndAddr": "0x404ca1",
            "decompiledFuncCode": "int64_t sub_404c70() __noreturn\n{\n    error(data_60a238, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404cb0",
            "funcStartAddr": "0x404cb0",
            "funcEndAddr": "0x404cdf",
            "decompiledFuncCode": "void* sub_404cb0()\n{\n    void* rax = sub_404ce0(nullptr, 0);\n    if ((rax == 0 && *__errno_location() == 0xc))\n    {\n        sub_404c70();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404ce0",
            "funcStartAddr": "0x404ce0",
            "funcEndAddr": "0x4051a2",
            "decompiledFuncCode": "void* const sub_404ce0(void* arg1, size_t arg2)\n{\n    void* var_108 = arg1;\n    void* const var_110;\n    size_t var_100;\n    if (arg2 != 0)\n    {\n        var_100 = arg2;\n        if (var_108 != 0)\n        {\n            var_110 = var_108;\n        }\n    }\n    else\n    {\n        var_100 = 0x1000;\n        if (arg1 != 0)\n        {\n            var_110 = nullptr;\n            *__errno_location() = 0x16;\n        }\n    }\n    void* rax_1;\n    if (((arg2 != 0 && var_108 == 0) || (arg2 == 0 && arg1 == 0)))\n    {\n        rax_1 = malloc(var_100);\n        var_110 = rax_1;\n    }\n    if (((arg2 != 0 && var_108 != 0) || (((arg2 != 0 && var_108 == 0) || (arg2 == 0 && arg1 == 0)) && rax_1 != 0)))\n    {\n        void* rbx_2 = (var_110 + var_100);\n        *(rbx_2 - 1) = 0;\n        int64_t var_c8;\n        int32_t rax_5 = __lxstat(1, &data_40715e, &var_c8);\n        int32_t rax_6;\n        int32_t rbx_6;\n        int32_t* r12_1;\n        if (rax_5 >= 0)\n        {\n            int64_t r15_1 = var_c8;\n            int64_t var_c0;\n            int64_t r14_1 = var_c0;\n            int64_t var_120_1 = r15_1;\n            rax_6 = __lxstat(1, \"/\", &var_c8);\n            if (rax_6 >= 0)\n            {\n                void* var_e8_1 = (rbx_2 - 1);\n                int64_t rax_8 = var_c8;\n                bool cond:1_1 = r15_1 != rax_8;\n                int64_t var_e0_1 = rax_8;\n                rax_8 = r14_1 != var_c0;\n                bool rdx_3 = (cond:1_1 | rax_8);\n                if (rdx_3 != 0)\n                {\n                    DIR* rbp_1 = nullptr;\n                    int32_t r15_2 = -0x64;\n                    r12_1 = __errno_location();\n                    do\n                    {\n                        int32_t rax_11 = openat(r15_2, &data_40715d, 0);\n                        r15_2 = rax_11;\n                        if (rax_11 < 0)\n                        {\n                            rbx_6 = *r12_1;\n                            if (rbp_1 != 0)\n                            {\n                            label_4050b4:\n                                closedir(rbp_1);\n                            }\n                        }\n                        else\n                        {\n                            if (__fxstat(1, rax_11, &var_c8) != 0)\n                            {\n                                rbx_6 = *r12_1;\n                                if (rbp_1 != 0)\n                                {\n                                    closedir(rbp_1);\n                                }\n                                goto label_405120;\n                            }\n                            int32_t rax_13;\n                            if (rbp_1 != 0)\n                            {\n                                rax_13 = closedir(rbp_1);\n                            }\n                            if ((rbp_1 == 0 || (rbp_1 != 0 && rax_13 == 0)))\n                            {\n                                int64_t rax_14 = var_c8;\n                                DIR* rax_16 = fdopendir(r15_2);\n                                rbp_1 = rax_16;\n                                if (rax_16 != 0)\n                                {\n                                    bool r13_1 = rdx_3;\n                                    struct dirent64* rax_17;\n                                    char* rbx_3;\n                                    while (true)\n                                    {\n                                        *r12_1 = 0;\n                                        rax_17 = readdir(rbp_1);\n                                        if (rax_17 == 0)\n                                        {\n                                            rbx_6 = *r12_1;\n                                            if (rbx_6 != 0)\n                                            {\n                                                break;\n                                            }\n                                            if (r13_1 == 0)\n                                            {\n                                                break;\n                                            }\n                                            rewinddir(rbp_1);\n                                            rax_17 = readdir(rbp_1);\n                                            if (rax_17 == 0)\n                                            {\n                                                rbx_6 = *r12_1;\n                                                break;\n                                            }\n                                            r13_1 = false;\n                                            if (rax_17->d_name[0] != 0x2e)\n                                            {\n                                                goto label_404eb2;\n                                            }\n                                        }\n                                        if (((rax_17 != 0 && rax_17->d_name[0] == 0x2e) || rax_17 == 0))\n                                        {\n                                            if (rax_17->d_name[1] == 0)\n                                            {\n                                                continue;\n                                            }\n                                            if ((rax_17->d_name[1] != 0 && rax_17->d_name[1] == 0x2e))\n                                            {\n                                                continue;\n                                            }\n                                        }\n                                        if (r13_1 != 0)\n                                        {\n                                            int64_t rcx_1;\n                                            rcx_1 = rax_14 != var_120_1;\n                                            bool rdx_5 = (rax_17->d_ino == r14_1 | rcx_1);\n                                            if (rdx_5 == 0)\n                                            {\n                                                continue;\n                                            }\n                                            else\n                                            {\n                                                r13_1 = rdx_5;\n                                            }\n                                            goto label_404eb2;\n                                        }\n                                    label_404eb2:\n                                        rbx_3 = &rax_17->d_name;\n                                        int32_t var_b0;\n                                        if (((__fxstatat(1, r15_2, rbx_3, &var_c8, 0x100) == 0 && (var_b0 & 0xf000) == 0x4000) && var_c8 == var_120_1))\n                                        {\n                                            if (var_c0 == r14_1)\n                                            {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                    if ((!((rax_17 == 0 && rbx_6 == 0) && r13_1 != 0)))\n                                    {\n                                        void* r13_3 = (var_e8_1 - var_110);\n                                        size_t rax_22 = strlen(rbx_3);\n                                        void* rax_25;\n                                        size_t rdx_7;\n                                        if (r13_3 <= rax_22)\n                                        {\n                                            if (arg2 != 0)\n                                            {\n                                                *r12_1 = 0x22;\n                                                rbx_6 = 0x22;\n                                            }\n                                            else\n                                            {\n                                                rdx_7 = var_100;\n                                                if (rax_22 >= var_100)\n                                                {\n                                                    rdx_7 = rax_22;\n                                                }\n                                                size_t rax_24 = (var_100 + rdx_7);\n                                                if ((var_100 + rdx_7) >= var_100)\n                                                {\n                                                    rax_25 = realloc(var_110, rax_24);\n                                                    if (rax_25 != 0)\n                                                    {\n                                                        var_110 = rax_25;\n                                                        var_e8_1 = memcpy((rax_25 + (rdx_7 + r13_3)), (rax_25 + r13_3), (var_100 - r13_3));\n                                                        var_100 = rax_24;\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        if (((((r13_3 <= rax_22 && arg2 == 0) && (var_100 + rdx_7) >= var_100) && rax_25 != 0) || r13_3 > rax_22))\n                                        {\n                                            void* rax_28 = memcpy((var_e8_1 - rax_22), rbx_3, rax_22);\n                                            var_e8_1 = (rax_28 - 1);\n                                            r14_1 = var_c0;\n                                            *(rax_28 - 1) = 0x2f;\n                                            var_120_1 = rax_14;\n                                            if (var_e0_1 != rax_14)\n                                            {\n                                                continue;\n                                            }\n                                            else\n                                            {\n                                                if (var_c0 == var_c0)\n                                                {\n                                                    if (closedir(rbp_1) != 0)\n                                                    {\n                                                        goto label_4050e6;\n                                                    }\n                                                    rbx_2 = (var_110 + var_100);\n                                                    goto label_405007;\n                                                }\n                                                continue;\n                                            }\n                                        }\n                                        if (((r13_3 <= rax_22 && arg2 == 0) && ((var_100 + rdx_7) < var_100 || ((var_100 + rdx_7) >= var_100 && rax_25 == 0))))\n                                        {\n                                            *r12_1 = 0xc;\n                                            rbx_6 = 0xc;\n                                        }\n                                    }\n                                    else if (rbx_6 == 0)\n                                    {\n                                        *r12_1 = 2;\n                                        rbx_6 = 2;\n                                    }\n                                    goto label_4050b4;\n                                }\n                            }\n                            rbx_6 = *r12_1;\n                        label_405120:\n                            close(r15_2);\n                        }\n                    } while (var_108 == 0);\n                    if (var_108 != 0)\n                    {\n                        goto label_4050c1;\n                    }\n                    goto label_4050f1;\n                }\n            label_405007:\n                if (var_e8_1 == ((var_110 + var_100) - 1))\n                {\n                    *(var_e8_1 - 1) = 0x2f;\n                    var_e8_1 = (var_e8_1 - 1);\n                }\n                void* rbx_5 = (rbx_2 - var_e8_1);\n                memmove(var_110, var_e8_1, rbx_5);\n                if (arg2 == 0)\n                {\n                    var_108 = realloc(var_110, rbx_5);\n                }\n                void* const rax_34 = var_108;\n                if (rax_34 == 0)\n                {\n                    rax_34 = var_110;\n                }\n                var_110 = rax_34;\n            }\n        }\n        if ((rax_5 < 0 || (rax_5 >= 0 && rax_6 < 0)))\n        {\n            r12_1 = __errno_location();\n        label_4050e6:\n            rbx_6 = *r12_1;\n            if (var_108 != 0)\n            {\n                goto label_4050c1;\n            }\n        label_4050f1:\n            free(var_110);\n        label_4050c1:\n            *r12_1 = rbx_6;\n            var_110 = nullptr;\n        }\n    }\n    return var_110;\n}\n\n"
        },
        {
            "funcName": "sub_4051b0",
            "funcStartAddr": "0x4051b0",
            "funcEndAddr": "0x40528f",
            "decompiledFuncCode": "uint64_t sub_4051b0(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_405290",
            "funcStartAddr": "0x405290",
            "funcEndAddr": "0x4058ac",
            "decompiledFuncCode": "uint64_t sub_405290(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_4054c0;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_4053e6;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_4053e6;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_4053e6:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_4054c0:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_4054ee;\n                }\n                *arg5 = r12;\n            label_4054ee:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_40550c;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_40550c:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_40550c;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_40547e;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_40547e:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_4058b0",
            "funcStartAddr": "0x4058b0",
            "funcEndAddr": "0x405e76",
            "decompiledFuncCode": "uint64_t sub_4058b0(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_405aec;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_405978;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_405978:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_4051b0(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_408959;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_4051b0(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_405aec;\n                }\n                *arg7 = rdx_2;\n            label_405aec:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_405bf0;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_408959;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_405c60;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_405bf0;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_405bf0;\n                            }\n                            goto label_405bb1;\n                        }\n                    label_405bb1:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_405290(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_40895a);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_405bf0:\n                            rdx = &r14_1[1];\n                        label_405a31:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_405c2e;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_405c2e:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_408978;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_405c60:\n                                        r14_2 = sub_405290(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_405d1d;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_405d1d:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_405aec;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_405978;\n        }\n        goto label_405a31;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_405ee0",
            "funcStartAddr": "0x405ee0",
            "funcEndAddr": "0x405ef8",
            "decompiledFuncCode": "uint64_t sub_405ee0(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_405f80",
            "funcStartAddr": "0x405f80",
            "funcEndAddr": "0x405ffa",
            "decompiledFuncCode": "uint64_t sub_405f80(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_40895c[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_405faa;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_405faa:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_406880() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_406000",
            "funcStartAddr": "0x406000",
            "funcEndAddr": "0x40612e",
            "decompiledFuncCode": "int64_t sub_406000(char* arg1, int64_t arg2, int64_t* arg3)\n{\n    int64_t r11 = 1;\n    int64_t r8 = 1;\n    int64_t r9 = 0;\n    int64_t rax = -1;\n    while (true)\n    {\n        int64_t rcx_1 = (r8 + r9);\n        if (rcx_1 >= arg2)\n        {\n            break;\n        }\n        char rbx_1;\n        char temp0_1;\n        bool cond:0_1;\n        do\n        {\n            rbx_1 = arg1[(rax + r8)];\n            temp0_1 = arg1[rcx_1];\n            cond:0_1 = temp0_1 == rbx_1;\n            if (temp0_1 >= rbx_1)\n            {\n                break;\n            }\n            r9 = rcx_1;\n            r8 = 1;\n            int64_t r11_1 = rcx_1;\n            rcx_1 = (1 + r9);\n            r11 = (r11_1 - rax);\n        } while (rcx_1 < arg2);\n        if (temp0_1 < rbx_1)\n        {\n            break;\n        }\n        if ((!cond:0_1))\n        {\n            rax = r9;\n            r11 = 1;\n            r9 = (r9 + 1);\n            r8 = 1;\n        }\n        else if (r8 == r11)\n        {\n            r9 = rcx_1;\n            r8 = 1;\n        }\n        else\n        {\n            r8 = (r8 + 1);\n        }\n    }\n    *arg3 = r11;\n    int64_t rbx_2 = 1;\n    int64_t r8_1 = 1;\n    int64_t r9_1 = 0;\n    int64_t r10_2 = -1;\n    while (true)\n    {\n        int64_t rcx_2 = (r8_1 + r9_1);\n        if (arg2 <= rcx_2)\n        {\n            break;\n        }\n        char r11_3;\n        char temp1_1;\n        bool cond:1_1;\n        do\n        {\n            r11_3 = arg1[(r10_2 + r8_1)];\n            temp1_1 = arg1[rcx_2];\n            cond:1_1 = temp1_1 == r11_3;\n            if (temp1_1 <= r11_3)\n            {\n                break;\n            }\n            r9_1 = rcx_2;\n            r8_1 = 1;\n            int64_t rbx_3 = rcx_2;\n            rcx_2 = (1 + r9_1);\n            rbx_2 = (rbx_3 - r10_2);\n        } while (arg2 > rcx_2);\n        if (temp1_1 > r11_3)\n        {\n            break;\n        }\n        if ((!cond:1_1))\n        {\n            r10_2 = r9_1;\n            rbx_2 = 1;\n            r9_1 = (r9_1 + 1);\n            r8_1 = 1;\n        }\n        else if (r8_1 == rbx_2)\n        {\n            r9_1 = rcx_2;\n            r8_1 = 1;\n        }\n        else\n        {\n            r8_1 = (r8_1 + 1);\n        }\n    }\n    int64_t r10_3 = (r10_2 + 1);\n    int64_t rax_1 = (rax + 1);\n    if (r10_3 >= rax_1)\n    {\n        *arg3 = rbx_2;\n        rax_1 = r10_3;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_406130",
            "funcStartAddr": "0x406130",
            "funcEndAddr": "0x406479",
            "decompiledFuncCode": "void* sub_406130(void* arg1, void* arg2, char* arg3, void* arg4)\n{\n    void* rbp = arg2;\n    void* var_868;\n    void* var_840;\n    uint64_t r13;\n    if (arg4 <= 2)\n    {\n        var_840 = 1;\n        r13 = (arg4 - 1);\n        var_868 = 1;\n    }\n    else\n    {\n        r13 = sub_406000(arg3, arg4, &var_840);\n        var_868 = var_840;\n    }\n    void var_838;\n    void* rax_3 = &var_838;\n    void var_38;\n    do\n    {\n        *rax_3 = arg4;\n        rax_3 = (rax_3 + 8);\n    } while (&var_38 != rax_3);\n    void* rsi_1 = (arg3 + var_868);\n    int32_t rax_6;\n    int32_t rax_15;\n    void* rax_16;\n    void* r10_1;\n    if (arg4 == 0)\n    {\n        rax_15 = memcmp(arg3, rsi_1, r13);\n        if (rax_15 == 0)\n        {\n        label_4062fd:\n            rax_16 = nullptr;\n        }\n    }\n    else\n    {\n        r10_1 = (arg4 - 1);\n        void* r9_1 = (arg4 + arg3);\n        char* rax_5 = arg3;\n        void* rdi_1 = (arg3 + r10_1);\n        do\n        {\n            uint64_t rdx_1 = *rax_5;\n            int64_t rcx_1 = (rdi_1 - rax_5);\n            rax_5 = &rax_5[1];\n            *(&var_838 + (rdx_1 << 3)) = rcx_1;\n        } while (r9_1 != rax_5);\n        rax_6 = memcmp(arg3, rsi_1, r13);\n    }\n    if (((arg4 == 0 && rax_15 != 0) || (arg4 != 0 && rax_6 != 0)))\n    {\n        void* r14_1 = (arg4 - 1);\n        void* rax_8 = (arg4 - r13);\n        if (rax_8 < r13)\n        {\n            rax_8 = r13;\n        }\n        void* r9_2 = nullptr;\n        void* rax_9 = (rax_8 + 1);\n        var_840 = rax_9;\n        int64_t rax_10 = (1 - r13);\n        void* rcx_2;\n        void* rdx_5;\n        while (true)\n        {\n            rcx_2 = (r9_2 + arg4);\n            char* rax_12 = sub_406f70((arg1 + rbp), 0, (rcx_2 - rbp));\n            if (rcx_2 == 0)\n            {\n                break;\n            }\n            void* r9_3 = r9_2;\n            if (rax_12 != 0)\n            {\n                break;\n            }\n            uint64_t rax_11 = *(&var_838 + (*((arg1 + rcx_2) - 1) << 3));\n            if (rax_11 == 0)\n            {\n                rdx_5 = (arg1 + r9_3);\n                if (r13 < r14_1)\n                {\n                    rax_11 = r13;\n                    if (*(rdx_5 + r13) == arg3[r13])\n                    {\n                        do\n                        {\n                            rax_11 = (rax_11 + 1);\n                            if (rax_11 >= r14_1)\n                            {\n                                break;\n                            }\n                        } while (arg3[rax_11] == *(rdx_5 + rax_11));\n                    }\n                    if ((*(rdx_5 + r13) != arg3[r13] || (*(rdx_5 + r13) == arg3[r13] && rax_11 < r14_1)))\n                    {\n                        r9_3 = (r9_3 + rax_10);\n                    }\n                }\n                if ((r13 >= r14_1 || ((r13 < r14_1 && *(rdx_5 + r13) == arg3[r13]) && rax_11 >= r14_1)))\n                {\n                    int64_t rax_14 = (r13 - 1);\n                    if (rax_14 == -1)\n                    {\n                        break;\n                    }\n                    if (*(rdx_5 + rax_14) == arg3[(r13 - 1)])\n                    {\n                        do\n                        {\n                            rax_14 = (rax_14 - 1);\n                            if (rax_14 == -1)\n                            {\n                                break;\n                            }\n                        } while (arg3[rax_14] == *(rdx_5 + rax_14));\n                        if (rax_14 == -1)\n                        {\n                            break;\n                        }\n                    }\n                    r9_2 = (r9_3 + rax_9);\n                }\n            }\n            if ((((rax_11 == 0 && r13 < r14_1) && (*(rdx_5 + r13) != arg3[r13] || (*(rdx_5 + r13) == arg3[r13] && rax_11 < r14_1))) || rax_11 != 0))\n            {\n                r9_2 = (r9_3 + rax_11);\n            }\n            rbp = rcx_2;\n        }\n        if (rcx_2 == 0)\n        {\n            goto label_4062fd;\n        }\n        rax_16 = rdx_5;\n    }\n    if ((arg4 != 0 && rax_6 == 0))\n    {\n        uint64_t rax_17 = (r13 - 1);\n        void* r11_1 = nullptr;\n        void* r14_2 = nullptr;\n        void* rax_19 = (arg4 - var_868);\n        void* rax_20 = (1 - r13);\n        char* rax_22;\n        while (true)\n        {\n            void* r9_4 = (r14_2 + arg4);\n            rax_22 = sub_406f70((arg1 + rbp), 0, (r9_4 - rbp));\n            if (rax_22 != 0)\n            {\n                break;\n            }\n            if (r9_4 == 0)\n            {\n                break;\n            }\n            void* rax_21 = *(&var_838 + (*((arg1 + r9_4) - 1) << 3));\n            if (rax_21 != 0)\n            {\n                if ((rax_21 < var_868 && r11_1 != 0))\n                {\n                    rax_21 = rax_19;\n                }\n                r14_2 = (r14_2 + rax_21);\n                r11_1 = nullptr;\n            }\n            else\n            {\n                void* rax_24 = r13;\n                if (r11_1 >= r13)\n                {\n                    rax_24 = r11_1;\n                }\n                char* rdx_9;\n                if (rax_24 < r10_1)\n                {\n                    rdx_9 = (arg1 + r14_2);\n                    while (*(arg3 + rax_24) == *(rdx_9 + rax_24))\n                    {\n                        rax_24 = (rax_24 + 1);\n                        if (rax_24 == r10_1)\n                        {\n                            break;\n                        }\n                    }\n                    if (*(arg3 + rax_24) != *(rdx_9 + rax_24))\n                    {\n                        r11_1 = nullptr;\n                        r14_2 = (rax_24 + (rax_20 + r14_2));\n                    }\n                }\n                if ((rax_24 >= r10_1 || (rax_24 < r10_1 && *(arg3 + rax_24) == *(rdx_9 + rax_24))))\n                {\n                    uint64_t rax_25 = rax_17;\n                    int64_t rdx_10;\n                    if (r11_1 < r13)\n                    {\n                        rdx_10 = (arg1 + r14_2);\n                        if (*(rdx_10 + rax_17) == arg3[rax_17])\n                        {\n                            while (true)\n                            {\n                                uint64_t rsi_6 = (rax_25 - 1);\n                                if (r11_1 == rax_25)\n                                {\n                                    break;\n                                }\n                                if (arg3[(rax_25 - 1)] != *((rax_25 + rdx_10) - 1))\n                                {\n                                    break;\n                                }\n                                rax_25 = rsi_6;\n                            }\n                        }\n                    }\n                    if ((r11_1 >= r13 || (r11_1 < r13 && *(rdx_10 + rax_17) != arg3[rax_17])))\n                    {\n                        rax_25 = r13;\n                    }\n                    if ((r11_1 + 1) > rax_25)\n                    {\n                        break;\n                    }\n                    r14_2 = (r14_2 + var_868);\n                    r11_1 = rax_19;\n                }\n            }\n            rbp = r9_4;\n        }\n        if (rax_22 != 0)\n        {\n            goto label_4062fd;\n        }\n        rax_16 = (arg1 + r14_2);\n    }\n    return rax_16;\n}\n\n"
        },
        {
            "funcName": "sub_406480",
            "funcStartAddr": "0x406480",
            "funcEndAddr": "0x406814",
            "decompiledFuncCode": "char* sub_406480(char* arg1, char* arg2)\n{\n    uint32_t rax = *arg1;\n    char r9 = *arg2;\n    char* r12_1;\n    if (rax == 0)\n    {\n        r12_1 = nullptr;\n        if (r9 == 0)\n        {\n            r12_1 = arg1;\n        }\n    }\n    else if (r9 == 0)\n    {\n        r12_1 = arg1;\n    }\n    else\n    {\n        char* rbx_1 = arg2;\n        char* rdx_1 = arg1;\n        char rcx_1 = r9;\n        int32_t r8_1 = 1;\n        while (true)\n        {\n            rdx_1 = &rdx_1[1];\n            rbx_1 = &rbx_1[1];\n            rax = rcx_1 == rax;\n            rcx_1 = *rbx_1;\n            r8_1 = (r8_1 & rax);\n            rax = *rdx_1;\n            if ((rax != 0 && rcx_1 != 0))\n            {\n                continue;\n            }\n            if (rax == 0)\n            {\n                r12_1 = nullptr;\n                if (rcx_1 != 0)\n                {\n                    break;\n                }\n            }\n            r12_1 = arg1;\n            if (r8_1 == 0)\n            {\n                void* rbp_2 = (rbx_1 - arg2);\n                char* rax_1 = strchr(&arg1[1], r9);\n                r12_1 = rax_1;\n                if ((rax_1 != 0 && rbp_2 != 1))\n                {\n                    int64_t rax_2 = (arg1 + rbp_2);\n                    char* rbx_2 = (rbx_1 - rbp_2);\n                    void* r8_3 = (rax_2 - r12_1);\n                    if (rax_2 < r12_1)\n                    {\n                        r8_3 = 1;\n                    }\n                    if (rbp_2 > 0x1f)\n                    {\n                        r12_1 = sub_406130(r12_1, r8_3, rbx_2, rbp_2);\n                    }\n                    else\n                    {\n                        void* var_60_1;\n                        void* var_40;\n                        uint64_t r15_1;\n                        if (rbp_2 <= 2)\n                        {\n                            var_40 = 1;\n                            r15_1 = (rbp_2 - 1);\n                            var_60_1 = 1;\n                        }\n                        else\n                        {\n                            r15_1 = sub_406000(rbx_2, rbp_2, &var_40);\n                            var_60_1 = var_40;\n                        }\n                        int32_t rax_8 = memcmp(rbx_2, (rbx_2 + var_60_1), r15_1);\n                        void* r8_4 = r8_3;\n                        void* r11_1;\n                        void* r13_3;\n                        void* r14_1;\n                        if (rax_8 != 0)\n                        {\n                            void* rax_17 = (rbp_2 - r15_1);\n                            if (rax_17 < r15_1)\n                            {\n                                rax_17 = r15_1;\n                            }\n                            void* r14_2 = nullptr;\n                            void* rax_18 = (rax_17 + 1);\n                            var_40 = rax_18;\n                            void* rax_19 = &r12_1[r15_1];\n                            void* rax_20 = (1 - r15_1);\n                            char* rdx_12;\n                            while (true)\n                            {\n                                r13_3 = (rbp_2 + r14_2);\n                                char* rax_21 = sub_406f70((r12_1 + r8_4), 0, (r13_3 - r8_4));\n                                if (r13_3 == 0)\n                                {\n                                    break;\n                                }\n                                if (rax_21 != 0)\n                                {\n                                    break;\n                                }\n                                rdx_12 = (r12_1 + r14_2);\n                                uint64_t rax_22;\n                                if (rbp_2 > r15_1)\n                                {\n                                    rax_22 = r15_1;\n                                    rdx_12 = (r12_1 + r14_2);\n                                    if (*(rax_19 + r14_2) == rbx_2[r15_1])\n                                    {\n                                        do\n                                        {\n                                            rax_22 = (rax_22 + 1);\n                                            if (rbp_2 <= rax_22)\n                                            {\n                                                break;\n                                            }\n                                        } while (rbx_2[rax_22] == rdx_12[rax_22]);\n                                    }\n                                    if ((*(rax_19 + r14_2) != rbx_2[r15_1] || (*(rax_19 + r14_2) == rbx_2[r15_1] && rbp_2 > rax_22)))\n                                    {\n                                        r14_2 = (rax_22 + (rax_20 + r14_2));\n                                    }\n                                }\n                                if ((rbp_2 <= r15_1 || ((rbp_2 > r15_1 && *(rax_19 + r14_2) == rbx_2[r15_1]) && rbp_2 <= rax_22)))\n                                {\n                                    int64_t rax_23 = (r15_1 - 1);\n                                    if (rax_23 == -1)\n                                    {\n                                        break;\n                                    }\n                                    if (rdx_12[rax_23] == rbx_2[(r15_1 - 1)])\n                                    {\n                                        do\n                                        {\n                                            rax_23 = (rax_23 - 1);\n                                            if (rax_23 == -1)\n                                            {\n                                                break;\n                                            }\n                                        } while (rbx_2[rax_23] == rdx_12[rax_23]);\n                                        if (rax_23 == -1)\n                                        {\n                                            break;\n                                        }\n                                    }\n                                    r14_2 = (r14_2 + rax_18);\n                                }\n                                r8_4 = r13_3;\n                            }\n                            if (r13_3 != 0)\n                            {\n                                r12_1 = rdx_12;\n                            }\n                        }\n                        else\n                        {\n                            uint64_t rax_9 = (r15_1 - 1);\n                            void* r13_2 = nullptr;\n                            r14_1 = nullptr;\n                            void* rax_11 = (rbp_2 - var_60_1);\n                            void* rax_12 = (1 - r15_1);\n                            while (true)\n                            {\n                                r11_1 = (rbp_2 + r14_1);\n                                char* rax_13 = sub_406f70((r12_1 + r8_4), 0, (r11_1 - r8_4));\n                                if (r11_1 == 0)\n                                {\n                                    break;\n                                }\n                                if (rax_13 != 0)\n                                {\n                                    break;\n                                }\n                                void* rax_14 = r13_2;\n                                if (r15_1 >= r13_2)\n                                {\n                                    rax_14 = r15_1;\n                                }\n                                if ((rbp_2 > rax_14 && *((r12_1 + rax_14) + r14_1) == *(rbx_2 + rax_14)))\n                                {\n                                    void* rdx_8 = (r12_1 + r14_1);\n                                    do\n                                    {\n                                        rax_14 = (rax_14 + 1);\n                                        if (rbp_2 == rax_14)\n                                        {\n                                            break;\n                                        }\n                                    } while (*(rbx_2 + rax_14) == *(rdx_8 + rax_14));\n                                }\n                                if ((rbp_2 <= rax_14 || ((rbp_2 > rax_14 && *((r12_1 + rax_14) + r14_1) == *(rbx_2 + rax_14)) && rbp_2 == rax_14)))\n                                {\n                                    uint64_t rax_15 = rax_9;\n                                    int64_t rsi_5;\n                                    if (r15_1 > r13_2)\n                                    {\n                                        rsi_5 = (r12_1 + r14_1);\n                                        if (rbx_2[rax_9] == *(rsi_5 + rax_9))\n                                        {\n                                            while (true)\n                                            {\n                                                uint64_t rdx_9 = (rax_15 - 1);\n                                                if (r13_2 == rax_15)\n                                                {\n                                                    break;\n                                                }\n                                                if (rbx_2[(rax_15 - 1)] != *((rax_15 + rsi_5) - 1))\n                                                {\n                                                    break;\n                                                }\n                                                rax_15 = rdx_9;\n                                            }\n                                        }\n                                    }\n                                    if ((r15_1 <= r13_2 || (r15_1 > r13_2 && rbx_2[rax_9] != *(rsi_5 + rax_9))))\n                                    {\n                                        rax_15 = r15_1;\n                                    }\n                                    if ((r13_2 + 1) > rax_15)\n                                    {\n                                        break;\n                                    }\n                                    r13_2 = rax_11;\n                                    r14_1 = (r14_1 + var_60_1);\n                                }\n                                if ((rbp_2 > rax_14 && (*((r12_1 + rax_14) + r14_1) != *(rbx_2 + rax_14) || (*((r12_1 + rax_14) + r14_1) == *(rbx_2 + rax_14) && rbp_2 != rax_14))))\n                                {\n                                    r13_2 = nullptr;\n                                    r14_1 = (rax_14 + (rax_12 + r14_1));\n                                }\n                                r8_4 = r11_1;\n                            }\n                        }\n                        if (((rax_8 != 0 && r13_3 == 0) || (rax_8 == 0 && r11_1 == 0)))\n                        {\n                            r12_1 = nullptr;\n                        }\n                        if ((rax_8 == 0 && r11_1 != 0))\n                        {\n                            r12_1 = (r12_1 + r14_1);\n                        }\n                    }\n                }\n            }\n            break;\n        }\n    }\n    return r12_1;\n}\n\n"
        },
        {
            "funcName": "sub_406820",
            "funcStartAddr": "0x406820",
            "funcEndAddr": "0x40687d",
            "decompiledFuncCode": "uint64_t sub_406820(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_406e50(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_406880",
            "funcStartAddr": "0x406880",
            "funcEndAddr": "0x4068de",
            "decompiledFuncCode": "int64_t sub_406880()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_40897c;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            void* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4068e0",
            "funcStartAddr": "0x4068e0",
            "funcEndAddr": "0x406e42",
            "decompiledFuncCode": "char* sub_4068e0()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_60a478;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_40895c[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        size_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            size_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_4069dc;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_406a26;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_4069dc:\n            r15 = &data_40895c[0x1b];\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_406a26:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, \"r\");\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_406adc:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_406c6b;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_406b18:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_406b18;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_406b52:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_406b52;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_40895c[0x1b];\n                                    free(rdi_26);\n                                    sub_406e50(rax_12);\n                                    goto label_406a67;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_406d2b:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_406d2b;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_406d79:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_406d79;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_406adc;\n                        }\n                        break;\n                    }\n                label_406c6b:\n                    sub_406e50(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_40895c[0x1b];\n            }\n        label_406a67:\n            free(rbp_3);\n        }\n        data_60a478 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_406e50",
            "funcStartAddr": "0x406e50",
            "funcEndAddr": "0x406ecb",
            "decompiledFuncCode": "int64_t sub_406e50(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_406ed0(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_406ed0",
            "funcStartAddr": "0x406ed0",
            "funcEndAddr": "0x406f10",
            "decompiledFuncCode": "int64_t sub_406ed0(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_406f10(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_406f10",
            "funcStartAddr": "0x406f10",
            "funcEndAddr": "0x406f67",
            "decompiledFuncCode": "off64_t sub_406f10(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_406f70",
            "funcStartAddr": "0x406f70",
            "funcEndAddr": "0x407074",
            "decompiledFuncCode": "char* sub_406f70(char* arg1, int32_t arg2, int64_t arg3)\n{\n    char r8 = arg2;\n    if (arg3 != 0)\n    {\n        if ((arg1 & 7) != 0)\n        {\n            if (arg2 == *arg1)\n            {\n            label_407070:\n                return arg1;\n            }\n            do\n            {\n                arg1 = &arg1[1];\n                int64_t temp0_1 = arg3;\n                arg3 = (arg3 - 1);\n                if (temp0_1 == 1)\n                {\n                    return 0;\n                }\n                if ((arg1 & 7) == 0)\n                {\n                    break;\n                }\n            } while (*arg1 != r8);\n            if ((arg1 & 7) != 0)\n            {\n                goto label_407070;\n            }\n        }\n        int64_t r9_5 = ((arg2 << 8) | arg2);\n        int64_t r9_6 = (r9_5 | (r9_5 << 0x10));\n        int64_t r9_7 = (r9_6 | (r9_6 << 0x20));\n        int64_t rax_8;\n        if (arg3 > 7)\n        {\n            rax_8 = (*arg1 ^ r9_7);\n            if ((((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0)\n            {\n                int64_t rax_12;\n                do\n                {\n                    arg3 = (arg3 - 8);\n                    arg1 = &arg1[8];\n                    if (arg3 <= 7)\n                    {\n                        break;\n                    }\n                    rax_12 = (*arg1 ^ r9_7);\n                } while ((((!rax_12) & (rax_12 - 0x101010101010101)) & 0x8080808080808080) == 0);\n            }\n        }\n        if ((((arg3 <= 7 || (arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) != 0)) || (((arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0) && arg3 <= 7) && arg3 != 0)) || ((arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0) && arg3 > 7)))\n        {\n            if (arg2 == *arg1)\n            {\n                goto label_407070;\n            }\n            char* rcx_3 = &arg1[1];\n            void* rdi = &arg1[arg3];\n            while (true)\n            {\n                char* rax_15 = rcx_3;\n                if (rcx_3 == rdi)\n                {\n                    return 0;\n                }\n                rcx_3 = &rcx_3[1];\n                if (rcx_3[-1] == r8)\n                {\n                    return rax_15;\n                }\n            }\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x407080",
            "funcEndAddr": "0x4070dd",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x4070e0",
            "funcEndAddr": "0x4070e1",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_4070f0",
            "funcStartAddr": "0x4070f0",
            "funcEndAddr": "0x407108",
            "decompiledFuncCode": "int64_t sub_4070f0(void (* arg1)(void*))\n{\n    int64_t rdx = data_60a228;\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, rdx);\n}\n\n"
        },
        {
            "funcName": "sub_407108",
            "funcStartAddr": "0x407108",
            "funcEndAddr": "0x407128",
            "decompiledFuncCode": "int64_t sub_407108(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_609e30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}