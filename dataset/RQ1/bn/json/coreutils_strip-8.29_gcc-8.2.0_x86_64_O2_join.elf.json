{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_join.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 156,
    "funcInfo": [
        {
            "funcName": "sub_401560",
            "funcStartAddr": "0x401560",
            "funcEndAddr": "0x40156c",
            "decompiledFuncCode": "int64_t sub_401560()\n{\n    int64_t var_8 = data_60d008;\n    /* jump -> data_60d010 */\n}\n\n"
        },
        {
            "funcName": "sub_401576",
            "funcStartAddr": "0x401576",
            "funcEndAddr": "0x401580",
            "decompiledFuncCode": "int64_t sub_401576()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401586",
            "funcStartAddr": "0x401586",
            "funcEndAddr": "0x401590",
            "decompiledFuncCode": "int64_t sub_401586()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401596",
            "funcStartAddr": "0x401596",
            "funcEndAddr": "0x4015a0",
            "decompiledFuncCode": "int64_t sub_401596()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4015a6",
            "funcStartAddr": "0x4015a6",
            "funcEndAddr": "0x4015b0",
            "decompiledFuncCode": "int64_t sub_4015a6()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4015b6",
            "funcStartAddr": "0x4015b6",
            "funcEndAddr": "0x4015c0",
            "decompiledFuncCode": "int64_t sub_4015b6()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4015c6",
            "funcStartAddr": "0x4015c6",
            "funcEndAddr": "0x4015d0",
            "decompiledFuncCode": "int64_t sub_4015c6()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4015d6",
            "funcStartAddr": "0x4015d6",
            "funcEndAddr": "0x4015e0",
            "decompiledFuncCode": "int64_t sub_4015d6()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4015e6",
            "funcStartAddr": "0x4015e6",
            "funcEndAddr": "0x4015f0",
            "decompiledFuncCode": "int64_t sub_4015e6()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4015f6",
            "funcStartAddr": "0x4015f6",
            "funcEndAddr": "0x401600",
            "decompiledFuncCode": "int64_t sub_4015f6()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401606",
            "funcStartAddr": "0x401606",
            "funcEndAddr": "0x401610",
            "decompiledFuncCode": "int64_t sub_401606()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401616",
            "funcStartAddr": "0x401616",
            "funcEndAddr": "0x401620",
            "decompiledFuncCode": "int64_t sub_401616()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401626",
            "funcStartAddr": "0x401626",
            "funcEndAddr": "0x401630",
            "decompiledFuncCode": "int64_t sub_401626()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401636",
            "funcStartAddr": "0x401636",
            "funcEndAddr": "0x401640",
            "decompiledFuncCode": "int64_t sub_401636()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401646",
            "funcStartAddr": "0x401646",
            "funcEndAddr": "0x401650",
            "decompiledFuncCode": "int64_t sub_401646()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401656",
            "funcStartAddr": "0x401656",
            "funcEndAddr": "0x401660",
            "decompiledFuncCode": "int64_t sub_401656()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401666",
            "funcStartAddr": "0x401666",
            "funcEndAddr": "0x401670",
            "decompiledFuncCode": "int64_t sub_401666()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401676",
            "funcStartAddr": "0x401676",
            "funcEndAddr": "0x401680",
            "decompiledFuncCode": "int64_t sub_401676()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401686",
            "funcStartAddr": "0x401686",
            "funcEndAddr": "0x401690",
            "decompiledFuncCode": "int64_t sub_401686()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401696",
            "funcStartAddr": "0x401696",
            "funcEndAddr": "0x4016a0",
            "decompiledFuncCode": "int64_t sub_401696()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4016a6",
            "funcStartAddr": "0x4016a6",
            "funcEndAddr": "0x4016b0",
            "decompiledFuncCode": "int64_t sub_4016a6()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4016b6",
            "funcStartAddr": "0x4016b6",
            "funcEndAddr": "0x4016c0",
            "decompiledFuncCode": "int64_t sub_4016b6()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4016c6",
            "funcStartAddr": "0x4016c6",
            "funcEndAddr": "0x4016d0",
            "decompiledFuncCode": "int64_t sub_4016c6()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4016d6",
            "funcStartAddr": "0x4016d6",
            "funcEndAddr": "0x4016e0",
            "decompiledFuncCode": "int64_t sub_4016d6()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4016e6",
            "funcStartAddr": "0x4016e6",
            "funcEndAddr": "0x4016f0",
            "decompiledFuncCode": "int64_t sub_4016e6()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4016f6",
            "funcStartAddr": "0x4016f6",
            "funcEndAddr": "0x401700",
            "decompiledFuncCode": "int64_t sub_4016f6()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401706",
            "funcStartAddr": "0x401706",
            "funcEndAddr": "0x401710",
            "decompiledFuncCode": "int64_t sub_401706()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401716",
            "funcStartAddr": "0x401716",
            "funcEndAddr": "0x401720",
            "decompiledFuncCode": "int64_t sub_401716()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401726",
            "funcStartAddr": "0x401726",
            "funcEndAddr": "0x401730",
            "decompiledFuncCode": "int64_t sub_401726()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401736",
            "funcStartAddr": "0x401736",
            "funcEndAddr": "0x401740",
            "decompiledFuncCode": "int64_t sub_401736()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401746",
            "funcStartAddr": "0x401746",
            "funcEndAddr": "0x401750",
            "decompiledFuncCode": "int64_t sub_401746()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401756",
            "funcStartAddr": "0x401756",
            "funcEndAddr": "0x401760",
            "decompiledFuncCode": "int64_t sub_401756()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401766",
            "funcStartAddr": "0x401766",
            "funcEndAddr": "0x401770",
            "decompiledFuncCode": "int64_t sub_401766()\n{\n    int64_t var_8 = 0x1f;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401776",
            "funcStartAddr": "0x401776",
            "funcEndAddr": "0x401780",
            "decompiledFuncCode": "int64_t sub_401776()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401786",
            "funcStartAddr": "0x401786",
            "funcEndAddr": "0x401790",
            "decompiledFuncCode": "int64_t sub_401786()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401796",
            "funcStartAddr": "0x401796",
            "funcEndAddr": "0x4017a0",
            "decompiledFuncCode": "int64_t sub_401796()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4017a6",
            "funcStartAddr": "0x4017a6",
            "funcEndAddr": "0x4017b0",
            "decompiledFuncCode": "int64_t sub_4017a6()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4017b6",
            "funcStartAddr": "0x4017b6",
            "funcEndAddr": "0x4017c0",
            "decompiledFuncCode": "int64_t sub_4017b6()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4017c6",
            "funcStartAddr": "0x4017c6",
            "funcEndAddr": "0x4017d0",
            "decompiledFuncCode": "int64_t sub_4017c6()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4017d6",
            "funcStartAddr": "0x4017d6",
            "funcEndAddr": "0x4017e0",
            "decompiledFuncCode": "int64_t sub_4017d6()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4017e6",
            "funcStartAddr": "0x4017e6",
            "funcEndAddr": "0x4017f0",
            "decompiledFuncCode": "int64_t sub_4017e6()\n{\n    int64_t var_8 = 0x27;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401806",
            "funcStartAddr": "0x401806",
            "funcEndAddr": "0x401810",
            "decompiledFuncCode": "int64_t sub_401806()\n{\n    int64_t var_8 = 0x29;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401826",
            "funcStartAddr": "0x401826",
            "funcEndAddr": "0x401830",
            "decompiledFuncCode": "int64_t sub_401826()\n{\n    int64_t var_8 = 0x2b;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401836",
            "funcStartAddr": "0x401836",
            "funcEndAddr": "0x401840",
            "decompiledFuncCode": "int64_t sub_401836()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401846",
            "funcStartAddr": "0x401846",
            "funcEndAddr": "0x401850",
            "decompiledFuncCode": "int64_t sub_401846()\n{\n    int64_t var_8 = 0x2d;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401856",
            "funcStartAddr": "0x401856",
            "funcEndAddr": "0x401860",
            "decompiledFuncCode": "int64_t sub_401856()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401866",
            "funcStartAddr": "0x401866",
            "funcEndAddr": "0x401870",
            "decompiledFuncCode": "int64_t sub_401866()\n{\n    int64_t var_8 = 0x2f;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401876",
            "funcStartAddr": "0x401876",
            "funcEndAddr": "0x401880",
            "decompiledFuncCode": "int64_t sub_401876()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401886",
            "funcStartAddr": "0x401886",
            "funcEndAddr": "0x401890",
            "decompiledFuncCode": "int64_t sub_401886()\n{\n    int64_t var_8 = 0x31;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401896",
            "funcStartAddr": "0x401896",
            "funcEndAddr": "0x4018a0",
            "decompiledFuncCode": "int64_t sub_401896()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4018a6",
            "funcStartAddr": "0x4018a6",
            "funcEndAddr": "0x4018b0",
            "decompiledFuncCode": "int64_t sub_4018a6()\n{\n    int64_t var_8 = 0x33;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4018b6",
            "funcStartAddr": "0x4018b6",
            "funcEndAddr": "0x4018c0",
            "decompiledFuncCode": "int64_t sub_4018b6()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4018c6",
            "funcStartAddr": "0x4018c6",
            "funcEndAddr": "0x4018d0",
            "decompiledFuncCode": "int64_t sub_4018c6()\n{\n    int64_t var_8 = 0x35;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4018d6",
            "funcStartAddr": "0x4018d6",
            "funcEndAddr": "0x4018e0",
            "decompiledFuncCode": "int64_t sub_4018d6()\n{\n    int64_t var_8 = 0x36;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_4018e6",
            "funcStartAddr": "0x4018e6",
            "funcEndAddr": "0x4018f0",
            "decompiledFuncCode": "int64_t sub_4018e6()\n{\n    int64_t var_8 = 0x37;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "sub_401906",
            "funcStartAddr": "0x401906",
            "funcEndAddr": "0x401910",
            "decompiledFuncCode": "int64_t sub_401906()\n{\n    int64_t var_8 = 0x39;\n    /* tailcall */\n    return sub_401560();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x401940",
            "funcEndAddr": "0x4027e0",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    int64_t rbp = argc;\n    char** rbx = argv;\n    int32_t var_98 = 0;\n    int64_t var_80 = 0;\n    int32_t var_94 = 0;\n    sub_403de0(*argv);\n    setlocale(6, &data_408d08);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    data_60d37e = sub_403be0();\n    sub_4081f0(sub_403a60);\n    sub_4081f0(sub_402af0);\n    data_60d37b = 1;\n    data_60d37a = 0;\n    data_60d378 = 0;\n    data_60d330 = 0;\n    while (true)\n    {\n        int32_t rax_2 = getopt_long(rbp, rbx, \"-a:e:i1:2:j:o:t:v:z\", &data_408ec0, nullptr);\n        int32_t rax_63;\n        int32_t var_9c;\n        void var_88;\n        uint64_t var_58;\n        int64_t r12_1;\n        if (rax_2 == 0xffffffff)\n        {\n            int64_t rax_13 = data_60d29c;\n            var_98 = 0;\n            if (rbp > rax_13)\n            {\n                do\n                {\n                    int64_t rdi_13 = rbx[rax_13];\n                    data_60d29c = (rax_13 + 1);\n                    sub_4038b0(rdi_13, &var_88, &var_80, &var_94, &var_98, &var_9c);\n                    rax_13 = data_60d29c;\n                } while (rax_13 < rbp);\n            }\n            rax_63 = var_94;\n            if (rax_63 == 2)\n            {\n                if (var_80 != 0)\n                {\n                    sub_4028c0(&data_60d228, 0);\n                    rbp = sub_4028c0(&data_60d220, 0);\n                }\n                if (*var_80[4] != 0)\n                {\n                    sub_4028c0(&data_60d228, 1);\n                    rbp = sub_4028c0(&data_60d220, 1);\n                }\n                if (data_60d228 == -1)\n                {\n                    data_60d228 = 0;\n                }\n                if (data_60d220 == -1)\n                {\n                    data_60d220 = 0;\n                }\n                char* rbx_1 = data_60d390;\n                r12_1 = stdin;\n                if (strcmp(rbx_1, &data_40a61a) != 0)\n                {\n                    r12_1 = sub_403b40(rbx_1, &data_408e94);\n                }\n                if (r12_1 == 0)\n                {\n                    rbx = sub_405880(0, 3, data_60d390);\n                    error(1, *__errno_location(), \"%s\", rbx);\n                label_4026a1:\n                    error(0, 0, dcgettext(nullptr, \"missing operand after %s\", 5), sub_405a00(rbx[(rbp - 1)]));\n                    break;\n                }\n                char* rbx_2 = data_60d398;\n                rbp = stdin;\n                if (strcmp(rbx_2, &data_40a61a) != 0)\n                {\n                    rbp = sub_403b40(rbx_2, &data_408e94);\n                }\n                if (rbp == 0)\n                {\n                    error(1, *__errno_location(), \"%s\", sub_405880(0, 3, data_60d398));\n                label_40271e:\n                    error(1, 0, dcgettext(nullptr, \"conflicting empty-field replacem\u2026\", 5));\n                label_402726:\n                    error(1, 0, dcgettext(nullptr, \"multi-character tab %s\", 5), sub_405a00(r12_1));\n                label_402770:\n                    error(1, 0, dcgettext(nullptr, \"incompatible tabs\", 5));\n                label_402783:\n                    error(1, *__errno_location(), \"%s\", sub_405880(0, 3, data_60d398));\n                label_4027b4:\n                    void (* rdx_37)();\n                    int64_t rsi_36;\n                    int64_t rdi_46;\n                    rdx_37 = error(1, *__errno_location(), \"%s\", sub_405880(0, 3, data_60d390));\n                    /* tailcall */\n                    return _start(rdi_46, rsi_36, rdx_37);\n                }\n                if (r12_1 == rbp)\n                {\n                    goto label_40262a;\n                }\n                sub_403b10(r12_1, 2);\n                sub_403b10(rbp, 2);\n                int64_t var_78 = 0;\n                int64_t var_70 = 0;\n                void** var_68 = nullptr;\n                sub_403400(r12_1, &var_78, 1);\n                var_58 = 0;\n                int64_t var_50 = 0;\n                void** var_48 = nullptr;\n                sub_403400(rbp, &var_58, 2);\n                if (data_60d368 != 0)\n                {\n                    int64_t rax_16 = var_78;\n                    if (rax_16 != 0)\n                    {\n                        rax_16 = *(*var_68 + 0x18);\n                    }\n                    data_60d360 = rax_16;\n                    uint64_t rax_19 = var_58;\n                    if (rax_19 != 0)\n                    {\n                        rax_19 = *(*var_48 + 0x18);\n                    }\n                    data_60d358 = rax_19;\n                }\n                int64_t rax_22;\n                if (data_60d2e0 != 0)\n                {\n                    uint64_t rax_44 = var_58;\n                    void* rsi_23;\n                    void* rdi_32;\n                    if (var_78 != 0)\n                    {\n                        rsi_23 = &data_60d300;\n                        rdi_32 = *var_68;\n                    }\n                    if ((var_78 == 0 && rax_44 != 0))\n                    {\n                        rdi_32 = &data_60d300;\n                    }\n                    if (((var_78 == 0 && rax_44 != 0) || (var_78 != 0 && rax_44 != 0)))\n                    {\n                        rsi_23 = *var_48;\n                    }\n                    if ((((var_78 == 0 && rax_44 != 0) || (var_78 != 0 && rax_44 != 0)) || (var_78 != 0 && rax_44 == 0)))\n                    {\n                        sub_402e10(rdi_32, rsi_23);\n                        bool cond:7_1 = var_78 != 0;\n                        data_60d3b0 = 0;\n                        data_60d3b8 = 0;\n                        if (cond:7_1)\n                        {\n                            var_78 = 0;\n                            sub_403400(r12_1, &var_78, 1);\n                        }\n                        if (var_58 != 0)\n                        {\n                            var_58 = 0;\n                            sub_403400(rbp, &var_58, 2);\n                        }\n                        goto label_401f50;\n                    }\n                    if ((var_78 == 0 && rax_44 == 0))\n                    {\n                    label_401fe8:\n                        rax_22 = 0;\n                    }\n                }\n                else\n                {\n                label_401f50:\n                    while (true)\n                    {\n                        rax_22 = var_78;\n                        if (rax_22 == 0)\n                        {\n                            break;\n                        }\n                        int32_t rax_26;\n                        while (var_58 != 0)\n                        {\n                            void* rdx_10 = *var_48;\n                            void* rax_25 = *var_68;\n                            rax_26 = sub_402b90(*(rax_25 + 0x18), (rax_25 + 0x28), *(rdx_10 + 0x18), (rdx_10 + 0x28), data_60d228, data_60d220);\n                            bool cond:8_1 = rax_26 == 0;\n                            if (rax_26 < 0)\n                            {\n                                if (data_60d37d != 0)\n                                {\n                                    sub_402e10(*var_68, &data_60d300);\n                                }\n                                var_78 = 0;\n                                sub_403400(r12_1, &var_78, 1);\n                                data_60d37a = 1;\n                                break;\n                            }\n                            if (cond:8_1)\n                            {\n                                char r15_1;\n                                while (true)\n                                {\n                                    if (sub_403400(r12_1, &var_78, 1) == 0)\n                                    {\n                                        var_78 = (var_78 + 1);\n                                        r15_1 = 1;\n                                        break;\n                                    }\n                                    void* rdx_12 = *var_48;\n                                    void* rax_33 = var_68[(var_78 - 1)];\n                                    if (sub_402b90(*(rax_33 + 0x18), (rax_33 + 0x28), *(rdx_12 + 0x18), (rdx_12 + 0x28), data_60d228, data_60d220) != 0)\n                                    {\n                                        r15_1 = 0;\n                                        break;\n                                    }\n                                }\n                                char var_a9_1;\n                                while (true)\n                                {\n                                    if (sub_403400(rbp, &var_58, 2) == 0)\n                                    {\n                                        var_58 = (var_58 + 1);\n                                        var_a9_1 = 1;\n                                        break;\n                                    }\n                                    void* rdx_15 = var_48[(var_58 - 1)];\n                                    void* rax_38 = *var_68;\n                                    if (sub_402b90(*(rax_38 + 0x18), (rax_38 + 0x28), *(rdx_15 + 0x18), (rdx_15 + 0x28), data_60d228, data_60d220) != 0)\n                                    {\n                                        var_a9_1 = 0;\n                                        break;\n                                    }\n                                }\n                                if (data_60d37b != 0)\n                                {\n                                    int64_t r13_2 = 0;\n                                    if (var_78 != 1)\n                                    {\n                                        do\n                                        {\n                                            int64_t r14_1 = 0;\n                                            int64_t rbx_3 = (r13_2 << 3);\n                                            if (var_58 != 1)\n                                            {\n                                                do\n                                                {\n                                                    void* rsi_26 = var_48[r14_1];\n                                                    r14_1 = (r14_1 + 1);\n                                                    sub_402e10(*(var_68 + rbx_3), rsi_26);\n                                                } while (r14_1 < (var_58 - 1));\n                                            }\n                                            r13_2 = (r13_2 + 1);\n                                        } while (r13_2 < (var_78 - 1));\n                                    }\n                                }\n                                if (r15_1 != 0)\n                                {\n                                    var_78 = 0;\n                                }\n                                else\n                                {\n                                    void** rax_41 = var_68;\n                                    void** rdx_18 = &rax_41[(var_78 - 1)];\n                                    void* rcx_10 = *rax_41;\n                                    *rax_41 = *rdx_18;\n                                    *rdx_18 = rcx_10;\n                                    var_78 = 1;\n                                }\n                                if (var_a9_1 != 0)\n                                {\n                                    var_58 = 0;\n                                    break;\n                                }\n                                void** rax_42 = var_48;\n                                void** rdx_20 = &rax_42[(var_58 - 1)];\n                                void* rcx_11 = *rax_42;\n                                *rax_42 = *rdx_20;\n                                *rdx_20 = rcx_11;\n                                var_58 = 1;\n                                break;\n                            }\n                            if (data_60d37c != 0)\n                            {\n                                sub_402e10(&data_60d300, *var_48);\n                            }\n                            var_58 = 0;\n                            sub_403400(rbp, &var_58, 2);\n                            rax_22 = var_78;\n                            data_60d37a = 1;\n                            if (rax_22 == 0)\n                            {\n                                break;\n                            }\n                        }\n                        if (var_58 == 0)\n                        {\n                            break;\n                        }\n                        if ((!(var_58 != 0 && rax_26 < 0)))\n                        {\n                            break;\n                        }\n                        if ((!(var_58 != 0 && rax_26 < 0)))\n                        {\n                            /* nop */\n                        }\n                    }\n                    if (rax_22 == 0)\n                    {\n                        goto label_401fe8;\n                    }\n                }\n                void* var_90 = nullptr;\n                char rax_27;\n                char r13_1;\n                if (((*data_60d378 == 0 || (*data_60d378 != 0 && *(data_60d378 + 1) == 0)) && data_60d330 != 2))\n                {\n                    if (rax_22 == 0)\n                    {\n                        rax_27 = data_60d37c;\n                    }\n                    else\n                    {\n                        r13_1 = data_60d37d;\n                        if (r13_1 != 0)\n                        {\n                            goto label_402586;\n                        }\n                        r13_1 = 1;\n                    }\n                }\n                if (((data_60d330 == 2 || ((data_60d330 != 2 && *data_60d378 != 0) && *(data_60d378 + 1) != 0)) && data_60d37d == 0))\n                {\n                label_402023:\n                    rax_27 = data_60d37c;\n                    if (rax_27 == 0)\n                    {\n                        goto label_402032;\n                    }\n                }\n                if (((((data_60d330 != 2 && (*data_60d378 == 0 || (*data_60d378 != 0 && *(data_60d378 + 1) == 0))) && rax_22 == 0) || ((data_60d330 == 2 || ((data_60d330 != 2 && *data_60d378 != 0) && *(data_60d378 + 1) != 0)) && data_60d37d == 0)) && var_58 == 0))\n                {\n                    goto label_402032;\n                }\n                if (((data_60d330 == 2 || ((data_60d330 != 2 && *data_60d378 != 0) && *(data_60d378 + 1) != 0)) && data_60d37d != 0))\n                {\n                    if (rax_22 == 0)\n                    {\n                        goto label_402023;\n                    }\n                    r13_1 = 0;\n                label_402586:\n                    sub_402e10(*var_68, &data_60d300);\n                }\n                if ((((data_60d330 == 2 || ((data_60d330 != 2 && *data_60d378 != 0) && *(data_60d378 + 1) != 0)) && data_60d37d != 0) || ((data_60d330 != 2 && (*data_60d378 == 0 || (*data_60d378 != 0 && *(data_60d378 + 1) == 0))) && rax_22 != 0)))\n                {\n                    if (var_58 == 0)\n                    {\n                        goto label_4023cb;\n                    }\n                    data_60d37a = 1;\n                label_4023cb:\n                    while (true)\n                    {\n                        if (sub_403040(r12_1, &var_90, 1) == 0)\n                        {\n                            break;\n                        }\n                        if (data_60d37d == 0)\n                        {\n                            if (*data_60d378 != 0)\n                            {\n                                break;\n                            }\n                        }\n                        else\n                        {\n                            sub_402e10(var_90, &data_60d300);\n                            if (*data_60d378 != 0)\n                            {\n                                if (data_60d37d == 0)\n                                {\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    rax_27 = data_60d37c;\n                    if ((rax_27 == 0 && r13_1 == 0))\n                    {\n                    label_402406:\n                        void* rdi_22 = var_90;\n                        if (rdi_22 != 0)\n                        {\n                            sub_402ac0(rdi_22);\n                        label_402032:\n                            rdi_22 = var_90;\n                        }\n                        free(rdi_22);\n                        sub_402b40(&var_70, &var_68);\n                        sub_402b40(&var_50, &var_48);\n                        if (sub_406810(r12_1) != 0)\n                        {\n                            goto label_4027b4;\n                        }\n                        if (sub_406810(rbp) == 0)\n                        {\n                            uint32_t rax_30;\n                            if (*data_60d378 != 0)\n                            {\n                                rax_30 = 1;\n                            }\n                            else\n                            {\n                                rax_30 = *(data_60d378 + 1);\n                            }\n                            return rax_30;\n                        }\n                        goto label_402783;\n                    }\n                    if (var_58 == 0)\n                    {\n                        goto label_402406;\n                    }\n                }\n                if ((((((data_60d330 != 2 && (*data_60d378 == 0 || (*data_60d378 != 0 && *(data_60d378 + 1) == 0))) && rax_22 == 0) || ((data_60d330 == 2 || ((data_60d330 != 2 && *data_60d378 != 0) && *(data_60d378 + 1) != 0)) && data_60d37d == 0)) && var_58 != 0) || ((((data_60d330 == 2 || ((data_60d330 != 2 && *data_60d378 != 0) && *(data_60d378 + 1) != 0)) && data_60d37d != 0) || ((data_60d330 != 2 && (*data_60d378 == 0 || (*data_60d378 != 0 && *(data_60d378 + 1) == 0))) && rax_22 != 0)) && var_58 != 0)))\n                {\n                    if (rax_27 != 0)\n                    {\n                        sub_402e10(&data_60d300, *var_48);\n                    }\n                    if (var_78 == 0)\n                    {\n                        goto label_4024db;\n                    }\n                    data_60d37a = 1;\n                label_4024db:\n                    while (true)\n                    {\n                        if (sub_403040(rbp, &var_90, 2) == 0)\n                        {\n                            break;\n                        }\n                        if (data_60d37c == 0)\n                        {\n                            if (*(data_60d378 + 1) != 0)\n                            {\n                                break;\n                            }\n                        }\n                        else\n                        {\n                            sub_402e10(&data_60d300, var_90);\n                            if (*(data_60d378 + 1) != 0)\n                            {\n                                if (data_60d37c == 0)\n                                {\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    goto label_402406;\n                }\n            }\n        }\n        else\n        {\n            var_9c = 0;\n            bool cond:0_1 = rax_2 <= 0x69;\n            int32_t rax_1;\n            if (rax_2 == 0x69)\n            {\n                data_60d2e1 = 1;\n                rax_1 = 0;\n            label_401a00:\n                var_98 = rax_1;\n                continue;\n            }\n            else\n            {\n                if (cond:0_1)\n                {\n                    bool cond:1_1 = rax_2 <= 0x31;\n                    if (rax_2 == 0x31)\n                    {\n                        rbp = sub_4028c0(&data_60d228, sub_402910(data_60d560));\n                        rax_1 = var_9c;\n                        goto label_401a00;\n                    }\n                    if (cond:1_1)\n                    {\n                        if (rax_2 == 0xffffff7e)\n                        {\n                            sub_4034f0(0);\n                            /* no return */\n                        }\n                        if (rax_2 != 1)\n                        {\n                            if (rax_2 == 0xffffff7d)\n                            {\n                                sub_405e90(stdout, \"join\", \"GNU coreutils\", data_60d230);\n                                exit(0);\n                                /* no return */\n                            }\n                            break;\n                        }\n                        sub_4038b0(data_60d560, &var_88, &var_80, &var_94, &var_98, &var_9c);\n                        rax_1 = var_9c;\n                        goto label_401a00;\n                    }\n                    if (rax_2 != 0x61)\n                    {\n                        if (rax_2 == 0x65)\n                        {\n                            char* rdi_3 = data_60d370;\n                            r12_1 = data_60d560;\n                            if ((rdi_3 != 0 && strcmp(rdi_3, r12_1) != 0))\n                            {\n                                goto label_40271e;\n                            }\n                            data_60d370 = r12_1;\n                            rax_1 = 0;\n                            goto label_401a00;\n                        }\n                        if (rax_2 != 0x32)\n                        {\n                            break;\n                        }\n                        rbp = sub_4028c0(&data_60d220, sub_402910(data_60d560));\n                        rax_1 = var_9c;\n                        goto label_401a00;\n                    }\n                }\n                else\n                {\n                    bool cond:2_1 = rax_2 <= 0x76;\n                    if (rax_2 != 0x76)\n                    {\n                        if (cond:2_1)\n                        {\n                            bool c_1 = rax_2 < 0x6f;\n                            bool z_1 = rax_2 == 0x6f;\n                            if ((!z_1))\n                            {\n                                if (rax_2 == 0x74)\n                                {\n                                    r12_1 = data_60d560;\n                                    uint32_t rax_3 = *r12_1;\n                                    if (rax_3 == 0)\n                                    {\n                                        rax_3 = 0xa;\n                                    label_401abb:\n                                        int32_t rdx = data_60d214;\n                                        if (rdx < 0)\n                                        {\n                                        label_401acd:\n                                            data_60d214 = rax_3;\n                                            rax_1 = 0;\n                                            goto label_401a00;\n                                        }\n                                        if (rdx == rax_3)\n                                        {\n                                            goto label_401acd;\n                                        }\n                                        goto label_402770;\n                                    }\n                                    if (*(r12_1 + 1) == 0)\n                                    {\n                                        goto label_401abb;\n                                    }\n                                    if (strcmp(r12_1, &data_408def) != 0)\n                                    {\n                                        goto label_402726;\n                                    }\n                                    rax_3 = 0;\n                                    goto label_401abb;\n                                }\n                                if (rax_2 != 0x6a)\n                                {\n                                    break;\n                                }\n                                int64_t rdi_5 = data_60d560;\n                                char rax_5 = *rdi_5;\n                                if (((rax_5 - 0x31) <= 1 && (*(rdi_5 + 1) == 0 && rdi_5 == &rbx[(data_60d29c - 1)][2])))\n                                {\n                                    int64_t rdx_21;\n                                    rdx_21 = rax_5 == 0x32;\n                                    *(&var_80 + (rdx_21 << 2)) = (*(&var_80 + (rdx_21 << 2)) + 1);\n                                    rax_1 = (rdx_21 + 1);\n                                    var_9c = rax_1;\n                                    goto label_401a00;\n                                }\n                                sub_4028c0(&data_60d228, sub_402910(rdi_5));\n                                rbp = sub_4028c0(&data_60d220, data_60d228);\n                            label_401be9:\n                                rax_1 = var_9c;\n                                goto label_401a00;\n                            }\n                            int64_t rdx_7 = data_60d560;\n                            char const* const rdi_8 = \"auto\";\n                            int64_t rcx_4 = 5;\n                            int64_t rsi_5 = rdx_7;\n                            while (rcx_4 != 0)\n                            {\n                                char temp0_1 = *rsi_5;\n                                char const temp1_1 = *rdi_8;\n                                c_1 = temp0_1 < temp1_1;\n                                z_1 = temp0_1 == temp1_1;\n                                rsi_5 = (rsi_5 + 1);\n                                rdi_8 = &rdi_8[1];\n                                rcx_4 = (rcx_4 - 1);\n                                if ((!z_1))\n                                {\n                                    break;\n                                }\n                            }\n                            rax_2 = ((!z_1) && (!c_1));\n                            rax_2 = (rax_2 - 0);\n                            rax_1 = rax_2;\n                            if (rax_1 != 0)\n                            {\n                                sub_402990(rdx_7);\n                                var_9c = 3;\n                                rax_1 = 3;\n                            }\n                            else\n                            {\n                                data_60d368 = 1;\n                            }\n                            goto label_401a00;\n                        }\n                        bool cond:5_1 = rax_2 <= 0x80;\n                        if (rax_2 == 0x80)\n                        {\n                            data_60d330 = 1;\n                            rax_1 = 0;\n                        }\n                        else if (cond:5_1)\n                        {\n                            if (rax_2 != 0x7a)\n                            {\n                                break;\n                            }\n                            data_60d210 = 0;\n                            rax_1 = 0;\n                        }\n                        else if (rax_2 == 0x81)\n                        {\n                            data_60d330 = 2;\n                            rax_1 = 0;\n                        }\n                        else\n                        {\n                            if (rax_2 != 0x82)\n                            {\n                                break;\n                            }\n                            data_60d2e0 = 1;\n                            rax_1 = 0;\n                        }\n                        goto label_401a00;\n                    }\n                    data_60d37b = 0;\n                }\n                if (sub_4063e0(data_60d560, nullptr, 0xa, &var_58, &data_408d08) == 0)\n                {\n                    uint64_t rax_9 = var_58;\n                    if ((rax_9 - 1) <= 1)\n                    {\n                        if (rax_9 == 1)\n                        {\n                            data_60d37d = 1;\n                        }\n                        else\n                        {\n                            data_60d37c = 1;\n                        }\n                        goto label_401be9;\n                    }\n                }\n                error(1, 0, dcgettext(nullptr, \"invalid field number: %s\", 5), sub_405a00(data_60d560));\n            label_40262a:\n                rbx = dcgettext(nullptr, \"both files cannot be standard in\u2026\", 5);\n                rax_63 = error(1, *__errno_location(), rbx);\n            }\n        }\n        if (rax_63 == 0)\n        {\n            error(0, 0, dcgettext(nullptr, \"missing operand\", 5));\n            break;\n        }\n        goto label_4026a1;\n    }\n    sub_4034f0(1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x4027e0",
            "funcEndAddr": "0x40280a",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_40280b",
            "funcStartAddr": "0x40280b",
            "funcEndAddr": "0x40282a",
            "decompiledFuncCode": "void sub_40280b()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_40282a",
            "funcStartAddr": "0x40282a",
            "funcEndAddr": "0x402861",
            "decompiledFuncCode": "int64_t sub_40282a()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_402861",
            "funcStartAddr": "0x402861",
            "funcEndAddr": "0x4028b8",
            "decompiledFuncCode": "void sub_402861()\n{\n    if (data_60d2c8 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_60d2d0;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_60d2d0 = (rax_1 + 1);\n        *(0x60ce40 + ((rax_1 + 1) << 3))();\n    }\n    sub_40280b();\n    data_60d2c8 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_4028b8",
            "funcStartAddr": "0x4028b8",
            "funcEndAddr": "0x4028bd",
            "decompiledFuncCode": "int64_t j_sub_40282a()\n{\n    /* tailcall */\n    return sub_40282a();\n}\n\n"
        },
        {
            "funcName": "sub_4028c0",
            "funcStartAddr": "0x4028c0",
            "funcEndAddr": "0x402910",
            "decompiledFuncCode": "void sub_4028c0(int64_t* arg1, int64_t arg2)\n{\n    int64_t rbx = *arg1;\n    if ((rbx != -1 && rbx != arg2))\n    {\n        /* tailcall */\n        return sub_402910(error(1, 0, dcgettext(nullptr, \"incompatible join fields %lu, %l\u2026\", 5), (rbx + 1), (arg2 + 1)));\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_402910",
            "funcStartAddr": "0x402910",
            "funcEndAddr": "0x402990",
            "decompiledFuncCode": "int64_t sub_402910(char* arg1)\n{\n    int64_t var_10;\n    int32_t rax = sub_4063e0(arg1, nullptr, 0xa, &var_10, &data_408d08);\n    if (rax == 1)\n    {\n        return -2;\n    }\n    if (rax == 0)\n    {\n        int64_t rax_1 = var_10;\n        if (rax_1 != 0)\n        {\n            return (rax_1 - 1);\n        }\n    }\n    void* rdi_1 = error(1, 0, dcgettext(nullptr, \"invalid field number: %s\", 5), sub_405a00(arg1));\n    /* tailcall */\n    return sub_402990(rdi_1);\n}\n\n"
        },
        {
            "funcName": "sub_402990",
            "funcStartAddr": "0x402990",
            "funcEndAddr": "0x402ac0",
            "decompiledFuncCode": "int32_t* sub_402990(void* arg1)\n{\n    void* rbp = arg1;\n    int32_t* rax_1;\n    while (true)\n    {\n        void* r12_1 = nullptr;\n        char* rax_2 = strpbrk(rbp, &data_408d05);\n        if (rax_2 != 0)\n        {\n            *rax_2 = 0;\n            r12_1 = &rax_2[1];\n        }\n        int32_t rax_3 = *rbp;\n        bool cond:0_1 = rax_3 < 0x30;\n        int32_t rbx_1;\n        int64_t rbp_1;\n        if ((rax_3 == 0x30 && *(rbp + 1) == 0))\n        {\n            rbp_1 = 0;\n            rbx_1 = 0;\n        }\n        if ((rax_3 != 0x30 && (cond:0_1 || ((!cond:0_1) && rax_3 > 0x32))))\n        {\n            error(1, 0, dcgettext(nullptr, \"invalid file number in field spe\u2026\", 5), sub_405a00(rbp));\n        }\n        if (((rax_3 != 0x30 && (cond:0_1 || ((!cond:0_1) && rax_3 > 0x32))) || (rax_3 == 0x30 && *(rbp + 1) != 0)))\n        {\n            error(1, 0, dcgettext(nullptr, \"invalid field specifier: %s\", 5), sub_405a00(rbp));\n        label_402a90:\n            void* rdi_5 = error(1, 0, dcgettext(nullptr, \"invalid field specifier: %s\", 5), sub_405a00(rbp));\n            /* tailcall */\n            return sub_402ac0(rdi_5);\n        }\n        if (((rax_3 != 0x30 && (!cond:0_1)) && rax_3 <= 0x32))\n        {\n            if (*(rbp + 1) != 0x2e)\n            {\n                goto label_402a90;\n            }\n            rbx_1 = (rax_3 - 0x30);\n            rbp_1 = sub_402910((rbp + 2));\n        }\n        if (((rax_3 == 0x30 && *(rbp + 1) == 0) || ((rax_3 != 0x30 && (!cond:0_1)) && rax_3 <= 0x32)))\n        {\n            rax_1 = sub_405fd0(0x18);\n            int64_t rdx_1 = data_60d218;\n            *rax_1 = rbx_1;\n            *(rax_1 + 8) = rbp_1;\n            *(rax_1 + 0x10) = 0;\n            data_60d218 = rax_1;\n            *(rdx_1 + 0x10) = rax_1;\n            if (r12_1 == 0)\n            {\n                break;\n            }\n            rbp = r12_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_402ac0",
            "funcStartAddr": "0x402ac0",
            "funcEndAddr": "0x402ae8",
            "decompiledFuncCode": "int64_t sub_402ac0(void* arg1)\n{\n    free(*(arg1 + 0x28));\n    *(arg1 + 0x28) = 0;\n    int64_t rax = free(*(arg1 + 0x10));\n    *(arg1 + 0x10) = 0;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_402af0",
            "funcStartAddr": "0x402af0",
            "funcEndAddr": "0x402b32",
            "decompiledFuncCode": "void sub_402af0(void* arg1)\n{\n    void* rbx = data_60d380;\n    if (rbx != 0)\n    {\n        sub_402ac0(rbx);\n        free(rbx);\n    }\n    void* rbx_1 = data_60d388;\n    if (rbx_1 == 0)\n    {\n        return;\n    }\n    sub_402ac0(rbx_1);\n    /* tailcall */\n    return free(rbx_1);\n}\n\n"
        },
        {
            "funcName": "sub_402b40",
            "funcStartAddr": "0x402b40",
            "funcEndAddr": "0x402b8e",
            "decompiledFuncCode": "int64_t sub_402b40(int64_t* arg1, int64_t* arg2)\n{\n    int64_t rbx = 0;\n    if (*arg1 != 0)\n    {\n        do\n        {\n            void* rdi = *(*arg2 + (rbx << 3));\n            if (rdi != 0)\n            {\n                sub_402ac0(rdi);\n                rdi = *(*arg2 + (rbx << 3));\n            }\n            free(rdi);\n            rbx = (rbx + 1);\n        } while (rbx < *arg1);\n    }\n    /* tailcall */\n    return free(*arg2);\n}\n\n"
        },
        {
            "funcName": "sub_402b90",
            "funcStartAddr": "0x402b90",
            "funcEndAddr": "0x402c88",
            "decompiledFuncCode": "uint64_t sub_402b90(int64_t arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t arg5, int64_t arg6)\n{\n    uint64_t rbx_1;\n    if (arg5 < arg1)\n    {\n        int64_t* r8_1 = ((arg5 << 4) + *arg2);\n        char* rdi = *r8_1;\n        uint64_t rbp_1 = r8_1[1];\n        uint64_t rax;\n        if (arg6 < arg3)\n        {\n            int64_t* r9_3 = ((arg6 << 4) + *arg4);\n            char* rsi = *r9_3;\n            rbx_1 = r9_3[1];\n            if (rbp_1 != 0)\n            {\n                if (rbx_1 == 0)\n                {\n                    rax = 1;\n                }\n                else\n                {\n                    if (data_60d2e1 != 0)\n                    {\n                        uint64_t rdx = rbx_1;\n                        if (rbp_1 <= rbx_1)\n                        {\n                            rdx = rbp_1;\n                        }\n                        rax = sub_403d90(rdi, rsi, rdx);\n                    }\n                    else\n                    {\n                        if (data_60d37e != 0)\n                        {\n                            /* tailcall */\n                            return sub_406320(rdi, rbp_1, rsi, rbx_1);\n                        }\n                        uint64_t rdx_1 = rbx_1;\n                        if (rbp_1 <= rbx_1)\n                        {\n                            rdx_1 = rbp_1;\n                        }\n                        rax = memcmp(rdi, rsi, rdx_1);\n                    }\n                    if (rax == 0)\n                    {\n                        bool cond:2_1 = rbp_1 != rbx_1;\n                        if (rbp_1 >= rbx_1)\n                        {\n                            rax = cond:2_1;\n                            return rax;\n                        }\n                        rax = 0xffffffff;\n                    }\n                }\n            }\n        }\n        else\n        {\n            rax = rbp_1 != 0;\n        }\n        if ((arg6 >= arg3 || (arg6 < arg3 && rbp_1 != 0)))\n        {\n            return rax;\n        }\n    }\n    else\n    {\n        if (arg6 >= arg3)\n        {\n            return 0;\n        }\n        rbx_1 = *(((arg6 << 4) + *arg4) + 8);\n    }\n    int32_t rax_1;\n    rax_1 = rbx_1 != 0;\n    return (-rax_1);\n}\n\n"
        },
        {
            "funcName": "sub_402c90",
            "funcStartAddr": "0x402c90",
            "funcEndAddr": "0x402ce1",
            "decompiledFuncCode": "void sub_402c90(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 < arg2)\n    {\n        int64_t* rdi_1 = ((arg1 << 4) + *arg3);\n        uint64_t rdx = rdi_1[1];\n        if (rdx != 0)\n        {\n            /* tailcall */\n            return fwrite_unlocked(*rdi_1, 1, rdx, stdout);\n        }\n    }\n    int64_t rdi_4 = data_60d370;\n    if (rdi_4 == 0)\n    {\n        return;\n    }\n    /* tailcall */\n    return fputs_unlocked(rdi_4, stdout);\n}\n\n"
        },
        {
            "funcName": "sub_402cf0",
            "funcStartAddr": "0x402cf0",
            "funcEndAddr": "0x402e0a",
            "decompiledFuncCode": "uint64_t sub_402cf0(void* arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t r12 = arg3;\n    if (data_60d368 == 0)\n    {\n        r12 = *(arg1 + 0x18);\n    }\n    int32_t r14 = data_60d214;\n    if (r14 < 0)\n    {\n        r14 = 0x20;\n    }\n    int64_t r13 = arg2;\n    char rax_1 = r14;\n    char rbp = r14;\n    if (r12 <= arg2)\n    {\n        r13 = r12;\n    }\n    uint64_t rax_2 = rax_1;\n    void* r14_1 = (arg1 + 0x28);\n    int64_t rbx = 0;\n    int32_t var_3c = rax_2;\n    if (r13 != 0)\n    {\n        do\n        {\n            uint64_t* const rdi = stdout;\n            char* rax_3 = stdout[5];\n            if (rax_3 >= stdout[6])\n            {\n                __overflow(rdi, var_3c);\n            }\n            else\n            {\n                stdout[5] = &rax_3[1];\n                *rax_3 = rbp;\n            }\n            int64_t rdi_1 = rbx;\n            rbx = (rbx + 1);\n            rax_2 = sub_402c90(rdi_1, *(arg1 + 0x18), r14_1);\n        } while (rbx != r13);\n    }\n    void* r13_1 = (arg1 + 0x28);\n    uint32_t r14_3 = rbp;\n    int64_t rbx_2 = (arg2 + 1);\n    if (r12 > rbx_2)\n    {\n        do\n        {\n            FILE* rdi_2 = stdout;\n            char* rax_4 = stdout[5];\n            if (rax_4 >= stdout[6])\n            {\n                __overflow(rdi_2, r14_3);\n            }\n            else\n            {\n                stdout[5] = &rax_4[1];\n                *rax_4 = rbp;\n            }\n            int64_t rdi_3 = rbx_2;\n            rbx_2 = (rbx_2 + 1);\n            rax_2 = sub_402c90(rdi_3, *(arg1 + 0x18), r13_1);\n        } while (r12 != rbx_2);\n    }\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_402e10",
            "funcStartAddr": "0x402e10",
            "funcEndAddr": "0x402f77",
            "decompiledFuncCode": "char* sub_402e10(void* arg1, void* arg2)\n{\n    int32_t r12 = data_60d214;\n    int32_t* rbx = data_60d350;\n    if (r12 < 0)\n    {\n        r12 = 0x20;\n    }\n    if (rbx != 0)\n    {\n        while (true)\n        {\n            int32_t rax_3 = *rbx;\n            void* rax_1;\n            int64_t rdi;\n            if (rax_3 == 0)\n            {\n                rdi = data_60d228;\n                rax_1 = arg1;\n                if (arg1 == 0x60d300)\n                {\n                    rdi = data_60d220;\n                    rax_1 = arg2;\n                }\n            }\n            else\n            {\n                rax_1 = arg2;\n                rdi = *(rbx + 8);\n                if (rax_3 == 1)\n                {\n                    rax_1 = arg1;\n                }\n            }\n            sub_402c90(rdi, *(rax_1 + 0x18), (rax_1 + 0x28));\n            rbx = *(rbx + 0x10);\n            if (rbx == 0)\n            {\n                break;\n            }\n            FILE* rdi_1 = stdout;\n            char* rax_2 = stdout[5];\n            if (rax_2 >= stdout[6])\n            {\n                __overflow(rdi_1, r12);\n            }\n            else\n            {\n                stdout[5] = &rax_2[1];\n                *rax_2 = r12;\n            }\n        }\n    }\n    else\n    {\n        int64_t rdi_2 = data_60d228;\n        void* rax_4 = arg1;\n        if (arg1 == 0x60d300)\n        {\n            rdi_2 = data_60d220;\n            rax_4 = arg2;\n        }\n        sub_402c90(rdi_2, *(rax_4 + 0x18), (rax_4 + 0x28));\n        sub_402cf0(arg1, data_60d228, data_60d360);\n        sub_402cf0(arg2, data_60d220, data_60d358);\n    }\n    uint64_t* const rdi_5 = stdout;\n    char rdx_6 = data_60d210;\n    char* rax_5 = stdout[5];\n    if (rax_5 >= stdout[6])\n    {\n        /* tailcall */\n        return __overflow(rdi_5, rdx_6);\n    }\n    stdout[5] = &rax_5[1];\n    *rax_5 = rdx_6;\n    return rax_5;\n}\n\n"
        },
        {
            "funcName": "sub_402f80",
            "funcStartAddr": "0x402f80",
            "funcEndAddr": "0x403034",
            "decompiledFuncCode": "int64_t* sub_402f80(void* arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t rcx = *(arg1 + 0x18);\n    int64_t rdi = *(arg1 + 0x20);\n    void* rax = *(arg1 + 0x28);\n    if (rcx >= rdi)\n    {\n        uint64_t rsi_1;\n        if (rax != 0)\n        {\n            if (rdi > 0x555555555555554)\n            {\n            label_403020:\n                sub_406220();\n                /* no return */\n            }\n            rdi = ((rdi + (rdi >> 1)) + 1);\n            rsi_1 = (rdi << 4);\n            goto label_402fe6;\n        }\n        if (rdi != 0)\n        {\n            uint64_t rdx_3;\n            rdx_3 = (rdi >> 0x3c) != 0;\n            rsi_1 = (rdi << 4);\n            uint64_t rdx_4 = rdx_3;\n            if (rsi_1 < 0)\n            {\n                goto label_403020;\n            }\n            if (rdx_4 == 0)\n            {\n                goto label_402fe6;\n            }\n            goto label_403020;\n        }\n        rsi_1 = 0x80;\n        rdi = 8;\n    label_402fe6:\n        *(arg1 + 0x20) = rdi;\n        rax = sub_406030(rax, rsi_1);\n        rcx = *(arg1 + 0x18);\n        *(arg1 + 0x28) = rax;\n    }\n    int64_t* rax_1 = (rax + (rcx << 4));\n    *rax_1 = arg2;\n    rax_1[1] = arg3;\n    *(arg1 + 0x18) = (rcx + 1);\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_403040",
            "funcStartAddr": "0x403040",
            "funcEndAddr": "0x403400",
            "decompiledFuncCode": "uint64_t sub_403040(char* arg1, int64_t* arg2, int32_t arg3)\n{\n    int64_t r12_1 = (arg3 - 1);\n    int64_t* rbp = *arg2;\n    if (*((r12_1 << 3) + 0x60d3b0) == rbp)\n    {\n        int64_t* rax_12 = *((r12_1 << 3) + 0x60d380);\n        *((r12_1 << 3) + 0x60d380) = rbp;\n        rbp = rax_12;\n        *arg2 = rax_12;\n    }\n    if (((*((r12_1 << 3) + 0x60d3b0) == rbp && rbp != 0) || (*((r12_1 << 3) + 0x60d3b0) != rbp && rbp != 0)))\n    {\n        rbp[3] = 0;\n    }\n    if (((*((r12_1 << 3) + 0x60d3b0) == rbp && rbp == 0) || (*((r12_1 << 3) + 0x60d3b0) != rbp && rbp == 0)))\n    {\n        int64_t* rax_13 = sub_4061a0(1, 0x30);\n        rbp = rax_13;\n        *arg2 = rax_13;\n    }\n    int32_t rbx_3;\n    if (sub_403c50(rbp, arg1, data_60d210) != 0)\n    {\n        void* rax_2 = rbp[1];\n        void* rbx_1 = rbp[2];\n        *((r12_1 << 3) + 0x60d3a0) = (*((r12_1 << 3) + 0x60d3a0) + 1);\n        void* r15_1 = (rax_2 - 1);\n        int64_t r13_1 = (rbx_1 + r15_1);\n        if (rbx_1 != r13_1)\n        {\n            int32_t rsi_1 = data_60d214;\n            if ((rsi_1 >= 0 && rsi_1 != 0xa))\n            {\n                while (true)\n                {\n                    r15_1 = (r13_1 - rbx_1);\n                    char* rax_4 = sub_4078c0(rbx_1, rsi_1, r15_1);\n                    if (rax_4 == 0)\n                    {\n                        break;\n                    }\n                    sub_402f80(rbp, rbx_1, (rax_4 - rbx_1));\n                    rsi_1 = data_60d214;\n                    rbx_1 = &rax_4[1];\n                }\n                goto label_403113;\n            }\n            if (rsi_1 >= 0)\n            {\n                goto label_403113;\n            }\n            uint16_t** rax_14 = __ctype_b_loc();\n            uint16_t* rdx_9 = *rax_14;\n            void* rax_15;\n            uint64_t rsi_5;\n            do\n            {\n                rsi_5 = *rbx_1;\n                rax_15 = (rbx_1 + 1);\n                if (((rdx_9[rsi_5] & 1) == 0 && rsi_5 != 0xa))\n                {\n                    break;\n                }\n                rbx_1 = rax_15;\n            } while (r13_1 != rax_15);\n            if (((*(rdx_9 + (rsi_5 << 1)) & 1) == 0 && rsi_5 != 0xa))\n            {\n                void* rdx_4;\n                while (true)\n                {\n                    void* r15_4 = rax_15;\n                    if (r13_1 == rax_15)\n                    {\n                        rdx_4 = 1;\n                        break;\n                    }\n                    uint64_t rsi_6 = *(rbx_1 + 1);\n                    int64_t rdx_11;\n                    if (((rdx_9[rsi_6] & 1) != 0 || ((*(rdx_9 + (rsi_6 << 1)) & 1) == 0 && rsi_6 == 0xa)))\n                    {\n                        rdx_11 = 1;\n                    }\n                    if (((*(rdx_9 + (rsi_6 << 1)) & 1) == 0 && rsi_6 != 0xa))\n                    {\n                        uint64_t rsi_7;\n                        do\n                        {\n                            r15_4 = (r15_4 + 1);\n                            if (r13_1 == r15_4)\n                            {\n                                break;\n                            }\n                            rsi_7 = *r15_4;\n                            if ((rdx_9[rsi_7] & 1) != 0)\n                            {\n                                break;\n                            }\n                        } while (rsi_7 != 0xa);\n                        if (r13_1 == r15_4)\n                        {\n                            rdx_4 = (r13_1 - rbx_1);\n                            break;\n                        }\n                        rdx_11 = (r15_4 - rbx_1);\n                    }\n                    void* rsi_8 = rbx_1;\n                    rbx_1 = (r15_4 + 1);\n                    sub_402f80(rbp, rsi_8, rdx_11);\n                    if (r13_1 == rbx_1)\n                    {\n                        break;\n                    }\n                    char rax_16 = *(r15_4 + 1);\n                    rdx_9 = *rax_14;\n                    if (((rdx_9[rax_16] & 1) != 0 || ((*(rdx_9 + (rax_16 << 1)) & 1) == 0 && rax_16 == 0xa)))\n                    {\n                        while (true)\n                        {\n                            rbx_1 = (rbx_1 + 1);\n                            if (r13_1 == rbx_1)\n                            {\n                                break;\n                            }\n                            uint64_t rcx_5 = *rbx_1;\n                            char rax_17 = rcx_5;\n                            if ((rdx_9[rcx_5] & 1) == 0)\n                            {\n                                if (rax_17 != 0xa)\n                                {\n                                    break;\n                                }\n                            }\n                        }\n                        if (r13_1 == rbx_1)\n                        {\n                            break;\n                        }\n                    }\n                    rax_15 = (rbx_1 + 1);\n                }\n                if (r13_1 == rax_15)\n                {\n                    goto label_40311c;\n                }\n                r15_1 = nullptr;\n            label_403113:\n                rdx_4 = r15_1;\n            label_40311c:\n                sub_402f80(rbp, rbx_1, rdx_4);\n            }\n        }\n        void* rax_5 = *((r12_1 << 3) + 0x60d3b0);\n        if (rax_5 != 0)\n        {\n            int32_t rdx_5 = data_60d330;\n            if ((rdx_5 != 2 && ((rdx_5 == 1 || (rdx_5 != 1 && data_60d37a != 0)) && *(r12_1 + 0x60d378) == 0)))\n            {\n                int64_t rdx_6 = rbp[3];\n                int64_t rdi_4 = *(rax_5 + 0x18);\n                void* rcx_1 = &rbp[5];\n                int64_t r8_1 = data_60d228;\n                if (arg3 != 1)\n                {\n                    r8_1 = data_60d220;\n                }\n                if (sub_402b90(rdi_4, (rax_5 + 0x28), rdx_6, rcx_1, r8_1, r8_1) > 0)\n                {\n                    int64_t rax_7 = rbp[1];\n                    int64_t r13_2 = rbp[2];\n                    int64_t rbx_2 = 0;\n                    if (rax_7 != 0)\n                    {\n                        rbx_2 = (rax_7 - 1);\n                        if (*((r13_2 + rax_7) - 1) != 0xa)\n                        {\n                            rbx_2 = 0x7fffffff;\n                            if (rax_7 <= 0x7fffffff)\n                            {\n                                rbx_2 = rax_7;\n                            }\n                        }\n                        else if (rbx_2 > 0x7fffffff)\n                        {\n                            rbx_2 = 0x7fffffff;\n                        }\n                    }\n                    int64_t rdi_5;\n                    rdi_5 = data_60d330 == 1;\n                    error(rdi_5, 0, dcgettext(nullptr, \"%s:%lu: is not sorted: %.*s\", 5), *((r12_1 << 3) + 0x60d390), *((r12_1 << 3) + 0x60d3a0), rbx_2, r13_2);\n                    *(r12_1 + 0x60d378) = 1;\n                }\n            }\n        }\n        *((r12_1 << 3) + 0x60d3b0) = rbp;\n        rbx_3 = 1;\n    }\n    else\n    {\n        if ((*arg1 & 0x20) != 0)\n        {\n            int32_t rdx_14;\n            int64_t* rsi_10;\n            char* rdi_8;\n            rdx_14 = error(1, *__errno_location(), dcgettext(nullptr, \"read error\", 5));\n            /* tailcall */\n            return sub_403400(rdi_8, rsi_10, rdx_14);\n        }\n        rbx_3 = 0;\n        if (rbp != 0)\n        {\n            sub_402ac0(rbp);\n        }\n    }\n    return rbx_3;\n}\n\n"
        },
        {
            "funcName": "sub_403400",
            "funcStartAddr": "0x403400",
            "funcEndAddr": "0x4034ef",
            "decompiledFuncCode": "uint64_t sub_403400(char* arg1, int64_t* arg2, int32_t arg3)\n{\n    int64_t rsi = *arg2;\n    int64_t rcx = arg2[1];\n    int64_t rax = arg2[2];\n    if (rsi == rcx)\n    {\n        int64_t rsi_4;\n        if (rax != 0)\n        {\n            if (rcx > 0xaaaaaaaaaaaaaa9)\n            {\n            label_4034d2:\n                sub_406220();\n                /* no return */\n            }\n            rcx = ((rcx + (rcx >> 1)) + 1);\n            rsi_4 = (rcx << 3);\n            goto label_403467;\n        }\n        if (rcx != 0)\n        {\n            uint64_t rdi_5;\n            rdi_5 = (rcx >> 0x3d) != 0;\n            rsi_4 = (rcx << 3);\n            uint64_t rdi_6 = rdi_5;\n            if (rsi_4 < 0)\n            {\n                goto label_4034d2;\n            }\n            if (rdi_6 == 0)\n            {\n                goto label_403467;\n            }\n            goto label_4034d2;\n        }\n        rsi_4 = 0x80;\n        rcx = 0x10;\n    label_403467:\n        arg2[1] = rcx;\n        rax = sub_406030(rax, rsi_4);\n        rsi = *arg2;\n        int64_t rdi_2 = arg2[1];\n        arg2[2] = rax;\n        if (rsi < rdi_2)\n        {\n            int64_t* rcx_1 = (rax + (rsi << 3));\n            int64_t rdi_3 = (rax + (rdi_2 << 3));\n            do\n            {\n                *rcx_1 = 0;\n                rcx_1 = &rcx_1[1];\n            } while (rdi_3 != rcx_1);\n        }\n    }\n    uint64_t rax_1 = sub_403040(arg1, (rax + (rsi << 3)), arg3);\n    if (rax_1 != 0)\n    {\n        *arg2 = (*arg2 + 1);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4034f0",
            "funcStartAddr": "0x4034f0",
            "funcEndAddr": "0x4038ad",
            "decompiledFuncCode": "int64_t sub_4034f0(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_60d3d0;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [OPTION]... FILE1 FILE\u2026\", 5), rbp);\n        fputs_unlocked(dcgettext(nullptr, \"For each pair of input lines wit\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nWhen FILE1 or FILE2 (not both)\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\n  -a FILENUM        also print\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -i, --ignore-case  ignore diff\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -v FILENUM        like -a FILE\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -z, --zero-terminated     line\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nUnless -t CHAR is given, leadi\u2026\", 5), stdout);\n        void* const var_88 = &data_408d51;\n        void* const* rax_13 = &var_88;\n        void* const var_78_1 = \"coreutils\";\n        void* const var_70_1 = \"Multi-call invocation\";\n        void* const var_68_1 = \"sha224sum\";\n        void* const var_60_1 = \"sha2 utilities\";\n        void* const var_58_1 = \"sha256sum\";\n        void* const var_50_1 = \"sha2 utilities\";\n        void* const var_48_1 = \"sha384sum\";\n        void* const var_40_1 = \"sha2 utilities\";\n        void* const var_38_1 = \"sha512sum\";\n        void* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_13 = &rax_13[2];\n            void* const rdi_11 = *rax_13;\n            c_1 = false;\n            z_1 = (rdi_11 & rdi_11) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            void* const rsi_11 = \"join\";\n            int64_t rcx_2 = 5;\n            while (rcx_2 != 0)\n            {\n                char temp0_1 = *rsi_11;\n                char temp1_1 = *rdi_11;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_11 = (rsi_11 + 1);\n                rdi_11 = (rdi_11 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        void* const rbp_1 = rax_13[1];\n        char* rax_24;\n        int32_t rax_25;\n        void* const r12_1;\n        if (rbp_1 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_5;\n            uint64_t r8_2;\n            ssize_t r9_2;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_24 = setlocale(5, nullptr, rdx_5, rcx_5, r8_2, r9_2, var_88, \"test invocation\");\n            if (rax_24 != 0)\n            {\n                rax_25 = strncmp(rax_24, &data_408dd5, 3);\n                if (rax_25 != 0)\n                {\n                    rbp_1 = \"join\";\n                }\n            }\n            if ((rax_24 == 0 || (rax_24 != 0 && rax_25 == 0)))\n            {\n                rbp_1 = \"join\";\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"join\");\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_3;\n            uint64_t r8_1;\n            ssize_t r9_1;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_16 = setlocale(5, nullptr, rdx_3, rcx_3, r8_1, r9_1, var_88, \"test invocation\");\n            if (rax_16 == 0)\n            {\n                goto label_4037a0;\n            }\n            if (strncmp(rax_16, &data_408dd5, 3) == 0)\n            {\n                goto label_4037a0;\n            }\n        }\n        if ((((rbp_1 == 0 && rax_24 != 0) && rax_25 != 0) || rbp_1 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), \"join\");\n        label_4037a0:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"join\");\n            if (rbp_1 != \"join\")\n            {\n                r12_1 = &data_408d08;\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_1, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4038b0",
            "funcStartAddr": "0x4038b0",
            "funcEndAddr": "0x403a3c",
            "decompiledFuncCode": "int64_t sub_4038b0(int64_t arg1, int32_t* arg2, int32_t* arg3, int32_t* arg4, \n    int32_t* arg5, int32_t* arg6)\n{\n    int32_t* rbp = arg2;\n    int32_t rbx = *arg4;\n    int64_t rax_1;\n    int64_t rcx;\n    if (rbx != 2)\n    {\n        int64_t rax = rbx;\n        rbx = (rbx + 1);\n        rcx = (rax << 2);\n        rax_1 = (rax << 3);\n    }\n    else\n    {\n        int32_t r14_1 = *arg2;\n        int64_t rax_2;\n        rax_2 = r14_1 == 0;\n        void* rdi = *((rax_2 << 3) + 0x60d390);\n        int32_t rax_3 = arg2[rax_2];\n        bool cond:0_1 = rax_3 <= 1;\n        if (rax_3 == 1)\n        {\n            *arg3 = (*arg3 - 1);\n            rbp = sub_4028c0(&data_60d228, sub_402910(rdi));\n        }\n        else if (cond:0_1)\n        {\n            if (rax_3 == 0)\n            {\n                error(0, 0, dcgettext(nullptr, \"extra operand %s\", 5), sub_4057b0(4, arg1));\n                sub_4034f0(1);\n                /* no return */\n            }\n        }\n        else if (rax_3 == 2)\n        {\n            arg3[1] = (arg3[1] - 1);\n            rbp = sub_4028c0(&data_60d220, sub_402910(rdi));\n        }\n        else if (rax_3 == 3)\n        {\n            sub_402990(rdi);\n        }\n        if (r14_1 == 0)\n        {\n            rax_1 = 8;\n            rcx = 4;\n        }\n        else\n        {\n            rcx = 4;\n            *rbp = rbp[1];\n            data_60d390 = data_60d398;\n            rax_1 = 8;\n        }\n    }\n    *(rbp + rcx) = *arg5;\n    *(rax_1 + 0x60d390) = arg1;\n    *arg4 = rbx;\n    if (*arg5 == 3)\n    {\n        *arg6 = 3;\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_403a40",
            "funcStartAddr": "0x403a40",
            "funcEndAddr": "0x403a48",
            "decompiledFuncCode": "int64_t sub_403a40(int64_t arg1)\n{\n    data_60d3c8 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_403a50",
            "funcStartAddr": "0x403a50",
            "funcEndAddr": "0x403a58",
            "decompiledFuncCode": "int64_t sub_403a50(char arg1)\n{\n    data_60d3c0 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_403a60",
            "funcStartAddr": "0x403a60",
            "funcEndAddr": "0x403afe",
            "decompiledFuncCode": "void sub_403a60(void* arg1)\n{\n    int32_t rax = sub_4079d0(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_60d3c0 == 0 || (data_60d3c0 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_60d3c8;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_405850(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_60d3c0 != 0) && *rax_1 == 0x20)) && sub_4079d0(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_60d238);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_403b00",
            "funcStartAddr": "0x403b00",
            "funcEndAddr": "0x403b05",
            "decompiledFuncCode": "int64_t sub_403b00(int32_t arg1, int64_t arg2, off64_t arg3, int32_t arg4)\n{\n    /* tailcall */\n    return posix_fadvise(arg1, arg2, arg3, arg4);\n}\n\n"
        },
        {
            "funcName": "sub_403b10",
            "funcStartAddr": "0x403b10",
            "funcEndAddr": "0x403b31",
            "decompiledFuncCode": "void sub_403b10(FILE* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        return;\n    }\n    /* tailcall */\n    return posix_fadvise(fileno(arg1), 0, 0, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_403b40",
            "funcStartAddr": "0x403b40",
            "funcEndAddr": "0x403bd3",
            "decompiledFuncCode": "FILE* sub_403b40(char* arg1, char* arg2)\n{\n    FILE* rax = fopen(arg1, arg2);\n    FILE* rbx = rax;\n    if (rax != 0)\n    {\n        int32_t rax_1 = fileno(rax);\n        if (rax_1 <= 2)\n        {\n            int32_t rax_3 = sub_405a20(rax_1);\n            if (rax_3 < 0)\n            {\n                int32_t* rax_7 = __errno_location();\n                FILE* rdi_5 = rbx;\n                rbx = nullptr;\n                int32_t r12_2 = *rax_7;\n                sub_406810(rdi_5);\n                *rax_7 = r12_2;\n            }\n            else\n            {\n                int32_t rax_4 = sub_406810(rbx);\n                FILE* rax_5;\n                if (rax_4 == 0)\n                {\n                    rax_5 = fdopen(rax_3, arg2);\n                    rbx = rax_5;\n                }\n                if ((rax_4 != 0 || (rax_4 == 0 && rax_5 == 0)))\n                {\n                    int32_t* rax_6 = __errno_location();\n                    int32_t rbp_1 = *rax_6;\n                    close(rax_3);\n                    *rax_6 = rbp_1;\n                    rbx = nullptr;\n                }\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_403be0",
            "funcStartAddr": "0x403be0",
            "funcEndAddr": "0x403c3e",
            "decompiledFuncCode": "int64_t sub_403be0()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_408fd8;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            void* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_403c40",
            "funcStartAddr": "0x403c40",
            "funcEndAddr": "0x403c50",
            "decompiledFuncCode": "int64_t sub_403c40(int128_t* arg1)\n{\n    arg1[1] = 0;\n    *arg1 = 0;\n}\n\n"
        },
        {
            "funcName": "sub_403c50",
            "funcStartAddr": "0x403c50",
            "funcEndAddr": "0x403d6b",
            "decompiledFuncCode": "int64_t* sub_403c50(int64_t* arg1, char* arg2, char arg3)\n{\n    int32_t r13 = arg3;\n    char* r14 = arg1[2];\n    char var_3d = r13;\n    void* rsi_1 = (*arg1 + r14);\n    char* r15 = r14;\n    if ((*arg2 & 0x10) == 0)\n    {\n        while (true)\n        {\n            char* rdx_1 = *(arg2 + 8);\n            int32_t rax_3;\n            int32_t rbp_1;\n            if (rdx_1 < *(arg2 + 0x10))\n            {\n                *(arg2 + 8) = &rdx_1[1];\n                rbp_1 = *rdx_1;\n            }\n            else\n            {\n                rax_3 = __uflow(arg2);\n                rbp_1 = rax_3;\n            }\n            char* rax_2;\n            void* rax_7;\n            char rdx;\n            if ((rdx_1 < *(arg2 + 0x10) || (rdx_1 >= *(arg2 + 0x10) && rax_3 != 0xffffffff)))\n            {\n                rdx = rbp_1;\n                if (r15 == rsi_1)\n                {\n                    goto label_403cfd;\n                }\n                rax_2 = r15;\n            label_403ca5:\n                r15 = &rax_2[1];\n                *rax_2 = rdx;\n                if (rbp_1 != r13)\n                {\n                    continue;\n                }\n                else\n                {\n                label_403d66:\n                    rax_7 = r15;\n                }\n            }\n            if ((rdx_1 >= *(arg2 + 0x10) && rax_3 == 0xffffffff))\n            {\n                if (r14 == r15)\n                {\n                    break;\n                }\n                if ((*arg2 & 0x20) != 0)\n                {\n                    break;\n                }\n                if (r15[-1] == var_3d)\n                {\n                    goto label_403d66;\n                }\n                rbp_1 = r13;\n                if (r15 == rsi_1)\n                {\n                    rdx = var_3d;\n                label_403cfd:\n                    void* var_48;\n                    var_48 = rdx;\n                    int64_t r15_1 = *arg1;\n                    char* rax_5 = sub_406130(r14, arg1);\n                    void* rsi_3 = *arg1;\n                    rdx = var_48;\n                    r14 = rax_5;\n                    rax_2 = &rax_5[r15_1];\n                    arg1[2] = r14;\n                    rsi_1 = (rsi_3 + r14);\n                    goto label_403ca5;\n                }\n                rax_7 = &r15[1];\n                *r15 = arg3;\n            }\n            arg1[1] = (rax_7 - r14);\n            return arg1;\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_403d70",
            "funcStartAddr": "0x403d70",
            "funcEndAddr": "0x403d7a",
            "decompiledFuncCode": "int64_t sub_403d70(int64_t* arg1, char* arg2)\n{\n    /* tailcall */\n    return sub_403c50(arg1, arg2, 0xa);\n}\n\n"
        },
        {
            "funcName": "sub_403d80",
            "funcStartAddr": "0x403d80",
            "funcEndAddr": "0x403d89",
            "decompiledFuncCode": "int64_t sub_403d80(void* arg1)\n{\n    /* tailcall */\n    return free(*(arg1 + 0x10));\n}\n\n"
        },
        {
            "funcName": "sub_403d90",
            "funcStartAddr": "0x403d90",
            "funcEndAddr": "0x403dd5",
            "decompiledFuncCode": "uint64_t sub_403d90(void* arg1, void* arg2, int64_t arg3)\n{\n    if (arg3 == 0)\n    {\n        return 0;\n    }\n    int64_t rcx = 0;\n    int32_t* r8 = *__ctype_toupper_loc();\n    uint64_t rax_3;\n    do\n    {\n        uint64_t r9_1 = *(arg2 + rcx);\n        int32_t rax_2 = r8[*(arg1 + rcx)];\n        rax_3 = (rax_2 - r8[r9_1]);\n        if (rax_2 != r8[r9_1])\n        {\n            break;\n        }\n        rcx = (rcx + 1);\n    } while (rcx != arg3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_403de0",
            "funcStartAddr": "0x403de0",
            "funcEndAddr": "0x403e79",
            "decompiledFuncCode": "char* sub_403de0(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_409020;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_60d3d0 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_403e80",
            "funcStartAddr": "0x403e80",
            "funcEndAddr": "0x403f72",
            "decompiledFuncCode": "char* sub_403e80(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_407a30();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_403f61:\n                void* const rbx_1 = &data_409024;\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_403f61;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_403f61;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_403f61;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_403f61;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_403f61;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_403f61;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_403f61;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_40902d;\n            if (cond:2_1)\n            {\n                rbx = &data_40902a;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_403f61;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_403f61;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_403f61;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_403f61;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_403f61;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_409031;\n            if (cond:1_1)\n            {\n                rbx = &data_409026;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_403f80",
            "funcStartAddr": "0x401920",
            "funcEndAddr": "0x4051a1",
            "decompiledFuncCode": "int64_t sub_403f80(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    char const* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n    label_404018:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_40438c:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_4043d4;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_403f80(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char const rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_4043eb;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_404525;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_404175;\n                            }\n                            goto label_404460;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_404525;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_404350;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_404350:\n                            if (var_c0 == 0)\n                            {\n                                goto label_40435b;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_4041b7:\n                            if (var_5c == 0)\n                            {\n                                goto label_4041c8;\n                            }\n                        label_404380:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_404388;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_4045bb;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_4045bb:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_4045ca:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_40438c;\n                            }\n                            goto label_404350;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_404350;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_404350;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_4045bb;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_404156;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_404156:\n                            if (var_5c == 0)\n                            {\n                                goto label_404175;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_404175;\n                            }\n                            goto label_4045ca;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_40414d:\n                            if (r12_1 != 0)\n                            {\n                                goto label_40435b;\n                            }\n                            goto label_404156;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_404580:\n                            rdx = r11_1 == 2;\n                        label_404175:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_40427c;\n                            }\n                            goto label_40417f;\n                        }\n                        case 0x27:\n                        {\n                            goto label_4042fd;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_4042cd;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_40432a;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_4050bd;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_404294;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_404129;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_404720;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_404720;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_405070:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_4043d4:\n                            rbx_1 = sub_403f80(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_4043eb:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_404525;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_404477;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_404525;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_404440:\n                                r13 = 0;\n                                goto label_4041fb;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_4041c8:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_4041fb:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_404205;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_404205:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_40420d;\n                            }\n                            case 9:\n                            {\n                                goto label_4043f0;\n                            }\n                            case 0xa:\n                            {\n                                goto label_404368;\n                            }\n                            case 0xb:\n                            {\n                                goto label_404450;\n                            }\n                            case 0xc:\n                            {\n                                goto label_404430;\n                            }\n                            case 0xd:\n                            {\n                                goto label_404419;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_40477a;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_404405;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_40475a;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_404742;\n                            }\n                            case 0x27:\n                            {\n                                goto label_4042fd;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_4042cd;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_40432a;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_404129;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_404720:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_404520:\n                            var_b8 = 0;\n                        label_404525:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_404574:\n                                if (rdx == 0)\n                                {\n                                    goto label_404580;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_404a71:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_404294;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_40438c;\n                                }\n                                r13 = var_98;\n                                goto label_40420d;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_407840(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_40438c;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_404a71;\n                            }\n                            goto label_404574;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_404460:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_40438c;\n                                }\n                                var_b8 = 0;\n                            label_404477:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_4044c2;\n                                    }\n                                    rax_8 = r10;\n                                label_4044ba:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_4044c2:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_40427c;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_404503;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_4044ba;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_40427c;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_404520;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_404435;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_40436d;\n                            }\n                            case 9:\n                            {\n                            label_4043f0:\n                                rbp_3 = 0x74;\n                                goto label_40436d;\n                            }\n                            case 0xa:\n                            {\n                            label_404368:\n                                rbp_3 = 0x6e;\n                            label_40436d:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_404380;\n                                }\n                                goto label_4041c8;\n                            }\n                            case 0xb:\n                            {\n                            label_404450:\n                                rbp_3 = 0x76;\n                                goto label_404435;\n                            }\n                            case 0xc:\n                            {\n                            label_404430:\n                                rbp_3 = 0x66;\n                            label_404435:\n                                if (var_5c == 0)\n                                {\n                                    goto label_404440;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_404388:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_40438c;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_404419:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_404350;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_40477a:\n                                rbp_3 = 0x20;\n                                goto label_404742;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_404405:\n                                rdx = 0;\n                            label_40435b:\n                                r13 = 0;\n                                goto label_404175;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_40475a:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_404175;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_40417f:\n                                rax_8 = 0;\n                                goto label_404181;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_404742:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_404181;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_4042fd:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_404175;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_4050bd;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_40427c;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_4042cd:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_4050bd:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_40438c;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_40427c:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_4041b7;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_404294;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_404175;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_404860:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_404175;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_404860;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_404860;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_404860;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_404860;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_405070;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_404503:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_40427c;\n                                }\n                            label_404181:\n                                if (arg7 == 0)\n                                {\n                                    goto label_40427c;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_40427c;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_4041b7;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_40432a:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_404350;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_404294:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_40420d;\n                                }\n                            label_40420d:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_404216;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_404216:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_404129:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_40435b;\n                                }\n                                goto label_40414d;\n                            }\n                        }\n                    }\n                }\n            }\n        label_404806:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = \"'\";\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_404018;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = \"'\";\n                goto label_404018;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"'\";\n            goto label_404018;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_409024;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_409024;\n            }\n            goto label_404018;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_409024;\n            goto label_404018;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_404018;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_403e80(&data_409035, r13);\n                arg9 = sub_403e80(\"'\", r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_404018;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_404806;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n        goto label_404018;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4051b0",
            "funcStartAddr": "0x401925",
            "funcEndAddr": "0x40534e",
            "decompiledFuncCode": "char* sub_4051b0(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_60d278;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_60d290 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_406220();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x60d280)\n        {\n            int64_t rax_9 = sub_406030(0, rsi_1);\n            int128_t zmm0 = data_60d280;\n            rbx = rax_9;\n            data_60d278 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_406030(rbx, rsi_1);\n            data_60d278 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_60d290;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_60d290 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_403f80(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        uint64_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x60d3e0)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_405fd0(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_403f80(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_405350",
            "funcStartAddr": "0x405350",
            "funcEndAddr": "0x405384",
            "decompiledFuncCode": "int64_t sub_405350(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x60d4e0;\n    }\n    int64_t rax_1 = sub_4061d0(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_405390",
            "funcStartAddr": "0x405390",
            "funcEndAddr": "0x40539f",
            "decompiledFuncCode": "uint64_t sub_405390(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60d4e0;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4053a0",
            "funcStartAddr": "0x4053a0",
            "funcEndAddr": "0x4053af",
            "decompiledFuncCode": "void sub_4053a0(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60d4e0;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_4053b0",
            "funcStartAddr": "0x4053b0",
            "funcEndAddr": "0x4053e3",
            "decompiledFuncCode": "uint64_t sub_4053b0(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x60d4e0;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_4053f0",
            "funcStartAddr": "0x4053f0",
            "funcEndAddr": "0x405403",
            "decompiledFuncCode": "uint64_t sub_4053f0(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60d4e0;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405410",
            "funcStartAddr": "0x405410",
            "funcEndAddr": "0x40543b",
            "decompiledFuncCode": "void sub_405410(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60d4e0;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x60d4e0;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_405440",
            "funcStartAddr": "0x405440",
            "funcEndAddr": "0x4054b2",
            "decompiledFuncCode": "int64_t sub_405440(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_60d4e0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_403f80(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_4054c0",
            "funcStartAddr": "0x4054c0",
            "funcEndAddr": "0x4055a1",
            "decompiledFuncCode": "char* sub_4054c0(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_60d4e0;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_403f80(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_405fd0((rax_2 + 1));\n    sub_403f80(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_4055b0",
            "funcStartAddr": "0x4055b0",
            "funcEndAddr": "0x4055ba",
            "decompiledFuncCode": "int64_t sub_4055b0(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_4054c0(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_4055c0",
            "funcStartAddr": "0x4055c0",
            "funcEndAddr": "0x405655",
            "decompiledFuncCode": "uint64_t sub_4055c0()\n{\n    uint64_t rax_2 = data_60d290;\n    int64_t r12 = data_60d278;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x60d3e0)\n    {\n        rax_2 = free(rdi_2);\n        *data_60d280 = 0x100;\n        *(data_60d280 + 8) = 0x60d3e0;\n    }\n    if (r12 != 0x60d280)\n    {\n        rax_2 = free(r12);\n        data_60d278 = 0x60d280;\n    }\n    data_60d290 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_405660",
            "funcStartAddr": "0x405660",
            "funcEndAddr": "0x405671",
            "decompiledFuncCode": "int64_t sub_405660(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4051b0(arg1, arg2, -1, &data_60d4e0);\n}\n\n"
        },
        {
            "funcName": "sub_405680",
            "funcStartAddr": "0x405680",
            "funcEndAddr": "0x40568a",
            "decompiledFuncCode": "int64_t sub_405680(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_4051b0(arg1, arg2, arg3, &data_60d4e0);\n}\n\n"
        },
        {
            "funcName": "sub_405690",
            "funcStartAddr": "0x405690",
            "funcEndAddr": "0x4056a6",
            "decompiledFuncCode": "int64_t sub_405690(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_4051b0(0, arg1, -1, &data_60d4e0);\n}\n\n"
        },
        {
            "funcName": "sub_4056b0",
            "funcStartAddr": "0x4056b0",
            "funcEndAddr": "0x4056c2",
            "decompiledFuncCode": "int64_t sub_4056b0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4051b0(0, arg1, arg2, &data_60d4e0);\n}\n\n"
        },
        {
            "funcName": "sub_4056d0",
            "funcStartAddr": "0x40192a",
            "funcEndAddr": "0x405738",
            "decompiledFuncCode": "char* sub_4056d0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_4051b0(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_405740",
            "funcStartAddr": "0x40192f",
            "funcEndAddr": "0x4057a4",
            "decompiledFuncCode": "char* sub_405740(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_4051b0(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_4057b0",
            "funcStartAddr": "0x4057b0",
            "funcEndAddr": "0x4057bc",
            "decompiledFuncCode": "int64_t sub_4057b0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4056d0(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_4057c0",
            "funcStartAddr": "0x4057c0",
            "funcEndAddr": "0x4057cf",
            "decompiledFuncCode": "int64_t sub_4057c0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_405740(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_4057d0",
            "funcStartAddr": "0x4057d0",
            "funcEndAddr": "0x405840",
            "decompiledFuncCode": "char* sub_4057d0(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_60d510;\n    int128_t var_48 = data_60d4e0;\n    int128_t var_38 = data_60d4f0;\n    int128_t var_28 = data_60d500;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_4051b0(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_405840",
            "funcStartAddr": "0x405840",
            "funcEndAddr": "0x40584d",
            "decompiledFuncCode": "int64_t sub_405840(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_4057d0(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405850",
            "funcStartAddr": "0x405850",
            "funcEndAddr": "0x405861",
            "decompiledFuncCode": "int64_t sub_405850(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_4057d0(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_405870",
            "funcStartAddr": "0x405870",
            "funcEndAddr": "0x40587a",
            "decompiledFuncCode": "int64_t sub_405870(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_4057d0(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_405880",
            "funcStartAddr": "0x401934",
            "funcEndAddr": "0x4058ee",
            "decompiledFuncCode": "char* sub_405880(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_4051b0(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_4058f0",
            "funcStartAddr": "0x4058f0",
            "funcEndAddr": "0x40595c",
            "decompiledFuncCode": "char* sub_4058f0(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_60d4e0;\n    int128_t var_38 = data_60d4f0;\n    int128_t var_28 = data_60d500;\n    int64_t var_18 = data_60d510;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_4051b0(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_405a00",
            "funcStartAddr": "0x405a00",
            "funcEndAddr": "0x405a16",
            "decompiledFuncCode": "int64_t sub_405a00(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_4051b0(0, arg1, -1, &data_60d240);\n}\n\n"
        },
        {
            "funcName": "sub_405a20",
            "funcStartAddr": "0x405a20",
            "funcEndAddr": "0x405a2e",
            "decompiledFuncCode": "int64_t sub_405a20(int32_t arg1)\n{\n    /* tailcall */\n    return sub_406890(arg1, 0, 3);\n}\n\n"
        },
        {
            "funcName": "sub_405a30",
            "funcStartAddr": "0x401939",
            "funcEndAddr": "0x405e0d",
            "decompiledFuncCode": "int64_t sub_405a30(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_409d8b, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_405e10",
            "funcStartAddr": "0x405e10",
            "funcEndAddr": "0x405e30",
            "decompiledFuncCode": "int64_t sub_405e10(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_405a30(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_405e30",
            "funcStartAddr": "0x405e30",
            "funcEndAddr": "0x405e90",
            "decompiledFuncCode": "int64_t sub_405e30(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_405a30(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_405e90",
            "funcStartAddr": "0x405e90",
            "funcEndAddr": "0x405f4c",
            "decompiledFuncCode": "int64_t sub_405e90(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_405a30(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_405f50",
            "funcStartAddr": "0x405f50",
            "funcEndAddr": "0x405fc4",
            "decompiledFuncCode": "int64_t sub_405f50()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_405fd0",
            "funcStartAddr": "0x405fd0",
            "funcEndAddr": "0x405fea",
            "decompiledFuncCode": "int64_t sub_405fd0(uint64_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_406220();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_405ff0",
            "funcStartAddr": "0x405ff0",
            "funcEndAddr": "0x406011",
            "decompiledFuncCode": "int64_t sub_405ff0(int64_t arg1, int64_t arg2)\n{\n    uint64_t rax;\n    int64_t rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    uint64_t rdi = rax;\n    rax = ((arg1 * arg2) >> 0x40) != 0;\n    if (rdi >= 0)\n    {\n        rax = rax;\n        if (rax == 0)\n        {\n            /* tailcall */\n            return sub_405fd0(rdi);\n        }\n    }\n    uint64_t var_8 = rax;\n    sub_406220();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_406030",
            "funcStartAddr": "0x406030",
            "funcEndAddr": "0x406066",
            "decompiledFuncCode": "int64_t sub_406030(int64_t arg1, uint64_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_406220();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_406130",
            "funcStartAddr": "0x406130",
            "funcEndAddr": "0x406180",
            "decompiledFuncCode": "int64_t sub_406130(int64_t arg1, int64_t* arg2)\n{\n    uint64_t rax = *arg2;\n    bool cond:0_1;\n    if (arg1 == 0)\n    {\n        cond:0_1 = rax >= 0;\n        if (rax == 0)\n        {\n            *arg2 = 0x80;\n            /* tailcall */\n            return sub_406030(arg1, 0x80);\n        }\n    }\n    if ((arg1 != 0 && rax <= 0x5555555555555553))\n    {\n        rax = (((rax >> 1) + rax) + 1);\n    }\n    if (((arg1 != 0 && rax <= 0x5555555555555553) || ((arg1 == 0 && rax != 0) && cond:0_1)))\n    {\n        *arg2 = rax;\n        /* tailcall */\n        return sub_406030(arg1, rax);\n    }\n    if (((arg1 != 0 && rax > 0x5555555555555553) || ((arg1 == 0 && rax != 0) && (!cond:0_1))))\n    {\n        uint64_t var_8 = rax;\n        sub_406220();\n        /* no return */\n    }\n}\n\n"
        },
        {
            "funcName": "sub_406180",
            "funcStartAddr": "0x406180",
            "funcEndAddr": "0x406197",
            "decompiledFuncCode": "int64_t sub_406180(uint64_t arg1)\n{\n    /* tailcall */\n    return memset(sub_405fd0(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_4061a0",
            "funcStartAddr": "0x4061a0",
            "funcEndAddr": "0x4061ce",
            "decompiledFuncCode": "int64_t sub_4061a0(uint64_t arg1, uint64_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_406220();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4061d0",
            "funcStartAddr": "0x4061d0",
            "funcEndAddr": "0x4061f8",
            "decompiledFuncCode": "int64_t sub_4061d0(int64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_405fd0(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_406200",
            "funcStartAddr": "0x406200",
            "funcEndAddr": "0x406213",
            "decompiledFuncCode": "int64_t sub_406200(char* arg1)\n{\n    /* tailcall */\n    return sub_4061d0(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_406220",
            "funcStartAddr": "0x406220",
            "funcEndAddr": "0x406251",
            "decompiledFuncCode": "int64_t sub_406220() __noreturn\n{\n    error(data_60d238, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_406260",
            "funcStartAddr": "0x406260",
            "funcEndAddr": "0x406314",
            "decompiledFuncCode": "int64_t sub_406260(int32_t arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    error(0, arg1, dcgettext(nullptr, \"string comparison failed\", 5));\n    error(0, 0, dcgettext(nullptr, \"Set LC_ALL='C' to work around th\u2026\", 5));\n    /* tailcall */\n    return error(data_60d238, 0, dcgettext(nullptr, \"The strings compared were %s and\u2026\", 5), sub_405740(0, 8, arg2, arg3), sub_405740(1, 8, arg4, arg5));\n}\n\n"
        },
        {
            "funcName": "sub_406320",
            "funcStartAddr": "0x406320",
            "funcEndAddr": "0x406375",
            "decompiledFuncCode": "uint64_t sub_406320(char* arg1, uint64_t arg2, char* arg3, int64_t arg4)\n{\n    int32_t rax = sub_408060(arg1, arg2, arg3, arg4);\n    int32_t rdi = *__errno_location();\n    if (rdi != 0)\n    {\n        sub_406260(rdi, arg1, arg2, arg3, arg4);\n        return rax;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_406380",
            "funcStartAddr": "0x406380",
            "funcEndAddr": "0x4063d7",
            "decompiledFuncCode": "uint64_t sub_406380(char* arg1, uint64_t arg2, char* arg3, int64_t arg4)\n{\n    uint64_t rbp = arg1;\n    int32_t rax = sub_408110(arg1, arg2, arg3, arg4);\n    int32_t rdi = *__errno_location();\n    if (rdi != 0)\n    {\n        sub_406260(rdi, rbp, (arg2 - 1), arg3, (arg4 - 1));\n        return rax;\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4063e0",
            "funcStartAddr": "0x4063e0",
            "funcEndAddr": "0x406804",
            "decompiledFuncCode": "uint64_t sub_4063e0(char* arg1, int64_t* arg2, int32_t arg3, uint64_t* arg4, \n    char* arg5)\n{\n    if (arg3 > 0x24)\n    {\n        __assert_fail(\"0 <= strtol_base && strtol_base \u2026\", \"lib/xstrtol.c\", 0x60, \"xstrtoul\");\n        /* no return */\n    }\n    int64_t* r15 = arg2;\n    void var_40;\n    if (arg2 == 0)\n    {\n        r15 = &var_40;\n    }\n    int32_t* rax = __errno_location();\n    *rax = 0;\n    char rbx = *arg1;\n    uint16_t* rsi = *__ctype_b_loc();\n    char* rax_2 = arg1;\n    while ((*(&rsi[rbx] + 1) & 0x20) != 0)\n    {\n        rax_2 = &rax_2[1];\n        rbx = *rax_2;\n    }\n    int32_t rbp_1;\n    if (rbx == 0x2d)\n    {\n    label_4064a2:\n        rbp_1 = 4;\n    }\n    else\n    {\n        char* r8 = *r15;\n        uint64_t rbx_1 = strtoul(arg1, r15, arg3);\n        int32_t var_58;\n        void* r8_1;\n        uint32_t r12_1;\n        if (r8 == arg1)\n        {\n            var_58 = r8;\n            if (arg5 == 0)\n            {\n                goto label_4064a2;\n            }\n            r12_1 = *arg1;\n            if (r12_1 == 0)\n            {\n                goto label_4064a2;\n            }\n            rbp_1 = 0;\n            rbx_1 = 1;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) == 0)\n            {\n                goto label_4064a2;\n            }\n        label_4064df:\n            uint64_t rdx_1 = (r12_1 - 0x45);\n            int64_t rdx_3;\n            int32_t rsi_3;\n            if (rdx_1 <= 0x2f)\n            {\n                var_58 = rdx_1;\n                if ((!(TEST_BITQ(0x814400308945, rdx_1))))\n                {\n                    goto label_406540;\n                }\n                if (strchr(arg5, 0x30) == 0)\n                {\n                    goto label_406540;\n                }\n                char rax_8 = *(r8_1 + 1);\n                if (rax_8 == 0x44)\n                {\n                label_406768:\n                    rsi_3 = 2;\n                    rdx_3 = 0x3e8;\n                    goto label_40654a;\n                }\n                if (rax_8 == 0x69)\n                {\n                    rdx_3 = 0x400;\n                    int32_t rsi_6;\n                    rsi_6 = *(r8_1 + 2) == 0x42;\n                    rsi_3 = ((rsi_6 + rsi_6) + 1);\n                    goto label_40654a;\n                }\n                uint64_t rdx_2 = var_58;\n                if (rax_8 == 0x42)\n                {\n                    goto label_406768;\n                }\n                int32_t r9_1;\n                switch (rdx_2)\n                {\n                    case 0:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4066eb:\n                        int64_t rcx_6 = rdx_3;\n                        int32_t rdi_8 = 6;\n                        r9_1 = 0;\n                        int32_t temp15_1;\n                        do\n                        {\n                            uint64_t rax_28;\n                            int64_t rdx_11;\n                            rdx_11 = HIGHD((rbx_1 * rcx_6));\n                            rax_28 = LOWD((rbx_1 * rcx_6));\n                            bool o_8 = ((rbx_1 * rcx_6) >> 0x40) != 0;\n                            rbx_1 = rax_28;\n                            if (o_8)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp15_1 = rdi_8;\n                            rdi_8 = (rdi_8 - 1);\n                        } while (temp15_1 != 1);\n                        goto label_406644;\n                    }\n                    case 1:\n                    case 3:\n                    case 4:\n                    case 5:\n                    case 7:\n                    case 9:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xe:\n                    case 0x10:\n                    case 0x11:\n                    case 0x12:\n                    case 0x13:\n                    case 0x16:\n                    case 0x17:\n                    case 0x18:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1f:\n                    case 0x20:\n                    case 0x21:\n                    case 0x23:\n                    case 0x24:\n                    case 0x25:\n                    case 0x27:\n                    case 0x29:\n                    case 0x2a:\n                    case 0x2b:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    {\n                        goto label_4065e5;\n                    }\n                    case 2:\n                    case 0x22:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_406723:\n                        int64_t rcx_7 = rdx_3;\n                        int64_t rax_30;\n                        int64_t rdx_12;\n                        rdx_12 = HIGHD((rbx_1 * rcx_7));\n                        rax_30 = LOWD((rbx_1 * rcx_7));\n                        int64_t rax_31;\n                        if (((rbx_1 * rcx_7) >> 0x40) == 0)\n                        {\n                            int64_t rdx_13;\n                            rdx_13 = HIGHD((rax_30 * rcx_7));\n                            rax_31 = LOWD((rax_30 * rcx_7));\n                            if (((rax_30 * rcx_7) >> 0x40) == 0)\n                            {\n                                uint64_t rax_32;\n                                int64_t rdx_14;\n                                rdx_14 = HIGHD((rax_31 * rcx_7));\n                                rax_32 = LOWD((rax_31 * rcx_7));\n                                if (((rax_31 * rcx_7) >> 0x40) == 0)\n                                {\n                                    rbx_1 = rax_32;\n                                    rbp_1 = (rbp_1 | 0);\n                                }\n                            }\n                        }\n                        if (((((rbx_1 * rcx_7) >> 0x40) != 0 || (((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) != 0)) || ((((rbx_1 * rcx_7) >> 0x40) == 0 && ((rax_30 * rcx_7) >> 0x40) == 0) && ((rax_31 * rcx_7) >> 0x40) != 0)))\n                        {\n                            rbx_1 = -1;\n                            rbp_1 = (rbp_1 | 1);\n                        }\n                        goto label_40658d;\n                    }\n                    case 6:\n                    case 0x26:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4065af:\n                        uint64_t rax_15;\n                        int64_t rdx_6;\n                        rdx_6 = HIGHD((rbx_1 * rdx_3));\n                        rax_15 = LOWD((rbx_1 * rdx_3));\n                        bool o_3 = ((rbx_1 * rdx_3) >> 0x40) != 0;\n                        rbx_1 = rax_15;\n                        if ((!o_3))\n                        {\n                            goto label_40658d;\n                        }\n                        goto label_4065b7;\n                    }\n                    case 8:\n                    case 0x28:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40656e:\n                        int64_t rcx_1 = rdx_3;\n                        int64_t rax_10;\n                        int64_t rdx_4;\n                        rdx_4 = HIGHD((rbx_1 * rcx_1));\n                        rax_10 = LOWD((rbx_1 * rcx_1));\n                        if (((rbx_1 * rcx_1) >> 0x40) == 0)\n                        {\n                            uint64_t rax_11;\n                            int64_t rdx_5;\n                            rdx_5 = HIGHD((rax_10 * rcx_1));\n                            rax_11 = LOWD((rax_10 * rcx_1));\n                            if (((rax_10 * rcx_1) >> 0x40) != 0)\n                            {\n                                goto label_4065b7;\n                            }\n                            rbx_1 = rax_11;\n                            goto label_40658d;\n                        }\n                    label_4065b7:\n                        rbp_1 = 1;\n                        rbx_1 = -1;\n                        goto label_40658d;\n                    }\n                    case 0xb:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_4066b8:\n                        int64_t rcx_5 = rdx_3;\n                        int32_t rdi_7 = 5;\n                        r9_1 = 0;\n                        int32_t temp14_1;\n                        do\n                        {\n                            uint64_t rax_26;\n                            int64_t rdx_10;\n                            rdx_10 = HIGHD((rbx_1 * rcx_5));\n                            rax_26 = LOWD((rbx_1 * rcx_5));\n                            bool o_7 = ((rbx_1 * rcx_5) >> 0x40) != 0;\n                            rbx_1 = rax_26;\n                            if (o_7)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp14_1 = rdi_7;\n                            rdi_7 = (rdi_7 - 1);\n                        } while (temp14_1 != 1);\n                        goto label_406644;\n                    }\n                    case 0xf:\n                    case 0x2f:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_406688:\n                        int64_t rcx_4 = rdx_3;\n                        int32_t rdi_6 = 4;\n                        r9_1 = 0;\n                        int32_t temp13_1;\n                        do\n                        {\n                            uint64_t rax_24;\n                            int64_t rdx_9;\n                            rdx_9 = HIGHD((rbx_1 * rcx_4));\n                            rax_24 = LOWD((rbx_1 * rcx_4));\n                            bool o_6 = ((rbx_1 * rcx_4) >> 0x40) != 0;\n                            rbx_1 = rax_24;\n                            if (o_6)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp13_1 = rdi_6;\n                            rdi_6 = (rdi_6 - 1);\n                        } while (temp13_1 != 1);\n                        goto label_406644;\n                    }\n                    case 0x14:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_406656:\n                        int64_t rcx_3 = rdx_3;\n                        int32_t rdi_5 = 8;\n                        r9_1 = 0;\n                        int32_t temp12_1;\n                        do\n                        {\n                            uint64_t rax_22;\n                            int64_t rdx_8;\n                            rdx_8 = HIGHD((rbx_1 * rcx_3));\n                            rax_22 = LOWD((rbx_1 * rcx_3));\n                            bool o_5 = ((rbx_1 * rcx_3) >> 0x40) != 0;\n                            rbx_1 = rax_22;\n                            if (o_5)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp12_1 = rdi_5;\n                            rdi_5 = (rdi_5 - 1);\n                        } while (temp12_1 != 1);\n                        goto label_406644;\n                    }\n                    case 0x15:\n                    {\n                        rsi_3 = 1;\n                        rdx_3 = 0x400;\n                    label_40661b:\n                        int64_t rcx_2 = rdx_3;\n                        int32_t rdi_4 = 7;\n                        r9_1 = 0;\n                        int32_t temp11_1;\n                        do\n                        {\n                            uint64_t rax_20;\n                            int64_t rdx_7;\n                            rdx_7 = HIGHD((rbx_1 * rcx_2));\n                            rax_20 = LOWD((rbx_1 * rcx_2));\n                            bool o_4 = ((rbx_1 * rcx_2) >> 0x40) != 0;\n                            rbx_1 = rax_20;\n                            if (o_4)\n                            {\n                                r9_1 = 1;\n                                rbx_1 = -1;\n                            }\n                            temp11_1 = rdi_4;\n                            rdi_4 = (rdi_4 - 1);\n                        } while (temp11_1 != 1);\n                    label_406644:\n                        rbp_1 = (rbp_1 | r9_1);\n                        goto label_40658d;\n                    }\n                    case 0x1d:\n                    {\n                        rsi_3 = 1;\n                        break;\n                    }\n                    case 0x1e:\n                    {\n                        rsi_3 = 1;\n                        goto label_40658d;\n                    }\n                }\n            }\n            else\n            {\n            label_406540:\n                rsi_3 = 1;\n                rdx_3 = 0x400;\n            label_40654a:\n                char r12_2 = (r12_1 - 0x42);\n                if (r12_2 > 0x35)\n                {\n                    goto label_4065e5;\n                }\n                switch (r12_2)\n                {\n                    case 0:\n                    {\n                        if ((rbx_1 >> 0x36) != 0)\n                        {\n                            goto label_4065b7;\n                        }\n                        rbx_1 = (rbx_1 << 0xa);\n                        goto label_40658d;\n                    }\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 6:\n                    case 7:\n                    case 8:\n                    case 0xa:\n                    case 0xc:\n                    case 0xd:\n                    case 0xf:\n                    case 0x10:\n                    case 0x11:\n                    case 0x13:\n                    case 0x14:\n                    case 0x15:\n                    case 0x16:\n                    case 0x19:\n                    case 0x1a:\n                    case 0x1b:\n                    case 0x1c:\n                    case 0x1d:\n                    case 0x1e:\n                    case 0x1f:\n                    case 0x22:\n                    case 0x23:\n                    case 0x24:\n                    case 0x26:\n                    case 0x27:\n                    case 0x28:\n                    case 0x2a:\n                    case 0x2c:\n                    case 0x2d:\n                    case 0x2e:\n                    case 0x2f:\n                    case 0x30:\n                    case 0x31:\n                    case 0x33:\n                    case 0x34:\n                    {\n                        goto label_4065e5;\n                    }\n                    case 3:\n                    {\n                        goto label_4066eb;\n                    }\n                    case 5:\n                    case 0x25:\n                    {\n                        goto label_406723;\n                    }\n                    case 9:\n                    case 0x29:\n                    {\n                        goto label_4065af;\n                    }\n                    case 0xb:\n                    case 0x2b:\n                    {\n                        goto label_40656e;\n                    }\n                    case 0xe:\n                    {\n                        goto label_4066b8;\n                    }\n                    case 0x12:\n                    case 0x32:\n                    {\n                        goto label_406688;\n                    }\n                    case 0x17:\n                    {\n                        goto label_406656;\n                    }\n                    case 0x18:\n                    {\n                        goto label_40661b;\n                    }\n                    case 0x21:\n                    {\n                        goto label_40658d;\n                    }\n                    case 0x35:\n                    {\n                        if (rbx_1 < 0)\n                        {\n                            goto label_4065b7;\n                        }\n                        rbx_1 = (rbx_1 + rbx_1);\n                    label_40658d:\n                        void* r8_2 = (r8_1 + rsi_3);\n                        int32_t rax_13 = (rbp_1 | 2);\n                        *r15 = r8_2;\n                        if (*r8_2 != 0)\n                        {\n                            rbp_1 = rax_13;\n                        }\n                        goto label_406480;\n                    }\n                }\n            }\n            if ((rbx_1 >> 0x37) != 0)\n            {\n                goto label_4065b7;\n            }\n            rbx_1 = (rbx_1 << 9);\n            goto label_40658d;\n        }\n        int32_t rax_4 = *rax;\n        if (rax_4 == 0)\n        {\n            rbp_1 = 0;\n        }\n        else\n        {\n            rbp_1 = 1;\n            if (rax_4 != 0x22)\n            {\n                goto label_4064a2;\n            }\n        }\n        if (arg5 == 0)\n        {\n        label_406480:\n            *arg4 = rbx_1;\n        }\n        else\n        {\n            r12_1 = *r8;\n            if (r12_1 == 0)\n            {\n                goto label_406480;\n            }\n            var_58 = r8;\n            r8_1 = var_58;\n            if (strchr(arg5, r12_1) != 0)\n            {\n                goto label_4064df;\n            }\n        label_4065e5:\n            *arg4 = rbx_1;\n            rbp_1 = (rbp_1 | 2);\n        }\n    }\n    return rbp_1;\n}\n\n"
        },
        {
            "funcName": "sub_406810",
            "funcStartAddr": "0x406810",
            "funcEndAddr": "0x40688b",
            "decompiledFuncCode": "int64_t sub_406810(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_4069d0(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_406890",
            "funcStartAddr": "0x406890",
            "funcEndAddr": "0x4069c5",
            "decompiledFuncCode": "uint64_t sub_406890(int32_t arg1, int32_t arg2, int32_t arg3)\n{\n    void* var_58 = &arg_8;\n    int64_t rcx;\n    int64_t var_30 = rcx;\n    int32_t var_60 = 0x10;\n    void var_48;\n    void* var_50 = &var_48;\n    if (arg2 != 0x406)\n    {\n        return fcntl();\n    }\n    int32_t var_60_1 = 0x18;\n    int32_t rax_2;\n    int32_t rax_5;\n    int32_t* rax_15;\n    int32_t rax_17;\n    int32_t rbx;\n    if (data_60d518 < 0)\n    {\n        rax_5 = sub_406890();\n        rbx = rax_5;\n    }\n    else\n    {\n        rax_2 = fcntl();\n        rbx = rax_2;\n        if (rax_2 < 0)\n        {\n            rax_15 = __errno_location();\n            if (*rax_15 == 0x16)\n            {\n                rax_17 = sub_406890(arg1, 0, arg3);\n                rbx = rax_17;\n                if (rax_17 >= 0)\n                {\n                    data_60d518 = 0xffffffff;\n                }\n            }\n        }\n    }\n    if (((((data_60d518 >= 0 && rax_2 < 0) && *rax_15 == 0x16) && rax_17 >= 0) || (rax_5 >= 0 && data_60d518 == 0xffffffff)))\n    {\n        int32_t rax_7 = fcntl(rbx, 1);\n        int32_t rax_10;\n        if (rax_7 >= 0)\n        {\n            rax_10 = fcntl(rbx, 2, (rax_7 | 1));\n        }\n        if ((rax_7 < 0 || (rax_7 >= 0 && rax_10 == 0xffffffff)))\n        {\n            int32_t* rax_11 = __errno_location();\n            int32_t rdi_2 = rbx;\n            rbx = -1;\n            int32_t r12_1 = *rax_11;\n            close(rdi_2);\n            *rax_11 = r12_1;\n        }\n    }\n    if ((data_60d518 >= 0 && (rax_2 >= 0 || (rax_2 < 0 && *rax_15 != 0x16))))\n    {\n        data_60d518 = 1;\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_4069d0",
            "funcStartAddr": "0x4069d0",
            "funcEndAddr": "0x406a10",
            "decompiledFuncCode": "int64_t sub_4069d0(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_406a10(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_406a10",
            "funcStartAddr": "0x406a10",
            "funcEndAddr": "0x406a67",
            "decompiledFuncCode": "off64_t sub_406a10(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_406a70",
            "funcStartAddr": "0x406a70",
            "funcEndAddr": "0x406b4f",
            "decompiledFuncCode": "uint64_t sub_406a70(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_406b50",
            "funcStartAddr": "0x406b50",
            "funcEndAddr": "0x40716c",
            "decompiledFuncCode": "uint64_t sub_406b50(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_406d80;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_406ca6;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_406ca6;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_406ca6:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_406d80:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_406dae;\n                }\n                *arg5 = r12;\n            label_406dae:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_406dcc;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_406dcc:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_406dcc;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_406d3e;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_406d3e:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_407170",
            "funcStartAddr": "0x407170",
            "funcEndAddr": "0x407736",
            "decompiledFuncCode": "uint64_t sub_407170(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_4073ac;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_407238;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_407238:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_406a70(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_40a619;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_406a70(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_4073ac;\n                }\n                *arg7 = rdx_2;\n            label_4073ac:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_4074b0;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_40a619;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_407520;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_4074b0;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_4074b0;\n                            }\n                            goto label_407471;\n                        }\n                    label_407471:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_406b50(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_40a61a);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_4074b0:\n                            rdx = &r14_1[1];\n                        label_4072f1:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_4074ee;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_4074ee:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_40a638;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_407520:\n                                        r14_2 = sub_406b50(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_4075dd;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_4075dd:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_4073ac;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_407238;\n        }\n        goto label_4072f1;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4077a0",
            "funcStartAddr": "0x4077a0",
            "funcEndAddr": "0x4077b8",
            "decompiledFuncCode": "uint64_t sub_4077a0(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_407840",
            "funcStartAddr": "0x407840",
            "funcEndAddr": "0x4078ba",
            "decompiledFuncCode": "uint64_t sub_407840(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_408d08;\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_40786a;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_40786a:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_403be0() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_4078c0",
            "funcStartAddr": "0x4078c0",
            "funcEndAddr": "0x4079c4",
            "decompiledFuncCode": "char* sub_4078c0(char* arg1, int32_t arg2, int64_t arg3)\n{\n    char r8 = arg2;\n    if (arg3 != 0)\n    {\n        if ((arg1 & 7) != 0)\n        {\n            if (arg2 == *arg1)\n            {\n            label_4079c0:\n                return arg1;\n            }\n            do\n            {\n                arg1 = &arg1[1];\n                int64_t temp0_1 = arg3;\n                arg3 = (arg3 - 1);\n                if (temp0_1 == 1)\n                {\n                    return 0;\n                }\n                if ((arg1 & 7) == 0)\n                {\n                    break;\n                }\n            } while (*arg1 != r8);\n            if ((arg1 & 7) != 0)\n            {\n                goto label_4079c0;\n            }\n        }\n        int64_t r9_5 = ((arg2 << 8) | arg2);\n        int64_t r9_6 = (r9_5 | (r9_5 << 0x10));\n        int64_t r9_7 = (r9_6 | (r9_6 << 0x20));\n        int64_t rax_8;\n        if (arg3 > 7)\n        {\n            rax_8 = (*arg1 ^ r9_7);\n            if ((((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0)\n            {\n                int64_t rax_12;\n                do\n                {\n                    arg3 = (arg3 - 8);\n                    arg1 = &arg1[8];\n                    if (arg3 <= 7)\n                    {\n                        break;\n                    }\n                    rax_12 = (*arg1 ^ r9_7);\n                } while ((((!rax_12) & (rax_12 - 0x101010101010101)) & 0x8080808080808080) == 0);\n            }\n        }\n        if ((((arg3 <= 7 || (arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) != 0)) || (((arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0) && arg3 <= 7) && arg3 != 0)) || ((arg3 > 7 && (((!rax_8) & (rax_8 - 0x101010101010101)) & 0x8080808080808080) == 0) && arg3 > 7)))\n        {\n            if (arg2 == *arg1)\n            {\n                goto label_4079c0;\n            }\n            char* rcx_3 = &arg1[1];\n            void* rdi = &arg1[arg3];\n            while (true)\n            {\n                char* rax_15 = rcx_3;\n                if (rcx_3 == rdi)\n                {\n                    return 0;\n                }\n                rcx_3 = &rcx_3[1];\n                if (rcx_3[-1] == r8)\n                {\n                    return rax_15;\n                }\n            }\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_4079d0",
            "funcStartAddr": "0x4079d0",
            "funcEndAddr": "0x407a2d",
            "decompiledFuncCode": "uint64_t sub_4079d0(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_406810(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_407a30",
            "funcStartAddr": "0x407a30",
            "funcEndAddr": "0x407f92",
            "decompiledFuncCode": "char* sub_407a30()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_60d558;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_408d08;\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        uint64_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            uint64_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_407b2c;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_407b76;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_407b2c:\n            r15 = &data_408d08;\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_407b76:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, &data_408e94);\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_407c2c:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_407dbb;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_407c68:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_407c68;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_407ca2:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_407ca2;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_408d08;\n                                    free(rdi_26);\n                                    sub_406810(rax_12);\n                                    goto label_407bb7;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_407e7b:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_407e7b;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_407ec9:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_407ec9;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_407c2c;\n                        }\n                        break;\n                    }\n                label_407dbb:\n                    sub_406810(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_408d08;\n            }\n        label_407bb7:\n            free(rbp_3);\n        }\n        data_60d558 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_407fa0",
            "funcStartAddr": "0x407fa0",
            "funcEndAddr": "0x408054",
            "decompiledFuncCode": "uint64_t sub_407fa0(char* arg1, int64_t arg2, char* arg3, int64_t arg4)\n{\n    int64_t r14 = arg2;\n    int64_t r13 = arg4;\n    char* r12 = arg1;\n    char* rbp = arg3;\n    int32_t* rax = __errno_location();\n    do\n    {\n        *rax = 0;\n        int64_t rax_4 = strcoll(r12, rbp);\n        if (rax_4 != 0)\n        {\n            return rax_4;\n        }\n        int64_t rbx_1 = (strlen(r12) + 1);\n        r12 = &r12[rbx_1];\n        rbp = &rbp[(strlen(rbp) + 1)];\n        r13 = (r13 - (strlen(rbp) + 1));\n        int64_t temp0_1 = r14;\n        r14 = (r14 - rbx_1);\n        if (temp0_1 == rbx_1)\n        {\n            int32_t rax_5;\n            rax_5 = r13 != 0;\n            return (-rax_5);\n        }\n    } while (r13 != 0);\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_408060",
            "funcStartAddr": "0x408060",
            "funcEndAddr": "0x408101",
            "decompiledFuncCode": "uint64_t sub_408060(char* arg1, uint64_t arg2, char* arg3, int64_t arg4)\n{\n    int32_t rax_1;\n    int32_t rdx_2;\n    if (arg2 == arg4)\n    {\n        rax_1 = memcmp(arg1, arg3, arg2);\n        char var_40;\n        var_40 = rax_1;\n        if (rax_1 == 0)\n        {\n            rdx_2 = var_40;\n            *__errno_location() = 0;\n        }\n    }\n    if ((arg2 != arg4 || (arg2 == arg4 && rax_1 != 0)))\n    {\n        char* r15_1 = &arg1[arg2];\n        char* r14_1 = &arg3[arg4];\n        char r9_1 = *r15_1;\n        char r8_1 = *r14_1;\n        *r15_1 = 0;\n        *r14_1 = 0;\n        rdx_2 = sub_407fa0(arg1, (arg2 + 1), arg3, (arg4 + 1));\n        *r15_1 = r9_1;\n        *r14_1 = r8_1;\n    }\n    return rdx_2;\n}\n\n"
        },
        {
            "funcName": "sub_408110",
            "funcStartAddr": "0x408110",
            "funcEndAddr": "0x408173",
            "decompiledFuncCode": "int64_t sub_408110(char* arg1, uint64_t arg2, char* arg3, int64_t arg4)\n{\n    if ((arg2 == arg4 && memcmp(arg1, arg3, arg2) == 0))\n    {\n        *__errno_location() = 0;\n        return 0;\n    }\n    /* tailcall */\n    return sub_407fa0(arg1, arg2, arg3, arg4);\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x408180",
            "funcEndAddr": "0x4081dd",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x4081e0",
            "funcEndAddr": "0x4081e1",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_4081f0",
            "funcStartAddr": "0x4081f0",
            "funcEndAddr": "0x408208",
            "decompiledFuncCode": "int64_t sub_4081f0(void (* arg1)(void*))\n{\n    int64_t rdx = data_60d208;\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, rdx);\n}\n\n"
        },
        {
            "funcName": "sub_408208",
            "funcStartAddr": "0x408208",
            "funcEndAddr": "0x408228",
            "decompiledFuncCode": "int64_t sub_408208(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_60ce30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}