{
    "decompilerName": "binaryNinja",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_unexpand.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O",
    "funcCount": 137,
    "funcInfo": [
        {
            "funcName": "sub_401460",
            "funcStartAddr": "0x401460",
            "funcEndAddr": "0x40146c",
            "decompiledFuncCode": "int64_t sub_401460()\n{\n    int64_t var_8 = data_60a008;\n    /* jump -> data_60a010 */\n}\n\n"
        },
        {
            "funcName": "sub_401476",
            "funcStartAddr": "0x401476",
            "funcEndAddr": "0x401480",
            "decompiledFuncCode": "int64_t sub_401476()\n{\n    int64_t var_8 = 0;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401486",
            "funcStartAddr": "0x401486",
            "funcEndAddr": "0x401490",
            "decompiledFuncCode": "int64_t sub_401486()\n{\n    int64_t var_8 = 1;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401496",
            "funcStartAddr": "0x401496",
            "funcEndAddr": "0x4014a0",
            "decompiledFuncCode": "int64_t sub_401496()\n{\n    int64_t var_8 = 2;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_4014a6",
            "funcStartAddr": "0x4014a6",
            "funcEndAddr": "0x4014b0",
            "decompiledFuncCode": "int64_t sub_4014a6()\n{\n    int64_t var_8 = 3;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_4014b6",
            "funcStartAddr": "0x4014b6",
            "funcEndAddr": "0x4014c0",
            "decompiledFuncCode": "int64_t sub_4014b6()\n{\n    int64_t var_8 = 4;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_4014c6",
            "funcStartAddr": "0x4014c6",
            "funcEndAddr": "0x4014d0",
            "decompiledFuncCode": "int64_t sub_4014c6()\n{\n    int64_t var_8 = 5;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_4014d6",
            "funcStartAddr": "0x4014d6",
            "funcEndAddr": "0x4014e0",
            "decompiledFuncCode": "int64_t sub_4014d6()\n{\n    int64_t var_8 = 6;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_4014e6",
            "funcStartAddr": "0x4014e6",
            "funcEndAddr": "0x4014f0",
            "decompiledFuncCode": "int64_t sub_4014e6()\n{\n    int64_t var_8 = 7;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_4014f6",
            "funcStartAddr": "0x4014f6",
            "funcEndAddr": "0x401500",
            "decompiledFuncCode": "int64_t sub_4014f6()\n{\n    int64_t var_8 = 8;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401506",
            "funcStartAddr": "0x401506",
            "funcEndAddr": "0x401510",
            "decompiledFuncCode": "int64_t sub_401506()\n{\n    int64_t var_8 = 9;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401516",
            "funcStartAddr": "0x401516",
            "funcEndAddr": "0x401520",
            "decompiledFuncCode": "int64_t sub_401516()\n{\n    int64_t var_8 = 0xa;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401526",
            "funcStartAddr": "0x401526",
            "funcEndAddr": "0x401530",
            "decompiledFuncCode": "int64_t sub_401526()\n{\n    int64_t var_8 = 0xb;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401536",
            "funcStartAddr": "0x401536",
            "funcEndAddr": "0x401540",
            "decompiledFuncCode": "int64_t sub_401536()\n{\n    int64_t var_8 = 0xc;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401546",
            "funcStartAddr": "0x401546",
            "funcEndAddr": "0x401550",
            "decompiledFuncCode": "int64_t sub_401546()\n{\n    int64_t var_8 = 0xd;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401556",
            "funcStartAddr": "0x401556",
            "funcEndAddr": "0x401560",
            "decompiledFuncCode": "int64_t sub_401556()\n{\n    int64_t var_8 = 0xe;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401566",
            "funcStartAddr": "0x401566",
            "funcEndAddr": "0x401570",
            "decompiledFuncCode": "int64_t sub_401566()\n{\n    int64_t var_8 = 0xf;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401576",
            "funcStartAddr": "0x401576",
            "funcEndAddr": "0x401580",
            "decompiledFuncCode": "int64_t sub_401576()\n{\n    int64_t var_8 = 0x10;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401586",
            "funcStartAddr": "0x401586",
            "funcEndAddr": "0x401590",
            "decompiledFuncCode": "int64_t sub_401586()\n{\n    int64_t var_8 = 0x11;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401596",
            "funcStartAddr": "0x401596",
            "funcEndAddr": "0x4015a0",
            "decompiledFuncCode": "int64_t sub_401596()\n{\n    int64_t var_8 = 0x12;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_4015a6",
            "funcStartAddr": "0x4015a6",
            "funcEndAddr": "0x4015b0",
            "decompiledFuncCode": "int64_t sub_4015a6()\n{\n    int64_t var_8 = 0x13;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_4015b6",
            "funcStartAddr": "0x4015b6",
            "funcEndAddr": "0x4015c0",
            "decompiledFuncCode": "int64_t sub_4015b6()\n{\n    int64_t var_8 = 0x14;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_4015c6",
            "funcStartAddr": "0x4015c6",
            "funcEndAddr": "0x4015d0",
            "decompiledFuncCode": "int64_t sub_4015c6()\n{\n    int64_t var_8 = 0x15;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_4015d6",
            "funcStartAddr": "0x4015d6",
            "funcEndAddr": "0x4015e0",
            "decompiledFuncCode": "int64_t sub_4015d6()\n{\n    int64_t var_8 = 0x16;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_4015e6",
            "funcStartAddr": "0x4015e6",
            "funcEndAddr": "0x4015f0",
            "decompiledFuncCode": "int64_t sub_4015e6()\n{\n    int64_t var_8 = 0x17;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_4015f6",
            "funcStartAddr": "0x4015f6",
            "funcEndAddr": "0x401600",
            "decompiledFuncCode": "int64_t sub_4015f6()\n{\n    int64_t var_8 = 0x18;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401606",
            "funcStartAddr": "0x401606",
            "funcEndAddr": "0x401610",
            "decompiledFuncCode": "int64_t sub_401606()\n{\n    int64_t var_8 = 0x19;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401616",
            "funcStartAddr": "0x401616",
            "funcEndAddr": "0x401620",
            "decompiledFuncCode": "int64_t sub_401616()\n{\n    int64_t var_8 = 0x1a;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401626",
            "funcStartAddr": "0x401626",
            "funcEndAddr": "0x401630",
            "decompiledFuncCode": "int64_t sub_401626()\n{\n    int64_t var_8 = 0x1b;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401636",
            "funcStartAddr": "0x401636",
            "funcEndAddr": "0x401640",
            "decompiledFuncCode": "int64_t sub_401636()\n{\n    int64_t var_8 = 0x1c;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401646",
            "funcStartAddr": "0x401646",
            "funcEndAddr": "0x401650",
            "decompiledFuncCode": "int64_t sub_401646()\n{\n    int64_t var_8 = 0x1d;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401656",
            "funcStartAddr": "0x401656",
            "funcEndAddr": "0x401660",
            "decompiledFuncCode": "int64_t sub_401656()\n{\n    int64_t var_8 = 0x1e;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401666",
            "funcStartAddr": "0x401666",
            "funcEndAddr": "0x401670",
            "decompiledFuncCode": "int64_t sub_401666()\n{\n    int64_t var_8 = 0x1f;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401676",
            "funcStartAddr": "0x401676",
            "funcEndAddr": "0x401680",
            "decompiledFuncCode": "int64_t sub_401676()\n{\n    int64_t var_8 = 0x20;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401686",
            "funcStartAddr": "0x401686",
            "funcEndAddr": "0x401690",
            "decompiledFuncCode": "int64_t sub_401686()\n{\n    int64_t var_8 = 0x21;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401696",
            "funcStartAddr": "0x401696",
            "funcEndAddr": "0x4016a0",
            "decompiledFuncCode": "int64_t sub_401696()\n{\n    int64_t var_8 = 0x22;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_4016a6",
            "funcStartAddr": "0x4016a6",
            "funcEndAddr": "0x4016b0",
            "decompiledFuncCode": "int64_t sub_4016a6()\n{\n    int64_t var_8 = 0x23;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_4016b6",
            "funcStartAddr": "0x4016b6",
            "funcEndAddr": "0x4016c0",
            "decompiledFuncCode": "int64_t sub_4016b6()\n{\n    int64_t var_8 = 0x24;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_4016c6",
            "funcStartAddr": "0x4016c6",
            "funcEndAddr": "0x4016d0",
            "decompiledFuncCode": "int64_t sub_4016c6()\n{\n    int64_t var_8 = 0x25;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_4016d6",
            "funcStartAddr": "0x4016d6",
            "funcEndAddr": "0x4016e0",
            "decompiledFuncCode": "int64_t sub_4016d6()\n{\n    int64_t var_8 = 0x26;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_4016e6",
            "funcStartAddr": "0x4016e6",
            "funcEndAddr": "0x4016f0",
            "decompiledFuncCode": "int64_t sub_4016e6()\n{\n    int64_t var_8 = 0x27;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_4016f6",
            "funcStartAddr": "0x4016f6",
            "funcEndAddr": "0x401700",
            "decompiledFuncCode": "int64_t sub_4016f6()\n{\n    int64_t var_8 = 0x28;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401706",
            "funcStartAddr": "0x401706",
            "funcEndAddr": "0x401710",
            "decompiledFuncCode": "int64_t sub_401706()\n{\n    int64_t var_8 = 0x29;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401716",
            "funcStartAddr": "0x401716",
            "funcEndAddr": "0x401720",
            "decompiledFuncCode": "int64_t sub_401716()\n{\n    int64_t var_8 = 0x2a;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401726",
            "funcStartAddr": "0x401726",
            "funcEndAddr": "0x401730",
            "decompiledFuncCode": "int64_t sub_401726()\n{\n    int64_t var_8 = 0x2b;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401736",
            "funcStartAddr": "0x401736",
            "funcEndAddr": "0x401740",
            "decompiledFuncCode": "int64_t sub_401736()\n{\n    int64_t var_8 = 0x2c;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401746",
            "funcStartAddr": "0x401746",
            "funcEndAddr": "0x401750",
            "decompiledFuncCode": "int64_t sub_401746()\n{\n    int64_t var_8 = 0x2d;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401756",
            "funcStartAddr": "0x401756",
            "funcEndAddr": "0x401760",
            "decompiledFuncCode": "int64_t sub_401756()\n{\n    int64_t var_8 = 0x2e;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401766",
            "funcStartAddr": "0x401766",
            "funcEndAddr": "0x401770",
            "decompiledFuncCode": "int64_t sub_401766()\n{\n    int64_t var_8 = 0x2f;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401776",
            "funcStartAddr": "0x401776",
            "funcEndAddr": "0x401780",
            "decompiledFuncCode": "int64_t sub_401776()\n{\n    int64_t var_8 = 0x30;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401786",
            "funcStartAddr": "0x401786",
            "funcEndAddr": "0x401790",
            "decompiledFuncCode": "int64_t sub_401786()\n{\n    int64_t var_8 = 0x31;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_401796",
            "funcStartAddr": "0x401796",
            "funcEndAddr": "0x4017a0",
            "decompiledFuncCode": "int64_t sub_401796()\n{\n    int64_t var_8 = 0x32;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_4017a6",
            "funcStartAddr": "0x4017a6",
            "funcEndAddr": "0x4017b0",
            "decompiledFuncCode": "int64_t sub_4017a6()\n{\n    int64_t var_8 = 0x33;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_4017b6",
            "funcStartAddr": "0x4017b6",
            "funcEndAddr": "0x4017c0",
            "decompiledFuncCode": "int64_t sub_4017b6()\n{\n    int64_t var_8 = 0x34;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_4017c6",
            "funcStartAddr": "0x4017c6",
            "funcEndAddr": "0x4017d0",
            "decompiledFuncCode": "int64_t sub_4017c6()\n{\n    int64_t var_8 = 0x35;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_4017d6",
            "funcStartAddr": "0x4017d6",
            "funcEndAddr": "0x4017e0",
            "decompiledFuncCode": "int64_t sub_4017d6()\n{\n    int64_t var_8 = 0x36;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "sub_4017e6",
            "funcStartAddr": "0x4017e6",
            "funcEndAddr": "0x4017f0",
            "decompiledFuncCode": "int64_t sub_4017e6()\n{\n    int64_t var_8 = 0x37;\n    /* tailcall */\n    return sub_401460();\n}\n\n"
        },
        {
            "funcName": "main",
            "funcStartAddr": "0x401820",
            "funcEndAddr": "0x401d60",
            "decompiledFuncCode": "int32_t main(int32_t argc, char** argv, char** envp)\n{\n    int64_t r15;\n    int64_t var_8 = r15;\n    int32_t r14 = 1;\n    char r13 = 0;\n    char r12 = 0;\n    char* rdi = *argv;\n    int64_t rcx;\n    int64_t rdx;\n    uint64_t r8;\n    ssize_t r9;\n    rcx = sub_402c50(rdi);\n    void var_58;\n    int32_t var_50;\n    setlocale(6, &data_40824c[0x1b], rdx, rcx, r8, r9, var_58, var_50);\n    bindtextdomain(\"coreutils\", \"/home/dongkwan/data/scripts/gnu_\u2026\");\n    textdomain(\"coreutils\");\n    sub_4066f0(sub_402b70);\n    while (true)\n    {\n        int32_t rax_1 = getopt_long(argc, argv, \",0123456789at:\", &data_406c00, nullptr);\n        if (rax_1 == 0xffffffff)\n        {\n            break;\n        }\n        bool cond:0_1 = rax_1 <= 0x3f;\n        if (rax_1 == 0x3f)\n        {\n            sub_401e40(1);\n            /* no return */\n        }\n        if (cond:0_1)\n        {\n            if (rax_1 == 0xffffff7e)\n            {\n                sub_401e40(0);\n                /* no return */\n            }\n            if (rax_1 != 0x2c)\n            {\n                if (rax_1 == 0xffffff7d)\n                {\n                    sub_404cf0(stdout, \"unexpand\", \"GNU coreutils\", data_60a200);\n                    exit(0);\n                    /* no return */\n                }\n            }\n            else if (r12 == 0)\n            {\n                continue;\n            }\n            else\n            {\n                r12 = 0;\n                sub_402240(r15);\n                continue;\n            }\n        }\n        else if (rax_1 == 0x74)\n        {\n            int64_t rdi_3 = data_60a4a8;\n            data_60a2bc = 1;\n            sub_402360(rdi_3);\n            continue;\n        }\n        else if (rax_1 == 0x80)\n        {\n            r13 = 1;\n            continue;\n        }\n        else if (rax_1 == 0x61)\n        {\n            data_60a2bc = 1;\n            continue;\n        }\n        if (r12 != 0)\n        {\n            if (r15 <= 0x1999999999999999)\n            {\n                int64_t rax_4 = ((rax_1 - 0x30) + (r15 * 0xa));\n                if (rax_4 >= r15)\n                {\n                    r15 = rax_4;\n                    continue;\n                }\n            }\n            error(1, 0, dcgettext(nullptr, \"tab stop value is too large\", 5));\n        label_401cfd:\n            error(1, *__errno_location(), dcgettext(nullptr, \"write error\", 5));\n        label_401d38:\n            error(1, 0, dcgettext(nullptr, \"input line is too long\", 5));\n        label_401d5a:\n            void (* rdx_15)();\n            int64_t rsi_5;\n            int64_t rdi_14;\n            rdx_15 = error(1, 0, dcgettext(nullptr, \"input line is too long\", 5));\n            /* tailcall */\n            return _start(rdi_14, rsi_5, rdx_15);\n        }\n        r12 = 1;\n        r15 = (rax_1 - 0x30);\n    }\n    if (r13 != 0)\n    {\n        data_60a2bc = 0;\n    }\n    if (r12 != 0)\n    {\n        sub_402240(r15);\n    }\n    sub_4026b0();\n    int64_t rax_7 = data_60a27c;\n    void* rdi_5 = nullptr;\n    if (rax_7 < argc)\n    {\n        rdi_5 = &argv[rax_7];\n    }\n    sub_4028b0(rdi_5);\n    FILE* rax_8 = sub_4028d0(nullptr);\n    FILE* r15_1 = rax_8;\n    if (rax_8 == 0)\n    {\n    label_401c5c:\n        sub_402ab0();\n        return data_60a2b8;\n    }\n    char* rax_9 = sub_404e30(data_60a4a0);\n    while (true)\n    {\n        uint64_t rbp_1 = 0;\n        char var_52_1 = 1;\n        int64_t r12_1 = 0;\n        uint32_t rbx_1 = 1;\n        int64_t var_40 = 0;\n        char var_51_1 = 0;\n        uint32_t r13_1;\n        do\n        {\n            char* rax_13 = r15_1->_IO_read_ptr;\n            if (rax_13 < r15_1->_IO_read_end)\n            {\n                r15_1->_IO_read_ptr = &rax_13[1];\n                r13_1 = *rax_13;\n            }\n            else\n            {\n                uint32_t rax_19 = __uflow(r15_1);\n                r13_1 = rax_19;\n                if (rax_19 < 0)\n                {\n                    FILE* rax_20 = sub_4028d0(r15_1);\n                    r15_1 = rax_20;\n                    if (rax_20 == 0)\n                    {\n                        if (rbx_1 != 0)\n                        {\n                            uint32_t rax_23 = *__ctype_b_loc()[r13_1];\n                            r14 = (rax_23 & 1);\n                            if ((rax_23 & 1) != 0)\n                            {\n                                goto label_401b1b;\n                            }\n                        label_401a3a:\n                            int64_t temp0_1 = r12_1;\n                            r12_1 = (r12_1 + 1);\n                            if (temp0_1 != -1)\n                            {\n                                rbx_1 = 1;\n                                goto label_401a49;\n                            }\n                            goto label_401d38;\n                        }\n                    label_401c57:\n                        free(rax_9);\n                        goto label_401c5c;\n                    }\n                    continue;\n                }\n            }\n            uint32_t rax_16;\n            if (rbx_1 != 0)\n            {\n                rax_16 = *__ctype_b_loc()[r13_1];\n                r14 = (rax_16 & 1);\n                if ((rax_16 & 1) != 0)\n                {\n                label_401b1b:\n                    char var_41;\n                    int64_t rax_17 = sub_402800(r12_1, &var_40, &var_41);\n                    if (var_41 != 0)\n                    {\n                        goto label_401c4b;\n                    }\n                    if (r12_1 > rax_17)\n                    {\n                        goto label_401d5a;\n                    }\n                    if (r13_1 != 9)\n                    {\n                        r12_1 = (r12_1 + 1);\n                        rbx_1 = ((var_52_1 ^ 1) | rax_17 != r12_1);\n                        if (rbx_1 == 0)\n                        {\n                            *rax_9 = 9;\n                            rax_17 = r12_1;\n                        }\n                        else\n                        {\n                            char rax_32 = var_51_1;\n                            var_52_1 = rbx_1;\n                            if (rax_17 == r12_1)\n                            {\n                                rax_32 = rbx_1;\n                            }\n                            var_51_1 = rax_32;\n                            rax_9[rbp_1] = r13_1;\n                            rbp_1 = (rbp_1 + 1);\n                        }\n                    }\n                    else if (rbp_1 != 0)\n                    {\n                        *rax_9 = 9;\n                    }\n                    if (((r13_1 != 9 && rbx_1 == 0) || r13_1 == 9))\n                    {\n                        rbp_1 = var_51_1;\n                        r12_1 = rax_17;\n                        rbx_1 = 1;\n                        r13_1 = 9;\n                        goto label_401a49;\n                    }\n                }\n                else\n                {\n                    if (r13_1 != 8)\n                    {\n                        goto label_401a3a;\n                    }\n                    var_52_1 = r14;\n                    int64_t rax_24;\n                    rax_24 = r12_1 != 0;\n                    r12_1 = (r12_1 - rax_24);\n                    int64_t rax_25 = var_40;\n                    int64_t rdx_9;\n                    rdx_9 = rax_25 != 0;\n                    var_40 = (rax_25 - rdx_9);\n                    if (rbp_1 != 0)\n                    {\n                        goto label_401a53;\n                    }\n                    rbx_1 = (var_52_1 | data_60a2bc);\n                }\n            }\n            if ((rbx_1 == 0 || (rbx_1 != 0 && (rax_16 & 1) == 0)))\n            {\n                char* rax_12;\n                while (true)\n                {\n                    FILE* rdi_8 = stdout;\n                    rax_12 = stdout[5];\n                    if (rax_12 < stdout[6])\n                    {\n                        stdout[5] = &rax_12[1];\n                        *rax_12 = r13_1;\n                        break;\n                    }\n                    if (__overflow(rdi_8, r13_1) >= 0)\n                    {\n                        break;\n                    }\n                    error(1, *__errno_location(), dcgettext(nullptr, \"write error\", 5));\n                label_401c4b:\n                    rbx_1 = 0;\n                label_401a49:\n                    var_52_1 = r14;\n                    if (rbp_1 != 0)\n                    {\n                    label_401a53:\n                        if ((rbp_1 > 1 && var_51_1 != 0))\n                        {\n                            *rax_9 = 9;\n                        }\n                        if (fwrite_unlocked(rax_9, 1, rbp_1, stdout) != rbp_1)\n                        {\n                            goto label_401cfd;\n                        }\n                        var_51_1 = 0;\n                    }\n                    rbx_1 = (rbx_1 & (data_60a2bc | r14));\n                    if (r13_1 < 0)\n                    {\n                        break;\n                    }\n                    rbp_1 = 0;\n                }\n                if (rax_12 >= stdout[6])\n                {\n                    goto label_401c57;\n                }\n            }\n        } while (r13_1 != 0xa);\n    }\n}\n\n"
        },
        {
            "funcName": "_start",
            "funcStartAddr": "0x401d60",
            "funcEndAddr": "0x401d8a",
            "decompiledFuncCode": "int64_t _start(int64_t arg1, int64_t arg2, void (* arg3)()) __noreturn\n{\n    int64_t rax;\n    int64_t var_8 = rax;\n    __libc_start_main(main, __return_addr, &arg_8, init, fini, arg3, &var_8);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_401d8b",
            "funcStartAddr": "0x401d8b",
            "funcEndAddr": "0x401daa",
            "decompiledFuncCode": "void sub_401d8b()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_401daa",
            "funcStartAddr": "0x401daa",
            "funcEndAddr": "0x401de1",
            "decompiledFuncCode": "int64_t sub_401daa()\n{\n    int64_t rax;\n    int64_t rdx;\n    rdx = HIGHD(0);\n    rax = LOWD(0);\n    return (COMBINE(rdx, rax) / 2);\n}\n\n"
        },
        {
            "funcName": "sub_401de1",
            "funcStartAddr": "0x401de1",
            "funcEndAddr": "0x401e38",
            "decompiledFuncCode": "void sub_401de1()\n{\n    if (data_60a2a8 != 0)\n    {\n        return;\n    }\n    while (true)\n    {\n        int64_t rax_1 = data_60a2b0;\n        if (rax_1 >= 0)\n        {\n            break;\n        }\n        data_60a2b0 = (rax_1 + 1);\n        *(0x609e40 + ((rax_1 + 1) << 3))();\n    }\n    sub_401d8b();\n    data_60a2a8 = 1;\n}\n\n"
        },
        {
            "funcName": "thunk_401e38",
            "funcStartAddr": "0x401e38",
            "funcEndAddr": "0x401e3d",
            "decompiledFuncCode": "int64_t j_sub_401daa()\n{\n    /* tailcall */\n    return sub_401daa();\n}\n\n"
        },
        {
            "funcName": "sub_401e40",
            "funcStartAddr": "0x401e40",
            "funcEndAddr": "0x40219d",
            "decompiledFuncCode": "int64_t sub_401e40(int32_t arg1) __noreturn\n{\n    int64_t rbp = data_60a318;\n    if (arg1 != 0)\n    {\n        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"Try '%s --help' for more informa\u2026\", 5), rbp);\n    }\n    else\n    {\n        __printf_chk(1, dcgettext(nullptr, \"Usage: %s [OPTION]... [FILE]...\\n\", 5), rbp);\n        fputs_unlocked(dcgettext(nullptr, \"Convert blanks in each FILE to t\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nWith no FILE, or when FILE is \u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"\\nMandatory arguments to long op\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"  -a, --all        convert all b\u2026\", 5), stdout);\n        sub_402b00();\n        fputs_unlocked(dcgettext(nullptr, \"      --help     display this he\u2026\", 5), stdout);\n        fputs_unlocked(dcgettext(nullptr, \"      --version  output version \u2026\", 5), stdout);\n        void* const var_88 = &data_40674d;\n        void* const* rax_10 = &var_88;\n        void* const var_78_1 = \"coreutils\";\n        void* const var_70_1 = \"Multi-call invocation\";\n        void* const var_68_1 = \"sha224sum\";\n        void* const var_60_1 = \"sha2 utilities\";\n        void* const var_58_1 = \"sha256sum\";\n        void* const var_50_1 = \"sha2 utilities\";\n        void* const var_48_1 = \"sha384sum\";\n        void* const var_40_1 = \"sha2 utilities\";\n        void* const var_38_1 = \"sha512sum\";\n        void* const var_30_1 = \"sha2 utilities\";\n        int64_t var_28_1 = 0;\n        int64_t var_20_1 = 0;\n        bool c_1;\n        bool z_1;\n        do\n        {\n            rax_10 = &rax_10[2];\n            void* const rdi_8 = *rax_10;\n            c_1 = false;\n            z_1 = (rdi_8 & rdi_8) == 0;\n            if (z_1)\n            {\n                break;\n            }\n            void* const rsi_8 = \"unexpand\";\n            int64_t rcx_2 = 9;\n            while (rcx_2 != 0)\n            {\n                char temp0_1 = *rsi_8;\n                char temp1_1 = *rdi_8;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_8 = (rsi_8 + 1);\n                rdi_8 = (rdi_8 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n        } while ((((!z_1) && (!c_1)) - 0) != 0);\n        void* const rbp_1 = rax_10[1];\n        char* rax_21;\n        int32_t rax_22;\n        void* const r12_1;\n        if (rbp_1 == 0)\n        {\n            int64_t rcx_5;\n            int64_t rdx_5;\n            uint64_t r8_2;\n            ssize_t r9_2;\n            rcx_5 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            rax_21 = setlocale(5, nullptr, rdx_5, rcx_5, r8_2, r9_2, var_88, \"test invocation\");\n            if (rax_21 != 0)\n            {\n                rax_22 = strncmp(rax_21, &data_4067d1, 3);\n                if (rax_22 != 0)\n                {\n                    rbp_1 = \"unexpand\";\n                }\n            }\n            if ((rax_21 == 0 || (rax_21 != 0 && rax_22 == 0)))\n            {\n                rbp_1 = \"unexpand\";\n                r12_1 = \" invocation\";\n                __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"unexpand\");\n            }\n        }\n        else\n        {\n            int64_t rcx_3;\n            int64_t rdx_3;\n            uint64_t r8_1;\n            ssize_t r9_1;\n            rcx_3 = __printf_chk(1, dcgettext(nullptr, \"\\n%s online help: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n            char* rax_13 = setlocale(5, nullptr, rdx_3, rcx_3, r8_1, r9_1, var_88, \"test invocation\");\n            if (rax_13 == 0)\n            {\n                goto label_402090;\n            }\n            if (strncmp(rax_13, &data_4067d1, 3) == 0)\n            {\n                goto label_402090;\n            }\n        }\n        if ((((rbp_1 == 0 && rax_21 != 0) && rax_22 != 0) || rbp_1 != 0))\n        {\n            __printf_chk(1, dcgettext(nullptr, \"Report %s translation bugs to <h\u2026\", 5), \"unexpand\");\n        label_402090:\n            r12_1 = \" invocation\";\n            __printf_chk(1, dcgettext(nullptr, \"Full documentation at: <%s%s>\\n\", 5), \"https://www.gnu.org/software/cor\u2026\", \"unexpand\");\n            if (rbp_1 != \"unexpand\")\n            {\n                r12_1 = &data_40824c[0x1b];\n            }\n        }\n        __printf_chk(1, dcgettext(nullptr, \"or available locally via: info '\u2026\", 5), rbp_1, r12_1);\n    }\n    exit(arg1);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4021a0",
            "funcStartAddr": "0x4021a0",
            "funcEndAddr": "0x4021ea",
            "decompiledFuncCode": "int64_t sub_4021a0(int64_t arg1)\n{\n    if (data_60a2f8 != 0)\n    {\n        error(0, 0, dcgettext(nullptr, \"'/' specifier only allowed with \u2026\", 5));\n        data_60a2f8 = arg1;\n        return 0;\n    }\n    data_60a2f8 = arg1;\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_4021f0",
            "funcStartAddr": "0x4021f0",
            "funcEndAddr": "0x40223a",
            "decompiledFuncCode": "int64_t sub_4021f0(int64_t arg1)\n{\n    if (data_60a2f0 != 0)\n    {\n        error(0, 0, dcgettext(nullptr, \"'+' specifier only allowed with \u2026\", 5));\n        data_60a2f0 = arg1;\n        return 0;\n    }\n    data_60a2f0 = arg1;\n    return 1;\n}\n\n"
        },
        {
            "funcName": "sub_402240",
            "funcStartAddr": "0x402240",
            "funcEndAddr": "0x40235f",
            "decompiledFuncCode": "int64_t sub_402240(int64_t arg1)\n{\n    int64_t rdx = data_60a2d8;\n    int64_t rax = data_60a2e8;\n    int64_t rcx = data_60a2e0;\n    int64_t rbp_1;\n    int64_t rsi_1;\n    int64_t rdi;\n    if (rdx == 0)\n    {\n        rbp_1 = arg1;\n    }\n    else\n    {\n        rsi_1 = (rdx << 3);\n        rdi = *((rax + rsi_1) - 8);\n        if (rdi <= arg1)\n        {\n            rbp_1 = (arg1 - rdi);\n        }\n    }\n    if (((rdx == 0 || (rdx != 0 && rdi <= arg1)) && rdx != rcx))\n    {\n        goto label_4022a4;\n    }\n    if ((rdx != 0 && rdi > arg1))\n    {\n        if (rdx != rcx)\n        {\n            *(rax + rsi_1) = arg1;\n            data_60a2d8 = (rdx + 1);\n        label_402293:\n            return rax;\n        }\n        rbp_1 = 0;\n    }\n    if ((((rdx == 0 || (rdx != 0 && rdi <= arg1)) && rdx == rcx) || (rdx != 0 && rdi > arg1)))\n    {\n        uint64_t rsi_2;\n        if (rax != 0)\n        {\n            if (rcx > 0xaaaaaaaaaaaaaa9)\n            {\n            label_40233f:\n                sub_405080();\n                /* no return */\n            }\n            rcx = ((rcx + (rcx >> 1)) + 1);\n            rsi_2 = (rcx << 3);\n        }\n        else if (rcx == 0)\n        {\n            rsi_2 = 0x80;\n            rcx = 0x10;\n        }\n        else\n        {\n            int64_t rdx_4;\n            rdx_4 = (rcx >> 0x3d) != 0;\n            rsi_2 = (rcx << 3);\n            if (rsi_2 < 0)\n            {\n                goto label_40233f;\n            }\n            if (rdx_4 != 0)\n            {\n                goto label_40233f;\n            }\n        }\n        data_60a2e0 = rcx;\n        rax = sub_404e90(rax, rsi_2);\n        rdx = data_60a2d8;\n        data_60a2e8 = rax;\n    label_4022a4:\n        *(rax + (rdx << 3)) = arg1;\n        bool cond:0_1 = data_60a4a0 >= rbp_1;\n        data_60a2d8 = (rdx + 1);\n        if ((!cond:0_1))\n        {\n            data_60a4a0 = rbp_1;\n            return rax;\n        }\n        goto label_402293;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_402360",
            "funcStartAddr": "0x402360",
            "funcEndAddr": "0x4026a7",
            "decompiledFuncCode": "void sub_402360(char* arg1)\n{\n    char r15 = *arg1;\n    if (r15 != 0)\n    {\n        char* rbx_1 = arg1;\n        int64_t r14_1 = 0;\n        char var_40_1 = 1;\n        char r13_1 = 0;\n        char* var_48_1 = nullptr;\n        char r12_1 = 0;\n        char rbp_1 = 0;\n        while (true)\n        {\n            char* rax;\n            uint16_t* rax_2;\n            if (r15 != 0x2c)\n            {\n                rax_2 = *__ctype_b_loc();\n                if ((rax_2[r15] & 1) == 0)\n                {\n                    if (r15 == 0x2f)\n                    {\n                        if (rbp_1 != 0)\n                        {\n                            r13_1 = 0;\n                            r12_1 = rbp_1;\n                            error(0, 0, dcgettext(nullptr, \"'/' specifier not at start of nu\u2026\", 5), sub_404870(rbx_1));\n                            rax = rbx_1;\n                            var_40_1 = 0;\n                        }\n                        else\n                        {\n                            r13_1 = 0;\n                            rax = rbx_1;\n                            r12_1 = 1;\n                        }\n                        goto label_4023f0;\n                    }\n                    if (r15 == 0x2b)\n                    {\n                        if (rbp_1 != 0)\n                        {\n                            r13_1 = rbp_1;\n                            r12_1 = 0;\n                            error(0, 0, dcgettext(nullptr, \"'+' specifier not at start of nu\u2026\", 5), sub_404870(rbx_1));\n                            rax = rbx_1;\n                            var_40_1 = 0;\n                        }\n                        else\n                        {\n                            r12_1 = 0;\n                            rax = rbx_1;\n                            r13_1 = 1;\n                        }\n                        goto label_4023f0;\n                    }\n                    int32_t rdx_2 = (r15 - 0x30);\n                    if (rdx_2 > 9)\n                    {\n                        error(0, 0, dcgettext(nullptr, \"tab size contains invalid charac\u2026\", 5), sub_404870(rbx_1));\n                    label_4026a2:\n                        exit(1);\n                        /* no return */\n                    }\n                    if (rbp_1 == 0)\n                    {\n                        var_48_1 = rbx_1;\n                        r14_1 = rdx_2;\n                        rax = rbx_1;\n                        rbp_1 = 1;\n                        goto label_4023f0;\n                    }\n                    int64_t rax_5;\n                    if (r14_1 <= 0x1999999999999999)\n                    {\n                        rax_5 = (rdx_2 + (r14_1 * 0xa));\n                        if (rax_5 >= r14_1)\n                        {\n                            r14_1 = rax_5;\n                        label_4024b0:\n                            rax = rbx_1;\n                        label_4023f0:\n                            r15 = rax[1];\n                            rbx_1 = &rax[1];\n                            if (r15 != 0)\n                            {\n                                continue;\n                            }\n                        }\n                    }\n                    if ((r14_1 > 0x1999999999999999 || (r14_1 <= 0x1999999999999999 && rax_5 < r14_1)))\n                    {\n                        uint64_t rax_7 = strspn(var_48_1, \"0123456789\");\n                        char* rax_8 = sub_4050c0(var_48_1);\n                        var_40_1 = sub_404870(rax_8);\n                        error(0, 0, dcgettext(nullptr, \"tab stop is too large %s\", 5), var_40_1);\n                        free(rax_8);\n                        var_40_1 = 0;\n                        rax = &var_48_1[(rax_7 - 1)];\n                        goto label_4023f0;\n                    }\n                }\n            }\n            if ((r15 == 0x2c || (r15 != 0x2c && (*(rax_2 + (r15 << 1)) & 1) != 0)))\n            {\n                if (rbp_1 == 0)\n                {\n                    goto label_4024b0;\n                }\n                if (r12_1 != 0)\n                {\n                    char rax_6 = sub_4021a0(r14_1);\n                    r12_1 = rax_6;\n                    if (rax_6 != 0)\n                    {\n                        rax = rbx_1;\n                        rbp_1 = 0;\n                        goto label_4023f0;\n                    }\n                    goto label_4026a2;\n                }\n                if (r13_1 == 0)\n                {\n                    sub_402240(r14_1);\n                    r12_1 = r13_1;\n                    rbp_1 = 0;\n                    rax = rbx_1;\n                    goto label_4023f0;\n                }\n                char rax_3 = sub_4021f0(r14_1);\n                r13_1 = rax_3;\n                if (rax_3 == 0)\n                {\n                    goto label_4026a2;\n                }\n                rbp_1 = 0;\n                r15 = rbx_1[1];\n                rbx_1 = &rbx_1[1];\n                if (r15 != 0)\n                {\n                    continue;\n                }\n            }\n            if (((r15 != 0x2c && (*(rax_2 + (r15 << 1)) & 1) == 0) || ((r15 == 0x2c || (r15 != 0x2c && (*(rax_2 + (r15 << 1)) & 1) != 0)) && rbp_1 != 0)))\n            {\n                if (rbp_1 != 0)\n                {\n                    if (var_40_1 == 0)\n                    {\n                        goto label_4026a2;\n                    }\n                    if (r12_1 != 0)\n                    {\n                        if (sub_4021a0(r14_1) != 0)\n                        {\n                            break;\n                        }\n                        goto label_4026a2;\n                    }\n                    if (r13_1 == 0)\n                    {\n                        /* tailcall */\n                        return sub_402240(r14_1);\n                    }\n                    var_40_1 = sub_4021f0(r14_1);\n                }\n                if (var_40_1 != 0)\n                {\n                    break;\n                }\n                goto label_4026a2;\n            }\n        }\n    }\n}\n\n"
        },
        {
            "funcName": "sub_4026b0",
            "funcStartAddr": "0x4026b0",
            "funcEndAddr": "0x4027f5",
            "decompiledFuncCode": "int64_t sub_4026b0()\n{\n    int64_t rcx = data_60a2d8;\n    int64_t rsi = data_60a2e8;\n    int64_t rdx_5;\n    if (rcx == 0)\n    {\n        int64_t rax_5;\n        while (true)\n        {\n            rdx_5 = data_60a2f0;\n            rax_5 = data_60a2f8;\n            if (rdx_5 == 0)\n            {\n                break;\n            }\n        label_4027e2:\n            if (data_60a2f8 == 0)\n            {\n                break;\n            }\n        label_40275f:\n            error(1, 0, dcgettext(nullptr, \"'/' specifier is mutually exclus\u2026\", 5));\n        }\n        if (rdx_5 != 0)\n        {\n            rax_5 = rdx_5;\n        }\n        else if (rax_5 == 0)\n        {\n            rax_5 = 8;\n        }\n        data_60a4a0 = rax_5;\n        data_60a300 = rax_5;\n        return rax_5;\n    }\n    int64_t r8_1 = *rsi;\n    int64_t rdi_1 = r8_1;\n    if (r8_1 != 0)\n    {\n        int64_t rax_1 = 0;\n        while (true)\n        {\n            rax_1 = (rax_1 + 1);\n            if (rcx == rax_1)\n            {\n                int64_t rax_2 = data_60a2f0;\n                if ((rax_2 != 0 && data_60a2f8 != 0))\n                {\n                    goto label_40275f;\n                }\n                if (rcx == 1)\n                {\n                    rax_2 = (rax_2 | data_60a2f8);\n                    if (rax_2 == 0)\n                    {\n                        data_60a300 = r8_1;\n                    }\n                }\n                if ((rcx != 1 || (rcx == 1 && rax_2 != 0)))\n                {\n                    data_60a300 = 0;\n                }\n                return rax_2;\n            }\n            int64_t rdx_1 = *(rsi + (rax_1 << 3));\n            if (rdx_1 == 0)\n            {\n                break;\n            }\n            if (rdi_1 >= rdx_1)\n            {\n                error(1, 0, dcgettext(nullptr, \"tab sizes must be ascending\", 5));\n                break;\n            }\n            rdi_1 = rdx_1;\n        }\n    }\n    rdx_5 = error(1, 0, dcgettext(nullptr, \"tab size cannot be 0\", 5));\n    goto label_4027e2;\n}\n\n"
        },
        {
            "funcName": "sub_402800",
            "funcStartAddr": "0x402800",
            "funcEndAddr": "0x4028a8",
            "decompiledFuncCode": "int64_t sub_402800(int64_t arg1, int64_t* arg2, char* arg3)\n{\n    int64_t rcx_2 = data_60a300;\n    *arg3 = 0;\n    if (rcx_2 == 0)\n    {\n        int64_t rcx = *arg2;\n        int64_t rax_1 = data_60a2d8;\n        int64_t r8_1;\n        if (rax_1 > rcx)\n        {\n            int64_t r9_1 = data_60a2e8;\n            r8_1 = *(r9_1 + (rcx << 3));\n            if (arg1 >= r8_1)\n            {\n                int64_t rcx_1 = (rcx + 1);\n                while (true)\n                {\n                    *arg2 = rcx_1;\n                    if (rax_1 == rcx_1)\n                    {\n                        break;\n                    }\n                    rcx_1 = (rcx_1 + 1);\n                    r8_1 = *((r9_1 + (rcx_1 << 3)) - 8);\n                    if (arg1 < r8_1)\n                    {\n                        return r8_1;\n                    }\n                }\n            }\n        }\n        if ((rax_1 <= rcx || (rax_1 > rcx && arg1 >= r8_1)))\n        {\n            rcx_2 = data_60a2f8;\n            if (rcx_2 == 0)\n            {\n                r8_1 = data_60a2f0;\n                if (r8_1 != 0)\n                {\n                    r8_1 = ((r8_1 + arg1) - (COMBINE(0, (arg1 - *((data_60a2e8 + (rax_1 << 3)) - 8))) % r8_1));\n                }\n                else\n                {\n                    *arg3 = 1;\n                }\n            }\n        }\n        if (((rax_1 > rcx && arg1 < r8_1) || ((rax_1 <= rcx || (rax_1 > rcx && arg1 >= r8_1)) && rcx_2 == 0)))\n        {\n            return r8_1;\n        }\n    }\n    return ((rcx_2 + arg1) - (COMBINE(0, arg1) % rcx_2));\n}\n\n"
        },
        {
            "funcName": "sub_4028b0",
            "funcStartAddr": "0x4028b0",
            "funcEndAddr": "0x4028cb",
            "decompiledFuncCode": "void sub_4028b0(int64_t arg1)\n{\n    data_60a2c8 = 0;\n    if (arg1 == 0)\n    {\n        arg1 = 0x60a1f0;\n    }\n    data_60a2d0 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_4028d0",
            "funcStartAddr": "0x4028d0",
            "funcEndAddr": "0x402aa9",
            "decompiledFuncCode": "FILE* sub_4028d0(char* arg1)\n{\n    if (arg1 != 0)\n    {\n        int64_t rsi_1 = data_60a2c0;\n        if (rsi_1 == 0)\n        {\n            __assert_fail(\"prev_file\", \"src/expand-common.c\", 0x155, \"next_file\");\n            /* no return */\n        }\n        bool c_1 = false;\n        bool z_1 = (*arg1 & 0x20) == 0;\n        if ((!z_1))\n        {\n            char* rax_12 = sub_4046f0(0, 3, rsi_1);\n            int32_t* rax_13 = __errno_location();\n            c_1 = false;\n            z_1 = (rax_13 ^ rax_13) == 0;\n            error(0, *rax_13, \"%s\", rax_12);\n            rsi_1 = data_60a2c0;\n            data_60a2b8 = 1;\n        }\n        int64_t rcx_1 = 2;\n        void* const rdi = &data_40824a;\n        while (rcx_1 != 0)\n        {\n            char temp5_1 = *rsi_1;\n            char temp6_1 = *rdi;\n            c_1 = temp5_1 < temp6_1;\n            z_1 = temp5_1 == temp6_1;\n            rsi_1 = (rsi_1 + 1);\n            rdi = (rdi + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z_1))\n            {\n                break;\n            }\n        }\n        if ((((!z_1) && (!c_1)) - 0) == 0)\n        {\n            clearerr_unlocked(arg1);\n        }\n        else if (sub_4050e0(arg1) != 0)\n        {\n            error(0, *__errno_location(), \"%s\", sub_4046f0(0, 3, data_60a2c0));\n            data_60a2b8 = 1;\n        }\n    }\n    int64_t rax_5 = data_60a2d0;\n    char* rbx_2 = *rax_5;\n    data_60a2d0 = (rax_5 + 8);\n    bool c_2 = false;\n    bool z_2 = (rbx_2 & rbx_2) == 0;\n    if ((!z_2))\n    {\n        while (true)\n        {\n            int64_t rcx_3 = 2;\n            char* rsi_3 = rbx_2;\n            void* const rdi_2 = &data_40824a;\n            while (rcx_3 != 0)\n            {\n                char temp3_1 = *rsi_3;\n                char temp4_1 = *rdi_2;\n                c_2 = temp3_1 < temp4_1;\n                z_2 = temp3_1 == temp4_1;\n                rsi_3 = &rsi_3[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_3 = (rcx_3 - 1);\n                if ((!z_2))\n                {\n                    break;\n                }\n            }\n            rax_5 = ((!z_2) && (!c_2));\n            rax_5 = (rax_5 - 0);\n            FILE* rax_1;\n            if (rax_5 == 0)\n            {\n                rax_1 = stdin;\n                data_60a2c8 = 1;\n            }\n            else\n            {\n                rax_1 = fopen(rbx_2, \"r\");\n            }\n            if (((rax_5 == 0 && stdin != 0) || (rax_5 != 0 && rax_1 != 0)))\n            {\n                data_60a2c0 = rbx_2;\n                sub_402c20(rax_1, 2);\n                return rax_1;\n            }\n            if (((rax_5 == 0 && stdin == 0) || (rax_5 != 0 && rax_1 == 0)))\n            {\n                error(0, *__errno_location(), \"%s\", sub_4046f0(0, 3, rbx_2));\n                rax_5 = data_60a2d0;\n                data_60a2b8 = 1;\n                rbx_2 = *rax_5;\n                data_60a2d0 = (rax_5 + 8);\n                c_2 = false;\n                z_2 = (rbx_2 & rbx_2) == 0;\n                if (z_2)\n                {\n                    break;\n                }\n            }\n        }\n    }\n    return 0;\n}\n\n"
        },
        {
            "funcName": "sub_402ab0",
            "funcStartAddr": "0x402ab0",
            "funcEndAddr": "0x402b00",
            "decompiledFuncCode": "void sub_402ab0()\n{\n    if (data_60a2c8 == 0)\n    {\n        return;\n    }\n    if (sub_4050e0(stdin) != 0)\n    {\n        error(1, *__errno_location(), &data_40824a);\n        /* tailcall */\n        return sub_402b00();\n    }\n}\n\n"
        },
        {
            "funcName": "sub_402b00",
            "funcStartAddr": "0x402b00",
            "funcEndAddr": "0x402b48",
            "decompiledFuncCode": "int64_t sub_402b00()\n{\n    fputs_unlocked(dcgettext(nullptr, \"  -t, --tabs=LIST  use comma sep\u2026\", 5), stdout);\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"                     The last sp\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_402b50",
            "funcStartAddr": "0x402b50",
            "funcEndAddr": "0x402b58",
            "decompiledFuncCode": "int64_t sub_402b50(int64_t arg1)\n{\n    data_60a310 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_402b60",
            "funcStartAddr": "0x402b60",
            "funcEndAddr": "0x402b68",
            "decompiledFuncCode": "int64_t sub_402b60(char arg1)\n{\n    data_60a308 = arg1;\n}\n\n"
        },
        {
            "funcName": "sub_402b70",
            "funcStartAddr": "0x402b70",
            "funcEndAddr": "0x402c0e",
            "decompiledFuncCode": "void sub_402b70(void* arg1)\n{\n    int32_t rax = sub_406050(stdout);\n    int32_t* rax_1;\n    if (rax != 0)\n    {\n        rax_1 = __errno_location();\n        if ((data_60a308 == 0 || (data_60a308 != 0 && *rax_1 != 0x20)))\n        {\n            char* rax_3 = dcgettext(nullptr, \"write error\", 5);\n            int64_t rdi_2 = data_60a310;\n            if (rdi_2 == 0)\n            {\n                error(0, *rax_1, \"%s\", rax_3);\n            }\n            else\n            {\n                error(0, *rax_1, \"%s: %s\", sub_4046c0(rdi_2), rax_3);\n            }\n        }\n    }\n    if (((rax == 0 || ((rax != 0 && data_60a308 != 0) && *rax_1 == 0x20)) && sub_406050(stderr) == 0))\n    {\n        return;\n    }\n    _exit(data_60a208);\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_402c10",
            "funcStartAddr": "0x402c10",
            "funcEndAddr": "0x402c15",
            "decompiledFuncCode": "int64_t sub_402c10(int32_t arg1, int64_t arg2, off64_t arg3, int32_t arg4)\n{\n    /* tailcall */\n    return posix_fadvise(arg1, arg2, arg3, arg4);\n}\n\n"
        },
        {
            "funcName": "sub_402c20",
            "funcStartAddr": "0x402c20",
            "funcEndAddr": "0x402c41",
            "decompiledFuncCode": "void sub_402c20(FILE* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        return;\n    }\n    /* tailcall */\n    return posix_fadvise(fileno(arg1), 0, 0, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_402c50",
            "funcStartAddr": "0x402c50",
            "funcEndAddr": "0x402ce9",
            "decompiledFuncCode": "char* sub_402c50(char* arg1)\n{\n    if (arg1 == 0)\n    {\n        fwrite(\"A NULL argv[0] was passed throug\u2026\", 1, 0x37, stderr);\n        abort();\n        /* no return */\n    }\n    void* rbx = arg1;\n    char* rax = strrchr(arg1, 0x2f);\n    if (rax != 0)\n    {\n        void* r8_1 = &rax[1];\n        int64_t rdx_2 = (r8_1 - rbx);\n        bool c_1 = rdx_2 < 6;\n        bool z_1 = rdx_2 == 6;\n        if ((!(z_1 || (rdx_2 - 6) < 0 != (rdx_2 - 6))))\n        {\n            void* rsi_1 = &rax[-6];\n            void* const rdi = \"/.libs/\";\n            int64_t rcx_1 = 7;\n            while (rcx_1 != 0)\n            {\n                char temp0_1 = *rsi_1;\n                char temp1_1 = *rdi;\n                c_1 = temp0_1 < temp1_1;\n                z_1 = temp0_1 == temp1_1;\n                rsi_1 = (rsi_1 + 1);\n                rdi = (rdi + 1);\n                rcx_1 = (rcx_1 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rdx_2 = ((!z_1) && (!c_1));\n            rdx_2 = (rdx_2 - 0);\n            bool c_2 = false;\n            bool z_2 = (rdx_2 & rdx_2) == 0;\n            if (z_2)\n            {\n                void* const rdi_1 = &data_407058;\n                int64_t rcx_2 = 3;\n                void* rsi_2 = r8_1;\n                rbx = r8_1;\n                while (rcx_2 != 0)\n                {\n                    char temp2_1 = *rsi_2;\n                    char temp3_1 = *rdi_1;\n                    c_2 = temp2_1 < temp3_1;\n                    z_2 = temp2_1 == temp3_1;\n                    rsi_2 = (rsi_2 + 1);\n                    rdi_1 = (rdi_1 + 1);\n                    rcx_2 = (rcx_2 - 1);\n                    if ((!z_2))\n                    {\n                        break;\n                    }\n                }\n                rdx_2 = ((!z_2) && (!c_2));\n                rdx_2 = (rdx_2 - 0);\n                if (rdx_2 == 0)\n                {\n                    rbx = &rax[4];\n                    program_invocation_short_name = rbx;\n                }\n            }\n        }\n    }\n    data_60a318 = rbx;\n    __progname_full = rbx;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_402cf0",
            "funcStartAddr": "0x402cf0",
            "funcEndAddr": "0x402de2",
            "decompiledFuncCode": "char* sub_402cf0(char* arg1, int32_t arg2)\n{\n    char* rax = dcgettext(nullptr, arg1, 5);\n    char* rbx = rax;\n    if (arg1 == rax)\n    {\n        char* rax_2 = sub_406110();\n        char rdx_2 = (*rax_2 & 0xdf);\n        if (rdx_2 != 0x55)\n        {\n            if (rdx_2 != 0x47)\n            {\n            label_402dd1:\n                void* const rbx_1 = &data_40705c;\n                if (arg2 != 9)\n                {\n                    rbx_1 = \"'\";\n                }\n                return rbx_1;\n            }\n            if ((rax_2[1] & 0xdf) != 0x42)\n            {\n                goto label_402dd1;\n            }\n            if (rax_2[2] != 0x31)\n            {\n                goto label_402dd1;\n            }\n            if (rax_2[3] != 0x38)\n            {\n                goto label_402dd1;\n            }\n            if (rax_2[4] != 0x30)\n            {\n                goto label_402dd1;\n            }\n            if (rax_2[5] != 0x33)\n            {\n                goto label_402dd1;\n            }\n            if (rax_2[6] != 0x30)\n            {\n                goto label_402dd1;\n            }\n            if (rax_2[7] != 0)\n            {\n                goto label_402dd1;\n            }\n            bool cond:2_1 = *rbx != 0x60;\n            rbx = &data_407065;\n            if (cond:2_1)\n            {\n                rbx = &data_407062;\n            }\n        }\n        else\n        {\n            if ((rax_2[1] & 0xdf) != 0x54)\n            {\n                goto label_402dd1;\n            }\n            if ((rax_2[2] & 0xdf) != 0x46)\n            {\n                goto label_402dd1;\n            }\n            if (rax_2[3] != 0x2d)\n            {\n                goto label_402dd1;\n            }\n            if (rax_2[4] != 0x38)\n            {\n                goto label_402dd1;\n            }\n            if (rax_2[5] != 0)\n            {\n                goto label_402dd1;\n            }\n            bool cond:1_1 = *rbx != 0x60;\n            rbx = &data_407069;\n            if (cond:1_1)\n            {\n                rbx = &data_40705e;\n            }\n        }\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "sub_402df0",
            "funcStartAddr": "0x401800",
            "funcEndAddr": "0x404011",
            "decompiledFuncCode": "int64_t sub_402df0(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    uint32_t arg5, int32_t arg6, int64_t arg7, char* arg8, char* arg9)\n{\n    char* r15 = arg1;\n    uint64_t r14 = arg2;\n    uint32_t r13 = arg5;\n    uint64_t rax;\n    uint64_t rdx;\n    rax = __ctype_get_mb_cur_max();\n    int32_t rbp_1 = (arg6 & 2);\n    bool var_5c = rbp_1 != 0;\n    bool cond:1 = r13 == 0xa;\n    if (r13 > 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    uint64_t r11 = arg4;\n    uint64_t var_c0;\n    char var_a9;\n    uint64_t var_a0_1;\n    char const* const var_78_1;\n    uint64_t var_70;\n    char var_5b_1;\n    uint64_t rax_1;\n    int64_t rbx_1;\n    uint32_t r10;\n    if ((r13 == 1 || (r13 == 4 && rbp_1 != 0)))\n    {\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 0;\n        r13 = 2;\n        var_5b_1 = 0;\n        var_70 = 0;\n        var_5c = true;\n        var_c0 = 0;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n    label_402e88:\n        while (true)\n        {\n            uint64_t r9 = r11;\n            int64_t r12_1 = 0;\n            uint32_t r11_1 = r13;\n            while (true)\n            {\n                r13 = r9 != r12_1;\n                if (r9 == -1)\n                {\n                    r13 = *(arg3 + r12_1) != 0;\n                }\n                uint32_t r13_1;\n                if (r13 == 0)\n                {\n                    r11 = r9;\n                    rdx = r11_1 == 2;\n                    if ((rbx_1 == 0 && (var_5c & rdx) != 0))\n                    {\n                        r13_1 = 2;\n                    label_4031fc:\n                        if (var_c0 != 0)\n                        {\n                            r13_1 = 4;\n                        }\n                        goto label_403244;\n                    }\n                    rax_1 = (var_5c ^ 1);\n                    rdx = (rdx & rax_1);\n                    if (rdx == 0)\n                    {\n                        rdx = rax_1;\n                    }\n                    else if (var_5b_1 != 0)\n                    {\n                        if (var_a9 != 0)\n                        {\n                            rbx_1 = sub_402df0(r15, var_70, arg3, r11, 5, arg6, arg7, arg8, arg9);\n                        }\n                        else\n                        {\n                            rax_1 = r14 == 0;\n                            rdx = var_70 != 0;\n                            rax_1 = (rax_1 & rdx);\n                            if (rax_1 != 0)\n                            {\n                                r14 = var_70;\n                                break;\n                            }\n                            rdx = var_5b_1;\n                        }\n                    }\n                    if (((rdx == 0 || (rdx != 0 && var_5b_1 == 0)) || ((rdx != 0 && var_5b_1 != 0) && var_a9 == 0)))\n                    {\n                        if ((var_78_1 != 0 && rdx != 0))\n                        {\n                            char const rdx_17 = *var_78_1;\n                            if (rdx_17 != 0)\n                            {\n                                void* rax_51 = (var_78_1 - rbx_1);\n                                do\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rdx_17;\n                                    }\n                                    rbx_1 = (rbx_1 + 1);\n                                    rdx_17 = *(rax_51 + rbx_1);\n                                } while (rdx_17 != 0);\n                            }\n                        }\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = 0;\n                        }\n                    }\n                    goto label_40325b;\n                }\n                rax_1 = r11_1 != 2;\n                rax_1 = (rax_1 & var_c0);\n                char* r8 = (arg3 + r12_1);\n                uint64_t var_b8;\n                var_b8 = rax_1;\n                uint32_t rax_8;\n                uint64_t rax_12;\n                char rax_14;\n                int32_t rcx_2;\n                uint64_t rbp_3;\n                if (rax_1 == 0)\n                {\n                    rbp_3 = *r8;\n                    if (rbp_3 > 0x7e)\n                    {\n                        goto label_403395;\n                    }\n                    switch (rbp_3)\n                    {\n                        case 0:\n                        {\n                            if (var_c0 == 0)\n                            {\n                                if ((arg6 & 1) != 0)\n                                {\n                                    r12_1 = (r12_1 + 1);\n                                    continue;\n                                }\n                                else\n                                {\n                                    var_b8 = 0;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    rbp_3 = 0;\n                                }\n                                goto label_402fe5;\n                            }\n                            goto label_4032d0;\n                        }\n                        case 1:\n                        case 2:\n                        case 3:\n                        case 4:\n                        case 5:\n                        case 6:\n                        case 0xe:\n                        case 0xf:\n                        case 0x10:\n                        case 0x11:\n                        case 0x12:\n                        case 0x13:\n                        case 0x14:\n                        case 0x15:\n                        case 0x16:\n                        case 0x17:\n                        case 0x18:\n                        case 0x19:\n                        case 0x1a:\n                        case 0x1b:\n                        case 0x1c:\n                        case 0x1d:\n                        case 0x1e:\n                        case 0x1f:\n                        case 0x40:\n                        {\n                            goto label_403395;\n                        }\n                        case 7:\n                        {\n                            rbp_3 = 7;\n                            rcx_2 = 0x61;\n                            rdx = r11_1 == 2;\n                            goto label_4031c0;\n                        }\n                        case 8:\n                        {\n                            rbp_3 = 8;\n                            rcx_2 = 0x62;\n                            rdx = r11_1 == 2;\n                        label_4031c0:\n                            if (var_c0 == 0)\n                            {\n                                goto label_4031cb;\n                            }\n                            rbp_3 = rcx_2;\n                            r13 = 0;\n                        label_403027:\n                            if (var_5c == 0)\n                            {\n                                goto label_403038;\n                            }\n                        label_4031f0:\n                            r13_1 = r11_1;\n                            rax_14 = rdx;\n                            r11 = r9;\n                            goto label_4031f8;\n                        }\n                        case 9:\n                        {\n                            rbp_3 = 9;\n                            rcx_2 = 0x74;\n                            goto label_40342b;\n                        }\n                        case 0xa:\n                        {\n                            rbp_3 = 0xa;\n                            rcx_2 = 0x6e;\n                        label_40342b:\n                            rdx = r11_1 == 2;\n                            bool rax_26 = (var_5c & rdx);\n                            var_b8 = rax_26;\n                            if (rax_26 != 0)\n                            {\n                            label_40343a:\n                                r11 = r9;\n                                r13_1 = 2;\n                                goto label_4031fc;\n                            }\n                            goto label_4031c0;\n                        }\n                        case 0xb:\n                        {\n                            rbp_3 = 0xb;\n                            rcx_2 = 0x76;\n                            rdx = r11_1 == 2;\n                            goto label_4031c0;\n                        }\n                        case 0xc:\n                        {\n                            rbp_3 = 0xc;\n                            rcx_2 = 0x66;\n                            rdx = r11_1 == 2;\n                            goto label_4031c0;\n                        }\n                        case 0xd:\n                        {\n                            rbp_3 = 0xd;\n                            rcx_2 = 0x72;\n                            goto label_40342b;\n                        }\n                        case 0x20:\n                        {\n                            rbp_3 = 0x20;\n                            rdx = r11_1 == 2;\n                            goto label_402fc6;\n                        }\n                        case 0x21:\n                        case 0x22:\n                        case 0x24:\n                        case 0x26:\n                        case 0x28:\n                        case 0x29:\n                        case 0x2a:\n                        case 0x3b:\n                        case 0x3c:\n                        case 0x3d:\n                        case 0x3e:\n                        case 0x5b:\n                        case 0x5e:\n                        case 0x60:\n                        case 0x7c:\n                        {\n                            rdx = r11_1 == 2;\n                            r13 = 0;\n                        label_402fc6:\n                            if (var_5c == 0)\n                            {\n                                goto label_402fe5;\n                            }\n                            if (rdx == 0)\n                            {\n                                goto label_402fe5;\n                            }\n                            goto label_40343a;\n                        }\n                        case 0x23:\n                        case 0x7e:\n                        {\n                            rdx = r11_1 == 2;\n                        label_402fbd:\n                            if (r12_1 != 0)\n                            {\n                                goto label_4031cb;\n                            }\n                            goto label_402fc6;\n                        }\n                        case 0x25:\n                        case 0x2b:\n                        case 0x2c:\n                        case 0x2d:\n                        case 0x2e:\n                        case 0x2f:\n                        case 0x30:\n                        case 0x31:\n                        case 0x32:\n                        case 0x33:\n                        case 0x34:\n                        case 0x35:\n                        case 0x36:\n                        case 0x37:\n                        case 0x38:\n                        case 0x39:\n                        case 0x3a:\n                        case 0x41:\n                        case 0x42:\n                        case 0x43:\n                        case 0x44:\n                        case 0x45:\n                        case 0x46:\n                        case 0x47:\n                        case 0x48:\n                        case 0x49:\n                        case 0x4a:\n                        case 0x4b:\n                        case 0x4c:\n                        case 0x4d:\n                        case 0x4e:\n                        case 0x4f:\n                        case 0x50:\n                        case 0x51:\n                        case 0x52:\n                        case 0x53:\n                        case 0x54:\n                        case 0x55:\n                        case 0x56:\n                        case 0x57:\n                        case 0x58:\n                        case 0x59:\n                        case 0x5a:\n                        case 0x5d:\n                        case 0x5f:\n                        case 0x61:\n                        case 0x62:\n                        case 0x63:\n                        case 0x64:\n                        case 0x65:\n                        case 0x66:\n                        case 0x67:\n                        case 0x68:\n                        case 0x69:\n                        case 0x6a:\n                        case 0x6b:\n                        case 0x6c:\n                        case 0x6d:\n                        case 0x6e:\n                        case 0x6f:\n                        case 0x70:\n                        case 0x71:\n                        case 0x72:\n                        case 0x73:\n                        case 0x74:\n                        case 0x75:\n                        case 0x76:\n                        case 0x77:\n                        case 0x78:\n                        case 0x79:\n                        case 0x7a:\n                        {\n                        label_4033f0:\n                            rdx = r11_1 == 2;\n                        label_402fe5:\n                            rax_8 = ((((var_c0 ^ 1) | rdx) ^ 1) | var_5c);\n                            if (rax_8 == 0)\n                            {\n                                goto label_4030ec;\n                            }\n                            goto label_402fef;\n                        }\n                        case 0x27:\n                        {\n                            goto label_40316d;\n                        }\n                        case 0x3f:\n                        {\n                            goto label_40313d;\n                        }\n                        case 0x5c:\n                        {\n                            if (r11_1 != 2)\n                            {\n                                goto label_40319a;\n                            }\n                            if (var_5c != 0)\n                            {\n                                goto label_403f2d;\n                            }\n                            r12_1 = (r12_1 + 1);\n                            rax_12 = r10;\n                            r13 = 0;\n                            rbp_3 = 0x5c;\n                            goto label_403104;\n                        }\n                        case 0x7b:\n                        case 0x7d:\n                        {\n                            goto label_402f99;\n                        }\n                    }\n                }\n                else\n                {\n                    char var_98;\n                    uint64_t var_90;\n                    uint32_t var_88;\n                    char rax_27;\n                    char rax_28;\n                    if (var_a0_1 != 0)\n                    {\n                        int64_t rbp_2 = (r12_1 + var_a0_1);\n                        if ((r9 == -1 && var_a0_1 > 1))\n                        {\n                            var_90 = r10;\n                            var_98 = r8;\n                            uint64_t rax_3;\n                            rax_3 = strlen(arg3);\n                            r10 = var_90;\n                            r8 = var_98;\n                            r9 = rax_3;\n                        }\n                        if (rbp_2 > r9)\n                        {\n                            goto label_403590;\n                        }\n                        uint64_t var_80;\n                        var_80 = r11_1;\n                        var_88 = r9;\n                        var_90 = r10;\n                        var_98 = r8;\n                        int32_t rax_4;\n                        rax_4 = memcmp(r8, var_78_1, var_a0_1);\n                        r8 = var_98;\n                        r10 = var_90;\n                        r9 = var_88;\n                        r11_1 = var_80;\n                        if (rax_4 != 0)\n                        {\n                            goto label_403590;\n                        }\n                        if (var_5c != 0)\n                        {\n                        label_403ee0:\n                            r13_1 = r11_1;\n                            r11 = r9;\n                        label_403244:\n                            rbx_1 = sub_402df0(r15, r14, arg3, r11, r13_1, (arg6 & 0xfffffffd), 0, arg8, arg9);\n                        label_40325b:\n                            return rbx_1;\n                        }\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                            goto label_403395;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                                goto label_4032e7;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_403395;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                            label_4032b0:\n                                r13 = 0;\n                                goto label_40306b;\n                            }\n                            case 8:\n                            {\n                                rdx = 0;\n                                r13 = 0;\n                                rbp_3 = 0x62;\n                            label_403038:\n                                uint32_t rax_10;\n                                rax_10 = ((r10 ^ 1) & rdx);\n                                if (rax_10 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if ((rbx_1 + 1) < r14)\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x24;\n                                    }\n                                    if ((rbx_1 + 2) < r14)\n                                    {\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 3);\n                                    r10 = rax_10;\n                                }\n                            label_40306b:\n                                if (r14 <= rbx_1)\n                                {\n                                    goto label_403075;\n                                }\n                                r15[rbx_1] = 0x5c;\n                            label_403075:\n                                rbx_1 = (rbx_1 + 1);\n                                r12_1 = (r12_1 + 1);\n                                goto label_40307d;\n                            }\n                            case 9:\n                            {\n                                goto label_403260;\n                            }\n                            case 0xa:\n                            {\n                                goto label_4031d8;\n                            }\n                            case 0xb:\n                            {\n                                goto label_4032c0;\n                            }\n                            case 0xc:\n                            {\n                                goto label_4032a0;\n                            }\n                            case 0xd:\n                            {\n                                goto label_403289;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = var_b8;\n                                goto label_4035ea;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                goto label_403275;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = var_b8;\n                                goto label_4035ca;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = var_b8;\n                                goto label_4035b2;\n                            }\n                            case 0x27:\n                            {\n                                goto label_40316d;\n                            }\n                            case 0x3f:\n                            {\n                                goto label_40313d;\n                            }\n                            case 0x5c:\n                            {\n                                goto label_40319a;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                goto label_402f99;\n                            }\n                        }\n                    }\n                    else\n                    {\n                    label_403590:\n                        rbp_3 = *r8;\n                        if (rbp_3 > 0x7e)\n                        {\n                        label_403390:\n                            var_b8 = 0;\n                        label_403395:\n                            uint64_t rdi_4;\n                            if (rax == 1)\n                            {\n                                r10 = r10;\n                                rdi_4 = 1;\n                                rax_12 = (*__ctype_b_loc()[rbp_3] & 0x4000);\n                                r13 = rax_12 != 0;\n                                rdx = rax_12 == 0;\n                                rdx = (rdx & var_c0);\n                            label_4033e4:\n                                if (rdx == 0)\n                                {\n                                    goto label_4033f0;\n                                }\n                                rdx = var_c0;\n                                r13 = 0;\n                            label_4038e1:\n                                var_98 = r13;\n                                int32_t rsi_7 = 0;\n                                int64_t rcx_11 = (rdi_4 + r12_1);\n                                char rdi_9 = var_b8;\n                                while (true)\n                                {\n                                    if (rdx != 0)\n                                    {\n                                        rax_12 = r11_1 == 2;\n                                        if (var_5c != 0)\n                                        {\n                                            break;\n                                        }\n                                        rax_12 = (rax_12 & (r10 ^ 1));\n                                        if (rax_12 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x24;\n                                            }\n                                            if (r14 > (rbx_1 + 2))\n                                            {\n                                                r15[(rbx_1 + 2)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 3);\n                                            r10 = rax_12;\n                                        }\n                                        if (r14 > rbx_1)\n                                        {\n                                            r15[rbx_1] = 0x5c;\n                                        }\n                                        if (r14 > (rbx_1 + 1))\n                                        {\n                                            r15[(rbx_1 + 1)] = ((rbp_3 >> 6) + 0x30);\n                                        }\n                                        if (r14 > (rbx_1 + 2))\n                                        {\n                                            int32_t rax_40;\n                                            rax_40 = (rbp_3 >> 3);\n                                            r15[(rbx_1 + 2)] = ((rax_40 & 7) + 0x30);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        rbx_1 = (rbx_1 + 3);\n                                        rbp_3 = ((rbp_3 & 7) + 0x30);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        rsi_7 = rdx;\n                                    }\n                                    else\n                                    {\n                                        rax_12 = ((rsi_7 ^ 1) & r10);\n                                        if (rdi_9 != 0)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x5c;\n                                            }\n                                            rbx_1 = (rbx_1 + 1);\n                                        }\n                                        r12_1 = (r12_1 + 1);\n                                        if (r12_1 >= rcx_11)\n                                        {\n                                            break;\n                                        }\n                                        if (rax_12 == 0)\n                                        {\n                                            rdi_9 = 0;\n                                        }\n                                        else\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x27;\n                                            }\n                                            if (r14 > (rbx_1 + 1))\n                                            {\n                                                r15[(rbx_1 + 1)] = 0x27;\n                                            }\n                                            rbx_1 = (rbx_1 + 2);\n                                            rdi_9 = 0;\n                                            r10 = 0;\n                                        }\n                                    }\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = rbp_3;\n                                    }\n                                    rbp_3 = *(arg3 + r12_1);\n                                    rbx_1 = (rbx_1 + 1);\n                                }\n                                if ((rdx == 0 && r12_1 >= rcx_11))\n                                {\n                                    r13 = var_98;\n                                    goto label_403104;\n                                }\n                                if ((rdx != 0 && var_5c != 0))\n                                {\n                                    r13_1 = r11_1;\n                                    var_c0 = rax_12;\n                                    r11 = r9;\n                                    goto label_4031fc;\n                                }\n                                r13 = var_98;\n                                goto label_40307d;\n                            }\n                            mbstate_t var_40;\n                            var_40.__count = 0;\n                            var_40.__value = 0;\n                            if (r9 == -1)\n                            {\n                                var_90 = r10;\n                                var_98 = r8;\n                                r10 = var_90;\n                                r8 = var_98;\n                                r9 = strlen(arg3);\n                            }\n                            uint64_t rbx_2 = 0;\n                            char var_5a_1 = r10;\n                            char var_59_1 = rbp_3;\n                            var_88 = r15;\n                            var_98 = r9;\n                            var_90 = r11_1;\n                            while (true)\n                            {\n                                int64_t r15_1 = (r12_1 + rbx_2);\n                                char* rbp_4 = (arg3 + r15_1);\n                                uint32_t var_44;\n                                rax_12 = sub_405fd0(&var_44, rbp_4, (var_98 - r15_1), &var_40);\n                                if (rax_12 != 0)\n                                {\n                                    if (rax_12 == -1)\n                                    {\n                                        rdi_4 = rbx_2;\n                                        rbp_3 = var_59_1;\n                                        r13 = 0;\n                                        r10 = var_5a_1;\n                                        r15 = var_88;\n                                        r9 = var_98;\n                                        r11_1 = var_90;\n                                        rdx = var_c0;\n                                        break;\n                                    }\n                                    if (rax_12 == -2)\n                                    {\n                                        r9 = var_98;\n                                        rax_12 = rbx_2;\n                                        rdi_4 = rbx_2;\n                                        r10 = var_5a_1;\n                                        rbp_3 = var_59_1;\n                                        r15 = var_88;\n                                        r11_1 = var_90;\n                                        if ((r15_1 < r9 && *rbp_4 != 0))\n                                        {\n                                            do\n                                            {\n                                                rax_12 = (rax_12 + 1);\n                                                if ((r12_1 + rax_12) >= r9)\n                                                {\n                                                    break;\n                                                }\n                                            } while (r8[rax_12] != 0);\n                                            rdi_4 = rax_12;\n                                        }\n                                        rdx = var_c0;\n                                        r13 = 0;\n                                        break;\n                                    }\n                                    if ((var_90 == 2 && (var_5c != 0 && rax_12 != 1)))\n                                    {\n                                        char* rax_34 = ((arg3 + r15_1) + 1);\n                                        int64_t rsi_6 = ((arg3 + rax_12) + r15_1);\n                                        char rcx_9;\n                                        do\n                                        {\n                                            rcx_9 = (*rax_34 - 0x5b);\n                                            if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                            {\n                                                break;\n                                            }\n                                            rax_34 = &rax_34[1];\n                                        } while (rsi_6 != rax_34);\n                                        if ((rcx_9 <= 0x21 && ((1 << rcx_9) & 0x20000002b) != 0))\n                                        {\n                                            r15 = var_88;\n                                            r13_1 = 2;\n                                            r11 = var_98;\n                                            goto label_4031fc;\n                                        }\n                                    }\n                                    mbstate_t* rdi_7 = &var_40;\n                                    if (iswprint(var_44) == 0)\n                                    {\n                                        r13 = 0;\n                                    }\n                                    rbx_2 = (rbx_2 + rax_12);\n                                    if (mbsinit(rdi_7) == 0)\n                                    {\n                                        continue;\n                                    }\n                                }\n                                rdi_4 = rbx_2;\n                                rbp_3 = var_59_1;\n                                r10 = var_5a_1;\n                                r15 = var_88;\n                                r9 = var_98;\n                                r11_1 = var_90;\n                                rdx = ((r13 ^ 1) & var_c0);\n                                break;\n                            }\n                            if (rdi_4 > 1)\n                            {\n                                goto label_4038e1;\n                            }\n                            goto label_4033e4;\n                        }\n                        switch (rbp_3)\n                        {\n                            case 0:\n                            {\n                            label_4032d0:\n                                if (var_5c != 0)\n                                {\n                                    r13_1 = r11_1;\n                                    r11 = r9;\n                                    var_c0 = r13_1 == 2;\n                                    goto label_4031fc;\n                                }\n                                var_b8 = 0;\n                            label_4032e7:\n                                rdx = r11_1 == 2;\n                                rax_8 = ((r10 ^ 1) & rdx);\n                                int64_t rcx_6;\n                                if (rax_8 == 0)\n                                {\n                                    rcx_6 = rbx_1;\n                                    if (r14 <= rbx_1)\n                                    {\n                                        goto label_403332;\n                                    }\n                                    rax_8 = r10;\n                                label_40332a:\n                                    r15[rcx_6] = 0x5c;\n                                    r10 = rax_8;\n                                label_403332:\n                                    rbx_1 = (rcx_6 + 1);\n                                    if (r11_1 == 2)\n                                    {\n                                        rax_8 = r13;\n                                        rbp_3 = 0x30;\n                                        r13 = 0;\n                                        goto label_4030ec;\n                                    }\n                                    rbp_3 = 0x30;\n                                    if ((r12_1 + 1) < r9)\n                                    {\n                                        char rax_20 = *((arg3 + r12_1) + 1);\n                                        var_98 = rax_20;\n                                        if ((rax_20 - 0x30) <= 9)\n                                        {\n                                            if (r14 > rbx_1)\n                                            {\n                                                r15[rbx_1] = 0x30;\n                                            }\n                                            if (r14 > (rcx_6 + 2))\n                                            {\n                                                r15[(rcx_6 + 2)] = 0x30;\n                                            }\n                                            rbx_1 = (rcx_6 + 3);\n                                            rbp_3 = 0x30;\n                                        }\n                                    }\n                                    goto label_403373;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x27;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x24;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x27;\n                                }\n                                rcx_6 = (rbx_1 + 3);\n                                if (r14 > rcx_6)\n                                {\n                                    goto label_40332a;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                r10 = rax_8;\n                                r13 = 0;\n                                rbp_3 = 0x30;\n                                goto label_4030ec;\n                            }\n                            case 1:\n                            case 2:\n                            case 3:\n                            case 4:\n                            case 5:\n                            case 6:\n                            case 0xe:\n                            case 0xf:\n                            case 0x10:\n                            case 0x11:\n                            case 0x12:\n                            case 0x13:\n                            case 0x14:\n                            case 0x15:\n                            case 0x16:\n                            case 0x17:\n                            case 0x18:\n                            case 0x19:\n                            case 0x1a:\n                            case 0x1b:\n                            case 0x1c:\n                            case 0x1d:\n                            case 0x1e:\n                            case 0x1f:\n                            case 0x40:\n                            {\n                                goto label_403390;\n                            }\n                            case 7:\n                            {\n                                rbp_3 = 0x61;\n                                goto label_4032a5;\n                            }\n                            case 8:\n                            {\n                                rbp_3 = 0x62;\n                                goto label_4031dd;\n                            }\n                            case 9:\n                            {\n                            label_403260:\n                                rbp_3 = 0x74;\n                                goto label_4031dd;\n                            }\n                            case 0xa:\n                            {\n                            label_4031d8:\n                                rbp_3 = 0x6e;\n                            label_4031dd:\n                                rdx = 0;\n                                r13 = 0;\n                                if (var_5c != 0)\n                                {\n                                    goto label_4031f0;\n                                }\n                                goto label_403038;\n                            }\n                            case 0xb:\n                            {\n                            label_4032c0:\n                                rbp_3 = 0x76;\n                                goto label_4032a5;\n                            }\n                            case 0xc:\n                            {\n                            label_4032a0:\n                                rbp_3 = 0x66;\n                            label_4032a5:\n                                if (var_5c == 0)\n                                {\n                                    goto label_4032b0;\n                                }\n                                r13_1 = r11_1;\n                                rax_14 = 0;\n                                r11 = r9;\n                            label_4031f8:\n                                var_c0 = (var_c0 & rax_14);\n                                goto label_4031fc;\n                            }\n                            case 0xd:\n                            {\n                                var_b8 = 0;\n                            label_403289:\n                                rbp_3 = 0xd;\n                                rcx_2 = 0x72;\n                                rdx = r11_1 == 2;\n                                goto label_4031c0;\n                            }\n                            case 0x20:\n                            {\n                                rax_27 = 0;\n                            label_4035ea:\n                                rbp_3 = 0x20;\n                                goto label_4035b2;\n                            }\n                            case 0x21:\n                            case 0x22:\n                            case 0x24:\n                            case 0x26:\n                            case 0x28:\n                            case 0x29:\n                            case 0x2a:\n                            case 0x3b:\n                            case 0x3c:\n                            case 0x3d:\n                            case 0x3e:\n                            case 0x5b:\n                            case 0x5e:\n                            case 0x60:\n                            case 0x7c:\n                            {\n                                var_b8 = 0;\n                            label_403275:\n                                rdx = 0;\n                            label_4031cb:\n                                r13 = 0;\n                                goto label_402fe5;\n                            }\n                            case 0x23:\n                            case 0x7e:\n                            {\n                                rax_28 = 0;\n                            label_4035ca:\n                                if (r12_1 == 0)\n                                {\n                                    r13 = var_b8;\n                                    rdx = 0;\n                                    var_b8 = rax_28;\n                                    goto label_402fe5;\n                                }\n                                var_b8 = rax_28;\n                                r13 = 0;\n                            label_402fef:\n                                rax_8 = 0;\n                                goto label_402ff1;\n                            }\n                            case 0x25:\n                            case 0x2b:\n                            case 0x2c:\n                            case 0x2d:\n                            case 0x2e:\n                            case 0x2f:\n                            case 0x30:\n                            case 0x31:\n                            case 0x32:\n                            case 0x33:\n                            case 0x34:\n                            case 0x35:\n                            case 0x36:\n                            case 0x37:\n                            case 0x38:\n                            case 0x39:\n                            case 0x3a:\n                            case 0x41:\n                            case 0x42:\n                            case 0x43:\n                            case 0x44:\n                            case 0x45:\n                            case 0x46:\n                            case 0x47:\n                            case 0x48:\n                            case 0x49:\n                            case 0x4a:\n                            case 0x4b:\n                            case 0x4c:\n                            case 0x4d:\n                            case 0x4e:\n                            case 0x4f:\n                            case 0x50:\n                            case 0x51:\n                            case 0x52:\n                            case 0x53:\n                            case 0x54:\n                            case 0x55:\n                            case 0x56:\n                            case 0x57:\n                            case 0x58:\n                            case 0x59:\n                            case 0x5a:\n                            case 0x5d:\n                            case 0x5f:\n                            case 0x61:\n                            case 0x62:\n                            case 0x63:\n                            case 0x64:\n                            case 0x65:\n                            case 0x66:\n                            case 0x67:\n                            case 0x68:\n                            case 0x69:\n                            case 0x6a:\n                            case 0x6b:\n                            case 0x6c:\n                            case 0x6d:\n                            case 0x6e:\n                            case 0x6f:\n                            case 0x70:\n                            case 0x71:\n                            case 0x72:\n                            case 0x73:\n                            case 0x74:\n                            case 0x75:\n                            case 0x76:\n                            case 0x77:\n                            case 0x78:\n                            case 0x79:\n                            case 0x7a:\n                            {\n                                rax_27 = 0;\n                            label_4035b2:\n                                r13 = var_b8;\n                                var_b8 = rax_27;\n                                rax_8 = 0;\n                                goto label_402ff1;\n                            }\n                            case 0x27:\n                            {\n                                var_b8 = 0;\n                            label_40316d:\n                                if (r11_1 != 2)\n                                {\n                                    var_5b_1 = r13;\n                                    rdx = 0;\n                                    rbp_3 = 0x27;\n                                    goto label_402fe5;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_403f2d;\n                                }\n                                if (r14 != 0)\n                                {\n                                    rdx = 0;\n                                }\n                                if ((r14 == 0 || (r14 != 0 && var_70 != 0)))\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x5c;\n                                    }\n                                    if (r14 <= (rbx_1 + 2))\n                                    {\n                                        rdx = r14;\n                                        r14 = var_70;\n                                    }\n                                    else\n                                    {\n                                        rdx = r14;\n                                        r15[(rbx_1 + 2)] = 0x27;\n                                        r14 = var_70;\n                                    }\n                                }\n                                var_5b_1 = r13;\n                                rbx_1 = (rbx_1 + 3);\n                                rax_8 = 0;\n                                r10 = 0;\n                                var_70 = r14;\n                                rbp_3 = 0x27;\n                                r14 = rdx;\n                                goto label_4030ec;\n                            }\n                            case 0x3f:\n                            {\n                                var_b8 = 0;\n                            label_40313d:\n                                if (r11_1 == 2)\n                                {\n                                    if (var_5c != 0)\n                                    {\n                                    label_403f2d:\n                                        r13_1 = r11_1;\n                                        r11 = r9;\n                                        goto label_4031fc;\n                                    }\n                                    r13 = 0;\n                                    rax_8 = 0;\n                                    rbp_3 = 0x3f;\n                                label_4030ec:\n                                    rdx = r11_1 == 2;\n                                    if (var_b8 != 0)\n                                    {\n                                        goto label_403027;\n                                    }\n                                    r12_1 = (r12_1 + 1);\n                                    rax_12 = ((rax_8 ^ 1) & r10);\n                                    goto label_403104;\n                                }\n                                if (r11_1 != 5)\n                                {\n                                    rbp_3 = 0x3f;\n                                    rdx = r11_1 == 2;\n                                    r13 = 0;\n                                    goto label_402fe5;\n                                }\n                                if ((arg6 & 4) == 0)\n                                {\n                                label_4036d0:\n                                    rdx = 0;\n                                    r13 = 0;\n                                    rbp_3 = 0x3f;\n                                    goto label_402fe5;\n                                }\n                                int64_t rax_30 = (r12_1 + 2);\n                                if (rax_30 >= r9)\n                                {\n                                    goto label_4036d0;\n                                }\n                                if (*((arg3 + r12_1) + 1) != 0x3f)\n                                {\n                                    goto label_4036d0;\n                                }\n                                rbp_3 = *(arg3 + rax_30);\n                                if (rbp_3 > 0x3e)\n                                {\n                                    goto label_4036d0;\n                                }\n                                if ((!(TEST_BITQ(0x7000a38200000000, rbp_3))))\n                                {\n                                    goto label_4036d0;\n                                }\n                                if (var_5c != 0)\n                                {\n                                    goto label_403ee0;\n                                }\n                                if (r14 > rbx_1)\n                                {\n                                    r15[rbx_1] = 0x3f;\n                                }\n                                if (r14 > (rbx_1 + 1))\n                                {\n                                    r15[(rbx_1 + 1)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 2))\n                                {\n                                    r15[(rbx_1 + 2)] = 0x22;\n                                }\n                                if (r14 > (rbx_1 + 3))\n                                {\n                                    r15[(rbx_1 + 3)] = 0x3f;\n                                }\n                                rbx_1 = (rbx_1 + 4);\n                                rdx = 0;\n                                r13 = 0;\n                                r12_1 = rax_30;\n                            label_403373:\n                                rax_8 = r13;\n                                r13 = 0;\n                                if (((var_c0 ^ 1) | rdx) != 0)\n                                {\n                                    goto label_4030ec;\n                                }\n                            label_402ff1:\n                                if (arg7 == 0)\n                                {\n                                    goto label_4030ec;\n                                }\n                                if (((*(arg7 + ((rbp_3 >> 5) << 2)) >> rbp_3) & 1) == 0)\n                                {\n                                    goto label_4030ec;\n                                }\n                                rdx = r11_1 == 2;\n                                goto label_403027;\n                            }\n                            case 0x5c:\n                            {\n                                var_b8 = 0;\n                            label_40319a:\n                                rdx = (var_c0 & var_5c);\n                                rbp_3 = 0x5c;\n                                rcx_2 = 0x5c;\n                                rax_1 = var_a0_1 != 0;\n                                rdx = (rdx & rax_1);\n                                if (rdx == 0)\n                                {\n                                    goto label_4031c0;\n                                }\n                                r12_1 = (r12_1 + 1);\n                                rax_12 = r10;\n                                r13 = 0;\n                            label_403104:\n                                if (rax_12 != 0)\n                                {\n                                    if (r14 > rbx_1)\n                                    {\n                                        r15[rbx_1] = 0x27;\n                                    }\n                                    if (r14 > (rbx_1 + 1))\n                                    {\n                                        r15[(rbx_1 + 1)] = 0x27;\n                                    }\n                                    rbx_1 = (rbx_1 + 2);\n                                    r10 = 0;\n                                    goto label_40307d;\n                                }\n                            label_40307d:\n                                if (rbx_1 >= r14)\n                                {\n                                    goto label_403086;\n                                }\n                                r15[rbx_1] = rbp_3;\n                            label_403086:\n                                char rdi_2 = var_a9;\n                                rbx_1 = (rbx_1 + 1);\n                                if (r13 == 0)\n                                {\n                                    rdi_2 = 0;\n                                }\n                                var_a9 = rdi_2;\n                                continue;\n                            }\n                            case 0x7b:\n                            case 0x7d:\n                            {\n                                var_b8 = 0;\n                            label_402f99:\n                                rax_1 = r9 != 1;\n                                if (r9 == -1)\n                                {\n                                    rax_1 = *(arg3 + 1) != 0;\n                                }\n                                rdx = r11_1 == 2;\n                                if (rax_1 != 0)\n                                {\n                                    goto label_4031cb;\n                                }\n                                goto label_402fbd;\n                            }\n                        }\n                    }\n                }\n            }\n        label_403676:\n            *r15 = 0x27;\n            r13 = 2;\n            rbx_1 = 1;\n            var_78_1 = \"'\";\n            var_a0_1 = 1;\n            var_5c = false;\n            var_5b_1 = rax_1;\n        }\n    }\n    if ((r13 == 4 && rbp_1 == 0))\n    {\n        var_c0 = 1;\n    }\n    switch (r13)\n    {\n        case 0:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 0;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_402e88;\n        }\n        case 2:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 0;\n                var_a0_1 = 1;\n                var_78_1 = \"'\";\n                goto label_402e88;\n            }\n            var_c0 = 0;\n            break;\n        }\n        case 3:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 2;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = \"'\";\n            goto label_402e88;\n        }\n        case 5:\n        {\n            if (rbp_1 != 0)\n            {\n                var_a9 = 1;\n                r10 = 0;\n                rbx_1 = 0;\n                var_5b_1 = 0;\n                var_70 = 0;\n                var_5c = true;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40705c;\n            }\n            else\n            {\n                if (r14 == 0)\n                {\n                    var_70 = 0;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                }\n                else\n                {\n                    *r15 = 0x22;\n                    r10 = 0;\n                    var_a9 = 1;\n                    var_5b_1 = 0;\n                    var_70 = 0;\n                }\n                var_5c = false;\n                rbx_1 = 1;\n                var_c0 = 1;\n                var_a0_1 = 1;\n                var_78_1 = &data_40705c;\n            }\n            goto label_402e88;\n        }\n        case 6:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            r13 = 5;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = true;\n            var_c0 = 1;\n            var_a0_1 = 1;\n            var_78_1 = &data_40705c;\n            goto label_402e88;\n        }\n        case 7:\n        {\n            var_a9 = 1;\n            r10 = 0;\n            rbx_1 = 0;\n            var_5b_1 = 0;\n            var_70 = 0;\n            var_5c = false;\n            var_c0 = 1;\n            var_a0_1 = 0;\n            var_78_1 = nullptr;\n            goto label_402e88;\n        }\n        case 8:\n        case 9:\n        case 0xa:\n        {\n            if ((!cond:1))\n            {\n                arg8 = sub_402cf0(&data_40706d, r13);\n                arg9 = sub_402cf0(\"'\", r13);\n            }\n            rbx_1 = 0;\n            if (rbp_1 == 0)\n            {\n                char rax_49 = *arg8;\n                if (rax_49 != 0)\n                {\n                    do\n                    {\n                        if (r14 > rbx_1)\n                        {\n                            r15[rbx_1] = rax_49;\n                        }\n                        rbx_1 = (rbx_1 + 1);\n                        rax_49 = arg8[rbx_1];\n                    } while (rax_49 != 0);\n                }\n            }\n            uint64_t rax_46;\n            rax_46 = strlen(arg9);\n            var_a9 = 1;\n            r10 = 0;\n            var_a0_1 = rax_46;\n            var_5b_1 = 0;\n            var_78_1 = arg9;\n            var_70 = 0;\n            var_c0 = 1;\n            goto label_402e88;\n        }\n    }\n    if (((r13 == 4 && rbp_1 == 0) || r13 == 2))\n    {\n        if (r14 != 0)\n        {\n            r10 = 0;\n            rax_1 = 0;\n            var_a9 = 1;\n            var_70 = 0;\n            goto label_403676;\n        }\n        var_a9 = 1;\n        r10 = 0;\n        rbx_1 = 1;\n        r13 = 2;\n        var_70 = 0;\n        var_5b_1 = 0;\n        var_5c = false;\n        var_a0_1 = 1;\n        var_78_1 = \"'\";\n        goto label_402e88;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_404020",
            "funcStartAddr": "0x401805",
            "funcEndAddr": "0x4041be",
            "decompiledFuncCode": "char* sub_404020(int32_t arg1, uint64_t arg2, uint64_t arg3, int32_t* arg4)\n{\n    int64_t r15 = arg1;\n    int32_t* rax = __errno_location();\n    int64_t rbx = data_60a258;\n    int32_t rax_1 = *rax;\n    if (r15 < 0)\n    {\n        abort();\n        /* no return */\n    }\n    if (data_60a270 <= r15)\n    {\n        if (r15 == 0x7fffffff)\n        {\n            sub_405080();\n            /* no return */\n        }\n        int32_t r12_1 = (r15 + 1);\n        int64_t rsi_1 = (r12_1 << 4);\n        if (rbx == 0x60a260)\n        {\n            int64_t rax_9 = sub_404e90(0, rsi_1);\n            int128_t zmm0 = data_60a260;\n            rbx = rax_9;\n            data_60a258 = rax_9;\n            *rax_9 = zmm0;\n        }\n        else\n        {\n            int64_t rax_2 = sub_404e90(rbx, rsi_1);\n            data_60a258 = rax_2;\n            rbx = rax_2;\n        }\n        int64_t rdi_1 = data_60a270;\n        memset(((rdi_1 << 4) + rbx), 0, ((r12_1 - rdi_1) << 4));\n        data_60a270 = r12_1;\n    }\n    int64_t rbx_1 = (rbx + (r15 << 4));\n    void* r15_2 = &arg4[2];\n    int32_t rax_4 = (arg4[1] | 1);\n    uint64_t r11 = *rbx_1;\n    char* r12_2 = *(rbx_1 + 8);\n    int64_t rax_5 = sub_402df0(r12_2, r11, arg2, arg3, *arg4, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    if (r11 <= rax_5)\n    {\n        uint64_t rsi_3 = (rax_5 + 1);\n        *rbx_1 = rsi_3;\n        if (r12_2 != 0x60a320)\n        {\n            free(r12_2);\n        }\n        char* rax_6 = sub_404e30(rsi_3);\n        uint32_t r8_1 = *arg4;\n        *(rbx_1 + 8) = rax_6;\n        r12_2 = rax_6;\n        sub_402df0(rax_6, rsi_3, arg2, arg3, r8_1, rax_4, r15_2, *(arg4 + 0x28), *(arg4 + 0x30));\n    }\n    *rax = rax_1;\n    return r12_2;\n}\n\n"
        },
        {
            "funcName": "sub_4041c0",
            "funcStartAddr": "0x4041c0",
            "funcEndAddr": "0x4041f4",
            "decompiledFuncCode": "int64_t sub_4041c0(int64_t arg1)\n{\n    int64_t rbx = arg1;\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    if (rbx == 0)\n    {\n        rbx = 0x60a420;\n    }\n    int64_t rax_1 = sub_405030(rbx, 0x38);\n    *rax = r12;\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_404200",
            "funcStartAddr": "0x404200",
            "funcEndAddr": "0x40420f",
            "decompiledFuncCode": "uint64_t sub_404200(int32_t* arg1)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60a420;\n    }\n    return *arg1;\n}\n\n"
        },
        {
            "funcName": "sub_404210",
            "funcStartAddr": "0x404210",
            "funcEndAddr": "0x40421f",
            "decompiledFuncCode": "void sub_404210(int32_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60a420;\n    }\n    *arg1 = arg2;\n}\n\n"
        },
        {
            "funcName": "sub_404220",
            "funcStartAddr": "0x404220",
            "funcEndAddr": "0x404253",
            "decompiledFuncCode": "uint64_t sub_404220(int64_t arg1, uint8_t arg2, int32_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = 0x60a420;\n    }\n    char rcx_1 = (arg2 & 0x1f);\n    int32_t rsi = *((arg1 + ((arg2 >> 5) << 2)) + 8);\n    uint32_t rax_3 = (rsi >> rcx_1);\n    *((arg1 + ((arg2 >> 5) << 2)) + 8) = ((((arg3 ^ rax_3) & 1) << rcx_1) ^ rsi);\n    return (rax_3 & 1);\n}\n\n"
        },
        {
            "funcName": "sub_404260",
            "funcStartAddr": "0x404260",
            "funcEndAddr": "0x404273",
            "decompiledFuncCode": "uint64_t sub_404260(int128_t* arg1, int32_t arg2)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60a420;\n    }\n    uint64_t rax = *(arg1 + 4);\n    *(arg1 + 4) = arg2;\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404280",
            "funcStartAddr": "0x404280",
            "funcEndAddr": "0x4042ab",
            "decompiledFuncCode": "void sub_404280(int32_t* arg1, int64_t arg2, int64_t arg3)\n{\n    if (arg1 == 0)\n    {\n        arg1 = &data_60a420;\n    }\n    *arg1 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *(arg1 + 0x28) = arg2;\n        *(arg1 + 0x30) = arg3;\n        return;\n    }\n    int64_t var_8 = 0x60a420;\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4042b0",
            "funcStartAddr": "0x4042b0",
            "funcEndAddr": "0x404322",
            "decompiledFuncCode": "int64_t sub_4042b0(char* arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4, \n    int32_t* arg5)\n{\n    int32_t* rbx = arg5;\n    if (arg5 == 0)\n    {\n        rbx = &data_60a420;\n    }\n    int32_t* rax = __errno_location();\n    int32_t r12 = *rax;\n    int64_t rax_2 = sub_402df0(arg1, arg2, arg3, arg4, *rbx, rbx[1], &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = r12;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_404330",
            "funcStartAddr": "0x404330",
            "funcEndAddr": "0x404411",
            "decompiledFuncCode": "char* sub_404330(uint64_t arg1, uint64_t arg2, int64_t* arg3, int32_t* arg4)\n{\n    int32_t* rbx = arg4;\n    if (arg4 == 0)\n    {\n        rbx = &data_60a420;\n    }\n    int32_t* rax = __errno_location();\n    int32_t rax_1 = *rax;\n    int32_t rbp;\n    rbp = arg3 == 0;\n    int32_t rbp_1 = (rbp | rbx[1]);\n    int64_t rax_2 = sub_402df0(nullptr, 0, arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    char* rax_3 = sub_404e30((rax_2 + 1));\n    sub_402df0(rax_3, (rax_2 + 1), arg1, arg2, *rbx, rbp_1, &rbx[2], *(rbx + 0x28), *(rbx + 0x30));\n    *rax = rax_1;\n    if (arg3 != 0)\n    {\n        *arg3 = rax_2;\n    }\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_404420",
            "funcStartAddr": "0x404420",
            "funcEndAddr": "0x40442a",
            "decompiledFuncCode": "int64_t sub_404420(uint64_t arg1, uint64_t arg2, int32_t* arg3)\n{\n    /* tailcall */\n    return sub_404330(arg1, arg2, nullptr, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_404430",
            "funcStartAddr": "0x404430",
            "funcEndAddr": "0x4044c5",
            "decompiledFuncCode": "uint64_t sub_404430()\n{\n    uint64_t rax_2 = data_60a270;\n    int64_t r12 = data_60a258;\n    if (rax_2 > 1)\n    {\n        int64_t* rbx_1 = (r12 + 0x18);\n        int64_t rbp_1 = ((r12 + ((rax_2 - 2) << 4)) + 0x28);\n        do\n        {\n            int64_t rdi_1 = *rbx_1;\n            rbx_1 = &rbx_1[2];\n            rax_2 = free(rdi_1);\n        } while (rbx_1 != rbp_1);\n    }\n    int64_t rdi_2 = *(r12 + 8);\n    if (rdi_2 != 0x60a320)\n    {\n        rax_2 = free(rdi_2);\n        *data_60a260 = 0x100;\n        *(data_60a260 + 8) = 0x60a320;\n    }\n    if (r12 != 0x60a260)\n    {\n        rax_2 = free(r12);\n        data_60a258 = 0x60a260;\n    }\n    data_60a270 = 1;\n    return rax_2;\n}\n\n"
        },
        {
            "funcName": "sub_4044d0",
            "funcStartAddr": "0x4044d0",
            "funcEndAddr": "0x4044e1",
            "decompiledFuncCode": "int64_t sub_4044d0(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_404020(arg1, arg2, -1, &data_60a420);\n}\n\n"
        },
        {
            "funcName": "sub_4044f0",
            "funcStartAddr": "0x4044f0",
            "funcEndAddr": "0x4044fa",
            "decompiledFuncCode": "int64_t sub_4044f0(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_404020(arg1, arg2, arg3, &data_60a420);\n}\n\n"
        },
        {
            "funcName": "sub_404500",
            "funcStartAddr": "0x404500",
            "funcEndAddr": "0x404516",
            "decompiledFuncCode": "int64_t sub_404500(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_404020(0, arg1, -1, &data_60a420);\n}\n\n"
        },
        {
            "funcName": "sub_404520",
            "funcStartAddr": "0x404520",
            "funcEndAddr": "0x404532",
            "decompiledFuncCode": "int64_t sub_404520(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_404020(0, arg1, arg2, &data_60a420);\n}\n\n"
        },
        {
            "funcName": "sub_404540",
            "funcStartAddr": "0x40180a",
            "funcEndAddr": "0x4045a8",
            "decompiledFuncCode": "char* sub_404540(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_404020(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_4045b0",
            "funcStartAddr": "0x40180f",
            "funcEndAddr": "0x404614",
            "decompiledFuncCode": "char* sub_4045b0(int32_t arg1, int32_t arg2, uint64_t arg3, uint64_t arg4)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int32_t var_44 = 0;\n    int64_t var_40 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_404020(arg1, arg3, arg4, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_404620",
            "funcStartAddr": "0x404620",
            "funcEndAddr": "0x40462c",
            "decompiledFuncCode": "int64_t sub_404620(int32_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_404540(0, arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_404630",
            "funcStartAddr": "0x404630",
            "funcEndAddr": "0x40463f",
            "decompiledFuncCode": "int64_t sub_404630(int32_t arg1, uint64_t arg2, uint64_t arg3)\n{\n    /* tailcall */\n    return sub_4045b0(0, arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_404640",
            "funcStartAddr": "0x404640",
            "funcEndAddr": "0x4046b0",
            "decompiledFuncCode": "char* sub_404640(uint64_t arg1, uint64_t arg2, uint8_t arg3)\n{\n    char rcx_1 = (arg3 & 0x1f);\n    int64_t var_18 = data_60a450;\n    int128_t var_48 = data_60a420;\n    int128_t var_38 = data_60a430;\n    int128_t var_28 = data_60a440;\n    int32_t rdx = *((&var_48 + ((arg3 >> 5) << 2)) + 8);\n    *((&var_48 + ((arg3 >> 5) << 2)) + 8) = ((((!(rdx >> rcx_1)) & 1) << rcx_1) ^ rdx);\n    return sub_404020(0, arg1, arg2, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_4046b0",
            "funcStartAddr": "0x4046b0",
            "funcEndAddr": "0x4046bd",
            "decompiledFuncCode": "int64_t sub_4046b0(uint64_t arg1, uint8_t arg2)\n{\n    /* tailcall */\n    return sub_404640(arg1, -1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_4046c0",
            "funcStartAddr": "0x4046c0",
            "funcEndAddr": "0x4046d1",
            "decompiledFuncCode": "int64_t sub_4046c0(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_404640(arg1, -1, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_4046e0",
            "funcStartAddr": "0x4046e0",
            "funcEndAddr": "0x4046ea",
            "decompiledFuncCode": "int64_t sub_4046e0(uint64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return sub_404640(arg1, arg2, 0x3a);\n}\n\n"
        },
        {
            "funcName": "sub_4046f0",
            "funcStartAddr": "0x401814",
            "funcEndAddr": "0x40475e",
            "decompiledFuncCode": "char* sub_4046f0(int32_t arg1, int32_t arg2, uint64_t arg3)\n{\n    if (arg2 == 0xa)\n    {\n        abort();\n        /* no return */\n    }\n    int32_t var_48 = arg2;\n    int64_t var_40 = 0x400000000000000;\n    int32_t var_44 = 0;\n    int64_t var_38 = 0;\n    int64_t var_30 = 0;\n    int64_t var_28 = 0;\n    int64_t var_20 = 0;\n    int64_t var_18 = 0;\n    return sub_404020(arg1, arg3, -1, &var_48);\n}\n\n"
        },
        {
            "funcName": "sub_404760",
            "funcStartAddr": "0x404760",
            "funcEndAddr": "0x4047cc",
            "decompiledFuncCode": "char* sub_404760(int32_t arg1, int64_t arg2, int64_t arg3, uint64_t arg4, \n    uint64_t arg5)\n{\n    int128_t var_48 = data_60a420;\n    int128_t var_38 = data_60a430;\n    int128_t var_28 = data_60a440;\n    int64_t var_18 = data_60a450;\n    var_48 = 0xa;\n    if ((arg2 != 0 && arg3 != 0))\n    {\n        *var_28[8] = arg2;\n        int64_t var_18_1 = arg3;\n        return sub_404020(arg1, arg4, arg5, &var_48);\n    }\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404870",
            "funcStartAddr": "0x404870",
            "funcEndAddr": "0x404886",
            "decompiledFuncCode": "int64_t sub_404870(uint64_t arg1)\n{\n    /* tailcall */\n    return sub_404020(0, arg1, -1, &data_60a220);\n}\n\n"
        },
        {
            "funcName": "sub_404890",
            "funcStartAddr": "0x401819",
            "funcEndAddr": "0x404c6d",
            "decompiledFuncCode": "int64_t sub_404890(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5, int64_t arg6)\n{\n    if (arg2 == 0)\n    {\n        __fprintf_chk();\n    }\n    else\n    {\n        __fprintf_chk();\n    }\n    __fprintf_chk(arg1, 1, \"Copyright %s %d Free Software Fo\u2026\", dcgettext(nullptr, &data_407dab, 5), 0x7e1);\n    fputs_unlocked(dcgettext(nullptr, \"\\nLicense GPLv3+: GNU GPL versio\u2026\", 5), arg1);\n    int64_t var_58;\n    int64_t var_50_1;\n    int64_t var_48;\n    int64_t var_40;\n    char* rax_6;\n    int64_t rbx_1;\n    char* rsi_1;\n    int64_t r12_1;\n    int64_t r13;\n    int64_t r14;\n    int64_t r15_1;\n    switch (arg6)\n    {\n        case 0:\n        {\n            abort();\n            /* no return */\n        }\n        case 8:\n        {\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            r15_1 = arg5[4];\n            var_48 = arg5[7];\n            r14 = arg5[3];\n            rbx_1 = *arg5;\n            var_58 = arg5[2];\n            var_50_1 = arg5[1];\n            rax_6 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            break;\n        }\n        case 9:\n        {\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n            break;\n        }\n        default:\n            rsi_1 = \"Written by %s, %s, %s,\\n%s, %s, \u2026\";\n            r13 = arg5[6];\n            r12_1 = arg5[5];\n            var_40 = arg5[8];\n            r15_1 = arg5[4];\n            r14 = arg5[3];\n            var_48 = arg5[7];\n            var_58 = arg5[2];\n            rbx_1 = *arg5;\n            var_50_1 = arg5[1];\n    }\n    int64_t var_60;\n    if ((arg6 > 9 || arg6 == 9))\n    {\n        rax_6 = dcgettext(nullptr, rsi_1, 5);\n        var_60 = var_40;\n    }\n    int64_t var_78_1;\n    int64_t var_70_1;\n    int64_t var_68_2;\n    int64_t var_58_1;\n    int64_t var_50;\n    char* rax_19;\n    char* rax_22;\n    int64_t rbx_5;\n    int64_t rbx_6;\n    int64_t r9_9;\n    int64_t r12_4;\n    int64_t r13_2;\n    int64_t r14_1;\n    switch (arg6)\n    {\n        case 1:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s.\\n\", 5), *arg5);\n            break;\n        }\n        case 2:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s and %s.\\n\", 5), *arg5, arg5[1]);\n            break;\n        }\n        case 3:\n        {\n            /* tailcall */\n            return __fprintf_chk(arg1, 1, dcgettext(nullptr, \"Written by %s, %s, and %s.\\n\", 5), *arg5, arg5[1], arg5[2]);\n            break;\n        }\n        case 4:\n        {\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\nand %s.\\n\", 5);\n            break;\n        }\n        case 5:\n        {\n            int64_t r15_2 = arg5[4];\n            r14_1 = arg5[3];\n            r13_2 = arg5[2];\n            r12_4 = arg5[1];\n            rbx_5 = *arg5;\n            rax_19 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, and \u2026\", 5);\n            var_60 = r15_2;\n            break;\n        }\n        case 6:\n        {\n            int64_t r12_5 = arg5[5];\n            int64_t r15_3 = arg5[4];\n            int64_t r14_2 = arg5[3];\n            var_58_1 = arg5[1];\n            int64_t r13_3 = arg5[2];\n            rbx_6 = *arg5;\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            r9_9 = r13_3;\n            var_68_2 = r12_5;\n            var_70_1 = r15_3;\n            var_78_1 = r14_2;\n            break;\n        }\n        case 7:\n        {\n            int64_t r13_4 = arg5[6];\n            int64_t r12_6 = arg5[5];\n            int64_t r15_4 = arg5[4];\n            int64_t r14_3 = arg5[3];\n            var_50 = arg5[2];\n            rbx_6 = *arg5;\n            var_58_1 = arg5[1];\n            rax_22 = dcgettext(nullptr, \"Written by %s, %s, %s,\\n%s, %s, \u2026\", 5);\n            var_60 = r13_4;\n            var_68_2 = r12_6;\n            var_70_1 = r15_4;\n            var_78_1 = r14_3;\n            r9_9 = var_50;\n            break;\n        }\n        default:\n            return __fprintf_chk(arg1, 1, rax_6, rbx_1, var_50_1, var_58, r14, r15_1, r12_1, r13, var_48, var_60, var_58, var_50_1, var_48, var_40);\n    }\n    if ((arg6 == 4 || arg6 == 5))\n    {\n        __fprintf_chk(arg1, 1, rax_19, rbx_5, r12_4, r13_2, r14_1, var_60);\n        return r14_1;\n    }\n    else if ((arg6 == 6 || arg6 == 7))\n    {\n        return __fprintf_chk(arg1, 1, rax_22, rbx_6, var_58_1, r9_9, var_78_1, var_70_1, var_68_2, var_60, var_58_1, var_50);\n    }\n}\n\n"
        },
        {
            "funcName": "sub_404c70",
            "funcStartAddr": "0x404c70",
            "funcEndAddr": "0x404c90",
            "decompiledFuncCode": "int64_t sub_404c70(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int64_t* arg5)\n{\n    int64_t r9 = 0;\n    if (*arg5 != 0)\n    {\n        do\n        {\n            r9 = (r9 + 1);\n        } while (arg5[r9] != 0);\n    }\n    /* tailcall */\n    return sub_404890(arg1, arg2, arg3, arg4, arg5, r9);\n}\n\n"
        },
        {
            "funcName": "sub_404c90",
            "funcStartAddr": "0x404c90",
            "funcEndAddr": "0x404cf0",
            "decompiledFuncCode": "int64_t sub_404c90(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4, \n    int32_t* arg5)\n{\n    int64_t r9 = 0;\n    void var_58;\n    do\n    {\n        int32_t rax_3 = *arg5;\n        if (rax_3 <= 0x2f)\n        {\n            int64_t* r10_2 = (rax_3 + *(arg5 + 0x10));\n            *arg5 = (rax_3 + 8);\n            int64_t rax_2 = *r10_2;\n            *(&var_58 + (r9 << 3)) = rax_2;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            int64_t* r10_3 = *(arg5 + 8);\n            *(arg5 + 8) = &r10_3[1];\n            int64_t rax_5 = *r10_3;\n            *(&var_58 + (r9 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9 = (r9 + 1);\n    } while (r9 != 0xa);\n    return sub_404890(arg1, arg2, arg3, arg4, &var_58, r9);\n}\n\n"
        },
        {
            "funcName": "sub_404cf0",
            "funcStartAddr": "0x404cf0",
            "funcEndAddr": "0x404dac",
            "decompiledFuncCode": "int64_t sub_404cf0(FILE* arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n{\n    char r11 = 0;\n    int64_t r8;\n    int64_t var_18 = r8;\n    void* r10 = &arg_8;\n    int32_t r8_1 = 0x20;\n    void* var_98 = &arg_8;\n    int64_t r9;\n    int64_t var_10 = r9;\n    int64_t r9_1 = 0;\n    int32_t var_a0 = 0x20;\n    void var_38;\n    void* var_90 = &var_38;\n    void var_88;\n    do\n    {\n        if (r8_1 <= 0x2f)\n        {\n            uint64_t rax_1 = r8_1;\n            r8_1 = (r8_1 + 8);\n            r11 = 1;\n            int64_t rax_3 = *(rax_1 + &var_38);\n            *(&var_88 + (r9_1 << 3)) = rax_3;\n            if (rax_3 == 0)\n            {\n                break;\n            }\n        }\n        else\n        {\n            void* rax_4 = r10;\n            r10 = (r10 + 8);\n            int64_t rax_5 = *rax_4;\n            *(&var_88 + (r9_1 << 3)) = rax_5;\n            if (rax_5 == 0)\n            {\n                break;\n            }\n        }\n        r9_1 = (r9_1 + 1);\n    } while (r9_1 != 0xa);\n    if (r11 != 0)\n    {\n        int32_t var_a0_1 = r8_1;\n    }\n    return sub_404890(arg1, arg2, arg3, arg4, &var_88, r9_1);\n}\n\n"
        },
        {
            "funcName": "sub_404db0",
            "funcStartAddr": "0x404db0",
            "funcEndAddr": "0x404e24",
            "decompiledFuncCode": "int64_t sub_404db0()\n{\n    __printf_chk(1, dcgettext(nullptr, \"\\nReport bugs to: %s\\n\", 5), \"bug-coreutils@gnu.org\");\n    __printf_chk(1, dcgettext(nullptr, \"%s home page: <%s>\\n\", 5), \"GNU coreutils\", \"https://www.gnu.org/software/cor\u2026\");\n    /* tailcall */\n    return fputs_unlocked(dcgettext(nullptr, \"General help using GNU software:\u2026\", 5), stdout);\n}\n\n"
        },
        {
            "funcName": "sub_404e30",
            "funcStartAddr": "0x404e30",
            "funcEndAddr": "0x404e4a",
            "decompiledFuncCode": "int64_t sub_404e30(uint64_t arg1)\n{\n    int64_t rax = malloc(arg1);\n    if ((rax == 0 && arg1 != 0))\n    {\n        sub_405080();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404e90",
            "funcStartAddr": "0x404e90",
            "funcEndAddr": "0x404ec6",
            "decompiledFuncCode": "int64_t sub_404e90(int64_t arg1, uint64_t arg2)\n{\n    if ((arg2 == 0 && arg1 != 0))\n    {\n        free(arg1);\n        return 0;\n    }\n    int64_t rax = realloc(arg1, arg2);\n    if ((rax == 0 && arg2 != 0))\n    {\n        sub_405080();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_404fda",
            "funcStartAddr": "0x404fda",
            "funcEndAddr": "0x404fe0",
            "decompiledFuncCode": "int64_t sub_404fda() __noreturn\n{\n    sub_405080();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_404fe0",
            "funcStartAddr": "0x404fe0",
            "funcEndAddr": "0x404ff7",
            "decompiledFuncCode": "int64_t sub_404fe0(uint64_t arg1)\n{\n    /* tailcall */\n    return memset(sub_404e30(arg1), 0, arg1);\n}\n\n"
        },
        {
            "funcName": "sub_405000",
            "funcStartAddr": "0x405000",
            "funcEndAddr": "0x40502e",
            "decompiledFuncCode": "int64_t sub_405000(uint64_t arg1, uint64_t arg2)\n{\n    int64_t rax;\n    bool rdx;\n    rdx = HIGHD((arg1 * arg2));\n    rax = LOWD((arg1 * arg2));\n    if ((rax >= 0 && ((arg1 * arg2) >> 0x40) != 0 == 0))\n    {\n        int64_t rax_1 = calloc(arg1, arg2);\n        if (rax_1 != 0)\n        {\n            return rax_1;\n        }\n    }\n    sub_405080();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_405030",
            "funcStartAddr": "0x405030",
            "funcEndAddr": "0x405058",
            "decompiledFuncCode": "int64_t sub_405030(int64_t arg1, uint64_t arg2)\n{\n    /* tailcall */\n    return memcpy(sub_404e30(arg2), arg1, arg2);\n}\n\n"
        },
        {
            "funcName": "sub_405060",
            "funcStartAddr": "0x405060",
            "funcEndAddr": "0x405073",
            "decompiledFuncCode": "int64_t sub_405060(char* arg1)\n{\n    /* tailcall */\n    return sub_405030(arg1, (strlen(arg1) + 1));\n}\n\n"
        },
        {
            "funcName": "sub_405080",
            "funcStartAddr": "0x405080",
            "funcEndAddr": "0x4050b1",
            "decompiledFuncCode": "int64_t sub_405080() __noreturn\n{\n    error(data_60a208, 0, \"%s\", dcgettext(nullptr, \"memory exhausted\", 5));\n    abort();\n    /* no return */\n}\n\n"
        },
        {
            "funcName": "sub_4050c0",
            "funcStartAddr": "0x4050c0",
            "funcEndAddr": "0x4050d8",
            "decompiledFuncCode": "char* sub_4050c0(char* arg1)\n{\n    char* rax = strndup(arg1);\n    if (rax == 0)\n    {\n        sub_405080();\n        /* no return */\n    }\n    return rax;\n}\n\n"
        },
        {
            "funcName": "sub_4050e0",
            "funcStartAddr": "0x4050e0",
            "funcEndAddr": "0x40515b",
            "decompiledFuncCode": "int64_t sub_4050e0(FILE* arg1)\n{\n    FILE* rdi = arg1;\n    if (fileno(arg1) >= 0)\n    {\n        int32_t rax_1 = __freading(rdi);\n        off64_t rax_6;\n        if (rax_1 != 0)\n        {\n            rax_6 = lseek(fileno(arg1), 0, 1);\n        }\n        if (((rax_1 == 0 || (rax_1 != 0 && rax_6 != -1)) && sub_405160(arg1) != 0))\n        {\n            int32_t* rax_3 = __errno_location();\n            int32_t r12 = *rax_3;\n            int64_t rax_4 = fclose(arg1);\n            if (r12 != 0)\n            {\n                *rax_3 = r12;\n                rax_4 = 0xffffffff;\n            }\n            return rax_4;\n        }\n        rdi = arg1;\n    }\n    /* tailcall */\n    return fclose(rdi);\n}\n\n"
        },
        {
            "funcName": "sub_405160",
            "funcStartAddr": "0x405160",
            "funcEndAddr": "0x4051a0",
            "decompiledFuncCode": "int64_t sub_405160(FILE* arg1)\n{\n    int32_t* rbx = arg1;\n    if ((arg1 != 0 && (__freading(arg1) != 0 && (*rbx & 0x100) != 0)))\n    {\n        sub_4051a0(rbx, 0, 1);\n        /* tailcall */\n        return fflush(rbx);\n    }\n    /* tailcall */\n    return fflush(rbx);\n}\n\n"
        },
        {
            "funcName": "sub_4051a0",
            "funcStartAddr": "0x4051a0",
            "funcEndAddr": "0x4051f7",
            "decompiledFuncCode": "off64_t sub_4051a0(FILE* arg1, off_t arg2, int32_t arg3)\n{\n    if ((arg1->_IO_read_end == arg1->_IO_read_ptr && (arg1->_IO_write_ptr == arg1->_IO_write_base && arg1->_IO_save_base == 0)))\n    {\n        off64_t rax_3 = lseek(fileno(arg1), arg2, arg3);\n        if (rax_3 != -1)\n        {\n            arg1->_flags = (arg1->_flags & 0xffffffef);\n            arg1->_offset = rax_3;\n            rax_3 = 0;\n        }\n        return rax_3;\n    }\n    /* tailcall */\n    return fseeko(arg1, arg2, arg3);\n}\n\n"
        },
        {
            "funcName": "sub_405200",
            "funcStartAddr": "0x405200",
            "funcEndAddr": "0x4052df",
            "decompiledFuncCode": "uint64_t sub_405200(int64_t arg1, int32_t* arg2)\n{\n    int64_t r11 = (arg1 + 8);\n    int32_t r12 = arg2[0xb];\n    int32_t rbp = *arg2;\n    int64_t rbx = arg2[0xc];\n    int32_t r9 = r12;\n    int32_t r10 = rbp;\n    int32_t r8 = rbx;\n    while (r10 > r8)\n    {\n        int32_t r14_2;\n        while (r9 < r8)\n        {\n            r14_2 = (r10 - r8);\n            int32_t rdx_2 = (r8 - r9);\n            if (r14_2 <= rdx_2)\n            {\n                break;\n            }\n            int64_t rcx_1 = r9;\n            r10 = (r10 - rdx_2);\n            int64_t* rax_1 = (arg1 + (rcx_1 << 3));\n            int64_t r13_1 = (r11 + (((rdx_2 - 1) + rcx_1) << 3));\n            int64_t rdx_6 = (r10 - rcx_1);\n            do\n            {\n                int64_t rcx_2 = *rax_1;\n                *rax_1 = rax_1[rdx_6];\n                rax_1[rdx_6] = rcx_2;\n                rax_1 = &rax_1[1];\n            } while (r13_1 != rax_1);\n            if (r10 <= r8)\n            {\n                break;\n            }\n        }\n        if (r9 >= r8)\n        {\n            break;\n        }\n        int64_t rdx_7 = r9;\n        int64_t* rax_4 = (arg1 + (rdx_7 << 3));\n        int64_t r13_2 = (r11 + (((r14_2 - 1) + rdx_7) << 3));\n        int64_t rcx_6 = (rbx - rdx_7);\n        do\n        {\n            int64_t rcx_7 = *rax_4;\n            *rax_4 = rax_4[rcx_6];\n            rax_4[rcx_6] = rcx_7;\n            rax_4 = &rax_4[1];\n        } while (rax_4 != r13_2);\n        r9 = (r9 + r14_2);\n    }\n    arg2[0xc] = rbp;\n    uint64_t rax_3 = (rbp - r8);\n    arg2[0xb] = (r12 + rax_3);\n    return rax_3;\n}\n\n"
        },
        {
            "funcName": "sub_4052e0",
            "funcStartAddr": "0x4052e0",
            "funcEndAddr": "0x4058fc",
            "decompiledFuncCode": "uint64_t sub_4052e0(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8, int64_t arg9)\n{\n    char* r14 = *(arg7 + 0x20);\n    char rax_1 = *r14;\n    char* rbp = r14;\n    uint64_t r13_1;\n    if ((rax_1 == 0x3d || rax_1 == 0))\n    {\n        r13_1 = 0;\n    }\n    if ((rax_1 != 0x3d && rax_1 != 0))\n    {\n        while (true)\n        {\n            rbp = &rbp[1];\n            char rax_2 = *rbp;\n            if (rax_2 == 0)\n            {\n                break;\n            }\n            if (rax_2 == 0x3d)\n            {\n                break;\n            }\n            if ((!(rax_2 != 0 && rax_2 != 0x3d)))\n            {\n                /* nop */\n            }\n        }\n        r13_1 = (rbp - r14);\n    }\n    int64_t* rbx = arg4;\n    int64_t r12 = 0;\n    char* rax_3 = *rbx;\n    char* r15 = rax_3;\n    uint64_t rax_14;\n    if (rax_3 != 0)\n    {\n        int32_t rax_4;\n        uint64_t rax_5;\n        int32_t r8;\n        while (true)\n        {\n            rax_4 = strncmp(r15, r14, r13_1);\n            if (rax_4 == 0)\n            {\n                rax_5 = strlen(r15);\n                if (rax_5 == r13_1)\n                {\n                    break;\n                }\n            }\n            rbx = &rbx[4];\n            r15 = *rbx;\n            r8 = (r12 + 1);\n            if (r15 == 0)\n            {\n                break;\n            }\n            r12 = r8;\n        }\n        if ((rax_4 == 0 && rax_5 == r13_1))\n        {\n            goto label_405510;\n        }\n        rbx = nullptr;\n        int32_t var_44_1 = 0xffffffff;\n        char* rdi_2 = rax_3;\n        int64_t r15_1 = 0;\n        int32_t var_50_1 = 0;\n        int32_t var_40_1 = 0;\n        char* var_70_1 = nullptr;\n        int64_t* rbp_1 = arg4;\n        do\n        {\n            if (strncmp(rdi_2, r14, r13_1) == 0)\n            {\n                if (rbx == 0)\n                {\n                    var_44_1 = r15_1;\n                    rbx = rbp_1;\n                }\n                else if (((((arg6 != 0 || (arg6 == 0 && rbx[1] != rbp_1[1])) || ((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] != rbp_1[2])) || (((arg6 == 0 && rbx[1] == rbp_1[1]) && rbx[2] == rbp_1[2]) && rbx[3] != rbp_1[3])) && var_50_1 == 0))\n                {\n                    if (arg8 == 0)\n                    {\n                        var_50_1 = 1;\n                        if (var_70_1 != 0)\n                        {\n                            goto label_405436;\n                        }\n                    }\n                    else\n                    {\n                        if (var_70_1 != 0)\n                        {\n                            goto label_405436;\n                        }\n                        char* rax_36 = calloc(r8, 1);\n                        var_70_1 = rax_36;\n                        if (rax_36 == 0)\n                        {\n                            var_50_1 = 1;\n                        }\n                        else\n                        {\n                            var_40_1 = 1;\n                            var_70_1[var_44_1] = 1;\n                        label_405436:\n                            var_70_1[r15_1] = 1;\n                        }\n                    }\n                }\n            }\n            rbp_1 = &rbp_1[4];\n            rdi_2 = *rbp_1;\n            r15_1 = (r15_1 + 1);\n        } while (rdi_2 != 0);\n        if (((var_70_1 == 0 && var_50_1 == 0) && rbx != 0))\n        {\n            r12 = var_44_1;\n        label_405510:\n            int32_t rdx_3 = *arg7;\n            *(arg7 + 0x20) = 0;\n            int32_t rax_18 = (rdx_3 + 1);\n            *arg7 = rax_18;\n            int32_t rcx_4 = rbx[1];\n            if (*rbp != 0)\n            {\n                if (rcx_4 != 0)\n                {\n                    *(arg7 + 0x10) = &rbp[1];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' doesn't allow \u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    rax_14 = 0x3f;\n                }\n            }\n            if ((rcx_4 == 1 && *rbp == 0))\n            {\n                if (rax_18 < arg1)\n                {\n                    *arg7 = (rdx_3 + 2);\n                    *(arg7 + 0x10) = arg2[rax_18];\n                }\n                else\n                {\n                    if (arg8 != 0)\n                    {\n                        __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' requires an ar\u2026\", 5), *arg2, arg9, *rbx, arg4);\n                    }\n                    arg7[2] = rbx[3];\n                    char* rax_43;\n                    rax_43 = *arg3 != 0x3a;\n                    rax_14 = ((rax_43 * 5) + 0x3a);\n                }\n            }\n            if ((((*rbp != 0 && rcx_4 != 0) || ((*rbp == 0 && rcx_4 == 1) && rax_18 < arg1)) || (*rbp == 0 && rcx_4 != 1)))\n            {\n                if (arg5 == 0)\n                {\n                    goto label_40553e;\n                }\n                *arg5 = r12;\n            label_40553e:\n                int32_t* rdx_4 = rbx[2];\n                rax_14 = rbx[3];\n                if (rdx_4 != 0)\n                {\n                    *rdx_4 = rax_14;\n                    rax_14 = 0;\n                }\n            }\n            goto label_40555c;\n        }\n        if ((var_70_1 != 0 || (var_70_1 == 0 && var_50_1 != 0)))\n        {\n            if (arg8 != 0)\n            {\n                if (var_50_1 != 0)\n                {\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous\\n\", 5), *arg2, arg9, r14, arg4);\n                    r14 = *(arg7 + 0x20);\n                }\n                else\n                {\n                    flockfile(stderr);\n                    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option '%s%s' is ambiguous; \u2026\", 5), *arg2, arg9, *(arg7 + 0x20), arg4);\n                    uint64_t* const rdi_13 = stderr;\n                    int64_t* rbx_4 = arg4;\n                    char* rbp_5 = var_70_1;\n                    void* r12_2 = &var_70_1[(r12 + 1)];\n                    do\n                    {\n                        if (*rbp_5 != 0)\n                        {\n                            __fprintf_chk(rdi_13, 1, \" '%s%s'\", arg9, *rbx_4);\n                            rdi_13 = stderr;\n                        }\n                        rbp_5 = &rbp_5[1];\n                        rbx_4 = &rbx_4[4];\n                    } while (r12_2 != rbp_5);\n                    fputc(0xa, stderr);\n                    funlockfile(stderr);\n                    r14 = *(arg7 + 0x20);\n                }\n            }\n            if (var_40_1 != 0)\n            {\n                free(var_70_1);\n            }\n            *(arg7 + 0x20) = &r14[strlen(r14)];\n            *arg7 = (*arg7 + 1);\n            arg7[2] = 0;\n            rax_14 = 0x3f;\n        label_40555c:\n            return rax_14;\n        }\n    }\n    if ((arg6 != 0 && *(arg2[*arg7] + 1) != 0x2d))\n    {\n        rax_14 = 0xffffffff;\n        if (strchr(arg3, rax_1) != 0)\n        {\n            goto label_40555c;\n        }\n    }\n    if (arg8 == 0)\n    {\n        goto label_4054ce;\n    }\n    __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: unrecognized option '%s%s'\\n\", 5), *arg2, arg9, r14, arg4);\nlabel_4054ce:\n    *(arg7 + 0x20) = 0;\n    *arg7 = (*arg7 + 1);\n    arg7[2] = 0;\n    return 0x3f;\n}\n\n"
        },
        {
            "funcName": "sub_405900",
            "funcStartAddr": "0x405900",
            "funcEndAddr": "0x405ec6",
            "decompiledFuncCode": "uint64_t sub_405900(int32_t arg1, int64_t* arg2, char* arg3, int64_t* arg4, \n    int32_t* arg5, int32_t arg6, int32_t* arg7, int32_t arg8)\n{\n    int32_t r13 = arg7[1];\n    if (arg1 <= 0)\n    {\n        goto label_405b3c;\n    }\n    int32_t rax_1 = *arg7;\n    int32_t rbp_1 = arg1;\n    char* r15_1 = arg3;\n    *(arg7 + 0x10) = 0;\n    if (rax_1 == 0)\n    {\n        *arg7 = 1;\n        rax_1 = 1;\n    }\n    uint32_t rax_3;\n    char* rdx;\n    if ((rax_1 == 0 || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        arg7[0xc] = rax_1;\n        arg7[0xb] = rax_1;\n        *(arg7 + 0x20) = 0;\n        char rax_2 = *r15_1;\n        if (rax_2 == 0x2d)\n        {\n            arg7[0xa] = 2;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else if (rax_2 == 0x2b)\n        {\n            arg7[0xa] = 0;\n            r15_1 = &r15_1[1];\n            rdx = nullptr;\n        }\n        else\n        {\n            rdx = nullptr;\n            char* rax_16;\n            if (arg8 == 0)\n            {\n                rax_16 = getenv(\"POSIXLY_CORRECT\");\n                if (rax_16 == 0)\n                {\n                    arg7[0xa] = 1;\n                    rdx = *(arg7 + 0x20);\n                }\n                else\n                {\n                    rdx = *(arg7 + 0x20);\n                }\n            }\n            if (((arg8 == 0 && rax_16 != 0) || arg8 != 0))\n            {\n                arg7[0xa] = 0;\n            }\n        }\n        arg7[6] = 1;\n        rax_3 = *r15_1;\n    }\n    if ((rax_1 != 0 && arg7[6] != 0))\n    {\n        rax_3 = *arg3;\n        rdx = *(arg7 + 0x20);\n    }\n    if (((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)))\n    {\n        if (rax_3 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n            goto label_4059c8;\n        }\n    }\n    if (((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0))\n    {\n        char rax_4 = r15_1[1];\n        r15_1 = &r15_1[1];\n        if (rax_4 == 0x3a)\n        {\n            r13 = 0;\n        }\n        if (rdx == 0)\n        {\n        label_4059c8:\n            int32_t rax_5 = *arg7;\n            if (arg7[0xc] > rax_5)\n            {\n                arg7[0xc] = rax_5;\n            }\n            if (rax_5 < arg7[0xb])\n            {\n                arg7[0xb] = rax_5;\n            }\n            if (arg7[0xa] == 1)\n            {\n                int32_t rdx_5 = arg7[0xc];\n                if (arg7[0xb] == rdx_5)\n                {\n                    if (rax_5 != rdx_5)\n                    {\n                        arg7[0xb] = rax_5;\n                        rdx_5 = rax_5;\n                    }\n                }\n                else if (rax_5 != rdx_5)\n                {\n                    sub_405200(arg2, arg7);\n                    rdx_5 = *arg7;\n                }\n                char* rcx_8;\n                if (rbp_1 > rdx_5)\n                {\n                    int64_t rax_10 = rdx_5;\n                    do\n                    {\n                        rcx_8 = arg2[rax_10];\n                        int32_t rsi_5 = rax_10;\n                        rdx_5 = rax_10;\n                        if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                        {\n                            break;\n                        }\n                        rdx_5 = (rsi_5 + 1);\n                        rax_10 = (rax_10 + 1);\n                        *arg7 = rdx_5;\n                    } while (rbp_1 > rax_10);\n                    if ((*rcx_8 == 0x2d && rcx_8[1] != 0))\n                    {\n                        rax_5 = *arg7;\n                    }\n                }\n                if ((rbp_1 <= rdx_5 || (rbp_1 > rdx_5 && (!(*rcx_8 == 0x2d && rcx_8[1] != 0)))))\n                {\n                    rax_5 = rdx_5;\n                }\n                arg7[0xc] = rdx_5;\n            }\n            bool c_1 = rbp_1 < rax_5;\n            bool z_1 = rbp_1 == rax_5;\n            int64_t rcx_3;\n            int32_t rdx_2;\n            char* r14_1;\n            if (z_1)\n            {\n                rbp_1 = arg7[0xc];\n                rdx_2 = arg7[0xb];\n            }\n            else\n            {\n                rcx_3 = 3;\n                void* const rdi = &data_408249;\n                r14_1 = arg2[rax_5];\n                char* rsi_1 = r14_1;\n                while (rcx_3 != 0)\n                {\n                    char temp0_1 = *rsi_1;\n                    char temp1_1 = *rdi;\n                    c_1 = temp0_1 < temp1_1;\n                    z_1 = temp0_1 == temp1_1;\n                    rsi_1 = &rsi_1[1];\n                    rdi = (rdi + 1);\n                    rcx_3 = (rcx_3 - 1);\n                    if ((!z_1))\n                    {\n                        break;\n                    }\n                }\n                rcx_3 = ((!z_1) && (!c_1));\n                rcx_3 = (rcx_3 - 0);\n                if (rcx_3 == 0)\n                {\n                    rdx_2 = arg7[0xb];\n                    int32_t rcx_4 = arg7[0xc];\n                    int32_t rax_6 = (rax_5 + 1);\n                    *arg7 = rax_6;\n                    if (rdx_2 == rcx_4)\n                    {\n                        arg7[0xb] = rax_6;\n                        rdx_2 = rax_6;\n                    }\n                    else if (rax_6 != rcx_4)\n                    {\n                        sub_405200(arg2, arg7);\n                        rdx_2 = arg7[0xb];\n                    }\n                    arg7[0xc] = rbp_1;\n                    *arg7 = rbp_1;\n                }\n            }\n            int32_t r14_2;\n            if ((z_1 || ((!z_1) && rcx_3 == 0)))\n            {\n                if (rdx_2 == rbp_1)\n                {\n                    goto label_405b3c;\n                }\n                *arg7 = rdx_2;\n            label_405b3c:\n                r14_2 = -1;\n            }\n            if (((!z_1) && rcx_3 != 0))\n            {\n                char rcx_9;\n                if (*r14_1 == 0x2d)\n                {\n                    rcx_9 = r14_1[1];\n                    if (rcx_9 != 0)\n                    {\n                        if (arg4 == 0)\n                        {\n                            goto label_405c40;\n                        }\n                        int32_t* var_88_2;\n                        int32_t var_80_2;\n                        void* const var_78_1;\n                        if (rcx_9 == 0x2d)\n                        {\n                            *(arg7 + 0x20) = &r14_1[2];\n                            var_78_1 = &data_408249;\n                            var_80_2 = r13;\n                            var_88_2 = arg7;\n                            goto label_405cb0;\n                        }\n                        if (arg6 == 0)\n                        {\n                            goto label_405c40;\n                        }\n                        if (r14_1[2] == 0)\n                        {\n                            if (strchr(r15_1, rcx_9) != 0)\n                            {\n                                goto label_405c40;\n                            }\n                            goto label_405c01;\n                        }\n                    label_405c01:\n                        *(arg7 + 0x20) = &r14_1[1];\n                        int32_t rax_12 = sub_4052e0(rbp_1, arg2, r15_1, arg4, arg5, arg6, arg7, r13, &data_40824a);\n                        r14_2 = rax_12;\n                        if (rax_12 == 0xffffffff)\n                        {\n                            r14_1 = arg2[*arg7];\n                        label_405c40:\n                            rdx = &r14_1[1];\n                        label_405a81:\n                            *(arg7 + 0x20) = &rdx[1];\n                            r14_2 = *rdx;\n                            int32_t var_4c;\n                            var_4c = r14_2;\n                            char* rax_7 = strchr(r15_1, r14_2);\n                            char rcx_5 = var_4c;\n                            void* r8_1 = &rdx[1];\n                            if (rdx[1] == 0)\n                            {\n                                *arg7 = (*arg7 + 1);\n                            }\n                            if (((rcx_5 - 0x3a) > 1 && rax_7 != 0))\n                            {\n                                char rcx_7 = rax_7[1];\n                                if (((*rax_7 == 0x57 && arg4 != 0) && rcx_7 == 0x3b))\n                                {\n                                    if (rdx[1] != 0)\n                                    {\n                                        goto label_405c7e;\n                                    }\n                                    int64_t rax_14 = *arg7;\n                                    if (rax_14 == rbp_1)\n                                    {\n                                        if (r13 != 0)\n                                        {\n                                            int64_t rbp_4 = *arg2;\n                                            __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_4, r14_2);\n                                        }\n                                        arg7[2] = r14_2;\n                                        int64_t r14_4;\n                                        r14_4 = *r15_1 != 0x3a;\n                                        r14_2 = ((r14_4 * 5) + 0x3a);\n                                    }\n                                    else\n                                    {\n                                        r8_1 = arg2[rax_14];\n                                    label_405c7e:\n                                        *(arg7 + 0x20) = r8_1;\n                                        arg6 = 0;\n                                        *(arg7 + 0x10) = 0;\n                                        var_78_1 = &data_408268;\n                                        var_80_2 = r13;\n                                        var_88_2 = arg7;\n                                    label_405cb0:\n                                        r14_2 = sub_4052e0(rbp_1, arg2, r15_1, arg4, arg5, arg6, var_88_2, var_80_2, var_78_1);\n                                    }\n                                }\n                                if ((((*rax_7 != 0x57 || (*rax_7 == 0x57 && arg4 == 0)) || ((*rax_7 == 0x57 && arg4 != 0) && rcx_7 != 0x3b)) && rcx_7 == 0x3a))\n                                {\n                                    char rdx_9 = rdx[1];\n                                    if (rax_7[2] != 0x3a)\n                                    {\n                                        int64_t rax_17 = *arg7;\n                                        if (rdx_9 != 0)\n                                        {\n                                            *(arg7 + 0x10) = r8_1;\n                                            *arg7 = (rax_17 + 1);\n                                        }\n                                        else if (rbp_1 != rax_17)\n                                        {\n                                            int64_t rax_18 = arg2[rax_17];\n                                            *arg7 = (rax_17 + 1);\n                                            *(arg7 + 0x10) = rax_18;\n                                        }\n                                        else\n                                        {\n                                            if (r13 != 0)\n                                            {\n                                                int64_t rbp_3 = *arg2;\n                                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: option requires an argument \u2026\", 5), rbp_3, r14_2);\n                                            }\n                                            arg7[2] = r14_2;\n                                            int64_t r14_3;\n                                            r14_3 = *r15_1 != 0x3a;\n                                            r14_2 = ((r14_3 * 5) + 0x3a);\n                                        }\n                                    }\n                                    else if (rdx_9 == 0)\n                                    {\n                                        *(arg7 + 0x10) = 0;\n                                    }\n                                    else\n                                    {\n                                        *(arg7 + 0x10) = r8_1;\n                                        *arg7 = (*arg7 + 1);\n                                    }\n                                    *(arg7 + 0x20) = 0;\n                                }\n                            }\n                            if (((rcx_5 - 0x3a) <= 1 || ((rcx_5 - 0x3a) > 1 && rax_7 == 0)))\n                            {\n                                if (r13 == 0)\n                                {\n                                    goto label_405d6d;\n                                }\n                                int64_t rbp_2 = *arg2;\n                                __fprintf_chk(stderr, 1, dcgettext(nullptr, \"%s: invalid option -- '%c'\\n\", 5), rbp_2, r14_2);\n                            label_405d6d:\n                                arg7[2] = r14_2;\n                                r14_2 = 0x3f;\n                            }\n                        }\n                    }\n                }\n                if ((*r14_1 != 0x2d || (*r14_1 == 0x2d && rcx_9 == 0)))\n                {\n                    if (arg7[0xa] == 0)\n                    {\n                        goto label_405b3c;\n                    }\n                    *(arg7 + 0x10) = r14_1;\n                    r14_2 = 1;\n                    *arg7 = (rax_5 + 1);\n                }\n            }\n            if ((((z_1 || ((!z_1) && rcx_3 == 0)) && rdx_2 != rbp_1) || ((!z_1) && rcx_3 != 0)))\n            {\n                return r14_2;\n            }\n        }\n    }\n    if (((((((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) != 0) || rax_1 == 0) || (rax_1 != 0 && arg7[6] == 0)) && rdx != 0) || ((rax_1 != 0 && arg7[6] != 0) && ((rax_3 - 0x2b) & 0xfd) == 0)))\n    {\n        if (*rdx == 0)\n        {\n            goto label_4059c8;\n        }\n        goto label_405a81;\n    }\n}\n\n"
        },
        {
            "funcName": "sub_405f30",
            "funcStartAddr": "0x405f30",
            "funcEndAddr": "0x405f48",
            "decompiledFuncCode": "uint64_t sub_405f30(int32_t arg1, int64_t* arg2, char* arg3)\n{\n    return _getopt_internal(arg1, arg2, arg3, nullptr, nullptr, 0, 1);\n}\n\n"
        },
        {
            "funcName": "sub_405fd0",
            "funcStartAddr": "0x405fd0",
            "funcEndAddr": "0x40604a",
            "decompiledFuncCode": "uint64_t sub_405fd0(uint32_t* arg1, char* arg2, uint64_t arg3, mbstate_t* arg4)\n{\n    uint64_t rbx_1;\n    char* rbp_1;\n    uint32_t* r12_1;\n    if (arg2 == 0)\n    {\n        arg3 = 1;\n        rbp_1 = &data_40824c[0x1b];\n    }\n    else\n    {\n        rbx_1 = -2;\n        if (arg3 != 0)\n        {\n            r12_1 = arg1;\n            rbp_1 = arg2;\n            if (arg1 != 0)\n            {\n                goto label_405ffa;\n            }\n        }\n    }\n    if ((arg2 == 0 || (arg2 != 0 && arg3 != 0)))\n    {\n        void var_1c;\n        r12_1 = &var_1c;\n    label_405ffa:\n        uint64_t rax_1 = mbrtowc(r12_1, rbp_1, arg3, arg4);\n        rbx_1 = rax_1;\n        if ((rax_1 > -3 && sub_4060b0() == 0))\n        {\n            rbx_1 = 1;\n            *r12_1 = *rbp_1;\n        }\n    }\n    return rbx_1;\n}\n\n"
        },
        {
            "funcName": "sub_406050",
            "funcStartAddr": "0x406050",
            "funcEndAddr": "0x4060ad",
            "decompiledFuncCode": "uint64_t sub_406050(FILE* arg1)\n{\n    int32_t* rbp = arg1;\n    uint64_t rax = __fpending(arg1);\n    int32_t rbx_1 = (*rbp & 0x20);\n    uint64_t rax_1 = sub_4050e0(rbp);\n    if ((rbx_1 != 0 && rax_1 == 0))\n    {\n        *__errno_location() = 0;\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 != 0 && rax_1 != 0) || ((rbx_1 == 0 && rax_1 != 0) && rax != 0)))\n    {\n        rax_1 = 0xffffffff;\n    }\n    if (((rbx_1 == 0 && rax_1 != 0) && rax == 0))\n    {\n        int32_t* rax_2;\n        rax_2 = *__errno_location() != 9;\n        rax_1 = (-rax_2);\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_4060b0",
            "funcStartAddr": "0x4060b0",
            "funcEndAddr": "0x40610e",
            "decompiledFuncCode": "int64_t sub_4060b0()\n{\n    void var_8;\n    int64_t rcx;\n    int64_t rdx;\n    int32_t rdi;\n    uint64_t r8;\n    ssize_t r9;\n    char* rax = setlocale(rdi, nullptr, rdx, rcx, r8, r9, var_8, __return_addr);\n    int64_t rax_1 = 1;\n    bool c = false;\n    bool z = (rax & rax) == 0;\n    if ((!z))\n    {\n        int64_t rcx_1 = 2;\n        void* const rdi_1 = &data_40826c;\n        char* rsi_1 = rax;\n        while (rcx_1 != 0)\n        {\n            char temp0_1 = *rsi_1;\n            char temp1_1 = *rdi_1;\n            c = temp0_1 < temp1_1;\n            z = temp0_1 == temp1_1;\n            rsi_1 = &rsi_1[1];\n            rdi_1 = (rdi_1 + 1);\n            rcx_1 = (rcx_1 - 1);\n            if ((!z))\n            {\n                break;\n            }\n        }\n        rcx_1 = ((!z) && (!c));\n        rcx_1 = (rcx_1 - 0);\n        rax_1 = 0;\n        bool c_1 = false;\n        bool z_1 = (rcx_1 & rcx_1) == 0;\n        if ((!z_1))\n        {\n            void* const rdi_2 = \"POSIX\";\n            int64_t rcx_2 = 6;\n            char* rsi_2 = rax;\n            while (rcx_2 != 0)\n            {\n                char temp2_1 = *rsi_2;\n                char temp3_1 = *rdi_2;\n                c_1 = temp2_1 < temp3_1;\n                z_1 = temp2_1 == temp3_1;\n                rsi_2 = &rsi_2[1];\n                rdi_2 = (rdi_2 + 1);\n                rcx_2 = (rcx_2 - 1);\n                if ((!z_1))\n                {\n                    break;\n                }\n            }\n            rax_1 = ((!z_1) && (!c_1));\n            rax_1 = (rax_1 - 0);\n            rax_1 = rax_1 != 0;\n            return rax_1;\n        }\n    }\n    return rax_1;\n}\n\n"
        },
        {
            "funcName": "sub_406110",
            "funcStartAddr": "0x406110",
            "funcEndAddr": "0x406672",
            "decompiledFuncCode": "char* sub_406110()\n{\n    char* rax = nl_langinfo(0xe);\n    char* r15 = data_60a498;\n    char* rbx = rax;\n    if (rax == 0)\n    {\n        rbx = &data_40824c[0x1b];\n    }\n    if (r15 == 0)\n    {\n        char* rax_6 = getenv(\"CHARSETALIASDIR\");\n        char* r13_1 = rax_6;\n        uint64_t rdi_7;\n        uint64_t r12_1;\n        uint64_t r14_1;\n        if ((rax_6 == 0 || (rax_6 != 0 && *rax_6 == 0)))\n        {\n            rdi_7 = 0x73;\n            r12_1 = 0x65;\n            r14_1 = 0x64;\n            r13_1 = \"/home/dongkwan/data/scripts/gnu_\u2026\";\n        }\n        char* rbp_3;\n        if ((rax_6 != 0 && *rax_6 != 0))\n        {\n            uint64_t rax_7 = strlen(rax_6);\n            r12_1 = rax_7;\n            r14_1 = rax_7;\n            uint64_t rdi_6;\n            if (rax_7 == 0)\n            {\n                rdi_6 = 0xe;\n            }\n            else if (r13_1[(rax_7 - 1)] != 0x2f)\n            {\n                rdi_7 = (rax_7 + 0xf);\n                r12_1 = (r12_1 + 1);\n            }\n            else\n            {\n                rdi_6 = (rax_7 + 0xe);\n            }\n            if ((rax_7 == 0 || (rax_7 != 0 && r13_1[(rax_7 - 1)] == 0x2f)))\n            {\n                char* rax_8 = malloc(rdi_6);\n                rbp_3 = rax_8;\n                if (rax_8 == 0)\n                {\n                    goto label_40620c;\n                }\n                memcpy(rbp_3, r13_1, r14_1);\n                goto label_406256;\n            }\n        }\n        char* rax_9 = malloc(rdi_7);\n        rbp_3 = rax_9;\n        if (rax_9 == 0)\n        {\n        label_40620c:\n            r15 = &data_40824c[0x1b];\n        }\n        else\n        {\n            memcpy(rbp_3, r13_1, r14_1);\n            rbp_3[r14_1] = 0x2f;\n        label_406256:\n            int64_t* r12_2 = &rbp_3[r12_1];\n            *r12_2 = 0x2e74657372616863;\n            *(r12_2 + 0xc) = 0x73;\n            r12_2[1] = 0x61696c61;\n            int32_t rax_11 = open(rbp_3, 0);\n            void* var_d0_1;\n            FILE* rax_12;\n            if (rax_11 >= 0)\n            {\n                r15 = nullptr;\n                rax_12 = fdopen(rax_11, \"r\");\n                var_d0_1 = nullptr;\n                if (rax_12 == 0)\n                {\n                    close(rax_11);\n                }\n                else\n                {\n                    while (true)\n                    {\n                        char* rax_14 = rax_12->_IO_read_ptr;\n                        uint32_t rdi_13;\n                        if (rax_14 < rax_12->_IO_read_end)\n                        {\n                            do\n                            {\n                                rax_12->_IO_read_ptr = &rax_14[1];\n                                rdi_13 = *rax_14;\n                            label_40630c:\n                                if ((rdi_13 - 9) <= 1)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x20)\n                                {\n                                    break;\n                                }\n                                if (rdi_13 == 0x23)\n                                {\n                                    break;\n                                }\n                                ungetc(rdi_13, rax_12);\n                                int64_t var_b8;\n                                int64_t var_78;\n                                if (fscanf(rax_12, \"%50s %50s\", &var_b8, &var_78) <= 1)\n                                {\n                                    goto label_40649b;\n                                }\n                                int64_t* rcx_2 = &var_b8;\n                            label_406348:\n                                int32_t rdx_5 = *rcx_2;\n                                rcx_2 = (rcx_2 + 4);\n                                uint32_t rax_20 = (((rdx_5 - 0x1010101) & (!rdx_5)) & 0x80808080);\n                                if (rax_20 == 0)\n                                {\n                                    goto label_406348;\n                                }\n                                uint32_t rdx_8 = (rax_20 >> 0x10);\n                                int32_t temp0_1 = (rax_20 & 0x8080);\n                                bool cond:2_1 = temp0_1 == 0;\n                                if (temp0_1 == 0)\n                                {\n                                    rax_20 = rdx_8;\n                                }\n                                void* rdx_9 = (rcx_2 + 2);\n                                if (cond:2_1)\n                                {\n                                    rcx_2 = rdx_9;\n                                }\n                                char rdx_10 = rax_20;\n                                int64_t* rdx_11 = &var_78;\n                                void* rcx_4 = ((rcx_2 - 3) - &var_b8);\n                            label_406382:\n                                int32_t rsi_5 = *rdx_11;\n                                rdx_11 = (rdx_11 + 4);\n                                uint32_t rax_23 = (((rsi_5 - 0x1010101) & (!rsi_5)) & 0x80808080);\n                                if (rax_23 == 0)\n                                {\n                                    goto label_406382;\n                                }\n                                uint32_t rsi_8 = (rax_23 >> 0x10);\n                                int32_t temp2_1 = (rax_23 & 0x8080);\n                                bool cond:3_1 = temp2_1 == 0;\n                                if (temp2_1 == 0)\n                                {\n                                    rax_23 = rsi_8;\n                                }\n                                void* rsi_9 = (rdx_11 + 2);\n                                if (cond:3_1)\n                                {\n                                    rdx_11 = rsi_9;\n                                }\n                                char rsi_10 = rax_23;\n                                void* rdx_13 = ((rdx_11 - 3) - &var_78);\n                                void* rax_24 = (rcx_4 + rdx_13);\n                                void* var_c0 = rdx_13;\n                                char* rax_25;\n                                void* rcx_6;\n                                void* rdx_14;\n                                if (var_d0_1 != 0)\n                                {\n                                    void* rax_31 = (rax_24 + var_d0_1);\n                                    var_d0_1 = (rax_31 + 2);\n                                    rax_25 = realloc(r15, (rax_31 + 3));\n                                    rdx_14 = var_c0;\n                                    rcx_6 = rcx_4;\n                                }\n                                else\n                                {\n                                    var_d0_1 = (rax_24 + 2);\n                                    rax_25 = malloc((rax_24 + 3));\n                                    rcx_6 = rcx_4;\n                                    rdx_14 = var_c0;\n                                }\n                                if (rax_25 == 0)\n                                {\n                                    char* rdi_26 = r15;\n                                    r15 = &data_40824c[0x1b];\n                                    free(rdi_26);\n                                    sub_4050e0(rax_12);\n                                    goto label_406297;\n                                }\n                                int32_t rcx_7 = (rcx_6 + 1);\n                                void* rdi_17 = (var_d0_1 - rdx_14);\n                                void* rsi_13 = (((-2 - rcx_6) + rdi_17) + rax_25);\n                                if (rcx_7 >= 8)\n                                {\n                                    *rsi_13 = var_b8;\n                                    uint64_t r9_3 = rcx_7;\n                                    *((rsi_13 + r9_3) - 8) = *(&var_c0 + r9_3);\n                                    void* r9_5 = ((rsi_13 + 8) & 0xfffffffffffffff8);\n                                    void* rsi_16 = (rsi_13 - r9_5);\n                                    int64_t* r10_2 = (&var_b8 - rsi_16);\n                                    int32_t rcx_11 = ((rcx_7 + rsi_16) & 0xfffffff8);\n                                    if (rcx_11 >= 8)\n                                    {\n                                        int32_t rcx_12 = (rcx_11 & 0xfffffff8);\n                                        int32_t rsi_17 = 0;\n                                    label_40655b:\n                                        uint64_t r8_1 = rsi_17;\n                                        rsi_17 = (rsi_17 + 8);\n                                        *(r9_5 + r8_1) = *(r10_2 + r8_1);\n                                        if (rsi_17 < rcx_12)\n                                        {\n                                            goto label_40655b;\n                                        }\n                                    }\n                                }\n                                else if ((rcx_7 & 4) != 0)\n                                {\n                                    uint64_t rcx_15 = rcx_7;\n                                    *rsi_13 = var_b8;\n                                    *((rsi_13 + rcx_15) - 4) = *(&*var_c0[4] + rcx_15);\n                                }\n                                else if (rcx_7 != 0)\n                                {\n                                    *rsi_13 = var_b8;\n                                    if ((rcx_7 & 2) != 0)\n                                    {\n                                        uint64_t rcx_16 = rcx_7;\n                                        *((rsi_13 + rcx_16) - 2) = *(&*var_c0[6] + rcx_16);\n                                    }\n                                }\n                                int32_t rdx_15 = (rdx_14 + 1);\n                                void* rcx_8 = ((rax_25 + rdi_17) - 1);\n                                if (rdx_15 >= 8)\n                                {\n                                    *rcx_8 = var_78;\n                                    uint64_t rsi_19 = rdx_15;\n                                    void var_80;\n                                    *((rcx_8 + rsi_19) - 8) = *(&var_80 + rsi_19);\n                                    void* rdi_24 = ((rcx_8 + 8) & 0xfffffffffffffff8);\n                                    void* rcx_13 = (rcx_8 - rdi_24);\n                                    int64_t* r9_6 = (&var_78 - rcx_13);\n                                    int32_t rdx_19 = ((rdx_15 + rcx_13) & 0xfffffff8);\n                                    if (rdx_19 >= 8)\n                                    {\n                                        int32_t rdx_20 = (rdx_19 & 0xfffffff8);\n                                        int32_t rcx_14 = 0;\n                                    label_4065a9:\n                                        uint64_t rsi_20 = rcx_14;\n                                        rcx_14 = (rcx_14 + 8);\n                                        *(rdi_24 + rsi_20) = *(r9_6 + rsi_20);\n                                        if (rcx_14 < rdx_20)\n                                        {\n                                            goto label_4065a9;\n                                        }\n                                    }\n                                }\n                                else if ((rdx_15 & 4) != 0)\n                                {\n                                    uint64_t rdx_21 = rdx_15;\n                                    *rcx_8 = var_78;\n                                    void var_7c;\n                                    *((rcx_8 + rdx_21) - 4) = *(&var_7c + rdx_21);\n                                }\n                                else if (rdx_15 != 0)\n                                {\n                                    *rcx_8 = var_78;\n                                    if ((rdx_15 & 2) != 0)\n                                    {\n                                        uint64_t rsi_23 = rdx_15;\n                                        void var_7a;\n                                        *((rcx_8 + rsi_23) - 2) = *(&var_7a + rsi_23);\n                                    }\n                                }\n                                r15 = rax_25;\n                                rax_14 = rax_12->_IO_read_ptr;\n                            } while (rax_14 < rax_12->_IO_read_end);\n                            if (((!((rdi_13 - 9) > 1 && rdi_13 == 0x23)) && (rdi_13 - 9) <= 1))\n                            {\n                                continue;\n                            }\n                            if (((rdi_13 - 9) > 1 && rdi_13 == 0x23))\n                            {\n                                int32_t rax_29;\n                                bool rdx_17;\n                                do\n                                {\n                                    char* rax_30 = rax_12->_IO_read_ptr;\n                                    if (rax_30 < rax_12->_IO_read_end)\n                                    {\n                                        rax_12->_IO_read_ptr = &rax_30[1];\n                                        rax_29 = *rax_30;\n                                        rdx_17 = true;\n                                    }\n                                    else\n                                    {\n                                        rax_29 = __uflow(rax_12);\n                                        rdx_17 = rax_29 != 0xffffffff;\n                                    }\n                                    if (rax_29 == 0xa)\n                                    {\n                                        break;\n                                    }\n                                } while (rdx_17 != 0);\n                                if (rax_29 == 0xffffffff)\n                                {\n                                    break;\n                                }\n                                continue;\n                            }\n                        }\n                        uint32_t rax_26 = __uflow(rax_12);\n                        rdi_13 = rax_26;\n                        if (rax_26 != 0xffffffff)\n                        {\n                            goto label_40630c;\n                        }\n                        break;\n                    }\n                label_40649b:\n                    sub_4050e0(rax_12);\n                    if (var_d0_1 != 0)\n                    {\n                        *(r15 + var_d0_1) = 0;\n                    }\n                }\n            }\n            if ((((rax_11 >= 0 && rax_12 == 0) || rax_11 < 0) || ((rax_11 >= 0 && rax_12 != 0) && var_d0_1 == 0)))\n            {\n                r15 = &data_40824c[0x1b];\n            }\n        label_406297:\n            free(rbp_3);\n        }\n        data_60a498 = r15;\n    }\n    char rbp_2 = *r15;\n    if (rbp_2 != 0)\n    {\n        while (true)\n        {\n            if ((strcmp(rbx, r15) != 0 && (rbp_2 != 0x2a || (rbp_2 == 0x2a && r15[1] != 0))))\n            {\n                void* rbp_1 = &r15[(strlen(r15) + 1)];\n                r15 = ((rbp_1 + strlen(rbp_1)) + 1);\n                rbp_2 = *r15;\n                if (rbp_2 == 0)\n                {\n                    break;\n                }\n                continue;\n            }\n            rbx = &r15[(strlen(r15) + 1)];\n            break;\n        }\n    }\n    if (*rbx == 0)\n    {\n        rbx = \"ASCII\";\n    }\n    return rbx;\n}\n\n"
        },
        {
            "funcName": "init",
            "funcStartAddr": "0x406680",
            "funcEndAddr": "0x4066dd",
            "decompiledFuncCode": "void init()\n{\n    _init();\n}\n\n"
        },
        {
            "funcName": "fini",
            "funcStartAddr": "0x4066e0",
            "funcEndAddr": "0x4066e1",
            "decompiledFuncCode": "void fini()\n{\n    return;\n}\n\n"
        },
        {
            "funcName": "sub_4066f0",
            "funcStartAddr": "0x4066f0",
            "funcEndAddr": "0x406708",
            "decompiledFuncCode": "int64_t sub_4066f0(void (* arg1)(void*))\n{\n    /* tailcall */\n    return __cxa_atexit(arg1, nullptr, data_60a1e8);\n}\n\n"
        },
        {
            "funcName": "sub_406708",
            "funcStartAddr": "0x406708",
            "funcEndAddr": "0x406728",
            "decompiledFuncCode": "int64_t sub_406708(int64_t arg1, int64_t arg2, int64_t arg3)\n{\n    int64_t* rbx = &data_609e30;\n    while (true)\n    {\n        int64_t rax_1 = *rbx;\n        if (rax_1 == -1)\n        {\n            break;\n        }\n        rax_1();\n        rbx = (rbx - 8);\n    }\n    return arg3;\n}\n\n"
        }
    ]
}