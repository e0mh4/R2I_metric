{
    "funcCount": 306,
    "funcInfo": [
        {
            "funcStartAddr": "0x402e50",
            "funcEndAddr": "0x402e55",
            "decompiledFuncCode": "\nvoid FUN_00402e50(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402e50"
        },
        {
            "funcStartAddr": "0x402e55",
            "funcEndAddr": "0x402e5a",
            "decompiledFuncCode": "\nvoid FUN_00402e55(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402e55"
        },
        {
            "funcStartAddr": "0x402e5a",
            "funcEndAddr": "0x402e5f",
            "decompiledFuncCode": "\nvoid FUN_00402e5a(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402e5a"
        },
        {
            "funcStartAddr": "0x402e5f",
            "funcEndAddr": "0x402e64",
            "decompiledFuncCode": "\nvoid FUN_00402e5f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402e5f"
        },
        {
            "funcStartAddr": "0x402e69",
            "funcEndAddr": "0x402e6e",
            "decompiledFuncCode": "\nvoid FUN_00402e69(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402e69"
        },
        {
            "funcStartAddr": "0x402e6e",
            "funcEndAddr": "0x402e73",
            "decompiledFuncCode": "\nvoid FUN_00402e6e(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402e6e"
        },
        {
            "funcStartAddr": "0x402e73",
            "funcEndAddr": "0x402e78",
            "decompiledFuncCode": "\nvoid FUN_00402e73(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402e73"
        },
        {
            "funcStartAddr": "0x402e78",
            "funcEndAddr": "0x402e7d",
            "decompiledFuncCode": "\nvoid FUN_00402e78(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402e78"
        },
        {
            "funcStartAddr": "0x402e82",
            "funcEndAddr": "0x402e87",
            "decompiledFuncCode": "\nvoid FUN_00402e82(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402e82"
        },
        {
            "funcStartAddr": "0x402e87",
            "funcEndAddr": "0x402e8c",
            "decompiledFuncCode": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "thunk_402e87"
        },
        {
            "funcStartAddr": "0x402e90",
            "funcEndAddr": "0x4046ff",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined4 FUN_00402e90(int param_1,FILE *param_2)\n\n{\n  void **ppvVar1;\n  void **ppvVar2;\n  void **ppvVar3;\n  bool bVar4;\n  FILE *__stream;\n  void **__ptr;\n  byte *pbVar5;\n  char cVar6;\n  char cVar7;\n  int iVar8;\n  uint uVar9;\n  char *pcVar10;\n  char **ppcVar11;\n  undefined8 *puVar12;\n  void *pvVar13;\n  long lVar14;\n  undefined8 uVar15;\n  undefined8 uVar16;\n  long lVar17;\n  void *pvVar18;\n  char *pcVar19;\n  char *pcVar20;\n  ulong uVar21;\n  undefined **ppuVar22;\n  char *pcVar23;\n  bool bVar24;\n  byte bVar25;\n  undefined auVar26 [16];\n  ushort local_53;\n  undefined local_51;\n  byte *local_50;\n  undefined8 local_48;\n  undefined8 local_40;\n  \n  bVar25 = 0;\n  FUN_00410670(*(undefined8 *)param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\n                 \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\"\n                );\n  textdomain(\"coreutils\");\n  DAT_006245c0 = 2;\n  FUN_00418780(FUN_0040b710);\n  DAT_00625678 = 1;\n  DAT_00625730 = 0x8000000000000000;\n  DAT_006255d0 = 0;\n  DAT_00625740 = (void **)0x0;\n  DAT_00625738 = 0xffffffffffffffff;\n  DAT_00625698 = 0;\n  if (DAT_006245ac == 2) {\n    DAT_006256f8 = 2;\n    FUN_00411c30(0,7);\n  }\n  else if (DAT_006245ac == 3) {\n    DAT_006256f8 = 0;\n    FUN_00411c30(0,7);\n  }\n  else {\n    if (DAT_006245ac != 1) {\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n    iVar8 = isatty(1);\n    if (iVar8 == 0) {\n      DAT_006256f8 = 1;\n    }\n    else {\n      DAT_006256f8 = 2;\n      FUN_00411c30(0,3);\n      DAT_00625698 = 1;\n    }\n  }\n  DAT_006256ef = 0;\n  DAT_006256f4 = 0;\n  DAT_006256f0 = 0;\n  DAT_006256ed = 0;\n  DAT_006256ec = '\\0';\n  DAT_006256d4 = 0;\n  DAT_006256bc = 0;\n  DAT_006256b8 = 1;\n  DAT_006256b6 = '\\0';\n  DAT_006256b5 = '\\0';\n  DAT_006256b0 = 0;\n  DAT_006256a8 = (char **)0x0;\n  DAT_006256a0 = (char **)0x0;\n  DAT_00625725 = '\\0';\n  pcVar10 = getenv(\"QUOTING_STYLE\");\n  if (pcVar10 != (char *)0x0) {\n    iVar8 = FUN_0040acf0(pcVar10,&PTR_s_literal_0041ea00,&DAT_0041e9c0,4);\n    if (iVar8 < 0) {\n      uVar15 = FUN_00412290(pcVar10);\n      uVar16 = dcgettext(0,\"ignoring invalid value of environment variable QUOTING_STYLE: %s\",5);\n      error(0,0,uVar16,uVar15);\n    }\n    else {\n      FUN_00411c30(0,*(undefined4 *)(&DAT_0041e9c0 + (long)iVar8 * 4));\n    }\n  }\n  DAT_00625670 = 0x50;\n  pcVar10 = getenv(\"COLUMNS\");\n  if (((pcVar10 != (char *)0x0) && (*pcVar10 != '\\0')) &&\n     (cVar7 = FUN_00404b40(pcVar10), cVar7 == '\\0')) {\n    uVar15 = FUN_00412290(pcVar10);\n    uVar16 = dcgettext(0,\"ignoring invalid width in environment variable COLUMNS: %s\",5);\n    error(0,0,uVar16,uVar15);\n  }\n  iVar8 = ioctl(1,0x5413,&local_48);\n  if (iVar8 != -1) {\n    if (local_48._2_2_ != 0) {\n      DAT_00625670 = (ulong)local_48._2_2_;\n    }\n  }\n  pcVar10 = getenv(\"TABSIZE\");\n  DAT_00625680 = &DAT_00000008;\n  if (pcVar10 != (char *)0x0) {\n    iVar8 = FUN_00412df0(pcVar10,0,0,&local_48,0);\n    if (iVar8 == 0) {\n      DAT_00625680 = local_48;\n    }\n    else {\n      uVar15 = FUN_00412290(pcVar10);\n      uVar16 = dcgettext(0,\"ignoring invalid tab size in environment variable TABSIZE: %s\",5);\n      error(0,0,uVar16,uVar15);\n    }\n  }\n  bVar4 = false;\n  bVar24 = false;\n  pcVar10 = (char *)0x0;\n  cVar7 = DAT_006256d1;\nLAB_004030b8:\n  DAT_006256d1 = cVar7;\n  local_48 = (undefined *)CONCAT44(local_48._4_4_,0xffffffff);\n  iVar8 = FUN_00416e00(param_1,param_2,\"abcdfghiklmnopqrstuvw:xABCDFGHI:LNQRST:UXZ1\",\n                       &PTR_s_all_00419900,&local_48);\n  pcVar20 = DAT_00625970;\n  if (iVar8 != -1) {\n    cVar7 = DAT_006256d1;\n    switch(iVar8) {\n    case 0x31:\n      if (DAT_006256f8 != 0) {\n        DAT_006256f8 = 1;\n      }\n      break;\n    case 0x41:\n      if (DAT_006256b0 == 0) {\n        DAT_006256b0 = 1;\n      }\n      break;\n    case 0x42:\n      puVar12 = (undefined8 *)FUN_00412980(0x10);\n      *puVar12 = &DAT_0041b204;\n      puVar12[1] = DAT_006256a8;\n      DAT_006256a8 = (char **)puVar12;\n      ppcVar11 = (char **)FUN_00412980(0x10);\n      *ppcVar11 = \".*~\";\n      ppcVar11[1] = (char *)DAT_006256a8;\n      DAT_006256a8 = ppcVar11;\n      cVar7 = DAT_006256d1;\n      break;\n    case 0x43:\n      DAT_006256f8 = 2;\n      break;\n    case 0x44:\n      DAT_006256d8 = '\\x01';\n      break;\n    case 0x46:\n      DAT_006256d4 = 3;\n      break;\n    case 0x47:\n      DAT_006245a8 = 0;\n      break;\n    case 0x48:\n      DAT_006256b8 = 3;\n      break;\n    case 0x49:\n      ppcVar11 = (char **)FUN_00412980(0x10);\n      *ppcVar11 = pcVar20;\n      ppcVar11[1] = (char *)DAT_006256a8;\n      DAT_006256a8 = ppcVar11;\n      cVar7 = DAT_006256d1;\n      break;\n    case 0x4c:\n      DAT_006256b8 = 5;\n      break;\n    case 0x4e:\n      FUN_00411c30(0,0);\n      cVar7 = DAT_006256d1;\n      break;\n    case 0x51:\n      FUN_00411c30(0,5);\n      cVar7 = DAT_006256d1;\n      break;\n    case 0x52:\n      DAT_006256b6 = '\\x01';\n      break;\n    case 0x53:\n      DAT_006256f0 = 2;\n      bVar24 = true;\n      break;\n    case 0x54:\n      auVar26 = dcgettext(0,\"invalid tab size\",5);\n      DAT_00625680 = (undefined *)\n                     FUN_00412c10(DAT_00625970,0,0,0xffffffffffffffff,&DAT_0041b08a,\n                                  SUB168(auVar26,0),2,SUB168(auVar26 >> 0x40,0));\n      cVar7 = DAT_006256d1;\n      break;\n    case 0x55:\n      DAT_006256f0 = -1;\n      bVar24 = true;\n      break;\n    case 0x58:\n      DAT_006256f0 = 1;\n      bVar24 = true;\n      break;\n    case 0x5a:\n      DAT_00625725 = '\\x01';\n      break;\n    case 0x61:\n      DAT_006256b0 = 2;\n      break;\n    case 0x62:\n      FUN_00411c30(0,7);\n      cVar7 = DAT_006256d1;\n      break;\n    case 99:\n      DAT_006256f4 = 1;\n      break;\n    case 100:\n      DAT_006256b5 = '\\x01';\n      break;\n    case 0x66:\n      DAT_006256b0 = 2;\n      DAT_006256f0 = -1;\n      if (DAT_006256f8 == 0) {\n        iVar8 = isatty(1);\n        DAT_006256f8 = 2 - (uint)(iVar8 == 0);\n      }\n      DAT_006256ec = '\\0';\n      bVar24 = true;\n      DAT_006256d2 = '\\0';\n      DAT_006256d1 = '\\0';\n      cVar7 = DAT_006256d1;\n      break;\n    case 0x67:\n      DAT_006256f8 = 0;\n      DAT_006245a9 = 0;\n      break;\n    case 0x68:\n      DAT_006256e8 = 0xb0;\n      DAT_006256dc = 0xb0;\n      DAT_006256e0 = 1;\n      DAT_006245a0 = 1;\n      break;\n    case 0x69:\n      DAT_006256bc = 1;\n      break;\n    case 0x6b:\n      bVar4 = true;\n      break;\n    case 0x6d:\n      DAT_006256f8 = 4;\n      break;\n    case 0x6e:\n      DAT_006256ed = 1;\n    case 0x6c:\n      DAT_006256f8 = 0;\n      break;\n    case 0x6f:\n      DAT_006256f8 = 0;\n      DAT_006245a8 = 0;\n      break;\n    case 0x70:\n      DAT_006256d4 = 1;\n      break;\n    case 0x71:\n      DAT_00625698 = 1;\n      break;\n    case 0x72:\n      DAT_006256ef = 1;\n      break;\n    case 0x73:\n      DAT_006256ec = '\\x01';\n      break;\n    case 0x74:\n      DAT_006256f0 = 4;\n      bVar24 = true;\n      break;\n    case 0x75:\n      DAT_006256f4 = 2;\n      break;\n    case 0x76:\n      goto switchD_004030ee_caseD_76;\n    case 0x77:\n      cVar6 = FUN_00404b40(DAT_00625970);\n      cVar7 = DAT_006256d1;\n      if (cVar6 == '\\0') {\n        param_2 = (FILE *)FUN_00412290(DAT_00625970);\n        uVar15 = dcgettext(0,\"invalid line width\",5);\n        error(2,0,\"%s: %s\",uVar15,param_2);\nswitchD_004030ee_caseD_76:\n        DAT_006256f0 = 3;\n        bVar24 = true;\n        cVar7 = DAT_006256d1;\n      }\n      break;\n    case 0x78:\n      DAT_006256f8 = 3;\n      break;\n    case 0x80:\n      DAT_006256ee = 1;\n      break;\n    case 0x81:\n      iVar8 = FUN_0040dfa0(DAT_00625970,&DAT_006256e8,&DAT_006256e0);\n      if (iVar8 != 0) {\n        FUN_00413220(iVar8,(ulong)local_48 & 0xffffffff,0,&PTR_s_all_00419900,DAT_00625970);\n        goto LAB_004046e2;\n      }\n      DAT_006256dc = DAT_006256e8;\n      DAT_006245a0 = DAT_006256e0;\n      cVar7 = DAT_006256d1;\n      break;\n    case 0x82:\n      if (DAT_00625970 != (char *)0x0) {\n        lVar17 = FUN_0040afb0(\"--color\",DAT_00625970,&PTR_s_always_00419780,&DAT_00419740,4,\n                              PTR_FUN_006245b8);\n        if ((*(int *)(&DAT_00419740 + lVar17 * 4) != 1) &&\n           ((*(int *)(&DAT_00419740 + lVar17 * 4) != 2 || (iVar8 = isatty(1), iVar8 == 0)))) {\n          DAT_006256d2 = '\\0';\n          cVar7 = DAT_006256d1;\n          break;\n        }\n      }\n      DAT_006256d2 = '\\x01';\n      DAT_00625680 = (undefined *)0x0;\n      cVar7 = DAT_006256d1;\n      break;\n    case 0x83:\n      DAT_006256b8 = 4;\n      break;\n    case 0x84:\n      DAT_006256d4 = 2;\n      break;\n    case 0x85:\n      lVar17 = FUN_0040afb0(\"--format\",DAT_00625970,&PTR_s_verbose_004198c0,&DAT_00419890,4,\n                            PTR_FUN_006245b8);\n      DAT_006256f8 = *(int *)(&DAT_00419890 + lVar17 * 4);\n      cVar7 = DAT_006256d1;\n      break;\n    case 0x86:\n      DAT_006256f8 = 0;\n      pcVar10 = \"full-iso\";\n      break;\n    case 0x87:\n      DAT_006256b4 = 1;\n      break;\n    case 0x88:\n      ppcVar11 = (char **)FUN_00412980(0x10);\n      *ppcVar11 = DAT_00625970;\n      ppcVar11[1] = (char *)DAT_006256a0;\n      DAT_006256a0 = ppcVar11;\n      cVar7 = DAT_006256d1;\n      break;\n    case 0x89:\n      if (DAT_00625970 != (char *)0x0) {\n        lVar17 = FUN_0040afb0(\"--hyperlink\",DAT_00625970,&PTR_s_always_00419780,&DAT_00419740,4,\n                              PTR_FUN_006245b8);\n        if (*(int *)(&DAT_00419740 + lVar17 * 4) != 1) {\n          cVar7 = '\\0';\n          if (*(int *)(&DAT_00419740 + lVar17 * 4) == 2) {\n            iVar8 = isatty(1);\n            cVar7 = iVar8 != 0;\n          }\n          break;\n        }\n      }\n      cVar7 = '\\x01';\n      break;\n    case 0x8a:\n      lVar17 = FUN_0040afb0(\"--indicator-style\",DAT_00625970,&PTR_DAT_00419f60,&DAT_00419f50,4,\n                            PTR_FUN_006245b8);\n      DAT_006256d4 = *(uint *)(&DAT_00419f50 + lVar17 * 4);\n      cVar7 = DAT_006256d1;\n      break;\n    case 0x8b:\n      lVar17 = FUN_0040afb0(\"--quoting-style\",DAT_00625970,&PTR_s_literal_0041ea00,&DAT_0041e9c0,4,\n                            PTR_FUN_006245b8);\n      FUN_00411c30(0,*(undefined4 *)(&DAT_0041e9c0 + lVar17 * 4));\n      cVar7 = DAT_006256d1;\n      break;\n    case 0x8c:\n      DAT_00625698 = 0;\n      break;\n    case 0x8d:\n      DAT_006256e8 = 0x90;\n      DAT_006256dc = 0x90;\n      DAT_006256e0 = 1;\n      DAT_006245a0 = 1;\n      break;\n    case 0x8e:\n      bVar24 = true;\n      lVar17 = FUN_0040afb0(\"--sort\",DAT_00625970,&DAT_00419860,&DAT_00419830,4,PTR_FUN_006245b8);\n      DAT_006256f0 = *(int *)(&DAT_00419830 + lVar17 * 4);\n      cVar7 = DAT_006256d1;\n      break;\n    case 0x8f:\n      lVar17 = FUN_0040afb0(\"--time\",DAT_00625970,&PTR_s_atime_00419800,&DAT_004197d0,4,\n                            PTR_FUN_006245b8);\n      DAT_006256f4 = *(int *)(&DAT_004197d0 + lVar17 * 4);\n      cVar7 = DAT_006256d1;\n      break;\n    case 0x90:\n      goto switchD_004030ee_caseD_90;\n    case -0x83:\n      if (DAT_006245ac == 1) {\n        pcVar10 = \"ls\";\n        iVar8 = DAT_006245ac;\n      }\n      else {\n        pcVar10 = \"dir\";\n        iVar8 = 0x41b134;\n        if (DAT_006245ac != 2) {\n          pcVar10 = \"vdir\";\n        }\n      }\n      FUN_00412840(stdout,pcVar10,\"GNU coreutils\",PTR_DAT_006245b0,\"Richard M. Stallman\",\n                   \"David MacKenzie\",0,iVar8);\n                    /* WARNING: Subroutine does not return */\n      exit(0);\n    case -0x82:\n      FUN_0040a530(0);\n      goto LAB_00404511;\n    default:\n      goto switchD_004030ee_caseD_ffffff7f;\n    }\n    goto LAB_004030b8;\n  }\n  if (DAT_006256e0 == 0) {\n    pcVar20 = getenv(\"LS_BLOCK_SIZE\");\n    FUN_0040dfa0(pcVar20,&DAT_006256e8,&DAT_006256e0);\n    if ((pcVar20 != (char *)0x0) || (pcVar20 = getenv(\"BLOCK_SIZE\"), pcVar20 != (char *)0x0)) {\n      DAT_006256dc = DAT_006256e8;\n      DAT_006245a0 = DAT_006256e0;\n    }\n    if (bVar4) {\n      DAT_006256e8 = 0;\n      DAT_006256e0 = 0x400;\n    }\n  }\n  DAT_006255c0 = DAT_00625670 / 3 + (ulong)(DAT_00625670 % 3 != 0);\n  uVar9 = FUN_00411c20(0);\n  if ((DAT_006256f8 == 4) || (DAT_006256f8 == 1)) {\n    DAT_00625768 = false;\n  }\n  else if ((DAT_00625670 != 0) || (DAT_00625768 = false, DAT_006256f8 == 0)) {\n    DAT_00625768 = (uVar9 & 0xfffffffd) == 1 || uVar9 == 6;\n  }\n  DAT_00625690 = FUN_00411be0(0);\n  if (uVar9 == 7) {\n    FUN_00411c40(DAT_00625690,0x20,1);\n  }\n  if (1 < DAT_006256d4) {\n    pcVar20 = \"*=>@|\" + (DAT_006256d4 - 2);\n    cVar7 = \"*=>@|\"[DAT_006256d4 - 2];\n    while (cVar7 != '\\0') {\n      pcVar20 = pcVar20 + 1;\n      FUN_00411c40(DAT_00625690,(int)cVar7,1);\n      cVar7 = *pcVar20;\n    }\n  }\n  DAT_00625688 = FUN_00411be0(0);\n  FUN_00411c40(DAT_00625688,0x3a,1);\n  if (DAT_006256d8 == '\\0') {\nLAB_0040397c:\n    if ((1 < DAT_006256f4 - 1U) || (bVar24)) {\n      if (DAT_006256f8 == 0) goto LAB_0040399d;\n    }\n    else {\n      if (DAT_006256f8 == 0) goto LAB_0040399d;\n      DAT_006256f0 = 4;\n    }\n  }\n  else {\n    if ((DAT_006256f8 != 0) || (DAT_006256d1 != '\\0')) {\n      DAT_006256d8 = '\\0';\n      goto LAB_0040397c;\n    }\nLAB_0040399d:\n    if ((pcVar10 == (char *)0x0) && (pcVar10 = getenv(\"TIME_STYLE\"), pcVar10 == (char *)0x0)) {\n      pcVar10 = \"locale\";\nLAB_0040428e:\n      lVar17 = FUN_0040acf0(pcVar10,&PTR_s_full_iso_00419fa0,&DAT_00419f90,4);\n      if (lVar17 < 0) {\n        FUN_0040ae10(\"time style\",pcVar10,lVar17);\n        __stream = stderr;\n        pcVar20 = (char *)dcgettext(0,\"Valid arguments are:\\n\",5);\n        ppuVar22 = &PTR_s_full_iso_00419fa0;\n        fputs_unlocked(pcVar20,__stream);\n        pcVar20 = \"full-iso\";\n        do {\n          ppuVar22 = ppuVar22 + 1;\n          __fprintf_chk(stderr,1,\"  - [posix-]%s\\n\",pcVar20);\n          param_2 = stderr;\n          pcVar20 = *ppuVar22;\n        } while (pcVar20 != (char *)0x0);\n        pcVar20 = (char *)dcgettext(0,\"  - +FORMAT (e.g., +%H:%M) for a \\'date\\'-style format\\n\",5);\n        fputs_unlocked(pcVar20,param_2);\nswitchD_004030ee_caseD_ffffff7f:\n        FUN_0040a530(2);\n        goto LAB_004045ab;\n      }\n      if (lVar17 == 1) {\n        PTR_s__b__e__H__M_00624418 = &DAT_0041b30e;\n        PTR_DAT_00624410 = &DAT_0041b30e;\n        pcVar10 = PTR_DAT_00624410;\n        pcVar20 = PTR_s__b__e__H__M_00624418;\n      }\n      else {\n        pcVar10 = PTR_DAT_00624410;\n        pcVar20 = PTR_s__b__e__H__M_00624418;\n        if (lVar17 < 2) {\n          if (lVar17 == 0) {\n            PTR_s__b__e__H__M_00624418 = s__Y__m__d__H__M__S__N__z_0041b2f6;\n            PTR_DAT_00624410 = s__Y__m__d__H__M__S__N__z_0041b2f6;\n            pcVar10 = PTR_DAT_00624410;\n            pcVar20 = PTR_s__b__e__H__M_00624418;\n          }\n        }\n        else if (lVar17 == 2) {\n          PTR_DAT_00624410 = s__Y__m__d_0041b31d;\n          PTR_s__b__e__H__M_00624418 = &DAT_0041b311;\n          pcVar10 = PTR_DAT_00624410;\n          pcVar20 = PTR_s__b__e__H__M_00624418;\n        }\n        else if ((lVar17 == 3) &&\n                (cVar7 = FUN_0040c190(2), pcVar10 = PTR_DAT_00624410,\n                pcVar20 = PTR_s__b__e__H__M_00624418, cVar7 != '\\0')) {\n          PTR_DAT_00624410 = (undefined *)dcgettext(0,PTR_DAT_00624410,2);\n          pcVar20 = (char *)dcgettext(0,PTR_s__b__e__H__M_00624418,2);\n          pcVar10 = PTR_DAT_00624410;\n        }\n      }\n    }\n    else {\n      while (iVar8 = strncmp(pcVar10,\"posix-\",6), iVar8 == 0) {\n        cVar7 = FUN_0040c190(2);\n        if (cVar7 == '\\0') goto LAB_004039dc;\n        pcVar10 = pcVar10 + 6;\n      }\n      if (*pcVar10 != '+') goto LAB_0040428e;\nLAB_004045ab:\n      pcVar10 = pcVar10 + 1;\n      pcVar19 = strchr(pcVar10,10);\n      pcVar20 = pcVar10;\n      if (pcVar19 != (char *)0x0) {\n        pcVar20 = strchr(pcVar19 + 1,10);\n        if (pcVar20 != (char *)0x0) {\n          uVar15 = FUN_00412290(pcVar10);\n          uVar16 = dcgettext(0,\"invalid time style format %s\",5);\n          error(2,0,uVar16,uVar15);\nLAB_004046b0:\n                    /* WARNING: Subroutine does not return */\n          __assert_fail(\"found\",\"src/ls.c\",0x638,\"main\");\n        }\n        *pcVar19 = '\\0';\n        pcVar20 = pcVar19 + 1;\n      }\n    }\n    PTR_s__b__e__H__M_00624418 = pcVar20;\n    PTR_DAT_00624410 = pcVar10;\n    FUN_00404bb0();\n  }\nLAB_004039dc:\n  pcVar10 = (char *)(long)DAT_0062463c;\n  if (DAT_006256d2 != '\\0') {\n    local_50 = (byte *)getenv(\"LS_COLORS\");\n    if ((local_50 == (byte *)0x0) || (*local_50 == 0)) {\n      pcVar20 = getenv(\"COLORTERM\");\n      if ((pcVar20 == (char *)0x0) || (*pcVar20 == '\\0')) {\n        pcVar20 = getenv(\"TERM\");\n        if ((pcVar20 != (char *)0x0) && (*pcVar20 != '\\0')) {\n          pcVar19 = \"# Configuration file for dircolors, a utility to help you set the\";\n          do {\n            iVar8 = strncmp(pcVar19,\"TERM \",5);\n            if ((iVar8 == 0) && (iVar8 = FUN_004159a0(pcVar19 + 5,pcVar20,0), iVar8 == 0))\n            goto LAB_00404088;\n            uVar21 = 0xffffffffffffffff;\n            pcVar23 = pcVar19;\n            do {\n              if (uVar21 == 0) break;\n              uVar21 = uVar21 - 1;\n              cVar7 = *pcVar23;\n              pcVar23 = pcVar23 + (ulong)bVar25 * -2 + 1;\n            } while (cVar7 != '\\0');\n            pcVar19 = pcVar19 + ~uVar21;\n          } while (pcVar19 + -0x419fe0 < (char *)0x104d);\n        }\nLAB_00404511:\n        DAT_006256d2 = '\\0';\n      }\n    }\n    else {\n      local_53 = 0x3f3f;\n      local_51 = 0;\n      DAT_006256c0 = (undefined *)FUN_00412bb0(local_50);\n      local_48 = DAT_006256c0;\n      do {\n        while( true ) {\n          while (bVar25 = *local_50, bVar25 == 0x2a) {\n            pvVar18 = (void *)FUN_00412980(0x28);\n            local_50 = local_50 + 1;\n            pvVar13 = pvVar18;\n            *(void **)((long)pvVar18 + 0x20) = DAT_006256c8;\n            DAT_006256c8 = pvVar13;\n            *(undefined **)((long)pvVar18 + 8) = local_48;\n            cVar7 = FUN_00404860(&local_48,&local_50,1,pvVar18);\n            pbVar5 = local_50;\n            if ((cVar7 == '\\0') || (pbVar5 = local_50 + 1, *local_50 != 0x3d)) goto LAB_0040402e;\n            *(undefined **)((long)pvVar18 + 0x18) = local_48;\n            local_50 = local_50 + 1;\n            cVar7 = FUN_00404860(&local_48,&local_50,0,(long)pvVar18 + 0x10);\n            pbVar5 = local_50;\n            if (cVar7 == '\\0') goto LAB_0040402e;\n          }\n          if (bVar25 != 0x3a) break;\n          local_50 = local_50 + 1;\n        }\n        if (bVar25 == 0) goto LAB_0040407a;\n        local_53 = local_53 & 0xff00 | (ushort)*local_50;\n        pbVar5 = local_50 + 1;\n        if (local_50[1] == 0) goto LAB_0040402e;\n        local_53 = CONCAT11(local_50[1],*local_50);\n        pbVar5 = local_50 + 3;\n        if (local_50[2] != 0x3d) goto LAB_0040402e;\n        lVar17 = 0;\n        pcVar20 = \"lc\";\n        local_50 = local_50 + 3;\n        while (iVar8 = strcmp((char *)&local_53,pcVar20), iVar8 != 0) {\n          lVar17 = lVar17 + 1;\n          pcVar20 = *(char **)(&UNK_00419e80 + lVar17 * 8);\n          if (pcVar20 == (char *)0x0) goto LAB_00403fff;\n        }\n        (&PTR_DAT_00624428)[(long)(int)lVar17 * 2] = local_48;\n        cVar7 = FUN_00404860(&local_48,&local_50,0);\n      } while (cVar7 != '\\0');\nLAB_00403fff:\n      uVar15 = FUN_00412290(&local_53);\n      uVar16 = dcgettext(0,\"unrecognized prefix: %s\",5);\n      error(0,0,uVar16,uVar15);\n      pbVar5 = local_50;\nLAB_0040402e:\n      local_50 = pbVar5;\n      uVar15 = dcgettext(0,\"unparsable value for LS_COLORS environment variable\",5);\n      error(0,0,uVar15);\n      free(DAT_006256c0);\n      pvVar13 = DAT_006256c8;\n      while (pvVar13 != (void *)0x0) {\n        pvVar18 = *(void **)((long)pvVar13 + 0x20);\n        free(pvVar13);\n        pvVar13 = pvVar18;\n      }\n      DAT_006256d2 = '\\0';\nLAB_0040407a:\n      if ((_DAT_00624490 == 6) && (iVar8 = strncmp(PTR_s_01_36_00624498,\"target\",6), iVar8 == 0)) {\n        DAT_00625750 = '\\x01';\n      }\n    }\nLAB_00404088:\n    if ((DAT_006256d2 != '\\0') &&\n       (((cVar7 = FUN_00404ae0(0xd), cVar7 != '\\0' ||\n         ((cVar7 = FUN_00404ae0(0xe), cVar7 != '\\0' && (DAT_00625750 != '\\0')))) ||\n        ((cVar7 = FUN_00404ae0(0xc), cVar7 != '\\0' && (DAT_006256f8 == 0)))))) {\n      DAT_006256bd = 1;\n    }\n  }\n  if (((DAT_006256b8 == 1) && (DAT_006256b8 = 2, DAT_006256b5 == '\\0')) && (DAT_006256d4 != 3)) {\n    DAT_006256b8 = (-(uint)(DAT_006256f8 == 0) & 0xfffffffe) + 4;\n  }\n  if (DAT_006256b6 != '\\0') {\n    DAT_00625788 = FUN_0040ca80(0x1e,0,FUN_00404800,FUN_00404810,free);\n    if (DAT_00625788 == 0) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00412bd0();\n    }\n    _obstack_begin(&DAT_006254a0,0,0,malloc,free);\n  }\n  pcVar20 = getenv(\"TZ\");\n  DAT_00625668 = FUN_00417410(pcVar20);\n  if ((((DAT_006256f0 - 2U & 0xfffffffd) == 0) || (DAT_006256f8 == 0)) ||\n     ((DAT_00625725 != '\\0' || (DAT_006256ec != '\\0')))) {\n    DAT_00625661 = 1;\n    bVar25 = 0;\n  }\n  else {\n    DAT_00625661 = 0;\n    bVar25 = 1;\n    if (((DAT_006256b6 == '\\0') && (DAT_006256d2 == '\\0')) && (DAT_006256d4 == 0)) {\n      bVar25 = DAT_006256b4;\n    }\n  }\n  DAT_00625660 = bVar25 & 1;\n  if (DAT_006256d8 != '\\0') {\n    _obstack_begin(&DAT_00625560,0,0,malloc,free);\n    _obstack_begin(&DAT_00625500,0,0,malloc,free);\n  }\n  if (DAT_006256d1 != '\\0') {\n    lVar17 = 0;\n    do {\n      iVar8 = (int)lVar17;\n      if (iVar8 < 0x5b) {\n        bVar24 = true;\n        if ((iVar8 < 0x41) && (9 < iVar8 - 0x30U)) goto joined_r0x004041a8;\n      }\n      else {\n        bVar24 = true;\n        if (0x19 < iVar8 - 0x61U) {\njoined_r0x004041a8:\n          if ((iVar8 - 0x2dU < 2) || (iVar8 == 0x7e)) {\n            bVar24 = true;\n          }\n          else {\n            bVar24 = iVar8 == 0x5f;\n          }\n        }\n      }\n      (&DAT_006253a0)[lVar17] = (&DAT_006253a0)[lVar17] | bVar24;\n      lVar17 = lVar17 + 1;\n    } while (lVar17 != 0x100);\n    DAT_00625748 = (undefined1 *)FUN_00412d40();\n    if (DAT_00625748 == (undefined1 *)0x0) {\n      DAT_00625748 = &DAT_0041b08a;\n    }\n  }\n  _DAT_00625778 = 100;\n  DAT_00625780 = FUN_00412980(20000);\n  iVar8 = param_1 - (int)pcVar10;\n  DAT_00625770 = 0;\n  FUN_004084b0();\n  if (iVar8 < 1) {\n    if (DAT_006256b5 == '\\0') {\n      FUN_00404d90(&DAT_0041d794,0,1);\n    }\n    else {\n      FUN_00408580(&DAT_0041d794,3,1,&DAT_0041b08a);\n    }\n    if (DAT_00625770 != 0) goto LAB_0040411e;\nLAB_00403d0d:\n    if (DAT_00625740 == (void **)0x0) goto LAB_00403c40;\n    if (DAT_00625740[3] == (void *)0x0) {\n      DAT_00625678 = 0;\n    }\n  }\n  else {\n    do {\n      lVar17 = (long)pcVar10 * 2;\n      pcVar10 = pcVar10 + 1;\n      FUN_00408580(*(undefined8 *)(&param_2->_flags + lVar17),0,1,&DAT_0041b08a);\n    } while ((int)pcVar10 < param_1);\n    if (DAT_00625770 == 0) {\nLAB_00403b1c:\n      if (iVar8 < 2) goto LAB_00403d0d;\n    }\n    else {\nLAB_0040411e:\n      FUN_00404f40();\n      if (DAT_006256b5 == '\\0') {\n        FUN_00405140(0,1);\n      }\n      if (DAT_00625770 == 0) goto LAB_00403b1c;\n      FUN_00407ca0();\n      if (DAT_00625740 == (void **)0x0) goto LAB_00403c40;\n      pcVar10 = stdout->_IO_write_ptr;\n      if (stdout->_IO_write_end < pcVar10 || stdout->_IO_write_end == pcVar10) {\n        __overflow(stdout,10);\n      }\n      else {\n        stdout->_IO_write_ptr = pcVar10 + 1;\n        *pcVar10 = '\\n';\n      }\n      DAT_006255b8 = DAT_006255b8 + 1;\n    }\n  }\n  while (__ptr = DAT_00625740, DAT_00625740 != (void **)0x0) {\n    ppvVar3 = (void **)DAT_00625740[3];\n    pvVar13 = *DAT_00625740;\n    if ((DAT_00625788 == 0) || (pvVar13 != (void *)0x0)) {\n      ppvVar1 = DAT_00625740 + 2;\n      ppvVar2 = DAT_00625740 + 1;\n      DAT_00625740 = ppvVar3;\n      FUN_004092a0(pvVar13,*ppvVar2,*(undefined *)ppvVar1);\n      free(*__ptr);\n      free(__ptr[1]);\n      free(__ptr);\n      DAT_00625678 = 1;\n    }\n    else {\n      DAT_00625740 = ppvVar3;\n      if ((ulong)(DAT_006254b8 - _DAT_006254b0) < 0x10) {\nLAB_004046e2:\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"dev_ino_size <= obstack_object_size (&dev_ino_obstack)\",\"src/ls.c\",0x402,\n                      \"dev_ino_pop\");\n      }\n      local_48 = *(undefined **)(DAT_006254b8 + -0x10);\n      local_40 = *(undefined8 *)(DAT_006254b8 + -8);\n      DAT_006254b8 = DAT_006254b8 + -0x10;\n      pvVar13 = (void *)FUN_0040d260(DAT_00625788,&local_48);\n      if (pvVar13 == (void *)0x0) goto LAB_004046b0;\n      free(pvVar13);\n      free(*__ptr);\n      free(__ptr[1]);\n      free(__ptr);\n    }\n  }\nLAB_00403c40:\n  if ((DAT_006256d2 != '\\0') && (DAT_006256d0 != '\\0')) {\n    if ((_DAT_00624420 != 2) ||\n       (((*(short *)PTR_DAT_00624428 != 0x5b1b || (_DAT_00624430 != 1)) ||\n        (*PTR_DAT_00624438 != 'm')))) {\n      FUN_00405d40();\n    }\n    fflush_unlocked(stdout);\n    FUN_00405af0(0);\n    for (iVar8 = DAT_006255d4; iVar8 != 0; iVar8 = iVar8 + -1) {\n      raise(0x13);\n    }\n    if (DAT_006255d8 != 0) {\n      raise(DAT_006255d8);\n    }\n  }\n  if (DAT_006256d8 != '\\0') {\n    FUN_00405390(\"//DIRED//\",&DAT_00625560);\n    FUN_00405390(\"//SUBDIRED//\",&DAT_00625500);\n    uVar9 = FUN_00411c20(DAT_00625690);\n    __printf_chk(1,\"//DIRED-OPTIONS// --quoting-style=%s\\n\",(&PTR_s_literal_0041ea00)[uVar9]);\n  }\n  lVar17 = DAT_00625788;\n  if (DAT_00625788 != 0) {\n    lVar14 = FUN_0040c5f0(DAT_00625788);\n    if (lVar14 != 0) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"hash_get_n_entries (active_dir_set) == 0\",\"src/ls.c\",0x66c,\"main\");\n    }\n    FUN_0040ccc0(lVar17);\n  }\n  return DAT_006255d0;\nswitchD_004030ee_caseD_90:\n  pcVar10 = DAT_00625970;\n  goto LAB_004030b8;\n}\n\n",
            "funcName": "FUN_00402e90"
        },
        {
            "funcStartAddr": "0x404720",
            "funcEndAddr": "0x40474b",
            "decompiledFuncCode": "\nvoid FUN_00404720(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00623ff0)\n            (FUN_00402e90,unaff_retaddr,&stack0x00000008,FUN_00418710,FUN_00418770,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "funcName": "FUN_00404720"
        },
        {
            "funcStartAddr": "0x40474b",
            "funcEndAddr": "0x40476a",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00404758) */\n/* WARNING: Removing unreachable block (ram,0x00404762) */\n\nvoid FUN_0040474b(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_0040474b"
        },
        {
            "funcStartAddr": "0x40476a",
            "funcEndAddr": "0x4047a1",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00404799) */\n\nvoid FUN_0040476a(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_0040476a"
        },
        {
            "funcStartAddr": "0x4047a1",
            "funcEndAddr": "0x4047f8",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004047d6) */\n\nvoid FUN_004047a1(void)\n\n{\n  if (DAT_00624688 != '\\0') {\n    return;\n  }\n  FUN_0040474b();\n  DAT_00624688 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_004047a1"
        },
        {
            "funcStartAddr": "0x4047f8",
            "funcEndAddr": "0x4047fd",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00404799) */\n\nvoid thunk_FUN_0040476a(void)\n\n{\n  return;\n}\n\n",
            "funcName": "thunk_4047f8"
        },
        {
            "funcStartAddr": "0x404800",
            "funcEndAddr": "0x40480c",
            "decompiledFuncCode": "\nulong FUN_00404800(ulong *param_1,ulong param_2)\n\n{\n  return *param_1 % param_2;\n}\n\n",
            "funcName": "FUN_00404800"
        },
        {
            "funcStartAddr": "0x404810",
            "funcEndAddr": "0x404827",
            "decompiledFuncCode": "\nulong FUN_00404810(long *param_1,long *param_2)\n\n{\n  if (*param_1 != *param_2) {\n    return 0;\n  }\n  return param_2[1] & 0xffffffffffffff00U | (ulong)(param_1[1] == param_2[1]);\n}\n\n",
            "funcName": "FUN_00404810"
        },
        {
            "funcStartAddr": "0x404830",
            "funcEndAddr": "0x404841",
            "decompiledFuncCode": "\nvoid FUN_00404830(int param_1)\n\n{\n  if (DAT_006255d8 == 0) {\n    DAT_006255d8 = param_1;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00404830"
        },
        {
            "funcStartAddr": "0x404850",
            "funcEndAddr": "0x404855",
            "decompiledFuncCode": "\n/* WARNING: Switch with 1 destination removed at 0x00402750 */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "funcName": "thunk_404850"
        },
        {
            "funcStartAddr": "0x404860",
            "funcEndAddr": "0x404a71",
            "decompiledFuncCode": "\nundefined4 FUN_00404860(byte **param_1,byte **param_2,undefined4 param_3,long *param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  byte bVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  long lVar7;\n  byte bVar8;\n  ulong uVar9;\n  bool bVar10;\n  \n  pbVar4 = *param_2;\n  lVar7 = 0;\n  pbVar6 = *param_1;\nLAB_004048a2:\n  do {\n    bVar2 = *pbVar4;\n    cVar1 = bVar2 - 0x3d;\n    bVar10 = bVar2 == 0x3d;\n    pbVar5 = pbVar4;\n    if (bVar10) goto LAB_00404935;\n    while (bVar10 || SBORROW1(bVar2,'=') != cVar1 < '\\0') {\n      if ((bVar2 == 0) || (bVar2 == 0x3a)) {\n        param_3 = 1;\n        goto LAB_004048d8;\n      }\nLAB_00404919:\n      while( true ) {\n        pbVar5 = pbVar5 + 1;\n        *pbVar6 = bVar2;\n        lVar7 = lVar7 + 1;\n        pbVar6 = pbVar6 + 1;\n        bVar2 = *pbVar5;\n        cVar1 = bVar2 - 0x3d;\n        bVar10 = cVar1 == '\\0';\n        if (!bVar10) break;\nLAB_00404935:\n        if ((char)param_3 != '\\0') goto LAB_004048d8;\n      }\n    }\n    if (bVar2 != 0x5c) {\n      if (bVar2 != 0x5e) goto LAB_00404919;\n      bVar2 = pbVar5[1];\n      pbVar4 = pbVar5 + 1;\n      if ((byte)(bVar2 - 0x40) < 0x3f) {\n        pbVar4 = pbVar5 + 2;\n        bVar2 = bVar2 & 0x1f;\n        goto switchD_00404902_caseD_1;\n      }\n      if (bVar2 != 0x3f) {\nswitchD_00404902_caseD_0:\n        param_3 = 0;\n        pbVar5 = pbVar4;\nLAB_004048d8:\n        *param_1 = pbVar6;\n        *param_2 = pbVar5;\n        *param_4 = lVar7;\n        return param_3;\n      }\n      *pbVar6 = 0x7f;\n      lVar7 = lVar7 + 1;\n      pbVar6 = pbVar6 + 1;\n      goto LAB_004048a2;\n    }\n    bVar2 = pbVar5[1];\n    pbVar4 = pbVar5 + 2;\n    switch(bVar2) {\n    case 0:\n      goto switchD_00404902_caseD_0;\n    default:\n      break;\n    case 0x30:\n    case 0x31:\n    case 0x32:\n    case 0x33:\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n      bVar2 = bVar2 - 0x30;\n      bVar3 = *pbVar4;\n      while ((byte)(bVar3 - 0x30) < 8) {\n        pbVar4 = pbVar4 + 1;\n        bVar2 = (bVar3 - 0x30) + bVar2 * '\\b';\n        bVar3 = *pbVar4;\n      }\n      break;\n    case 0x3f:\n      bVar2 = 0x7f;\n      break;\n    case 0x58:\n    case 0x78:\n      goto switchD_00404902_caseD_58;\n    case 0x5f:\n      bVar2 = 0x20;\n      break;\n    case 0x61:\n      bVar2 = 7;\n      break;\n    case 0x62:\n      bVar2 = 8;\n      break;\n    case 0x65:\n      bVar2 = 0x1b;\n      break;\n    case 0x66:\n      bVar2 = 0xc;\n      break;\n    case 0x6e:\n      bVar2 = 10;\n      break;\n    case 0x72:\n      bVar2 = 0xd;\n      break;\n    case 0x74:\n      bVar2 = 9;\n      break;\n    case 0x76:\n      bVar2 = 0xb;\n    }\nswitchD_00404902_caseD_1:\n    *pbVar6 = bVar2;\n    lVar7 = lVar7 + 1;\n    pbVar6 = pbVar6 + 1;\n  } while( true );\nswitchD_00404902_caseD_58:\n  bVar2 = 0;\nLAB_004049a8:\n  bVar8 = *pbVar4;\n  bVar3 = bVar8 - 0x30;\n  if (bVar3 < 0x37) {\n    while (uVar9 = 1L << (bVar3 & 0x3f), (uVar9 & 0x7e0000) == 0) {\n      if ((uVar9 & 0x7e000000000000) != 0) {\n        pbVar4 = pbVar4 + 1;\n        bVar2 = bVar8 + 0xa9 + bVar2 * '\\x10';\n        goto LAB_004049a8;\n      }\n      if ((uVar9 & 0x3ff) == 0) goto LAB_00404a00;\n      pbVar4 = pbVar4 + 1;\n      bVar2 = (bVar8 - 0x30) + bVar2 * '\\x10';\n      bVar8 = *pbVar4;\n      bVar3 = bVar8 - 0x30;\n      if (0x36 < bVar3) goto LAB_00404a00;\n    }\n    pbVar4 = pbVar4 + 1;\n    bVar2 = (bVar8 - 0x37) + bVar2 * '\\x10';\n    goto LAB_004049a8;\n  }\nLAB_00404a00:\n  *pbVar6 = bVar2;\n  lVar7 = lVar7 + 1;\n  pbVar6 = pbVar6 + 1;\n  goto LAB_004048a2;\n}\n\n",
            "funcName": "FUN_00404860"
        },
        {
            "funcStartAddr": "0x404ae0",
            "funcEndAddr": "0x404b2b",
            "decompiledFuncCode": "\nbool FUN_00404ae0(uint param_1)\n\n{\n  ulong uVar1;\n  bool bVar2;\n  long lVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  \n  bVar2 = false;\n  uVar1 = *(ulong *)(&DAT_00624420 + (ulong)param_1 * 0x10);\n  if (uVar1 != 0) {\n    if (uVar1 == 1) {\n      return *(&PTR_DAT_00624428)[(ulong)param_1 * 2] != 0x30;\n    }\n    bVar2 = true;\n    bVar6 = uVar1 < 2;\n    bVar7 = uVar1 == 2;\n    if (bVar7) {\n      lVar3 = 2;\n      pbVar4 = (&PTR_DAT_00624428)[(ulong)param_1 * 2];\n      pbVar5 = &DAT_0041b02d;\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar6 = *pbVar4 < *pbVar5;\n        bVar7 = *pbVar4 == *pbVar5;\n        pbVar4 = pbVar4 + 1;\n        pbVar5 = pbVar5 + 1;\n      } while (bVar7);\n      return (!bVar6 && !bVar7) != bVar6;\n    }\n  }\n  return bVar2;\n}\n\n",
            "funcName": "FUN_00404ae0"
        },
        {
            "funcStartAddr": "0x404b40",
            "funcEndAddr": "0x404b93",
            "decompiledFuncCode": "\nundefined8 FUN_00404b40(undefined8 param_1)\n\n{\n  int iVar1;\n  undefined8 local_10 [2];\n  \n  iVar1 = FUN_004132b0(param_1,0,0,local_10,&DAT_0041b08a);\n  if (iVar1 == 0) {\n    DAT_00625670 = local_10[0];\n    return 1;\n  }\n  if (iVar1 == 1) {\n    DAT_00625670 = 0xffffffffffffffff;\n    return 1;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_00404b40"
        },
        {
            "funcStartAddr": "0x404bb0",
            "funcEndAddr": "0x404d7d",
            "decompiledFuncCode": "\nvoid FUN_00404bb0(void)\n\n{\n  long lVar1;\n  bool bVar2;\n  char cVar3;\n  uint uVar4;\n  char *pcVar5;\n  char *pcVar6;\n  ulong uVar7;\n  char cVar8;\n  undefined *puVar9;\n  char **ppcVar10;\n  ulong uVar11;\n  long lVar12;\n  int __item;\n  ulong uVar13;\n  ulong local_650;\n  char *local_648;\n  long local_640;\n  undefined local_638 [1536];\n  undefined local_38 [8];\n  \n  lVar12 = 0;\n  do {\n    pcVar5 = *(char **)((long)&PTR_DAT_00624410 + lVar12);\n    cVar3 = *pcVar5;\n    while (cVar3 != '\\0') {\n      cVar8 = pcVar5[1];\n      if (cVar3 == '%') {\n        if (cVar8 == '%') {\n          cVar8 = pcVar5[2];\n          pcVar5 = pcVar5 + 1;\n        }\n        else if (cVar8 == 'b') goto LAB_00404bfe;\n      }\n      pcVar5 = pcVar5 + 1;\n      cVar3 = cVar8;\n    }\n    pcVar5 = (char *)0x0;\nLAB_00404bfe:\n    *(char **)((long)&local_648 + lVar12) = pcVar5;\n    lVar12 = lVar12 + 8;\n    if (lVar12 == 0x10) {\n      uVar13 = 5;\n      if ((local_648 != (char *)0x0) || (local_640 != 0)) {\n        do {\n          puVar9 = local_638;\n          __item = 0x2000e;\n          uVar11 = 0;\n          do {\n            local_650 = uVar13;\n            pcVar5 = nl_langinfo(__item);\n            pcVar6 = strchr(pcVar5,0x25);\n            if (pcVar6 != (char *)0x0) {\n              return;\n            }\n            uVar7 = FUN_0040e570(pcVar5,puVar9,0x80,&local_650,0,0);\n            if (0x7f < uVar7) {\n              return;\n            }\n            if (uVar11 < local_650) {\n              uVar11 = local_650;\n            }\n            puVar9 = puVar9 + 0x80;\n            __item = __item + 1;\n          } while (puVar9 != local_38);\n          bVar2 = uVar11 < uVar13;\n          uVar13 = uVar11;\n        } while (bVar2);\n        ppcVar10 = &local_648;\n        lVar12 = 0;\n        do {\n          lVar1 = *(long *)((long)&PTR_DAT_00624410 + lVar12);\n          puVar9 = local_638;\n          pcVar5 = &DAT_006247a0 + lVar12 * 0xc0;\n          do {\n            pcVar6 = *ppcVar10;\n            if (pcVar6 == (char *)0x0) {\n              uVar4 = snprintf(pcVar5,0x80,\"%s\",lVar1);\n            }\n            else {\n              if (0x80 < (long)pcVar6 - lVar1) {\n                return;\n              }\n              uVar4 = __snprintf_chk(pcVar5,0x80,1,0xffffffffffffffff,\"%.*s%s%s\",\n                                     (long)pcVar6 - lVar1,lVar1,puVar9,pcVar6 + 2);\n            }\n            if (0x7f < uVar4) {\n              return;\n            }\n            puVar9 = puVar9 + 0x80;\n            pcVar5 = pcVar5 + 0x80;\n          } while (puVar9 != local_38);\n          lVar12 = lVar12 + 8;\n          ppcVar10 = ppcVar10 + 1;\n        } while (lVar12 != 0x10);\n        DAT_00624788 = 1;\n      }\n      return;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_00404bb0"
        },
        {
            "funcStartAddr": "0x404d90",
            "funcEndAddr": "0x404df6",
            "decompiledFuncCode": "\nvoid FUN_00404d90(long param_1,long param_2,undefined param_3)\n\n{\n  undefined8 *puVar1;\n  undefined8 uVar2;\n  \n  puVar1 = (undefined8 *)FUN_00412980(0x20);\n  uVar2 = 0;\n  if (param_2 != 0) {\n    uVar2 = FUN_00412bb0(param_2);\n  }\n  puVar1[1] = uVar2;\n  uVar2 = 0;\n  if (param_1 != 0) {\n    uVar2 = FUN_00412bb0(param_1);\n  }\n  *puVar1 = uVar2;\n  *(undefined *)(puVar1 + 2) = param_3;\n  puVar1[3] = DAT_00625740;\n  DAT_00625740 = puVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00404d90"
        },
        {
            "funcStartAddr": "0x404e00",
            "funcEndAddr": "0x404e0b",
            "decompiledFuncCode": "\nvoid FUN_00404e00(char **param_1,char **param_2)\n\n{\n  strcmp(*param_1,*param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00404e00"
        },
        {
            "funcStartAddr": "0x404e10",
            "funcEndAddr": "0x404e1e",
            "decompiledFuncCode": "\nvoid FUN_00404e10(char **param_1,char **param_2)\n\n{\n  strcmp(*param_2,*param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00404e10"
        },
        {
            "funcStartAddr": "0x404e20",
            "funcEndAddr": "0x404e76",
            "decompiledFuncCode": "\nulong FUN_00404e20(char *param_1)\n\n{\n  size_t sVar1;\n  size_t sVar2;\n  char local_1a [10];\n  \n  sVar1 = FUN_00411cd0(local_1a,2,param_1,0xffffffffffffffff,DAT_00625690);\n  if (*param_1 != local_1a[0]) {\n    return 1;\n  }\n  sVar2 = strlen(param_1);\n  return sVar2 & 0xffffffffffffff00 | (ulong)(sVar2 != sVar1);\n}\n\n",
            "funcName": "FUN_00404e20"
        },
        {
            "funcStartAddr": "0x404e80",
            "funcEndAddr": "0x404f3a",
            "decompiledFuncCode": "\nbyte * FUN_00404e80(byte *param_1,char param_2)\n\n{\n  byte bVar1;\n  undefined auVar2 [16];\n  size_t sVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  \n  sVar3 = strlen((char *)param_1);\n  auVar2 = ZEXT816(3) * ZEXT816(sVar3 + 1);\n  if ((SUB168(auVar2,0) < 0) || (SUB168(auVar2 >> 0x40,0) != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00412bd0();\n  }\n  pbVar4 = (byte *)FUN_00412980((sVar3 + 1) * 3);\n  pbVar6 = pbVar4;\nLAB_00404ecd:\n  do {\n    bVar1 = *param_1;\n    pbVar5 = pbVar6;\n    while( true ) {\n      if (bVar1 == 0) {\n        *pbVar5 = 0;\n        return pbVar4;\n      }\n      param_1 = param_1 + 1;\n      if ((bVar1 == 0x2f) && (param_2 != '\\0')) {\n        *pbVar5 = 0x2f;\n        pbVar6 = pbVar5 + 1;\n        goto LAB_00404ecd;\n      }\n      if ((&DAT_006253a0)[bVar1] == '\\0') break;\n      *pbVar5 = bVar1;\n      bVar1 = *param_1;\n      pbVar5 = pbVar5 + 1;\n    }\n    pbVar6 = pbVar5 + 3;\n    __sprintf_chk(pbVar5,1,0xffffffffffffffff,\"%%%02x\",(ulong)bVar1);\n  } while( true );\n}\n\n",
            "funcName": "FUN_00404e80"
        },
        {
            "funcStartAddr": "0x404f40",
            "funcEndAddr": "0x4050bd",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00404f40(void)\n\n{\n  long *plVar1;\n  undefined auVar2 [16];\n  int iVar3;\n  ulong uVar4;\n  int iVar5;\n  long *plVar6;\n  long *plVar7;\n  int iVar8;\n  long lVar9;\n  \n  uVar4 = DAT_00625770;\n  if (_DAT_00625758 < (DAT_00625770 >> 1) + DAT_00625770) {\n    free(DAT_00625760);\n    auVar2 = ZEXT816(0x18) * ZEXT816(uVar4);\n    if (SUB168(auVar2,0) < 0 || SUB168(auVar2 >> 0x40,0) != 0) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00412bd0();\n    }\n    DAT_00625760 = (long *)FUN_00412980(uVar4 * 0x18);\n    _DAT_00625758 = DAT_00625770 * 3;\n  }\n  if (DAT_00625770 != 0) {\n    plVar1 = DAT_00625760 + DAT_00625770;\n    plVar6 = DAT_00625760;\n    lVar9 = DAT_00625780;\n    do {\n      *plVar6 = lVar9;\n      plVar6 = plVar6 + 1;\n      lVar9 = lVar9 + 200;\n    } while (plVar1 != plVar6);\n  }\n  if (DAT_006256f0 != -1) {\n    iVar5 = _setjmp((__jmp_buf_tag *)&DAT_006246c0);\n    uVar4 = DAT_00625770;\n    plVar1 = DAT_00625760;\n    iVar3 = DAT_006256f0;\n    if (iVar5 != 0) {\n      if (DAT_006256f0 == 3) {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"sort_type != sort_version\",\"src/ls.c\",0xee5,\"sort_files\");\n      }\n      if (DAT_00625770 != 0) {\n        plVar6 = DAT_00625760 + DAT_00625770;\n        plVar7 = DAT_00625760;\n        lVar9 = DAT_00625780;\n        do {\n          *plVar7 = lVar9;\n          plVar7 = plVar7 + 1;\n          lVar9 = lVar9 + 200;\n        } while (plVar7 != plVar6);\n      }\n      iVar5 = 1;\n    }\n    iVar8 = 0;\n    if (iVar3 == 4) {\n      iVar8 = DAT_006256f4;\n    }\n    FUN_0040edd0(plVar1,uVar4,\n                 (&PTR_FUN_00419580)\n                 [(ulong)DAT_006256b4 +\n                  ((ulong)DAT_006256ef + ((long)iVar5 + (ulong)(uint)(iVar8 + iVar3) * 2) * 2) * 2])\n    ;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00404f40"
        },
        {
            "funcStartAddr": "0x4050d0",
            "funcEndAddr": "0x4050f8",
            "decompiledFuncCode": "\nvoid FUN_004050d0(char *param_1,char *param_2)\n\n{\n  int *piVar1;\n  \n  piVar1 = __errno_location();\n  *piVar1 = 0;\n  strcoll(param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_004050d0"
        },
        {
            "funcStartAddr": "0x405100",
            "funcEndAddr": "0x405108",
            "decompiledFuncCode": "\nvoid FUN_00405100(char **param_1,char **param_2)\n\n{\n  char *__s2;\n  char *__s1;\n  int *piVar1;\n  \n  __s2 = *param_2;\n  __s1 = *param_1;\n  piVar1 = __errno_location();\n  *piVar1 = 0;\n  strcoll(__s1,__s2);\n  return;\n}\n\n",
            "funcName": "FUN_00405100"
        },
        {
            "funcStartAddr": "0x405110",
            "funcEndAddr": "0x40511b",
            "decompiledFuncCode": "\nvoid FUN_00405110(char **param_1,char **param_2)\n\n{\n  char *__s2;\n  char *__s1;\n  int *piVar1;\n  \n  __s2 = *param_1;\n  __s1 = *param_2;\n  piVar1 = __errno_location();\n  *piVar1 = 0;\n  strcoll(__s1,__s2);\n  return;\n}\n\n",
            "funcName": "FUN_00405110"
        },
        {
            "funcStartAddr": "0x405120",
            "funcEndAddr": "0x40512e",
            "decompiledFuncCode": "\nvoid FUN_00405120(undefined8 *param_1,undefined8 *param_2)\n\n{\n  FUN_0040bd40(*param_2,*param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00405120"
        },
        {
            "funcStartAddr": "0x405130",
            "funcEndAddr": "0x40513b",
            "decompiledFuncCode": "\nvoid FUN_00405130(undefined8 *param_1,undefined8 *param_2)\n\n{\n  FUN_0040bd40(*param_1,*param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00405130"
        },
        {
            "funcStartAddr": "0x405140",
            "funcEndAddr": "0x4052b7",
            "decompiledFuncCode": "\nvoid FUN_00405140(long param_1,undefined param_2)\n\n{\n  long *plVar1;\n  int iVar2;\n  char **ppcVar3;\n  char *pcVar4;\n  long lVar5;\n  long *plVar6;\n  char *pcVar7;\n  void *__ptr;\n  long *plVar8;\n  \n  plVar6 = DAT_00625760;\n  lVar5 = DAT_00625770;\n  if ((param_1 != 0) && (DAT_00625788 != 0)) {\n    FUN_00404d90(0,param_1,0);\n    plVar6 = DAT_00625760;\n    lVar5 = DAT_00625770;\n  }\njoined_r0x00405180:\n  do {\n    lVar5 = lVar5 + -1;\n    DAT_00625760 = plVar6;\n    if (lVar5 == -1) {\n      if (DAT_00625770 != 0) {\n        plVar1 = plVar6 + DAT_00625770;\n        DAT_00625770 = 0;\n        plVar8 = plVar6;\n        do {\n          iVar2 = *(int *)(*plVar8 + 0xa8);\n          plVar6[DAT_00625770] = *plVar8;\n          plVar8 = plVar8 + 1;\n          DAT_00625770 = DAT_00625770 + (ulong)(iVar2 != 9);\n        } while (plVar1 != plVar8);\n      }\n      return;\n    }\n    ppcVar3 = (char **)plVar6[lVar5];\n  } while ((*(int *)(ppcVar3 + 0x15) != 3) && (*(int *)(ppcVar3 + 0x15) != 9));\n  pcVar4 = *ppcVar3;\n  if (param_1 != 0) goto code_r0x004051ae;\n  goto LAB_00405280;\ncode_r0x004051ae:\n  pcVar7 = (char *)FUN_0040b870(pcVar4);\n  if ((*pcVar7 != '.') ||\n     ((plVar6 = DAT_00625760, pcVar7[(ulong)(pcVar7[1] == '.') + 1] != '\\0' &&\n      (pcVar7[(ulong)(pcVar7[1] == '.') + 1] != '/')))) {\n    if (*pcVar4 == '/') {\nLAB_00405280:\n      FUN_00404d90(pcVar4,ppcVar3[1],param_2);\n    }\n    else {\n      __ptr = (void *)FUN_0040bb70(param_1,pcVar4,0);\n      FUN_00404d90(__ptr,ppcVar3[1],param_2);\n      free(__ptr);\n    }\n    plVar6 = DAT_00625760;\n    if (*(int *)(ppcVar3 + 0x15) == 9) {\n      free(*ppcVar3);\n      free(ppcVar3[1]);\n      free(ppcVar3[2]);\n      plVar6 = DAT_00625760;\n    }\n  }\n  goto joined_r0x00405180;\n}\n\n",
            "funcName": "FUN_00405140"
        },
        {
            "funcStartAddr": "0x4052c0",
            "funcEndAddr": "0x40536f",
            "decompiledFuncCode": "\nchar * FUN_004052c0(ulong param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  uint uVar2;\n  char *in_RAX;\n  char *pcVar3;\n  ulong uVar5;\n  char *pcVar4;\n  \n  if (param_2 <= param_1) {\n    return in_RAX;\n  }\n  do {\n    while( true ) {\n      uVar5 = DAT_00625680;\n      uVar1 = param_1 + 1;\n      pcVar3 = stdout->_IO_write_ptr;\n      if ((DAT_00625680 == 0) || (param_2 / DAT_00625680 <= uVar1 / DAT_00625680)) break;\n      if (pcVar3 < stdout->_IO_write_end) {\n        stdout->_IO_write_ptr = pcVar3 + 1;\n        *pcVar3 = '\\t';\n      }\n      else {\n        __overflow(stdout,9);\n        uVar5 = DAT_00625680;\n      }\n      pcVar3 = (char *)(param_1 / uVar5);\n      param_1 = (uVar5 + param_1) - param_1 % uVar5;\n      if (param_2 <= param_1) {\n        return pcVar3;\n      }\n    }\n    if (pcVar3 < stdout->_IO_write_end) {\n      pcVar4 = pcVar3 + 1;\n      stdout->_IO_write_ptr = pcVar4;\n      *pcVar3 = ' ';\n    }\n    else {\n      uVar2 = __overflow(stdout,0x20);\n      pcVar4 = (char *)(ulong)uVar2;\n    }\n    param_1 = uVar1;\n  } while (uVar1 < param_2);\n  return pcVar4;\n}\n\n",
            "funcName": "FUN_004052c0"
        },
        {
            "funcStartAddr": "0x405390",
            "funcEndAddr": "0x405456",
            "decompiledFuncCode": "\nvoid FUN_00405390(char *param_1,long param_2)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  ulong uVar3;\n  undefined8 *puVar4;\n  undefined8 *puVar5;\n  \n  puVar5 = *(undefined8 **)(param_2 + 0x18);\n  puVar4 = *(undefined8 **)(param_2 + 0x10);\n  if (7 < (ulong)((long)puVar5 - (long)puVar4)) {\n    if (puVar5 == puVar4) {\n      *(byte *)(param_2 + 0x50) = *(byte *)(param_2 + 0x50) | 2;\n    }\n    uVar3 = (long)puVar5 + *(ulong *)(param_2 + 0x30) & ~*(ulong *)(param_2 + 0x30);\n    if (*(ulong *)(param_2 + 0x20) - *(long *)(param_2 + 8) < uVar3 - *(long *)(param_2 + 8)) {\n      uVar3 = *(ulong *)(param_2 + 0x20);\n    }\n    puVar5 = (undefined8 *)(((long)puVar5 - (long)puVar4 & 0xfffffffffffffff8U) + (long)puVar4);\n    *(ulong *)(param_2 + 0x18) = uVar3;\n    *(ulong *)(param_2 + 0x10) = uVar3;\n    fputs_unlocked(param_1,stdout);\n    do {\n      uVar1 = *puVar4;\n      puVar4 = puVar4 + 1;\n      __printf_chk(1,&DAT_0041b063,uVar1);\n    } while (puVar5 != puVar4);\n    pcVar2 = stdout->_IO_write_ptr;\n    if (stdout->_IO_write_end <= pcVar2) {\n      __overflow(stdout,10);\n      return;\n    }\n    stdout->_IO_write_ptr = pcVar2 + 1;\n    *pcVar2 = '\\n';\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00405390"
        },
        {
            "funcStartAddr": "0x405460",
            "funcEndAddr": "0x40550b",
            "decompiledFuncCode": "\nvoid FUN_00405460(char *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  char *pcVar1;\n  int iVar2;\n  size_t sVar3;\n  long lVar4;\n  \n  if (param_1 == (char *)0x0) {\n    __printf_chk(1,\"%*lu \",param_3,param_2);\n    lVar4 = (long)(int)param_3;\n  }\n  else {\n    iVar2 = FUN_0040eb70(param_1,0);\n    iVar2 = (int)param_3 - iVar2;\n    if (iVar2 < 0) {\n      iVar2 = 0;\n    }\n    fputs_unlocked(param_1,stdout);\n    sVar3 = strlen(param_1);\n    lVar4 = (long)iVar2 + sVar3;\n    do {\n      pcVar1 = stdout->_IO_write_ptr;\n      if (pcVar1 < stdout->_IO_write_end) {\n        stdout->_IO_write_ptr = pcVar1 + 1;\n        *pcVar1 = ' ';\n      }\n      else {\n        __overflow(stdout,0x20);\n      }\n      iVar2 = iVar2 + -1;\n    } while (iVar2 != -1);\n  }\n  DAT_006255b8 = lVar4 + 1 + DAT_006255b8;\n  return;\n}\n\n",
            "funcName": "FUN_00405460"
        },
        {
            "funcStartAddr": "0x405520",
            "funcEndAddr": "0x40555c",
            "decompiledFuncCode": "\nvoid FUN_00405520(undefined4 param_1,undefined4 param_2,char param_3)\n\n{\n  undefined1 *puVar1;\n  \n  puVar1 = &DAT_0041b06e;\n  if ((param_3 != '\\0') && (puVar1 = (undefined1 *)0x0, DAT_006256ed == '\\0')) {\n    puVar1 = (undefined1 *)FUN_0040e160();\n  }\n  FUN_00405460(puVar1,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00405520"
        },
        {
            "funcStartAddr": "0x405560",
            "funcEndAddr": "0x40557a",
            "decompiledFuncCode": "\nvoid FUN_00405560(void)\n\n{\n  if (DAT_006255d8 == 0) {\n    DAT_006255d4 = DAT_006255d4 + 1;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00405560"
        },
        {
            "funcStartAddr": "0x405580",
            "funcEndAddr": "0x4055db",
            "decompiledFuncCode": "\nvoid FUN_00405580(char param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 uVar1;\n  int *piVar2;\n  \n  uVar1 = FUN_00412040(4,param_3);\n  piVar2 = __errno_location();\n  error(0,*piVar2,param_2,uVar1);\n  if (param_1 == '\\0') {\n    if (DAT_006255d0 == 0) {\n      DAT_006255d0 = 1;\n      return;\n    }\n  }\n  else {\n    DAT_006255d0 = 2;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00405580"
        },
        {
            "funcStartAddr": "0x4055f0",
            "funcEndAddr": "0x405614",
            "decompiledFuncCode": "\nuint FUN_004055f0(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  uint uVar3;\n  bool bVar4;\n  \n  pcVar1 = param_2[9];\n  pcVar2 = param_1[9];\n  bVar4 = param_1[9] != pcVar1;\n  if (bVar4 && (long)pcVar1 <= (long)pcVar2) {\n    return 0xffffffff;\n  }\n  if (!bVar4) {\n    uVar3 = strcmp(*param_1,*param_2);\n    return uVar3;\n  }\n  return (uint)((long)pcVar2 < (long)pcVar1);\n}\n\n",
            "funcName": "FUN_004055f0"
        },
        {
            "funcStartAddr": "0x405630",
            "funcEndAddr": "0x40567d",
            "decompiledFuncCode": "\nint FUN_00405630(char **param_1,char **param_2)\n\n{\n  int iVar1;\n  char *__s2;\n  char *__s1;\n  int iVar2;\n  int *piVar3;\n  \n  iVar2 = *(int *)(param_1 + 0x15);\n  iVar1 = *(int *)(param_2 + 0x15);\n  if ((iVar1 != 9 && iVar1 != 3) && (iVar2 == 3 || iVar2 == 9)) {\n    return -1;\n  }\n  if ((iVar2 != 3 && iVar2 != 9) && (iVar1 == 9 || iVar1 == 3)) {\n    return 1;\n  }\n  __s2 = *param_2;\n  __s1 = *param_1;\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  iVar2 = strcoll(__s1,__s2);\n  return iVar2;\n}\n\n",
            "funcName": "FUN_00405630"
        },
        {
            "funcStartAddr": "0x405690",
            "funcEndAddr": "0x4056e0",
            "decompiledFuncCode": "\nint FUN_00405690(char **param_1,char **param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  iVar2 = *(int *)(param_1 + 0x15);\n  iVar1 = *(int *)(param_2 + 0x15);\n  if ((iVar1 == 3 || iVar1 == 9) || (iVar2 != 3 && iVar2 != 9)) {\n    if ((iVar2 == 3 || iVar2 == 9) || (iVar2 = 1, iVar1 != 3 && iVar1 != 9)) {\n      iVar2 = strcmp(*param_1,*param_2);\n      return iVar2;\n    }\n  }\n  else {\n    iVar2 = -1;\n  }\n  return iVar2;\n}\n\n",
            "funcName": "FUN_00405690"
        },
        {
            "funcStartAddr": "0x4056f0",
            "funcEndAddr": "0x405740",
            "decompiledFuncCode": "\nint FUN_004056f0(char **param_1,char **param_2)\n\n{\n  int iVar1;\n  char *__s2;\n  char *__s1;\n  int iVar2;\n  int *piVar3;\n  \n  iVar2 = *(int *)(param_1 + 0x15);\n  iVar1 = *(int *)(param_2 + 0x15);\n  if ((iVar1 != 9 && iVar1 != 3) && (iVar2 == 3 || iVar2 == 9)) {\n    return -1;\n  }\n  if ((iVar2 != 3 && iVar2 != 9) && (iVar1 == 9 || iVar1 == 3)) {\n    return 1;\n  }\n  __s2 = *param_1;\n  __s1 = *param_2;\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  iVar2 = strcoll(__s1,__s2);\n  return iVar2;\n}\n\n",
            "funcName": "FUN_004056f0"
        },
        {
            "funcStartAddr": "0x405750",
            "funcEndAddr": "0x4057a3",
            "decompiledFuncCode": "\nint FUN_00405750(char **param_1,char **param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  iVar2 = *(int *)(param_1 + 0x15);\n  iVar1 = *(int *)(param_2 + 0x15);\n  if ((iVar1 == 3 || iVar1 == 9) || (iVar2 != 3 && iVar2 != 9)) {\n    if ((iVar2 == 3 || iVar2 == 9) || (iVar2 = 1, iVar1 != 3 && iVar1 != 9)) {\n      iVar2 = strcmp(*param_2,*param_1);\n      return iVar2;\n    }\n  }\n  else {\n    iVar2 = -1;\n  }\n  return iVar2;\n}\n\n",
            "funcName": "FUN_00405750"
        },
        {
            "funcStartAddr": "0x4057b0",
            "funcEndAddr": "0x40586e",
            "decompiledFuncCode": "\nbyte FUN_004057b0(char param_1,uint param_2,int param_3)\n\n{\n  byte bVar1;\n  bool bVar2;\n  \n  if (param_1 == '\\0') {\n    if (param_3 == 5) {\n      return 0;\n    }\n    bVar2 = param_3 == 3 || param_3 == 9;\n  }\n  else {\n    if ((param_2 & 0xf000) == 0x8000) {\n      if (DAT_006256d4 != 3) {\n        return 0;\n      }\n      return ~-((param_2 & 0x49) == 0) & 0x2a;\n    }\n    bVar2 = (param_2 & 0xf000) == 0x4000;\n  }\n  bVar1 = 0x2f;\n  if ((!bVar2) && (bVar1 = 0, DAT_006256d4 != 1)) {\n    if (param_1 == '\\0') {\n      if (param_3 == 6) {\n        return 0x40;\n      }\n      if (param_3 == 1) {\n        return 0x7c;\n      }\n      bVar2 = param_3 == 7;\n    }\n    else {\n      param_2 = param_2 & 0xf000;\n      if (param_2 == 0xa000) {\n        return 0x40;\n      }\n      if (param_2 == 0x1000) {\n        return 0x7c;\n      }\n      bVar2 = param_2 == 0xc000;\n    }\n    bVar1 = -bVar2 & 0x3d;\n  }\n  return bVar1;\n}\n\n",
            "funcName": "FUN_004057b0"
        },
        {
            "funcStartAddr": "0x4058a0",
            "funcEndAddr": "0x4058e4",
            "decompiledFuncCode": "\nulong FUN_004058a0(undefined param_1)\n\n{\n  char cVar1;\n  int iVar2;\n  char *pcVar3;\n  undefined4 extraout_var;\n  char *pcVar4;\n  \n  pcVar3 = (char *)FUN_004057b0(param_1);\n  cVar1 = (char)pcVar3;\n  pcVar4 = pcVar3;\n  if (cVar1 != '\\0') {\n    pcVar4 = stdout->_IO_write_ptr;\n    if (pcVar4 < stdout->_IO_write_end) {\n      stdout->_IO_write_ptr = pcVar4 + 1;\n      *pcVar4 = cVar1;\n    }\n    else {\n      iVar2 = __overflow(stdout,(uint)pcVar3 & 0xff);\n      pcVar4 = (char *)CONCAT44(extraout_var,iVar2);\n    }\n    DAT_006255b8 = DAT_006255b8 + 1;\n  }\n  return (ulong)pcVar4 & 0xffffffffffffff00 | (ulong)(cVar1 != '\\0');\n}\n\n",
            "funcName": "FUN_004058a0"
        },
        {
            "funcStartAddr": "0x4058f0",
            "funcEndAddr": "0x405958",
            "decompiledFuncCode": "\nint FUN_004058f0(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  int iVar3;\n  int iVar4;\n  bool bVar5;\n  \n  iVar4 = *(int *)(param_2 + 0x15);\n  bVar5 = *(int *)(param_1 + 0x15) == 3 || *(int *)(param_1 + 0x15) == 9;\n  if ((iVar4 != 9 && iVar4 != 3) && (bVar5)) {\n    return -1;\n  }\n  if ((bVar5) || (iVar3 = 1, iVar4 != 9 && iVar4 != 3)) {\n    pcVar1 = param_2[0xc];\n    pcVar2 = param_1[0xc];\n    if (param_1[0xc] != pcVar1 && (long)pcVar1 <= (long)pcVar2) {\n      return -1;\n    }\n    if ((long)pcVar2 < (long)pcVar1) {\n      return 1;\n    }\n    iVar3 = (int)param_2[0xd] - *(int *)(param_1 + 0xd);\n    if (iVar3 == 0) {\n      iVar4 = strcmp(*param_1,*param_2);\n      return iVar4;\n    }\n  }\n  return iVar3;\n}\n\n",
            "funcName": "FUN_004058f0"
        },
        {
            "funcStartAddr": "0x405970",
            "funcEndAddr": "0x4059c3",
            "decompiledFuncCode": "\nundefined8 FUN_00405970(undefined8 *param_1,undefined8 *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined8 uVar3;\n  \n  iVar1 = *(int *)(param_1 + 0x15);\n  iVar2 = *(int *)(param_2 + 0x15);\n  if ((iVar2 == 9 || iVar2 == 3) || (iVar1 != 3 && iVar1 != 9)) {\n    if ((iVar1 == 3 || iVar1 == 9) || (uVar3 = 1, iVar2 != 9 && iVar2 != 3)) {\n      uVar3 = FUN_0040bd40(*param_2,*param_1);\n      return uVar3;\n    }\n  }\n  else {\n    uVar3 = 0xffffffff;\n  }\n  return uVar3;\n}\n\n",
            "funcName": "FUN_00405970"
        },
        {
            "funcStartAddr": "0x4059d0",
            "funcEndAddr": "0x405a20",
            "decompiledFuncCode": "\nundefined8 FUN_004059d0(undefined8 *param_1,undefined8 *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined8 uVar3;\n  \n  iVar1 = *(int *)(param_1 + 0x15);\n  iVar2 = *(int *)(param_2 + 0x15);\n  if ((iVar2 == 9 || iVar2 == 3) || (iVar1 != 3 && iVar1 != 9)) {\n    if ((iVar1 == 3 || iVar1 == 9) || (uVar3 = 1, iVar2 != 9 && iVar2 != 3)) {\n      uVar3 = FUN_0040bd40(*param_1,*param_2);\n      return uVar3;\n    }\n  }\n  else {\n    uVar3 = 0xffffffff;\n  }\n  return uVar3;\n}\n\n",
            "funcName": "FUN_004059d0"
        },
        {
            "funcStartAddr": "0x405a30",
            "funcEndAddr": "0x405ade",
            "decompiledFuncCode": "\nint FUN_00405a30(char **param_1,char **param_2)\n\n{\n  int iVar1;\n  char *__s;\n  char *__s_00;\n  int iVar2;\n  char *__s1;\n  char *__s2;\n  \n  iVar2 = *(int *)(param_1 + 0x15);\n  iVar1 = *(int *)(param_2 + 0x15);\n  if ((iVar1 != 9 && iVar1 != 3) && (iVar2 == 3 || iVar2 == 9)) {\n    return -1;\n  }\n  if ((iVar2 != 3 && iVar2 != 9) && (iVar1 == 9 || iVar1 == 3)) {\n    return 1;\n  }\n  __s = *param_2;\n  __s1 = strrchr(__s,0x2e);\n  __s_00 = *param_1;\n  __s2 = strrchr(__s_00,0x2e);\n  if (__s2 == (char *)0x0) {\n    __s2 = \"\";\n    if (__s1 == (char *)0x0) goto LAB_00405aca;\n  }\n  else if (__s1 == (char *)0x0) {\n    __s1 = \"\";\n  }\n  iVar2 = strcmp(__s1,__s2);\n  if (iVar2 != 0) {\n    return iVar2;\n  }\nLAB_00405aca:\n  iVar2 = strcmp(__s,__s_00);\n  return iVar2;\n}\n\n",
            "funcName": "FUN_00405a30"
        },
        {
            "funcStartAddr": "0x405af0",
            "funcEndAddr": "0x405c5c",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00405af0(char param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  int iVar3;\n  int *piVar4;\n  undefined local_b8 [12];\n  undefined4 uStack_ac;\n  undefined4 uStack_a8;\n  undefined4 uStack_a4;\n  undefined4 local_a0;\n  undefined4 uStack_9c;\n  undefined4 uStack_98;\n  undefined4 uStack_94;\n  undefined4 local_90;\n  undefined4 uStack_8c;\n  undefined4 uStack_88;\n  undefined4 uStack_84;\n  undefined4 local_80;\n  undefined4 uStack_7c;\n  undefined4 uStack_78;\n  undefined4 uStack_74;\n  undefined4 local_70;\n  undefined4 uStack_6c;\n  undefined4 uStack_68;\n  undefined4 uStack_64;\n  undefined4 local_60;\n  undefined4 uStack_5c;\n  undefined4 uStack_58;\n  undefined4 uStack_54;\n  undefined4 local_50;\n  undefined4 uStack_4c;\n  undefined4 uStack_48;\n  undefined4 uStack_44;\n  undefined4 local_40;\n  undefined4 uStack_3c;\n  undefined4 uStack_38;\n  undefined4 uStack_34;\n  int local_30;\n  \n  if (param_1 != '\\0') {\n    piVar2 = &DAT_00419504;\n    iVar3 = 0x14;\n    sigemptyset((sigset_t *)&DAT_006255e0);\n    piVar4 = &DAT_00419504;\n    while( true ) {\n      sigaction(iVar3,(sigaction *)0x0,(sigaction *)local_b8);\n      if (local_b8._0_8_ != (__sighandler_t)0x1) {\n        sigaddset((sigset_t *)&DAT_006255e0,iVar3);\n      }\n      if (piVar4 == (int *)&DAT_00419530) break;\n      iVar3 = *piVar4;\n      piVar4 = piVar4 + 1;\n    }\n    local_30 = 0x10000000;\n    iVar3 = 0x14;\n    local_b8._8_4_ = _DAT_006255e0;\n    uStack_ac = uRam00000000006255e4;\n    uStack_a8 = uRam00000000006255e8;\n    uStack_a4 = uRam00000000006255ec;\n    local_a0 = _DAT_006255f0;\n    uStack_9c = uRam00000000006255f4;\n    uStack_98 = uRam00000000006255f8;\n    uStack_94 = uRam00000000006255fc;\n    local_90 = _DAT_00625600;\n    uStack_8c = uRam0000000000625604;\n    uStack_88 = uRam0000000000625608;\n    uStack_84 = uRam000000000062560c;\n    local_80 = _DAT_00625610;\n    uStack_7c = uRam0000000000625614;\n    uStack_78 = uRam0000000000625618;\n    uStack_74 = uRam000000000062561c;\n    local_70 = _DAT_00625620;\n    uStack_6c = uRam0000000000625624;\n    uStack_68 = uRam0000000000625628;\n    uStack_64 = uRam000000000062562c;\n    local_60 = _DAT_00625630;\n    uStack_5c = uRam0000000000625634;\n    uStack_58 = uRam0000000000625638;\n    uStack_54 = uRam000000000062563c;\n    local_50 = _DAT_00625640;\n    uStack_4c = uRam0000000000625644;\n    uStack_48 = uRam0000000000625648;\n    uStack_44 = uRam000000000062564c;\n    local_40 = _DAT_00625650;\n    uStack_3c = uRam0000000000625654;\n    uStack_38 = uRam0000000000625658;\n    uStack_34 = uRam000000000062565c;\n    while( true ) {\n      iVar1 = sigismember((sigset_t *)&DAT_006255e0,iVar3);\n      if (iVar1 != 0) {\n        local_b8._0_8_ = FUN_00404830;\n        if (iVar3 == 0x14) {\n          local_b8._0_8_ = FUN_00405560;\n        }\n        sigaction(iVar3,(sigaction *)local_b8,(sigaction *)0x0);\n      }\n      if (piVar2 == (int *)&DAT_00419530) break;\n      iVar3 = *piVar2;\n      piVar2 = piVar2 + 1;\n    }\n    return;\n  }\n  piVar2 = &DAT_00419504;\n  iVar3 = 0x14;\n  while( true ) {\n    iVar1 = sigismember((sigset_t *)&DAT_006255e0,iVar3);\n    if (iVar1 != 0) {\n      signal(iVar3,(__sighandler_t)0x0);\n    }\n    if (piVar2 == (int *)&DAT_00419530) break;\n    iVar3 = *piVar2;\n    piVar2 = piVar2 + 1;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00405af0"
        },
        {
            "funcStartAddr": "0x405c70",
            "funcEndAddr": "0x405cb8",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00405c70(void)\n\n{\n  if (_DAT_00624448 != 0) {\n    FUN_00405cd0(&DAT_00624440,&DAT_00624448);\n    return;\n  }\n  FUN_00405cd0(&DAT_00624420,&PTR_DAT_00624428);\n  FUN_00405cd0(&DAT_00624450,&PTR_DAT_00624458);\n  FUN_00405cd0(&DAT_00624430,&PTR_DAT_00624438);\n  return;\n}\n\n",
            "funcName": "FUN_00405c70"
        },
        {
            "funcStartAddr": "0x405cd0",
            "funcEndAddr": "0x405d30",
            "decompiledFuncCode": "\nvoid FUN_00405cd0(size_t *param_1,void **param_2)\n\n{\n  __pid_t _Var1;\n  \n  if (DAT_006256d0 == '\\0') {\n    DAT_006256d0 = '\\x01';\n    _Var1 = tcgetpgrp(1);\n    if (_Var1 < 0) {\n      FUN_00405c70();\n    }\n    else {\n      FUN_00405af0(1);\n      FUN_00405c70();\n    }\n  }\n  fwrite_unlocked(*param_2,*param_1,1,stdout);\n  return;\n}\n\n",
            "funcName": "FUN_00405cd0"
        },
        {
            "funcStartAddr": "0x405d40",
            "funcEndAddr": "0x405d66",
            "decompiledFuncCode": "\nvoid FUN_00405d40(void)\n\n{\n  FUN_00405cd0(&DAT_00624420,&PTR_DAT_00624428);\n  FUN_00405cd0(&DAT_00624430,&PTR_DAT_00624438);\n  return;\n}\n\n",
            "funcName": "FUN_00405d40"
        },
        {
            "funcStartAddr": "0x405d70",
            "funcEndAddr": "0x405e15",
            "decompiledFuncCode": "\nvoid FUN_00405d70(void)\n\n{\n  int __sig;\n  sigset_t sStack_88;\n  \n  if ((DAT_006255d8 == 0) && (DAT_006255d4 == 0)) {\n    return;\n  }\n  do {\n    if (DAT_006256d0 != '\\0') {\n      FUN_00405d40();\n    }\n    fflush_unlocked(stdout);\n    sigprocmask(0,(sigset_t *)&DAT_006255e0,&sStack_88);\n    __sig = DAT_006255d8;\n    if (DAT_006255d4 == 0) {\n      signal(DAT_006255d8,(__sighandler_t)0x0);\n    }\n    else {\n      DAT_006255d4 = DAT_006255d4 + -1;\n      __sig = 0x13;\n    }\n    raise(__sig);\n    sigprocmask(2,&sStack_88,(sigset_t *)0x0);\n  } while ((DAT_006255d8 != 0) || (DAT_006255d4 != 0));\n  return;\n}\n\n",
            "funcName": "FUN_00405d70"
        },
        {
            "funcStartAddr": "0x405e30",
            "funcEndAddr": "0x405e82",
            "decompiledFuncCode": "\nvoid FUN_00405e30(void)\n\n{\n  char cVar1;\n  \n  if (DAT_006256d2 == '\\0') {\n    return;\n  }\n  cVar1 = FUN_00404ae0(4);\n  if (cVar1 == '\\0') {\n    return;\n  }\n  FUN_00405cd0(&DAT_00624420,&PTR_DAT_00624428);\n  FUN_00405cd0(&DAT_00624460,&DAT_00624468);\n  FUN_00405cd0(&DAT_00624430,&PTR_DAT_00624438);\n  return;\n}\n\n",
            "funcName": "FUN_00405e30"
        },
        {
            "funcStartAddr": "0x405ea0",
            "funcEndAddr": "0x406293",
            "decompiledFuncCode": "\nulong FUN_00405ea0(byte **param_1,byte *param_2,undefined8 param_3,int param_4,ulong *param_5,\n                  byte *param_6)\n\n{\n  byte *pbVar1;\n  bool bVar2;\n  bool bVar3;\n  byte bVar4;\n  uint uVar5;\n  int iVar6;\n  size_t sVar7;\n  size_t sVar8;\n  ulong uVar9;\n  byte *pbVar10;\n  ushort **ppuVar11;\n  long lVar12;\n  byte *pbVar13;\n  long lVar14;\n  ulong unaff_RBX;\n  byte *pbVar15;\n  byte *pbVar16;\n  byte *pbVar17;\n  wchar_t local_44;\n  mbstate_t local_40 [2];\n  \n  pbVar10 = *param_1;\n  uVar5 = FUN_00411c20(param_3);\n  bVar3 = (bool)(uVar5 < 3 & DAT_00625698);\n  if (bVar3 == false) {\n    bVar2 = false;\n    if (param_4 == 0) {\n      uVar9 = strlen((char *)param_2);\n    }\n    else {\nLAB_00405ef3:\n      sVar7 = FUN_00411cd0(pbVar10,0x2000,param_2,0xffffffffffffffff,param_3);\n      if (0x1fff < sVar7) {\n        pbVar10 = (byte *)FUN_00412980(sVar7 + 1);\n        FUN_00411cd0(pbVar10,sVar7 + 1,param_2,0xffffffffffffffff,param_3);\n      }\n      bVar3 = true;\n      if (*param_2 == *pbVar10) {\n        sVar8 = strlen((char *)param_2);\n        bVar3 = sVar7 != sVar8;\n      }\n      uVar9 = sVar7;\n      param_2 = pbVar10;\n      if (bVar2) goto LAB_00406056;\n    }\n    if (param_5 == (ulong *)0x0) {\n      if (DAT_00625768 == 0) {\n        *param_6 = 0;\n        goto LAB_004060cf;\n      }\nLAB_004060a7:\n      bVar4 = (DAT_00625769 ^ 1 | bVar3) ^ 1;\n      goto LAB_004060b8;\n    }\n    sVar7 = __ctype_get_mb_cur_max();\n    if (sVar7 < 2) {\n      if (param_2 < param_2 + uVar9) {\n        unaff_RBX = 0;\n        ppuVar11 = __ctype_b_loc();\n        pbVar10 = param_2;\n        do {\n          unaff_RBX = (unaff_RBX + 1) - (ulong)(((*ppuVar11)[*pbVar10] & 0x4000) == 0);\n          pbVar10 = pbVar10 + 1;\n        } while (param_2 + uVar9 != pbVar10);\n      }\n      else {\n        unaff_RBX = 0;\n      }\n    }\n    else {\n      iVar6 = FUN_0040e9b0(param_2,uVar9,0);\n      unaff_RBX = (ulong)iVar6;\n    }\n    if (DAT_00625768 != 0) goto LAB_004060a7;\n    *param_6 = 0;\n  }\n  else {\n    if (param_4 != 0) {\n      bVar2 = true;\n      goto LAB_00405ef3;\n    }\n    sVar7 = strlen((char *)param_2);\n    if (0x1fff < sVar7) {\n      pbVar10 = (byte *)FUN_00412980(sVar7 + 1);\n    }\n    memcpy(pbVar10,param_2,sVar7 + 1);\n    bVar3 = false;\nLAB_00406056:\n    sVar8 = __ctype_get_mb_cur_max();\n    pbVar1 = pbVar10 + sVar7;\n    if (sVar8 < 2) {\n      uVar9 = sVar7;\n      if (pbVar10 < pbVar1) {\n        ppuVar11 = __ctype_b_loc();\n        pbVar13 = pbVar10;\n        do {\n          if ((*(byte *)((long)*ppuVar11 + (ulong)*pbVar13 * 2 + 1) & 0x40) == 0) {\n            *pbVar13 = 0x3f;\n          }\n          pbVar13 = pbVar13 + 1;\n        } while (pbVar13 != pbVar1);\n      }\n    }\n    else if (pbVar10 < pbVar1) {\n      sVar7 = 0;\n      pbVar16 = pbVar10;\n      pbVar13 = pbVar10;\n      do {\n        bVar4 = *pbVar16;\n        if ((char)bVar4 < '@') {\n          if (((char)bVar4 < '%') && (3 < (byte)(bVar4 - 0x20))) goto LAB_00406144;\nLAB_00406114:\n          *pbVar13 = bVar4;\n          pbVar16 = pbVar16 + 1;\n          sVar7 = sVar7 + 1;\n          pbVar13 = pbVar13 + 1;\n        }\n        else {\n          if (('@' < (char)bVar4) && (((char)bVar4 < '`' || ((byte)(bVar4 + 0x9f) < 0x1e))))\n          goto LAB_00406114;\nLAB_00406144:\n          local_40[0] = (mbstate_t)0x0;\n          pbVar15 = pbVar16;\n          pbVar17 = pbVar13;\n          do {\n            pbVar13 = pbVar17 + 1;\n            lVar12 = FUN_00416e80(&local_44,pbVar15,(long)pbVar1 - (long)pbVar15,local_40);\n            if (lVar12 == -1) {\n              *pbVar17 = 0x3f;\n              pbVar16 = pbVar15 + 1;\nLAB_00406244:\n              sVar7 = sVar7 + 1;\n              break;\n            }\n            if (lVar12 == -2) {\n              *pbVar17 = 0x3f;\n              pbVar16 = pbVar1;\n              goto LAB_00406244;\n            }\n            if (lVar12 == 0) {\n              iVar6 = wcwidth(local_44);\n              pbVar16 = pbVar15 + 1;\n              if (iVar6 < 0) goto LAB_00406162;\n              *pbVar17 = *pbVar15;\nLAB_004061d6:\n              sVar7 = sVar7 + (long)iVar6;\n            }\n            else {\n              iVar6 = wcwidth(local_44);\n              pbVar16 = pbVar15 + lVar12;\n              if (-1 < iVar6) {\n                lVar14 = 0;\n                do {\n                  pbVar17[lVar14] = pbVar15[lVar14];\n                  lVar14 = lVar14 + 1;\n                } while (lVar12 != lVar14);\n                pbVar16 = pbVar15 + lVar12;\n                pbVar13 = pbVar17 + lVar12;\n                goto LAB_004061d6;\n              }\nLAB_00406162:\n              *pbVar17 = 0x3f;\n              sVar7 = sVar7 + 1;\n            }\n            iVar6 = mbsinit(local_40);\n            pbVar15 = pbVar16;\n            pbVar17 = pbVar13;\n          } while (iVar6 == 0);\n        }\n      } while (pbVar16 < pbVar1);\n      uVar9 = (long)pbVar13 - (long)pbVar10;\n    }\n    else {\n      sVar7 = 0;\n      uVar9 = 0;\n    }\n    unaff_RBX = sVar7;\n    param_2 = pbVar10;\n    bVar4 = DAT_00625768;\n    if (DAT_00625768 != 0) goto LAB_004060a7;\nLAB_004060b8:\n    *param_6 = bVar4;\n    if (param_5 == (ulong *)0x0) goto LAB_004060cf;\n  }\n  *param_5 = unaff_RBX;\nLAB_004060cf:\n  *param_1 = param_2;\n  return uVar9;\n}\n\n",
            "funcName": "FUN_00405ea0"
        },
        {
            "funcStartAddr": "0x4062d0",
            "funcEndAddr": "0x406664",
            "decompiledFuncCode": "\nlong FUN_004062d0(byte *param_1,undefined8 param_2,undefined4 param_3,long param_4,char param_5,\n                 long param_6,long param_7)\n\n{\n  byte bVar1;\n  byte *pbVar2;\n  char cVar3;\n  size_t sVar4;\n  void *__ptr;\n  char *pcVar5;\n  char *pcVar6;\n  long *plVar7;\n  long lVar8;\n  size_t sVar9;\n  char cVar10;\n  byte local_2041;\n  byte *local_2040;\n  byte local_2038 [8200];\n  \n  local_2040 = local_2038;\n  sVar4 = FUN_00405ea0(&local_2040,param_1,param_2,param_3,0);\n  if ((local_2041 != 0) && (param_5 != '\\0')) {\n    pcVar5 = stdout->_IO_write_ptr;\n    if (pcVar5 < stdout->_IO_write_end) {\n      stdout->_IO_write_ptr = pcVar5 + 1;\n      *pcVar5 = ' ';\n    }\n    else {\n      __overflow(stdout,0x20);\n    }\n    DAT_006255b8 = DAT_006255b8 + 1;\n  }\n  if (param_4 != 0) {\n    cVar3 = FUN_00404ae0(4);\n    if (cVar3 != '\\0') {\n      FUN_00405d40();\n    }\n    FUN_00405cd0(&DAT_00624420,&PTR_DAT_00624428);\n    FUN_00405cd0(param_4,param_4 + 8);\n    FUN_00405cd0(&DAT_00624430,&PTR_DAT_00624438);\n  }\n  cVar3 = DAT_00625769;\n  sVar9 = sVar4;\n  if (param_7 == 0) {\n    lVar8 = 0;\n    cVar3 = '\\0';\n  }\n  else {\n    cVar10 = DAT_00625768;\n    if ((DAT_00625768 == '\\0') || (cVar10 = DAT_00625769, DAT_00625769 == '\\0')) {\n      lVar8 = 0;\n      cVar3 = cVar10;\n    }\n    else if (local_2041 == 0) {\n      bVar1 = *local_2040;\n      pbVar2 = (byte *)stdout->_IO_write_ptr;\n      sVar9 = sVar4 - 2;\n      if (pbVar2 < stdout->_IO_write_end) {\n        lVar8 = 1;\n        stdout->_IO_write_ptr = (char *)(pbVar2 + 1);\n        *pbVar2 = bVar1;\n      }\n      else {\n        __overflow(stdout,(uint)bVar1);\n        lVar8 = 1;\n      }\n    }\n    else {\n      lVar8 = 0;\n      cVar3 = '\\0';\n    }\n    __ptr = (void *)FUN_00404e80(DAT_00625748,0);\n    pcVar5 = (char *)FUN_00404e80(param_7,1);\n    pcVar6 = \"\";\n    if (*pcVar5 != '/') {\n      pcVar6 = \"/\";\n    }\n    __printf_chk(1,&DAT_0041b070,__ptr,pcVar6,pcVar5);\n    free(__ptr);\n    free(pcVar5);\n  }\n  if (param_6 == 0) {\n    fwrite_unlocked(local_2040 + lVar8,1,sVar9,stdout);\n    DAT_006255b8 = DAT_006255b8 + sVar4;\n  }\n  else {\n    if (DAT_006256d8 != '\\0') {\n      plVar7 = *(long **)(param_6 + 0x18);\n      if ((ulong)(*(long *)(param_6 + 0x20) - (long)plVar7) < 8) {\n        _obstack_newchunk(param_6,8);\n        plVar7 = *(long **)(param_6 + 0x18);\n      }\n      *plVar7 = DAT_006255b8;\n      *(long *)(param_6 + 0x18) = *(long *)(param_6 + 0x18) + 8;\n    }\n    fwrite_unlocked(local_2040 + lVar8,1,sVar9,stdout);\n    DAT_006255b8 = DAT_006255b8 + sVar4;\n    if (DAT_006256d8 != '\\0') {\n      plVar7 = *(long **)(param_6 + 0x18);\n      if ((ulong)(*(long *)(param_6 + 0x20) - (long)plVar7) < 8) {\n        _obstack_newchunk(param_6,8);\n        plVar7 = *(long **)(param_6 + 0x18);\n      }\n      *plVar7 = DAT_006255b8;\n      *(long *)(param_6 + 0x18) = *(long *)(param_6 + 0x18) + 8;\n    }\n  }\n  if ((param_7 != 0) && (fwrite_unlocked(&DAT_0041b084,1,6,stdout), cVar3 != '\\0')) {\n    bVar1 = local_2040[sVar4 - 1];\n    pbVar2 = (byte *)stdout->_IO_write_ptr;\n    if (pbVar2 < stdout->_IO_write_end) {\n      stdout->_IO_write_ptr = (char *)(pbVar2 + 1);\n      *pbVar2 = bVar1;\n    }\n    else {\n      __overflow(stdout,(uint)bVar1);\n    }\n  }\n  if ((local_2040 != local_2038) && (local_2040 != param_1)) {\n    free(local_2040);\n  }\n  return local_2041 + sVar4;\n}\n\n",
            "funcName": "FUN_004062d0"
        },
        {
            "funcStartAddr": "0x406690",
            "funcEndAddr": "0x406a9c",
            "decompiledFuncCode": "\nlong FUN_00406690(char **param_1,byte param_2,undefined8 param_3,ulong param_4)\n\n{\n  char cVar1;\n  uint uVar2;\n  int iVar3;\n  long lVar4;\n  size_t sVar5;\n  ulong uVar6;\n  ulong *puVar7;\n  uint uVar8;\n  char *__s;\n  \n  if (param_2 == 0) {\n    __s = *param_1;\n    if (DAT_006256d2 == '\\0') goto LAB_004066c2;\n    uVar8 = (uint)*(byte *)((long)param_1 + 0xb9);\n    if ((DAT_00625750 == '\\0') || (*(byte *)((long)param_1 + 0xb9) == 0)) {\n      uVar6 = (ulong)*(uint *)(param_1 + 6);\n    }\n    else {\n      uVar6 = (ulong)*(uint *)((long)param_1 + 0xac);\n    }\nLAB_0040676b:\n    cVar1 = *(char *)(param_1 + 0x17);\n    uVar2 = uVar8;\n    if (cVar1 == '\\0') goto LAB_0040677b;\nLAB_00406882:\n    uVar2 = (uint)uVar6 & 0xf000;\n    if (uVar2 == 0x8000) {\n      if (((uVar6 & 0x800) != 0) && (cVar1 = FUN_00404ae0(0x10), cVar1 != '\\0')) {\n        lVar4 = 0x100;\n        goto LAB_004067d0;\n      }\n      uVar8 = (uint)uVar6;\n      if (((uVar6 & 0x400) != 0) && (cVar1 = FUN_00404ae0(0x11), cVar1 != '\\0')) {\n        lVar4 = 0x110;\n        goto LAB_004067d0;\n      }\n      cVar1 = FUN_00404ae0(0x15);\n      if ((cVar1 != '\\0') && (*(char *)(param_1 + 0x18) != '\\0')) {\n        lVar4 = 0x150;\n        goto LAB_004067d0;\n      }\n      if (((uVar8 & 0x49) != 0) && (cVar1 = FUN_00404ae0(0xe), cVar1 != '\\0')) {\n        lVar4 = 0xe0;\n        goto LAB_004067d0;\n      }\n      if (((char *)0x1 < param_1[5]) && (cVar1 = FUN_00404ae0(0x16), cVar1 != '\\0')) {\n        lVar4 = 0x160;\n        goto LAB_004067d0;\n      }\n      goto LAB_00406910;\n    }\n    if (uVar2 != 0x4000) {\n      if (uVar2 != 0xa000) {\n        lVar4 = 0x80;\n        if ((((uVar2 != 0x1000) && (lVar4 = 0x90, uVar2 != 0xc000)) &&\n            (lVar4 = 0xa0, uVar2 != 0x6000)) && (lVar4 = 0xb0, uVar2 != 0x2000)) {\n          lVar4 = 0xd0;\n        }\n        goto LAB_004067d0;\n      }\n      uVar6 = 7;\n      goto LAB_00406798;\n    }\n    if (((uint)uVar6 & 0x202) == 0x202) {\n      cVar1 = FUN_00404ae0(0x14);\n      lVar4 = 0x140;\n      if (cVar1 != '\\0') goto LAB_004067d0;\n    }\n    uVar8 = (uint)uVar6;\n    if ((uVar6 & 2) != 0) {\n      cVar1 = FUN_00404ae0(0x13);\n      lVar4 = 0x130;\n      if (cVar1 != '\\0') goto LAB_004067d0;\n    }\n    lVar4 = 0x60;\n    if ((uVar8 & 0x200) != 0) {\n      cVar1 = FUN_00404ae0(0x12);\n      lVar4 = (-(ulong)(cVar1 == '\\0') & 0xffffffffffffff40) + 0x120;\n    }\n  }\n  else {\n    __s = param_1[1];\n    if (DAT_006256d2 == '\\0') goto LAB_004066c2;\n    uVar6 = (ulong)*(uint *)((long)param_1 + 0xac);\n    if (*(char *)((long)param_1 + 0xb9) == '\\0') {\n      cVar1 = FUN_00404ae0(0xc);\n      uVar8 = 0xffffffff;\n      if (cVar1 == '\\0') goto LAB_0040676b;\n      lVar4 = 0xc0;\n      goto LAB_004067d0;\n    }\n    cVar1 = *(char *)(param_1 + 0x17);\n    uVar8 = 0;\n    uVar2 = 0;\n    if (cVar1 != '\\0') goto LAB_00406882;\nLAB_0040677b:\n    uVar8 = uVar2;\n    uVar2 = *(uint *)(&DAT_00419540 + (ulong)*(uint *)(param_1 + 0x15) * 4);\n    uVar6 = (ulong)uVar2;\n    cVar1 = uVar2 == 7;\n    if (uVar2 == 5) {\nLAB_00406910:\n      sVar5 = strlen(__s);\n      for (puVar7 = DAT_006256c8; puVar7 != (ulong *)0x0; puVar7 = (ulong *)puVar7[4]) {\n        uVar6 = *puVar7;\n        if ((uVar6 <= sVar5) &&\n           (iVar3 = strncmp(__s + (sVar5 - uVar6),(char *)puVar7[1],uVar6), iVar3 == 0)) {\n          puVar7 = puVar7 + 2;\n          goto LAB_004067d7;\n        }\n      }\n      lVar4 = 0x50;\n    }\n    else {\nLAB_00406798:\n      if ((uVar8 == 0) && (cVar1 != '\\0')) {\n        lVar4 = 0xd0;\n        if (DAT_00625750 == '\\0') {\n          cVar1 = FUN_00404ae0(0xd);\n          lVar4 = (-(ulong)(cVar1 == '\\0') & 0xffffffffffffffa0) + 0xd0;\n        }\n      }\n      else {\n        lVar4 = uVar6 << 4;\n      }\n    }\n  }\nLAB_004067d0:\n  puVar7 = (ulong *)(&DAT_00624420 + lVar4);\nLAB_004067d7:\n  if (puVar7[1] == 0) {\n    cVar1 = FUN_00404ae0(4);\n    if (cVar1 == '\\0') {\nLAB_004066c2:\n      lVar4 = FUN_004062d0(__s,DAT_00625690,*(undefined4 *)((long)param_1 + 0xc4),0,param_2 ^ 1,\n                           param_3,param_1[2]);\n      FUN_00405d70();\n      return lVar4;\n    }\n    puVar7 = (ulong *)0x0;\n  }\n  lVar4 = FUN_004062d0(__s,DAT_00625690,*(undefined4 *)((long)param_1 + 0xc4),puVar7,param_2 ^ 1,\n                       param_3,param_1[2]);\n  FUN_00405d70();\n  FUN_00405c70();\n  if (DAT_00625670 == 0) {\n    return lVar4;\n  }\n  uVar6 = lVar4 + -1 + param_4;\n  if (param_4 / DAT_00625670 == uVar6 / DAT_00625670) {\n    return lVar4;\n  }\n  FUN_00405cd0(&DAT_00624590,&PTR_DAT_00624598,uVar6 % DAT_00625670);\n  return lVar4;\n}\n\n",
            "funcName": "FUN_00406690"
        },
        {
            "funcStartAddr": "0x406af0",
            "funcEndAddr": "0x406c46",
            "decompiledFuncCode": "\nlong FUN_00406af0(long param_1,undefined8 param_2)\n\n{\n  byte bVar1;\n  long lVar2;\n  undefined1 *puVar3;\n  undefined4 uVar4;\n  undefined8 extraout_RDX;\n  undefined auStack_2a8 [664];\n  \n  FUN_00405e30();\n  if (DAT_006256bc != '\\0') {\n    puVar3 = &DAT_0041b06e;\n    if ((*(char *)(param_1 + 0xb8) != '\\0') && (*(long *)(param_1 + 0x20) != 0)) {\n      puVar3 = (undefined1 *)\n               FUN_0040e520(*(long *)(param_1 + 0x20),auStack_2a8,extraout_RDX,&DAT_0041b06e);\n    }\n    uVar4 = 0;\n    if (DAT_006256f8 != 4) {\n      uVar4 = DAT_00625720;\n    }\n    __printf_chk(1,&DAT_0041b09b,uVar4,puVar3);\n  }\n  if (DAT_006256ec != '\\0') {\n    puVar3 = &DAT_0041b06e;\n    if (*(char *)(param_1 + 0xb8) != '\\0') {\n      puVar3 = (undefined1 *)\n               FUN_0040d5d0(*(undefined8 *)(param_1 + 0x58),auStack_2a8,DAT_006256e8,0x200,\n                            DAT_006256e0);\n    }\n    uVar4 = 0;\n    if (DAT_006256f8 != 4) {\n      uVar4 = DAT_0062571c;\n    }\n    __printf_chk(1,&DAT_0041b09b,uVar4,puVar3);\n  }\n  if (DAT_00625725 != '\\0') {\n    uVar4 = 0;\n    if (DAT_006256f8 != 4) {\n      uVar4 = DAT_00625714;\n    }\n    __printf_chk(1,&DAT_0041b09b,uVar4,*(undefined8 *)(param_1 + 0xb0));\n  }\n  lVar2 = FUN_00406690(param_1,0,0,param_2);\n  if (DAT_006256d4 == 0) {\n    return lVar2;\n  }\n  bVar1 = FUN_004058a0(*(undefined *)(param_1 + 0xb8),*(undefined4 *)(param_1 + 0x30),\n                       *(undefined4 *)(param_1 + 0xa8));\n  return lVar2 + (ulong)bVar1;\n}\n\n",
            "funcName": "FUN_00406af0"
        },
        {
            "funcStartAddr": "0x406c60",
            "funcEndAddr": "0x4075a1",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nvoid FUN_00406c60(long param_1)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  int iVar3;\n  uint uVar4;\n  uint *puVar5;\n  undefined1 *puVar6;\n  size_t sVar7;\n  uint *puVar8;\n  long lVar9;\n  ulong uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  char cVar13;\n  uint uVar14;\n  undefined *puVar15;\n  uint *puVar16;\n  int iVar17;\n  int iVar18;\n  long lVar19;\n  char *pcVar20;\n  bool bVar21;\n  undefined8 local_1330;\n  char local_1324;\n  undefined8 local_1323;\n  ushort local_131b;\n  undefined local_1319;\n  long local_1318;\n  undefined8 local_1310;\n  undefined local_1308 [32];\n  undefined local_12e8 [16];\n  int local_12d8;\n  undefined local_12a8 [16];\n  int local_1298;\n  undefined local_1268 [1008];\n  uint local_e78 [914];\n  \n  if (*(char *)(param_1 + 0xb8) == '\\0') {\n    local_1324 = \"?pcdb-lswd\"[*(uint *)(param_1 + 0xa8)];\n    local_1323 = 0x3f3f3f3f3f3f3f3f;\n    local_131b = 0x3f3f;\n    local_1319 = 0;\n  }\n  else {\n    FUN_0040bb60(param_1 + 0x18,&local_1324);\n  }\n  if (DAT_00625724 == '\\0') {\n    local_131b = local_131b & 0xff;\nLAB_00406ca4:\n    if (DAT_006256f4 == 1) goto LAB_00406fe8;\nLAB_00406cb3:\n    if (DAT_006256f4 == 0) {\n      local_1318 = *(long *)(param_1 + 0x70);\n      local_1310 = *(undefined8 *)(param_1 + 0x78);\n      cVar13 = *(char *)(param_1 + 0xb8);\n      goto joined_r0x0040700e;\n    }\n    if (DAT_006256f4 != 2) {\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n    local_1318 = *(long *)(param_1 + 0x60);\n    local_1310 = *(undefined8 *)(param_1 + 0x68);\n    cVar13 = *(char *)(param_1 + 0xb8);\n    if (DAT_006256bc != '\\0') goto LAB_00407060;\nLAB_00406ce1:\n    puVar16 = local_e78;\n  }\n  else {\n    if (*(int *)(param_1 + 0xbc) == 1) {\n      local_131b = CONCAT11(0x2e,(undefined)local_131b);\n      goto LAB_00406ca4;\n    }\n    if (*(int *)(param_1 + 0xbc) != 2) goto LAB_00406ca4;\n    local_131b = CONCAT11(0x2b,(undefined)local_131b);\n    if (DAT_006256f4 != 1) goto LAB_00406cb3;\nLAB_00406fe8:\n    local_1318 = *(long *)(param_1 + 0x80);\n    local_1310 = *(undefined8 *)(param_1 + 0x88);\n    cVar13 = *(char *)(param_1 + 0xb8);\njoined_r0x0040700e:\n    if (DAT_006256bc == '\\0') goto LAB_00406ce1;\nLAB_00407060:\n    puVar6 = &DAT_0041b06e;\n    if ((cVar13 != '\\0') && (*(long *)(param_1 + 0x20) != 0)) {\n      puVar6 = (undefined1 *)FUN_0040e520(*(long *)(param_1 + 0x20),local_1268);\n    }\n    __sprintf_chk(local_e78,1,0xe3b,&DAT_0041b09b,DAT_00625720,puVar6);\n    puVar16 = local_e78;\n    do {\n      puVar8 = puVar16;\n      uVar14 = *puVar8 + 0xfefefeff & ~*puVar8;\n      uVar4 = uVar14 & 0x80808080;\n      puVar16 = puVar8 + 1;\n    } while (uVar4 == 0);\n    bVar21 = (uVar14 & 0x8080) == 0;\n    if (bVar21) {\n      uVar4 = uVar4 >> 0x10;\n    }\n    if (bVar21) {\n      puVar16 = (uint *)((long)puVar8 + 6);\n    }\n    cVar13 = *(char *)(param_1 + 0xb8);\n    puVar16 = (uint *)((long)puVar16 + (-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)));\n  }\n  if (DAT_006256ec != '\\0') {\n    pcVar20 = \"?\";\n    if (cVar13 != '\\0') {\n      pcVar20 = (char *)FUN_0040d5d0(*(undefined8 *)(param_1 + 0x58),local_1268,DAT_006256e8,0x200,\n                                     DAT_006256e0);\n    }\n    iVar17 = DAT_0062571c;\n    iVar3 = FUN_0040eb70(pcVar20,0);\n    if (0 < iVar17 - iVar3) {\n      uVar4 = (iVar17 - iVar3) - 1;\n      puVar8 = puVar16;\n      do {\n        puVar5 = (uint *)((long)puVar8 + 1);\n        *(char *)puVar8 = ' ';\n        puVar8 = puVar5;\n      } while (puVar5 != (uint *)((long)puVar16 + (ulong)uVar4 + 1));\n      puVar16 = (uint *)((long)puVar16 + (long)(int)uVar4 + 1);\n    }\n    do {\n      puVar8 = puVar16;\n      cVar13 = *pcVar20;\n      puVar16 = (uint *)((long)puVar8 + 1);\n      *(char *)puVar8 = cVar13;\n      pcVar20 = pcVar20 + 1;\n    } while (cVar13 != '\\0');\n    *(char *)puVar8 = ' ';\n    cVar13 = *(char *)(param_1 + 0xb8);\n  }\n  puVar6 = &DAT_0041b06e;\n  if (cVar13 != '\\0') {\n    puVar6 = (undefined1 *)FUN_0040e520(*(undefined8 *)(param_1 + 0x28),local_1268);\n  }\n  __sprintf_chk(puVar16,1,0xffffffffffffffff,\"%s %*s \",&local_1324,DAT_00625718,puVar6);\n  sVar7 = strlen((char *)puVar16);\n  puVar16 = (uint *)((long)puVar16 + sVar7);\n  if (DAT_006256d8 != '\\0') {\n    fwrite_unlocked(&DAT_0041b093,1,2,stdout);\n    DAT_006255b8 = DAT_006255b8 + 2;\n  }\n  if ((((DAT_006245a9 != '\\0') || (DAT_006245a8 != '\\0')) || (DAT_006256ee != '\\0')) ||\n     (DAT_00625725 != '\\0')) {\n    fputs_unlocked((char *)local_e78,stdout);\n    DAT_006255b8 = (undefined *)((long)puVar16 + ((long)DAT_006255b8 - (long)local_e78));\n    if (DAT_006245a9 != '\\0') {\n      FUN_00405520(*(undefined4 *)(param_1 + 0x34),DAT_00625710,*(undefined *)(param_1 + 0xb8));\n    }\n    uVar2 = DAT_0062570c;\n    if (DAT_006245a8 != '\\0') {\n      puVar6 = &DAT_0041b06e;\n      uVar1 = *(undefined4 *)(param_1 + 0x38);\n      if ((*(char *)(param_1 + 0xb8) != '\\0') && (puVar6 = (undefined1 *)0x0, DAT_006256ed == '\\0'))\n      {\n        puVar6 = (undefined1 *)FUN_0040e2f0(uVar1);\n      }\n      FUN_00405460(puVar6,uVar1,uVar2);\n    }\n    if (DAT_006256ee != '\\0') {\n      FUN_00405520(*(undefined4 *)(param_1 + 0x34),DAT_00625708,*(undefined *)(param_1 + 0xb8));\n    }\n    puVar16 = local_e78;\n    if (DAT_00625725 != '\\0') {\n      FUN_00405460(*(undefined8 *)(param_1 + 0xb0),0,DAT_00625714);\n    }\n  }\n  if (*(char *)(param_1 + 0xb8) == '\\0') {\n    pcVar20 = \"?\";\nLAB_00406e76:\n    iVar17 = DAT_006256fc;\n    iVar3 = FUN_0040eb70(pcVar20,0);\n    if (0 < iVar17 - iVar3) {\n      uVar4 = (iVar17 - iVar3) - 1;\n      puVar8 = puVar16;\n      do {\n        puVar5 = (uint *)((long)puVar8 + 1);\n        *(undefined *)puVar8 = 0x20;\n        puVar8 = puVar5;\n      } while (puVar5 != (uint *)((long)puVar16 + (ulong)uVar4 + 1));\n      puVar16 = (uint *)((long)puVar16 + (long)(int)uVar4 + 1);\n    }\n    do {\n      puVar8 = puVar16;\n      cVar13 = *pcVar20;\n      puVar16 = (uint *)((long)puVar8 + 1);\n      *(char *)puVar8 = cVar13;\n      pcVar20 = pcVar20 + 1;\n    } while (cVar13 != '\\0');\n    *(undefined *)puVar8 = 0x20;\n  }\n  else {\n    if ((*(uint *)(param_1 + 0x30) & 0xb000) != 0x2000) {\n      pcVar20 = (char *)FUN_0040d5d0(*(undefined8 *)(param_1 + 0x48),local_1268,DAT_006256dc,1,\n                                     DAT_006245a0);\n      goto LAB_00406e76;\n    }\n    iVar18 = DAT_006256fc - (DAT_00625704 + 2 + DAT_00625700);\n    uVar11 = FUN_0040e520((uint)((*(ulong *)(param_1 + 0x40) >> 0x14) << 8) |\n                          (uint)*(ulong *)(param_1 + 0x40) & 0xff,local_1268);\n    iVar17 = DAT_00625700;\n    uVar12 = FUN_0040e520((uint)((ulong)*(undefined8 *)(param_1 + 0x40) >> 0x20) & 0xfffff000 |\n                          (uint)((ulong)*(undefined8 *)(param_1 + 0x40) >> 8) & 0xfff,local_12a8);\n    iVar3 = 0;\n    if (-1 < iVar18) {\n      iVar3 = iVar18;\n    }\n    __sprintf_chk(puVar16,1,0xffffffffffffffff,&DAT_0041b096,iVar3 + DAT_00625704,uVar12,iVar17,\n                  uVar11);\n    puVar16 = (uint *)((long)puVar16 + (long)DAT_006256fc + 1);\n  }\n  *(undefined *)puVar16 = 1;\n  if (*(char *)(param_1 + 0xb8) == '\\0') {\nLAB_00406ee3:\n    puVar6 = &DAT_0041b06e;\njoined_r0x004074f4:\n    if (DAT_00624404 < 0) {\n      local_1330 = 0;\n      lVar19 = FUN_004176f0(DAT_00625668,&local_1330,local_12a8);\n      if (lVar19 != 0) {\n        puVar15 = PTR_DAT_00624410;\n        if (DAT_00624788 != '\\0') {\n          puVar15 = &DAT_006247a0 + (long)local_1298 * 0x80;\n        }\n        lVar19 = FUN_00410650(local_1268,0x3e9,puVar15,local_12a8,DAT_00625668,0);\n        if (lVar19 != 0) {\n          DAT_00624404 = FUN_0040e9b0(local_1268,lVar19,0);\n        }\n      }\n      if (DAT_00624404 < 0) {\n        DAT_00624404 = 0;\n      }\n    }\n    __sprintf_chk(puVar16,1,0xffffffffffffffff,&DAT_0041b09b,DAT_00624404,puVar6);\n    sVar7 = strlen((char *)puVar16);\n    lVar19 = (long)puVar16 + sVar7;\n  }\n  else {\n    lVar19 = FUN_004176f0(DAT_00625668,&local_1318,local_12e8);\n    if (lVar19 == 0) {\nLAB_00407218:\n      if (*(char *)puVar16 != '\\0') {\n        if (*(char *)(param_1 + 0xb8) == '\\0') goto LAB_00406ee3;\n        puVar6 = (undefined1 *)FUN_0040e480(local_1318,local_1308);\n        goto joined_r0x004074f4;\n      }\n    }\n    else {\n      if (DAT_00625730 < local_1318) {\nLAB_00407595:\n        FUN_0040c150(&DAT_00625730);\n        iVar3 = (int)DAT_00625738;\n        lVar19 = DAT_00625730 + -0xf0c2ac;\n        if (lVar19 < local_1318) {\nLAB_004073b4:\n          if (local_1318 < DAT_00625730) goto LAB_00407608;\n          uVar10 = 0;\n          if (local_1318 <= DAT_00625730) {\n            iVar17 = (int)local_1310;\n            goto LAB_004073cd;\n          }\n        }\n        else {\nLAB_004073a0:\n          iVar3 = (int)DAT_00625738;\n          uVar10 = 0;\n          if ((lVar19 <= local_1318) && (iVar3 - (int)local_1310 < 0)) goto LAB_004073b4;\n        }\n      }\n      else if (local_1318 < DAT_00625730) {\n        lVar19 = DAT_00625730 + -0xf0c2ac;\n        if (local_1318 <= lVar19) goto LAB_004073a0;\nLAB_00407608:\n        uVar10 = 1;\n      }\n      else {\n        iVar3 = (int)DAT_00625738;\n        iVar17 = (int)local_1310;\n        if (iVar3 - iVar17 < 0) goto LAB_00407595;\n        if (local_1318 <= DAT_00625730 + -0xf0c2ac) {\n          uVar10 = 0;\n          goto LAB_004071c6;\n        }\nLAB_004073cd:\n        uVar10 = (ulong)((uint)(iVar17 - iVar3) >> 0x1f);\n      }\nLAB_004071c6:\n      if (DAT_00624788 == '\\0') {\n        puVar15 = (&PTR_DAT_00624410)[uVar10];\n      }\n      else {\n        puVar15 = &DAT_006247a0 + ((long)local_12d8 + uVar10 * 0xc) * 0x80;\n      }\n      lVar19 = FUN_00410650(puVar16,0x3e9,puVar15,local_12e8,DAT_00625668);\n      if (lVar19 == 0) goto LAB_00407218;\n      puVar16 = (uint *)((long)puVar16 + lVar19);\n    }\n    lVar19 = (long)puVar16 + 1;\n    *(undefined2 *)puVar16 = 0x20;\n  }\n  lVar19 = lVar19 - (long)local_e78;\n  fputs_unlocked((char *)local_e78,stdout);\n  DAT_006255b8 = DAT_006255b8 + lVar19;\n  lVar9 = FUN_00406690(param_1,0,&DAT_00625560,lVar19);\n  if (*(int *)(param_1 + 0xa8) == 6) {\n    if (*(long *)(param_1 + 8) != 0) {\n      fwrite_unlocked(&DAT_0041b0a0,1,4,stdout);\n      DAT_006255b8 = DAT_006255b8 + 4;\n      FUN_00406690(param_1,1,0,lVar19 + 4 + lVar9);\n      if (DAT_006256d4 != 0) {\n        FUN_004058a0(1,*(undefined4 *)(param_1 + 0xac),0);\n      }\n    }\n  }\n  else if (DAT_006256d4 != 0) {\n    FUN_004058a0(*(undefined *)(param_1 + 0xb8),*(undefined4 *)(param_1 + 0x30));\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00406c60"
        },
        {
            "funcStartAddr": "0x407630",
            "funcEndAddr": "0x40768a",
            "decompiledFuncCode": "\nlong FUN_00407630(undefined *param_1,undefined8 param_2,undefined4 param_3)\n\n{\n  byte local_2029;\n  undefined *local_2028;\n  long local_2020;\n  undefined local_2018 [8200];\n  \n  local_2028 = local_2018;\n  FUN_00405ea0(&local_2028,param_1,param_2,param_3,&local_2020,&local_2029);\n  if ((local_2028 != local_2018) && (local_2028 != param_1)) {\n    free(local_2028);\n  }\n  return (ulong)local_2029 + local_2020;\n}\n\n",
            "funcName": "FUN_00407630"
        },
        {
            "funcStartAddr": "0x407690",
            "funcEndAddr": "0x4077f1",
            "decompiledFuncCode": "\nlong FUN_00407690(undefined8 *param_1)\n\n{\n  char cVar1;\n  long lVar2;\n  size_t sVar3;\n  char *pcVar4;\n  long lVar5;\n  undefined auStack_2a8 [664];\n  \n  if (DAT_006256bc == '\\0') {\n    lVar5 = 0;\nLAB_00407752:\n    if (DAT_006256ec != '\\0') {\n      if (DAT_006256f8 != 4) goto LAB_004076ce;\n      lVar2 = 2;\n      if (*(char *)(param_1 + 0x17) != '\\0') {\n        pcVar4 = (char *)FUN_0040d5d0(param_1[0xb],auStack_2a8,DAT_006256e8,0x200,DAT_006256e0);\n        sVar3 = strlen(pcVar4);\n        lVar2 = sVar3 + 1;\n      }\nLAB_004076d9:\n      lVar5 = lVar5 + lVar2;\n    }\n    if (DAT_00625725 == '\\0') goto LAB_00407700;\n    if (DAT_006256f8 != 4) goto LAB_004076f2;\n    sVar3 = strlen((char *)param_1[0x16]);\n  }\n  else {\n    if (DAT_006256f8 == 4) {\n      pcVar4 = (char *)FUN_0040e520(param_1[4],auStack_2a8);\n      sVar3 = strlen(pcVar4);\n      lVar5 = sVar3 + 1;\n      goto LAB_00407752;\n    }\n    lVar5 = (long)DAT_00625720 + 1;\n    if (DAT_006256ec != '\\0') {\nLAB_004076ce:\n      lVar2 = (long)DAT_0062571c + 1;\n      goto LAB_004076d9;\n    }\n    if (DAT_00625725 == '\\0') goto LAB_00407700;\nLAB_004076f2:\n    sVar3 = (size_t)DAT_00625714;\n  }\n  lVar5 = lVar5 + sVar3 + 1;\nLAB_00407700:\n  lVar2 = FUN_00407630(*param_1,DAT_00625690,*(undefined4 *)((long)param_1 + 0xc4));\n  lVar5 = lVar5 + lVar2;\n  if (DAT_006256d4 != 0) {\n    cVar1 = FUN_004057b0(*(undefined *)(param_1 + 0x17),*(undefined4 *)(param_1 + 6),\n                         *(undefined4 *)(param_1 + 0x15));\n    lVar5 = lVar5 + (ulong)(cVar1 != '\\0');\n  }\n  return lVar5;\n}\n\n",
            "funcName": "FUN_00407690"
        },
        {
            "funcStartAddr": "0x407800",
            "funcEndAddr": "0x407ad5",
            "decompiledFuncCode": "\nulong FUN_00407800(char param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  undefined8 *puVar2;\n  ulong *puVar3;\n  char cVar4;\n  ulong uVar5;\n  long lVar6;\n  undefined8 *puVar7;\n  ulong uVar8;\n  ulong uVar9;\n  ulong uVar10;\n  long lVar11;\n  ulong uVar12;\n  ulong uVar13;\n  ulong uVar14;\n  ulong uVar15;\n  char *pcVar16;\n  undefined auVar17 [16];\n  \n  uVar13 = DAT_006255c0;\n  if (DAT_00625770 <= DAT_006255c0) {\n    uVar13 = DAT_00625770;\n  }\n  uVar14 = DAT_006246a0;\n  if (DAT_006246a0 < uVar13) {\n    pcVar16 = DAT_006255c8;\n    if (uVar13 < DAT_006255c0 >> 1) {\n      uVar10 = (ulong)(SUB168(ZEXT816(0x30) * ZEXT816(uVar13) >> 0x40,0) != 0);\n      if ((SUB168(ZEXT816(0x30) * ZEXT816(uVar13),0) < 0) || (uVar10 != 0)) goto LAB_00407adb;\n      uVar14 = uVar13 * 2;\n      auVar17 = FUN_004129e0(DAT_006255c8,uVar13 * 0x30);\n    }\n    else {\n      uVar10 = (ulong)(SUB168(ZEXT816(0x18) * ZEXT816(DAT_006255c0) >> 0x40,0) != 0);\n      if ((SUB168(ZEXT816(0x18) * ZEXT816(DAT_006255c0),0) < 0) || (uVar10 != 0)) goto LAB_00407adb;\n      auVar17 = FUN_004129e0(DAT_006255c8,DAT_006255c0 * 0x18);\n      uVar14 = DAT_006255c0;\n    }\n    uVar10 = SUB168(auVar17 >> 0x40,0);\n    DAT_006255c8 = SUB168(auVar17,0);\n    pcVar16 = (char *)(uVar14 - DAT_006246a0);\n    uVar5 = DAT_006246a0 + 1 + uVar14;\n    param_2 = (long)pcVar16 * uVar5;\n    if ((CARRY8(DAT_006246a0 + 1,uVar14) == false) &&\n       (uVar10 = param_2 % (ulong)pcVar16, uVar5 == param_2 / (ulong)pcVar16)) {\n      uVar5 = param_2 >> 1;\n      param_2 = param_2 >> 0x3e;\n      pcVar16 = (char *)(uVar5 << 3);\n      if ((-1 < (long)pcVar16) && (param_2 == 0)) {\n        lVar6 = FUN_00412980();\n        pcVar16 = DAT_006255c8;\n        if (DAT_006246a0 < uVar14) {\n          lVar11 = DAT_006246a0 * 8 + 8;\n          do {\n            *(long *)(pcVar16 + lVar11 * 3 + -8) = lVar6;\n            lVar6 = lVar6 + lVar11;\n            lVar11 = lVar11 + 8;\n          } while (uVar14 * 8 + 8 != lVar11);\n        }\n        goto LAB_00407933;\n      }\n    }\nLAB_00407adb:\n                    /* WARNING: Subroutine does not return */\n    FUN_00412bd0(pcVar16,param_2,uVar10);\n  }\nLAB_00407933:\n  DAT_006246a0 = uVar14;\n  uVar14 = DAT_00625770;\n  pcVar16 = DAT_006255c8;\n  if (uVar13 != 0) {\n    lVar11 = 0;\n    lVar6 = 3;\n    do {\n      puVar7 = *(undefined8 **)(pcVar16 + lVar6 * 8 + -8);\n      pcVar16[lVar6 * 8 + -0x18] = '\\x01';\n      lVar11 = lVar11 + 8;\n      *(long *)(pcVar16 + lVar6 * 8 + -0x10) = lVar6;\n      puVar2 = (undefined8 *)((long)puVar7 + lVar11);\n      do {\n        *puVar7 = 3;\n        puVar7 = puVar7 + 1;\n      } while (puVar2 != puVar7);\n      lVar6 = lVar6 + 3;\n    } while (lVar6 != uVar13 * 3 + 3);\n  }\n  uVar10 = 0;\n  if (uVar14 != 0) {\n    do {\n      uVar8 = FUN_00407690(*(undefined8 *)(DAT_00625760 + uVar10 * 8));\n      uVar5 = DAT_00625770;\n      uVar14 = DAT_00625670;\n      if (uVar13 != 0) {\n        pcVar16 = DAT_006255c8;\n        uVar15 = 0;\n        do {\n          uVar1 = uVar15 + 1;\n          if (*pcVar16 != '\\0') {\n            if (param_1 == '\\0') {\n              uVar12 = uVar10 % uVar1;\n            }\n            else {\n              uVar12 = SUB168(ZEXT816(uVar10) /\n                              (ZEXT816((uVar5 - 1) + uVar1) / ZEXT816(uVar1) &\n                              (undefined  [16])0xffffffffffffffff),0);\n            }\n            uVar9 = uVar8;\n            if (uVar12 != uVar15) {\n              uVar9 = uVar8 + 2;\n            }\n            puVar3 = (ulong *)(*(long *)(pcVar16 + 0x10) + uVar12 * 8);\n            uVar15 = *puVar3;\n            if (uVar15 < uVar9) {\n              *(ulong *)(pcVar16 + 8) = (*(long *)(pcVar16 + 8) - uVar15) + uVar9;\n              *puVar3 = uVar9;\n              *pcVar16 = *(ulong *)(pcVar16 + 8) < uVar14;\n            }\n          }\n          pcVar16 = pcVar16 + 0x18;\n          uVar15 = uVar1;\n        } while (uVar13 != uVar1);\n      }\n      uVar10 = uVar10 + 1;\n    } while (uVar10 < uVar5);\n  }\n  if ((1 < uVar13) && (DAT_006255c8[uVar13 * 0x18 + -0x18] == '\\0')) {\n    pcVar16 = DAT_006255c8 + uVar13 * 0x18 + -0x30;\n    do {\n      uVar13 = uVar13 - 1;\n      if (uVar13 == 1) {\n        return 1;\n      }\n      cVar4 = *pcVar16;\n      pcVar16 = pcVar16 + -0x18;\n    } while (cVar4 == '\\0');\n  }\n  return uVar13;\n}\n\n",
            "funcName": "FUN_00407800"
        },
        {
            "funcStartAddr": "0x407ae0",
            "funcEndAddr": "0x407c66",
            "decompiledFuncCode": "\nvoid FUN_00407ae0(char param_1)\n\n{\n  ulong uVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  ulong uVar4;\n  int iVar5;\n  char cVar6;\n  ulong uVar7;\n  ulong uVar8;\n  \n  if (DAT_00625770 != 0) {\n    uVar7 = 0;\n    uVar8 = 0;\n    do {\n      uVar2 = *(undefined8 *)(DAT_00625760 + uVar7 * 8);\n      if (DAT_00625670 == 0) {\n        uVar4 = uVar8;\n        if (uVar7 != 0) {\n          uVar1 = uVar8 + 2;\nLAB_00407b88:\n          uVar4 = uVar1;\n          uVar8 = uVar8 + 2;\n          iVar5 = 0x20;\n          cVar6 = ' ';\n          goto LAB_00407b92;\n        }\n      }\n      else {\n        uVar4 = FUN_00407690(uVar2);\n        if (uVar7 == 0) {\n          uVar4 = uVar8 + uVar4;\n        }\n        else {\n          uVar1 = uVar4 + uVar8 + 2;\n          if ((DAT_00625670 == 0) || ((uVar1 < DAT_00625670 && (uVar8 <= -uVar4 - 3))))\n          goto LAB_00407b88;\n          iVar5 = 10;\n          cVar6 = '\\n';\n          uVar8 = 0;\nLAB_00407b92:\n          pcVar3 = stdout->_IO_write_ptr;\n          if (pcVar3 < stdout->_IO_write_end) {\n            stdout->_IO_write_ptr = pcVar3 + 1;\n            *pcVar3 = param_1;\n          }\n          else {\n            __overflow(stdout,(int)param_1);\n          }\n          pcVar3 = stdout->_IO_write_ptr;\n          if (pcVar3 < stdout->_IO_write_end) {\n            stdout->_IO_write_ptr = pcVar3 + 1;\n            *pcVar3 = cVar6;\n          }\n          else {\n            __overflow(stdout,iVar5);\n          }\n        }\n      }\n      uVar7 = uVar7 + 1;\n      FUN_00406af0(uVar2,uVar8);\n      uVar8 = uVar4;\n    } while (uVar7 < DAT_00625770);\n  }\n  pcVar3 = stdout->_IO_write_ptr;\n  if (stdout->_IO_write_end <= pcVar3) {\n    __overflow(stdout,10);\n    return;\n  }\n  stdout->_IO_write_ptr = pcVar3 + 1;\n  *pcVar3 = '\\n';\n  return;\n}\n\n",
            "funcName": "FUN_00407ae0"
        },
        {
            "funcStartAddr": "0x407ca0",
            "funcEndAddr": "0x407ffe",
            "decompiledFuncCode": "\nvoid FUN_00407ca0(void)\n\n{\n  long lVar1;\n  char *pcVar2;\n  ulong uVar3;\n  long lVar4;\n  ulong uVar5;\n  ulong uVar6;\n  long lVar7;\n  long lVar8;\n  undefined8 uVar9;\n  long lVar10;\n  ulong local_48;\n  \n  switch(DAT_006256f8) {\n  case 0:\n    uVar3 = 0;\n    if (DAT_00625770 == 0) {\n      return;\n    }\n    do {\n      FUN_00405e30();\n      FUN_00406c60(DAT_00625760[uVar3]);\n      pcVar2 = stdout->_IO_write_ptr;\n      if (pcVar2 < stdout->_IO_write_end) {\n        stdout->_IO_write_ptr = pcVar2 + 1;\n        *pcVar2 = '\\n';\n      }\n      else {\n        __overflow(stdout,10);\n      }\n      DAT_006255b8 = DAT_006255b8 + 1;\n      uVar3 = uVar3 + 1;\n    } while (uVar3 < DAT_00625770);\n    return;\n  case 1:\n    uVar3 = 0;\n    if (DAT_00625770 != 0) {\n      do {\n        FUN_00406af0(DAT_00625760[uVar3],0);\n        pcVar2 = stdout->_IO_write_ptr;\n        if (pcVar2 < stdout->_IO_write_end) {\n          stdout->_IO_write_ptr = pcVar2 + 1;\n          *pcVar2 = '\\n';\n        }\n        else {\n          __overflow(stdout,10);\n        }\n        uVar3 = uVar3 + 1;\n      } while (uVar3 < DAT_00625770);\n    }\n    return;\n  case 2:\n    if (DAT_00625670 != 0) {\n      uVar3 = FUN_00407800(1);\n      local_48 = 0;\n      lVar1 = DAT_006255c8 + uVar3 * 0x18;\n      uVar3 = (ulong)(DAT_00625770 % uVar3 != 0) + DAT_00625770 / uVar3;\n      if (uVar3 == 0) {\n        return;\n      }\n      do {\n        lVar4 = 0;\n        lVar8 = 0;\n        uVar6 = local_48;\n        while( true ) {\n          uVar9 = DAT_00625760[uVar6];\n          lVar10 = FUN_00407690(uVar9);\n          lVar7 = *(long *)(*(long *)(lVar1 + -8) + lVar4);\n          lVar4 = lVar4 + 8;\n          FUN_00406af0(uVar9,lVar8);\n          uVar6 = uVar6 + uVar3;\n          if (DAT_00625770 <= uVar6) break;\n          lVar7 = lVar7 + lVar8;\n          FUN_004052c0(lVar10 + lVar8,lVar7);\n          lVar8 = lVar7;\n        }\n        pcVar2 = stdout->_IO_write_ptr;\n        if (pcVar2 < stdout->_IO_write_end) {\n          stdout->_IO_write_ptr = pcVar2 + 1;\n          *pcVar2 = '\\n';\n        }\n        else {\n          __overflow(stdout,10);\n        }\n        local_48 = local_48 + 1;\n      } while (uVar3 != local_48);\n      return;\n    }\n    break;\n  case 3:\n    if (DAT_00625670 != 0) {\n      uVar3 = FUN_00407800(0);\n      lVar1 = DAT_006255c8 + -0x18 + uVar3 * 0x18;\n      uVar9 = *DAT_00625760;\n      lVar4 = FUN_00407690(uVar9);\n      lVar8 = **(long **)(lVar1 + 0x10);\n      FUN_00406af0(uVar9,0);\n      if (1 < DAT_00625770) {\n        uVar6 = 1;\n        lVar7 = 0;\n        do {\n          uVar5 = uVar6 % uVar3;\n          if (uVar5 == 0) {\n            pcVar2 = stdout->_IO_write_ptr;\n            if (pcVar2 < stdout->_IO_write_end) {\n              lVar10 = 0;\n              stdout->_IO_write_ptr = pcVar2 + 1;\n              *pcVar2 = '\\n';\n            }\n            else {\n              lVar10 = 0;\n              __overflow(stdout,10);\n            }\n          }\n          else {\n            lVar10 = lVar8 + lVar7;\n            FUN_004052c0(lVar7 + lVar4,lVar10);\n          }\n          uVar9 = DAT_00625760[uVar6];\n          uVar6 = uVar6 + 1;\n          FUN_00406af0(uVar9,lVar10);\n          lVar4 = FUN_00407690(uVar9);\n          lVar8 = *(long *)(*(long *)(lVar1 + 0x10) + uVar5 * 8);\n          lVar7 = lVar10;\n        } while (uVar6 < DAT_00625770);\n      }\n      pcVar2 = stdout->_IO_write_ptr;\n      if (pcVar2 < stdout->_IO_write_end) {\n        stdout->_IO_write_ptr = pcVar2 + 1;\n        *pcVar2 = '\\n';\n        return;\n      }\n      __overflow(stdout,10);\n      return;\n    }\n    break;\n  case 4:\n    uVar9 = 0x2c;\n    goto LAB_00407dcd;\n  default:\n    return;\n  }\n  uVar9 = 0x20;\nLAB_00407dcd:\n  FUN_00407ae0(uVar9);\n  return;\n}\n\n",
            "funcName": "FUN_00407ca0"
        },
        {
            "funcStartAddr": "0x408040",
            "funcEndAddr": "0x4080a3",
            "decompiledFuncCode": "\nuint FUN_00408040(char **param_1,char **param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  char *pcVar3;\n  char *pcVar4;\n  uint uVar5;\n  bool bVar6;\n  \n  iVar1 = *(int *)(param_1 + 0x15);\n  iVar2 = *(int *)(param_2 + 0x15);\n  if ((iVar2 == 9 || iVar2 == 3) || (iVar1 != 3 && iVar1 != 9)) {\n    if ((iVar1 != 3 && iVar1 != 9) && (iVar2 == 9 || iVar2 == 3)) {\n      return 1;\n    }\n    pcVar3 = param_1[9];\n    pcVar4 = param_2[9];\n    bVar6 = param_2[9] == pcVar3;\n    if (bVar6 || (long)pcVar4 < (long)pcVar3) {\n      if (bVar6) {\n        uVar5 = strcmp(*param_2,*param_1);\n        return uVar5;\n      }\n      return (uint)((long)pcVar4 < (long)pcVar3);\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_00408040"
        },
        {
            "funcStartAddr": "0x4080c0",
            "funcEndAddr": "0x4080e4",
            "decompiledFuncCode": "\nuint FUN_004080c0(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  uint uVar3;\n  int *piVar4;\n  bool bVar5;\n  \n  pcVar1 = param_2[9];\n  pcVar2 = param_1[9];\n  bVar5 = param_1[9] != pcVar1;\n  if (bVar5 && (long)pcVar1 <= (long)pcVar2) {\n    return 0xffffffff;\n  }\n  if (!bVar5) {\n    pcVar1 = *param_2;\n    pcVar2 = *param_1;\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    uVar3 = strcoll(pcVar2,pcVar1);\n    return uVar3;\n  }\n  return (uint)((long)pcVar2 < (long)pcVar1);\n}\n\n",
            "funcName": "FUN_004080c0"
        },
        {
            "funcStartAddr": "0x408100",
            "funcEndAddr": "0x408160",
            "decompiledFuncCode": "\nuint FUN_00408100(char **param_1,char **param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  char *pcVar3;\n  char *pcVar4;\n  uint uVar5;\n  int *piVar6;\n  bool bVar7;\n  \n  iVar1 = *(int *)(param_1 + 0x15);\n  iVar2 = *(int *)(param_2 + 0x15);\n  if ((iVar2 == 9 || iVar2 == 3) || (iVar1 != 3 && iVar1 != 9)) {\n    if ((iVar1 != 3 && iVar1 != 9) && (iVar2 == 9 || iVar2 == 3)) {\n      return 1;\n    }\n    pcVar3 = param_2[9];\n    pcVar4 = param_1[9];\n    bVar7 = param_1[9] == pcVar3;\n    if (bVar7 || (long)pcVar4 < (long)pcVar3) {\n      if (bVar7) {\n        pcVar3 = *param_2;\n        pcVar4 = *param_1;\n        piVar6 = __errno_location();\n        *piVar6 = 0;\n        uVar5 = strcoll(pcVar4,pcVar3);\n        return uVar5;\n      }\n      return (uint)((long)pcVar4 < (long)pcVar3);\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_00408100"
        },
        {
            "funcStartAddr": "0x408180",
            "funcEndAddr": "0x4081e0",
            "decompiledFuncCode": "\nuint FUN_00408180(char **param_1,char **param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  char *pcVar3;\n  char *pcVar4;\n  uint uVar5;\n  bool bVar6;\n  \n  iVar1 = *(int *)(param_1 + 0x15);\n  iVar2 = *(int *)(param_2 + 0x15);\n  if ((iVar2 == 9 || iVar2 == 3) || (iVar1 != 3 && iVar1 != 9)) {\n    if ((iVar1 != 3 && iVar1 != 9) && (iVar2 == 9 || iVar2 == 3)) {\n      return 1;\n    }\n    pcVar3 = param_2[9];\n    pcVar4 = param_1[9];\n    bVar6 = param_1[9] == pcVar3;\n    if (bVar6 || (long)pcVar4 < (long)pcVar3) {\n      if (bVar6) {\n        uVar5 = strcmp(*param_1,*param_2);\n        return uVar5;\n      }\n      return (uint)((long)pcVar4 < (long)pcVar3);\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_00408180"
        },
        {
            "funcStartAddr": "0x408200",
            "funcEndAddr": "0x408263",
            "decompiledFuncCode": "\nuint FUN_00408200(char **param_1,char **param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  char *pcVar3;\n  char *pcVar4;\n  uint uVar5;\n  int *piVar6;\n  bool bVar7;\n  \n  iVar1 = *(int *)(param_1 + 0x15);\n  iVar2 = *(int *)(param_2 + 0x15);\n  if ((iVar2 == 9 || iVar2 == 3) || (iVar1 != 3 && iVar1 != 9)) {\n    if ((iVar1 != 3 && iVar1 != 9) && (iVar2 == 9 || iVar2 == 3)) {\n      return 1;\n    }\n    pcVar3 = param_1[9];\n    pcVar4 = param_2[9];\n    bVar7 = param_2[9] == pcVar3;\n    if (bVar7 || (long)pcVar4 < (long)pcVar3) {\n      if (bVar7) {\n        pcVar3 = *param_1;\n        pcVar4 = *param_2;\n        piVar6 = __errno_location();\n        *piVar6 = 0;\n        uVar5 = strcoll(pcVar4,pcVar3);\n        return uVar5;\n      }\n      return (uint)((long)pcVar4 < (long)pcVar3);\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_00408200"
        },
        {
            "funcStartAddr": "0x408280",
            "funcEndAddr": "0x4082a7",
            "decompiledFuncCode": "\nuint FUN_00408280(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  uint uVar3;\n  int *piVar4;\n  bool bVar5;\n  \n  pcVar1 = param_1[9];\n  pcVar2 = param_2[9];\n  bVar5 = param_2[9] != pcVar1;\n  if (bVar5 && (long)pcVar1 <= (long)pcVar2) {\n    return 0xffffffff;\n  }\n  if (!bVar5) {\n    pcVar1 = *param_1;\n    pcVar2 = *param_2;\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    uVar3 = strcoll(pcVar2,pcVar1);\n    return uVar3;\n  }\n  return (uint)((long)pcVar2 < (long)pcVar1);\n}\n\n",
            "funcName": "FUN_00408280"
        },
        {
            "funcStartAddr": "0x4082c0",
            "funcEndAddr": "0x4082e7",
            "decompiledFuncCode": "\nuint FUN_004082c0(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  uint uVar3;\n  bool bVar4;\n  \n  pcVar1 = param_1[9];\n  pcVar2 = param_2[9];\n  bVar4 = param_2[9] != pcVar1;\n  if (bVar4 && (long)pcVar1 <= (long)pcVar2) {\n    return 0xffffffff;\n  }\n  if (!bVar4) {\n    uVar3 = strcmp(*param_2,*param_1);\n    return uVar3;\n  }\n  return (uint)((long)pcVar2 < (long)pcVar1);\n}\n\n",
            "funcName": "FUN_004082c0"
        },
        {
            "funcStartAddr": "0x408300",
            "funcEndAddr": "0x408374",
            "decompiledFuncCode": "\nint FUN_00408300(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  int iVar3;\n  int iVar4;\n  bool bVar5;\n  \n  iVar4 = *(int *)(param_2 + 0x15);\n  bVar5 = *(int *)(param_1 + 0x15) == 3 || *(int *)(param_1 + 0x15) == 9;\n  if ((iVar4 != 9 && iVar4 != 3) && (bVar5)) {\n    return -1;\n  }\n  if ((bVar5) || (iVar3 = 1, iVar4 != 9 && iVar4 != 3)) {\n    pcVar1 = param_2[0x10];\n    pcVar2 = param_1[0x10];\n    if (param_1[0x10] != pcVar1 && (long)pcVar1 <= (long)pcVar2) {\n      return -1;\n    }\n    if ((long)pcVar2 < (long)pcVar1) {\n      return 1;\n    }\n    iVar3 = (int)param_2[0x11] - *(int *)(param_1 + 0x11);\n    if (iVar3 == 0) {\n      iVar4 = strcmp(*param_1,*param_2);\n      return iVar4;\n    }\n  }\n  return iVar3;\n}\n\n",
            "funcName": "FUN_00408300"
        },
        {
            "funcStartAddr": "0x408390",
            "funcEndAddr": "0x4083f8",
            "decompiledFuncCode": "\nint FUN_00408390(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  int iVar3;\n  int iVar4;\n  bool bVar5;\n  \n  iVar4 = *(int *)(param_2 + 0x15);\n  bVar5 = *(int *)(param_1 + 0x15) == 3 || *(int *)(param_1 + 0x15) == 9;\n  if ((iVar4 != 9 && iVar4 != 3) && (bVar5)) {\n    return -1;\n  }\n  if ((bVar5) || (iVar3 = 1, iVar4 != 9 && iVar4 != 3)) {\n    pcVar1 = param_2[0xe];\n    pcVar2 = param_1[0xe];\n    if (param_1[0xe] != pcVar1 && (long)pcVar1 <= (long)pcVar2) {\n      return -1;\n    }\n    if ((long)pcVar2 < (long)pcVar1) {\n      return 1;\n    }\n    iVar3 = (int)param_2[0xf] - *(int *)(param_1 + 0xf);\n    if (iVar3 == 0) {\n      iVar4 = strcmp(*param_1,*param_2);\n      return iVar4;\n    }\n  }\n  return iVar3;\n}\n\n",
            "funcName": "FUN_00408390"
        },
        {
            "funcStartAddr": "0x408410",
            "funcEndAddr": "0x4084a8",
            "decompiledFuncCode": "\nint FUN_00408410(undefined4 param_1)\n\n{\n  int iVar1;\n  uint *puVar2;\n  uint *puVar3;\n  long lVar4;\n  uint uVar5;\n  uint uVar6;\n  bool bVar7;\n  uint local_38 [10];\n  \n  if (DAT_006256ed == '\\0') {\n    lVar4 = FUN_0040e160();\n    if (lVar4 != 0) {\n      iVar1 = FUN_0040eb70(lVar4,0);\n      if (iVar1 < 0) {\n        iVar1 = 0;\n      }\n      return iVar1;\n    }\n  }\n  __sprintf_chk(local_38,1,0x15,&DAT_0041b064,param_1);\n  puVar3 = local_38;\n  do {\n    puVar2 = puVar3;\n    uVar5 = *puVar2 + 0xfefefeff & ~*puVar2;\n    uVar6 = uVar5 & 0x80808080;\n    puVar3 = puVar2 + 1;\n  } while (uVar6 == 0);\n  bVar7 = (uVar5 & 0x8080) == 0;\n  if (bVar7) {\n    uVar6 = uVar6 >> 0x10;\n  }\n  if (bVar7) {\n    puVar3 = (uint *)((long)puVar2 + 6);\n  }\n  return (((int)puVar3 + -3) - (uint)CARRY1((byte)uVar6,(byte)uVar6)) - (int)local_38;\n}\n\n",
            "funcName": "FUN_00408410"
        },
        {
            "funcStartAddr": "0x4084b0",
            "funcEndAddr": "0x408579",
            "decompiledFuncCode": "\nvoid FUN_004084b0(void)\n\n{\n  long *plVar1;\n  void **ppvVar2;\n  long *plVar3;\n  \n  plVar1 = DAT_00625760 + DAT_00625770;\n  plVar3 = DAT_00625760;\n  if (DAT_00625770 != 0) {\n    do {\n      ppvVar2 = (void **)*plVar3;\n      plVar3 = plVar3 + 1;\n      free(*ppvVar2);\n      free(ppvVar2[1]);\n      free(ppvVar2[2]);\n    } while (plVar3 != plVar1);\n  }\n  DAT_00625769 = 0;\n  DAT_00625770 = 0;\n  DAT_00625724 = 0;\n  DAT_00625720 = 0;\n  DAT_0062571c = 0;\n  DAT_00625718 = 0;\n  DAT_00625710 = 0;\n  DAT_0062570c = 0;\n  DAT_00625708 = 0;\n  DAT_00625714 = 0;\n  DAT_00625704 = 0;\n  DAT_00625700 = 0;\n  DAT_006256fc = 0;\n  return;\n}\n\n",
            "funcName": "FUN_004084b0"
        },
        {
            "funcStartAddr": "0x408580",
            "funcEndAddr": "0x40920c",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_00408580(byte *param_1,int param_2,char param_3,byte *param_4)\n\n{\n  byte *pbVar1;\n  byte *pbVar2;\n  undefined8 *puVar3;\n  undefined4 uVar4;\n  byte *pbVar5;\n  byte bVar6;\n  char cVar7;\n  int iVar8;\n  uint uVar9;\n  int *piVar10;\n  undefined8 uVar11;\n  char *pcVar12;\n  size_t sVar13;\n  size_t sVar14;\n  char *__dest;\n  char *__dest_00;\n  stat *psVar15;\n  stat *psVar16;\n  undefined8 uVar17;\n  long lVar18;\n  byte bVar19;\n  ulong uVar20;\n  uint uVar21;\n  undefined *puVar22;\n  undefined *puVar23;\n  byte *pbVar24;\n  undefined8 *puVar25;\n  byte *pbVar26;\n  byte bVar27;\n  byte *pbVar28;\n  bool bVar29;\n  undefined auStack_308 [8];\n  byte abStack_300 [6];\n  byte local_2fa;\n  byte local_2f9;\n  int *local_2f8;\n  byte *local_2f0;\n  undefined local_2e8 [32];\n  stat local_2c8 [4];\n  \n  bVar6 = 0;\n  puVar23 = auStack_308;\n  puVar22 = auStack_308;\n  local_2f0 = param_1;\n  if (DAT_00625770 == _DAT_00625778) {\n    if ((SUB168(ZEXT816(400) * ZEXT816(DAT_00625770),0) < 0) ||\n       (SUB168(ZEXT816(400) * ZEXT816(DAT_00625770) >> 0x40,0) != 0)) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00412bd0();\n    }\n    DAT_00625780 = FUN_004129e0(DAT_00625780,DAT_00625770 * 400);\n    _DAT_00625778 = _DAT_00625778 << 1;\n  }\n  puVar3 = (undefined8 *)(DAT_00625780 + DAT_00625770 * 200);\n  *puVar3 = 0;\n  *(undefined8 *)((long)puVar3 + 0xbc) = 0;\n  puVar25 = (undefined8 *)((ulong)(puVar3 + 1) & 0xfffffffffffffff8);\n  for (uVar20 = (ulong)(((int)puVar3 - (int)(undefined8 *)((ulong)(puVar3 + 1) & 0xfffffffffffffff8)\n                        ) + 0xc4U >> 3); uVar20 != 0; uVar20 = uVar20 - 1) {\n    *puVar25 = 0;\n    puVar25 = puVar25 + (ulong)bVar6 * -2 + 1;\n  }\n  puVar3[4] = 0;\n  *(int *)(puVar3 + 0x15) = param_2;\n  bVar29 = DAT_00625769 == '\\0';\n  *(undefined4 *)((long)puVar3 + 0xc4) = 0xffffffff;\n  if ((bVar29) && (DAT_00625768 != '\\0')) {\n    bVar6 = FUN_00404e20(local_2f0);\n    *(uint *)((long)puVar3 + 0xc4) = (uint)bVar6;\n    if (bVar6 != 0) {\n      DAT_00625769 = '\\x01';\n    }\n  }\n  pbVar28 = local_2f0;\n  if (param_3 == '\\0') {\n    if (DAT_006256d1 != 0) {\n      bVar6 = *local_2f0;\n      puVar23 = auStack_308;\n      if ((bVar6 != 0x2f) &&\n         (bVar19 = *param_4, puVar23 = auStack_308, local_2f8._0_1_ = DAT_006256d1, bVar19 != 0))\n      goto LAB_00408c43;\n      goto LAB_00408b5a;\n    }\n    local_2f8._0_1_ = DAT_006256d1;\n    if (DAT_00625661 == '\\0') {\n      if ((param_2 == 3) && (DAT_006256d2 != '\\0')) {\n        local_2f8 = (int *)((ulong)local_2f8 & 0xffffffffffffff00);\n        cVar7 = FUN_00404ae0(0x13);\n        if (cVar7 == '\\0') {\n          cVar7 = FUN_00404ae0(0x12);\n          if (cVar7 == '\\0') {\n            cVar7 = FUN_00404ae0(0x14);\n            if (cVar7 == '\\0') goto LAB_00408818;\n          }\n        }\n      }\n      else {\nLAB_00408818:\n        if (DAT_006256bc == '\\0') {\n          if (DAT_00625660 != '\\0') {\n            if ((param_2 == 6) || (param_2 == 0)) goto LAB_00409074;\n            if (DAT_00625660 != '\\0') {\nLAB_0040885b:\n              uVar17 = 0;\n              puVar23 = auStack_308;\n              if (param_2 != 5) goto LAB_004087c8;\n              if (DAT_006256d4 != 3) {\n                local_2f8 = (int *)((ulong)local_2f8 & 0xffffffffffffff00 | (ulong)(byte)local_2f8);\n                puVar23 = auStack_308;\n                if (DAT_006256d2 == '\\0') goto LAB_004087c8;\n                cVar7 = FUN_00404ae0(0xe);\n                if (cVar7 == '\\0') {\n                  cVar7 = FUN_00404ae0(0x10);\n                  if (cVar7 == '\\0') {\n                    cVar7 = FUN_00404ae0(0x11);\n                    if (cVar7 == '\\0') {\n                      cVar7 = FUN_00404ae0(0x15);\n                      puVar23 = auStack_308;\n                      if (cVar7 == '\\0') goto LAB_004087c8;\n                    }\n                  }\n                }\n              }\n              goto LAB_004088e8;\n            }\n          }\nLAB_00409100:\n          uVar17 = 0;\n          goto LAB_004087c8;\n        }\n        if ((param_2 == 6) || (param_2 == 0)) {\nLAB_00409074:\n          if ((DAT_006256b8 != 5) &&\n             (((DAT_00625750 == '\\0' && (DAT_006256bd == '\\0')) && (DAT_006256bc == '\\0')))) {\n            if (DAT_00625660 == '\\0') goto LAB_00409100;\n            if (param_2 != 0) goto LAB_0040885b;\n          }\n        }\n      }\n    }\nLAB_004088e8:\n    bVar6 = *local_2f0;\n    if ((bVar6 != 0x2f) && (bVar19 = *param_4, bVar19 != 0)) {\nLAB_00408c43:\n      local_2fa = (byte)local_2f8;\n      local_2f8 = (int *)((ulong)local_2f8 & 0xffffffffffffff00 | (ulong)bVar19);\n      local_2f9 = bVar6;\n      sVar13 = strlen((char *)local_2f0);\n      sVar14 = strlen((char *)param_4);\n      bVar6 = param_4[1];\n      lVar18 = -(sVar13 + 0x19 + sVar14 & 0xfffffffffffffff0);\n      puVar23 = auStack_308 + lVar18;\n      pbVar28 = abStack_300 + lVar18;\n      pbVar24 = param_4;\n      pbVar26 = pbVar28;\n      bVar19 = local_2f9;\n      pbVar5 = local_2f0;\n      if (((byte)local_2f8 != 0x2e) || (pbVar2 = pbVar28, bVar6 != 0)) {\n        while( true ) {\n          pbVar2 = pbVar26 + 1;\n          *pbVar26 = (byte)local_2f8;\n          if (bVar6 == 0) break;\n          pbVar1 = pbVar24 + 2;\n          pbVar24 = pbVar24 + 1;\n          pbVar26 = pbVar2;\n          local_2f8._0_1_ = bVar6;\n          bVar6 = *pbVar1;\n        }\n        if ((param_4 < pbVar24 + 1) && (*pbVar24 != 0x2f)) {\n          *pbVar2 = 0x2f;\n          pbVar2 = pbVar26 + 2;\n        }\n      }\n      while (bVar19 != 0) {\n        *pbVar2 = bVar19;\n        pbVar2 = pbVar2 + 1;\n        bVar19 = pbVar5[1];\n        pbVar5 = pbVar5 + 1;\n      }\n      *pbVar2 = 0;\n      bVar27 = local_2fa;\n      goto LAB_0040869f;\n    }\n    puVar23 = auStack_308;\n    pbVar28 = local_2f0;\n    if ((2 < DAT_006256b8) &&\n       ((puVar23 = auStack_308, 4 < DAT_006256b8 && (puVar23 = auStack_308, DAT_006256b8 == 5))))\n    goto LAB_004086cd;\nLAB_00408930:\n    *(undefined8 *)(puVar23 + -8) = 0x408940;\n    iVar8 = __lxstat(1,(char *)pbVar28,(stat *)(puVar3 + 3));\njoined_r0x00408942:\n    if (iVar8 != 0) {\n      *(undefined8 *)(puVar23 + -8) = 0x408959;\n      uVar11 = dcgettext(0,\"cannot access %s\",5);\n      uVar17 = 0;\n      *(undefined8 *)(puVar23 + -8) = 0x40896b;\n      FUN_00405580(param_3,uVar11,pbVar28);\n      if (param_3 != '\\0') {\n        return 0;\n      }\n      goto LAB_004087c8;\n    }\n  }\n  else {\n    bVar6 = *local_2f0;\n    puVar23 = auStack_308;\n    bVar27 = DAT_006256d1;\n    if ((bVar6 != 0x2f) &&\n       (bVar19 = *param_4, puVar23 = auStack_308, local_2f8._0_1_ = DAT_006256d1, bVar19 != 0))\n    goto LAB_00408c43;\nLAB_0040869f:\n    if (bVar27 != 0) {\nLAB_00408b5a:\n      *(undefined8 *)(puVar23 + -8) = 0x408b67;\n      lVar18 = FUN_0040b070(pbVar28,2);\n      puVar3[2] = lVar18;\n      if (lVar18 == 0) {\n        *(undefined8 *)(puVar23 + -8) = 0x408b85;\n        uVar17 = dcgettext(0,\"error canonicalizing %s\",5);\n        *(undefined8 *)(puVar23 + -8) = 0x408b94;\n        FUN_00405580(param_3,uVar17,pbVar28);\n      }\n    }\n    if (DAT_006256b8 < 3) goto LAB_00408930;\n    if (4 < DAT_006256b8) {\n      puVar22 = puVar23;\n      if (DAT_006256b8 != 5) goto LAB_00408930;\nLAB_004086cd:\n      *(undefined8 *)(puVar22 + -8) = 0x4086dd;\n      iVar8 = __xstat(1,(char *)pbVar28,(stat *)(puVar3 + 3));\n      puVar23 = puVar22;\n      goto joined_r0x00408942;\n    }\n    if (param_3 == '\\0') goto LAB_00408930;\n    local_2f8 = (int *)((ulong)local_2f8 & 0xffffffff00000000 | (ulong)DAT_006256b8);\n    *(undefined8 *)(puVar23 + -8) = 0x408bbf;\n    iVar8 = __xstat(1,(char *)pbVar28,(stat *)(puVar3 + 3));\n    if ((int)local_2f8 != 3) {\n      if (iVar8 < 0) {\n        *(undefined8 *)(puVar23 + -8) = 0x4090c5;\n        piVar10 = __errno_location();\n        if (*piVar10 != 2) goto LAB_004090ce;\n      }\n      else if ((*(uint *)(puVar3 + 6) & 0xf000) == 0x4000) goto LAB_00408be7;\n      goto LAB_00408930;\n    }\nLAB_00408be7:\n    if (iVar8 != 0) {\nLAB_004090ce:\n      *(undefined8 *)(puVar23 + -8) = 0x4090df;\n      uVar17 = dcgettext(0,\"cannot access %s\",5);\n      *(undefined8 *)(puVar23 + -8) = 0x4090f2;\n      FUN_00405580(1,uVar17,pbVar28);\n      return 0;\n    }\n  }\n  *(undefined *)(puVar3 + 0x17) = 1;\n  if (((param_2 == 5) || ((*(uint *)(puVar3 + 6) & 0xf000) == 0x8000)) && (DAT_006256d2 != '\\0')) {\n    *(undefined8 *)(puVar23 + -8) = 0x408b07;\n    cVar7 = FUN_00404ae0(0x15);\n    if (cVar7 != '\\0') {\n      *(undefined8 *)(puVar23 + -8) = 0x408b14;\n      piVar10 = __errno_location();\n      lVar18 = puVar3[3];\n      bVar29 = lVar18 != _DAT_006246b8;\n      *piVar10 = 0x5f;\n      if (bVar29) {\n        _DAT_006246b8 = lVar18;\n      }\n      *(undefined *)(puVar3 + 0x18) = 0;\n    }\n  }\n  if ((DAT_006256f8 == 0) || (DAT_00625725 != '\\0')) {\n    *(undefined8 *)(puVar23 + -8) = 0x408723;\n    piVar10 = __errno_location();\n    lVar18 = puVar3[3];\n    bVar29 = lVar18 != _DAT_006246b0;\n    *piVar10 = 0x5f;\n    iVar8 = DAT_006256f8;\n    if (bVar29) {\n      _DAT_006246b0 = lVar18;\n    }\n    puVar3[0x16] = &DAT_006245aa;\n    if (iVar8 != 0) {\n      *(undefined4 *)((long)puVar3 + 0xbc) = 0;\n      goto LAB_00408765;\n    }\n    if (lVar18 == _DAT_006246a8) {\n      *piVar10 = 0x5f;\n      *(undefined4 *)((long)puVar3 + 0xbc) = 0;\n      uVar9 = *(uint *)(puVar3 + 6) & 0xf000;\n      if (uVar9 != 0xa000) goto LAB_00408778;\n      goto LAB_00408e1d;\n    }\n    *piVar10 = 0;\n    local_2f8 = piVar10;\n    *(undefined8 *)(puVar23 + -8) = 0x408dd6;\n    iVar8 = FUN_0040b900(pbVar28,puVar3 + 3);\n    if (iVar8 < 1) {\n      if (((*local_2f8 - 0x16U & 0xffffffef) == 0) || (*local_2f8 == 0x5f)) {\n        _DAT_006246a8 = puVar3[3];\n      }\n      *(undefined4 *)((long)puVar3 + 0xbc) = 0;\n      if (iVar8 < 0) {\n        *(undefined8 *)(puVar23 + -8) = 0x40915a;\n        uVar17 = FUN_00412110(0,3,pbVar28);\n        iVar8 = *local_2f8;\n        *(undefined8 *)(puVar23 + -8) = 0x409175;\n        error(0,iVar8,&DAT_0041d784,uVar17);\n      }\n    }\n    else {\n      *(undefined4 *)((long)puVar3 + 0xbc) = 2;\n      DAT_00625724 = 1;\n    }\n    uVar9 = *(uint *)(puVar3 + 6) & 0xf000;\n    if (uVar9 == 0xa000) {\n      if (DAT_006256f8 == 0) goto LAB_00408e1d;\n      goto LAB_00408e10;\n    }\nLAB_00408778:\n    if (uVar9 == 0x4000) {\n      if ((param_3 == '\\0') || (DAT_006256b5 != '\\0')) {\n        *(undefined4 *)(puVar3 + 0x15) = 3;\n      }\n      else {\n        *(undefined4 *)(puVar3 + 0x15) = 9;\n      }\n    }\n    else {\n      *(undefined4 *)(puVar3 + 0x15) = 5;\n    }\n  }\n  else {\nLAB_00408765:\n    uVar9 = *(uint *)(puVar3 + 6) & 0xf000;\n    if (uVar9 != 0xa000) goto LAB_00408778;\nLAB_00408e10:\n    if (DAT_006256bd != '\\0') {\nLAB_00408e1d:\n      uVar17 = puVar3[9];\n      *(undefined8 *)(puVar23 + -8) = 0x408e29;\n      pcVar12 = (char *)FUN_0040abf0(pbVar28,uVar17);\n      puVar3[1] = pcVar12;\n      if (pcVar12 == (char *)0x0) {\n        *(undefined8 *)(puVar23 + -8) = 0x409191;\n        uVar17 = dcgettext(0,\"cannot read symbolic link %s\",5);\n        *(undefined8 *)(puVar23 + -8) = 0x4091a0;\n        FUN_00405580(param_3,uVar17,pbVar28);\n        pcVar12 = (char *)puVar3[1];\n        if (pcVar12 != (char *)0x0) goto LAB_00408e39;\nLAB_004091ad:\n        __dest = (char *)0x0;\n      }\n      else {\nLAB_00408e39:\n        if (*pcVar12 == '/') {\nLAB_00409048:\n          *(undefined8 *)(puVar23 + -8) = 0x409050;\n          __dest = (char *)FUN_00412bb0(pcVar12);\n        }\n        else {\n          *(undefined8 *)(puVar23 + -8) = 0x408e4b;\n          piVar10 = (int *)FUN_0040b7b0(pbVar28);\n          if (piVar10 == (int *)0x0) goto LAB_00409048;\n          local_2f8 = piVar10;\n          *(undefined8 *)(puVar23 + -8) = 0x408e63;\n          sVar13 = strlen(pcVar12);\n          lVar18 = (long)local_2f8 + sVar13 + 2;\n          *(undefined8 *)(puVar23 + -8) = 0x408e74;\n          __dest = (char *)FUN_00412980(lVar18);\n          piVar10 = local_2f8;\n          if ((pbVar28 + -1)[(long)local_2f8] != 0x2f) {\n            piVar10 = (int *)((long)local_2f8 + 1);\n          }\n          *(undefined8 *)(puVar23 + -8) = 0x408e95;\n          __dest_00 = stpncpy(__dest,(char *)pbVar28,(size_t)piVar10);\n          *(undefined8 *)(puVar23 + -8) = 0x408ea0;\n          strcpy(__dest_00,pcVar12);\n        }\n        if (__dest == (char *)0x0) goto LAB_004091ad;\n        if (*(int *)((long)puVar3 + 0xc4) == 0) {\n          uVar17 = puVar3[1];\n          *(undefined8 *)(puVar23 + -8) = 0x409259;\n          cVar7 = FUN_00404e20(uVar17);\n          if (cVar7 != '\\0') {\n            *(undefined4 *)((long)puVar3 + 0xc4) = 0xffffffff;\n          }\n        }\n        if ((1 < DAT_006256d4) || (DAT_006256bd != '\\0')) {\n          *(undefined8 *)(puVar23 + -8) = 0x408f0c;\n          iVar8 = __xstat(1,__dest,local_2c8);\n          if ((iVar8 == 0) &&\n             (((*(undefined *)((long)puVar3 + 0xb9) = 1, param_3 == '\\0' || (DAT_006256f8 == 0)) ||\n              ((local_2c8[0].st_mode & 0xf000) != 0x4000)))) {\n            *(__mode_t *)((long)puVar3 + 0xac) = local_2c8[0].st_mode;\n          }\n        }\n      }\n      *(undefined8 *)(puVar23 + -8) = 0x408ed1;\n      free(__dest);\n      uVar9 = *(uint *)(puVar3 + 6) & 0xf000;\n      if (uVar9 != 0xa000) goto LAB_00408778;\n    }\n    *(undefined4 *)(puVar3 + 0x15) = 6;\n  }\n  uVar17 = puVar3[0xb];\n  if ((DAT_006256f8 == 0) || (DAT_006256ec != '\\0')) {\n    *(undefined8 *)(puVar23 + -8) = 0x4089a4;\n    uVar11 = FUN_0040d5d0(uVar17,local_2c8,DAT_006256e8,0x200,DAT_006256e0);\n    *(undefined8 *)(puVar23 + -8) = 0x4089ae;\n    iVar8 = FUN_0040eb70(uVar11,0);\n    if (DAT_0062571c < iVar8) {\n      DAT_0062571c = iVar8;\n    }\n    if (DAT_006256f8 != 0) goto LAB_004087ac;\n    if (DAT_006245a9 != '\\0') {\n      uVar4 = *(undefined4 *)((long)puVar3 + 0x34);\n      *(undefined8 *)(puVar23 + -8) = 0x408f88;\n      iVar8 = FUN_00408410(uVar4);\n      if (DAT_00625710 < iVar8) {\n        DAT_00625710 = iVar8;\n      }\n    }\n    if (DAT_006245a8 != '\\0') {\n      uVar4 = *(undefined4 *)(puVar3 + 7);\n      if (DAT_006256ed == '\\0') {\n        *(undefined8 *)(puVar23 + -8) = 0x409228;\n        lVar18 = FUN_0040e2f0(uVar4);\n        if (lVar18 == 0) goto LAB_00408fd1;\n        *(undefined8 *)(puVar23 + -8) = 0x40923b;\n        iVar8 = FUN_0040eb70(lVar18,0);\n        if (iVar8 < 0) {\n          iVar8 = 0;\n        }\n      }\n      else {\nLAB_00408fd1:\n        *(undefined8 *)(puVar23 + -8) = 0x408fed;\n        __sprintf_chk(local_2c8,1,0x15,&DAT_0041b064,uVar4);\n        psVar16 = local_2c8;\n        do {\n          psVar15 = psVar16;\n          psVar16 = (stat *)((long)&psVar15->st_dev + 4);\n          uVar21 = *(uint *)&psVar15->st_dev + 0xfefefeff & ~*(uint *)&psVar15->st_dev;\n          uVar9 = uVar21 & 0x80808080;\n        } while (uVar9 == 0);\n        bVar29 = (uVar21 & 0x8080) == 0;\n        if (bVar29) {\n          uVar9 = uVar9 >> 0x10;\n        }\n        if (bVar29) {\n          psVar16 = (stat *)((long)&psVar15->st_dev + 6);\n        }\n        iVar8 = (((int)psVar16 + -3) - (uint)CARRY1((byte)uVar9,(byte)uVar9)) - (int)local_2c8;\n      }\n      if (DAT_0062570c < iVar8) {\n        DAT_0062570c = iVar8;\n      }\n    }\n    if (DAT_006256ee != '\\0') {\n      uVar4 = *(undefined4 *)((long)puVar3 + 0x34);\n      *(undefined8 *)(puVar23 + -8) = 0x408fa8;\n      iVar8 = FUN_00408410(uVar4);\n      if (DAT_00625708 < iVar8) {\n        DAT_00625708 = iVar8;\n      }\n    }\n    if (DAT_00625725 != '\\0') goto LAB_004089fa;\nLAB_00408a12:\n    if (DAT_006256f8 == 0) {\n      uVar11 = puVar3[5];\n      *(undefined8 *)(puVar23 + -8) = 0x408a30;\n      pcVar12 = (char *)FUN_0040e520(uVar11,local_2e8);\n      *(undefined8 *)(puVar23 + -8) = 0x408a38;\n      sVar13 = strlen(pcVar12);\n      if (DAT_00625718 < (int)sVar13) {\n        DAT_00625718 = (int)sVar13;\n      }\n      if ((*(uint *)(puVar3 + 6) & 0xb000) == 0x2000) {\n        uVar11 = puVar3[8];\n        *(undefined8 *)(puVar23 + -8) = 0x408a8a;\n        pcVar12 = (char *)FUN_0040e520((uint)((ulong)uVar11 >> 0x20) & 0xfffff000 |\n                                       (uint)((ulong)uVar11 >> 8) & 0xfff,local_2c8);\n        *(undefined8 *)(puVar23 + -8) = 0x408a92;\n        sVar13 = strlen(pcVar12);\n        if (DAT_00625704 < (int)sVar13) {\n          DAT_00625704 = (int)sVar13;\n        }\n        uVar20 = puVar3[8];\n        *(undefined8 *)(puVar23 + -8) = 0x408abb;\n        pcVar12 = (char *)FUN_0040e520((uint)((uVar20 >> 0x14) << 8) | (uint)uVar20 & 0xff,local_2c8\n                                      );\n        *(undefined8 *)(puVar23 + -8) = 0x408ac3;\n        sVar13 = strlen(pcVar12);\n        if (DAT_00625700 < (int)sVar13) {\n          DAT_00625700 = (int)sVar13;\n        }\n        iVar8 = DAT_00625700 + 2 + DAT_00625704;\n        if (DAT_006256fc < iVar8) {\nLAB_00408d88:\n          DAT_006256fc = iVar8;\n        }\n      }\n      else {\n        uVar11 = puVar3[9];\n        *(undefined8 *)(puVar23 + -8) = 0x408d72;\n        uVar11 = FUN_0040d5d0(uVar11,local_2c8,DAT_006256dc,1,DAT_006245a0);\n        *(undefined8 *)(puVar23 + -8) = 0x408d7c;\n        iVar8 = FUN_0040eb70(uVar11,0);\n        if (DAT_006256fc < iVar8) goto LAB_00408d88;\n      }\n    }\n  }\n  else {\nLAB_004087ac:\n    if (DAT_00625725 != '\\0') {\nLAB_004089fa:\n      pcVar12 = (char *)puVar3[0x16];\n      *(undefined8 *)(puVar23 + -8) = 0x408a06;\n      sVar13 = strlen(pcVar12);\n      if (DAT_00625714 < (int)sVar13) {\n        DAT_00625714 = (int)sVar13;\n      }\n      goto LAB_00408a12;\n    }\n  }\n  if (DAT_006256bc != '\\0') {\n    uVar11 = puVar3[4];\n    *(undefined8 *)(puVar23 + -8) = 0x408c08;\n    pcVar12 = (char *)FUN_0040e520(uVar11,local_2c8);\n    *(undefined8 *)(puVar23 + -8) = 0x408c10;\n    sVar13 = strlen(pcVar12);\n    if (DAT_00625720 < (int)sVar13) {\n      DAT_00625720 = (int)sVar13;\n    }\n  }\nLAB_004087c8:\n  pbVar28 = local_2f0;\n  *(undefined8 *)(puVar23 + -8) = 0x4087d4;\n  uVar11 = FUN_00412bb0(pbVar28);\n  DAT_00625770 = DAT_00625770 + 1;\n  *puVar3 = uVar11;\n  return uVar17;\n}\n\n",
            "funcName": "FUN_00408580"
        },
        {
            "funcStartAddr": "0x4092a0",
            "funcEndAddr": "0x409911",
            "decompiledFuncCode": "\nvoid FUN_004092a0(char *param_1,char *param_2,undefined param_3)\n\n{\n  __dev_t _Var1;\n  __ino_t _Var2;\n  undefined8 *puVar3;\n  undefined8 *puVar4;\n  byte bVar5;\n  int iVar6;\n  int *piVar7;\n  DIR *__dirp;\n  __ino_t *p_Var8;\n  __ino_t *p_Var9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  dirent *pdVar12;\n  char *pcVar13;\n  size_t sVar14;\n  long lVar15;\n  void *__ptr;\n  undefined4 uVar16;\n  long local_2d8;\n  stat local_2c8 [4];\n  \n  piVar7 = __errno_location();\n  *piVar7 = 0;\n  __dirp = opendir(param_1);\n  if (__dirp == (DIR *)0x0) {\n    uVar10 = dcgettext(0,\"cannot open directory %s\",5);\n    FUN_00405580(param_3,uVar10,param_1);\n    return;\n  }\n  if (DAT_00625788 != 0) {\n    iVar6 = dirfd(__dirp);\n    if (iVar6 < 0) {\n      iVar6 = __xstat(1,param_1,local_2c8);\n      _Var1 = local_2c8[0].st_dev;\n      _Var2 = local_2c8[0].st_ino;\n    }\n    else {\n      iVar6 = __fxstat(1,iVar6,local_2c8);\n      _Var1 = local_2c8[0].st_dev;\n      _Var2 = local_2c8[0].st_ino;\n    }\n    if (iVar6 < 0) {\n      uVar10 = dcgettext(0,\"cannot determine device and inode of %s\",5);\n      FUN_00405580(param_3,uVar10,param_1);\n      closedir(__dirp);\n      return;\n    }\n    local_2c8[0].st_dev = _Var1;\n    local_2c8[0].st_ino = _Var2;\n    p_Var8 = (__ino_t *)FUN_00412980(0x10);\n    lVar15 = DAT_00625788;\n    *p_Var8 = _Var2;\n    p_Var8[1] = _Var1;\n    p_Var9 = (__ino_t *)FUN_0040d220(lVar15,p_Var8);\n    if (p_Var9 == (__ino_t *)0x0) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00412bd0();\n    }\n    if (p_Var8 != p_Var9) {\n      free(p_Var8);\n      uVar10 = FUN_00412110(0,3,param_1);\n      uVar11 = dcgettext(0,\"%s: not listing already-listed directory\",5);\n      error(0,0,uVar11,uVar10);\n      closedir(__dirp);\n      DAT_006255d0 = 2;\n      return;\n    }\n    p_Var8 = DAT_006254b8;\n    if ((ulong)(DAT_006254c0 - (long)DAT_006254b8) < 0x10) {\n      _obstack_newchunk(&DAT_006254a0,0x10);\n      p_Var8 = DAT_006254b8;\n    }\n    DAT_006254b8 = p_Var8 + 2;\n    p_Var8[1] = local_2c8[0].st_dev;\n    *p_Var8 = local_2c8[0].st_ino;\n  }\n  FUN_004084b0();\n  if ((DAT_006256b6 != '\\0') || (DAT_00625678 != '\\0')) {\n    if (DAT_00624400 == '\\0') {\n      pcVar13 = stdout->_IO_write_ptr;\n      if (pcVar13 < stdout->_IO_write_end) {\n        stdout->_IO_write_ptr = pcVar13 + 1;\n        *pcVar13 = '\\n';\n      }\n      else {\n        __overflow(stdout,10);\n      }\n      DAT_006255b8 = DAT_006255b8 + 1;\n    }\n    DAT_00624400 = '\\0';\n    if (DAT_006256d8 != '\\0') {\n      fwrite_unlocked(&DAT_0041b093,1,2,stdout);\n      DAT_006255b8 = DAT_006255b8 + 2;\n    }\n    __ptr = (void *)0x0;\n    if ((DAT_006256d1 != '\\0') && (__ptr = (void *)FUN_0040b070(param_1,2), __ptr == (void *)0x0)) {\n      uVar10 = dcgettext(0,\"error canonicalizing %s\",5);\n      FUN_00405580(param_3,uVar10,param_1);\n    }\n    if (param_2 == (char *)0x0) {\n      param_2 = param_1;\n    }\n    FUN_004062d0(param_2,DAT_00625688,0xffffffff,0,1,&DAT_00625500,__ptr);\n    free(__ptr);\n    fwrite_unlocked(\":\\n\",1,2,stdout);\n    DAT_006255b8 = DAT_006255b8 + 2;\n  }\n  local_2d8 = 0;\n  do {\n    *piVar7 = 0;\n    pdVar12 = readdir(__dirp);\n    if (pdVar12 == (dirent *)0x0) {\n      if (*piVar7 == 0) {\nLAB_00409623:\n        iVar6 = closedir(__dirp);\n        if (iVar6 != 0) {\n          uVar10 = dcgettext(0,\"closing directory %s\",5);\n          FUN_00405580(param_3,uVar10,param_1);\n        }\n        FUN_00404f40();\n        if (DAT_006256b6 != '\\0') {\n          FUN_00405140(param_1,0);\n        }\n        if ((DAT_006256f8 == 0) || (DAT_006256ec != '\\0')) {\n          if (DAT_006256d8 != '\\0') {\n            fwrite_unlocked(&DAT_0041b093,1,2,stdout);\n            DAT_006255b8 = DAT_006255b8 + 2;\n          }\n          pcVar13 = (char *)dcgettext(0,\"total\",5);\n          fputs_unlocked(pcVar13,stdout);\n          sVar14 = strlen(pcVar13);\n          DAT_006255b8 = DAT_006255b8 + sVar14;\n          pcVar13 = stdout->_IO_write_ptr;\n          if (pcVar13 < stdout->_IO_write_end) {\n            stdout->_IO_write_ptr = pcVar13 + 1;\n            *pcVar13 = ' ';\n          }\n          else {\n            __overflow(stdout,0x20);\n          }\n          DAT_006255b8 = DAT_006255b8 + 1;\n          pcVar13 = (char *)FUN_0040d5d0(local_2d8,local_2c8,DAT_006256e8,0x200,DAT_006256e0);\n          fputs_unlocked(pcVar13,stdout);\n          sVar14 = strlen(pcVar13);\n          DAT_006255b8 = DAT_006255b8 + sVar14;\n          pcVar13 = stdout->_IO_write_ptr;\n          if (pcVar13 < stdout->_IO_write_end) {\n            stdout->_IO_write_ptr = pcVar13 + 1;\n            *pcVar13 = '\\n';\n          }\n          else {\n            __overflow(stdout,10);\n          }\n          DAT_006255b8 = DAT_006255b8 + 1;\n        }\n        if (DAT_00625770 != 0) {\n          FUN_00407ca0();\n        }\n        return;\n      }\n      uVar10 = dcgettext(0,\"reading directory %s\",5);\n      FUN_00405580(param_3,uVar10,param_1);\n      if (*piVar7 != 0x4b) goto LAB_00409623;\n    }\n    else {\n      pcVar13 = pdVar12->d_name;\n      puVar4 = DAT_006256a8;\n      if (DAT_006256b0 != 2) {\n        if (pdVar12->d_name[0] == '.') {\n          if ((DAT_006256b0 == 0) ||\n             (pdVar12->d_name[(ulong)(pdVar12->d_name[1] == '.') + 1] == '\\0')) goto LAB_00409580;\n        }\n        else {\n          puVar3 = DAT_006256a0;\n          if (DAT_006256b0 == 0) {\n            for (; puVar4 = DAT_006256a8, puVar3 != (undefined8 *)0x0;\n                puVar3 = (undefined8 *)puVar3[1]) {\n              iVar6 = FUN_004159a0(*puVar3,pcVar13,4);\n              if (iVar6 == 0) goto LAB_00409580;\n            }\n          }\n        }\n      }\n      for (; puVar4 != (undefined8 *)0x0; puVar4 = (undefined8 *)puVar4[1]) {\n        iVar6 = FUN_004159a0(*puVar4,pcVar13,4);\n        if (iVar6 == 0) goto LAB_00409580;\n      }\n      uVar16 = 0;\n      bVar5 = pdVar12->d_type - 1;\n      if (bVar5 < 0xe) {\n        uVar16 = *(undefined4 *)(&DAT_004194a0 + (ulong)bVar5 * 4);\n      }\n      lVar15 = FUN_00408580(pcVar13,uVar16,0,param_1);\n      local_2d8 = local_2d8 + lVar15;\n      if ((((DAT_006256f8 == 1) && (DAT_006256f0 == -1)) && (DAT_006256ec == '\\0')) &&\n         (DAT_006256b6 == '\\0')) {\n        FUN_00404f40();\n        FUN_00407ca0();\n        FUN_004084b0();\n      }\n    }\nLAB_00409580:\n    FUN_00405d70();\n  } while( true );\n}\n\n",
            "funcName": "FUN_004092a0"
        },
        {
            "funcStartAddr": "0x409960",
            "funcEndAddr": "0x409998",
            "decompiledFuncCode": "\nint FUN_00409960(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  int iVar3;\n  int *piVar4;\n  \n  pcVar1 = param_2[0x10];\n  pcVar2 = param_1[0x10];\n  if (param_1[0x10] != pcVar1 && (long)pcVar1 <= (long)pcVar2) {\n    return -1;\n  }\n  if ((long)pcVar2 < (long)pcVar1) {\n    iVar3 = 1;\n  }\n  else {\n    iVar3 = (int)param_2[0x11] - *(int *)(param_1 + 0x11);\n    if (iVar3 == 0) {\n      pcVar1 = *param_2;\n      pcVar2 = *param_1;\n      piVar4 = __errno_location();\n      *piVar4 = 0;\n      iVar3 = strcoll(pcVar2,pcVar1);\n      return iVar3;\n    }\n  }\n  return iVar3;\n}\n\n",
            "funcName": "FUN_00409960"
        },
        {
            "funcStartAddr": "0x4099b0",
            "funcEndAddr": "0x4099dc",
            "decompiledFuncCode": "\nint FUN_004099b0(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  int iVar3;\n  int *piVar4;\n  \n  pcVar1 = param_2[0xe];\n  pcVar2 = param_1[0xe];\n  if (param_1[0xe] != pcVar1 && (long)pcVar1 <= (long)pcVar2) {\n    return -1;\n  }\n  if ((long)pcVar2 < (long)pcVar1) {\n    iVar3 = 1;\n  }\n  else {\n    iVar3 = (int)param_2[0xf] - *(int *)(param_1 + 0xf);\n    if (iVar3 == 0) {\n      pcVar1 = *param_2;\n      pcVar2 = *param_1;\n      piVar4 = __errno_location();\n      *piVar4 = 0;\n      iVar3 = strcoll(pcVar2,pcVar1);\n      return iVar3;\n    }\n  }\n  return iVar3;\n}\n\n",
            "funcName": "FUN_004099b0"
        },
        {
            "funcStartAddr": "0x4099f0",
            "funcEndAddr": "0x409a1c",
            "decompiledFuncCode": "\nint FUN_004099f0(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  int iVar3;\n  int *piVar4;\n  \n  pcVar1 = param_2[0xc];\n  pcVar2 = param_1[0xc];\n  if (param_1[0xc] != pcVar1 && (long)pcVar1 <= (long)pcVar2) {\n    return -1;\n  }\n  if ((long)pcVar2 < (long)pcVar1) {\n    iVar3 = 1;\n  }\n  else {\n    iVar3 = (int)param_2[0xd] - *(int *)(param_1 + 0xd);\n    if (iVar3 == 0) {\n      pcVar1 = *param_2;\n      pcVar2 = *param_1;\n      piVar4 = __errno_location();\n      *piVar4 = 0;\n      iVar3 = strcoll(pcVar2,pcVar1);\n      return iVar3;\n    }\n  }\n  return iVar3;\n}\n\n",
            "funcName": "FUN_004099f0"
        },
        {
            "funcStartAddr": "0x409a30",
            "funcEndAddr": "0x409a6b",
            "decompiledFuncCode": "\nint FUN_00409a30(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  int iVar3;\n  int *piVar4;\n  \n  pcVar1 = param_1[0x10];\n  pcVar2 = param_2[0x10];\n  if (param_2[0x10] != pcVar1 && (long)pcVar1 <= (long)pcVar2) {\n    return -1;\n  }\n  if ((long)pcVar2 < (long)pcVar1) {\n    iVar3 = 1;\n  }\n  else {\n    iVar3 = (int)param_1[0x11] - *(int *)(param_2 + 0x11);\n    if (iVar3 == 0) {\n      pcVar1 = *param_1;\n      pcVar2 = *param_2;\n      piVar4 = __errno_location();\n      *piVar4 = 0;\n      iVar3 = strcoll(pcVar2,pcVar1);\n      return iVar3;\n    }\n  }\n  return iVar3;\n}\n\n",
            "funcName": "FUN_00409a30"
        },
        {
            "funcStartAddr": "0x409a80",
            "funcEndAddr": "0x409aaf",
            "decompiledFuncCode": "\nint FUN_00409a80(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  int iVar3;\n  int *piVar4;\n  \n  pcVar1 = param_1[0xe];\n  pcVar2 = param_2[0xe];\n  if (param_2[0xe] != pcVar1 && (long)pcVar1 <= (long)pcVar2) {\n    return -1;\n  }\n  if ((long)pcVar2 < (long)pcVar1) {\n    iVar3 = 1;\n  }\n  else {\n    iVar3 = (int)param_1[0xf] - *(int *)(param_2 + 0xf);\n    if (iVar3 == 0) {\n      pcVar1 = *param_1;\n      pcVar2 = *param_2;\n      piVar4 = __errno_location();\n      *piVar4 = 0;\n      iVar3 = strcoll(pcVar2,pcVar1);\n      return iVar3;\n    }\n  }\n  return iVar3;\n}\n\n",
            "funcName": "FUN_00409a80"
        },
        {
            "funcStartAddr": "0x409ac0",
            "funcEndAddr": "0x409aef",
            "decompiledFuncCode": "\nint FUN_00409ac0(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  int iVar3;\n  int *piVar4;\n  \n  pcVar1 = param_1[0xc];\n  pcVar2 = param_2[0xc];\n  if (param_2[0xc] != pcVar1 && (long)pcVar1 <= (long)pcVar2) {\n    return -1;\n  }\n  if ((long)pcVar2 < (long)pcVar1) {\n    iVar3 = 1;\n  }\n  else {\n    iVar3 = (int)param_1[0xd] - *(int *)(param_2 + 0xd);\n    if (iVar3 == 0) {\n      pcVar1 = *param_1;\n      pcVar2 = *param_2;\n      piVar4 = __errno_location();\n      *piVar4 = 0;\n      iVar3 = strcoll(pcVar2,pcVar1);\n      return iVar3;\n    }\n  }\n  return iVar3;\n}\n\n",
            "funcName": "FUN_00409ac0"
        },
        {
            "funcStartAddr": "0x409b00",
            "funcEndAddr": "0x409b68",
            "decompiledFuncCode": "\nint FUN_00409b00(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  int iVar3;\n  int iVar4;\n  int *piVar5;\n  bool bVar6;\n  \n  iVar3 = *(int *)(param_2 + 0x15);\n  bVar6 = *(int *)(param_1 + 0x15) == 3 || *(int *)(param_1 + 0x15) == 9;\n  if ((iVar3 != 9 && iVar3 != 3) && (bVar6)) {\n    return -1;\n  }\n  if ((bVar6) || (iVar4 = 1, iVar3 != 9 && iVar3 != 3)) {\n    pcVar1 = param_2[0xc];\n    pcVar2 = param_1[0xc];\n    if (param_1[0xc] != pcVar1 && (long)pcVar1 <= (long)pcVar2) {\n      return -1;\n    }\n    if ((long)pcVar2 < (long)pcVar1) {\n      return 1;\n    }\n    iVar4 = (int)param_2[0xd] - *(int *)(param_1 + 0xd);\n    if (iVar4 == 0) {\n      pcVar1 = *param_2;\n      pcVar2 = *param_1;\n      piVar5 = __errno_location();\n      *piVar5 = 0;\n      iVar3 = strcoll(pcVar2,pcVar1);\n      return iVar3;\n    }\n  }\n  return iVar4;\n}\n\n",
            "funcName": "FUN_00409b00"
        },
        {
            "funcStartAddr": "0x409b80",
            "funcEndAddr": "0x409bec",
            "decompiledFuncCode": "\nint FUN_00409b80(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  int iVar3;\n  int iVar4;\n  int *piVar5;\n  bool bVar6;\n  \n  iVar3 = *(int *)(param_2 + 0x15);\n  bVar6 = *(int *)(param_1 + 0x15) == 3 || *(int *)(param_1 + 0x15) == 9;\n  if ((iVar3 != 9 && iVar3 != 3) && (bVar6)) {\n    return -1;\n  }\n  if ((bVar6) || (iVar4 = 1, iVar3 != 9 && iVar3 != 3)) {\n    pcVar1 = param_1[0xe];\n    pcVar2 = param_2[0xe];\n    if (param_2[0xe] != pcVar1 && (long)pcVar1 <= (long)pcVar2) {\n      return -1;\n    }\n    if ((long)pcVar2 < (long)pcVar1) {\n      return 1;\n    }\n    iVar4 = (int)param_1[0xf] - *(int *)(param_2 + 0xf);\n    if (iVar4 == 0) {\n      pcVar1 = *param_1;\n      pcVar2 = *param_2;\n      piVar5 = __errno_location();\n      *piVar5 = 0;\n      iVar3 = strcoll(pcVar2,pcVar1);\n      return iVar3;\n    }\n  }\n  return iVar4;\n}\n\n",
            "funcName": "FUN_00409b80"
        },
        {
            "funcStartAddr": "0x409c00",
            "funcEndAddr": "0x409c6c",
            "decompiledFuncCode": "\nint FUN_00409c00(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  int iVar3;\n  int iVar4;\n  int *piVar5;\n  bool bVar6;\n  \n  iVar3 = *(int *)(param_2 + 0x15);\n  bVar6 = *(int *)(param_1 + 0x15) == 3 || *(int *)(param_1 + 0x15) == 9;\n  if ((iVar3 != 9 && iVar3 != 3) && (bVar6)) {\n    return -1;\n  }\n  if ((bVar6) || (iVar4 = 1, iVar3 != 9 && iVar3 != 3)) {\n    pcVar1 = param_1[0xc];\n    pcVar2 = param_2[0xc];\n    if (param_2[0xc] != pcVar1 && (long)pcVar1 <= (long)pcVar2) {\n      return -1;\n    }\n    if ((long)pcVar2 < (long)pcVar1) {\n      return 1;\n    }\n    iVar4 = (int)param_1[0xd] - *(int *)(param_2 + 0xd);\n    if (iVar4 == 0) {\n      pcVar1 = *param_1;\n      pcVar2 = *param_2;\n      piVar5 = __errno_location();\n      *piVar5 = 0;\n      iVar3 = strcoll(pcVar2,pcVar1);\n      return iVar3;\n    }\n  }\n  return iVar4;\n}\n\n",
            "funcName": "FUN_00409c00"
        },
        {
            "funcStartAddr": "0x409c80",
            "funcEndAddr": "0x409ce8",
            "decompiledFuncCode": "\nint FUN_00409c80(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  int iVar3;\n  int iVar4;\n  int *piVar5;\n  bool bVar6;\n  \n  iVar3 = *(int *)(param_2 + 0x15);\n  bVar6 = *(int *)(param_1 + 0x15) == 3 || *(int *)(param_1 + 0x15) == 9;\n  if ((iVar3 != 9 && iVar3 != 3) && (bVar6)) {\n    return -1;\n  }\n  if ((bVar6) || (iVar4 = 1, iVar3 != 9 && iVar3 != 3)) {\n    pcVar1 = param_2[0xe];\n    pcVar2 = param_1[0xe];\n    if (param_1[0xe] != pcVar1 && (long)pcVar1 <= (long)pcVar2) {\n      return -1;\n    }\n    if ((long)pcVar2 < (long)pcVar1) {\n      return 1;\n    }\n    iVar4 = (int)param_2[0xf] - *(int *)(param_1 + 0xf);\n    if (iVar4 == 0) {\n      pcVar1 = *param_2;\n      pcVar2 = *param_1;\n      piVar5 = __errno_location();\n      *piVar5 = 0;\n      iVar3 = strcoll(pcVar2,pcVar1);\n      return iVar3;\n    }\n  }\n  return iVar4;\n}\n\n",
            "funcName": "FUN_00409c80"
        },
        {
            "funcStartAddr": "0x409d00",
            "funcEndAddr": "0x409d78",
            "decompiledFuncCode": "\nint FUN_00409d00(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  int iVar3;\n  int iVar4;\n  int *piVar5;\n  bool bVar6;\n  \n  iVar3 = *(int *)(param_2 + 0x15);\n  bVar6 = *(int *)(param_1 + 0x15) == 3 || *(int *)(param_1 + 0x15) == 9;\n  if ((iVar3 != 9 && iVar3 != 3) && (bVar6)) {\n    return -1;\n  }\n  if ((bVar6) || (iVar4 = 1, iVar3 != 9 && iVar3 != 3)) {\n    pcVar1 = param_1[0x10];\n    pcVar2 = param_2[0x10];\n    if (param_2[0x10] != pcVar1 && (long)pcVar1 <= (long)pcVar2) {\n      return -1;\n    }\n    if ((long)pcVar2 < (long)pcVar1) {\n      return 1;\n    }\n    iVar4 = (int)param_1[0x11] - *(int *)(param_2 + 0x11);\n    if (iVar4 == 0) {\n      pcVar1 = *param_1;\n      pcVar2 = *param_2;\n      piVar5 = __errno_location();\n      *piVar5 = 0;\n      iVar3 = strcoll(pcVar2,pcVar1);\n      return iVar3;\n    }\n  }\n  return iVar4;\n}\n\n",
            "funcName": "FUN_00409d00"
        },
        {
            "funcStartAddr": "0x409d90",
            "funcEndAddr": "0x409e04",
            "decompiledFuncCode": "\nint FUN_00409d90(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  int iVar3;\n  int iVar4;\n  int *piVar5;\n  bool bVar6;\n  \n  iVar3 = *(int *)(param_2 + 0x15);\n  bVar6 = *(int *)(param_1 + 0x15) == 3 || *(int *)(param_1 + 0x15) == 9;\n  if ((iVar3 != 9 && iVar3 != 3) && (bVar6)) {\n    return -1;\n  }\n  if ((bVar6) || (iVar4 = 1, iVar3 != 9 && iVar3 != 3)) {\n    pcVar1 = param_2[0x10];\n    pcVar2 = param_1[0x10];\n    if (param_1[0x10] != pcVar1 && (long)pcVar1 <= (long)pcVar2) {\n      return -1;\n    }\n    if ((long)pcVar2 < (long)pcVar1) {\n      return 1;\n    }\n    iVar4 = (int)param_2[0x11] - *(int *)(param_1 + 0x11);\n    if (iVar4 == 0) {\n      pcVar1 = *param_2;\n      pcVar2 = *param_1;\n      piVar5 = __errno_location();\n      *piVar5 = 0;\n      iVar3 = strcoll(pcVar2,pcVar1);\n      return iVar3;\n    }\n  }\n  return iVar4;\n}\n\n",
            "funcName": "FUN_00409d90"
        },
        {
            "funcStartAddr": "0x409e20",
            "funcEndAddr": "0x409e4f",
            "decompiledFuncCode": "\nint FUN_00409e20(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  int iVar3;\n  \n  pcVar1 = param_1[0xc];\n  pcVar2 = param_2[0xc];\n  if (param_2[0xc] != pcVar1 && (long)pcVar1 <= (long)pcVar2) {\n    return -1;\n  }\n  if ((long)pcVar2 < (long)pcVar1) {\n    iVar3 = 1;\n  }\n  else {\n    iVar3 = (int)param_1[0xd] - *(int *)(param_2 + 0xd);\n    if (iVar3 == 0) {\n      iVar3 = strcmp(*param_2,*param_1);\n      return iVar3;\n    }\n  }\n  return iVar3;\n}\n\n",
            "funcName": "FUN_00409e20"
        },
        {
            "funcStartAddr": "0x409e60",
            "funcEndAddr": "0x409e9b",
            "decompiledFuncCode": "\nint FUN_00409e60(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  int iVar3;\n  \n  pcVar1 = param_1[0x10];\n  pcVar2 = param_2[0x10];\n  if (param_2[0x10] != pcVar1 && (long)pcVar1 <= (long)pcVar2) {\n    return -1;\n  }\n  if ((long)pcVar2 < (long)pcVar1) {\n    iVar3 = 1;\n  }\n  else {\n    iVar3 = (int)param_1[0x11] - *(int *)(param_2 + 0x11);\n    if (iVar3 == 0) {\n      iVar3 = strcmp(*param_2,*param_1);\n      return iVar3;\n    }\n  }\n  return iVar3;\n}\n\n",
            "funcName": "FUN_00409e60"
        },
        {
            "funcStartAddr": "0x409eb0",
            "funcEndAddr": "0x409edf",
            "decompiledFuncCode": "\nint FUN_00409eb0(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  int iVar3;\n  \n  pcVar1 = param_1[0xe];\n  pcVar2 = param_2[0xe];\n  if (param_2[0xe] != pcVar1 && (long)pcVar1 <= (long)pcVar2) {\n    return -1;\n  }\n  if ((long)pcVar2 < (long)pcVar1) {\n    iVar3 = 1;\n  }\n  else {\n    iVar3 = (int)param_1[0xf] - *(int *)(param_2 + 0xf);\n    if (iVar3 == 0) {\n      iVar3 = strcmp(*param_2,*param_1);\n      return iVar3;\n    }\n  }\n  return iVar3;\n}\n\n",
            "funcName": "FUN_00409eb0"
        },
        {
            "funcStartAddr": "0x409ef0",
            "funcEndAddr": "0x409f1c",
            "decompiledFuncCode": "\nint FUN_00409ef0(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  int iVar3;\n  \n  pcVar1 = param_2[0xc];\n  pcVar2 = param_1[0xc];\n  if (param_1[0xc] != pcVar1 && (long)pcVar1 <= (long)pcVar2) {\n    return -1;\n  }\n  if ((long)pcVar2 < (long)pcVar1) {\n    iVar3 = 1;\n  }\n  else {\n    iVar3 = (int)param_2[0xd] - *(int *)(param_1 + 0xd);\n    if (iVar3 == 0) {\n      iVar3 = strcmp(*param_1,*param_2);\n      return iVar3;\n    }\n  }\n  return iVar3;\n}\n\n",
            "funcName": "FUN_00409ef0"
        },
        {
            "funcStartAddr": "0x409f30",
            "funcEndAddr": "0x409f68",
            "decompiledFuncCode": "\nint FUN_00409f30(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  int iVar3;\n  \n  pcVar1 = param_2[0x10];\n  pcVar2 = param_1[0x10];\n  if (param_1[0x10] != pcVar1 && (long)pcVar1 <= (long)pcVar2) {\n    return -1;\n  }\n  if ((long)pcVar2 < (long)pcVar1) {\n    iVar3 = 1;\n  }\n  else {\n    iVar3 = (int)param_2[0x11] - *(int *)(param_1 + 0x11);\n    if (iVar3 == 0) {\n      iVar3 = strcmp(*param_1,*param_2);\n      return iVar3;\n    }\n  }\n  return iVar3;\n}\n\n",
            "funcName": "FUN_00409f30"
        },
        {
            "funcStartAddr": "0x409f80",
            "funcEndAddr": "0x409fac",
            "decompiledFuncCode": "\nint FUN_00409f80(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  int iVar3;\n  \n  pcVar1 = param_2[0xe];\n  pcVar2 = param_1[0xe];\n  if (param_1[0xe] != pcVar1 && (long)pcVar1 <= (long)pcVar2) {\n    return -1;\n  }\n  if ((long)pcVar2 < (long)pcVar1) {\n    iVar3 = 1;\n  }\n  else {\n    iVar3 = (int)param_2[0xf] - *(int *)(param_1 + 0xf);\n    if (iVar3 == 0) {\n      iVar3 = strcmp(*param_1,*param_2);\n      return iVar3;\n    }\n  }\n  return iVar3;\n}\n\n",
            "funcName": "FUN_00409f80"
        },
        {
            "funcStartAddr": "0x409fc0",
            "funcEndAddr": "0x40a020",
            "decompiledFuncCode": "\nvoid FUN_00409fc0(char **param_1,char **param_2)\n\n{\n  int iVar1;\n  int *piVar2;\n  char *pcVar3;\n  char *pcVar4;\n  \n  pcVar3 = strrchr(*param_1,0x2e);\n  pcVar4 = strrchr(*param_2,0x2e);\n  if (pcVar4 == (char *)0x0) {\n    pcVar4 = \"\";\n  }\n  if (pcVar3 == (char *)0x0) {\n    pcVar3 = \"\";\n  }\n  iVar1 = FUN_004050d0(pcVar3,pcVar4);\n  if (iVar1 == 0) {\n    pcVar3 = *param_2;\n    pcVar4 = *param_1;\n    piVar2 = __errno_location();\n    *piVar2 = 0;\n    strcoll(pcVar4,pcVar3);\n    return;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00409fc0"
        },
        {
            "funcStartAddr": "0x40a030",
            "funcEndAddr": "0x40a091",
            "decompiledFuncCode": "\nvoid FUN_0040a030(char **param_1,char **param_2)\n\n{\n  int iVar1;\n  int *piVar2;\n  char *pcVar3;\n  char *pcVar4;\n  \n  pcVar3 = strrchr(*param_2,0x2e);\n  pcVar4 = strrchr(*param_1,0x2e);\n  if (pcVar4 == (char *)0x0) {\n    pcVar4 = \"\";\n  }\n  if (pcVar3 == (char *)0x0) {\n    pcVar3 = \"\";\n  }\n  iVar1 = FUN_004050d0(pcVar3,pcVar4);\n  if (iVar1 == 0) {\n    pcVar3 = *param_1;\n    pcVar4 = *param_2;\n    piVar2 = __errno_location();\n    *piVar2 = 0;\n    strcoll(pcVar4,pcVar3);\n    return;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_0040a030"
        },
        {
            "funcStartAddr": "0x40a0a0",
            "funcEndAddr": "0x40a141",
            "decompiledFuncCode": "\nint FUN_0040a0a0(char **param_1,char **param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  char *pcVar4;\n  char *pcVar5;\n  \n  iVar2 = *(int *)(param_1 + 0x15);\n  iVar1 = *(int *)(param_2 + 0x15);\n  if ((iVar1 != 9 && iVar1 != 3) && (iVar2 == 3 || iVar2 == 9)) {\n    return -1;\n  }\n  if ((iVar2 != 3 && iVar2 != 9) && (iVar1 == 9 || iVar1 == 3)) {\n    return 1;\n  }\n  pcVar4 = strrchr(*param_2,0x2e);\n  pcVar5 = strrchr(*param_1,0x2e);\n  if (pcVar5 == (char *)0x0) {\n    pcVar5 = \"\";\n  }\n  if (pcVar4 == (char *)0x0) {\n    pcVar4 = \"\";\n  }\n  iVar2 = FUN_004050d0(pcVar4,pcVar5);\n  if (iVar2 != 0) {\n    return iVar2;\n  }\n  pcVar4 = *param_1;\n  pcVar5 = *param_2;\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  iVar2 = strcoll(pcVar5,pcVar4);\n  return iVar2;\n}\n\n",
            "funcName": "FUN_0040a0a0"
        },
        {
            "funcStartAddr": "0x40a150",
            "funcEndAddr": "0x40a1f1",
            "decompiledFuncCode": "\nint FUN_0040a150(char **param_1,char **param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  char *pcVar4;\n  char *pcVar5;\n  \n  iVar2 = *(int *)(param_1 + 0x15);\n  iVar1 = *(int *)(param_2 + 0x15);\n  if ((iVar1 != 9 && iVar1 != 3) && (iVar2 == 3 || iVar2 == 9)) {\n    return -1;\n  }\n  if ((iVar2 != 3 && iVar2 != 9) && (iVar1 == 9 || iVar1 == 3)) {\n    return 1;\n  }\n  pcVar4 = strrchr(*param_1,0x2e);\n  pcVar5 = strrchr(*param_2,0x2e);\n  if (pcVar5 == (char *)0x0) {\n    pcVar5 = \"\";\n  }\n  if (pcVar4 == (char *)0x0) {\n    pcVar4 = \"\";\n  }\n  iVar2 = FUN_004050d0(pcVar4,pcVar5);\n  if (iVar2 != 0) {\n    return iVar2;\n  }\n  pcVar4 = *param_2;\n  pcVar5 = *param_1;\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  iVar2 = strcoll(pcVar5,pcVar4);\n  return iVar2;\n}\n\n",
            "funcName": "FUN_0040a150"
        },
        {
            "funcStartAddr": "0x40a200",
            "funcEndAddr": "0x40a26c",
            "decompiledFuncCode": "\nint FUN_0040a200(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  int iVar3;\n  int iVar4;\n  bool bVar5;\n  \n  iVar4 = *(int *)(param_2 + 0x15);\n  bVar5 = *(int *)(param_1 + 0x15) == 3 || *(int *)(param_1 + 0x15) == 9;\n  if ((iVar4 != 9 && iVar4 != 3) && (bVar5)) {\n    return -1;\n  }\n  if ((bVar5) || (iVar3 = 1, iVar4 != 9 && iVar4 != 3)) {\n    pcVar1 = param_1[0xe];\n    pcVar2 = param_2[0xe];\n    if (param_2[0xe] != pcVar1 && (long)pcVar1 <= (long)pcVar2) {\n      return -1;\n    }\n    if ((long)pcVar2 < (long)pcVar1) {\n      return 1;\n    }\n    iVar3 = (int)param_1[0xf] - *(int *)(param_2 + 0xf);\n    if (iVar3 == 0) {\n      iVar4 = strcmp(*param_2,*param_1);\n      return iVar4;\n    }\n  }\n  return iVar3;\n}\n\n",
            "funcName": "FUN_0040a200"
        },
        {
            "funcStartAddr": "0x40a280",
            "funcEndAddr": "0x40a2f8",
            "decompiledFuncCode": "\nint FUN_0040a280(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  int iVar3;\n  int iVar4;\n  bool bVar5;\n  \n  iVar4 = *(int *)(param_2 + 0x15);\n  bVar5 = *(int *)(param_1 + 0x15) == 3 || *(int *)(param_1 + 0x15) == 9;\n  if ((iVar4 != 9 && iVar4 != 3) && (bVar5)) {\n    return -1;\n  }\n  if ((bVar5) || (iVar3 = 1, iVar4 != 9 && iVar4 != 3)) {\n    pcVar1 = param_1[0x10];\n    pcVar2 = param_2[0x10];\n    if (param_2[0x10] != pcVar1 && (long)pcVar1 <= (long)pcVar2) {\n      return -1;\n    }\n    if ((long)pcVar2 < (long)pcVar1) {\n      return 1;\n    }\n    iVar3 = (int)param_1[0x11] - *(int *)(param_2 + 0x11);\n    if (iVar3 == 0) {\n      iVar4 = strcmp(*param_2,*param_1);\n      return iVar4;\n    }\n  }\n  return iVar3;\n}\n\n",
            "funcName": "FUN_0040a280"
        },
        {
            "funcStartAddr": "0x40a310",
            "funcEndAddr": "0x40a37c",
            "decompiledFuncCode": "\nint FUN_0040a310(char **param_1,char **param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  int iVar3;\n  int iVar4;\n  bool bVar5;\n  \n  iVar4 = *(int *)(param_2 + 0x15);\n  bVar5 = *(int *)(param_1 + 0x15) == 3 || *(int *)(param_1 + 0x15) == 9;\n  if ((iVar4 != 9 && iVar4 != 3) && (bVar5)) {\n    return -1;\n  }\n  if ((bVar5) || (iVar3 = 1, iVar4 != 9 && iVar4 != 3)) {\n    pcVar1 = param_1[0xc];\n    pcVar2 = param_2[0xc];\n    if (param_2[0xc] != pcVar1 && (long)pcVar1 <= (long)pcVar2) {\n      return -1;\n    }\n    if ((long)pcVar2 < (long)pcVar1) {\n      return 1;\n    }\n    iVar3 = (int)param_1[0xd] - *(int *)(param_2 + 0xd);\n    if (iVar3 == 0) {\n      iVar4 = strcmp(*param_2,*param_1);\n      return iVar4;\n    }\n  }\n  return iVar3;\n}\n\n",
            "funcName": "FUN_0040a310"
        },
        {
            "funcStartAddr": "0x40a390",
            "funcEndAddr": "0x40a3f9",
            "decompiledFuncCode": "\nvoid FUN_0040a390(char **param_1,char **param_2)\n\n{\n  char *__s;\n  char *__s_00;\n  int iVar1;\n  char *__s1;\n  char *__s2;\n  \n  __s = *param_2;\n  __s1 = strrchr(__s,0x2e);\n  __s_00 = *param_1;\n  __s2 = strrchr(__s_00,0x2e);\n  if (__s2 == (char *)0x0) {\n    __s2 = \"\";\n    if (__s1 == (char *)0x0) goto LAB_0040a3ea;\n  }\n  else if (__s1 == (char *)0x0) {\n    __s1 = \"\";\n  }\n  iVar1 = strcmp(__s1,__s2);\n  if (iVar1 != 0) {\n    return;\n  }\nLAB_0040a3ea:\n  strcmp(__s,__s_00);\n  return;\n}\n\n",
            "funcName": "FUN_0040a390"
        },
        {
            "funcStartAddr": "0x40a400",
            "funcEndAddr": "0x40a469",
            "decompiledFuncCode": "\nvoid FUN_0040a400(char **param_1,char **param_2)\n\n{\n  char *__s;\n  char *__s_00;\n  int iVar1;\n  char *__s1;\n  char *__s2;\n  \n  __s = *param_1;\n  __s1 = strrchr(__s,0x2e);\n  __s_00 = *param_2;\n  __s2 = strrchr(__s_00,0x2e);\n  if (__s2 == (char *)0x0) {\n    __s2 = \"\";\n    if (__s1 == (char *)0x0) goto LAB_0040a45a;\n  }\n  else if (__s1 == (char *)0x0) {\n    __s1 = \"\";\n  }\n  iVar1 = strcmp(__s1,__s2);\n  if (iVar1 != 0) {\n    return;\n  }\nLAB_0040a45a:\n  strcmp(__s,__s_00);\n  return;\n}\n\n",
            "funcName": "FUN_0040a400"
        },
        {
            "funcStartAddr": "0x40a470",
            "funcEndAddr": "0x40a51e",
            "decompiledFuncCode": "\nint FUN_0040a470(char **param_1,char **param_2)\n\n{\n  int iVar1;\n  char *__s;\n  char *__s_00;\n  int iVar2;\n  char *__s1;\n  char *__s2;\n  \n  iVar2 = *(int *)(param_1 + 0x15);\n  iVar1 = *(int *)(param_2 + 0x15);\n  if ((iVar1 != 9 && iVar1 != 3) && (iVar2 == 3 || iVar2 == 9)) {\n    return -1;\n  }\n  if ((iVar2 != 3 && iVar2 != 9) && (iVar1 == 9 || iVar1 == 3)) {\n    return 1;\n  }\n  __s = *param_1;\n  __s1 = strrchr(__s,0x2e);\n  __s_00 = *param_2;\n  __s2 = strrchr(__s_00,0x2e);\n  if (__s2 == (char *)0x0) {\n    __s2 = \"\";\n    if (__s1 == (char *)0x0) goto LAB_0040a50a;\n  }\n  else if (__s1 == (char *)0x0) {\n    __s1 = \"\";\n  }\n  iVar2 = strcmp(__s1,__s2);\n  if (iVar2 != 0) {\n    return iVar2;\n  }\nLAB_0040a50a:\n  iVar2 = strcmp(__s,__s_00);\n  return iVar2;\n}\n\n",
            "funcName": "FUN_0040a470"
        },
        {
            "funcStartAddr": "0x40a530",
            "funcEndAddr": "0x40abe0",
            "decompiledFuncCode": "\nvoid FUN_0040a530(int param_1)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  char *pcVar6;\n  char **ppcVar7;\n  char *pcVar8;\n  bool bVar9;\n  char *local_88;\n  char *local_80;\n  char *local_78 [4];\n  char *local_58;\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  undefined *local_38;\n  char *local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  \n  uVar5 = DAT_006257c0;\n  ppcVar7 = &local_88;\n  if (param_1 != 0) {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar5);\n    goto LAB_0040a570;\n  }\n  uVar3 = dcgettext(0,\"Usage: %s [OPTION]... [FILE]...\\n\",5);\n  __printf_chk(1,uVar3,uVar5);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"List information about the FILEs (the current directory by default).\\nSort entries alphabetically if none of -cftuvSUX nor --sort is specified.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -a, --all                  do not ignore entries starting with .\\n  -A, --almost-all           do not list implied . and ..\\n      --author               with -l, print the author of each file\\n  -b, --escape               print C-style escapes for nongraphic characters\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --block-size=SIZE      with -l, scale sizes by SIZE when printing them;\\n                               e.g., \\'--block-size=M\\'; see SIZE format below\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -B, --ignore-backups       do not list implied entries ending with ~\\n  -c                         with -lt: sort by, and show, ctime (time of last\\n                               modification of file status information);\\n                               with -l: show ctime and sort by name;\\n                               otherwise: sort by ctime, newest first\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -C                         list entries by columns\\n      --color[=WHEN]         colorize the output; WHEN can be \\'always\\' (default\\n                               if omitted), \\'auto\\', or \\'never\\'; more info below\\n  -d, --directory            list directories themselves, not their contents\\n  -D, --dired                generate output designed for Emacs\\' dired mode\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -f                         do not sort, enable -aU, disable -ls --color\\n  -F, --classify             append indicator (one of */=>@|) to entries\\n      --file-type            likewise, except do not append \\'*\\'\\n      --format=WORD          across -x, commas -m, horizontal -x, long -l,\\n                               single-column -1, verbose -l, vertical -C\\n      --full-time            like -l --time-style=full-iso\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"  -g                         like -l, but do not list owner\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --group-directories-first\\n                             group directories before files;\\n                               can be augmented with a --sort option, but any\\n                               use of --sort=none (-U) disables grouping\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -G, --no-group             in a long listing, don\\'t print group names\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -h, --human-readable       with -l and -s, print sizes like 1K 234M 2G etc.\\n      --si                   likewise, but use powers of 1000 not 1024\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -H, --dereference-command-line\\n                             follow symbolic links listed on the command line\\n      --dereference-command-line-symlink-to-dir\\n                             follow each command line symbolic link\\n                               that points to a directory\\n      --hide=PATTERN         do not list implied entries matching shell PATTERN\\n                               (overridden by -a or -A)\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --hyperlink[=WHEN]     hyperlink file names; WHEN can be \\'always\\'\\n                               (default if omitted), \\'auto\\', or \\'never\\'\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --indicator-style=WORD  append indicator with style WORD to entry names:\\n                               none (default), slash (-p),\\n                               file-type (--file-type), classify (-F)\\n  -i, --inode                print the index number of each file\\n  -I, --ignore=PATTERN       do not list implied entries matching shell PATTERN\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -k, --kibibytes            default to 1024-byte blocks for disk usage;\\n                               used only with -s and per directory totals\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -l                         use a long listing format\\n  -L, --dereference          when showing file information for a symbolic\\n                               link, show information for the file the link\\n                               references rather than for the link itself\\n  -m                         fill width with a comma separated list of entries\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -n, --numeric-uid-gid      like -l, but list numeric user and group IDs\\n  -N, --literal              print entry names without quoting\\n  -o                         like -l, but do not list group information\\n  -p, --indicator-style=slash\\n                             append / indicator to directories\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -q, --hide-control-chars   print ? instead of nongraphic characters\\n      --show-control-chars   show nongraphic characters as-is (the default,\\n                               unless program is \\'ls\\' and output is a terminal)\\n  -Q, --quote-name           enclose entry names in double quotes\\n      --quoting-style=WORD   use quoting style WORD for entry names:\\n                               literal, locale, shell, shell-always,\\n                               shell-escape, shell-escape-always, c, escape\\n                               (overrides QUOTING_STYLE environment variable)\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -r, --reverse              reverse order while sorting\\n  -R, --recursive            list subdirectories recursively\\n  -s, --size                 print the allocated size of each file, in blocks\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -S                         sort by file size, largest first\\n      --sort=WORD            sort by WORD instead of name: none (-U), size (-S),\\n                               time (-t), version (-v), extension (-X)\\n      --time=WORD            with -l, show time as WORD instead of default\\n                               modification time: atime or access or use (-u);\\n                               ctime or status (-c); also use specified time\\n                               as sort key if --sort=time (newest first)\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --time-style=TIME_STYLE  time/date format with -l; see TIME_STYLE below\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -t                         sort by modification time, newest first\\n  -T, --tabsize=COLS         assume tab stops at each COLS instead of 8\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -u                         with -lt: sort by, and show, access time;\\n                               with -l: show access time and sort by name;\\n                               otherwise: sort by access time, newest first\\n  -U                         do not sort; list entries in directory order\\n  -v                         natural sort of (version) numbers within text\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -w, --width=COLS           set output width to COLS.  0 means no limit\\n  -x                         list entries by lines instead of by columns\\n  -X                         sort alphabetically by entry extension\\n  -Z, --context              print any security context of each file\\n  -1                         list one file per line.  Avoid \\'\\\\n\\' with -q or -b\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\\nUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nThe TIME_STYLE argument can be full-iso, long-iso, iso, locale, or +FORMAT.\\nFORMAT is interpreted like in date(1).  If FORMAT is FORMAT1<newline>FORMAT2,\\nthen FORMAT1 applies to non-recent files and FORMAT2 to recent files.\\nTIME_STYLE prefixed with \\'posix-\\' takes effect only outside the POSIX locale.\\nAlso the TIME_STYLE environment variable sets the default style to use.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nUsing color to distinguish file types is disabled both by default and\\nwith --color=never.  With --color=auto, ls emits color codes only when\\nstandard output is connected to a terminal.  The LS_COLORS environment\\nvariable can change the settings.  Use the dircolors command to set it.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nExit status:\\n 0  if OK,\\n 1  if minor problems (e.g., cannot access subdirectory),\\n 2  if serious trouble (e.g., cannot access command-line argument).\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  if (DAT_006245ac == 1) {\n    pcVar4 = \"ls\";\n  }\n  else {\n    pcVar4 = \"dir\";\n    if (DAT_006245ac != 2) {\n      pcVar4 = \"vdir\";\n    }\n  }\n  local_88 = (char *)((long)&DAT_0041b567 + 1);\n  pcVar8 = (char *)((long)&DAT_0041b567 + 1);\n  local_80 = \"test invocation\";\n  local_78[0] = \"coreutils\";\n  local_78[1] = \"Multi-call invocation\";\n  local_78[2] = \"sha224sum\";\n  local_78[3] = \"sha2 utilities\";\n  local_58 = \"sha256sum\";\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha384sum\";\n  local_40 = \"sha2 utilities\";\n  local_38 = &DAT_0041b18c;\n  local_30 = \"sha2 utilities\";\n  local_28 = 0;\n  local_20 = 0;\n  do {\n    iVar2 = strcmp(pcVar4,pcVar8);\n    if (iVar2 == 0) break;\n    ppcVar7 = ppcVar7 + 2;\n    pcVar8 = *ppcVar7;\n  } while (pcVar8 != (char *)0x0);\n  pcVar8 = ppcVar7[1];\n  if (pcVar8 == (char *)0x0) {\n    uVar5 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar5,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar8 = setlocale(5,(char *)0x0);\n    if ((pcVar8 != (char *)0x0) && (iVar2 = strncmp(pcVar8,\"en_\",3), pcVar8 = pcVar4, iVar2 != 0))\n    goto LAB_0040ab47;\n    uVar5 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar6 = \" invocation\";\n    __printf_chk(1,uVar5,\"https://www.gnu.org/software/coreutils/\",pcVar4);\n  }\n  else {\n    uVar5 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar5,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar6 = setlocale(5,(char *)0x0);\n    if ((pcVar6 != (char *)0x0) && (iVar2 = strncmp(pcVar6,\"en_\",3), iVar2 != 0)) {\nLAB_0040ab47:\n      uVar5 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\",5\n                       );\n      __printf_chk(1,uVar5,pcVar4);\n    }\n    uVar5 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar5,\"https://www.gnu.org/software/coreutils/\",pcVar4);\n    bVar9 = pcVar4 != pcVar8;\n    pcVar6 = \" invocation\";\n    pcVar4 = pcVar8;\n    if (bVar9) {\n      pcVar6 = \"\";\n    }\n  }\n  uVar5 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  __printf_chk(1,uVar5,pcVar4,pcVar6);\nLAB_0040a570:\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n",
            "funcName": "FUN_0040a530"
        },
        {
            "funcStartAddr": "0x40abf0",
            "funcEndAddr": "0x40accb",
            "decompiledFuncCode": "\nchar * FUN_0040abf0(char *param_1,ulong param_2)\n\n{\n  char *__buf;\n  ulong uVar1;\n  int *piVar2;\n  size_t __size;\n  \n  __size = param_2 + 1;\n  if (0x400 < param_2) {\n    __size = 0x401;\n  }\n  do {\n    __buf = (char *)malloc(__size);\n    while( true ) {\n      if (__buf == (char *)0x0) {\n        return (char *)0x0;\n      }\n      uVar1 = readlink(param_1,__buf,__size);\n      if (((long)uVar1 < 0) && (piVar2 = __errno_location(), *piVar2 != 0x22)) {\n        free(__buf);\n        return (char *)0x0;\n      }\n      if (uVar1 < __size) {\n        __buf[uVar1] = '\\0';\n        return __buf;\n      }\n      free(__buf);\n      if (0x3fffffffffffffff < __size) break;\n      __size = __size * 2;\n      __buf = (char *)malloc(__size);\n    }\n    if (0x7ffffffffffffffe < __size) {\n      piVar2 = __errno_location();\n      *piVar2 = 0xc;\n      return (char *)0x0;\n    }\n    __size = 0x7fffffffffffffff;\n  } while( true );\n}\n\n",
            "funcName": "FUN_0040abf0"
        },
        {
            "funcStartAddr": "0x40ace0",
            "funcEndAddr": "0x40acea",
            "decompiledFuncCode": "\nvoid FUN_0040ace0(void)\n\n{\n  FUN_0040a530(1);\n  return;\n}\n\n",
            "funcName": "FUN_0040ace0"
        },
        {
            "funcStartAddr": "0x40acf0",
            "funcEndAddr": "0x40adf3",
            "decompiledFuncCode": "\nlong FUN_0040acf0(char *param_1,char **param_2,void *param_3,size_t param_4)\n\n{\n  bool bVar1;\n  long lVar2;\n  int iVar3;\n  size_t __n;\n  size_t sVar4;\n  long lVar5;\n  void *__s2;\n  char *__s1;\n  long local_58;\n  \n  __n = strlen(param_1);\n  __s1 = *param_2;\n  local_58 = -1;\n  lVar2 = local_58;\n  if (__s1 != (char *)0x0) {\n    bVar1 = false;\n    lVar2 = 0;\n    __s2 = param_3;\nLAB_0040ad87:\n    do {\n      lVar5 = lVar2;\n      iVar3 = strncmp(__s1,param_1,__n);\n      if (iVar3 == 0) {\n        sVar4 = strlen(__s1);\n        if (sVar4 == __n) {\n          return lVar5;\n        }\n        if (local_58 == -1) {\n          __s2 = (void *)((long)__s2 + param_4);\n          __s1 = param_2[lVar5 + 1];\n          lVar2 = lVar5 + 1;\n          local_58 = lVar5;\n          if (__s1 == (char *)0x0) break;\n          goto LAB_0040ad87;\n        }\n        if (param_3 == (void *)0x0) {\n          bVar1 = true;\n        }\n        else {\n          iVar3 = memcmp((void *)(local_58 * param_4 + (long)param_3),__s2,param_4);\n          if (iVar3 != 0) {\n            bVar1 = true;\n          }\n        }\n      }\n      __s2 = (void *)((long)__s2 + param_4);\n      __s1 = param_2[lVar5 + 1];\n      lVar2 = lVar5 + 1;\n    } while (__s1 != (char *)0x0);\n    lVar2 = -2;\n    if (!bVar1) {\n      lVar2 = local_58;\n    }\n  }\n  local_58 = lVar2;\n  return local_58;\n}\n\n",
            "funcName": "FUN_0040acf0"
        },
        {
            "funcStartAddr": "0x40ae10",
            "funcEndAddr": "0x40ae7c",
            "decompiledFuncCode": "\nvoid FUN_0040ae10(undefined8 param_1,undefined8 param_2,long param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  \n  if (param_3 == -1) {\n    uVar1 = dcgettext(0,\"invalid argument %s for %s\",5);\n  }\n  else {\n    uVar1 = dcgettext(0,\"ambiguous argument %s for %s\",5);\n  }\n  uVar2 = FUN_00412270(1,param_1);\n  uVar3 = FUN_00411f60(0,8,param_2);\n  error(0,0,uVar1,uVar3,uVar2);\n  return;\n}\n\n",
            "funcName": "FUN_0040ae10"
        },
        {
            "funcStartAddr": "0x40ae90",
            "funcEndAddr": "0x40af9f",
            "decompiledFuncCode": "\nvoid FUN_0040ae90(long *param_1,void *param_2,size_t param_3)\n\n{\n  FILE *__stream;\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  long lVar4;\n  void *__s2;\n  long lVar5;\n  void *__s1;\n  \n  __stream = stderr;\n  __s1 = (void *)0x0;\n  pcVar2 = (char *)dcgettext(0,\"Valid arguments are:\",5);\n  lVar4 = 0;\n  fputs_unlocked(pcVar2,__stream);\n  lVar5 = *param_1;\n  while (lVar5 != 0) {\n    while ((__s2 = param_2, lVar4 == 0 || (iVar1 = memcmp(__s1,__s2,param_3), iVar1 != 0))) {\n      lVar4 = lVar4 + 1;\n      uVar3 = FUN_00412290(lVar5);\n      __fprintf_chk(stderr,1,\"\\n  - %s\",uVar3);\n      lVar5 = param_1[lVar4];\n      param_2 = (void *)((long)__s2 + param_3);\n      __s1 = __s2;\n      if (lVar5 == 0) goto LAB_0040af60;\n    }\n    lVar4 = lVar4 + 1;\n    param_2 = (void *)((long)__s2 + param_3);\n    uVar3 = FUN_00412290(lVar5);\n    __fprintf_chk(stderr,1,&DAT_0041d782,uVar3);\n    lVar5 = param_1[lVar4];\n  }\nLAB_0040af60:\n  pcVar2 = stderr->_IO_write_ptr;\n  if (pcVar2 < stderr->_IO_write_end) {\n    stderr->_IO_write_ptr = pcVar2 + 1;\n    *pcVar2 = '\\n';\n    return;\n  }\n  __overflow(stderr,10);\n  return;\n}\n\n",
            "funcName": "FUN_0040ae90"
        },
        {
            "funcStartAddr": "0x40afb0",
            "funcEndAddr": "0x40b01d",
            "decompiledFuncCode": "\nlong FUN_0040afb0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5,code *param_6)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_0040acf0(param_2,param_3,param_4,param_5);\n  if (lVar1 < 0) {\n    FUN_0040ae10(param_1,param_2,lVar1);\n    FUN_0040ae90(param_3,param_4,param_5);\n    (*param_6)();\n    lVar1 = -1;\n  }\n  return lVar1;\n}\n\n",
            "funcName": "FUN_0040afb0"
        },
        {
            "funcStartAddr": "0x40b020",
            "funcEndAddr": "0x40b06c",
            "decompiledFuncCode": "\nlong FUN_0040b020(void *param_1,long *param_2,void *param_3,size_t param_4)\n\n{\n  int iVar1;\n  long lVar2;\n  \n  lVar2 = *param_2;\n  if (lVar2 != 0) {\n    param_2 = param_2 + 1;\n    do {\n      iVar1 = memcmp(param_1,param_3,param_4);\n      if (iVar1 == 0) {\n        return lVar2;\n      }\n      lVar2 = *param_2;\n      param_3 = (void *)((long)param_3 + param_4);\n      param_2 = param_2 + 1;\n    } while (lVar2 != 0);\n  }\n  return lVar2;\n}\n\n",
            "funcName": "FUN_0040b020"
        },
        {
            "funcStartAddr": "0x40b070",
            "funcEndAddr": "0x40b69b",
            "decompiledFuncCode": "\nchar * FUN_0040b070(char *param_1,uint param_2)\n\n{\n  ulong uVar1;\n  bool bVar2;\n  long lVar3;\n  char cVar4;\n  int iVar5;\n  char *__s;\n  size_t sVar6;\n  char *pcVar7;\n  size_t sVar8;\n  int *piVar9;\n  uint uVar10;\n  char cVar11;\n  char *pcVar12;\n  char *pcVar13;\n  long lVar14;\n  char *pcVar15;\n  char *pcVar16;\n  long local_f0;\n  char *local_e8;\n  void *local_e0;\n  ulong local_d8;\n  stat local_c8;\n  \n  uVar10 = param_2 & 3;\n  if (((uVar10 & uVar10 - 1) == 0) && (param_1 != (char *)0x0)) {\n    if (*param_1 == '\\0') {\n      piVar9 = __errno_location();\n      __s = (char *)0x0;\n      *piVar9 = 2;\n    }\n    else {\n      if (*param_1 == '/') {\n        __s = (char *)FUN_00412980(0x1000);\n        pcVar15 = __s + 0x1000;\n        pcVar12 = __s + 1;\n        *__s = '/';\n      }\n      else {\n        __s = (char *)FUN_00412d10();\n        if (__s == (char *)0x0) {\n          return (char *)0x0;\n        }\n        sVar6 = strlen(__s);\n        if (sVar6 < 0x1000) {\n          __s = (char *)FUN_004129e0(__s,0x1000);\n          pcVar12 = __s + sVar6;\n          pcVar15 = __s + 0x1000;\n        }\n        else {\n          pcVar12 = __s + sVar6;\n          pcVar15 = pcVar12;\n        }\n      }\n      cVar4 = *param_1;\n      local_f0 = 0;\n      local_d8 = 0;\n      local_e0 = (void *)0x0;\n      local_e8 = param_1;\nLAB_0040b118:\n      while (pcVar13 = pcVar12, cVar4 != '\\0') {\n        pcVar7 = param_1;\n        cVar11 = cVar4;\n        if (cVar4 == '/') {\n          do {\n            param_1 = param_1 + 1;\n            cVar11 = *param_1;\n          } while (cVar11 == '/');\n          pcVar7 = param_1;\n          if (cVar11 == '\\0') break;\n        }\n        do {\n          pcVar16 = param_1;\n          cVar4 = pcVar16[1];\n          param_1 = pcVar16 + 1;\n          if (cVar4 == '\\0') break;\n        } while (cVar4 != '/');\n        if (param_1 == pcVar7) break;\n        sVar6 = (long)param_1 - (long)pcVar7;\n        pcVar12 = pcVar13;\n        if (sVar6 == 1) goto LAB_0040b308;\n        if (((cVar11 != '.') || (sVar6 != 2)) || (pcVar7[1] != '.')) goto LAB_0040b18c;\n        if (((__s + 1 < pcVar13) && (pcVar12 = pcVar13 + -1, __s < pcVar12)) && (pcVar13[-2] != '/')\n           ) {\n          for (pcVar12 = pcVar13 + -2; (__s != pcVar12 && (pcVar12[-1] != '/'));\n              pcVar12 = pcVar12 + -1) {\n          }\n        }\n      }\n      if ((__s + 1 < pcVar13) && (pcVar13[-1] == '/')) {\n        pcVar7 = pcVar13 + -1;\n        pcVar12 = pcVar13;\n      }\n      else {\n        pcVar12 = pcVar13 + 1;\n        pcVar7 = pcVar13;\n      }\n      *pcVar7 = '\\0';\n      if (pcVar15 != pcVar12) {\n        __s = (char *)FUN_004129e0(__s,pcVar7 + (1 - (long)__s));\n      }\n      free(local_e0);\n      if (local_f0 != 0) {\n        FUN_0040ccc0(local_f0);\n      }\n    }\n  }\n  else {\n    piVar9 = __errno_location();\n    __s = (char *)0x0;\n    *piVar9 = 0x16;\n  }\n  return __s;\nLAB_0040b308:\n  if (cVar11 == '.') goto LAB_0040b118;\nLAB_0040b18c:\n  if (pcVar13[-1] != '/') {\n    *pcVar13 = '/';\n    pcVar13 = pcVar13 + 1;\n  }\n  if (pcVar15 <= pcVar13 + sVar6) {\n    lVar14 = (long)pcVar13 - (long)__s;\n    lVar3 = 0x1000 - (long)__s;\n    if (0xfff < (long)sVar6) {\n      lVar3 = (sVar6 + 1) - (long)__s;\n    }\n    __s = (char *)FUN_004129e0(__s,pcVar15 + lVar3);\n    pcVar15 = __s + (long)(pcVar15 + lVar3);\n    pcVar13 = __s + lVar14;\n  }\n  memcpy(pcVar13,pcVar7,sVar6);\n  pcVar12 = pcVar13 + sVar6;\n  *pcVar12 = '\\0';\n  pcVar13 = pcVar12;\n  if ((uVar10 == 2) && ((param_2 & 4) != 0)) {\nLAB_0040b20b:\n    local_c8.st_mode = 0;\nLAB_0040b213:\n    if ((*param_1 == '\\0') || (uVar10 == 2)) {\nLAB_0040b224:\n      cVar4 = *param_1;\n      pcVar12 = pcVar13;\n      goto LAB_0040b118;\n    }\n    piVar9 = __errno_location();\n    iVar5 = 0x14;\nLAB_0040b575:\n    free(local_e0);\n    free(__s);\n    if (local_f0 == 0) goto LAB_0040b4d1;\n  }\n  else {\n    if ((param_2 & 4) == 0) {\n      iVar5 = __lxstat(1,__s,&local_c8);\n    }\n    else {\n      iVar5 = __xstat(1,__s,&local_c8);\n    }\n    if (iVar5 != 0) {\n      piVar9 = __errno_location();\n      iVar5 = *piVar9;\n      if (uVar10 != 0) {\n        if (uVar10 != 1) goto LAB_0040b20b;\n        sVar6 = strspn(param_1,\"/\");\n        if ((param_1[sVar6] == '\\0') && (iVar5 == 2)) goto LAB_0040b2c9;\n      }\n      goto LAB_0040b575;\n    }\n    if ((local_c8.st_mode & 0xf000) != 0xa000) {\n      if ((local_c8.st_mode & 0xf000) == 0x4000) goto LAB_0040b224;\n      goto LAB_0040b213;\n    }\n    if ((local_f0 == 0) &&\n       (local_f0 = FUN_0040ca80(7,0,FUN_0040d440,FUN_0040d4b0,FUN_0040d4f0), local_f0 == 0)) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00412bd0();\n    }\n    cVar4 = FUN_0040b9a0(local_f0,local_e8,&local_c8);\n    if (cVar4 == '\\0') {\n      FUN_0040b910(local_f0,local_e8,&local_c8);\n      pcVar7 = (char *)FUN_0040abf0(__s,local_c8.st_size);\n      if (pcVar7 != (char *)0x0) {\n        sVar6 = strlen(pcVar7);\n        sVar8 = strlen(param_1);\n        uVar1 = sVar6 + 1 + sVar8;\n        if (local_d8 == 0) {\n          local_d8 = 0x1000;\n          if (0xfff < uVar1) {\n            local_d8 = uVar1;\n          }\n          local_e0 = (void *)FUN_00412980(local_d8);\n        }\n        else if (local_d8 < uVar1) {\n          local_e0 = (void *)FUN_004129e0(local_e0,uVar1);\n          local_d8 = uVar1;\n        }\n        memmove((void *)((long)local_e0 + sVar6),param_1,sVar8 + 1);\n        param_1 = (char *)memcpy(local_e0,pcVar7,sVar6);\n        pcVar13 = __s + 1;\n        if (*pcVar7 == '/') {\n          *__s = '/';\n        }\n        else {\n          bVar2 = pcVar13 < pcVar12;\n          pcVar13 = pcVar12;\n          if ((bVar2) && (pcVar13 = pcVar12 + -1, __s < pcVar13)) {\n            cVar4 = pcVar12[-2];\n            pcVar12 = pcVar13;\n            while ((pcVar13 = pcVar12, cVar4 != '/' && (pcVar13 = pcVar12 + -1, __s != pcVar13))) {\n              cVar4 = pcVar12[-2];\n              pcVar12 = pcVar13;\n            }\n          }\n        }\n        free(pcVar7);\n        local_e8 = param_1;\n        goto LAB_0040b224;\n      }\n      piVar9 = __errno_location();\n      iVar5 = *piVar9;\n      if ((uVar10 == 2) && (iVar5 != 0xc)) goto LAB_0040b2c9;\n    }\n    else {\n      if (uVar10 == 2) {\nLAB_0040b2c9:\n        cVar4 = pcVar16[1];\n        goto LAB_0040b118;\n      }\n      piVar9 = __errno_location();\n      iVar5 = 0x28;\n    }\n    free(local_e0);\n    free(__s);\n  }\n  FUN_0040ccc0(local_f0);\nLAB_0040b4d1:\n  *piVar9 = iVar5;\n  return (char *)0x0;\n}\n\n",
            "funcName": "FUN_0040b070"
        },
        {
            "funcStartAddr": "0x40b6f0",
            "funcEndAddr": "0x40b6f8",
            "decompiledFuncCode": "\nvoid FUN_0040b6f0(undefined8 param_1)\n\n{\n  DAT_00625798 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_0040b6f0"
        },
        {
            "funcStartAddr": "0x40b700",
            "funcEndAddr": "0x40b708",
            "decompiledFuncCode": "\nvoid FUN_0040b700(undefined param_1)\n\n{\n  DAT_00625790 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_0040b700"
        },
        {
            "funcStartAddr": "0x40b710",
            "funcEndAddr": "0x40b7ae",
            "decompiledFuncCode": "\nvoid FUN_0040b710(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_004178e0(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_00625790 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_00625798 == 0) {\n        error(0,*piVar2,&DAT_0041d784,uVar3);\n      }\n      else {\n        uVar4 = FUN_004120e0();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_0040b78e;\n    }\n  }\n  iVar1 = FUN_004178e0(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_0040b78e:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_006245c0);\n}\n\n",
            "funcName": "FUN_0040b710"
        },
        {
            "funcStartAddr": "0x40b7b0",
            "funcEndAddr": "0x40b808",
            "decompiledFuncCode": "\nulong FUN_0040b7b0(char *param_1)\n\n{\n  char cVar1;\n  long lVar2;\n  ulong uVar3;\n  ulong uVar4;\n  \n  cVar1 = *param_1;\n  lVar2 = FUN_0040b870();\n  uVar3 = lVar2 - (long)param_1;\n  if (((cVar1 == '/') < uVar3) && (*(char *)(lVar2 + -1) == '/')) {\n    do {\n      uVar4 = uVar3 - 1;\n      if ((cVar1 == '/') == uVar4) {\n        return uVar4;\n      }\n      lVar2 = uVar3 - 2;\n      uVar3 = uVar4;\n    } while (param_1[lVar2] == '/');\n    return uVar4;\n  }\n  return uVar3;\n}\n\n",
            "funcName": "FUN_0040b7b0"
        },
        {
            "funcStartAddr": "0x40b810",
            "funcEndAddr": "0x40b86a",
            "decompiledFuncCode": "\nundefined * FUN_0040b810(void *param_1)\n\n{\n  size_t __n;\n  undefined *__dest;\n  \n  __n = FUN_0040b7b0();\n  __dest = (undefined *)malloc(__n + 1 + (ulong)(__n == 0));\n  if (__dest != (undefined *)0x0) {\n    __dest = (undefined *)memcpy(__dest,param_1,__n);\n    if (__n == 0) {\n      *__dest = 0x2e;\n      __n = 1;\n    }\n    __dest[__n] = 0;\n  }\n  return __dest;\n}\n\n",
            "funcName": "FUN_0040b810"
        },
        {
            "funcStartAddr": "0x40b870",
            "funcEndAddr": "0x40b8c2",
            "decompiledFuncCode": "\nchar * FUN_0040b870(char *param_1)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  char cVar3;\n  \n  cVar3 = *param_1;\n  while (cVar3 == '/') {\n    param_1 = param_1 + 1;\n    cVar3 = *param_1;\n  }\n  if (cVar3 != '\\0') {\n    bVar1 = false;\n    pcVar2 = param_1;\n    do {\n      while (cVar3 == '/') {\n        pcVar2 = pcVar2 + 1;\n        cVar3 = *pcVar2;\n        bVar1 = true;\n        if (cVar3 == '\\0') {\n          return param_1;\n        }\n      }\n      if (bVar1) {\n        bVar1 = false;\n        param_1 = pcVar2;\n      }\n      pcVar2 = pcVar2 + 1;\n      cVar3 = *pcVar2;\n    } while (cVar3 != '\\0');\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_0040b870"
        },
        {
            "funcStartAddr": "0x40b8d0",
            "funcEndAddr": "0x40b8f7",
            "decompiledFuncCode": "\nvoid FUN_0040b8d0(char *param_1)\n\n{\n  long lVar1;\n  size_t sVar2;\n  \n  sVar2 = strlen(param_1);\n  if (1 < sVar2) {\n    while (lVar1 = sVar2 - 1, sVar2 = sVar2 - 1, param_1[lVar1] == '/') {\n      if (sVar2 == 1) {\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "funcName": "FUN_0040b8d0"
        },
        {
            "funcStartAddr": "0x40b900",
            "funcEndAddr": "0x40b903",
            "decompiledFuncCode": "\nundefined8 FUN_0040b900(void)\n\n{\n  return 0;\n}\n\n",
            "funcName": "FUN_0040b900"
        },
        {
            "funcStartAddr": "0x40b910",
            "funcEndAddr": "0x40b988",
            "decompiledFuncCode": "\nvoid FUN_0040b910(long param_1,undefined8 param_2,undefined8 *param_3)\n\n{\n  undefined8 *puVar1;\n  undefined8 uVar2;\n  undefined8 *puVar3;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  puVar1 = (undefined8 *)FUN_00412980(0x18);\n  uVar2 = FUN_00412bb0(param_2);\n  *puVar1 = uVar2;\n  puVar1[1] = param_3[1];\n  puVar1[2] = *param_3;\n  puVar3 = (undefined8 *)FUN_0040d220(param_1,puVar1);\n  if (puVar3 != (undefined8 *)0x0) {\n    if (puVar1 != puVar3) {\n      FUN_0040d4f0(puVar1);\n      return;\n    }\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00412bd0();\n}\n\n",
            "funcName": "FUN_0040b910"
        },
        {
            "funcStartAddr": "0x40b9a0",
            "funcEndAddr": "0x40b9d4",
            "decompiledFuncCode": "\nulong FUN_0040b9a0(long param_1,undefined8 param_2,undefined8 *param_3)\n\n{\n  ulong uVar1;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_1 != 0) {\n    local_20 = param_3[1];\n    local_18 = *param_3;\n    local_28 = param_2;\n    uVar1 = FUN_0040c810(param_1,&local_28);\n    return uVar1 & 0xffffffffffffff00 | (ulong)(uVar1 != 0);\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040b9a0"
        },
        {
            "funcStartAddr": "0x40b9e0",
            "funcEndAddr": "0x40bb46",
            "decompiledFuncCode": "\nvoid FUN_0040b9e0(uint param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  undefined uVar2;\n  char cVar3;\n  uint uVar4;\n  \n  uVar2 = 0x2d;\n  uVar4 = param_1 & 0xf000;\n  if ((((uVar4 != 0x8000) && (uVar2 = 100, uVar4 != 0x4000)) && (uVar2 = 0x62, uVar4 != 0x6000)) &&\n     (((uVar2 = 99, uVar4 != 0x2000 && (uVar2 = 0x6c, uVar4 != 0xa000)) &&\n      ((uVar2 = 0x70, uVar4 != 0x1000 && (uVar2 = 0x73, uVar4 != 0xc000)))))) {\n    uVar2 = 0x3f;\n  }\n  *param_2 = uVar2;\n  param_2[1] = (-((param_1 & 0x100) == 0) & 0xbbU) + 0x72;\n  param_2[2] = (-((param_1 & 0x80) == 0) & 0xb6U) + 0x77;\n  bVar1 = -((param_1 & 0x40) == 0);\n  if ((param_1 & 0x800) == 0) {\n    cVar3 = (bVar1 & 0xb5) + 0x78;\n  }\n  else {\n    cVar3 = (bVar1 & 0xe0) + 0x73;\n  }\n  param_2[3] = cVar3;\n  param_2[4] = (-((param_1 & 0x20) == 0) & 0xbbU) + 0x72;\n  param_2[5] = (-((param_1 & 0x10) == 0) & 0xb6U) + 0x77;\n  bVar1 = -((param_1 & 8) == 0);\n  if ((param_1 & 0x400) == 0) {\n    cVar3 = (bVar1 & 0xb5) + 0x78;\n  }\n  else {\n    cVar3 = (bVar1 & 0xe0) + 0x73;\n  }\n  param_2[6] = cVar3;\n  param_2[7] = (-((param_1 & 4) == 0) & 0xbbU) + 0x72;\n  param_2[8] = (-((param_1 & 2) == 0) & 0xb6U) + 0x77;\n  bVar1 = -((param_1 & 1) == 0);\n  if ((param_1 & 0x200) != 0) {\n    param_2[9] = (bVar1 & 0xe0) + 0x74;\n    *(undefined2 *)(param_2 + 10) = 0x20;\n    return;\n  }\n  param_2[9] = (bVar1 & 0xb5) + 0x78;\n  *(undefined2 *)(param_2 + 10) = 0x20;\n  return;\n}\n\n",
            "funcName": "FUN_0040b9e0"
        },
        {
            "funcStartAddr": "0x40bb60",
            "funcEndAddr": "0x40bb68",
            "decompiledFuncCode": "\nvoid FUN_0040bb60(long param_1)\n\n{\n  FUN_0040b9e0(*(undefined4 *)(param_1 + 0x18));\n  return;\n}\n\n",
            "funcName": "FUN_0040bb60"
        },
        {
            "funcStartAddr": "0x40bb70",
            "funcEndAddr": "0x40bb88",
            "decompiledFuncCode": "\nvoid FUN_0040bb70(void)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_0040bb90();\n  if (lVar1 != 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00412bd0();\n}\n\n",
            "funcName": "FUN_0040bb70"
        },
        {
            "funcStartAddr": "0x40bb90",
            "funcEndAddr": "0x40bc64",
            "decompiledFuncCode": "\nvoid * FUN_0040bb90(void *param_1,char *param_2,long *param_3)\n\n{\n  char cVar1;\n  char cVar2;\n  long lVar3;\n  ulong uVar4;\n  size_t __n;\n  void *__dest;\n  undefined *puVar5;\n  size_t __n_00;\n  \n  lVar3 = FUN_0040b870();\n  uVar4 = FUN_0040b8d0(lVar3);\n  __n_00 = (lVar3 - (long)param_1) + uVar4;\n  if (uVar4 != 0) {\n    uVar4 = (ulong)(*(char *)(lVar3 + -1 + uVar4) != '/');\n  }\n  cVar1 = *param_2;\n  cVar2 = cVar1;\n  while (cVar2 == '/') {\n    param_2 = param_2 + 1;\n    cVar2 = *param_2;\n  }\n  __n = strlen(param_2);\n  __dest = malloc(uVar4 + 1 + __n_00 + __n);\n  if (__dest != (void *)0x0) {\n    puVar5 = (undefined *)mempcpy(__dest,param_1,__n_00);\n    *puVar5 = 0x2f;\n    if (param_3 != (long *)0x0) {\n      *param_3 = (long)(puVar5 + uVar4) - (ulong)(cVar1 == '/');\n    }\n    puVar5 = (undefined *)mempcpy(puVar5 + uVar4,param_2,__n);\n    *puVar5 = 0;\n  }\n  return __dest;\n}\n\n",
            "funcName": "FUN_0040bb90"
        },
        {
            "funcStartAddr": "0x40bc70",
            "funcEndAddr": "0x40bd16",
            "decompiledFuncCode": "\nchar * FUN_0040bc70(char **param_1)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  char cVar3;\n  char *pcVar4;\n  \n  pcVar4 = *param_1;\n  cVar3 = *pcVar4;\n  if (cVar3 == '\\0') {\n    return (char *)0x0;\n  }\n  bVar1 = false;\n  pcVar2 = (char *)0x0;\n  do {\n    if (bVar1) {\n      if ((0x39 < (int)cVar3 - 0x41U) ||\n         (bVar1 = false, (1L << ((byte)((int)cVar3 - 0x41U) & 0x3f) & 0x3ffffff03ffffffU) == 0)) {\n        bVar1 = false;\n        if (cVar3 != '~') {\n          pcVar2 = (char *)0x0;\n          bVar1 = false;\n        }\n      }\nLAB_0040bcc1:\n      *param_1 = pcVar4 + 1;\n      cVar3 = pcVar4[1];\n    }\n    else {\n      if (cVar3 == '.') {\n        bVar1 = true;\n        if (pcVar2 == (char *)0x0) {\n          pcVar2 = pcVar4;\n        }\n        goto LAB_0040bcc1;\n      }\n      if (cVar3 < '[') {\n        if (('@' < cVar3) || ((byte)(cVar3 - 0x30U) < 10)) goto LAB_0040bcc1;\n      }\n      else if ((byte)(cVar3 + 0x9fU) < 0x1a) goto LAB_0040bcc1;\n      if (cVar3 != '~') {\n        pcVar2 = (char *)0x0;\n      }\n      *param_1 = pcVar4 + 1;\n      cVar3 = pcVar4[1];\n    }\n    pcVar4 = pcVar4 + 1;\n    if (cVar3 == '\\0') {\n      return pcVar2;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_0040bc70"
        },
        {
            "funcStartAddr": "0x40bd40",
            "funcEndAddr": "0x40c120",
            "decompiledFuncCode": "\nuint FUN_0040bd40(byte *param_1,byte *param_2)\n\n{\n  byte bVar1;\n  ulong uVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  long lVar6;\n  size_t sVar7;\n  int iVar8;\n  long lVar9;\n  ulong uVar10;\n  ulong uVar11;\n  byte *pbVar12;\n  ulong uVar13;\n  byte bVar14;\n  byte *pbVar15;\n  uint uVar16;\n  size_t __n;\n  bool bVar17;\n  bool bVar18;\n  bool bVar19;\n  byte bVar20;\n  byte *local_48;\n  byte *local_40 [2];\n  \n  bVar20 = 0;\n  uVar3 = strcmp((char *)param_1,(char *)param_2);\n  if (uVar3 == 0) {\n    return 0;\n  }\n  bVar14 = *param_1;\n  if (bVar14 == 0) {\n    return 0xffffffff;\n  }\n  bVar1 = *param_2;\n  bVar17 = false;\n  bVar19 = bVar1 == 0;\n  if (bVar19) {\n    return 1;\n  }\n  lVar9 = 2;\n  pbVar12 = &DAT_0041d794;\n  pbVar15 = param_1;\n  do {\n    if (lVar9 == 0) break;\n    lVar9 = lVar9 + -1;\n    bVar17 = *pbVar12 < *pbVar15;\n    bVar19 = *pbVar12 == *pbVar15;\n    pbVar12 = pbVar12 + (ulong)bVar20 * -2 + 1;\n    pbVar15 = pbVar15 + (ulong)bVar20 * -2 + 1;\n  } while (bVar19);\n  bVar18 = false;\n  bVar17 = (!bVar17 && !bVar19) == bVar17;\n  if (bVar17) {\n    return 0xffffffff;\n  }\n  lVar9 = 2;\n  pbVar12 = &DAT_0041d794;\n  pbVar15 = param_2;\n  do {\n    if (lVar9 == 0) break;\n    lVar9 = lVar9 + -1;\n    bVar18 = *pbVar12 < *pbVar15;\n    bVar17 = *pbVar12 == *pbVar15;\n    pbVar12 = pbVar12 + (ulong)bVar20 * -2 + 1;\n    pbVar15 = pbVar15 + (ulong)bVar20 * -2 + 1;\n  } while (bVar17);\n  bVar19 = false;\n  bVar17 = (!bVar18 && !bVar17) == bVar18;\n  if (bVar17) {\n    return 1;\n  }\n  lVar9 = 3;\n  pbVar12 = &DAT_0041d793;\n  pbVar15 = param_1;\n  do {\n    if (lVar9 == 0) break;\n    lVar9 = lVar9 + -1;\n    bVar19 = *pbVar12 < *pbVar15;\n    bVar17 = *pbVar12 == *pbVar15;\n    pbVar12 = pbVar12 + (ulong)bVar20 * -2 + 1;\n    pbVar15 = pbVar15 + (ulong)bVar20 * -2 + 1;\n  } while (bVar17);\n  bVar18 = false;\n  bVar17 = (!bVar19 && !bVar17) == bVar19;\n  if (bVar17) {\n    return 0xffffffff;\n  }\n  lVar9 = 3;\n  pbVar12 = &DAT_0041d793;\n  pbVar15 = param_2;\n  do {\n    if (lVar9 == 0) break;\n    lVar9 = lVar9 + -1;\n    bVar18 = *pbVar12 < *pbVar15;\n    bVar17 = *pbVar12 == *pbVar15;\n    pbVar12 = pbVar12 + (ulong)bVar20 * -2 + 1;\n    pbVar15 = pbVar15 + (ulong)bVar20 * -2 + 1;\n  } while (bVar17);\n  if ((!bVar18 && !bVar17) == bVar18) {\n    return 1;\n  }\n  if ((bVar1 != 0x2e) && (bVar14 == 0x2e)) {\n    return 0xffffffff;\n  }\n  if (bVar14 == 0x2e) {\n    if ((bVar1 == 0x2e) && (bVar14 == 0x2e)) {\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n    }\n  }\n  else if (bVar1 == 0x2e) {\n    return 1;\n  }\n  local_48 = param_1;\n  local_40[0] = param_2;\n  lVar9 = FUN_0040bc70(&local_48);\n  lVar6 = FUN_0040bc70(local_40);\n  if (lVar9 == 0) {\n    __n = (long)local_48 - (long)param_1;\n    if (lVar6 != 0) goto LAB_0040be55;\n  }\n  else {\n    __n = lVar9 - (long)param_1;\n    if (lVar6 == 0) {\n      sVar7 = (long)local_40[0] - (long)param_2;\n    }\n    else {\nLAB_0040be55:\n      sVar7 = lVar6 - (long)param_2;\n    }\n    if ((__n != sVar7) || (iVar5 = strncmp((char *)param_1,(char *)param_2,__n), iVar5 != 0))\n    goto LAB_0040be64;\n    __n = (long)local_48 - (long)param_1;\n  }\n  sVar7 = (long)local_40[0] - (long)param_2;\nLAB_0040be64:\n  uVar10 = 0;\n  uVar13 = 0;\nLAB_0040be78:\n  if ((__n <= uVar10) && (sVar7 <= uVar13)) {\n    return uVar3;\n  }\n  lVar9 = uVar13 - uVar10;\n  uVar11 = uVar10;\n  if (__n <= uVar10) goto LAB_0040bf10;\nLAB_0040be91:\n  bVar20 = param_1[uVar10];\n  uVar11 = uVar10;\n  if ((int)(char)bVar20 - 0x30U < 10) goto LAB_0040bf10;\n  if (bVar20 - 0x30 < 10) {\n    if (sVar7 == uVar13) goto LAB_0040bf03;\n    bVar14 = param_2[uVar13];\n    goto LAB_0040bf46;\n  }\nLAB_0040beb4:\n  uVar16 = (uint)bVar20;\n  if ((uVar16 - 0x41 < 0x3a) && ((1L << ((byte)(uVar16 - 0x41) & 0x3f) & 0x3ffffff03ffffffU) != 0))\n  {\n    uVar4 = 0;\n    if (sVar7 == uVar10 + lVar9) goto LAB_0040befa;\n  }\n  else {\n    if (bVar20 == 0x7e) {\n      uVar16 = 0xffffffff;\n    }\n    else {\n      uVar16 = uVar16 + 0x100;\n    }\n    if (sVar7 == uVar10 + lVar9) {\n      return uVar16;\n    }\n  }\n  bVar14 = param_2[uVar13];\n  uVar4 = (uint)bVar14;\n  if (9 < bVar14 - 0x30) goto LAB_0040bf55;\n  uVar4 = 0;\nLAB_0040befa:\n  do {\n    if (uVar4 != uVar16) {\n      return uVar16 - uVar4;\n    }\nLAB_0040bf03:\n    do {\n      uVar10 = uVar10 + 1;\n      uVar13 = uVar13 + 1;\n      uVar11 = uVar10;\n      if (uVar10 < __n) goto LAB_0040be91;\nLAB_0040bf10:\n      bVar14 = param_2[uVar13];\n      if ((sVar7 <= uVar13) || ((int)(char)bVar14 - 0x30U < 10)) goto LAB_0040bf84;\n      uVar10 = uVar11;\n      if ((__n != uVar11) && (bVar20 = param_1[uVar11], 9 < bVar20 - 0x30)) goto LAB_0040beb4;\nLAB_0040bf46:\n      uVar4 = (uint)bVar14;\n      uVar16 = 0;\n    } while (uVar4 - 0x30 < 10);\nLAB_0040bf55:\n    if ((0x39 < bVar14 - 0x41) || ((1L << ((byte)(bVar14 - 0x41) & 0x3f) & 0x3ffffff03ffffffU) == 0)\n       ) {\n      if (bVar14 == 0x7e) {\n        uVar4 = 0xffffffff;\n      }\n      else {\n        uVar4 = uVar4 + 0x100;\n      }\n    }\n  } while( true );\nLAB_0040bf84:\n  for (; iVar5 = (int)(char)param_1[uVar11], uVar2 = uVar13, param_1[uVar11] == 0x30;\n      uVar11 = uVar11 + 1) {\n  }\n  while (bVar14 == 0x30) {\n    bVar14 = param_2[uVar2 + 1];\n    uVar2 = uVar2 + 1;\n  }\n  iVar8 = (int)(char)bVar14;\n  uVar10 = uVar11;\n  if (iVar5 - 0x30U < 10) {\n    if (9 < iVar8 - 0x30U) {\n      return 1;\n    }\n    uVar16 = 0;\n    while( true ) {\n      if (uVar16 == 0) {\n        uVar16 = iVar5 - iVar8;\n      }\n      uVar10 = uVar10 + 1;\n      iVar8 = (int)(char)param_2[uVar10 + (uVar2 - uVar11)];\n      uVar13 = (uVar10 - uVar11) + uVar2;\n      iVar5 = (int)(char)param_1[uVar10];\n      if (9 < iVar5 - 0x30U) break;\n      if (9 < iVar8 - 0x30U) {\n        return 1;\n      }\n    }\n    if (iVar8 - 0x30U < 10) {\n      return 0xffffffff;\n    }\n    if (uVar16 != 0) {\n      return uVar16;\n    }\n  }\n  else {\n    uVar13 = uVar2;\n    if (iVar8 - 0x30U < 10) {\n      return 0xffffffff;\n    }\n  }\n  goto LAB_0040be78;\n}\n\n",
            "funcName": "FUN_0040bd40"
        },
        {
            "funcStartAddr": "0x40c150",
            "funcEndAddr": "0x40c18a",
            "decompiledFuncCode": "\nvoid FUN_0040c150(timespec *param_1)\n\n{\n  int iVar1;\n  timeval local_18;\n  \n  iVar1 = clock_gettime(0,param_1);\n  if (iVar1 != 0) {\n    gettimeofday(&local_18,(__timezone_ptr_t)0x0);\n    param_1->tv_sec = local_18.tv_sec;\n    param_1->tv_nsec = local_18.tv_usec * 1000;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_0040c150"
        },
        {
            "funcStartAddr": "0x40c190",
            "funcEndAddr": "0x40c1e6",
            "decompiledFuncCode": "\nbool FUN_0040c190(int param_1)\n\n{\n  bool bVar1;\n  byte *pbVar2;\n  long lVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  bool bVar8;\n  byte bVar9;\n  \n  bVar9 = 0;\n  pbVar2 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar1 = true;\n  bVar6 = false;\n  bVar8 = pbVar2 == (byte *)0x0;\n  if (!bVar8) {\n    lVar3 = 2;\n    pbVar4 = pbVar2;\n    pbVar5 = &DAT_0041d796;\n    do {\n      if (lVar3 == 0) break;\n      lVar3 = lVar3 + -1;\n      bVar6 = *pbVar4 < *pbVar5;\n      bVar8 = *pbVar4 == *pbVar5;\n      pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      pbVar5 = pbVar5 + (ulong)bVar9 * -2 + 1;\n    } while (bVar8);\n    bVar1 = false;\n    bVar7 = false;\n    bVar6 = (!bVar6 && !bVar8) == bVar6;\n    if (!bVar6) {\n      lVar3 = 6;\n      pbVar4 = (byte *)\"POSIX\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar2 < *pbVar4;\n        bVar6 = *pbVar2 == *pbVar4;\n        pbVar2 = pbVar2 + (ulong)bVar9 * -2 + 1;\n        pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      } while (bVar6);\n      return (!bVar7 && !bVar6) != bVar7;\n    }\n  }\n  return bVar1;\n}\n\n",
            "funcName": "FUN_0040c190"
        },
        {
            "funcStartAddr": "0x40c1f0",
            "funcEndAddr": "0x40c281",
            "decompiledFuncCode": "\nulong FUN_0040c1f0(ulong param_1)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long lVar5;\n  \n  uVar3 = 10;\n  if (9 < param_1) {\n    uVar3 = param_1;\n  }\n  uVar3 = uVar3 | 1;\n  do {\n    if (uVar3 == 0xffffffffffffffff) {\n      return 0xffffffffffffffff;\n    }\n    uVar1 = uVar3 % 3;\n    if (uVar3 < 10) {\nLAB_0040c270:\n      if (uVar1 != 0) {\n        return uVar3;\n      }\n    }\n    else if (uVar1 != 0) {\n      lVar5 = 0x10;\n      uVar4 = 9;\n      uVar2 = 3;\n      do {\n        uVar2 = uVar2 + 2;\n        uVar4 = uVar4 + lVar5;\n        uVar1 = uVar3 % uVar2;\n        if (uVar3 <= uVar4) goto LAB_0040c270;\n        lVar5 = lVar5 + 8;\n      } while (uVar1 != 0);\n    }\n    uVar3 = uVar3 + 2;\n  } while( true );\n}\n\n",
            "funcName": "FUN_0040c1f0"
        },
        {
            "funcStartAddr": "0x40c290",
            "funcEndAddr": "0x40c2a0",
            "decompiledFuncCode": "\nulong FUN_0040c290(ulong param_1,ulong param_2)\n\n{\n  return (param_1 >> 3 | param_1 << 0x3d) % param_2;\n}\n\n",
            "funcName": "FUN_0040c290"
        },
        {
            "funcStartAddr": "0x40c2a0",
            "funcEndAddr": "0x40c2a7",
            "decompiledFuncCode": "\nbool FUN_0040c2a0(long param_1,long param_2)\n\n{\n  return param_1 == param_2;\n}\n\n",
            "funcName": "FUN_0040c2a0"
        },
        {
            "funcStartAddr": "0x40c2b0",
            "funcEndAddr": "0x40c2d1",
            "decompiledFuncCode": "\nlong FUN_0040c2b0(long *param_1,undefined8 param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = (*(code *)param_1[6])(param_2,param_1[2]);\n  if (uVar1 <= (ulong)param_1[2] && param_1[2] != uVar1) {\n    return uVar1 * 0x10 + *param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040c2b0"
        },
        {
            "funcStartAddr": "0x40c2e0",
            "funcEndAddr": "0x40c3e5",
            "decompiledFuncCode": "\nlong FUN_0040c2e0(long param_1,long param_2,long **param_3,char param_4)\n\n{\n  undefined8 *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  char cVar5;\n  long *plVar6;\n  long *plVar7;\n  long lVar8;\n  \n  plVar6 = (long *)FUN_0040c2b0();\n  *param_3 = plVar6;\n  lVar8 = *plVar6;\n  if (lVar8 == 0) {\n    return 0;\n  }\n  if (lVar8 != param_2) {\n    cVar5 = (**(code **)(param_1 + 0x38))(param_2);\n    if (cVar5 == '\\0') {\n      plVar7 = (long *)plVar6[1];\n      if (plVar7 == (long *)0x0) {\n        return 0;\n      }\n      lVar8 = *plVar7;\n      do {\n        if (param_2 == lVar8) {\nLAB_0040c36c:\n          if (param_4 == '\\0') {\n            return lVar8;\n          }\n          plVar6[1] = plVar7[1];\n          *plVar7 = 0;\n          plVar7[1] = *(long *)(param_1 + 0x48);\n          *(long **)(param_1 + 0x48) = plVar7;\n          return lVar8;\n        }\n        cVar5 = (**(code **)(param_1 + 0x38))(param_2);\n        if (cVar5 != '\\0') {\n          plVar7 = (long *)plVar6[1];\n          lVar8 = *plVar7;\n          goto LAB_0040c36c;\n        }\n        plVar6 = (long *)plVar6[1];\n        plVar7 = (long *)plVar6[1];\n        if (plVar7 == (long *)0x0) {\n          return 0;\n        }\n        lVar8 = *plVar7;\n      } while( true );\n    }\n    lVar8 = *plVar6;\n  }\n  if (param_4 != '\\0') {\n    puVar1 = (undefined8 *)plVar6[1];\n    if (puVar1 != (undefined8 *)0x0) {\n      uVar2 = *(undefined4 *)((long)puVar1 + 4);\n      uVar3 = *(undefined4 *)(puVar1 + 1);\n      uVar4 = *(undefined4 *)((long)puVar1 + 0xc);\n      *(undefined4 *)plVar6 = *(undefined4 *)puVar1;\n      *(undefined4 *)((long)plVar6 + 4) = uVar2;\n      *(undefined4 *)(plVar6 + 1) = uVar3;\n      *(undefined4 *)((long)plVar6 + 0xc) = uVar4;\n      *puVar1 = 0;\n      puVar1[1] = *(undefined8 *)(param_1 + 0x48);\n      *(undefined8 **)(param_1 + 0x48) = puVar1;\n      return lVar8;\n    }\n    *plVar6 = 0;\n  }\n  return lVar8;\n}\n\n",
            "funcName": "FUN_0040c2e0"
        },
        {
            "funcStartAddr": "0x40c400",
            "funcEndAddr": "0x40c47a",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_0040c400(float **param_1)\n\n{\n  float fVar1;\n  float *pfVar2;\n  float fVar3;\n  \n  pfVar2 = *param_1;\n  if (pfVar2 == (float *)&DAT_0041d810) {\n    return 1;\n  }\n  fVar1 = pfVar2[2];\n  if ((((_DAT_0041d824 < fVar1) && (fVar1 < DAT_0041d828)) && (_DAT_0041d82c < pfVar2[3])) &&\n     (_DAT_0041d830 <= *pfVar2)) {\n    fVar3 = *pfVar2 + _DAT_0041d824;\n    if (((fVar3 < pfVar2[1]) && (pfVar2[1] <= DAT_0041d834)) && (fVar3 < fVar1)) {\n      return 1;\n    }\n  }\n  *param_1 = (float *)&DAT_0041d810;\n  return 0;\n}\n\n",
            "funcName": "FUN_0040c400"
        },
        {
            "funcStartAddr": "0x40c480",
            "funcEndAddr": "0x40c5ba",
            "decompiledFuncCode": "\nundefined8 FUN_0040c480(long param_1,long **param_2,char param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  long lVar6;\n  \n  plVar5 = *param_2;\n  if (param_2[1] <= plVar5) {\n    return 1;\n  }\n  do {\n    while (lVar6 = *plVar5, lVar6 == 0) {\nLAB_0040c4a8:\n      plVar5 = plVar5 + 2;\n      if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n        return 1;\n      }\n    }\n    plVar3 = (long *)plVar5[1];\n    if ((long *)plVar5[1] != (long *)0x0) {\n      do {\n        while( true ) {\n          lVar6 = *plVar3;\n          plVar2 = (long *)FUN_0040c2b0(param_1,lVar6);\n          plVar4 = (long *)plVar3[1];\n          if (*plVar2 != 0) break;\n          *plVar2 = lVar6;\n          *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n          *plVar3 = 0;\n          plVar3[1] = *(long *)(param_1 + 0x48);\n          *(long **)(param_1 + 0x48) = plVar3;\n          plVar3 = plVar4;\n          if (plVar4 == (long *)0x0) goto LAB_0040c51f;\n        }\n        plVar3[1] = plVar2[1];\n        plVar2[1] = (long)plVar3;\n        plVar3 = plVar4;\n      } while (plVar4 != (long *)0x0);\nLAB_0040c51f:\n      lVar6 = *plVar5;\n    }\n    plVar5[1] = 0;\n    if (param_3 != '\\0') goto LAB_0040c4a8;\n    plVar3 = (long *)FUN_0040c2b0(param_1,lVar6);\n    if (*plVar3 == 0) {\n      *plVar3 = lVar6;\n      *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n    }\n    else {\n      plVar4 = *(long **)(param_1 + 0x48);\n      if (plVar4 == (long *)0x0) {\n        plVar4 = (long *)malloc(0x10);\n        if (plVar4 == (long *)0x0) {\n          return 0;\n        }\n      }\n      else {\n        *(long *)(param_1 + 0x48) = plVar4[1];\n      }\n      lVar1 = plVar3[1];\n      *plVar4 = lVar6;\n      plVar4[1] = lVar1;\n      plVar3[1] = (long)plVar4;\n    }\n    *plVar5 = 0;\n    plVar5 = plVar5 + 2;\n    param_2[3] = (long *)((long)param_2[3] + -1);\n    if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n      return 1;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_0040c480"
        },
        {
            "funcStartAddr": "0x40c5d0",
            "funcEndAddr": "0x40c5d5",
            "decompiledFuncCode": "\nundefined8 FUN_0040c5d0(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x10);\n}\n\n",
            "funcName": "FUN_0040c5d0"
        },
        {
            "funcStartAddr": "0x40c5e0",
            "funcEndAddr": "0x40c5e5",
            "decompiledFuncCode": "\nundefined8 FUN_0040c5e0(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x18);\n}\n\n",
            "funcName": "FUN_0040c5e0"
        },
        {
            "funcStartAddr": "0x40c5f0",
            "funcEndAddr": "0x40c5f5",
            "decompiledFuncCode": "\nundefined8 FUN_0040c5f0(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x20);\n}\n\n",
            "funcName": "FUN_0040c5f0"
        },
        {
            "funcStartAddr": "0x40c600",
            "funcEndAddr": "0x40c64f",
            "decompiledFuncCode": "\nvoid FUN_0040c600(long **param_1)\n\n{\n  long *plVar1;\n  long lVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  plVar1 = param_1[1];\n  uVar3 = 0;\n  if (plVar1 <= plVar5) {\n    return;\n  }\n  do {\n    while (*plVar5 == 0) {\n      plVar5 = plVar5 + 2;\n      if (plVar1 <= plVar5) {\n        return;\n      }\n    }\n    uVar4 = 1;\n    for (lVar2 = plVar5[1]; lVar2 != 0; lVar2 = *(long *)(lVar2 + 8)) {\n      uVar4 = uVar4 + 1;\n    }\n    if (uVar3 < uVar4) {\n      uVar3 = uVar4;\n    }\n    plVar5 = plVar5 + 2;\n  } while (plVar5 < plVar1);\n  return;\n}\n\n",
            "funcName": "FUN_0040c600"
        },
        {
            "funcStartAddr": "0x40c650",
            "funcEndAddr": "0x40c6b2",
            "decompiledFuncCode": "\nbool FUN_0040c650(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  \n  plVar2 = *param_1;\n  plVar3 = (long *)0x0;\n  plVar4 = (long *)0x0;\n  do {\n    while( true ) {\n      if (param_1[1] <= plVar2) {\n        if (param_1[3] != plVar4) {\n          return false;\n        }\n        return param_1[4] == plVar3;\n      }\n      if (*plVar2 != 0) break;\nLAB_0040c668:\n      plVar2 = plVar2 + 2;\n    }\n    lVar1 = plVar2[1];\n    plVar4 = (long *)((long)plVar4 + 1);\n    plVar3 = (long *)((long)plVar3 + 1);\n    if (lVar1 == 0) goto LAB_0040c668;\n    do {\n      lVar1 = *(long *)(lVar1 + 8);\n      plVar3 = (long *)((long)plVar3 + 1);\n    } while (lVar1 != 0);\n    plVar2 = plVar2 + 2;\n  } while( true );\n}\n\n",
            "funcName": "FUN_0040c650"
        },
        {
            "funcStartAddr": "0x40c6c0",
            "funcEndAddr": "0x40c7fc",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0040c6c0(long **param_1,undefined8 param_2)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long lVar3;\n  ulong uVar4;\n  ulong uVar5;\n  long *plVar6;\n  double dVar7;\n  double dVar8;\n  \n  uVar5 = 0;\n  plVar1 = param_1[2];\n  plVar2 = param_1[3];\n  for (plVar6 = *param_1; plVar6 < param_1[1]; plVar6 = plVar6 + 2) {\n    while (*plVar6 != 0) {\n      uVar4 = 1;\n      for (lVar3 = plVar6[1]; lVar3 != 0; lVar3 = *(long *)(lVar3 + 8)) {\n        uVar4 = uVar4 + 1;\n      }\n      if (uVar5 < uVar4) {\n        uVar5 = uVar4;\n      }\n      plVar6 = plVar6 + 2;\n      if (param_1[1] <= plVar6) goto LAB_0040c72d;\n    }\n  }\nLAB_0040c72d:\n  __fprintf_chk(param_2,1,\"# entries:         %lu\\n\",param_1[4]);\n  __fprintf_chk(param_2,1,\"# buckets:         %lu\\n\",plVar1);\n  if ((long)plVar2 < 0) {\n    dVar7 = (double)((ulong)plVar2 >> 1 | (ulong)((uint)plVar2 & 1));\n    dVar7 = dVar7 + dVar7;\n  }\n  else {\n    dVar7 = (double)(long)plVar2;\n  }\n  if ((long)plVar1 < 0) {\n    dVar8 = (double)((ulong)plVar1 >> 1 | (ulong)((uint)plVar1 & 1));\n    dVar8 = dVar8 + dVar8;\n  }\n  else {\n    dVar8 = (double)(long)plVar1;\n  }\n  __fprintf_chk((dVar7 * _DAT_0041d848) / dVar8,param_2,1,\"# buckets used:    %lu (%.2f%%)\\n\",plVar2\n               );\n  __fprintf_chk(param_2,1,\"max bucket length: %lu\\n\",uVar5);\n  return;\n}\n\n",
            "funcName": "FUN_0040c6c0"
        },
        {
            "funcStartAddr": "0x40c810",
            "funcEndAddr": "0x40c85b",
            "decompiledFuncCode": "\nlong FUN_0040c810(long param_1,long param_2)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  \n  plVar2 = (long *)FUN_0040c2b0();\n  lVar3 = *plVar2;\n  if (lVar3 == 0) {\n    return 0;\n  }\n  while( true ) {\n    if (lVar3 == param_2) {\n      return param_2;\n    }\n    cVar1 = (**(code **)(param_1 + 0x38))(param_2);\n    if (cVar1 != '\\0') break;\n    plVar2 = (long *)plVar2[1];\n    if (plVar2 == (long *)0x0) {\n      return 0;\n    }\n    lVar3 = *plVar2;\n  }\n  return *plVar2;\n}\n\n",
            "funcName": "FUN_0040c810"
        },
        {
            "funcStartAddr": "0x40c870",
            "funcEndAddr": "0x40c8aa",
            "decompiledFuncCode": "\nlong FUN_0040c870(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  \n  if (param_1[4] == (long *)0x0) {\n    return 0;\n  }\n  plVar2 = *param_1;\n  if (param_1[1] <= plVar2) {\n    lVar1 = FUN_00402e55();\n    return lVar1;\n  }\n  do {\n    if (*plVar2 != 0) {\n      return *plVar2;\n    }\n    plVar2 = plVar2 + 2;\n  } while (plVar2 < param_1[1]);\n  lVar1 = FUN_00402e55();\n  return lVar1;\n}\n\n",
            "funcName": "FUN_0040c870"
        },
        {
            "funcStartAddr": "0x40c8c0",
            "funcEndAddr": "0x40c919",
            "decompiledFuncCode": "\nlong FUN_0040c8c0(long param_1,long param_2)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  \n  plVar2 = (long *)FUN_0040c2b0();\n  plVar3 = plVar2;\n  do {\n    lVar1 = *plVar3;\n    plVar3 = (long *)plVar3[1];\n    if (lVar1 == param_2) {\n      if (plVar3 != (long *)0x0) {\n        return *plVar3;\n      }\n      break;\n    }\n  } while (plVar3 != (long *)0x0);\n  do {\n    plVar2 = plVar2 + 2;\n    if (*(long **)(param_1 + 8) <= plVar2) {\n      return 0;\n    }\n  } while (*plVar2 == 0);\n  return *plVar2;\n}\n\n",
            "funcName": "FUN_0040c8c0"
        },
        {
            "funcStartAddr": "0x40c930",
            "funcEndAddr": "0x40c990",
            "decompiledFuncCode": "\nulong FUN_0040c930(long **param_1,long param_2,ulong param_3)\n\n{\n  undefined8 *puVar1;\n  ulong uVar2;\n  long *plVar3;\n  \n  plVar3 = *param_1;\n  if (param_1[1] < plVar3 || param_1[1] == plVar3) {\n    return 0;\n  }\n  uVar2 = 0;\n  do {\n    if (*plVar3 != 0) {\n      if (param_3 <= uVar2) {\n        return uVar2;\n      }\n      *(long *)(param_2 + uVar2 * 8) = *plVar3;\n      uVar2 = uVar2 + 1;\n      for (puVar1 = (undefined8 *)plVar3[1]; puVar1 != (undefined8 *)0x0;\n          puVar1 = (undefined8 *)puVar1[1]) {\n        if (param_3 == uVar2) {\n          return param_3;\n        }\n        uVar2 = uVar2 + 1;\n        *(undefined8 *)(param_2 + -8 + uVar2 * 8) = *puVar1;\n      }\n    }\n    plVar3 = plVar3 + 2;\n  } while (plVar3 <= param_1[1] && param_1[1] != plVar3);\n  return uVar2;\n}\n\n",
            "funcName": "FUN_0040c930"
        },
        {
            "funcStartAddr": "0x40c9a0",
            "funcEndAddr": "0x40ca0b",
            "decompiledFuncCode": "\nlong FUN_0040c9a0(long **param_1,code *param_2,undefined8 param_3)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  long lVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (param_1[1] < plVar5 || param_1[1] == plVar5) {\n    lVar3 = 0;\n  }\n  else {\n    lVar3 = 0;\n    do {\n      lVar4 = *plVar5;\n      plVar2 = plVar5;\n      if (lVar4 != 0) {\n        while( true ) {\n          cVar1 = (*param_2)(lVar4,param_3);\n          if (cVar1 == '\\0') {\n            return lVar3;\n          }\n          plVar2 = (long *)plVar2[1];\n          lVar3 = lVar3 + 1;\n          if (plVar2 == (long *)0x0) break;\n          lVar4 = *plVar2;\n        }\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\n  return lVar3;\n}\n\n",
            "funcName": "FUN_0040c9a0"
        },
        {
            "funcStartAddr": "0x40ca20",
            "funcEndAddr": "0x40ca51",
            "decompiledFuncCode": "\nulong FUN_0040ca20(byte *param_1,ulong param_2)\n\n{\n  byte bVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  bVar1 = *param_1;\n  while (bVar1 != 0) {\n    param_1 = param_1 + 1;\n    uVar2 = (uVar2 * 0x1f + (ulong)bVar1) % param_2;\n    bVar1 = *param_1;\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_0040ca20"
        },
        {
            "funcStartAddr": "0x40ca60",
            "funcEndAddr": "0x40ca80",
            "decompiledFuncCode": "\nvoid FUN_0040ca60(undefined8 *param_1)\n\n{\n  *(undefined *)(param_1 + 2) = 0;\n  *param_1 = 0x3f80000000000000;\n  param_1[1] = 0x3fb4fdf43f4ccccd;\n  return;\n}\n\n",
            "funcName": "FUN_0040ca60"
        },
        {
            "funcStartAddr": "0x40ca80",
            "funcEndAddr": "0x40cc00",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid ** FUN_0040ca80(ulong param_1,void *param_2,code *param_3,code *param_4,void *param_5)\n\n{\n  char cVar1;\n  void **__ptr;\n  void *__nmemb;\n  void *pvVar2;\n  float fVar3;\n  float fVar4;\n  \n  if (param_3 == (code *)0x0) {\n    param_3 = FUN_0040c290;\n  }\n  if (param_4 == (code *)0x0) {\n    param_4 = FUN_0040c2a0;\n  }\n  __ptr = (void **)malloc(0x50);\n  if (__ptr == (void **)0x0) {\n    return (void **)0x0;\n  }\n  if (param_2 == (void *)0x0) {\n    __ptr[5] = &DAT_0041d810;\n    cVar1 = FUN_0040c400(__ptr + 5);\n    if (cVar1 == '\\0') goto LAB_0040cb60;\n    fVar4 = DAT_0041d838;\n    if ((long)param_1 < 0) goto LAB_0040cbe3;\nLAB_0040cb9e:\n    fVar3 = (float)param_1;\nLAB_0040cba7:\n    fVar3 = fVar3 / fVar4;\n    if (_DAT_0041d83c <= fVar3) goto LAB_0040cb60;\n    if (fVar3 < _DAT_0041d840) {\n      param_1 = (ulong)fVar3;\n    }\n    else {\n      param_1 = (long)(fVar3 - _DAT_0041d840) ^ 0x8000000000000000;\n    }\n  }\n  else {\n    __ptr[5] = param_2;\n    cVar1 = FUN_0040c400(__ptr + 5);\n    if (cVar1 == '\\0') goto LAB_0040cb60;\n    if (*(char *)((long)param_2 + 0x10) == '\\0') {\n      fVar4 = *(float *)((long)param_2 + 8);\n      if (-1 < (long)param_1) goto LAB_0040cb9e;\nLAB_0040cbe3:\n      fVar3 = (float)(param_1 >> 1 | (ulong)((uint)param_1 & 1));\n      fVar3 = fVar3 + fVar3;\n      goto LAB_0040cba7;\n    }\n  }\n  __nmemb = (void *)FUN_0040c1f0(param_1);\n  if (((((ulong)__nmemb >> 0x3c & 1) == 0) && ((ulong)__nmemb >> 0x3d == 0)) &&\n     (__ptr[2] = __nmemb, __nmemb != (void *)0x0)) {\n    pvVar2 = calloc((size_t)__nmemb,0x10);\n    *__ptr = pvVar2;\n    if (pvVar2 != (void *)0x0) {\n      __ptr[3] = (void *)0x0;\n      __ptr[4] = (void *)0x0;\n      __ptr[1] = (void *)((long)__nmemb * 0x10 + (long)pvVar2);\n      __ptr[6] = param_3;\n      __ptr[7] = param_4;\n      __ptr[8] = param_5;\n      __ptr[9] = (void *)0x0;\n      return __ptr;\n    }\n  }\nLAB_0040cb60:\n  free(__ptr);\n  return (void **)0x0;\n}\n\n",
            "funcName": "FUN_0040ca80"
        },
        {
            "funcStartAddr": "0x40cc10",
            "funcEndAddr": "0x40ccb5",
            "decompiledFuncCode": "\nvoid FUN_0040cc10(long **param_1)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (*param_1 < param_1[1]) {\n    do {\n      while (*plVar5 != 0) {\n        plVar4 = param_1[8];\n        plVar3 = (long *)plVar5[1];\n        while (plVar3 != (long *)0x0) {\n          if (plVar4 != (long *)0x0) {\n            (*(code *)plVar4)(*plVar3);\n            plVar4 = param_1[8];\n          }\n          plVar1 = (long *)plVar3[1];\n          plVar2 = param_1[9];\n          *plVar3 = 0;\n          plVar3[1] = (long)plVar2;\n          param_1[9] = plVar3;\n          plVar3 = plVar1;\n        }\n        if (plVar4 != (long *)0x0) {\n          (*(code *)plVar4)(*plVar5);\n        }\n        *plVar5 = 0;\n        plVar4 = plVar5 + 2;\n        plVar5[1] = 0;\n        plVar5 = plVar4;\n        if (param_1[1] < plVar4 || param_1[1] == plVar4) goto LAB_0040cca3;\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\nLAB_0040cca3:\n  param_1[3] = (long *)0x0;\n  param_1[4] = (long *)0x0;\n  return;\n}\n\n",
            "funcName": "FUN_0040cc10"
        },
        {
            "funcStartAddr": "0x40ccc0",
            "funcEndAddr": "0x40cd90",
            "decompiledFuncCode": "\nvoid FUN_0040ccc0(long **param_1)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long lVar5;\n  \n  plVar4 = *param_1;\n  plVar2 = param_1[1];\n  if ((param_1[8] != (long *)0x0) && (param_1[4] != (long *)0x0)) {\n    if (plVar2 <= plVar4) goto LAB_0040cd5c;\n    do {\n      while (lVar5 = *plVar4, plVar3 = plVar4, lVar5 == 0) {\n        plVar4 = plVar4 + 2;\n        if (plVar2 <= plVar4) goto LAB_0040cd1f;\n      }\n      while( true ) {\n        (*(code *)param_1[8])(lVar5);\n        plVar3 = (long *)plVar3[1];\n        if (plVar3 == (long *)0x0) break;\n        lVar5 = *plVar3;\n      }\n      plVar2 = param_1[1];\n      plVar4 = plVar4 + 2;\n    } while (plVar4 < plVar2);\nLAB_0040cd1f:\n    plVar4 = *param_1;\n  }\n  if (plVar4 < plVar2) {\n    do {\n      __ptr = (void *)plVar4[1];\n      while (__ptr != (void *)0x0) {\n        pvVar1 = *(void **)((long)__ptr + 8);\n        free(__ptr);\n        __ptr = pvVar1;\n      }\n      plVar4 = plVar4 + 2;\n    } while (plVar4 <= param_1[1] && param_1[1] != plVar4);\n  }\nLAB_0040cd5c:\n  plVar4 = param_1[9];\n  while (plVar4 != (long *)0x0) {\n    plVar2 = (long *)plVar4[1];\n    free(plVar4);\n    plVar4 = plVar2;\n  }\n  free(*param_1);\n  free(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_0040ccc0"
        },
        {
            "funcStartAddr": "0x40cda0",
            "funcEndAddr": "0x40cf8b",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined4 FUN_0040cda0(void **param_1,ulong param_2)\n\n{\n  char cVar1;\n  undefined4 uVar2;\n  float fVar3;\n  void *local_68;\n  void *local_60;\n  void *local_58;\n  void *local_50;\n  undefined8 local_48;\n  void *local_40;\n  void *local_38;\n  void *local_30;\n  void *local_28;\n  void *local_20;\n  \n  local_40 = param_1[5];\n  if (*(char *)((long)local_40 + 0x10) == '\\0') {\n    if ((long)param_2 < 0) {\n      fVar3 = (float)(param_2 >> 1 | (ulong)((uint)param_2 & 1));\n      fVar3 = fVar3 + fVar3;\n    }\n    else {\n      fVar3 = (float)param_2;\n    }\n    fVar3 = fVar3 / *(float *)((long)local_40 + 8);\n    if (_DAT_0041d83c <= fVar3) {\n      return 0;\n    }\n    if (fVar3 < _DAT_0041d840) {\n      param_2 = (ulong)fVar3;\n    }\n    else {\n      param_2 = (long)(fVar3 - _DAT_0041d840) ^ 0x8000000000000000;\n    }\n  }\n  local_58 = (void *)FUN_0040c1f0(param_2);\n  if ((local_58 != (void *)0x0) && (-1 < (long)local_58 * 8 && (ulong)local_58 >> 0x3d == 0)) {\n    if (param_1[2] == local_58) {\n      return 1;\n    }\n    local_68 = calloc((size_t)local_58,0x10);\n    if (local_68 != (void *)0x0) {\n      local_60 = (void *)((long)local_58 * 0x10 + (long)local_68);\n      local_38 = param_1[6];\n      local_50 = (void *)0x0;\n      local_30 = param_1[7];\n      local_48 = 0;\n      local_28 = param_1[8];\n      local_20 = param_1[9];\n      uVar2 = FUN_0040c480(&local_68,param_1,0);\n      if ((char)uVar2 != '\\0') {\n        free(*param_1);\n        *param_1 = local_68;\n        param_1[1] = local_60;\n        param_1[2] = local_58;\n        param_1[3] = local_50;\n        param_1[9] = local_20;\n        return uVar2;\n      }\n      param_1[9] = local_20;\n      cVar1 = FUN_0040c480(param_1,&local_68,1);\n      if ((cVar1 != '\\0') && (cVar1 = FUN_0040c480(param_1,&local_68,0), cVar1 != '\\0')) {\n        free(local_68);\n        return uVar2;\n      }\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040cda0"
        },
        {
            "funcStartAddr": "0x40cfa0",
            "funcEndAddr": "0x40d1f1",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_0040cfa0(long param_1,long param_2,long *param_3)\n\n{\n  char cVar1;\n  long lVar2;\n  ulong uVar3;\n  long *plVar4;\n  undefined8 uVar5;\n  ulong uVar6;\n  float fVar7;\n  float fVar8;\n  long *local_20;\n  \n  if (param_2 == 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  lVar2 = FUN_0040c2e0(param_1,param_2,&local_20,0);\n  if (lVar2 != 0) {\n    if (param_3 != (long *)0x0) {\n      *param_3 = lVar2;\n    }\n    return 0;\n  }\n  uVar6 = *(ulong *)(param_1 + 0x18);\n  if ((long)uVar6 < 0) {\n    uVar3 = *(ulong *)(param_1 + 0x10);\n    fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n    lVar2 = *(long *)(param_1 + 0x28);\n    fVar7 = fVar7 + fVar7;\n    if ((long)uVar3 < 0) goto LAB_0040d09a;\nLAB_0040d00b:\n    if (fVar7 <= (float)uVar3 * *(float *)(lVar2 + 8)) goto LAB_0040d022;\n  }\n  else {\n    lVar2 = *(long *)(param_1 + 0x28);\n    fVar7 = (float)uVar6;\n    uVar3 = *(ulong *)(param_1 + 0x10);\n    if (-1 < (long)uVar3) goto LAB_0040d00b;\nLAB_0040d09a:\n    fVar8 = (float)(uVar3 >> 1 | (ulong)((uint)uVar3 & 1));\n    if (fVar7 <= (fVar8 + fVar8) * *(float *)(lVar2 + 8)) goto LAB_0040d022;\n  }\n  FUN_0040c400(param_1 + 0x28);\n  lVar2 = *(long *)(param_1 + 0x28);\n  uVar6 = *(ulong *)(param_1 + 0x10);\n  if ((long)uVar6 < 0) {\n    fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n    fVar7 = fVar7 + fVar7;\n  }\n  else {\n    fVar7 = (float)uVar6;\n  }\n  uVar6 = *(ulong *)(param_1 + 0x18);\n  if ((long)uVar6 < 0) {\n    fVar8 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n    fVar8 = fVar8 + fVar8;\n  }\n  else {\n    fVar8 = (float)uVar6;\n  }\n  if (*(float *)(lVar2 + 8) * fVar7 < fVar8) {\n    fVar7 = fVar7 * *(float *)(lVar2 + 0xc);\n    if (*(char *)(lVar2 + 0x10) == '\\0') {\n      fVar7 = fVar7 * *(float *)(lVar2 + 8);\n    }\n    if (_DAT_0041d83c <= fVar7) {\n      return 0xffffffff;\n    }\n    if (_DAT_0041d840 <= fVar7) {\n      uVar6 = (long)(fVar7 - _DAT_0041d840) ^ 0x8000000000000000;\n    }\n    else {\n      uVar6 = (ulong)fVar7;\n    }\n    cVar1 = FUN_0040cda0(param_1,uVar6);\n    if (cVar1 == '\\0') {\n      return 0xffffffff;\n    }\n    lVar2 = FUN_0040c2e0(param_1,param_2,&local_20,0);\n    if (lVar2 != 0) {\n      uVar5 = FUN_00402e5f();\n      return uVar5;\n    }\n  }\nLAB_0040d022:\n  if (*local_20 == 0) {\n    *local_20 = param_2;\n    *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n    *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n    return 1;\n  }\n  plVar4 = *(long **)(param_1 + 0x48);\n  if (plVar4 == (long *)0x0) {\n    plVar4 = (long *)malloc(0x10);\n    if (plVar4 == (long *)0x0) {\n      return 0xffffffff;\n    }\n  }\n  else {\n    *(long *)(param_1 + 0x48) = plVar4[1];\n  }\n  lVar2 = local_20[1];\n  *plVar4 = param_2;\n  plVar4[1] = lVar2;\n  local_20[1] = (long)plVar4;\n  *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n  return 1;\n}\n\n",
            "funcName": "FUN_0040cfa0"
        },
        {
            "funcStartAddr": "0x40d220",
            "funcEndAddr": "0x40d254",
            "decompiledFuncCode": "\nundefined8 FUN_0040d220(undefined8 param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  undefined8 local_10;\n  \n  iVar1 = FUN_0040cfa0(param_1,param_2,&local_10);\n  if (iVar1 != -1) {\n    if (iVar1 == 0) {\n      param_2 = local_10;\n    }\n    return param_2;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040d220"
        },
        {
            "funcStartAddr": "0x40d260",
            "funcEndAddr": "0x40d41f",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nlong FUN_0040d260(long param_1,undefined8 param_2)\n\n{\n  float *pfVar1;\n  ulong uVar2;\n  void *pvVar3;\n  void *__ptr;\n  char cVar4;\n  long lVar5;\n  ulong uVar6;\n  float fVar7;\n  float fVar8;\n  long *local_20;\n  \n  lVar5 = FUN_0040c2e0(param_1,param_2,&local_20,1);\n  if (lVar5 == 0) {\n    return 0;\n  }\n  *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + -1;\n  if (*local_20 == 0) {\n    uVar6 = *(long *)(param_1 + 0x18) - 1;\n    *(ulong *)(param_1 + 0x18) = uVar6;\n    if ((long)uVar6 < 0) {\n      uVar2 = *(ulong *)(param_1 + 0x10);\n      fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n      pfVar1 = *(float **)(param_1 + 0x28);\n      fVar7 = fVar7 + fVar7;\n    }\n    else {\n      pfVar1 = *(float **)(param_1 + 0x28);\n      fVar7 = (float)uVar6;\n      uVar2 = *(ulong *)(param_1 + 0x10);\n    }\n    if ((long)uVar2 < 0) {\n      fVar8 = (float)(uVar2 >> 1 | (ulong)((uint)uVar2 & 1));\n      fVar8 = fVar8 + fVar8;\n    }\n    else {\n      fVar8 = (float)uVar2;\n    }\n    if (fVar7 < fVar8 * *pfVar1) {\n      FUN_0040c400(param_1 + 0x28);\n      uVar6 = *(ulong *)(param_1 + 0x10);\n      pfVar1 = *(float **)(param_1 + 0x28);\n      if ((long)uVar6 < 0) {\n        fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n        fVar7 = fVar7 + fVar7;\n      }\n      else {\n        fVar7 = (float)uVar6;\n      }\n      uVar6 = *(ulong *)(param_1 + 0x18);\n      if ((long)uVar6 < 0) {\n        fVar8 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n        fVar8 = fVar8 + fVar8;\n      }\n      else {\n        fVar8 = (float)uVar6;\n      }\n      if (fVar8 < *pfVar1 * fVar7) {\n        fVar7 = fVar7 * pfVar1[1];\n        if (*(char *)(pfVar1 + 4) == '\\0') {\n          fVar7 = fVar7 * pfVar1[2];\n        }\n        if (_DAT_0041d840 <= fVar7) {\n          uVar6 = (long)(fVar7 - _DAT_0041d840) ^ 0x8000000000000000;\n        }\n        else {\n          uVar6 = (ulong)fVar7;\n        }\n        cVar4 = FUN_0040cda0(param_1,uVar6);\n        if (cVar4 == '\\0') {\n          __ptr = *(void **)(param_1 + 0x48);\n          while (__ptr != (void *)0x0) {\n            pvVar3 = *(void **)((long)__ptr + 8);\n            free(__ptr);\n            __ptr = pvVar3;\n          }\n          *(undefined8 *)(param_1 + 0x48) = 0;\n        }\n      }\n    }\n    return lVar5;\n  }\n  return lVar5;\n}\n\n",
            "funcName": "FUN_0040d260"
        },
        {
            "funcStartAddr": "0x40d440",
            "funcEndAddr": "0x40d467",
            "decompiledFuncCode": "\nulong FUN_0040d440(undefined8 *param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = FUN_00417960(*param_1);\n  return (uVar1 ^ param_1[1]) % param_2;\n}\n\n",
            "funcName": "FUN_0040d440"
        },
        {
            "funcStartAddr": "0x40d470",
            "funcEndAddr": "0x40d47d",
            "decompiledFuncCode": "\nulong FUN_0040d470(long param_1,ulong param_2)\n\n{\n  return *(ulong *)(param_1 + 8) % param_2;\n}\n\n",
            "funcName": "FUN_0040d470"
        },
        {
            "funcStartAddr": "0x40d480",
            "funcEndAddr": "0x40d4a2",
            "decompiledFuncCode": "\nundefined8 FUN_0040d480(undefined8 *param_1,undefined8 *param_2)\n\n{\n  undefined8 uVar1;\n  \n  if ((param_1[1] == param_2[1]) && (param_1[2] == param_2[2])) {\n    uVar1 = FUN_004122b0(*param_1,*param_2);\n    return uVar1;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040d480"
        },
        {
            "funcStartAddr": "0x40d4b0",
            "funcEndAddr": "0x40d4e0",
            "decompiledFuncCode": "\nulong FUN_0040d4b0(char **param_1,char **param_2)\n\n{\n  int iVar1;\n  undefined4 extraout_var;\n  \n  if ((param_1[1] == param_2[1]) && (param_1[2] == param_2[2])) {\n    iVar1 = strcmp(*param_1,*param_2);\n    return CONCAT44(extraout_var,iVar1) & 0xffffffffffffff00 | (ulong)(iVar1 == 0);\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040d4b0"
        },
        {
            "funcStartAddr": "0x40d4f0",
            "funcEndAddr": "0x40d505",
            "decompiledFuncCode": "\nvoid FUN_0040d4f0(void **param_1)\n\n{\n  free(*param_1);\n  free(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_0040d4f0"
        },
        {
            "funcStartAddr": "0x40d510",
            "funcEndAddr": "0x40d5b8",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x0040d568) */\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0040d510(int param_1)\n\n{\n  ulong uVar1;\n  float10 fVar2;\n  float10 param_7;\n  \n  if ((float10)_DAT_0041d840 <= param_7) {\n    uVar1 = (long)ROUND(param_7 - (float10)_DAT_0041d840) ^ 0x8000000000000000;\n  }\n  else {\n    uVar1 = (ulong)ROUND(param_7);\n  }\n  fVar2 = (float10)uVar1;\n  if ((long)uVar1 < 0) {\n    fVar2 = fVar2 + (float10)_DAT_0041d83c;\n  }\n  if (((param_1 == 0) && (param_7 != fVar2)) && ((long)(uVar1 + 1) < 0)) {\n    return;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_0040d510"
        },
        {
            "funcStartAddr": "0x40d5d0",
            "funcEndAddr": "0x40df35",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 * FUN_0040d5d0(ulong param_1,char *param_2,uint param_3,ulong param_4,ulong param_5)\n\n{\n  byte bVar1;\n  undefined auVar2 [16];\n  undefined auVar3 [16];\n  char cVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  lconv *plVar9;\n  ulong uVar10;\n  size_t sVar11;\n  size_t __n;\n  ulong uVar12;\n  long lVar13;\n  uint uVar14;\n  uint uVar15;\n  uint uVar16;\n  ulong uVar17;\n  ulong uVar18;\n  uint uVar19;\n  ulong uVar20;\n  char *__s;\n  undefined8 *__dest;\n  undefined8 *puVar21;\n  undefined8 *puVar22;\n  byte *pbVar23;\n  bool bVar24;\n  float10 fVar25;\n  float10 fVar26;\n  float10 fVar27;\n  undefined8 *local_a8;\n  undefined local_68 [56];\n  \n  uVar5 = param_3 & 0x20;\n  uVar14 = param_3 & 3;\n  uVar6 = (-(uint)(uVar5 == 0) & 0xffffffe8) + 0x400;\n  plVar9 = localeconv();\n  puVar21 = (undefined8 *)plVar9->decimal_point;\n  uVar10 = strlen((char *)puVar21);\n  bVar24 = 0xf < uVar10 - 1;\n  if (bVar24) {\n    puVar21 = (undefined8 *)&DAT_0041d794;\n  }\n  pbVar23 = (byte *)plVar9->grouping;\n  __s = plVar9->thousands_sep;\n  if (bVar24) {\n    uVar10 = 1;\n  }\n  sVar11 = strlen(__s);\n  if (0x10 < sVar11) {\n    __s = \"\";\n  }\n  local_a8 = (undefined8 *)(param_2 + 0x287);\n  uVar15 = (uint)uVar10;\n  if (param_4 < param_5) {\n    if (param_4 != 0) {\n      auVar3 = ZEXT816(param_5) / ZEXT816(param_4);\n      if (param_5 % param_4 == 0) {\n        uVar17 = SUB168(ZEXT816(param_1) / (auVar3 & (undefined  [16])0xffffffffffffffff),0);\n        auVar2 = ZEXT816((ulong)(SUB168(ZEXT816(param_1) %\n                                        (auVar3 & (undefined  [16])0xffffffffffffffff),0) * 10));\n        uVar18 = SUB168(auVar2 % (auVar3 & (undefined  [16])0xffffffffffffffff),0) * 2;\n        uVar8 = SUB164(auVar2 / (auVar3 & (undefined  [16])0xffffffffffffffff),0);\n        uVar12 = (ulong)uVar8;\n        if (uVar18 < SUB168(auVar3,0)) {\n          uVar19 = (uint)(uVar18 != 0);\n        }\n        else {\n          uVar19 = (SUB168(auVar3,0) < uVar18) + 2;\n        }\n        goto joined_r0x0040d968;\n      }\n    }\nLAB_0040d6b5:\n    fVar25 = (float10)param_4;\n    if ((long)param_4 < 0) {\n      fVar25 = fVar25 + (float10)_DAT_0041d83c;\n    }\n    if ((long)param_5 < 0) {\n      fVar25 = fVar25 / ((float10)param_5 + (float10)_DAT_0041d83c);\n      if ((long)param_1 < 0) goto LAB_0040d8c8;\nLAB_0040d6f2:\n      fVar25 = (float10)param_1 * fVar25;\n      if ((param_3 & 0x10) != 0) goto LAB_0040d6ff;\nLAB_0040d810:\n      if ((uVar14 != 1) && (fVar25 < _DAT_0041d8d0)) {\n        FUN_0040d510();\n        uVar10 = SUB108(fVar25,0);\n      }\n      __sprintf_chk(param_2,1,0xffffffffffffffff,\"%.0Lf\",uVar10);\n      uVar16 = 0xffffffff;\n      __n = strlen(param_2);\n      sVar11 = __n;\n    }\n    else {\n      fVar25 = fVar25 / (float10)param_5;\n      if (-1 < (long)param_1) goto LAB_0040d6f2;\nLAB_0040d8c8:\n      fVar25 = ((float10)param_1 + (float10)_DAT_0041d83c) * fVar25;\n      if ((param_3 & 0x10) == 0) goto LAB_0040d810;\nLAB_0040d6ff:\n      uVar16 = 0;\n      fVar27 = (float10)uVar6;\n      do {\n        fVar26 = fVar27;\n        uVar16 = uVar16 + 1;\n        fVar27 = fVar26 * (float10)uVar6;\n        if (fVar25 < fVar27) break;\n      } while (uVar16 != 8);\n      fVar25 = fVar25 / fVar26;\n      uVar17 = uVar10 + 2 + (ulong)(uVar5 == 0);\n      if (uVar14 == 1) {\n        __sprintf_chk(param_2,1,0xffffffffffffffff,\"%.1Lf\");\n        __n = strlen(param_2);\n        if (__n <= uVar17) goto LAB_0040dc38;\n      }\n      else {\n        if (fVar25 < _DAT_0041d8d0) {\n          FUN_0040d510();\n        }\n        __sprintf_chk(param_2,1,0xffffffffffffffff,\"%.1Lf\");\n        __n = strlen(param_2);\n        if (__n <= uVar17) {\nLAB_0040dc38:\n          if (((param_3 & 8) == 0) || (param_2[__n - 1] != '0')) {\n            sVar11 = __n - (uVar10 + 1);\n            goto LAB_0040d860;\n          }\n          if (uVar14 == 1) goto LAB_0040d7d6;\n        }\n        if (fVar25 * (float10)_DAT_0041d8c4 < _DAT_0041d8d0) {\n          FUN_0040d510(uVar14);\n        }\n      }\nLAB_0040d7d6:\n      __sprintf_chk(param_2,1,0xffffffffffffffff,\"%.0Lf\");\n      __n = strlen(param_2);\n      sVar11 = __n;\n    }\nLAB_0040d860:\n    puVar22 = (undefined8 *)((long)local_a8 - __n);\n    memmove(puVar22,param_2,__n);\n    __dest = (undefined8 *)(sVar11 + (long)puVar22);\n  }\n  else {\n    if ((param_4 % param_5 != 0) ||\n       (uVar17 = SUB168(ZEXT816(param_4) / ZEXT816(param_5),0) * param_1,\n       SUB168(ZEXT816(uVar17) /\n              (ZEXT816(param_4) / ZEXT816(param_5) & (undefined  [16])0xffffffffffffffff),0) !=\n       param_1)) goto LAB_0040d6b5;\n    uVar19 = 0;\n    uVar12 = 0;\n    uVar8 = 0;\njoined_r0x0040d968:\n    puVar22 = local_a8;\n    if ((param_3 & 0x10) == 0) {\n      uVar16 = 0xffffffff;\nLAB_0040d981:\n      if (uVar14 != 1) goto LAB_0040d990;\n      __dest = local_a8;\n      if (5 < (int)(uVar8 + (((uint)uVar17 & 1) + uVar19 != 0))) goto LAB_0040d9a1;\nLAB_0040d9d3:\n      do {\n        puVar22 = (undefined8 *)((long)puVar22 + -1);\n        *(char *)puVar22 = (char)uVar17 + (char)(uVar17 / 10) * -10 + '0';\n        bVar24 = 9 < uVar17;\n        uVar17 = uVar17 / 10;\n      } while (bVar24);\n    }\n    else {\n      uVar8 = (uint)uVar12;\n      uVar20 = (ulong)uVar6;\n      uVar16 = 0;\n      uVar18 = uVar17;\n      if (uVar17 < uVar20) goto LAB_0040d981;\n      while( true ) {\n        uVar17 = uVar18 / uVar20;\n        uVar7 = (int)uVar12 + (int)(uVar18 % uVar20) * 10;\n        uVar12 = uVar7 / uVar20;\n        uVar8 = (uint)uVar12;\n        uVar7 = ((int)uVar19 >> 1) + (uVar7 % uVar6) * 2;\n        uVar19 = uVar19 + uVar7;\n        if (uVar7 < uVar6) {\n          uVar19 = (uint)(uVar19 != 0);\n        }\n        else {\n          uVar19 = (uVar6 < uVar19) + 2;\n        }\n        uVar16 = uVar16 + 1;\n        if (uVar17 < uVar20) break;\n        uVar18 = uVar17;\n        if (uVar16 == 8) goto LAB_0040d981;\n      }\n      if (9 < uVar17) goto LAB_0040d981;\n      if (uVar14 == 1) {\n        bVar24 = 2 < (uVar8 & 1) + uVar19;\n      }\n      else {\n        bVar24 = uVar19 != 0 && uVar14 == 0;\n      }\n      if (bVar24) {\n        uVar8 = uVar8 + 1;\n        if (uVar8 != 10) goto LAB_0040de38;\n        uVar17 = uVar17 + 1;\n        if (uVar17 == 10) goto LAB_0040ddee;\n        uVar19 = 0;\nLAB_0040dda7:\n        if ((param_3 & 8) != 0) goto LAB_0040ddf0;\n        cVar4 = '0';\n      }\n      else {\n        if (uVar8 == 0) goto LAB_0040dda7;\nLAB_0040de38:\n        cVar4 = (char)uVar8 + '0';\n      }\n      param_2[0x286] = cVar4;\n      uVar12 = uVar10 & 0xffffffff;\n      puVar22 = (undefined8 *)(param_2 + (0x286 - uVar10));\n      if (uVar15 < 8) {\n        if ((uVar10 & 4) == 0) {\n          if (((int)uVar12 != 0) &&\n             (*(undefined *)puVar22 = *(undefined *)puVar21, (uVar10 & 2) != 0)) {\n            *(undefined2 *)((long)puVar22 + (uVar12 - 2)) =\n                 *(undefined2 *)((long)puVar21 + (uVar12 - 2));\n          }\n        }\n        else {\n          *(undefined4 *)puVar22 = *(undefined4 *)puVar21;\n          *(undefined4 *)((long)puVar22 + (uVar12 - 4)) =\n               *(undefined4 *)((long)puVar21 + (uVar12 - 4));\n        }\n      }\n      else {\n        *puVar22 = *puVar21;\n        *(undefined8 *)((long)puVar22 + ((uVar10 & 0xffffffff) - 8)) =\n             *(undefined8 *)((long)puVar21 + ((uVar10 & 0xffffffff) - 8));\n        lVar13 = (long)puVar22 - ((ulong)(puVar22 + 1) & 0xfffffffffffffff8);\n        uVar8 = (int)lVar13 + uVar15 & 0xfffffff8;\n        if (7 < uVar8) {\n          uVar19 = 0;\n          do {\n            uVar12 = (ulong)uVar19;\n            uVar19 = uVar19 + 8;\n            *(undefined8 *)(((ulong)(puVar22 + 1) & 0xfffffffffffffff8) + uVar12) =\n                 *(undefined8 *)((long)puVar21 + (uVar12 - lVar13));\n          } while (uVar19 < uVar8);\n        }\n      }\nLAB_0040ddee:\n      uVar19 = 0;\nLAB_0040ddf0:\n      __dest = puVar22;\n      if (uVar14 == 1) goto LAB_0040d9d3;\n      uVar8 = 0;\nLAB_0040d990:\n      __dest = puVar22;\n      if ((uVar14 != 0) || ((int)(uVar19 + uVar8) < 1)) goto LAB_0040d9d3;\nLAB_0040d9a1:\n      uVar17 = uVar17 + 1;\n      __dest = puVar22;\n      if ((((param_3 & 0x10) == 0) || (uVar6 != uVar17)) || (uVar16 == 8)) goto LAB_0040d9d3;\n      uVar16 = uVar16 + 1;\n      if ((param_3 & 8) == 0) {\n        *(undefined *)((long)puVar22 + -1) = 0x30;\n        puVar22 = (undefined8 *)((long)puVar22 + ~uVar10);\n        uVar17 = uVar10 & 0xffffffff;\n        if (uVar15 < 8) {\n          if ((uVar10 & 4) == 0) {\n            if (((int)uVar17 != 0) &&\n               (*(undefined *)puVar22 = *(undefined *)puVar21, (uVar10 & 2) != 0)) {\n              *(undefined2 *)((long)puVar22 + (uVar17 - 2)) =\n                   *(undefined2 *)((long)puVar21 + (uVar17 - 2));\n            }\n          }\n          else {\n            *(undefined4 *)puVar22 = *(undefined4 *)puVar21;\n            *(undefined4 *)((long)puVar22 + (uVar17 - 4)) =\n                 *(undefined4 *)((long)puVar21 + (uVar17 - 4));\n          }\n        }\n        else {\n          *puVar22 = *puVar21;\n          *(undefined8 *)((long)puVar22 + ((uVar10 & 0xffffffff) - 8)) =\n               *(undefined8 *)((long)puVar21 + ((uVar10 & 0xffffffff) - 8));\n          lVar13 = (long)puVar22 - ((ulong)(puVar22 + 1) & 0xfffffffffffffff8);\n          uVar14 = (int)lVar13 + uVar15 & 0xfffffff8;\n          if (7 < uVar14) {\n            uVar15 = 0;\n            do {\n              uVar10 = (ulong)uVar15;\n              uVar15 = uVar15 + 8;\n              *(undefined8 *)(((ulong)(puVar22 + 1) & 0xfffffffffffffff8) + uVar10) =\n                   *(undefined8 *)((long)puVar21 + (uVar10 - lVar13));\n            } while (uVar15 < uVar14);\n          }\n        }\n      }\n      *(undefined *)((long)puVar22 + -1) = 0x31;\n      __dest = puVar22;\n      puVar22 = (undefined8 *)((long)puVar22 + -1);\n    }\n  }\n  if ((param_3 & 4) != 0) {\n    sVar11 = strlen(__s);\n    uVar17 = (long)__dest - (long)puVar22;\n    __memcpy_chk(local_68,puVar22,uVar17,0x29);\n    uVar10 = 0xffffffffffffffff;\n    while( true ) {\n      bVar1 = *pbVar23;\n      if (bVar1 != 0) {\n        uVar10 = (ulong)bVar1;\n        if (0x7e < bVar1) {\n          uVar10 = uVar17;\n        }\n        pbVar23 = pbVar23 + 1;\n      }\n      if (uVar17 < uVar10) break;\n      puVar22 = (undefined8 *)((long)__dest - uVar10);\n      uVar17 = uVar17 - uVar10;\n      memcpy(puVar22,local_68 + uVar17,uVar10);\n      if (uVar17 == 0) goto LAB_0040d885;\n      __dest = (undefined8 *)((long)puVar22 - sVar11);\n      memcpy(__dest,__s,sVar11);\n    }\n    puVar22 = (undefined8 *)((long)__dest - uVar17);\n    memcpy(puVar22,local_68,uVar17);\n  }\nLAB_0040d885:\n  if ((param_3 & 0x80) == 0) goto LAB_0040d8a8;\n  if (uVar16 == 0xffffffff) {\n    if (param_5 < 2) {\n      uVar16 = 0;\n      goto LAB_0040d895;\n    }\n    uVar16 = 1;\n    uVar10 = 1;\n    do {\n      uVar10 = uVar10 * uVar6;\n      if (param_5 <= uVar10) break;\n      uVar16 = uVar16 + 1;\n    } while (uVar16 != 8);\n    if ((param_3 & 0x40) != 0) goto LAB_0040db11;\nLAB_0040db30:\n    if ((uVar5 == 0) && (uVar16 == 1)) {\n      *(undefined *)local_a8 = 0x6b;\n      puVar21 = (undefined8 *)((long)local_a8 + 1);\n      if ((param_3 & 0x100) == 0) {\nLAB_0040dd63:\n        local_a8 = (undefined8 *)((long)local_a8 + 1);\n        goto LAB_0040d8a8;\n      }\n    }\n    else {\n      *(undefined *)local_a8 = (&UNK_0041d8b8)[(int)uVar16];\n      if ((param_3 & 0x100) == 0) goto LAB_0040dd63;\n      puVar21 = (undefined8 *)((long)local_a8 + 1);\n      if (uVar5 != 0) {\n        *(undefined *)((long)local_a8 + 1) = 0x69;\n        puVar21 = (undefined8 *)((long)local_a8 + 2);\n      }\n    }\n  }\n  else {\nLAB_0040d895:\n    if ((param_3 & 0x100 | uVar16) == 0) goto LAB_0040d8a8;\n    if ((param_3 & 0x40) != 0) {\nLAB_0040db11:\n      local_a8 = (undefined8 *)(param_2 + 0x288);\n      param_2[0x287] = ' ';\n    }\n    if (uVar16 != 0) goto LAB_0040db30;\n    puVar21 = local_a8;\n    if ((param_3 & 0x100) == 0) goto LAB_0040d8a8;\n  }\n  local_a8 = (undefined8 *)((long)puVar21 + 1);\n  *(undefined *)puVar21 = 0x42;\nLAB_0040d8a8:\n  *(undefined *)local_a8 = 0;\n  return puVar22;\n}\n\n",
            "funcName": "FUN_0040d5d0"
        },
        {
            "funcStartAddr": "0x40dfa0",
            "funcEndAddr": "0x40e131",
            "decompiledFuncCode": "\nchar * FUN_0040dfa0(char *param_1,uint *param_2,long *param_3)\n\n{\n  char cVar1;\n  int iVar2;\n  char *pcVar3;\n  long lVar4;\n  uint uVar5;\n  char *local_30 [2];\n  \n  if (((param_1 == (char *)0x0) && (param_1 = getenv(\"BLOCK_SIZE\"), param_1 == (char *)0x0)) &&\n     (param_1 = getenv(\"BLOCKSIZE\"), param_1 == (char *)0x0)) {\n    pcVar3 = getenv(\"POSIXLY_CORRECT\");\n    if (pcVar3 == (char *)0x0) {\n      *param_3 = 0x400;\n      *param_2 = 0;\n    }\n    else {\n      *param_3 = 0x200;\n      pcVar3 = (char *)0x0;\n      *param_2 = 0;\n    }\n  }\n  else {\n    uVar5 = 0;\n    if (*param_1 == '\\'') {\n      param_1 = param_1 + 1;\n      uVar5 = 4;\n    }\n    iVar2 = FUN_0040acf0(param_1,&PTR_s_human_readable_0041d8a0,&DAT_0041d890,4);\n    if (iVar2 < 0) {\n      pcVar3 = (char *)FUN_004132b0(param_1,local_30,0,param_3,\"eEgGkKmMpPtTyYzZ0\");\n      if ((int)pcVar3 == 0) {\n        cVar1 = *param_1;\n        while (9 < (byte)(cVar1 - 0x30U)) {\n          if (param_1 == local_30[0]) {\n            if (local_30[0][-1] == 'B') {\n              uVar5 = uVar5 | 0x180;\n              if (local_30[0][-2] != 'i') break;\n            }\n            else {\n              uVar5 = uVar5 | 0x80;\n            }\n            uVar5 = uVar5 | 0x20;\n            break;\n          }\n          param_1 = param_1 + 1;\n          cVar1 = *param_1;\n        }\n        lVar4 = *param_3;\n        *param_2 = uVar5;\n      }\n      else {\n        *param_2 = 0;\n        lVar4 = *param_3;\n      }\n      if (lVar4 == 0) {\n        pcVar3 = getenv(\"POSIXLY_CORRECT\");\n        *param_3 = (ulong)(-(uint)(pcVar3 == (char *)0x0) & 0x200) + 0x200;\n        return (char *)0x4;\n      }\n    }\n    else {\n      *param_3 = 1;\n      pcVar3 = (char *)0x0;\n      *param_2 = uVar5 | *(uint *)(&DAT_0041d890 + (long)iVar2 * 4);\n    }\n  }\n  return pcVar3;\n}\n\n",
            "funcName": "FUN_0040dfa0"
        },
        {
            "funcStartAddr": "0x40e160",
            "funcEndAddr": "0x40e1e6",
            "decompiledFuncCode": "\n__uid_t * FUN_0040e160(__uid_t param_1)\n\n{\n  __uid_t _Var1;\n  passwd *ppVar2;\n  size_t sVar3;\n  __uid_t *p_Var4;\n  __uid_t *p_Var5;\n  ulong uVar6;\n  char *__s;\n  \n  if (DAT_006257b8 == (__uid_t *)0x0) {\nLAB_0040e18d:\n    __s = \"\";\n    ppVar2 = getpwuid(param_1);\n    uVar6 = 0x18;\n    if (ppVar2 != (passwd *)0x0) {\n      __s = ppVar2->pw_name;\n      sVar3 = strlen(__s);\n      uVar6 = sVar3 + 0x18 & 0xfffffffffffffff8;\n    }\n    p_Var4 = (__uid_t *)FUN_00412980(uVar6);\n    *p_Var4 = param_1;\n    strcpy((char *)(p_Var4 + 4),__s);\n    p_Var5 = p_Var4;\n    *(__uid_t **)(p_Var4 + 2) = DAT_006257b8;\n    DAT_006257b8 = p_Var5;\n  }\n  else {\n    _Var1 = *DAT_006257b8;\n    p_Var4 = DAT_006257b8;\n    while (param_1 != _Var1) {\n      p_Var4 = *(__uid_t **)(p_Var4 + 2);\n      if (p_Var4 == (__uid_t *)0x0) goto LAB_0040e18d;\n      _Var1 = *p_Var4;\n    }\n  }\n  p_Var5 = (__uid_t *)0x0;\n  if (*(char *)(p_Var4 + 4) != '\\0') {\n    p_Var5 = p_Var4 + 4;\n  }\n  return p_Var5;\n}\n\n",
            "funcName": "FUN_0040e160"
        },
        {
            "funcStartAddr": "0x40e1f0",
            "funcEndAddr": "0x40e2d1",
            "decompiledFuncCode": "\n__uid_t * FUN_0040e1f0(char *param_1)\n\n{\n  char cVar1;\n  __uid_t *p_Var2;\n  int iVar3;\n  passwd *ppVar4;\n  size_t sVar5;\n  __uid_t *p_Var6;\n  long lVar7;\n  \n  if (DAT_006257b8 != (__uid_t *)0x0) {\n    cVar1 = *param_1;\n    p_Var6 = DAT_006257b8;\n    do {\n      if ((*(char *)(p_Var6 + 4) == cVar1) &&\n         (iVar3 = strcmp((char *)(p_Var6 + 4),param_1), iVar3 == 0)) {\n        return p_Var6;\n      }\n      p_Var6 = *(__uid_t **)(p_Var6 + 2);\n    } while (p_Var6 != (__uid_t *)0x0);\n  }\n  if (DAT_006257b0 != (__uid_t *)0x0) {\n    cVar1 = *param_1;\n    lVar7 = (long)DAT_006257b0;\n    do {\n      if ((*(char *)(lVar7 + 0x10) == cVar1) &&\n         (iVar3 = strcmp((char *)(lVar7 + 0x10),param_1), iVar3 == 0)) {\n        return (__uid_t *)0x0;\n      }\n      lVar7 = *(long *)(lVar7 + 8);\n    } while (lVar7 != 0);\n  }\n  ppVar4 = getpwnam(param_1);\n  sVar5 = strlen(param_1);\n  p_Var6 = (__uid_t *)FUN_00412980(sVar5 + 0x18 & 0xfffffffffffffff8);\n  strcpy((char *)(p_Var6 + 4),param_1);\n  if (ppVar4 != (passwd *)0x0) {\n    *p_Var6 = ppVar4->pw_uid;\n    p_Var2 = p_Var6;\n    *(__uid_t **)(p_Var6 + 2) = DAT_006257b8;\n    DAT_006257b8 = p_Var2;\n    return p_Var6;\n  }\n  *(__uid_t **)(p_Var6 + 2) = DAT_006257b0;\n  DAT_006257b0 = p_Var6;\n  return (__uid_t *)0x0;\n}\n\n",
            "funcName": "FUN_0040e1f0"
        },
        {
            "funcStartAddr": "0x40e2f0",
            "funcEndAddr": "0x40e376",
            "decompiledFuncCode": "\n__gid_t * FUN_0040e2f0(__gid_t param_1)\n\n{\n  __gid_t _Var1;\n  group *pgVar2;\n  size_t sVar3;\n  __gid_t *p_Var4;\n  __gid_t *p_Var5;\n  ulong uVar6;\n  char *__s;\n  \n  if (DAT_006257a8 == (__gid_t *)0x0) {\nLAB_0040e31d:\n    __s = \"\";\n    pgVar2 = getgrgid(param_1);\n    uVar6 = 0x18;\n    if (pgVar2 != (group *)0x0) {\n      __s = pgVar2->gr_name;\n      sVar3 = strlen(__s);\n      uVar6 = sVar3 + 0x18 & 0xfffffffffffffff8;\n    }\n    p_Var4 = (__gid_t *)FUN_00412980(uVar6);\n    *p_Var4 = param_1;\n    strcpy((char *)(p_Var4 + 4),__s);\n    p_Var5 = p_Var4;\n    *(__gid_t **)(p_Var4 + 2) = DAT_006257a8;\n    DAT_006257a8 = p_Var5;\n  }\n  else {\n    _Var1 = *DAT_006257a8;\n    p_Var4 = DAT_006257a8;\n    while (param_1 != _Var1) {\n      p_Var4 = *(__gid_t **)(p_Var4 + 2);\n      if (p_Var4 == (__gid_t *)0x0) goto LAB_0040e31d;\n      _Var1 = *p_Var4;\n    }\n  }\n  p_Var5 = (__gid_t *)0x0;\n  if (*(char *)(p_Var4 + 4) != '\\0') {\n    p_Var5 = p_Var4 + 4;\n  }\n  return p_Var5;\n}\n\n",
            "funcName": "FUN_0040e2f0"
        },
        {
            "funcStartAddr": "0x40e380",
            "funcEndAddr": "0x40e461",
            "decompiledFuncCode": "\n__gid_t * FUN_0040e380(char *param_1)\n\n{\n  char cVar1;\n  __gid_t *p_Var2;\n  int iVar3;\n  group *pgVar4;\n  size_t sVar5;\n  __gid_t *p_Var6;\n  long lVar7;\n  \n  if (DAT_006257a8 != (__gid_t *)0x0) {\n    cVar1 = *param_1;\n    p_Var6 = DAT_006257a8;\n    do {\n      if ((*(char *)(p_Var6 + 4) == cVar1) &&\n         (iVar3 = strcmp((char *)(p_Var6 + 4),param_1), iVar3 == 0)) {\n        return p_Var6;\n      }\n      p_Var6 = *(__gid_t **)(p_Var6 + 2);\n    } while (p_Var6 != (__gid_t *)0x0);\n  }\n  if (DAT_006257a0 != (__gid_t *)0x0) {\n    cVar1 = *param_1;\n    lVar7 = (long)DAT_006257a0;\n    do {\n      if ((*(char *)(lVar7 + 0x10) == cVar1) &&\n         (iVar3 = strcmp((char *)(lVar7 + 0x10),param_1), iVar3 == 0)) {\n        return (__gid_t *)0x0;\n      }\n      lVar7 = *(long *)(lVar7 + 8);\n    } while (lVar7 != 0);\n  }\n  pgVar4 = getgrnam(param_1);\n  sVar5 = strlen(param_1);\n  p_Var6 = (__gid_t *)FUN_00412980(sVar5 + 0x18 & 0xfffffffffffffff8);\n  strcpy((char *)(p_Var6 + 4),param_1);\n  if (pgVar4 != (group *)0x0) {\n    *p_Var6 = pgVar4->gr_gid;\n    p_Var2 = p_Var6;\n    *(__gid_t **)(p_Var6 + 2) = DAT_006257a8;\n    DAT_006257a8 = p_Var2;\n    return p_Var6;\n  }\n  *(__gid_t **)(p_Var6 + 2) = DAT_006257a0;\n  DAT_006257a0 = p_Var6;\n  return (__gid_t *)0x0;\n}\n\n",
            "funcName": "FUN_0040e380"
        },
        {
            "funcStartAddr": "0x40e480",
            "funcEndAddr": "0x40e516",
            "decompiledFuncCode": "\nchar * FUN_0040e480(ulong param_1,long param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  ulong uVar3;\n  \n  pcVar1 = (char *)(param_2 + 0x14);\n  *(undefined *)(param_2 + 0x14) = 0;\n  if ((long)param_1 < 0) {\n    do {\n      pcVar2 = pcVar1;\n      uVar3 = (long)param_1 / 10;\n      pcVar2[-1] = ((char)uVar3 * '\\n' + '0') - (char)param_1;\n      pcVar1 = pcVar2 + -1;\n      param_1 = uVar3;\n    } while (uVar3 != 0);\n    pcVar2[-2] = '-';\n    return pcVar2 + -2;\n  }\n  do {\n    pcVar1 = pcVar1 + -1;\n    uVar3 = param_1 / 10;\n    *pcVar1 = (char)param_1 + (char)uVar3 * -10 + '0';\n    param_1 = uVar3;\n  } while (uVar3 != 0);\n  return pcVar1;\n}\n\n",
            "funcName": "FUN_0040e480"
        },
        {
            "funcStartAddr": "0x40e520",
            "funcEndAddr": "0x40e564",
            "decompiledFuncCode": "\nchar * FUN_0040e520(ulong param_1,long param_2)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  \n  pcVar2 = (char *)(param_2 + 0x14);\n  *(undefined *)(param_2 + 0x14) = 0;\n  do {\n    pcVar2 = pcVar2 + -1;\n    *pcVar2 = (char)param_1 + (char)(param_1 / 10) * -10 + '0';\n    bVar1 = 9 < param_1;\n    param_1 = param_1 / 10;\n  } while (bVar1);\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_0040e520"
        },
        {
            "funcStartAddr": "0x40e570",
            "funcEndAddr": "0x40e8e0",
            "decompiledFuncCode": "\nlong FUN_0040e570(char *param_1,undefined *param_2,long param_3,ulong *param_4,int param_5,\n                 uint param_6)\n\n{\n  size_t __n;\n  undefined *puVar1;\n  bool bVar2;\n  int iVar3;\n  ulong uVar4;\n  undefined *puVar5;\n  ulong uVar6;\n  size_t sVar7;\n  size_t sVar8;\n  char *__s;\n  ulong uVar9;\n  undefined *puVar10;\n  wchar_t *pwVar12;\n  wchar_t wVar13;\n  ulong uVar14;\n  long lVar15;\n  ulong uVar16;\n  wchar_t *local_68;\n  char *local_50;\n  size_t local_48;\n  undefined *puVar11;\n  \n  uVar4 = strlen(param_1);\n  uVar14 = uVar4;\n  if (((param_6 & 2) == 0) && (sVar7 = __ctype_get_mb_cur_max(), 1 < sVar7)) {\n    sVar7 = mbstowcs((wchar_t *)0x0,param_1,0);\n    if (sVar7 == 0xffffffffffffffff) {\n      if ((param_6 & 1) == 0) {\nLAB_0040e720:\n        local_68 = (wchar_t *)0x0;\n        __s = (char *)0x0;\n        lVar15 = -1;\n        goto LAB_0040e68e;\n      }\n      goto LAB_0040e5a8;\n    }\n    __n = sVar7 + 1;\n    local_68 = (wchar_t *)malloc(__n * 4);\n    local_50 = param_1;\n    if (local_68 == (wchar_t *)0x0) {\n      __s = (char *)0x0;\n      if ((param_6 & 1) == 0) goto LAB_0040e720;\n      goto LAB_0040e5b6;\n    }\n    sVar8 = mbstowcs(local_68,param_1,__n);\n    if (sVar8 == 0) {\n      __s = (char *)0x0;\n      goto LAB_0040e5b6;\n    }\n    local_68[sVar7] = L'\\0';\n    wVar13 = *local_68;\n    if (wVar13 != L'\\0') {\n      bVar2 = false;\n      pwVar12 = local_68;\n      do {\n        iVar3 = iswprint(wVar13);\n        if (iVar3 == 0) {\n          *pwVar12 = L'\u00ef\u00bf\u00bd';\n          bVar2 = true;\n        }\n        pwVar12 = pwVar12 + 1;\n        wVar13 = *pwVar12;\n      } while (wVar13 != L'\\0');\n      iVar3 = wcswidth(local_68,__n);\n      uVar14 = (ulong)iVar3;\n      if (!bVar2) goto LAB_0040e890;\n      local_48 = wcstombs((char *)0x0,local_68,0);\nLAB_0040e800:\n      local_48 = local_48 + 1;\n      __s = (char *)malloc(local_48);\n      if (__s == (char *)0x0) {\n        if ((param_6 & 1) == 0) {\n          lVar15 = -1;\n          goto LAB_0040e68e;\n        }\n      }\n      else {\n        uVar4 = *param_4;\n        wVar13 = *local_68;\n        pwVar12 = local_68;\n        if (wVar13 == L'\\0') {\n          uVar14 = 0;\n        }\n        else {\n          uVar14 = 0;\n          do {\n            iVar3 = wcwidth(wVar13);\n            if (iVar3 == -1) {\n              *pwVar12 = L'\u00ef\u00bf\u00bd';\n              lVar15 = 1;\n            }\n            else {\n              lVar15 = (long)iVar3;\n            }\n            uVar6 = lVar15 + uVar14;\n            if (uVar4 < uVar6) break;\n            pwVar12 = pwVar12 + 1;\n            wVar13 = *pwVar12;\n            uVar14 = uVar6;\n          } while (wVar13 != L'\\0');\n        }\n        *pwVar12 = L'\\0';\n        uVar4 = wcstombs(__s,local_68,local_48);\n        local_50 = __s;\n      }\n      goto LAB_0040e5b6;\n    }\n    iVar3 = wcswidth(local_68,__n);\n    uVar14 = (ulong)iVar3;\nLAB_0040e890:\n    uVar6 = *param_4;\n    local_48 = uVar4;\n    if (uVar6 < uVar14) goto LAB_0040e800;\n    __s = (char *)0x0;\nLAB_0040e6bb:\n    uVar16 = uVar4;\n    uVar9 = uVar14;\n    if (uVar6 <= uVar14) goto LAB_0040e5c8;\n    uVar6 = uVar6 - uVar14;\n    *param_4 = uVar14;\n    if (param_5 != 0) goto LAB_0040e5d8;\nLAB_0040e6dd:\n    uVar4 = 0;\n    uVar14 = uVar6;\n  }\n  else {\nLAB_0040e5a8:\n    local_68 = (wchar_t *)0x0;\n    __s = (char *)0x0;\n    local_50 = param_1;\nLAB_0040e5b6:\n    uVar6 = *param_4;\n    uVar9 = uVar6;\n    uVar16 = uVar6;\n    if (uVar14 <= uVar6) goto LAB_0040e6bb;\nLAB_0040e5c8:\n    uVar6 = 0;\n    *param_4 = uVar9;\n    if (param_5 == 0) goto LAB_0040e6dd;\nLAB_0040e5d8:\n    uVar4 = uVar6;\n    uVar14 = 0;\n    if (param_5 != 1) {\n      uVar4 = (ulong)((uint)uVar6 & 1) + (uVar6 >> 1);\n      uVar14 = uVar6 >> 1;\n    }\n  }\n  uVar6 = uVar4 + uVar16;\n  if ((param_6 & 4) != 0) {\n    uVar4 = 0;\n    uVar6 = uVar16;\n  }\n  if ((param_6 & 8) != 0) {\n    uVar14 = 0;\n  }\n  if (param_3 != 0) {\n    puVar1 = param_2 + param_3 + -1;\n    puVar10 = param_2;\n    if ((param_2 < puVar1) && (puVar5 = param_2, uVar4 != 0)) {\n      do {\n        puVar10 = puVar5 + 1;\n        *puVar5 = 0x20;\n        if (param_2 + (uVar4 - (long)puVar10) == (undefined *)0x0) break;\n        puVar5 = puVar10;\n      } while (puVar10 < puVar1);\n    }\n    *puVar10 = 0;\n    uVar4 = (long)puVar1 - (long)puVar10;\n    if (uVar16 < (ulong)((long)puVar1 - (long)puVar10)) {\n      uVar4 = uVar16;\n    }\n    puVar5 = (undefined *)mempcpy(puVar10,local_50,uVar4);\n    puVar10 = puVar5;\n    if ((puVar5 < puVar1) && (puVar11 = puVar5, uVar14 != 0)) {\n      do {\n        puVar10 = puVar11 + 1;\n        *puVar11 = 0x20;\n        if (puVar5 + (uVar14 - (long)puVar10) == (undefined *)0x0) break;\n        puVar11 = puVar10;\n      } while (puVar10 < puVar1);\n    }\n    *puVar10 = 0;\n  }\n  lVar15 = uVar14 + uVar6;\nLAB_0040e68e:\n  free(local_68);\n  free(__s);\n  return lVar15;\n}\n\n",
            "funcName": "FUN_0040e570"
        },
        {
            "funcStartAddr": "0x40e910",
            "funcEndAddr": "0x40e9a5",
            "decompiledFuncCode": "\nvoid * FUN_0040e910(undefined8 param_1,ulong *param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  ulong __size;\n  ulong uVar1;\n  void *__ptr;\n  ulong uVar2;\n  void *__ptr_00;\n  \n  uVar1 = *param_2;\n  uVar2 = uVar1;\n  __ptr_00 = (void *)0x0;\n  while( true ) {\n    __size = uVar2 + 1;\n    __ptr = realloc(__ptr_00,__size);\n    if (__ptr == (void *)0x0) {\n      free(__ptr_00);\n      return (void *)0x0;\n    }\n    *param_2 = uVar1;\n    uVar2 = FUN_0040e570(param_1,__ptr,__size,param_2,param_3,param_4);\n    if (uVar2 == 0xffffffffffffffff) break;\n    __ptr_00 = __ptr;\n    if (uVar2 < __size) {\n      return __ptr;\n    }\n  }\n  free(__ptr);\n  return (void *)0x0;\n}\n\n",
            "funcName": "FUN_0040e910"
        },
        {
            "funcStartAddr": "0x40e9b0",
            "funcEndAddr": "0x40eb44",
            "decompiledFuncCode": "\nint FUN_0040e9b0(byte *param_1,long param_2,uint param_3)\n\n{\n  byte *pbVar1;\n  byte bVar2;\n  int iVar3;\n  size_t sVar4;\n  long lVar5;\n  ushort **ppuVar6;\n  byte *pbVar7;\n  int iVar8;\n  wchar_t local_44;\n  mbstate_t local_40 [2];\n  \n  pbVar1 = param_1 + param_2;\n  sVar4 = __ctype_get_mb_cur_max();\n  if (sVar4 < 2) {\n    iVar8 = 0;\n    if (param_1 < pbVar1) {\n      ppuVar6 = __ctype_b_loc();\n      iVar8 = 0;\n      do {\n        pbVar7 = param_1 + 1;\n        if (((*ppuVar6)[*param_1] & 0x4000) == 0) {\n          if ((param_3 & 2) != 0) {\n            return -1;\n          }\n          if (((*ppuVar6)[*param_1] & 2) == 0) goto LAB_0040eb2a;\n        }\n        else {\nLAB_0040eb2a:\n          if (iVar8 == 0x7fffffff) {\n            return 0x7fffffff;\n          }\n          iVar8 = iVar8 + 1;\n        }\n        param_1 = pbVar7;\n      } while (pbVar1 != pbVar7);\n    }\n  }\n  else {\n    iVar8 = 0;\n    if (param_1 < pbVar1) {\n      do {\n        bVar2 = *param_1;\n        if ((char)bVar2 < '@') {\n          if (((char)bVar2 < '%') && (3 < (byte)(bVar2 - 0x20))) goto LAB_0040ea22;\nLAB_0040e9fb:\n          param_1 = param_1 + 1;\n          iVar8 = iVar8 + 1;\n        }\n        else {\n          if (('@' < (char)bVar2) && (((char)bVar2 < '`' || ((byte)(bVar2 + 0x9f) < 0x1e))))\n          goto LAB_0040e9fb;\nLAB_0040ea22:\n          local_40[0] = (mbstate_t)0x0;\n          do {\n            lVar5 = FUN_00416e80(&local_44,param_1,(long)pbVar1 - (long)param_1,local_40);\n            if (lVar5 == -1) {\n              if ((param_3 & 1) != 0) {\n                return -1;\n              }\n              goto LAB_0040e9fb;\n            }\n            if (lVar5 == -2) {\n              if ((param_3 & 1) != 0) {\n                return -1;\n              }\n              iVar8 = iVar8 + 1;\n              param_1 = pbVar1;\n              break;\n            }\n            if (lVar5 == 0) {\n              lVar5 = 1;\n            }\n            iVar3 = wcwidth(local_44);\n            if (iVar3 < 0) {\n              if ((param_3 & 2) != 0) {\n                return -1;\n              }\n              iVar3 = iswcntrl(local_44);\n              if (iVar3 == 0) {\n                if (iVar8 == 0x7fffffff) {\n                  return 0x7fffffff;\n                }\n                iVar8 = iVar8 + 1;\n              }\n            }\n            else {\n              if (0x7fffffff - iVar8 < iVar3) {\n                return 0x7fffffff;\n              }\n              iVar8 = iVar8 + iVar3;\n            }\n            param_1 = param_1 + lVar5;\n            iVar3 = mbsinit(local_40);\n          } while (iVar3 == 0);\n        }\n      } while (param_1 < pbVar1);\n    }\n  }\n  return iVar8;\n}\n\n",
            "funcName": "FUN_0040e9b0"
        },
        {
            "funcStartAddr": "0x40eb70",
            "funcEndAddr": "0x40eb93",
            "decompiledFuncCode": "\nvoid FUN_0040eb70(char *param_1,undefined4 param_2)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  FUN_0040e9b0(param_1,sVar1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_0040eb70"
        },
        {
            "funcStartAddr": "0x40eba0",
            "funcEndAddr": "0x40ed9c",
            "decompiledFuncCode": "\nvoid FUN_0040eba0(undefined8 *param_1,ulong param_2,undefined8 *param_3,code *param_4)\n\n{\n  ulong uVar1;\n  int iVar2;\n  ulong uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  ulong uVar6;\n  ulong uVar7;\n  long lVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  undefined8 *__dest;\n  ulong local_68;\n  ulong local_48;\n  \n  if (param_2 < 3) {\n    if (param_2 == 2) {\n      uVar4 = param_1[1];\n      uVar5 = *param_1;\n      iVar2 = (*param_4)(uVar5,uVar4);\n      if (0 < iVar2) {\n        *param_1 = uVar4;\n        param_1[1] = uVar5;\n        return;\n      }\n    }\n  }\n  else {\n    uVar3 = param_2 >> 1;\n    FUN_0040eba0(param_1 + uVar3,param_2 - uVar3,param_3,param_4);\n    if (param_2 == 3) {\n      uVar4 = *param_1;\n      *param_3 = uVar4;\n    }\n    else {\n      uVar7 = param_2 >> 2;\n      FUN_0040eba0(param_1 + uVar7,uVar3 - uVar7,param_3,param_4);\n      FUN_0040eba0(param_1,uVar7,param_3,param_4);\n      local_68 = 0;\n      uVar4 = *param_1;\n      uVar5 = param_1[uVar7];\n      uVar6 = uVar7;\n      puVar10 = param_3;\n      while( true ) {\n        while( true ) {\n          __dest = puVar10 + 1;\n          iVar2 = (*param_4)(uVar4,uVar5);\n          if (0 < iVar2) break;\n          uVar1 = local_68 + 1;\n          *puVar10 = uVar4;\n          local_68 = uVar6;\n          local_48 = uVar3;\n          if (uVar7 == uVar1) goto LAB_0040ed98;\n          uVar4 = param_1[uVar1];\n          puVar10 = __dest;\n          local_68 = uVar1;\n        }\n        *puVar10 = uVar5;\n        uVar6 = uVar6 + 1;\n        local_48 = uVar7;\n        if (uVar3 == uVar6) break;\n        uVar5 = param_1[uVar6];\n        puVar10 = __dest;\n      }\nLAB_0040ed98:\n      memcpy(__dest,param_1 + local_68,(local_48 - local_68) * 8);\n      uVar4 = *param_3;\n    }\n    local_68 = 0;\n    uVar5 = param_1[uVar3];\n    uVar6 = uVar3;\n    lVar8 = 0;\n    while( true ) {\n      while( true ) {\n        lVar9 = lVar8 + 1;\n        iVar2 = (*param_4)(uVar4,uVar5);\n        if (iVar2 < 1) break;\n        param_1[lVar8] = uVar5;\n        uVar6 = uVar6 + 1;\n        if (param_2 == uVar6) {\n          memcpy(param_1 + lVar9,param_3 + local_68,(uVar3 - local_68) * 8);\n          return;\n        }\n        uVar5 = param_1[uVar6];\n        lVar8 = lVar9;\n      }\n      local_68 = local_68 + 1;\n      param_1[lVar8] = uVar4;\n      if (uVar3 == local_68) break;\n      uVar4 = param_3[local_68];\n      lVar8 = lVar9;\n    }\n  }\n  return;\n}\n\n",
            "funcName": "FUN_0040eba0"
        },
        {
            "funcStartAddr": "0x40edd0",
            "funcEndAddr": "0x40eddf",
            "decompiledFuncCode": "\nvoid FUN_0040edd0(long param_1,long param_2,undefined8 param_3)\n\n{\n  FUN_0040eba0(param_1,param_2,param_1 + param_2 * 8,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_0040edd0"
        },
        {
            "funcStartAddr": "0x40ede0",
            "funcEndAddr": "0x40ee21",
            "decompiledFuncCode": "\nlong FUN_0040ede0(long param_1,long param_2,long param_3)\n\n{\n  __int32_t **pp_Var1;\n  \n  if (param_3 != 0) {\n    param_3 = param_3 + -1;\n    pp_Var1 = __ctype_tolower_loc();\n    do {\n      *(char *)(param_1 + param_3) = (char)(*pp_Var1)[*(byte *)(param_2 + param_3)];\n      param_3 = param_3 + -1;\n    } while (param_3 != -1);\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_0040ede0"
        },
        {
            "funcStartAddr": "0x40ee30",
            "funcEndAddr": "0x40ee71",
            "decompiledFuncCode": "\nlong FUN_0040ee30(long param_1,long param_2,long param_3)\n\n{\n  __int32_t **pp_Var1;\n  \n  if (param_3 != 0) {\n    param_3 = param_3 + -1;\n    pp_Var1 = __ctype_toupper_loc();\n    do {\n      *(char *)(param_1 + param_3) = (char)(*pp_Var1)[*(byte *)(param_2 + param_3)];\n      param_3 = param_3 + -1;\n    } while (param_3 != -1);\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_0040ee30"
        },
        {
            "funcStartAddr": "0x40ee80",
            "funcEndAddr": "0x410606",
            "decompiledFuncCode": "\n/* WARNING: Type propagation algorithm not settling */\n\nlong FUN_0040ee80(char *param_1,long param_2,char *param_3,tm *param_4,char param_5,\n                 undefined8 param_6,undefined8 param_7,uint param_8)\n\n{\n  int iVar1;\n  bool bVar2;\n  long lVar3;\n  bool bVar4;\n  char cVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  char *pcVar9;\n  long lVar10;\n  char *pcVar11;\n  ulong uVar12;\n  char cVar13;\n  ulong __n;\n  uint uVar14;\n  int iVar15;\n  char *pcVar16;\n  size_t sVar17;\n  ulong uVar18;\n  size_t sVar19;\n  uint uVar20;\n  int iVar21;\n  uint uVar22;\n  int iVar23;\n  char cVar24;\n  uint uVar25;\n  uint uVar26;\n  char *__s;\n  char *pcVar27;\n  char cVar28;\n  ulong uVar29;\n  long lVar30;\n  long lVar31;\n  bool bVar32;\n  char *local_498;\n  char *local_488;\n  uint local_480;\n  uint local_478;\n  undefined2 local_458;\n  char local_456;\n  char local_455 [19];\n  char local_442 [10];\n  undefined8 local_438;\n  undefined8 uStack_430;\n  undefined8 local_428;\n  undefined8 uStack_420;\n  undefined8 local_418;\n  long lStack_410;\n  char *local_408;\n  \n  __s = param_4->tm_zone;\n  uVar25 = param_4->tm_hour;\n  if (__s == (char *)0x0) {\n    __s = \"\";\n  }\n  if ((int)uVar25 < 0xd) {\n    if (uVar25 == 0) {\n      uVar25 = 0xc;\n    }\n  }\n  else {\n    uVar25 = uVar25 - 0xc;\n  }\n  cVar5 = *param_3;\n  lVar31 = 0;\n  if (cVar5 == '\\0') {\nLAB_0040ef1b:\n    if ((param_1 != (char *)0x0) && (param_2 != 0)) {\n      *param_1 = '\\0';\n    }\n    return lVar31;\n  }\nLAB_0040eeea:\n  if (cVar5 == '%') {\n    cVar5 = '\\0';\n    cVar24 = param_5;\n    uVar6 = 0;\n    do {\n      uVar26 = uVar6;\n      param_3 = param_3 + 1;\n      cVar13 = *param_3;\n      cVar28 = cVar13 + -0x30;\n      bVar32 = cVar13 == '0';\n      while (uVar6 = (uint)cVar13, !bVar32) {\n        if (!bVar32 && SBORROW1(cVar13,'0') == cVar28 < '\\0') {\n          if (cVar13 == '^') {\n            cVar24 = '\\x01';\n            uVar6 = uVar26;\n          }\n          else if (cVar13 != '_') {\n            uVar20 = 0xffffffff;\n            if (9 < uVar6 - 0x30) goto LAB_0040efc8;\nLAB_0040f011:\n            uVar20 = 0;\n            pcVar9 = param_3;\n            goto LAB_0040f013;\n          }\n          break;\n        }\n        if (cVar13 != '#') {\n          if (cVar13 != '-') {\n            uVar20 = 0xffffffff;\n            if (uVar6 - 0x30 < 10) goto LAB_0040f011;\n            goto LAB_0040efc8;\n          }\n          break;\n        }\n        param_3 = param_3 + 1;\n        cVar13 = *param_3;\n        cVar5 = '\\x01';\n        cVar28 = cVar13 + -0x30;\n        bVar32 = cVar28 == '\\0';\n      }\n    } while( true );\n  }\n  if ((ulong)(param_2 - lVar31) < 2) {\n    return 0;\n  }\n  if (param_1 != (char *)0x0) {\n    *param_1 = cVar5;\n    param_1 = param_1 + 1;\n  }\n  lVar31 = lVar31 + 1;\n  pcVar9 = param_3;\n  goto LAB_0040ef0e;\nLAB_0040f013:\n  do {\n    uVar6 = (uint)pcVar9[1];\n    param_3 = pcVar9 + 1;\n    uVar14 = uVar6 - 0x30;\n    if ((int)uVar20 < 0xccccccd) {\n      if ((uVar20 == 0xccccccc) && ('7' < *pcVar9)) goto LAB_0040f05e;\n      uVar20 = *pcVar9 + -0x30 + uVar20 * 10;\n    }\n    else {\nLAB_0040f05e:\n      if (9 < uVar14) {\n        uVar20 = 0x7fffffff;\n        break;\n      }\n      uVar6 = (uint)pcVar9[2];\n      uVar20 = 0x7fffffff;\n      param_3 = pcVar9 + 2;\n      uVar14 = uVar6 - 0x30;\n    }\n    pcVar9 = param_3;\n  } while (uVar14 < 10);\nLAB_0040efc8:\n  if (((char)uVar6 == 'E') || ((char)uVar6 == 'O')) {\n    uVar8 = (uint)(byte)param_3[1];\n    param_3 = param_3 + 1;\n    uVar14 = uVar6;\n  }\n  else {\n    uVar14 = 0;\n    uVar8 = uVar6;\n  }\n  cVar13 = (char)uVar8;\n  pcVar11 = &local_456;\n  pcVar9 = param_3;\n  uVar6 = uVar25;\n  local_478 = uVar20;\n  switch(uVar8 & 0xff) {\n  case 0:\n    cVar5 = param_3[-1];\n    param_3 = param_3 + -1;\nLAB_0040fe57:\n    uVar18 = param_2 - lVar31;\n    uVar6 = 0;\n    if (-1 < (int)uVar20) {\n      uVar6 = uVar20;\n    }\n    uVar12 = (ulong)(int)uVar6;\n    if (cVar5 != '%') break;\n    __n = 1;\n    pcVar9 = param_3;\n    uVar29 = 1;\n    if (uVar12 != 0) {\n      uVar29 = uVar12;\n    }\n    goto LAB_0040fd03;\n  case 0x25:\n    uVar18 = param_2 - lVar31;\n    uVar6 = 0;\n    if (-1 < (int)uVar20) {\n      uVar6 = uVar20;\n    }\n    uVar12 = (ulong)(int)uVar6;\n    uVar29 = 1;\n    if (uVar12 != 0) {\n      uVar29 = uVar12;\n    }\n    if (uVar14 != 0) {\n      __n = 1;\n      goto LAB_0040fd03;\n    }\n    if (uVar18 <= uVar29) {\n      return 0;\n    }\n    if (param_1 != (char *)0x0) {\n      pcVar11 = param_1;\n      if (1 < (int)uVar20) {\n        sVar19 = (long)(int)uVar20 - 1;\n        pcVar11 = param_1 + sVar19;\n        if (uVar26 == 0x30) {\n          memset(param_1,0x30,sVar19);\n          cVar13 = *param_3;\n        }\n        else {\n          memset(param_1,0x20,sVar19);\n          cVar13 = *param_3;\n        }\n      }\n      *pcVar11 = cVar13;\n      param_1 = pcVar11 + 1;\n    }\n    goto LAB_0040f8a6;\n  case 0x3a:\n    pcVar9 = param_3 + 1;\n    lVar30 = 1;\n    cVar5 = param_3[1];\n    while (cVar5 == ':') {\n      lVar30 = lVar30 + 1;\n      pcVar9 = param_3 + lVar30;\n      cVar5 = param_3[lVar30];\n    }\n    if (cVar5 == 'z') goto LAB_0040fda0;\n    break;\n  case 0x41:\n  case 0x42:\n  case 0x61:\n    if (uVar14 != 0) break;\n    if (cVar5 != '\\0') {\n      cVar24 = cVar5;\n    }\nLAB_0040f0a0:\n    cVar28 = '\\0';\n    uVar14 = 0;\n    goto LAB_0040f0c0;\n  case 0x43:\n    if (uVar14 != 0x45) {\n      bVar4 = false;\n      local_478 = 2;\n      iVar15 = param_4->tm_year;\n      iVar23 = iVar15 / 100 + 0x13;\n      bVar32 = iVar15 < -0x76c;\n      uVar6 = iVar23 - ((uint)(0 < iVar23) & (uint)(iVar15 % 100) >> 0x1f);\n      uVar22 = 0;\n      goto LAB_0040f61f;\n    }\nLAB_0041029c:\n    uVar8 = 0;\n    goto LAB_0040f632;\n  case 0x44:\n    if (uVar14 == 0) {\n      local_498 = \"%m/%d/%y\";\n      goto LAB_0040f399;\n    }\n    break;\n  case 0x46:\n    if (uVar14 == 0) {\n      local_498 = \"%Y-%m-%d\";\n      goto LAB_0040f399;\n    }\n    break;\n  case 0x47:\n  case 0x56:\n  case 0x67:\n    if (uVar14 != 0x45) {\n      iVar15 = param_4->tm_year;\n      iVar1 = param_4->tm_yday;\n      iVar21 = param_4->tm_wday;\n      uVar6 = iVar15 + -100 + (iVar15 >> 0x1f & 400U);\n      iVar23 = (iVar1 - iVar21) + 0x17e;\n      iVar23 = (iVar1 - iVar23) + 3 + (iVar23 / 7) * 7;\n      if (iVar23 < 0) {\n        uVar6 = uVar6 - 1;\n        iVar23 = 0x16d;\n        if (((uVar6 & 3) == 0) && (iVar23 = 0x16e, uVar6 == ((int)uVar6 / 100) * 100)) {\n          iVar23 = ~-(uint)((int)uVar6 % 400 == 0) + 0x16e;\n        }\n        iVar7 = -1;\n        iVar21 = ((iVar1 + iVar23) - iVar21) + 0x17e;\n        iVar23 = ((iVar1 + iVar23) - iVar21) + 3 + (iVar21 / 7) * 7;\n      }\n      else {\n        iVar7 = 0x16d;\n        if (((uVar6 & 3) == 0) && (iVar7 = 0x16e, uVar6 == ((int)uVar6 / 100) * 100)) {\n          iVar7 = (uVar6 == ((int)uVar6 / 400) * 400) + 0x16d;\n        }\n        iVar21 = ((iVar1 - iVar7) - iVar21) + 0x17e;\n        iVar1 = ((iVar1 - iVar7) - iVar21) + 3 + (iVar21 / 7) * 7;\n        if (-1 < iVar1) {\n          iVar23 = iVar1;\n        }\n        iVar7 = (iVar1 >> 0x1f) + 1;\n      }\n      if (cVar13 == 'G') {\n        bVar4 = false;\n        local_478 = 4;\n        uVar6 = iVar15 + 0x76c + iVar7;\n        bVar32 = iVar15 < -0x76c - iVar7;\n        uVar22 = 0;\n        goto LAB_0040f61f;\n      }\n      if (cVar13 == 'g') {\n        local_478 = 2;\n        uVar8 = (iVar15 % 100 + iVar7) % 100;\n        uVar6 = uVar8;\n        if ((int)uVar8 < 0) {\n          uVar6 = uVar8 + 100;\n          if (iVar15 < -0x76c - iVar7) {\n            uVar6 = -uVar8;\n          }\n        }\n      }\n      else {\n        uVar6 = iVar23 / 7 + 1;\n        local_478 = 2;\n      }\n      goto LAB_0040f610;\n    }\n    break;\n  case 0x48:\n    if (uVar14 != 0x45) {\n      uVar6 = param_4->tm_hour;\n      local_478 = 2;\n      goto LAB_0040f610;\n    }\n    break;\n  case 0x49:\n    if (uVar14 != 0x45) {\n      local_478 = 2;\n      goto LAB_0040f610;\n    }\n    break;\n  case 0x4d:\n    if (uVar14 != 0x45) {\n      uVar6 = param_4->tm_min;\n      local_478 = 2;\n      goto LAB_0040f610;\n    }\n    break;\n  case 0x4e:\n    if (uVar14 != 0x45) {\n      uVar6 = param_8;\n      if (uVar20 == 0xffffffff) {\n        uVar20 = 9;\n        local_478 = 9;\n      }\n      else {\n        uVar8 = param_8;\n        uVar22 = uVar20;\n        if ((int)uVar20 < 9) {\n          do {\n            uVar22 = uVar22 + 1;\n            uVar6 = (int)uVar8 / 10;\n            uVar8 = (int)uVar8 / 10;\n          } while (uVar22 != 9);\n        }\n      }\n      goto LAB_0040f610;\n    }\n    break;\n  case 0x50:\n    cVar28 = '\\x01';\n    goto LAB_0040f7b5;\n  case 0x52:\n    local_498 = \"%H:%M\";\n    goto LAB_0040f399;\n  case 0x53:\n    if (uVar14 != 0x45) {\n      uVar6 = param_4->tm_sec;\n      local_478 = 2;\n      goto LAB_0040f610;\n    }\n    break;\n  case 0x54:\n    local_498 = \"%H:%M:%S\";\nLAB_0040f399:\n    uVar29 = FUN_0040ee80(0,0xffffffffffffffff,local_498,param_4,cVar24,param_6,param_7,param_8);\n    uVar6 = 0;\n    if (-1 < (int)uVar20) {\n      uVar6 = uVar20;\n    }\n    uVar12 = (ulong)(int)uVar6;\n    uVar18 = uVar12;\n    if (uVar12 <= uVar29) {\n      uVar18 = uVar29;\n    }\n    if ((ulong)(param_2 - lVar31) <= uVar18) {\n      return 0;\n    }\n    if (param_1 != (char *)0x0) {\n      pcVar11 = param_1;\n      if (uVar29 < uVar12) {\n        sVar19 = (long)(int)uVar20 - uVar29;\n        pcVar11 = param_1 + sVar19;\n        if (uVar26 == 0x30) {\n          memset(param_1,0x30,sVar19);\n        }\n        else {\n          memset(param_1,0x20,sVar19);\n        }\n      }\n      FUN_0040ee80(pcVar11,param_2 - lVar31,local_498,param_4,cVar24,param_6,param_7,param_8);\n      param_1 = pcVar11 + uVar29;\n    }\n    lVar31 = lVar31 + uVar18;\n    goto LAB_0040ef0e;\n  case 0x55:\n    if (uVar14 != 0x45) {\n      iVar23 = (param_4->tm_yday - param_4->tm_wday) + 7;\n      iVar15 = (int)((ulong)((long)iVar23 * -0x6db6db6d) >> 0x20);\nLAB_0040fbdd:\n      uVar6 = (iVar15 + iVar23 >> 2) - (iVar23 >> 0x1f);\n      local_478 = 2;\n      goto LAB_0040f610;\n    }\n    break;\n  case 0x57:\n    if (uVar14 != 0x45) {\n      iVar23 = param_4->tm_wday + 6;\n      iVar23 = ((iVar23 / 7) * 7 - iVar23) + 7 + param_4->tm_yday;\n      iVar15 = (int)((ulong)((long)iVar23 * -0x6db6db6d) >> 0x20);\n      goto LAB_0040fbdd;\n    }\n    break;\n  case 0x58:\n  case 99:\n  case 0x78:\n    if (uVar14 != 0x4f) goto switchD_0040efe1_caseD_72;\n    break;\n  case 0x59:\n    if (uVar14 == 0x45) goto LAB_0041029c;\n    if (uVar14 == 0x4f) break;\n    bVar4 = false;\n    local_478 = 4;\n    bVar32 = param_4->tm_year < -0x76c;\n    uVar6 = param_4->tm_year + 0x76c;\n    uVar22 = 0;\n    goto LAB_0040fb90;\n  case 0x5a:\n    if (cVar5 != '\\0') {\n      cVar24 = '\\0';\n    }\n    sVar19 = strlen(__s);\n    uVar6 = 0;\n    if (-1 < (int)uVar20) {\n      uVar6 = uVar20;\n    }\n    uVar18 = (ulong)(int)uVar6;\n    uVar29 = uVar18;\n    if (uVar18 <= sVar19) {\n      uVar29 = sVar19;\n    }\n    if ((ulong)(param_2 - lVar31) <= uVar29) {\n      return 0;\n    }\n    if (param_1 != (char *)0x0) {\n      pcVar11 = param_1;\n      if (sVar19 < uVar18) {\n        sVar17 = (long)(int)uVar20 - sVar19;\n        pcVar11 = param_1 + sVar17;\n        if (uVar26 == 0x30) {\n          memset(param_1,0x30,sVar17);\n        }\n        else {\n          memset(param_1,0x20,sVar17);\n        }\n      }\n      if (cVar5 == '\\0') {\n        if (cVar24 == '\\0') {\n          memcpy(pcVar11,__s,sVar19);\n        }\n        else {\n          FUN_0040ee30();\n        }\n      }\n      else {\n        FUN_0040ede0();\n      }\n      param_1 = pcVar11 + sVar19;\n    }\n    lVar31 = lVar31 + uVar29;\n    goto LAB_0040ef0e;\n  case 0x62:\n  case 0x68:\n    if (cVar5 != '\\0') {\n      cVar24 = cVar5;\n    }\n    if (uVar14 == 0) goto LAB_0040f0a0;\n    break;\n  case 100:\n    if (uVar14 != 0x45) {\n      uVar6 = param_4->tm_mday;\n      local_478 = 2;\n      goto LAB_0040f610;\n    }\n    break;\n  case 0x65:\n    if (uVar14 != 0x45) {\n      uVar6 = param_4->tm_mday;\nLAB_0040f7e1:\n      local_478 = 2;\n      if ((uVar26 != 0x30) && (uVar26 != 0x2d)) {\n        uVar26 = 0x5f;\n      }\n      goto LAB_0040f610;\n    }\n    break;\n  case 0x6a:\n    if (uVar14 != 0x45) {\n      bVar4 = false;\n      local_478 = 3;\n      bVar32 = param_4->tm_yday < -1;\n      uVar6 = param_4->tm_yday + 1;\n      uVar22 = 0;\n      goto LAB_0040f61f;\n    }\n    break;\n  case 0x6b:\n    if (uVar14 != 0x45) {\n      uVar6 = param_4->tm_hour;\n      goto LAB_0040f7e1;\n    }\n    break;\n  case 0x6c:\n    if (uVar14 != 0x45) goto LAB_0040f7e1;\n    break;\n  case 0x6d:\n    if (uVar14 != 0x45) {\n      bVar4 = false;\n      local_478 = 2;\n      bVar32 = param_4->tm_mon < -1;\n      uVar6 = param_4->tm_mon + 1;\n      uVar22 = 0;\n      goto LAB_0040f61f;\n    }\n    break;\n  case 0x6e:\n    uVar6 = 0;\n    if (-1 < (int)uVar20) {\n      uVar6 = uVar20;\n    }\n    uVar29 = (ulong)(int)uVar6;\n    if (uVar29 == 0) {\n      uVar29 = 1;\n    }\n    if ((ulong)(param_2 - lVar31) <= uVar29) {\n      return 0;\n    }\n    if (param_1 != (char *)0x0) {\n      pcVar11 = param_1;\n      if (1 < (int)uVar20) {\n        sVar19 = (long)(int)uVar20 - 1;\n        pcVar11 = param_1 + sVar19;\n        if (uVar26 == 0x30) {\n          memset(param_1,0x30,sVar19);\n        }\n        else {\n          memset(param_1,0x20,sVar19);\n        }\n      }\n      *pcVar11 = '\\n';\n      param_1 = pcVar11 + 1;\n    }\n    goto LAB_0040f8a6;\n  case 0x70:\n    cVar28 = '\\0';\nLAB_0040f7b5:\n    cVar13 = 'p';\n    if (cVar5 != '\\0') {\n      cVar24 = '\\0';\n      cVar28 = cVar5;\n    }\nLAB_0040f1dd:\n    if (uVar14 != 0) {\n      uVar8 = 0;\n      goto LAB_0040f63f;\n    }\n    goto LAB_0040f0c0;\n  case 0x71:\n    uVar8 = 1;\n    local_478 = 1;\n    if (uVar14 == 0x4f) goto LAB_0040f632;\n    bVar4 = false;\n    bVar32 = false;\n    uVar22 = 0;\n    uVar6 = (param_4->tm_mon * 0xb >> 5) + 1;\n    goto LAB_0040f8e0;\n  case 0x72:\nswitchD_0040efe1_caseD_72:\n    cVar28 = '\\0';\n    goto LAB_0040f1dd;\n  case 0x73:\n    pcVar9 = local_442 + 1;\n    local_418 = *(undefined8 *)&param_4->tm_isdst;\n    lStack_410 = param_4->tm_gmtoff;\n    local_438 = *(undefined8 *)param_4;\n    uStack_430 = *(undefined8 *)&param_4->tm_hour;\n    local_428 = *(undefined8 *)&param_4->tm_mon;\n    uStack_420 = *(undefined8 *)&param_4->tm_wday;\n    local_408 = param_4->tm_zone;\n    lVar10 = FUN_004177a0(param_7,&local_438);\n    lVar30 = lVar10;\n    do {\n      lVar3 = lVar30 / 10;\n      cVar5 = (char)lVar30 + (char)lVar3 * -10;\n      if (lVar10 < 0) {\n        cVar5 = -cVar5;\n      }\n      pcVar9 = pcVar9 + -1;\n      *pcVar9 = cVar5 + '0';\n      lVar30 = lVar3;\n    } while (lVar3 != 0);\n    local_478 = 1;\n    if (0 < (int)uVar20) {\n      local_478 = uVar20;\n    }\n    if (lVar10 < 0) goto LAB_00410028;\n    goto LAB_0040f2cd;\n  case 0x74:\n    uVar6 = 0;\n    if (-1 < (int)uVar20) {\n      uVar6 = uVar20;\n    }\n    uVar29 = (ulong)(int)uVar6;\n    if (uVar29 == 0) {\n      uVar29 = 1;\n    }\n    if ((ulong)(param_2 - lVar31) <= uVar29) {\n      return 0;\n    }\n    if (param_1 != (char *)0x0) {\n      pcVar11 = param_1;\n      if (1 < (int)uVar20) {\n        sVar19 = (long)(int)uVar20 - 1;\n        pcVar11 = param_1 + sVar19;\n        if (uVar26 == 0x30) {\n          memset(param_1,0x30,sVar19);\n        }\n        else {\n          memset(param_1,0x20,sVar19);\n        }\n      }\n      *pcVar11 = '\\t';\n      param_1 = pcVar11 + 1;\n    }\nLAB_0040f8a6:\n    lVar31 = lVar31 + uVar29;\n    goto LAB_0040ef0e;\n  case 0x75:\n    uVar6 = (param_4->tm_wday + 6) % 7 + 1;\n    local_478 = 1;\n    goto LAB_0040f610;\n  case 0x77:\n    if (uVar14 != 0x45) {\n      uVar6 = param_4->tm_wday;\n      local_478 = 1;\n      goto LAB_0040f610;\n    }\n    break;\n  case 0x79:\n    if (uVar14 == 0x45) goto LAB_0041029c;\n    local_478 = 2;\n    uVar8 = param_4->tm_year % 100;\n    uVar6 = uVar8;\n    if ((int)uVar8 < 0) {\n      uVar6 = uVar8 + 100;\n      if (param_4->tm_year < -0x76c) {\n        uVar6 = -uVar8;\n      }\n    }\nLAB_0040f610:\n    bVar4 = false;\n    uVar22 = 0;\n    bVar32 = SUB41(uVar6 >> 0x1f,0);\nLAB_0040f61f:\n    if (uVar14 == 0x4f) {\n      uVar8 = local_478;\n      if (bVar32 != false) {\nLAB_0040fb99:\n        uVar6 = -uVar6;\n        goto LAB_0040f8e0;\n      }\nLAB_0040f632:\n      cVar28 = '\\0';\nLAB_0040f63f:\n      local_456 = (char)uVar14;\n      pcVar11 = local_455;\n      uVar14 = uVar8;\nLAB_0040f0c0:\n      local_458 = 0x2520;\n      *pcVar11 = cVar13;\n      pcVar11[1] = '\\0';\n      sVar19 = strftime((char *)&local_438,0x400,(char *)&local_458,param_4);\n      pcVar9 = param_3;\n      if (sVar19 == 0) goto LAB_0040ef0e;\n      local_498 = (char *)(sVar19 - 1);\n      uVar6 = 0;\n      if (-1 < (int)uVar20) {\n        uVar6 = uVar20;\n      }\n      pcVar9 = (char *)(long)(int)uVar6;\n      pcVar16 = pcVar9;\n      if (pcVar9 <= local_498) {\n        pcVar16 = local_498;\n      }\n      if ((char *)(param_2 - lVar31) <= pcVar16) {\n        return 0;\n      }\n      if (param_1 != (char *)0x0) {\n        pcVar11 = param_1;\n        if ((uVar14 == 0) && (local_498 < pcVar9)) {\n          sVar19 = (long)(int)uVar20 - (long)local_498;\n          pcVar11 = param_1 + sVar19;\n          if (uVar26 == 0x30) {\n            memset(param_1,0x30,sVar19);\n          }\n          else {\n            memset(param_1,0x20,sVar19);\n          }\n        }\n        pcVar9 = (char *)((long)&local_438 + 1);\n        local_488 = param_3;\n        if (cVar28 == '\\0') goto LAB_0040f1ab;\n        FUN_0040ede0();\n        goto LAB_0040f1c3;\n      }\n    }\n    else {\nLAB_0040fb90:\n      if (bVar32 != false) goto LAB_0040fb99;\nLAB_0040f8e0:\n      pcVar9 = local_442 + 1;\n      do {\n        pcVar11 = pcVar9;\n        pcVar27 = pcVar9 + -1;\n        if ((uVar22 & 1) != 0) {\n          pcVar9[-1] = ':';\n          pcVar11 = pcVar9 + -1;\n          pcVar27 = pcVar9 + -2;\n        }\n        pcVar9 = pcVar27;\n        uVar22 = (int)uVar22 >> 1;\n        uVar14 = (uint)((ulong)uVar6 / 10);\n        pcVar11[-1] = (char)uVar6 + (char)((ulong)uVar6 / 10) * -10 + '0';\n        bVar2 = 9 < uVar6;\n        uVar6 = uVar14;\n      } while ((bVar2) || (uVar22 != 0));\n      if ((int)local_478 < (int)uVar20) {\n        local_478 = uVar20;\n      }\n      if (bVar32 == false) {\n        if (bVar4) {\n          if (uVar26 == 0x2d) {\n            cVar13 = '+';\n            goto LAB_0041003c;\n          }\n          cVar5 = '+';\nLAB_0040f970:\n          local_498 = local_442 + (1 - (long)pcVar9);\n          iVar23 = (local_478 - 1) - (int)local_498;\n          pcVar11 = (char *)(param_2 - lVar31);\n          if (iVar23 < 1) {\n            uVar6 = 0;\n            if (-1 < (int)uVar20) {\n              uVar6 = uVar20;\n            }\n            pcVar27 = (char *)(long)(int)uVar6;\n            pcVar16 = (char *)0x1;\n            if (pcVar27 != (char *)0x0) {\n              pcVar16 = pcVar27;\n            }\n            if (pcVar11 <= pcVar16) {\n              return 0;\n            }\n            if (param_1 != (char *)0x0) {\n              pcVar11 = param_1;\n              if ((local_478 == 0) && ((char *)0x1 < pcVar27)) {\n                sVar19 = (long)(int)uVar20 - 1;\n                pcVar11 = param_1 + sVar19;\n                local_478 = 0;\n                if (uVar26 == 0x30) {\n                  memset(param_1,0x30,sVar19);\n                }\n                else {\n                  memset(param_1,0x20,sVar19);\n                }\n              }\n              param_1 = pcVar11 + 1;\n              *pcVar11 = cVar5;\n            }\n            lVar31 = lVar31 + (long)pcVar16;\n            pcVar11 = (char *)(param_2 - lVar31);\n          }\n          else {\n            if (uVar26 != 0x5f) {\n              if (pcVar11 <= (char *)(long)(int)local_478) {\n                return 0;\n              }\n              uVar6 = 0;\n              if (-1 < (int)uVar20) {\n                uVar6 = uVar20;\n              }\n              pcVar16 = (char *)(long)(int)uVar6;\n              pcVar27 = (char *)0x1;\n              if (pcVar16 != (char *)0x0) {\n                pcVar27 = pcVar16;\n              }\n              if (pcVar11 <= pcVar27) {\n                return 0;\n              }\n              lVar31 = lVar31 + (long)pcVar27;\n              sVar19 = (size_t)iVar23;\n              if (param_1 != (char *)0x0) {\n                pcVar11 = param_1;\n                if ((local_478 == 0) && ((char *)0x1 < pcVar16)) {\n                  sVar17 = (long)(int)uVar20 - 1;\n                  pcVar11 = param_1 + sVar17;\n                  local_480 = 0;\n                  local_478 = local_480;\n                  if (uVar26 == 0x30) {\n                    memset(param_1,0x30,sVar17);\n                  }\n                  else {\n                    memset(param_1,0x20,sVar17);\n                  }\n                }\n                param_1 = pcVar11 + 1;\n                *pcVar11 = cVar5;\n                goto LAB_0040fa45;\n              }\n              goto LAB_0040fa90;\n            }\nLAB_004101f3:\n            pcVar27 = (char *)(long)iVar23;\n            if (pcVar11 <= pcVar27) {\n              return 0;\n            }\n            if (param_1 != (char *)0x0) {\n              memset(param_1,0x20,(size_t)pcVar27);\n              param_1 = param_1 + (long)pcVar27;\n            }\n            lVar31 = lVar31 + (long)pcVar27;\n            uVar6 = uVar20 - iVar23;\n            bVar32 = iVar23 < (int)uVar20;\n            uVar20 = 0;\n            if (bVar32) {\n              uVar20 = uVar6;\n            }\n            pcVar11 = (char *)(param_2 - lVar31);\n            if (cVar5 == '\\0') {\n              pcVar27 = (char *)(long)(int)uVar20;\n              uVar26 = 0x5f;\n              local_498 = local_442 + (1 - (long)pcVar9);\n            }\n            else {\n              pcVar27 = (char *)(long)(int)uVar20;\n              pcVar16 = (char *)0x1;\n              if (pcVar27 != (char *)0x0) {\n                pcVar16 = pcVar27;\n              }\n              if (pcVar11 <= pcVar16) {\n                return 0;\n              }\n              if (param_1 != (char *)0x0) {\n                pcVar11 = param_1;\n                if ((local_478 == 0) && ((char *)0x1 < pcVar27)) {\n                  pcVar11 = param_1 + (long)(pcVar27 + -1);\n                  memset(param_1,0x20,(size_t)(pcVar27 + -1));\n                  local_478 = 0;\n                }\n                param_1 = pcVar11 + 1;\n                *pcVar11 = cVar5;\n              }\n              lVar31 = lVar31 + (long)pcVar16;\n              uVar26 = 0x5f;\n              local_498 = local_442 + (1 - (long)pcVar9);\n              pcVar11 = (char *)(param_2 - lVar31);\n            }\n          }\n        }\n        else {\nLAB_0040f2cd:\n          local_498 = local_442 + (1 - (long)pcVar9);\n          pcVar11 = (char *)(param_2 - lVar31);\n          if ((uVar26 == 0x2d) || (iVar23 = local_478 - (int)local_498, iVar23 < 1)) {\n            uVar6 = 0;\n            if (-1 < (int)uVar20) {\n              uVar6 = uVar20;\n            }\n            pcVar27 = (char *)(long)(int)uVar6;\n            goto LAB_0040f306;\n          }\n          if (uVar26 == 0x5f) {\n            cVar5 = '\\0';\n            goto LAB_004101f3;\n          }\n          if (pcVar11 <= (char *)(long)(int)local_478) {\n            return 0;\n          }\n          sVar19 = (size_t)iVar23;\nLAB_0040fa45:\n          if (param_1 != (char *)0x0) {\n            memset(param_1,0x30,sVar19);\n            param_1 = param_1 + sVar19;\n          }\nLAB_0040fa90:\n          lVar31 = lVar31 + sVar19;\n          uVar20 = 0;\n          pcVar27 = (char *)0x0;\n          pcVar11 = (char *)(param_2 - lVar31);\n        }\n      }\n      else {\nLAB_00410028:\n        cVar5 = '-';\n        cVar13 = '-';\n        if (uVar26 != 0x2d) goto LAB_0040f970;\nLAB_0041003c:\n        uVar6 = 0;\n        if (-1 < (int)uVar20) {\n          uVar6 = uVar20;\n        }\n        pcVar27 = (char *)(long)(int)uVar6;\n        pcVar11 = (char *)0x1;\n        if (pcVar27 != (char *)0x0) {\n          pcVar11 = pcVar27;\n        }\n        if ((char *)(param_2 - lVar31) <= pcVar11) {\n          return 0;\n        }\n        if (param_1 != (char *)0x0) {\n          if ((local_478 == 0) && ((char *)0x1 < pcVar27)) {\n            memset(param_1,0x20,(long)(int)uVar20 - 1U);\n            local_480 = 0;\n            param_1 = param_1 + ((long)(int)uVar20 - 1U);\n            local_478 = local_480;\n          }\n          *param_1 = cVar13;\n          param_1 = param_1 + 1;\n        }\n        lVar31 = lVar31 + (long)pcVar11;\n        uVar26 = 0x2d;\n        local_498 = local_442 + (1 - (long)pcVar9);\n        pcVar11 = (char *)(param_2 - lVar31);\n      }\nLAB_0040f306:\n      pcVar16 = pcVar27;\n      if (pcVar27 <= local_498) {\n        pcVar16 = local_498;\n      }\n      if (pcVar11 <= pcVar16) {\n        return 0;\n      }\n      if (param_1 != (char *)0x0) {\n        pcVar11 = param_1;\n        local_488 = param_3;\n        if ((local_478 == 0) && (local_498 < pcVar27)) {\n          sVar19 = (long)(int)uVar20 - (long)local_498;\n          pcVar11 = param_1 + sVar19;\n          if (uVar26 == 0x30) {\n            memset(param_1,0x30,sVar19);\n          }\n          else {\n            memset(param_1,0x20,sVar19);\n          }\n        }\nLAB_0040f1ab:\n        if (cVar24 == '\\0') {\n          memcpy(pcVar11,pcVar9,(size_t)local_498);\n        }\n        else {\n          FUN_0040ee30();\n        }\nLAB_0040f1c3:\n        param_1 = pcVar11 + (long)local_498;\n        param_3 = local_488;\n      }\n    }\n    lVar31 = lVar31 + (long)pcVar16;\n    pcVar9 = param_3;\n    goto LAB_0040ef0e;\n  case 0x7a:\n    lVar30 = 0;\nLAB_0040fda0:\n    if (param_4->tm_isdst < 0) goto LAB_0040ef0e;\n    bVar32 = true;\n    iVar23 = (int)param_4->tm_gmtoff;\n    if ((-1 < iVar23) && (bVar32 = false, iVar23 == 0)) {\n      bVar32 = *__s == '-';\n    }\n    uVar6 = iVar23 / 0xe10;\n    uVar8 = (iVar23 / 0x3c) % 0x3c;\n    param_3 = pcVar9;\n    if (lVar30 == 1) {\nLAB_004104f6:\n      local_478 = 6;\n      bVar4 = true;\n      uVar6 = uVar6 * 100 + uVar8;\n      uVar22 = 4;\n    }\n    else if (lVar30 == 0) {\n      uVar22 = 0;\n      bVar4 = true;\n      local_478 = 5;\n      uVar6 = uVar6 * 100 + uVar8;\n    }\n    else {\n      if (lVar30 != 2) {\n        if (lVar30 != 3) {\n          cVar5 = *pcVar9;\n          goto LAB_0040fe57;\n        }\n        if (iVar23 % 0x3c == 0) {\n          if (uVar8 != 0) goto LAB_004104f6;\n          local_478 = 3;\n          bVar4 = true;\n          uVar22 = uVar8;\n          goto LAB_0040f61f;\n        }\n      }\n      local_478 = 9;\n      bVar4 = true;\n      uVar22 = 0x14;\n      uVar6 = iVar23 % 0x3c + uVar6 * 10000 + uVar8 * 100;\n    }\n    goto LAB_0040f61f;\n  }\n  pcVar11 = param_3 + -1;\n  do {\n    pcVar9 = pcVar11;\n    pcVar11 = pcVar9 + -1;\n  } while (*pcVar9 != '%');\n  __n = (ulong)(((int)(param_3 + -1) + 2) - (int)pcVar9);\n  uVar18 = param_2 - lVar31;\n  uVar6 = 0;\n  if (-1 < (int)uVar20) {\n    uVar6 = uVar20;\n  }\n  uVar12 = (ulong)(int)uVar6;\n  uVar29 = uVar12;\n  if (uVar12 <= __n) {\n    uVar29 = __n;\n  }\nLAB_0040fd03:\n  if (uVar18 <= uVar29) {\n    return 0;\n  }\n  if (param_1 != (char *)0x0) {\n    pcVar11 = param_1;\n    if (__n < uVar12) {\n      sVar19 = (long)(int)uVar20 - __n;\n      pcVar11 = param_1 + sVar19;\n      if (uVar26 == 0x30) {\n        memset(param_1,0x30,sVar19);\n      }\n      else {\n        memset(param_1,0x20,sVar19);\n      }\n    }\n    if (cVar24 == '\\0') {\n      memcpy(pcVar11,pcVar9,__n);\n    }\n    else {\n      FUN_0040ee30();\n    }\n    param_1 = pcVar11 + __n;\n  }\n  lVar31 = lVar31 + uVar29;\n  pcVar9 = param_3;\nLAB_0040ef0e:\n  cVar5 = pcVar9[1];\n  param_3 = pcVar9 + 1;\n  if (cVar5 == '\\0') goto LAB_0040ef1b;\n  goto LAB_0040eeea;\n}\n\n",
            "funcName": "FUN_0040ee80"
        },
        {
            "funcStartAddr": "0x410650",
            "funcEndAddr": "0x41066f",
            "decompiledFuncCode": "\nvoid FUN_00410650(void)\n\n{\n  FUN_0040ee80();\n  return;\n}\n\n",
            "funcName": "FUN_00410650"
        },
        {
            "funcStartAddr": "0x410670",
            "funcEndAddr": "0x410709",
            "decompiledFuncCode": "\nvoid FUN_00410670(byte *param_1)\n\n{\n  byte *pbVar1;\n  char *pcVar2;\n  long lVar3;\n  ulong uVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  byte bVar10;\n  \n  bVar10 = 0;\n  if (param_1 == (byte *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar2 = strrchr((char *)param_1,0x2f);\n  if (pcVar2 != (char *)0x0) {\n    pbVar1 = (byte *)(pcVar2 + 1);\n    uVar4 = (long)pbVar1 - (long)param_1;\n    bVar7 = uVar4 < 6;\n    bVar9 = uVar4 == 6;\n    if (6 < (long)uVar4) {\n      lVar3 = 7;\n      pbVar5 = (byte *)(pcVar2 + -6);\n      pbVar6 = (byte *)\"/.libs/\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar5 < *pbVar6;\n        bVar9 = *pbVar5 == *pbVar6;\n        pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      bVar8 = false;\n      bVar7 = (!bVar7 && !bVar9) == bVar7;\n      if (bVar7) {\n        lVar3 = 3;\n        pbVar5 = pbVar1;\n        pbVar6 = &DAT_0041dd18;\n        do {\n          if (lVar3 == 0) break;\n          lVar3 = lVar3 + -1;\n          bVar8 = *pbVar5 < *pbVar6;\n          bVar7 = *pbVar5 == *pbVar6;\n          pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n          pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        } while (bVar7);\n        param_1 = pbVar1;\n        if ((!bVar8 && !bVar7) == bVar8) {\n          param_1 = (byte *)(pcVar2 + 4);\n          program_invocation_short_name = param_1;\n        }\n      }\n    }\n  }\n  DAT_006257c0 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00410670"
        },
        {
            "funcStartAddr": "0x410710",
            "funcEndAddr": "0x4107ef",
            "decompiledFuncCode": "\nchar * FUN_00410710(char *param_1,int param_2)\n\n{\n  char cVar1;\n  char *pcVar2;\n  byte *pbVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    pbVar3 = (byte *)FUN_004179a0();\n    if ((*pbVar3 & 0xdf) == 0x55) {\n      if (((((pbVar3[1] & 0xdf) != 0x54) || ((pbVar3[2] & 0xdf) != 0x46)) || (pbVar3[3] != 0x2d)) ||\n         ((pbVar3[4] != 0x38 || (pbVar3[5] != 0)))) {\nLAB_004107e8:\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_0041dd29;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0041dd1e;\n      }\n    }\n    else {\n      if (((((*pbVar3 & 0xdf) != 0x47) || ((pbVar3[1] & 0xdf) != 0x42)) || (pbVar3[2] != 0x31)) ||\n         (((pbVar3[3] != 0x38 || (pbVar3[4] != 0x30)) ||\n          ((pbVar3[5] != 0x33 || ((pbVar3[6] != 0x30 || (pbVar3[7] != 0)))))))) goto LAB_004107e8;\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_0041dd25;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0041dd22;\n      }\n    }\n  }\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_00410710"
        },
        {
            "funcStartAddr": "0x410810",
            "funcEndAddr": "0x411943",
            "decompiledFuncCode": "\nulong FUN_00410810(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  ulong uVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ulong uVar9;\n  ushort **ppuVar10;\n  long lVar11;\n  char *pcVar12;\n  byte bVar13;\n  char cVar14;\n  ulong uVar15;\n  ulong uVar16;\n  byte bVar17;\n  uint uVar18;\n  ulong uVar19;\n  bool bVar20;\n  ulong uVar21;\n  ulong uVar22;\n  bool bVar23;\n  bool bVar24;\n  bool bVar25;\n  bool bVar26;\n  size_t local_a0;\n  char *local_78;\n  ulong local_70;\n  bool local_5c;\n  bool local_5b;\n  wint_t local_44;\n  mbstate_t local_40 [2];\n  \n  sVar8 = __ctype_get_mb_cur_max();\n  uVar18 = param_6 & 2;\n  local_5c = uVar18 != 0;\n  uVar9 = param_2;\n  switch(param_5) {\n  case 0:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = false;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar18 != 0) {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = false;\n      local_a0 = 1;\n      local_78 = \"\\'\";\n      break;\n    }\n    bVar6 = false;\nLAB_00411461:\n    if (param_2 != 0) {\n      bVar3 = false;\n      local_5b = false;\n      bVar2 = true;\n      local_70 = 0;\n      goto LAB_00411096;\n    }\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 1;\n    param_5 = 2;\n    local_70 = 0;\n    local_5b = false;\n    local_5c = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 3:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 4:\n    if (uVar18 == 0) {\n      bVar6 = true;\n      goto LAB_00411461;\n    }\n  case 1:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 5:\n    if (uVar18 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      local_5b = false;\n      local_70 = 0;\n      bVar2 = true;\n      bVar3 = false;\n      local_5c = false;\n      uVar15 = 1;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    else {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 5;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\\"\";\n    break;\n  case 7:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = true;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      param_8 = (char *)FUN_00410710(&DAT_0041dd2d,param_5);\n      param_9 = (char *)FUN_00410710(\"\\'\");\n    }\n    uVar15 = 0;\n    if (uVar18 == 0) {\n      cVar14 = *param_8;\n      while (cVar14 != '\\0') {\n        if (uVar15 < param_2) {\n          param_1[uVar15] = cVar14;\n        }\n        uVar15 = uVar15 + 1;\n        cVar14 = param_8[uVar15];\n      }\n    }\n    local_a0 = strlen(param_9);\n    bVar2 = true;\n    bVar3 = false;\n    local_78 = param_9;\n    local_5b = false;\n    local_70 = 0;\n    bVar6 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\nLAB_004108a8:\n  uVar22 = 0;\n  bVar5 = local_5b;\nLAB_004108b8:\n  bVar23 = param_4 != uVar22;\n  if (param_4 == 0xffffffffffffffff) {\n    bVar23 = param_3[uVar22] != '\\0';\n  }\n  bVar26 = bVar6;\n  if (!bVar23) goto LAB_00411038;\n  bVar20 = (bool)(param_5 != 2 & bVar6);\n  __s1 = (byte *)(param_3 + uVar22);\n  uVar16 = uVar15;\n  bVar4 = bVar3;\n  if (bVar20) {\n    if (local_a0 == 0) {\nLAB_00410fb0:\n      uVar19 = (ulong)*__s1;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00410fc2_caseD_0;\n      default:\n        bVar20 = false;\n        goto switchD_00410e2e_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00410cc5;\n      case 8:\n        bVar17 = 0x62;\n        break;\n      case 9:\nswitchD_00410fc2_caseD_9:\n        bVar17 = 0x74;\n        break;\n      case 10:\nswitchD_00410fc2_caseD_a:\n        bVar17 = 0x6e;\n        break;\n      case 0xb:\nswitchD_00410fc2_caseD_b:\n        bVar17 = 0x76;\n        goto LAB_00410cc5;\n      case 0xc:\nswitchD_00410fc2_caseD_c:\n        bVar17 = 0x66;\nLAB_00410cc5:\n        if (local_5c) {\n          bVar25 = false;\n          goto LAB_00410c18;\n        }\nLAB_00410cd0:\n        bVar23 = false;\n        goto LAB_00410a8b;\n      case 0xd:\n        bVar20 = false;\nswitchD_004109a8_caseD_d:\n        bVar25 = param_5 == 2;\n        uVar19 = 0xd;\n        bVar13 = 0x72;\n        goto LAB_00410be0;\n      case 0x20:\n        bVar25 = false;\nLAB_0041100a:\n        uVar19 = 0x20;\n        goto LAB_00410fd2;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar20 = false;\nswitchD_004109a8_caseD_21:\n        bVar25 = false;\n        goto LAB_00410beb;\n      case 0x23:\n      case 0x7e:\n        bVar26 = false;\nLAB_00410fea:\n        if (uVar22 == 0) {\n          bVar25 = false;\n          bVar23 = bVar20;\n          bVar20 = bVar26;\n          goto LAB_004109f8;\n        }\n        bVar23 = false;\n        goto LAB_00410a0f;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar25 = false;\nLAB_00410fd2:\n        bVar24 = false;\n        bVar23 = bVar20;\n        bVar20 = bVar25;\n        goto LAB_00410a11;\n      case 0x27:\n        bVar20 = false;\n        goto switchD_00410e2e_caseD_27;\n      case 0x3f:\n        bVar20 = false;\n        goto switchD_00410e2e_caseD_3f;\n      case 0x5c:\n        bVar20 = false;\n        goto switchD_004109a8_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        bVar20 = false;\n        goto switchD_00410e2e_caseD_7b;\n      }\n      bVar25 = false;\n      bVar23 = false;\n      goto joined_r0x00410c07;\n    }\n    if ((param_4 == 0xffffffffffffffff) && (1 < local_a0)) {\n      param_4 = strlen(param_3);\n    }\n    if ((param_4 < uVar22 + local_a0) || (iVar7 = memcmp(__s1,local_78,local_a0), iVar7 != 0))\n    goto LAB_00410fb0;\n    if (!local_5c) {\n      uVar19 = (ulong)*__s1;\n      bVar25 = bVar20;\n      switch(uVar19) {\n      case 0:\n        goto switchD_004109a8_caseD_0;\n      default:\n        goto switchD_00410e2e_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00410cd0;\n      case 8:\n        bVar25 = false;\n        bVar23 = false;\n        bVar17 = 0x62;\n        break;\n      case 9:\n        goto switchD_00410fc2_caseD_9;\n      case 10:\n        goto switchD_00410fc2_caseD_a;\n      case 0xb:\n        goto switchD_00410fc2_caseD_b;\n      case 0xc:\n        goto switchD_00410fc2_caseD_c;\n      case 0xd:\n        goto switchD_004109a8_caseD_d;\n      case 0x20:\n        goto LAB_0041100a;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        goto switchD_004109a8_caseD_21;\n      case 0x23:\n      case 0x7e:\n        bVar26 = bVar20;\n        goto LAB_00410fea;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        goto LAB_00410fd2;\n      case 0x27:\n        goto switchD_00410e2e_caseD_27;\n      case 0x3f:\n        goto switchD_00410e2e_caseD_3f;\n      case 0x5c:\n        goto switchD_004109a8_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        goto switchD_00410e2e_caseD_7b;\n      }\n      goto LAB_00410a52;\n    }\n    goto LAB_00410c2a;\n  }\n  uVar19 = (ulong)*__s1;\n  switch(uVar19) {\n  case 0:\n    if (bVar6) {\nswitchD_00410fc2_caseD_0:\n      if (!local_5c) {\n        bVar20 = false;\nswitchD_004109a8_caseD_0:\n        bVar26 = param_5 == 2;\n        bVar24 = (bool)((bVar3 ^ 1U) & bVar26);\n        if (bVar24) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar16 = uVar15 + 3;\n          bVar3 = bVar24;\n          if (uVar9 <= uVar15 + 3) {\n            uVar16 = uVar15 + 4;\n            bVar23 = false;\n            bVar17 = 0x30;\n            bVar4 = bVar24;\n            goto LAB_00410b08;\n          }\nLAB_00410d4a:\n          param_1[uVar16] = 0x5c;\n          uVar15 = uVar16;\n        }\n        else if (uVar15 < uVar9) goto LAB_00410d4a;\n        uVar16 = uVar15 + 1;\n        bVar24 = bVar23;\n        if (param_5 == 2) {\n          bVar17 = 0x30;\n          bVar23 = false;\n          bVar4 = bVar3;\n          goto LAB_00410b08;\n        }\n        uVar19 = 0x30;\n        if ((uVar22 + 1 < param_4) && ((byte)(param_3[uVar22 + 1] - 0x30U) < 10)) {\n          if (uVar16 < uVar9) {\n            param_1[uVar16] = 0x30;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x30;\n          }\n          uVar16 = uVar15 + 3;\n          uVar19 = 0x30;\n        }\nLAB_00410d89:\n        bVar17 = (byte)uVar19;\n        bVar23 = false;\n        uVar15 = uVar16;\n        bVar4 = bVar3;\n        if ((bool)(bVar6 ^ 1U | bVar26)) goto LAB_00410b08;\n        goto LAB_00410a11;\n      }\n      bVar26 = param_5 == 2;\n      goto LAB_00410c1c;\n    }\n    if ((param_6 & 1) == 0) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0;\n      bVar23 = false;\n      bVar20 = false;\n      goto LAB_004109f8;\n    }\n    uVar22 = uVar22 + 1;\n    goto LAB_004108b8;\n  default:\nswitchD_00410e2e_caseD_1:\n    bVar25 = bVar6;\n    if (sVar8 != 1) {\n      local_40[0] = (mbstate_t)0x0;\n      if (param_4 == 0xffffffffffffffff) {\n        param_4 = strlen(param_3);\n      }\n      uVar21 = 0;\n      do {\n        uVar1 = uVar22 + uVar21;\n        lVar11 = FUN_00416e80(&local_44,param_3 + uVar1,param_4 - uVar1,local_40);\n        if (lVar11 == 0) break;\n        if (lVar11 == -1) {\n          bVar23 = false;\n          goto LAB_0041173a;\n        }\n        if (lVar11 == -2) {\n          if ((param_4 <= uVar1) || (param_3[uVar1] == '\\0')) goto LAB_00411877;\n          goto LAB_00411867;\n        }\n        if (((param_5 == 2) && (local_5c)) && (lVar11 != 1)) {\n          pcVar12 = param_3 + uVar1 + 1;\n          do {\n            if (((byte)(*pcVar12 + 0xa5U) < 0x22) &&\n               ((1L << (*pcVar12 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n              param_5 = 2;\n              goto LAB_00410c1c;\n            }\n            pcVar12 = pcVar12 + 1;\n          } while (param_3 + uVar1 + lVar11 != pcVar12);\n        }\n        iVar7 = iswprint(local_44);\n        if (iVar7 == 0) {\n          bVar23 = false;\n        }\n        uVar21 = uVar21 + lVar11;\n        iVar7 = mbsinit(local_40);\n      } while (iVar7 == 0);\n      bVar25 = (bool)((bVar23 ^ 1U) & bVar6);\n      goto LAB_0041173a;\n    }\n    ppuVar10 = __ctype_b_loc();\n    uVar21 = 1;\n    bVar25 = ((*ppuVar10)[uVar19] & 0x4000) == 0;\n    bVar23 = !bVar25;\n    bVar25 = (bool)(bVar25 & bVar6);\n    goto LAB_00410e04;\n  case 7:\n    bVar25 = param_5 == 2;\n    uVar19 = 7;\n    bVar13 = 0x61;\n    break;\n  case 8:\n    bVar25 = param_5 == 2;\n    uVar19 = 8;\n    bVar13 = 0x62;\n    break;\n  case 9:\n    uVar19 = 9;\n    bVar13 = 0x74;\n    goto LAB_00410e42;\n  case 10:\n    uVar19 = 10;\n    bVar13 = 0x6e;\n    goto LAB_00410e42;\n  case 0xb:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xb;\n    bVar13 = 0x76;\n    break;\n  case 0xc:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xc;\n    bVar13 = 0x66;\n    break;\n  case 0xd:\n    uVar19 = 0xd;\n    bVar13 = 0x72;\nLAB_00410e42:\n    bVar25 = param_5 == 2;\n    bVar20 = (bool)(local_5c & bVar25);\n    if (bVar20) {\nLAB_00410e5a:\n      param_5 = 2;\n      goto LAB_00410c1c;\n    }\n    break;\n  case 0x20:\n    uVar19 = 0x20;\n    goto LAB_004109e6;\n  case 0x21:\n  case 0x22:\n  case 0x24:\n  case 0x26:\n  case 0x28:\n  case 0x29:\n  case 0x2a:\n  case 0x3b:\n  case 0x3c:\n  case 0x3d:\n  case 0x3e:\n  case 0x5b:\n  case 0x5e:\n  case 0x60:\n  case 0x7c:\n    bVar23 = false;\nLAB_004109e6:\n    bVar25 = param_5 == 2;\n    if ((local_5c) && (bVar25)) goto LAB_00410e5a;\n    goto LAB_004109f8;\n  case 0x23:\n  case 0x7e:\nLAB_004109dd:\n    bVar25 = param_5 == 2;\n    if (uVar22 == 0) goto LAB_004109e6;\n    goto LAB_00410beb;\n  case 0x25:\n  case 0x2b:\n  case 0x2c:\n  case 0x2d:\n  case 0x2e:\n  case 0x2f:\n  case 0x30:\n  case 0x31:\n  case 0x32:\n  case 0x33:\n  case 0x34:\n  case 0x35:\n  case 0x36:\n  case 0x37:\n  case 0x38:\n  case 0x39:\n  case 0x3a:\n  case 0x41:\n  case 0x42:\n  case 0x43:\n  case 0x44:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x48:\n  case 0x49:\n  case 0x4a:\n  case 0x4b:\n  case 0x4c:\n  case 0x4d:\n  case 0x4e:\n  case 0x4f:\n  case 0x50:\n  case 0x51:\n  case 0x52:\n  case 0x53:\n  case 0x54:\n  case 0x55:\n  case 0x56:\n  case 0x57:\n  case 0x58:\n  case 0x59:\n  case 0x5a:\n  case 0x5d:\n  case 0x5f:\n  case 0x61:\n  case 0x62:\n  case 99:\n  case 100:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n  case 0x68:\n  case 0x69:\n  case 0x6a:\n  case 0x6b:\n  case 0x6c:\n  case 0x6d:\n  case 0x6e:\n  case 0x6f:\n  case 0x70:\n  case 0x71:\n  case 0x72:\n  case 0x73:\n  case 0x74:\n  case 0x75:\n  case 0x76:\n  case 0x77:\n  case 0x78:\n  case 0x79:\n  case 0x7a:\n    goto switchD_00410e2e_caseD_25;\n  case 0x27:\nswitchD_00410e2e_caseD_27:\n    bVar5 = bVar23;\n    if (param_5 != 2) {\n      bVar25 = false;\n      uVar19 = 0x27;\n      goto LAB_004109f8;\n    }\n    if (!local_5c) {\n      if ((uVar9 == 0) || (uVar19 = 0, uVar21 = uVar9, local_70 != 0)) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x5c;\n        }\n        uVar19 = uVar9;\n        uVar21 = local_70;\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x27;\n        }\n      }\n      uVar16 = uVar15 + 3;\n      bVar17 = 0x27;\n      uVar9 = uVar19;\n      local_70 = uVar21;\n      bVar24 = false;\n      bVar4 = false;\n      goto LAB_00410b08;\n    }\n    goto LAB_00410c1c;\n  case 0x3f:\nswitchD_00410e2e_caseD_3f:\n    if (param_5 == 2) {\n      if (!local_5c) {\n        bVar17 = 0x3f;\n        bVar24 = false;\n        bVar23 = false;\n        goto LAB_00410b08;\n      }\n      goto LAB_00410c1c;\n    }\n    if (param_5 != 5) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0x3f;\n      bVar23 = false;\n      goto LAB_004109f8;\n    }\n    if (((((param_6 & 4) != 0) && (uVar21 = uVar22 + 2, uVar21 < param_4)) &&\n        (param_3[uVar22 + 1] == '?')) &&\n       ((uVar19 = (ulong)(byte)param_3[uVar21], (byte)param_3[uVar21] < 0x3f &&\n        ((0x7000a38200000000U >> (uVar19 & 0x3f) & 1) != 0)))) {\n      if (!local_5c) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x3f;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x22;\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x22;\n        }\n        if (uVar15 + 3 < uVar9) {\n          param_1[uVar15 + 3] = 0x3f;\n        }\n        uVar16 = uVar15 + 4;\n        bVar26 = false;\n        uVar22 = uVar21;\n        bVar24 = false;\n        goto LAB_00410d89;\n      }\n      goto LAB_00410c2a;\n    }\n    bVar25 = false;\n    uVar19 = 0x3f;\n    bVar23 = false;\n    goto LAB_004109f8;\n  case 0x5c:\n    if (param_5 != 2) {\nswitchD_004109a8_caseD_5c:\n      uVar19 = 0x5c;\n      bVar17 = 0x5c;\n      bVar13 = 0x5c;\n      bVar25 = (bool)(bVar6 & local_5c & local_a0 != 0);\n      if (!bVar25) break;\n      uVar22 = uVar22 + 1;\n      bVar23 = false;\n      goto LAB_00410b24;\n    }\n    if (local_5c) goto LAB_00410c1c;\n    uVar22 = uVar22 + 1;\n    bVar23 = false;\n    bVar17 = 0x5c;\n    goto LAB_00410b24;\n  case 0x7b:\n  case 0x7d:\nswitchD_00410e2e_caseD_7b:\n    bVar24 = param_4 != 1;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar24 = param_3[1] != '\\0';\n    }\n    bVar25 = param_5 == 2;\n    if (!bVar24) goto LAB_004109dd;\n    goto LAB_00410beb;\n  }\nLAB_00410be0:\n  if (!bVar6) {\nLAB_00410beb:\n    bVar23 = false;\n    goto LAB_004109f8;\n  }\n  bVar23 = false;\n  bVar17 = bVar13;\n  goto joined_r0x00410c07;\nLAB_00411038:\n  if ((uVar15 == 0) && ((bool)(local_5c & param_5 == 2))) {\n    param_5 = 2;\nLAB_00410c1c:\n    if (bVar26) {\n      param_5 = 4;\n    }\nLAB_00410c2a:\n    uVar9 = FUN_00410810(param_1,uVar9,param_3,param_4,param_5,param_6 & 0xfffffffd,0,param_8,\n                         param_9);\n    return uVar9;\n  }\n  bVar26 = (bool)(param_5 == 2 & (local_5c ^ 1U));\n  bVar23 = (bool)(local_5c ^ 1U);\n  if ((!bVar26) || (bVar23 = bVar26, !bVar5)) {\nLAB_0041190d:\n    uVar22 = uVar15;\n    if (((local_78 != (char *)0x0) && (bVar23)) && (cVar14 = *local_78, cVar14 != '\\0')) {\n      do {\n        if (uVar22 < uVar9) {\n          param_1[uVar22] = cVar14;\n        }\n        uVar22 = uVar22 + 1;\n        cVar14 = local_78[uVar22 - uVar15];\n      } while (cVar14 != '\\0');\n    }\n    if (uVar22 < uVar9) {\n      param_1[uVar22] = 0;\n    }\n    return uVar22;\n  }\n  if (bVar2) {\n    uVar9 = FUN_00410810(param_1,local_70,param_3,param_4,5,param_6,param_7,param_8,param_9);\n    return uVar9;\n  }\n  local_5b = uVar9 == 0 && local_70 != 0;\n  param_2 = local_70;\n  bVar23 = bVar5;\n  if (uVar9 != 0 || local_70 == 0) goto LAB_0041190d;\nLAB_00411096:\n  *param_1 = 0x27;\n  param_5 = 2;\n  uVar15 = 1;\n  local_78 = \"\\'\";\n  local_a0 = 1;\n  local_5c = false;\n  uVar9 = param_2;\n  goto LAB_004108a8;\n  while (__s1[uVar21] != 0) {\nLAB_00411867:\n    uVar21 = uVar21 + 1;\n    if (param_4 <= uVar22 + uVar21) break;\n  }\nLAB_00411877:\n  bVar23 = false;\nLAB_0041173a:\n  if (1 < uVar21) {\nLAB_004112fe:\n    bVar26 = false;\n    uVar21 = uVar21 + uVar22;\n    uVar16 = uVar22;\n    do {\n      bVar17 = (byte)uVar19;\n      if (bVar25) {\n        bVar26 = param_5 == 2;\n        if (local_5c) goto LAB_00410c1c;\n        bVar26 = (bool)(bVar26 & (bVar4 ^ 1U));\n        if (bVar26) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar15 = uVar15 + 3;\n          bVar4 = bVar26;\n        }\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x5c;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = (char)(uVar19 >> 6) + '0';\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = ((byte)(uVar19 >> 3) & 7) + 0x30;\n        }\n        uVar22 = uVar16 + 1;\n        uVar15 = uVar15 + 3;\n        bVar17 = (bVar17 & 7) + 0x30;\n        bVar26 = bVar25;\n        if (uVar21 <= uVar22) goto LAB_00410a9d;\n      }\n      else {\n        bVar3 = (bool)((bVar26 ^ 1U) & bVar4);\n        if (bVar20) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x5c;\n          }\n          uVar15 = uVar15 + 1;\n        }\n        uVar22 = uVar16 + 1;\n        if (uVar21 <= uVar22) goto LAB_00410b24;\n        if (bVar3) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x27;\n          }\n          uVar15 = uVar15 + 2;\n          bVar20 = false;\n          bVar4 = false;\n        }\n        else {\n          bVar20 = false;\n        }\n      }\n      uVar16 = uVar16 + 1;\n      if (uVar15 < uVar9) {\n        param_1[uVar15] = bVar17;\n      }\n      uVar19 = (ulong)(byte)param_3[uVar16];\n      uVar15 = uVar15 + 1;\n    } while( true );\n  }\nLAB_00410e04:\n  if (bVar25) {\n    bVar23 = false;\n    bVar25 = bVar6;\n    goto LAB_004112fe;\n  }\nswitchD_00410e2e_caseD_25:\n  bVar25 = param_5 == 2;\nLAB_004109f8:\n  bVar17 = (byte)uVar19;\n  bVar24 = (bool)((bVar6 ^ 1U | bVar25) ^ 1 | local_5c);\n  bVar26 = bVar20;\n  if (bVar24) {\nLAB_00410a0f:\n    bVar24 = false;\n    bVar20 = bVar26;\nLAB_00410a11:\n    bVar17 = (byte)uVar19;\n    uVar16 = uVar15;\n    bVar4 = bVar3;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar19 >> 5) * 4) >> (bVar17 & 0x1f) & 1) == 0))\n    goto LAB_00410b08;\n    bVar25 = param_5 == 2;\n  }\n  else {\nLAB_00410b08:\n    bVar25 = param_5 == 2;\n    uVar15 = uVar16;\n    bVar3 = bVar4;\n    if (!bVar20) {\n      uVar22 = uVar22 + 1;\n      bVar3 = (bool)((bVar24 ^ 1U) & bVar4);\nLAB_00410b24:\n      if (bVar3) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x27;\n        }\n        uVar15 = uVar15 + 2;\n        bVar4 = false;\n      }\n      goto LAB_00410a9d;\n    }\n  }\njoined_r0x00410c07:\n  if (local_5c) {\nLAB_00410c18:\n    bVar26 = (bool)(bVar6 & bVar25);\n    goto LAB_00410c1c;\n  }\nLAB_00410a52:\n  bVar25 = (bool)((bVar3 ^ 1U) & bVar25);\n  if (bVar25) {\n    if (uVar15 < uVar9) {\n      param_1[uVar15] = 0x27;\n    }\n    if (uVar15 + 1 < uVar9) {\n      param_1[uVar15 + 1] = 0x24;\n    }\n    if (uVar15 + 2 < uVar9) {\n      param_1[uVar15 + 2] = 0x27;\n    }\n    uVar15 = uVar15 + 3;\n    bVar3 = bVar25;\n  }\nLAB_00410a8b:\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = 0x5c;\n  }\n  uVar15 = uVar15 + 1;\n  uVar22 = uVar22 + 1;\n  bVar4 = bVar3;\nLAB_00410a9d:\n  bVar3 = bVar4;\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = bVar17;\n  }\n  uVar15 = uVar15 + 1;\n  if (!bVar23) {\n    bVar2 = false;\n  }\n  goto LAB_004108b8;\n}\n\n",
            "funcName": "FUN_00410810"
        },
        {
            "funcStartAddr": "0x411a40",
            "funcEndAddr": "0x411bdb",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_00411a40(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_00624618;\n  if (DAT_00624630 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00412bd0();\n    }\n    if (PTR_DAT_00624618 == &DAT_00624620) {\n      puVar8 = (undefined4 *)FUN_004129e0(0);\n      uVar6 = PTR_DAT_00624628._4_4_;\n      uVar5 = PTR_DAT_00624628._0_4_;\n      uVar3 = _UNK_00624624;\n      PTR_DAT_00624618 = (undefined *)puVar8;\n      *puVar8 = _DAT_00624620;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_004129e0(PTR_DAT_00624618);\n      PTR_DAT_00624618 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_00624630 * 4,0,(long)((param_1 + 1) - DAT_00624630) << 4);\n    DAT_00624630 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_00410810(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_006257e0) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)FUN_00412980(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_00410810(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n",
            "funcName": "FUN_00411a40"
        },
        {
            "funcStartAddr": "0x411be0",
            "funcEndAddr": "0x411c14",
            "decompiledFuncCode": "\nvoid FUN_00411be0(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_006258e0;\n  }\n  FUN_00412b80(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00411be0"
        },
        {
            "funcStartAddr": "0x411c20",
            "funcEndAddr": "0x411c2f",
            "decompiledFuncCode": "\nundefined4 FUN_00411c20(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_006258e0;\n  }\n  return *param_1;\n}\n\n",
            "funcName": "FUN_00411c20"
        },
        {
            "funcStartAddr": "0x411c30",
            "funcEndAddr": "0x411c3f",
            "decompiledFuncCode": "\nvoid FUN_00411c30(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_006258e0;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_00411c30"
        },
        {
            "funcStartAddr": "0x411c40",
            "funcEndAddr": "0x411c73",
            "decompiledFuncCode": "\nuint FUN_00411c40(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_006258e0;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n",
            "funcName": "FUN_00411c40"
        },
        {
            "funcStartAddr": "0x411c80",
            "funcEndAddr": "0x411c93",
            "decompiledFuncCode": "\nundefined4 FUN_00411c80(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_006258e0;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00411c80"
        },
        {
            "funcStartAddr": "0x411ca0",
            "funcEndAddr": "0x411ccb",
            "decompiledFuncCode": "\nvoid FUN_00411ca0(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_006258e0;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00411ca0"
        },
        {
            "funcStartAddr": "0x411cd0",
            "funcEndAddr": "0x411d42",
            "decompiledFuncCode": "\nvoid FUN_00411cd0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_006258e0;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00410810(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00411cd0"
        },
        {
            "funcStartAddr": "0x411d50",
            "funcEndAddr": "0x411e31",
            "decompiledFuncCode": "\nundefined8 FUN_00411d50(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_006258e0;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00410810(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = FUN_00412980(lVar3 + 1);\n  FUN_00410810(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n",
            "funcName": "FUN_00411d50"
        },
        {
            "funcStartAddr": "0x411e40",
            "funcEndAddr": "0x411e4a",
            "decompiledFuncCode": "\nvoid FUN_00411e40(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00411d50(param_1,param_2,0,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00411e40"
        },
        {
            "funcStartAddr": "0x411e50",
            "funcEndAddr": "0x411ee5",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00411e50(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_00624618;\n  if (1 < DAT_00624630) {\n    ppvVar2 = (void **)(PTR_DAT_00624618 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_00624618 + (ulong)(DAT_00624630 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_006257e0) {\n    free(*(undefined **)(__ptr_00 + 8));\n    _DAT_00624620 = 0x100;\n    PTR_DAT_00624628 = &DAT_006257e0;\n  }\n  if (__ptr_00 != &DAT_00624620) {\n    free(__ptr_00);\n    PTR_DAT_00624618 = &DAT_00624620;\n  }\n  DAT_00624630 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00411e50"
        },
        {
            "funcStartAddr": "0x411ef0",
            "funcEndAddr": "0x411f01",
            "decompiledFuncCode": "\nvoid FUN_00411ef0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00411a40(param_1,param_2,0xffffffffffffffff,&DAT_006258e0);\n  return;\n}\n\n",
            "funcName": "FUN_00411ef0"
        },
        {
            "funcStartAddr": "0x411f10",
            "funcEndAddr": "0x411f1a",
            "decompiledFuncCode": "\nvoid FUN_00411f10(void)\n\n{\n  FUN_00411a40();\n  return;\n}\n\n",
            "funcName": "FUN_00411f10"
        },
        {
            "funcStartAddr": "0x411f20",
            "funcEndAddr": "0x411f36",
            "decompiledFuncCode": "\nvoid FUN_00411f20(undefined8 param_1)\n\n{\n  FUN_00411a40(0,param_1,0xffffffffffffffff,&DAT_006258e0);\n  return;\n}\n\n",
            "funcName": "FUN_00411f20"
        },
        {
            "funcStartAddr": "0x411f40",
            "funcEndAddr": "0x411f52",
            "decompiledFuncCode": "\nvoid FUN_00411f40(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00411a40(0,param_1,param_2,&DAT_006258e0);\n  return;\n}\n\n",
            "funcName": "FUN_00411f40"
        },
        {
            "funcStartAddr": "0x411f60",
            "funcEndAddr": "0x411fc8",
            "decompiledFuncCode": "\nvoid FUN_00411f60(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00411a40(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00411f60"
        },
        {
            "funcStartAddr": "0x411fd0",
            "funcEndAddr": "0x412034",
            "decompiledFuncCode": "\nvoid FUN_00411fd0(undefined8 param_1,int param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00411a40(param_1,param_3,param_4,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00411fd0"
        },
        {
            "funcStartAddr": "0x412040",
            "funcEndAddr": "0x41204c",
            "decompiledFuncCode": "\nvoid FUN_00412040(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00411f60(0,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00412040"
        },
        {
            "funcStartAddr": "0x412050",
            "funcEndAddr": "0x41205f",
            "decompiledFuncCode": "\nvoid FUN_00412050(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00411fd0(0,param_1,param_2,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00412050"
        },
        {
            "funcStartAddr": "0x412060",
            "funcEndAddr": "0x4120d0",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00412060(undefined8 param_1,undefined8 param_2,byte param_3)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  \n  local_18 = DAT_00625910;\n  local_48 = _DAT_006258e0;\n  uStack_40 = uRam00000000006258e8;\n  local_38 = _DAT_006258f0;\n  uStack_30 = uRam00000000006258f8;\n  puVar1 = (uint *)((long)&uStack_40 + (ulong)(param_3 >> 5) * 4);\n  local_28 = _DAT_00625900;\n  uStack_20 = uRam0000000000625908;\n  uVar2 = *puVar1;\n  *puVar1 = (~(uVar2 >> (param_3 & 0x1f)) & 1) << (param_3 & 0x1f) ^ uVar2;\n  FUN_00411a40(0,param_1,param_2,&local_48);\n  return;\n}\n\n",
            "funcName": "FUN_00412060"
        },
        {
            "funcStartAddr": "0x4120d0",
            "funcEndAddr": "0x4120dd",
            "decompiledFuncCode": "\nvoid FUN_004120d0(undefined8 param_1,char param_2)\n\n{\n  FUN_00412060(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n",
            "funcName": "FUN_004120d0"
        },
        {
            "funcStartAddr": "0x4120e0",
            "funcEndAddr": "0x4120f1",
            "decompiledFuncCode": "\nvoid FUN_004120e0(undefined8 param_1)\n\n{\n  FUN_00412060(param_1,0xffffffffffffffff,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_004120e0"
        },
        {
            "funcStartAddr": "0x412100",
            "funcEndAddr": "0x41210a",
            "decompiledFuncCode": "\nvoid FUN_00412100(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00412060(param_1,param_2,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00412100"
        },
        {
            "funcStartAddr": "0x412110",
            "funcEndAddr": "0x41217e",
            "decompiledFuncCode": "\nvoid FUN_00412110(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_40 = 0x400000000000000;\n    local_44 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00411a40(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00412110"
        },
        {
            "funcStartAddr": "0x412180",
            "funcEndAddr": "0x4121ec",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00412180(undefined8 param_1,long param_2,long param_3,undefined8 param_4,undefined8 param_5\n                 )\n\n{\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long lStack_20;\n  long local_18;\n  \n  uStack_40 = uRam00000000006258e8;\n  local_38 = _DAT_006258f0;\n  uStack_30 = uRam00000000006258f8;\n  local_28 = _DAT_00625900;\n  lStack_20 = uRam0000000000625908;\n  local_18 = DAT_00625910;\n  local_48 = CONCAT44((int)((ulong)_DAT_006258e0 >> 0x20),10);\n  if ((param_2 != 0) && (param_3 != 0)) {\n    lStack_20 = param_2;\n    local_18 = param_3;\n    FUN_00411a40(param_1,param_4,param_5,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00412180"
        },
        {
            "funcStartAddr": "0x4121f0",
            "funcEndAddr": "0x4121f9",
            "decompiledFuncCode": "\nvoid FUN_004121f0(void)\n\n{\n  FUN_00412180();\n  return;\n}\n\n",
            "funcName": "FUN_004121f0"
        },
        {
            "funcStartAddr": "0x412200",
            "funcEndAddr": "0x412217",
            "decompiledFuncCode": "\nvoid FUN_00412200(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00412180(0,param_1,param_2,param_3,0xffffffffffffffff);\n  return;\n}\n\n",
            "funcName": "FUN_00412200"
        },
        {
            "funcStartAddr": "0x412220",
            "funcEndAddr": "0x412233",
            "decompiledFuncCode": "\nvoid FUN_00412220(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00412180(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n",
            "funcName": "FUN_00412220"
        },
        {
            "funcStartAddr": "0x412240",
            "funcEndAddr": "0x41224a",
            "decompiledFuncCode": "\nvoid FUN_00412240(void)\n\n{\n  FUN_00411a40();\n  return;\n}\n\n",
            "funcName": "FUN_00412240"
        },
        {
            "funcStartAddr": "0x412250",
            "funcEndAddr": "0x412262",
            "decompiledFuncCode": "\nvoid FUN_00412250(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00411a40(0,param_1,param_2,&DAT_006245e0);\n  return;\n}\n\n",
            "funcName": "FUN_00412250"
        },
        {
            "funcStartAddr": "0x412270",
            "funcEndAddr": "0x412281",
            "decompiledFuncCode": "\nvoid FUN_00412270(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00411a40(param_1,param_2,0xffffffffffffffff,&DAT_006245e0);\n  return;\n}\n\n",
            "funcName": "FUN_00412270"
        },
        {
            "funcStartAddr": "0x412290",
            "funcEndAddr": "0x4122a6",
            "decompiledFuncCode": "\nvoid FUN_00412290(undefined8 param_1)\n\n{\n  FUN_00411a40(0,param_1,0xffffffffffffffff,&DAT_006245e0);\n  return;\n}\n\n",
            "funcName": "FUN_00412290"
        },
        {
            "funcStartAddr": "0x4122b0",
            "funcEndAddr": "0x4123cf",
            "decompiledFuncCode": "\nbool FUN_004122b0(undefined8 param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  void *__s1;\n  void *__s2;\n  size_t __n;\n  size_t sVar2;\n  char *__filename;\n  char *__filename_00;\n  int *piVar3;\n  bool bVar4;\n  stat local_158;\n  stat local_c8;\n  \n  bVar4 = false;\n  __s1 = (void *)FUN_0040b870();\n  __s2 = (void *)FUN_0040b870(param_2);\n  __n = FUN_0040b8d0(__s1);\n  sVar2 = FUN_0040b8d0(__s2);\n  if ((__n == sVar2) && (iVar1 = memcmp(__s1,__s2,__n), iVar1 == 0)) {\n    __filename = (char *)FUN_00417940(param_1);\n    __filename_00 = (char *)FUN_00417940(param_2);\n    iVar1 = __xstat(1,__filename,&local_158);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      error(1,*piVar3,&DAT_0041d784,__filename);\n    }\n    iVar1 = __xstat(1,__filename_00,&local_c8);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      error(1,*piVar3,&DAT_0041d784,__filename_00);\n    }\n    bVar4 = local_158.st_ino == local_c8.st_ino && local_158.st_dev == local_c8.st_dev;\n    free(__filename);\n    free(__filename_00);\n  }\n  return bVar4;\n}\n\n",
            "funcName": "FUN_004122b0"
        },
        {
            "funcStartAddr": "0x4123e0",
            "funcEndAddr": "0x412784",
            "decompiledFuncCode": "\nundefined8\nFUN_004123e0(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0041ea6b,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0041265c;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_0041265c:\n    __fprintf_chk(param_1,1,uVar7,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[1];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar1 = param_5[2];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_004126f9;\n  case 7:\n    uVar1 = param_5[2];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    local_58 = param_5[1];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_004126f9:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_58,uVar1,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_004124da;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_004124da:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_50,local_58,uVar6,uVar5,uVar4,uVar1,local_48);\n  return uVar1;\n}\n\n",
            "funcName": "FUN_004123e0"
        },
        {
            "funcStartAddr": "0x4127c0",
            "funcEndAddr": "0x4127e0",
            "decompiledFuncCode": "\nvoid FUN_004127c0(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_004123e0();\n  return;\n}\n\n",
            "funcName": "FUN_004127c0"
        },
        {
            "funcStartAddr": "0x4127e0",
            "funcEndAddr": "0x412839",
            "decompiledFuncCode": "\nvoid FUN_004127e0(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long local_58 [11];\n  \n  lVar4 = 0;\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_58[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_58[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_004123e0();\n  return;\n}\n\n",
            "funcName": "FUN_004127e0"
        },
        {
            "funcStartAddr": "0x412840",
            "funcEndAddr": "0x4128f8",
            "decompiledFuncCode": "\nvoid FUN_00412840(void)\n\n{\n  long lVar1;\n  undefined8 in_R8;\n  ulong uVar2;\n  undefined8 in_R9;\n  long lVar3;\n  long *plVar4;\n  long local_88 [10];\n  long local_38 [4];\n  long local_18 [3];\n  \n  local_18[0] = in_R8;\n  plVar4 = (long *)&stack0x00000008;\n  uVar2 = 0x20;\n  local_18[1] = in_R9;\n  lVar3 = 0;\n  do {\n    if ((uint)uVar2 < 0x30) {\n      lVar1 = *(long *)((long)local_38 + uVar2);\n      local_88[lVar3] = lVar1;\n      uVar2 = (ulong)((uint)uVar2 + 8);\n    }\n    else {\n      lVar1 = *plVar4;\n      local_88[lVar3] = lVar1;\n      plVar4 = plVar4 + 1;\n    }\n  } while ((lVar1 != 0) && (lVar3 = lVar3 + 1, lVar3 != 10));\n  FUN_004123e0();\n  return;\n}\n\n",
            "funcName": "FUN_00412840"
        },
        {
            "funcStartAddr": "0x412900",
            "funcEndAddr": "0x412974",
            "decompiledFuncCode": "\nvoid FUN_00412900(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n",
            "funcName": "FUN_00412900"
        },
        {
            "funcStartAddr": "0x412980",
            "funcEndAddr": "0x41299a",
            "decompiledFuncCode": "\nvoid FUN_00412980(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00412bd0();\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00412980"
        },
        {
            "funcStartAddr": "0x4129a0",
            "funcEndAddr": "0x4129c1",
            "decompiledFuncCode": "\nvoid FUN_004129a0(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_00412980();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00412bd0();\n}\n\n",
            "funcName": "FUN_004129a0"
        },
        {
            "funcStartAddr": "0x4129d0",
            "funcEndAddr": "0x4129d2",
            "decompiledFuncCode": "\nvoid thunk_FUN_00412980(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00412bd0();\n  }\n  return;\n}\n\n",
            "funcName": "thunk_4129d0"
        },
        {
            "funcStartAddr": "0x4129e0",
            "funcEndAddr": "0x412a10",
            "decompiledFuncCode": "\nvoid * FUN_004129e0(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00412bd0();\n  }\n  return pvVar1;\n}\n\n",
            "funcName": "FUN_004129e0"
        },
        {
            "funcStartAddr": "0x412a20",
            "funcEndAddr": "0x412a41",
            "decompiledFuncCode": "\nvoid FUN_00412a20(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_004129e0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00412bd0();\n}\n\n",
            "funcName": "FUN_00412a20"
        },
        {
            "funcStartAddr": "0x412a50",
            "funcEndAddr": "0x412ac8",
            "decompiledFuncCode": "\nvoid FUN_00412a50(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar2 = *param_2;\n  if (param_1 == 0) {\n    if (uVar2 == 0) {\n      uVar2 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar3 = (ulong)(SUB168(ZEXT816(uVar2) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar2) * ZEXT816(param_3),0) < 0) || (uVar3 != 0)) goto LAB_00412aab;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar3 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar2) {\nLAB_00412aab:\n                    /* WARNING: Subroutine does not return */\n      FUN_00412bd0(param_1,param_2,uVar3);\n    }\n    uVar2 = (uVar2 >> 1) + 1 + uVar2;\n  }\n  *param_2 = uVar2;\n  FUN_004129e0(param_1,uVar2 * param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00412a50"
        },
        {
            "funcStartAddr": "0x412ae0",
            "funcEndAddr": "0x412b2a",
            "decompiledFuncCode": "\nvoid FUN_00412ae0(long param_1,ulong *param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = *param_2;\n  if (param_1 == 0) {\n    if (uVar1 == 0) {\n      *param_2 = 0x80;\n      FUN_004129e0(0,0x80);\n      return;\n    }\n    if ((long)uVar1 < 0) goto LAB_00412b2a;\n  }\n  else {\n    if (0x5555555555555553 < uVar1) {\nLAB_00412b2a:\n                    /* WARNING: Subroutine does not return */\n      FUN_00412bd0();\n    }\n    uVar1 = (uVar1 >> 1) + 1 + uVar1;\n  }\n  *param_2 = uVar1;\n  FUN_004129e0(param_1,uVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00412ae0"
        },
        {
            "funcStartAddr": "0x412b30",
            "funcEndAddr": "0x412b47",
            "decompiledFuncCode": "\nvoid FUN_00412b30(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00412980();\n  memset(__s,0,param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00412b30"
        },
        {
            "funcStartAddr": "0x412b50",
            "funcEndAddr": "0x412b7e",
            "decompiledFuncCode": "\nvoid FUN_00412b50(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00412bd0();\n}\n\n",
            "funcName": "FUN_00412b50"
        },
        {
            "funcStartAddr": "0x412b80",
            "funcEndAddr": "0x412ba8",
            "decompiledFuncCode": "\nvoid FUN_00412b80(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00412980(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00412b80"
        },
        {
            "funcStartAddr": "0x412bb0",
            "funcEndAddr": "0x412bc3",
            "decompiledFuncCode": "\nvoid FUN_00412bb0(char *param_1)\n\n{\n  void *__dest;\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  __dest = (void *)FUN_00412980(sVar1 + 1);\n  memcpy(__dest,param_1,sVar1 + 1);\n  return;\n}\n\n",
            "funcName": "FUN_00412bb0"
        },
        {
            "funcStartAddr": "0x412bd0",
            "funcEndAddr": "0x412c01",
            "decompiledFuncCode": "\nvoid FUN_00412bd0(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_006245c0,0,&DAT_0041d784,uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00412bd0"
        },
        {
            "funcStartAddr": "0x412c10",
            "funcEndAddr": "0x412cd8",
            "decompiledFuncCode": "\nulong FUN_00412c10(undefined8 param_1,undefined4 param_2,ulong param_3,ulong param_4,\n                  undefined8 param_5,undefined8 param_6,int param_7)\n\n{\n  ulong uVar1;\n  int iVar2;\n  int *piVar3;\n  undefined8 uVar4;\n  ulong local_40 [2];\n  \n  iVar2 = FUN_004132b0(param_1,0,param_2,local_40);\n  uVar1 = local_40[0];\n  if (iVar2 == 0) {\n    if ((param_3 <= local_40[0]) && (local_40[0] <= param_4)) {\n      return local_40[0];\n    }\n    piVar3 = __errno_location();\n    *piVar3 = (-(uint)(uVar1 < 0x40000000) & 0xffffffd7) + 0x4b;\n  }\n  else {\n    piVar3 = __errno_location();\n    if (iVar2 == 1) {\n      *piVar3 = 0x4b;\n    }\n    else if (iVar2 == 3) {\n      *piVar3 = 0;\n    }\n  }\n  uVar4 = FUN_00412290(param_1);\n  iVar2 = *piVar3;\n  if (iVar2 == 0x16) {\n    iVar2 = 0;\n  }\n  if (param_7 == 0) {\n    param_7 = 1;\n  }\n  error(param_7,iVar2,\"%s: %s\",param_6,uVar4);\n  return local_40[0];\n}\n\n",
            "funcName": "FUN_00412c10"
        },
        {
            "funcStartAddr": "0x412ce0",
            "funcEndAddr": "0x412d01",
            "decompiledFuncCode": "\nvoid FUN_00412ce0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5,undefined8 param_6)\n\n{\n  FUN_00412c10(param_1,10,param_2,param_3,param_4,param_5,param_6);\n  return;\n}\n\n",
            "funcName": "FUN_00412ce0"
        },
        {
            "funcStartAddr": "0x412d10",
            "funcEndAddr": "0x412d36",
            "decompiledFuncCode": "\nlong FUN_00412d10(void)\n\n{\n  long lVar1;\n  int *piVar2;\n  \n  lVar1 = FUN_00415be0(0,0);\n  if (lVar1 == 0) {\n    piVar2 = __errno_location();\n    if (*piVar2 == 0xc) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00412bd0();\n    }\n  }\n  return lVar1;\n}\n\n",
            "funcName": "FUN_00412d10"
        },
        {
            "funcStartAddr": "0x412d40",
            "funcEndAddr": "0x412de7",
            "decompiledFuncCode": "\nchar * FUN_00412d40(void)\n\n{\n  uint uVar1;\n  long lVar2;\n  int iVar3;\n  uint *puVar4;\n  char *__name;\n  long local_30 [2];\n  \n  __name = (char *)0x0;\n  local_30[0] = 0x22;\n  puVar4 = (uint *)__errno_location();\n  do {\n    while( true ) {\n      __name = (char *)FUN_00412ae0(__name,local_30);\n      lVar2 = local_30[0] + -2;\n      __name[lVar2] = '\\0';\n      *puVar4 = 0;\n      iVar3 = gethostname(__name,local_30[0] - 1);\n      if (iVar3 != 0) break;\n      if (__name[lVar2] == '\\0') {\n        return __name;\n      }\n    }\n    uVar1 = *puVar4;\n  } while ((uVar1 < 0x25) && ((0x1000401001U >> ((ulong)uVar1 & 0x3f) & 1) != 0));\n  free(__name);\n  *puVar4 = uVar1;\n  return (char *)0x0;\n}\n\n",
            "funcName": "FUN_00412d40"
        },
        {
            "funcStartAddr": "0x412df0",
            "funcEndAddr": "0x41319c",
            "decompiledFuncCode": "\nulong FUN_00412df0(byte *param_1,byte **param_2,uint param_3,ulong *param_4,char *param_5)\n\n{\n  byte bVar1;\n  undefined auVar2 [16];\n  int *piVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  ulong uVar6;\n  char *pcVar7;\n  byte bVar8;\n  uint uVar9;\n  int iVar10;\n  ulong uVar11;\n  byte bVar12;\n  uint uVar13;\n  ulong uVar14;\n  int iVar15;\n  int iVar16;\n  byte *local_40 [2];\n  \n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoul\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = local_40;\n  }\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  bVar12 = *param_1;\n  ppuVar4 = __ctype_b_loc();\n  pbVar5 = param_1;\n  while ((*(byte *)((long)*ppuVar4 + (ulong)bVar12 * 2 + 1) & 0x20) != 0) {\n    pbVar5 = pbVar5 + 1;\n    bVar12 = *pbVar5;\n  }\n  if (bVar12 == 0x2d) {\n    return 4;\n  }\n  uVar6 = strtoul((char *)param_1,(char **)param_2,param_3);\n  pbVar5 = *param_2;\n  if (pbVar5 == param_1) {\n    if ((param_5 == (char *)0x0) || (bVar12 = *param_1, bVar12 == 0)) {\n      return 4;\n    }\n    uVar14 = 0;\n    uVar6 = 1;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) {\n      return 4;\n    }\n  }\n  else {\n    if (*piVar3 == 0) {\n      uVar14 = 0;\n    }\n    else {\n      uVar14 = 1;\n      if (*piVar3 != 0x22) {\n        return 4;\n      }\n    }\n    uVar13 = (uint)uVar14;\n    if ((param_5 == (char *)0x0) || (bVar12 = *pbVar5, bVar12 == 0)) goto LAB_00412e90;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) goto switchD_00412f6c_caseD_1;\n  }\n  uVar13 = (uint)uVar14;\n  uVar9 = bVar12 - 0x45;\n  bVar8 = (byte)uVar9;\n  if (((bVar8 < 0x30) && ((0x814400308945U >> ((ulong)uVar9 & 0x3f) & 1) != 0)) &&\n     (pcVar7 = strchr(param_5,0x30), pcVar7 != (char *)0x0)) {\n    bVar1 = pbVar5[1];\n    if (bVar1 != 0x44) {\n      if (bVar1 == 0x69) {\n        uVar11 = 0x400;\n        iVar15 = (pbVar5[2] == 0x42) + 1 + (uint)(pbVar5[2] == 0x42);\n        goto LAB_00412f5a;\n      }\n      if (bVar1 != 0x42) {\n                    /* WARNING: Could not recover jumptable at 0x00412f49. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        uVar6 = (*(code *)(&PTR_LAB_0041ee38)[bVar8])();\n        return uVar6;\n      }\n    }\n    iVar15 = 2;\n    uVar11 = 1000;\n  }\n  else {\n    iVar15 = 1;\n    uVar11 = 0x400;\n  }\nLAB_00412f5a:\n  iVar10 = (int)uVar11;\n  switch(bVar12 - 0x42 & 0xff) {\n  case 0:\n    if (uVar6 >> 0x36 == 0) {\n      uVar6 = uVar6 << 10;\n      break;\n    }\n    goto LAB_00412fc7;\n  default:\nswitchD_00412f6c_caseD_1:\n    *param_4 = uVar6;\n    return (ulong)(uVar13 | 2);\n  case 3:\n    iVar16 = 6;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00413054;\n  case 5:\n  case 0x25:\n    uVar11 = (ulong)iVar10;\n    if (((SUB168(ZEXT816(uVar6) * ZEXT816(uVar11) >> 0x40,0) != 0) ||\n        (auVar2 = (ZEXT816(uVar6) * ZEXT816(uVar11) & (undefined  [16])0xffffffffffffffff) *\n                  ZEXT816(uVar11), SUB168(auVar2 >> 0x40,0) != 0)) ||\n       (auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816(uVar11),\n       uVar6 = SUB168(auVar2,0), SUB168(auVar2 >> 0x40,0) != 0)) {\n      uVar6 = 0xffffffffffffffff;\n      uVar14 = 1;\n    }\n    break;\n  case 9:\n  case 0x29:\n    auVar2 = ZEXT816(uVar6) * ZEXT816(uVar11);\n    goto joined_r0x00412f8c;\n  case 0xb:\n  case 0x2b:\n    auVar2 = ZEXT816(uVar6) * ZEXT816((ulong)(long)iVar10);\n    if (SUB168(auVar2 >> 0x40,0) != 0) goto LAB_00412fc7;\n    auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816((ulong)(long)iVar10);\njoined_r0x00412f8c:\n    uVar6 = SUB168(auVar2,0);\n    if (SUB168(auVar2 >> 0x40,0) != 0) {\nLAB_00412fc7:\n      uVar14 = 1;\n      uVar6 = 0xffffffffffffffff;\n    }\n    break;\n  case 0xe:\n    iVar16 = 5;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00413054;\n  case 0x12:\n  case 0x32:\n    iVar16 = 4;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00413054;\n  case 0x17:\n    iVar16 = 8;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00413054;\n  case 0x18:\n    iVar16 = 7;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\nLAB_00413054:\n    uVar14 = (ulong)(uVar13 | uVar9);\n    break;\n  case 0x20:\n    if (uVar6 >> 0x37 != 0) goto LAB_00412fc7;\n    uVar6 = uVar6 << 9;\n    break;\n  case 0x21:\n    break;\n  case 0x35:\n    if ((long)uVar6 < 0) goto LAB_00412fc7;\n    uVar6 = uVar6 * 2;\n  }\n  *param_2 = pbVar5 + iVar15;\n  if (pbVar5[iVar15] != 0) {\n    uVar14 = (ulong)((uint)uVar14 | 2);\n  }\nLAB_00412e90:\n  *param_4 = uVar6;\n  return uVar14;\n}\n\n",
            "funcName": "FUN_00412df0"
        },
        {
            "funcStartAddr": "0x413220",
            "funcEndAddr": "0x4132a1",
            "decompiledFuncCode": "\nvoid FUN_00413220(int param_1,int param_2,undefined param_3,long param_4,undefined8 param_5)\n\n{\n  undefined4 uVar1;\n  undefined8 uVar2;\n  undefined1 *puVar3;\n  undefined *puVar4;\n  undefined local_2a;\n  undefined local_29;\n  \n  uVar1 = DAT_006245c0;\n  if (param_1 - 1U < 4) {\n    if (param_2 < 0) {\n      puVar4 = &local_2a;\n      puVar3 = &DAT_0041f171 + -(long)param_2;\n      local_29 = 0;\n      local_2a = param_3;\n    }\n    else {\n      puVar3 = &DAT_0041f171;\n      puVar4 = *(undefined **)(param_4 + (long)param_2 * 0x20);\n    }\n    uVar2 = dcgettext(0,(&PTR_s__s_s_argument___s__too_large_0041f1e0)[param_1 - 1U],5);\n    error(uVar1,0,uVar2,puVar3,puVar4,param_5);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00413220"
        },
        {
            "funcStartAddr": "0x4132b0",
            "funcEndAddr": "0x41365e",
            "decompiledFuncCode": "\nulong FUN_004132b0(byte *param_1,byte **param_2,uint param_3,ulong *param_4,char *param_5)\n\n{\n  byte bVar1;\n  undefined auVar2 [16];\n  int *piVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  ulong uVar6;\n  char *pcVar7;\n  byte bVar8;\n  uint uVar9;\n  int iVar10;\n  ulong uVar11;\n  byte bVar12;\n  uint uVar13;\n  ulong uVar14;\n  int iVar15;\n  int iVar16;\n  byte *local_40 [2];\n  \n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoumax\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = local_40;\n  }\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  bVar12 = *param_1;\n  ppuVar4 = __ctype_b_loc();\n  pbVar5 = param_1;\n  while ((*(byte *)((long)*ppuVar4 + (ulong)bVar12 * 2 + 1) & 0x20) != 0) {\n    pbVar5 = pbVar5 + 1;\n    bVar12 = *pbVar5;\n  }\n  if (bVar12 == 0x2d) {\n    return 4;\n  }\n  uVar6 = __strtoul_internal(param_1,param_2,param_3,0);\n  pbVar5 = *param_2;\n  if (pbVar5 == param_1) {\n    if ((param_5 == (char *)0x0) || (bVar12 = *param_1, bVar12 == 0)) {\n      return 4;\n    }\n    uVar14 = 0;\n    uVar6 = 1;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) {\n      return 4;\n    }\n  }\n  else {\n    if (*piVar3 == 0) {\n      uVar14 = 0;\n    }\n    else {\n      uVar14 = 1;\n      if (*piVar3 != 0x22) {\n        return 4;\n      }\n    }\n    uVar13 = (uint)uVar14;\n    if ((param_5 == (char *)0x0) || (bVar12 = *pbVar5, bVar12 == 0)) goto LAB_00413352;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) goto switchD_0041343c_caseD_1;\n  }\n  uVar13 = (uint)uVar14;\n  uVar9 = bVar12 - 0x45;\n  bVar8 = (byte)uVar9;\n  if (((bVar8 < 0x30) && ((0x814400308945U >> ((ulong)uVar9 & 0x3f) & 1) != 0)) &&\n     (pcVar7 = strchr(param_5,0x30), pcVar7 != (char *)0x0)) {\n    bVar1 = pbVar5[1];\n    if (bVar1 != 0x44) {\n      if (bVar1 == 0x69) {\n        uVar11 = 0x400;\n        iVar15 = (pbVar5[2] == 0x42) + 1 + (uint)(pbVar5[2] == 0x42);\n        goto LAB_0041342a;\n      }\n      if (bVar1 != 0x42) {\n                    /* WARNING: Could not recover jumptable at 0x00413411. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        uVar6 = (*(code *)(&PTR_LAB_0041f200)[bVar8])();\n        return uVar6;\n      }\n    }\n    iVar15 = 2;\n    uVar11 = 1000;\n  }\n  else {\n    iVar15 = 1;\n    uVar11 = 0x400;\n  }\nLAB_0041342a:\n  iVar10 = (int)uVar11;\n  switch(bVar12 - 0x42 & 0xff) {\n  case 0:\n    if (uVar6 >> 0x36 == 0) {\n      uVar6 = uVar6 << 10;\n      break;\n    }\n    goto LAB_00413497;\n  default:\nswitchD_0041343c_caseD_1:\n    *param_4 = uVar6;\n    return (ulong)(uVar13 | 2);\n  case 3:\n    iVar16 = 6;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00413524;\n  case 5:\n  case 0x25:\n    uVar11 = (ulong)iVar10;\n    if (((SUB168(ZEXT816(uVar6) * ZEXT816(uVar11) >> 0x40,0) != 0) ||\n        (auVar2 = (ZEXT816(uVar6) * ZEXT816(uVar11) & (undefined  [16])0xffffffffffffffff) *\n                  ZEXT816(uVar11), SUB168(auVar2 >> 0x40,0) != 0)) ||\n       (auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816(uVar11),\n       uVar6 = SUB168(auVar2,0), SUB168(auVar2 >> 0x40,0) != 0)) {\n      uVar6 = 0xffffffffffffffff;\n      uVar14 = 1;\n    }\n    break;\n  case 9:\n  case 0x29:\n    auVar2 = ZEXT816(uVar6) * ZEXT816(uVar11);\n    goto joined_r0x0041345c;\n  case 0xb:\n  case 0x2b:\n    auVar2 = ZEXT816(uVar6) * ZEXT816((ulong)(long)iVar10);\n    if (SUB168(auVar2 >> 0x40,0) != 0) goto LAB_00413497;\n    auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816((ulong)(long)iVar10);\njoined_r0x0041345c:\n    uVar6 = SUB168(auVar2,0);\n    if (SUB168(auVar2 >> 0x40,0) != 0) {\nLAB_00413497:\n      uVar14 = 1;\n      uVar6 = 0xffffffffffffffff;\n    }\n    break;\n  case 0xe:\n    iVar16 = 5;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00413524;\n  case 0x12:\n  case 0x32:\n    iVar16 = 4;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00413524;\n  case 0x17:\n    iVar16 = 8;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00413524;\n  case 0x18:\n    iVar16 = 7;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\nLAB_00413524:\n    uVar14 = (ulong)(uVar13 | uVar9);\n    break;\n  case 0x20:\n    if (uVar6 >> 0x37 != 0) goto LAB_00413497;\n    uVar6 = uVar6 << 9;\n    break;\n  case 0x21:\n    break;\n  case 0x35:\n    if ((long)uVar6 < 0) goto LAB_00413497;\n    uVar6 = uVar6 * 2;\n  }\n  *param_2 = pbVar5 + iVar15;\n  if (pbVar5[iVar15] != 0) {\n    uVar14 = (ulong)((uint)uVar14 | 2);\n  }\nLAB_00413352:\n  *param_4 = uVar6;\n  return uVar14;\n}\n\n",
            "funcName": "FUN_004132b0"
        },
        {
            "funcStartAddr": "0x4136f0",
            "funcEndAddr": "0x4137c8",
            "decompiledFuncCode": "\nint * FUN_004136f0(int *param_1)\n\n{\n  int *piVar1;\n  char *pcVar2;\n  int iVar3;\n  \n  piVar1 = param_1;\nLAB_00413700:\n  do {\n    iVar3 = piVar1[1];\n    while( true ) {\n      if (iVar3 == 0) {\n        return param_1;\n      }\n      if (iVar3 == 0x5b) break;\n      if (iVar3 - 0x21U < 0x20) {\n        if (((0xc0000601UL >> ((ulong)(iVar3 - 0x21U) & 0x3f) & 1) != 0) && (piVar1[2] == 0x28)) {\n          piVar1 = (int *)FUN_004136f0(piVar1 + 2);\n          goto LAB_00413700;\n        }\n        if (iVar3 == 0x29) {\n          return piVar1 + 2;\n        }\n      }\n      iVar3 = piVar1[2];\n      piVar1 = piVar1 + 1;\n    }\n    if (DAT_00625918 == 0) {\n      pcVar2 = getenv(\"POSIXLY_CORRECT\");\n      DAT_00625918 = -(uint)(pcVar2 == (char *)0x0) | 1;\n    }\n    iVar3 = piVar1[2];\n    if ((iVar3 == 0x21) || (((int)DAT_00625918 < 0 && (iVar3 == 0x5e)))) {\n      iVar3 = piVar1[3];\n      piVar1 = piVar1 + 3;\n    }\n    else {\n      piVar1 = piVar1 + 2;\n    }\n    if (iVar3 == 0x5d) {\n      iVar3 = piVar1[1];\n      piVar1 = piVar1 + 1;\n    }\n    while (iVar3 != 0x5d) {\n      if (iVar3 == 0) {\n        return param_1;\n      }\n      iVar3 = piVar1[1];\n      piVar1 = piVar1 + 1;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_004136f0"
        },
        {
            "funcStartAddr": "0x4137f0",
            "funcEndAddr": "0x4138ce",
            "decompiledFuncCode": "\nchar * FUN_004137f0(char *param_1)\n\n{\n  byte bVar1;\n  char *pcVar2;\n  char *pcVar3;\n  char cVar4;\n  \n  pcVar2 = param_1;\nLAB_00413800:\n  do {\n    bVar1 = pcVar2[1];\n    while( true ) {\n      if (bVar1 == 0) {\n        return param_1;\n      }\n      if (bVar1 == 0x5b) break;\n      if ((byte)(bVar1 - 0x21) < 0x20) {\n        if (((0xc0000601UL >> ((ulong)(bVar1 - 0x21) & 0x3f) & 1) != 0) && (pcVar2[2] == '(')) {\n          pcVar2 = (char *)FUN_004137f0(pcVar2 + 2);\n          goto LAB_00413800;\n        }\n        if (bVar1 == 0x29) {\n          return pcVar2 + 2;\n        }\n      }\n      bVar1 = pcVar2[2];\n      pcVar2 = pcVar2 + 1;\n    }\n    if (DAT_00625918 == 0) {\n      pcVar3 = getenv(\"POSIXLY_CORRECT\");\n      DAT_00625918 = -(uint)(pcVar3 == (char *)0x0) | 1;\n    }\n    cVar4 = pcVar2[2];\n    if ((cVar4 == '!') || (((int)DAT_00625918 < 0 && (cVar4 == '^')))) {\n      cVar4 = pcVar2[3];\n      pcVar2 = pcVar2 + 3;\n    }\n    else {\n      pcVar2 = pcVar2 + 2;\n    }\n    if (cVar4 == ']') {\n      cVar4 = pcVar2[1];\n      pcVar2 = pcVar2 + 1;\n    }\n    while (cVar4 != ']') {\n      if (cVar4 == '\\0') {\n        return param_1;\n      }\n      cVar4 = pcVar2[1];\n      pcVar2 = pcVar2 + 1;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_004137f0"
        },
        {
            "funcStartAddr": "0x4138f0",
            "funcEndAddr": "0x413e48",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nundefined8\nFUN_004138f0(uint param_1,wchar_t *param_2,ulong param_3,ulong param_4,byte param_5,uint param_6)\n\n{\n  long lVar1;\n  wchar_t wVar2;\n  int iVar3;\n  wchar_t *pwVar4;\n  char *pcVar5;\n  ulong uVar6;\n  long **pplVar7;\n  wchar_t *pwVar8;\n  byte bVar9;\n  ulong uVar10;\n  size_t sVar11;\n  uint uVar12;\n  long ***ppplVar13;\n  undefined *puVar14;\n  long lVar15;\n  long ***ppplVar16;\n  long **pplVar17;\n  wchar_t *__src;\n  ulong uVar18;\n  ulong uVar19;\n  bool bVar20;\n  undefined auStack_88 [8];\n  wchar_t *local_80;\n  wchar_t *local_78;\n  ulong local_70;\n  byte local_65;\n  uint local_64;\n  ulong local_60;\n  wchar_t *local_58;\n  long **local_50;\n  long **local_40 [2];\n  \n  puVar14 = auStack_88;\n  local_58 = (wchar_t *)((ulong)local_58 & 0xffffffff00000000 | (ulong)param_1);\n  local_40[0] = (long **)0x0;\n  local_70 = param_3;\n  local_65 = param_5;\n  local_64 = param_6;\n  local_60 = param_4;\n  local_50 = (long **)wcslen(param_2);\n  wVar2 = param_2[1];\n  if (wVar2 != L'\\0') {\n    pwVar8 = param_2 + 1;\n    ppplVar13 = local_40;\n    lVar15 = 0;\n    local_78 = param_2;\n    __src = pwVar8;\n    do {\n      pwVar4 = local_78;\n      if (wVar2 == L'[') {\n        if (DAT_00625918 == 0) {\n          local_80 = pwVar8;\n          *(undefined8 *)(puVar14 + -8) = 0x413afe;\n          pcVar5 = getenv(\"POSIXLY_CORRECT\");\n          DAT_00625918 = -(uint)(pcVar5 == (char *)0x0) | 1;\n          pwVar8 = local_80;\n        }\n        wVar2 = __src[1];\n        if ((wVar2 == L'!') || (((int)DAT_00625918 < 0 && (wVar2 == L'^')))) {\n          pwVar4 = __src + 2;\n          wVar2 = __src[2];\n        }\n        else {\n          pwVar4 = __src + 1;\n        }\n        if (wVar2 == L']') {\n          wVar2 = pwVar4[1];\n          pwVar4 = pwVar4 + 1;\n        }\n        while (__src = pwVar4 + 1, wVar2 != L']') {\n          if (wVar2 == L'\\0') {\n            return 0xffffffff;\n          }\n          pwVar4 = __src;\n          wVar2 = *__src;\n        }\n        wVar2 = pwVar4[1];\n      }\n      else {\n        while( true ) {\n          if (0x1f < (uint)(wVar2 + L'\\xffffffdf')) break;\n          if (((0xc0000601UL >> ((ulong)(uint)(wVar2 + L'\\xffffffdf') & 0x3f) & 1) == 0) ||\n             (__src[1] != L'(')) {\n            if (wVar2 != L')') goto LAB_00413966;\n            if (lVar15 != 0) {\n              wVar2 = __src[1];\n              lVar15 = lVar15 + -1;\n              __src = __src + 1;\n              goto joined_r0x004139ab;\n            }\n            if (1 < (int)local_58 - 0x3fU) {\n              local_50 = (long **)(((long)__src - (long)pwVar8 >> 2) + 1);\n            }\n            uVar6 = (long)local_50 * 4 + 0xfU & 0xfffffffffffffff8;\n            if (0x1f37 < uVar6 - 8) {\n              return 0xffffffff;\n            }\n            if (0x3fffffffffffffff < local_50) {\n              return 0xffffffff;\n            }\n            lVar15 = -(uVar6 + 0x17 & 0xfffffffffffffff0);\n            pplVar7 = (long **)((ulong)(puVar14 + lVar15 + 0xf) & 0xfffffffffffffff0);\n            *(undefined8 *)(puVar14 + lVar15 + -8) = 0x413b98;\n            pwVar8 = wmempcpy((wchar_t *)(pplVar7 + 1),pwVar8,(long)__src - (long)pwVar8 >> 2);\n            uVar18 = local_60;\n            uVar12 = local_64;\n            uVar6 = local_70;\n            *pwVar8 = L'\\0';\n            *ppplVar13 = pplVar7;\n            pplVar17 = local_40[0];\n            *pplVar7 = (long *)0x0;\n            if (local_40[0] == (long **)0x0) {\n                    /* WARNING: Subroutine does not return */\n              *(undefined8 *)(puVar14 + lVar15 + -8) = 0x413e73;\n              __assert_fail(\"list != NULL\",\"lib/fnmatch_loop.c\",0x454,\"ext_wmatch\");\n            }\n            if (__src[-1] != L')') {\n                    /* WARNING: Subroutine does not return */\n              *(undefined8 *)(puVar14 + lVar15 + -8) = 0x413e5a;\n              __assert_fail(\"p[-1] == L_(\\')\\')\",\"lib/fnmatch_loop.c\",0x455,\"ext_wmatch\");\n            }\n            switch((int)local_58) {\n            case 0x21:\n              if (local_60 < local_70) {\n                return 1;\n              }\n              local_50 = local_40[0];\n              local_58 = __src;\n              pplVar17 = local_50;\n              uVar18 = local_70;\n              uVar12 = local_64 & 0xfffffffb;\n              if ((local_64 & 1) != 0) {\n                uVar12 = local_64;\n              }\n              goto LAB_00413d20;\n            default:\n                    /* WARNING: Subroutine does not return */\n              *(undefined8 *)(puVar14 + lVar15 + -8) = 0x413e41;\n              __assert_fail(\"! \\\"Invalid extended matching operator\\\"\",\"lib/fnmatch_loop.c\",0x4ad,\n                            \"ext_wmatch\");\n            case 0x2a:\n              *(undefined8 *)(puVar14 + lVar15 + -8) = 0x413bf3;\n              iVar3 = FUN_00413e80(__src,uVar6,uVar18,param_5,uVar12);\n              if (iVar3 == 0) {\n                return 0;\n              }\n            case 0x2b:\n              uVar18 = local_60;\n              uVar6 = local_70;\n              local_78 = __src;\n              uVar12 = local_64 & 0xfffffffb;\n              if ((local_64 & 1) != 0) {\n                uVar12 = local_64;\n              }\n              local_58 = (wchar_t *)\n                         ((ulong)local_58 & 0xffffffff00000000 |\n                         (ulong)local_64 & 0xffffffff00000001);\n              local_80 = pwVar4 + -1;\n              do {\n                if (uVar6 <= uVar18) {\n                  local_50 = (long **)((ulong)local_50 & 0xffffffff00000000 | (ulong)local_65);\n                  uVar19 = uVar6;\n                  do {\n                    uVar10 = (ulong)local_50 & 0xffffffff;\n                    *(undefined8 *)(puVar14 + lVar15 + -8) = 0x413cbd;\n                    iVar3 = FUN_00413e80(pplVar17 + 1,uVar6,uVar19,uVar10,uVar12);\n                    pwVar8 = local_78;\n                    if (iVar3 == 0) {\n                      if (uVar6 == uVar19) {\n                        uVar10 = (ulong)local_50 & 0xffffffff;\n                        *(undefined8 *)(puVar14 + lVar15 + -8) = 0x413cdf;\n                        iVar3 = FUN_00413e80(pwVar8,uVar6,uVar18,uVar10,uVar12);\n                        pplVar17 = local_40[0];\n                      }\n                      else {\n                        bVar20 = false;\n                        if (*(int *)(uVar19 - 4) == 0x2f) {\n                          bVar20 = (local_64 & 5) == 5;\n                        }\n                        *(undefined8 *)(puVar14 + lVar15 + -8) = 0x413c66;\n                        iVar3 = FUN_00413e80(pwVar8,uVar19,uVar18,bVar20,uVar12);\n                        pwVar8 = local_80;\n                        if (iVar3 == 0) {\n                          return 0;\n                        }\n                        bVar20 = false;\n                        if (*(int *)(uVar19 - 4) == 0x2f) {\n                          bVar20 = (local_64 & 5) == 5;\n                        }\n                        *(undefined8 *)(puVar14 + lVar15 + -8) = 0x413c93;\n                        iVar3 = FUN_00413e80(pwVar8,uVar19,uVar18,bVar20,uVar12);\n                        pplVar17 = local_40[0];\n                      }\n                      local_40[0] = pplVar17;\n                      if (iVar3 == 0) {\n                        return 0;\n                      }\n                    }\n                    uVar19 = uVar19 + 4;\n                  } while (uVar19 <= uVar18);\n                }\n                pplVar17 = (long **)*pplVar17;\n                local_40[0] = pplVar17;\n                if (pplVar17 == (long **)0x0) {\n                  return 1;\n                }\n              } while( true );\n            case 0x3f:\n              *(undefined8 *)(puVar14 + lVar15 + -8) = 0x413dfc;\n              iVar3 = FUN_00413e80(__src,uVar6,uVar18,param_5,uVar12);\n              if (iVar3 == 0) {\n                return 0;\n              }\n              break;\n            case 0x40:\n            }\n            uVar6 = local_70;\n            uVar12 = local_64 & 0xfffffffb;\n            if ((local_64 & 1) != 0) {\n              uVar12 = local_64;\n            }\n            do {\n              *(undefined8 *)(puVar14 + lVar15 + -8) = 0x413dc1;\n              pwVar8 = wcscat((wchar_t *)(pplVar17 + 1),__src);\n              uVar18 = local_60;\n              *(undefined8 *)(puVar14 + lVar15 + -8) = 0x413dd6;\n              iVar3 = FUN_00413e80(pwVar8,uVar6,uVar18,param_5,uVar12);\n              if (iVar3 == 0) {\n                return 0;\n              }\n              pplVar17 = (long **)*pplVar17;\n              local_40[0] = pplVar17;\n            } while (pplVar17 != (long **)0x0);\n            return 1;\n          }\n          lVar15 = lVar15 + 1;\n          __src = __src + 1;\n          wVar2 = L'(';\n        }\n        if ((wVar2 == L'|') && (lVar15 == 0)) {\n          sVar11 = (size_t)local_50;\n          if (1 < (int)local_58 - 0x3fU) {\n            sVar11 = ((long)__src - (long)pwVar8 >> 2) + 1;\n          }\n          uVar6 = sVar11 * 4 + 0xf & 0xfffffffffffffff8;\n          if (0x1f37 < uVar6 - 8) {\n            return 0xffffffff;\n          }\n          if (0x3fffffffffffffff < sVar11) {\n            return 0xffffffff;\n          }\n          lVar1 = -(uVar6 + 0x17 & 0xfffffffffffffff0);\n          ppplVar16 = (long ***)((ulong)(puVar14 + lVar1 + 0xf) & 0xfffffffffffffff0);\n          *(undefined8 *)(puVar14 + lVar1 + -8) = 0x413ac4;\n          pwVar4 = wmempcpy((wchar_t *)(ppplVar16 + 1),pwVar8,(long)__src - (long)pwVar8 >> 2);\n          pwVar8 = __src + 1;\n          *pwVar4 = L'\\0';\n          wVar2 = __src[1];\n          *ppplVar16 = (long **)0x0;\n          *ppplVar13 = (long **)ppplVar16;\n          lVar15 = 0;\n          __src = pwVar8;\n          ppplVar13 = ppplVar16;\n          puVar14 = puVar14 + lVar1;\n        }\n        else {\nLAB_00413966:\n          wVar2 = __src[1];\n          __src = __src + 1;\n        }\n      }\njoined_r0x004139ab:\n    } while (wVar2 != L'\\0');\n  }\n  return 0xffffffff;\nLAB_00413d20:\n  *(undefined8 *)(puVar14 + lVar15 + -8) = 0x413d35;\n  iVar3 = FUN_00413e80(pplVar17 + 1,uVar6,uVar18,param_5,uVar12);\n  pwVar8 = local_58;\n  uVar19 = local_60;\n  if (iVar3 != 0) {\n    pplVar17 = (long **)*pplVar17;\n    if (pplVar17 != (long **)0x0) goto LAB_00413d20;\n    bVar9 = param_5;\n    if ((uVar6 != uVar18) && (bVar9 = 0, *(int *)(uVar18 - 4) == 0x2f)) {\n      bVar9 = (local_64 & 5) == 5;\n    }\n    *(undefined8 *)(puVar14 + lVar15 + -8) = 0x413d75;\n    iVar3 = FUN_00413e80(pwVar8,uVar18,uVar19,bVar9,uVar12);\n    if (iVar3 == 0) {\n      return 0;\n    }\n  }\n  uVar18 = uVar18 + 4;\n  pplVar17 = local_50;\n  if (local_60 < uVar18) {\n    return 1;\n  }\n  goto LAB_00413d20;\n}\n\n",
            "funcName": "FUN_004138f0"
        },
        {
            "funcStartAddr": "0x413e80",
            "funcEndAddr": "0x4148b6",
            "decompiledFuncCode": "\n/* WARNING: Type propagation algorithm not settling */\n\nulong FUN_00413e80(wchar_t *param_1,wchar_t *param_2,wchar_t *param_3,byte param_4,uint param_5)\n\n{\n  uint uVar1;\n  bool bVar2;\n  wchar_t wVar3;\n  wchar_t wVar4;\n  wchar_t wVar5;\n  uint uVar6;\n  int iVar7;\n  ulong uVar8;\n  wchar_t *pwVar9;\n  char *pcVar10;\n  wchar_t *pwVar11;\n  wctype_t __desc;\n  wchar_t wVar12;\n  long lVar13;\n  uint uVar14;\n  wchar_t *pwVar15;\n  char *pcVar16;\n  uint uVar17;\n  wchar_t wVar18;\n  bool bVar19;\n  wchar_t *local_580;\n  uint local_570;\n  char local_558 [268];\n  wchar_t awStack_44c [263];\n  \n  wVar3 = *param_1;\n  if (wVar3 == L'\\0') {\nLAB_0041411c:\n    if (param_2 == param_3) {\n      return 0;\n    }\n    if ((param_5 & 8) == 0) {\n      return 1;\n    }\n    return (ulong)(*param_2 != L'/');\n  }\n  uVar14 = param_5 & 0x10;\n  uVar17 = param_5 & 2;\n  local_580 = param_1 + 1;\nLAB_00413ed5:\n  if (uVar14 != 0) {\n    wVar3 = towlower(wVar3);\n  }\n  switch(wVar3) {\n  case L'!':\n  case L'+':\n  case L'@':\n    if ((((param_5 & 0x20) != 0) && (param_1[1] == L'(')) &&\n       (uVar8 = FUN_004138f0(wVar3,local_580,param_2,param_3,param_4,param_5), (int)uVar8 != -1)) {\n      return uVar8;\n    }\n  default:\nswitchD_00413efd_caseD_22:\n    if (param_3 == param_2) {\n      return 1;\n    }\nLAB_004140e2:\n    wVar5 = *param_2;\n    if (uVar14 != 0) {\n      wVar5 = towlower(wVar5);\n    }\n    if (wVar5 != wVar3) {\n      return 1;\n    }\nLAB_004140f5:\n    param_4 = false;\n    break;\n  case L'*':\n    uVar6 = param_5 & 0x20;\n    if (((uVar6 != 0) && (param_1[1] == L'(')) &&\n       (uVar8 = FUN_004138f0(0x2a,local_580,param_2,param_3,param_4,param_5), (int)uVar8 != -1)) {\n      return uVar8;\n    }\n    if (((param_3 != param_2) && (*param_2 == L'.')) && (param_4 != 0)) {\n      return 1;\n    }\n    wVar3 = param_1[1];\n    param_1 = param_1 + 2;\n    if ((wVar3 == L'*') || (wVar3 == L'?')) {\n      do {\n        if ((((*param_1 != L'(') || (uVar6 == 0)) ||\n            (pwVar9 = (wchar_t *)FUN_004136f0(param_1), pwVar9 == param_1)) &&\n           (pwVar9 = param_1, wVar3 == L'?')) {\n          if (param_2 == param_3) {\n            return 1;\n          }\n          if ((*param_2 == L'/') && ((param_5 & 1) != 0)) {\n            return 1;\n          }\n          param_2 = param_2 + 1;\n        }\n        wVar3 = *pwVar9;\n        param_1 = pwVar9 + 1;\n      } while ((wVar3 == L'?') || (wVar3 == L'*'));\n    }\n    if (wVar3 == L'\\0') {\n      if ((param_5 & 1) == 0) {\n        return 0;\n      }\n      if ((param_5 & 8) != 0) {\n        return 0;\n      }\n      pwVar9 = wmemchr(param_2,L'/',(long)param_3 - (long)param_2 >> 2);\n      return (ulong)(pwVar9 != (wchar_t *)0x0);\n    }\n    uVar1 = param_5 & 1;\n    pwVar9 = wmemchr(param_2,-(param_5 & 1) & 0x2f,(long)param_3 - (long)param_2 >> 2);\n    if (pwVar9 == (wchar_t *)0x0) {\n      pwVar9 = param_3;\n    }\n    if ((wVar3 == L'[') ||\n       ((((uVar6 != 0 && ((uint)(wVar3 + L'\\xffffffdf') < 0x20)) &&\n         ((0x80000401UL >> ((ulong)(uint)(wVar3 + L'\\xffffffdf') & 0x3f) & 1) != 0)) &&\n        (*param_1 == L'(')))) {\n      uVar14 = param_5 & 0xfffffffb;\n      if (uVar1 != 0) {\n        uVar14 = param_5;\n      }\n      while( true ) {\n        if (pwVar9 <= param_2) {\n          return 1;\n        }\n        iVar7 = FUN_00413e80(param_1 + -1,param_2,param_3,param_4,uVar14);\n        if (iVar7 == 0) break;\n        param_2 = param_2 + 1;\n        param_4 = 0;\n      }\n      return 0;\n    }\n    if (wVar3 == L'/') {\n      if (uVar1 != 0) {\n        while( true ) {\n          if (param_3 <= param_2) {\n            return 1;\n          }\n          if (*param_2 == L'/') break;\n          param_2 = param_2 + 1;\n        }\n        iVar7 = FUN_00413e80(param_1,param_2 + 1,param_3,param_5 >> 2 & 1);\n        return (ulong)(iVar7 != 0);\n      }\n    }\n    else {\n      local_570 = param_5;\n      if (uVar1 != 0) goto LAB_00414298;\n    }\n    local_570 = param_5 & 0xfffffffb;\nLAB_00414298:\n    if ((wVar3 == L'\\\\') && (uVar17 == 0)) {\n      wVar3 = *param_1;\n    }\n    if (uVar14 != 0) {\n      wVar3 = towlower(wVar3);\n    }\n    while( true ) {\n      if (pwVar9 <= param_2) {\n        return 1;\n      }\n      wVar5 = *param_2;\n      if (uVar14 != 0) {\n        wVar5 = towlower(wVar5);\n      }\n      if ((wVar3 == wVar5) &&\n         (iVar7 = FUN_00413e80(param_1 + -1,param_2,param_3,param_4,local_570), iVar7 == 0)) break;\n      param_2 = param_2 + 1;\n      param_4 = 0;\n    }\n    return 0;\n  case L'/':\n    if ((param_5 & 5) != 5) goto switchD_00413efd_caseD_22;\n    if (param_3 == param_2) {\n      return 1;\n    }\n    if (*param_2 != L'/') {\n      return 1;\n    }\n    param_4 = true;\n    break;\n  case L'?':\n    if ((((param_5 & 0x20) != 0) && (param_1[1] == L'(')) &&\n       (uVar8 = FUN_004138f0(0x3f,local_580,param_2,param_3,param_4,param_5), (int)uVar8 != -1)) {\n      return uVar8;\n    }\n    if (param_3 == param_2) {\n      return 1;\n    }\n    if (*param_2 != L'/') {\n      param_4 = param_4 & *param_2 == L'.';\n      if ((bool)param_4 != false) {\n        return 1;\n      }\n      break;\n    }\n    if ((param_5 & 1) != 0) {\n      return 1;\n    }\n    goto LAB_004140f5;\n  case L'[':\n    if (DAT_00625918 == 0) {\n      pcVar10 = getenv(\"POSIXLY_CORRECT\");\n      DAT_00625918 = -(uint)(pcVar10 == (char *)0x0) | 1;\n    }\n    if (param_3 == param_2) {\n      return 1;\n    }\n    wVar5 = *param_2;\n    if (wVar5 == L'.') {\n      if (param_4 != 0) {\n        return 1;\n      }\n    }\n    else if ((wVar5 == L'/') && ((param_5 & 1) != 0)) {\n      return 1;\n    }\n    if ((param_1[1] == L'!') || (((int)DAT_00625918 < 0 && (param_1[1] == L'^')))) {\n      param_1 = param_1 + 2;\n      bVar2 = true;\n    }\n    else {\n      bVar2 = false;\n      param_1 = local_580;\n    }\n    if (uVar14 != 0) {\n      wVar5 = towlower(wVar5);\n    }\n    wVar4 = *param_1;\n    pwVar9 = param_1 + 1;\nLAB_00414007:\n    do {\n      if ((uVar17 == 0) && (wVar4 == L'\\\\')) {\n        wVar4 = *pwVar9;\n        if (wVar4 == L'\\0') {\n          return 1;\n        }\n        if (uVar14 != 0) {\n          wVar4 = towlower(wVar4);\n        }\n        wVar18 = pwVar9[1];\n        pwVar15 = pwVar9 + 1;\n        goto LAB_00414036;\n      }\n      if (wVar4 == L'[') {\n        wVar18 = *pwVar9;\n        if (wVar18 != L':') goto LAB_0041402a;\n        lVar13 = 0;\n        pwVar11 = pwVar9;\n        while( true ) {\n          wVar4 = pwVar11[1];\n          if (wVar4 == L':') break;\n          if (0x18 < (uint)(wVar4 + L'\\xffffff9f')) goto LAB_004143d3;\n          lVar13 = lVar13 + 1;\n          awStack_44c[lVar13] = wVar4;\n          pwVar11 = pwVar11 + 1;\n          if (lVar13 == 0x100) {\n            return 1;\n          }\n        }\n        if (pwVar11[2] != L']') {\nLAB_004143d3:\n          pwVar11 = pwVar9 + 1;\n          pwVar15 = pwVar9;\n          pwVar9 = pwVar11;\n          if (wVar5 == L'[') {\nLAB_00414640:\n            wVar18 = *pwVar15;\n            goto LAB_00414663;\n          }\n          wVar4 = L':';\n          goto LAB_00414007;\n        }\n        awStack_44c[lVar13 + 1] = L'\\0';\n        pwVar9 = awStack_44c + 1;\n        pcVar10 = local_558;\n        wVar4 = awStack_44c[1];\n        do {\n          if (wVar4 < L'@') {\n            if ((wVar4 < L'%') && (3 < (uint)(wVar4 + L'\\xffffffe0'))) {\n              return 1;\n            }\n          }\n          else {\n            if (wVar4 < L'A') {\n              return 1;\n            }\n            if ((L'_' < wVar4) && (0x1d < (uint)(wVar4 + L'\\xffffff9f'))) {\n              return 1;\n            }\n          }\n          if (pwVar9 == awStack_44c + 0x101) {\n            return 1;\n          }\n          pwVar9 = pwVar9 + 1;\n          pcVar16 = pcVar10 + 1;\n          *pcVar10 = (char)wVar4;\n          wVar4 = *pwVar9;\n          pcVar10 = pcVar16;\n        } while (wVar4 != L'\\0');\n        *pcVar16 = '\\0';\n        __desc = wctype(local_558);\n        if (__desc == 0) {\n          return 1;\n        }\n        iVar7 = iswctype(*param_2,__desc);\n        if (iVar7 != 0) {\n          pwVar15 = pwVar11 + 3;\n          wVar18 = pwVar11[3];\n          pwVar9 = pwVar11 + 4;\n          goto LAB_00414663;\n        }\n        pwVar9 = pwVar11 + 4;\n        wVar4 = pwVar11[3];\n      }\n      else {\n        if (wVar4 == L'\\0') goto LAB_004140e2;\n        wVar18 = *pwVar9;\nLAB_0041402a:\n        while( true ) {\n          pwVar15 = pwVar9;\n          if (uVar14 != 0) {\n            wVar4 = towlower(wVar4);\n          }\nLAB_00414036:\n          pwVar9 = pwVar15 + 1;\n          if (wVar18 != L'-') {\n            bVar19 = wVar4 != wVar5;\n            wVar4 = wVar18;\n            if (bVar19) goto LAB_00413ffe;\n            goto LAB_00414640;\n          }\n          wVar12 = pwVar15[1];\n          if ((wVar12 != L']') && (wVar12 != L'\\0')) break;\n          if (wVar4 == wVar5) goto LAB_00414663;\n          if (wVar12 != L']') break;\n          wVar18 = L']';\n          wVar4 = L'-';\n        }\n        pwVar9 = pwVar15 + 2;\n        if ((wVar12 == L'\\\\') && (uVar17 == 0)) {\n          wVar12 = pwVar15[2];\n          pwVar9 = pwVar15 + 3;\n        }\n        pwVar15 = pwVar9;\n        if (wVar12 == L'\\0') {\n          return 1;\n        }\n        wVar18 = *pwVar15;\n        pwVar9 = pwVar15 + 1;\n        bVar19 = (uint)wVar4 <= (uint)wVar5;\n        wVar4 = wVar18;\n        if ((uint)wVar5 <= (uint)wVar12 && bVar19) {\n          pwVar9 = pwVar15 + 1;\n          goto LAB_00414663;\n        }\n      }\nLAB_00413ffe:\n    } while (wVar4 != L']');\n    local_580 = pwVar9;\n    if (!bVar2) {\n      return 1;\n    }\n    goto LAB_00414354;\n  case L'\\\\':\n    if (uVar17 == 0) {\n      wVar3 = param_1[1];\n      local_580 = param_1 + 2;\n      if (wVar3 == L'\\0') {\n        return 1;\n      }\n      if (uVar14 == 0) {\n        if (param_3 == param_2) {\n          return 1;\n        }\n        goto LAB_00414344;\n      }\n      wVar3 = towlower(wVar3);\n      if (param_3 == param_2) {\n        return 1;\n      }\nLAB_00413f46:\n      wVar5 = towlower(*param_2);\n    }\n    else {\n      if (param_3 == param_2) {\n        return 1;\n      }\n      if (uVar14 != 0) goto LAB_00413f46;\nLAB_00414344:\n      wVar5 = *param_2;\n    }\n    if (wVar5 != wVar3) {\n      return 1;\n    }\nLAB_00414354:\n    param_4 = false;\n  }\n  goto LAB_004140fd;\nLAB_00414663:\n  if (wVar18 == L'\\0') {\n    return 1;\n  }\n  param_4 = wVar18 == L'\\\\' && uVar17 == 0;\n  if ((bool)param_4) {\n    if (pwVar15[1] == L'\\0') {\n      return 1;\n    }\n    wVar18 = pwVar15[2];\n    pwVar15 = pwVar15 + 2;\n  }\n  else {\n    local_580 = pwVar9;\n    if (wVar18 == L'[') {\n      wVar18 = pwVar15[1];\n      if (wVar18 == L':') {\n        pwVar11 = pwVar15 + 2;\n        wVar18 = pwVar15[2];\n        while (wVar18 != L':') {\n          if (0x18 < (uint)(wVar18 + L'\\xffffff9f')) {\n            wVar18 = L':';\n            pwVar15 = pwVar9;\n            goto LAB_0041465f;\n          }\n          pwVar11 = pwVar11 + 1;\n          wVar18 = *pwVar11;\n          if (pwVar15 + 0x101 == pwVar11) {\n            return 1;\n          }\n        }\n        pwVar15 = pwVar9;\n        if (pwVar11[1] != L']') goto LAB_0041465f;\n        local_580 = pwVar11 + 3;\n        wVar18 = pwVar11[2];\n      }\n      else if (wVar18 == L'=') {\n        if (pwVar15[2] == L'\\0') {\n          return 1;\n        }\n        if (pwVar15[3] != L'=') {\n          return 1;\n        }\n        if (pwVar15[4] != L']') {\n          return 1;\n        }\n        local_580 = pwVar15 + 6;\n        wVar18 = pwVar15[5];\n      }\n      else {\n        pwVar11 = pwVar15 + 2;\n        pwVar15 = pwVar9;\n        if (wVar18 != L'.') goto LAB_0041465f;\n        do {\n          pwVar9 = pwVar11;\n          if (pwVar9[1] == L'\\0') {\n            return 1;\n          }\n          pwVar11 = pwVar9 + 1;\n        } while ((pwVar9[1] != L'.') || (pwVar9[2] != L']'));\n        local_580 = pwVar9 + 4;\n        wVar18 = pwVar9[3];\n      }\n    }\n    if (wVar18 == L']') goto LAB_004148dd;\n    wVar18 = *local_580;\n    pwVar15 = local_580;\n  }\nLAB_0041465f:\n  pwVar9 = pwVar15 + 1;\n  goto LAB_00414663;\nLAB_004148dd:\n  if (bVar2) {\n    return 1;\n  }\nLAB_004140fd:\n  wVar3 = *local_580;\n  param_2 = param_2 + 1;\n  param_1 = local_580;\n  local_580 = local_580 + 1;\n  if (wVar3 == L'\\0') goto LAB_0041411c;\n  goto LAB_00413ed5;\n}\n\n",
            "funcName": "FUN_00413e80"
        },
        {
            "funcStartAddr": "0x414960",
            "funcEndAddr": "0x414e7b",
            "decompiledFuncCode": "\n/* WARNING: Type propagation algorithm not settling */\n/* WARNING: Could not reconcile some variable overlaps */\n\nundefined8\nFUN_00414960(uint param_1,char *param_2,ulong param_3,ulong param_4,byte param_5,uint param_6)\n\n{\n  long lVar1;\n  ulong uVar2;\n  byte bVar3;\n  char cVar4;\n  uint uVar5;\n  int iVar6;\n  char *pcVar7;\n  size_t sVar8;\n  ulong uVar9;\n  long **pplVar10;\n  undefined *puVar11;\n  char *pcVar12;\n  ulong uVar13;\n  long ***ppplVar14;\n  char **ppcVar15;\n  ulong uVar16;\n  char *pcVar17;\n  long lVar18;\n  long ***ppplVar19;\n  bool bVar20;\n  char *local_88;\n  char *local_80;\n  byte local_75;\n  uint local_74;\n  ulong local_70;\n  ulong local_68;\n  undefined8 local_60;\n  long **local_58;\n  char *local_50;\n  long **local_40 [2];\n  \n  ppcVar15 = &local_88;\n  local_50 = (char *)((ulong)local_50 & 0xffffffff00000000 | (ulong)param_1);\n  local_40[0] = (long **)0x0;\n  local_75 = param_5;\n  local_74 = param_6;\n  local_70 = param_4;\n  local_68 = param_3;\n  local_58 = (long **)strlen(param_2);\n  uVar5 = (uint)(byte)param_2[1];\n  if (param_2[1] != 0) {\n    pcVar7 = param_2 + 1;\n    ppplVar14 = local_40;\n    lVar18 = 0;\n    local_80 = param_2;\n    local_60 = (char *)CONCAT44(local_60._4_4_,(int)local_50 + -0x3f);\n    pcVar17 = pcVar7;\n    do {\n      pcVar12 = local_80;\n      if ((char)uVar5 == '[') {\n        if (DAT_00625918 == 0) {\n          local_88 = pcVar7;\n          *(undefined8 *)((long)ppcVar15 + -8) = 0x414b4e;\n          pcVar7 = getenv(\"POSIXLY_CORRECT\");\n          DAT_00625918 = -(uint)(pcVar7 == (char *)0x0) | 1;\n          pcVar7 = local_88;\n        }\n        cVar4 = pcVar17[1];\n        if ((cVar4 == '!') || (((int)DAT_00625918 < 0 && (cVar4 == '^')))) {\n          pcVar12 = pcVar17 + 2;\n          cVar4 = pcVar17[2];\n        }\n        else {\n          pcVar12 = pcVar17 + 1;\n        }\n        if (cVar4 != ']') goto LAB_00414aab;\n        cVar4 = pcVar12[1];\n        pcVar17 = pcVar12 + 1;\n        pcVar12 = pcVar12 + 2;\n        while (cVar4 != ']') {\n          if (cVar4 == '\\0') {\n            return 0xffffffff;\n          }\n          cVar4 = *pcVar12;\nLAB_00414aab:\n          pcVar17 = pcVar12;\n          pcVar12 = pcVar12 + 1;\n        }\n        uVar5 = (uint)(byte)pcVar17[1];\n      }\n      else {\n        while( true ) {\n          if (0x1f < (byte)(uVar5 - 0x21)) break;\n          if (((0xc0000601UL >> ((ulong)(uVar5 - 0x21) & 0x3f) & 1) == 0) || (pcVar17[1] != '(')) {\n            if ((char)uVar5 != ')') goto LAB_004149e5;\n            if (lVar18 != 0) {\n              bVar3 = pcVar17[1];\n              uVar5 = (uint)bVar3;\n              lVar18 = lVar18 + -1;\n              pcVar17 = pcVar17 + 1;\n              goto joined_r0x00414a2a;\n            }\n            sVar8 = ((long)pcVar17 - (long)pcVar7) + 1;\n            if ((int)local_50 - 0x3fU < 2) {\n              sVar8 = (size_t)local_58;\n            }\n            uVar9 = sVar8 + 0xf & 0xfffffffffffffff8;\n            if (0x1f37 < uVar9 - 8) {\n              return 0xffffffff;\n            }\n            lVar18 = -(uVar9 + 0x17 & 0xfffffffffffffff0);\n            pplVar10 = (long **)((ulong)((long)ppcVar15 + lVar18 + 0xf) & 0xfffffffffffffff0);\n            *(undefined8 *)((long)ppcVar15 + lVar18 + -8) = 0x414bbe;\n            puVar11 = (undefined *)mempcpy(pplVar10 + 1,pcVar7,(long)pcVar17 - (long)pcVar7);\n            uVar2 = local_68;\n            uVar9 = local_70;\n            uVar5 = local_74;\n            *ppplVar14 = pplVar10;\n            *puVar11 = 0;\n            *pplVar10 = (long *)0x0;\n            local_58 = local_40[0];\n            if (local_40[0] == (long **)0x0) {\n                    /* WARNING: Subroutine does not return */\n              *(undefined8 *)((long)ppcVar15 + lVar18 + -8) = 0x414ea3;\n              __assert_fail(\"list != NULL\",\"lib/fnmatch_loop.c\",0x454,\"ext_match\");\n            }\n            if (pcVar17[-1] != ')') {\n                    /* WARNING: Subroutine does not return */\n              *(undefined8 *)((long)ppcVar15 + lVar18 + -8) = 0x414e8a;\n              __assert_fail(\"p[-1] == L_(\\')\\')\",\"lib/fnmatch_loop.c\",0x455,\"ext_match\");\n            }\n            switch((int)local_50) {\n            case 0x21:\n              if (local_70 < local_68) {\n                return 1;\n              }\n              local_50 = pcVar17;\n              pplVar10 = local_58;\n              uVar9 = local_68;\n              uVar5 = local_74 & 0xfffffffb;\n              if ((local_74 & 1) != 0) {\n                uVar5 = local_74;\n              }\n              goto LAB_00414d48;\n            default:\n                    /* WARNING: Subroutine does not return */\n              *(undefined8 *)((long)ppcVar15 + lVar18 + -8) = 0x414e71;\n              __assert_fail(\"! \\\"Invalid extended matching operator\\\"\",\"lib/fnmatch_loop.c\",0x4ad,\n                            \"ext_match\");\n            case 0x2a:\n              *(undefined8 *)((long)ppcVar15 + lVar18 + -8) = 0x414c1a;\n              iVar6 = FUN_00414eb0(pcVar17,uVar2,uVar9,param_5,uVar5);\n              if (iVar6 == 0) {\n                return 0;\n              }\n            case 0x2b:\n              pplVar10 = local_58;\n              uVar2 = local_68;\n              uVar9 = local_70;\n              local_60 = pcVar17;\n              uVar5 = local_74 & 0xfffffffb;\n              if ((local_74 & 1) != 0) {\n                uVar5 = local_74;\n              }\n              local_58 = (long **)((ulong)local_58 & 0xffffffff00000000 |\n                                  (ulong)local_74 & 0xffffffff00000001);\n              local_80 = pcVar12 + -1;\n              do {\n                if (uVar2 <= uVar9) {\n                  local_50 = (char *)((ulong)local_50 & 0xffffffff00000000 | (ulong)local_75);\n                  uVar16 = uVar2;\n                  do {\n                    uVar13 = (ulong)local_50 & 0xffffffff;\n                    *(undefined8 *)((long)ppcVar15 + lVar18 + -8) = 0x414ce8;\n                    iVar6 = FUN_00414eb0(pplVar10 + 1,uVar2,uVar16,uVar13,uVar5);\n                    pcVar7 = local_60;\n                    if (iVar6 == 0) {\n                      if (uVar2 == uVar16) {\n                        uVar13 = (ulong)local_50 & 0xffffffff;\n                        *(undefined8 *)((long)ppcVar15 + lVar18 + -8) = 0x414d0a;\n                        iVar6 = FUN_00414eb0(pcVar7,uVar2,uVar9,uVar13,uVar5);\n                        pplVar10 = local_40[0];\n                      }\n                      else {\n                        bVar20 = false;\n                        if (*(char *)(uVar16 - 1) == '/') {\n                          bVar20 = (local_74 & 5) == 5;\n                        }\n                        *(undefined8 *)((long)ppcVar15 + lVar18 + -8) = 0x414c91;\n                        iVar6 = FUN_00414eb0(pcVar7,uVar16,uVar9,bVar20,uVar5);\n                        pcVar7 = local_80;\n                        if (iVar6 == 0) {\n                          return 0;\n                        }\n                        bVar20 = false;\n                        if (*(char *)(uVar16 - 1) == '/') {\n                          bVar20 = (local_74 & 5) == 5;\n                        }\n                        *(undefined8 *)((long)ppcVar15 + lVar18 + -8) = 0x414cbe;\n                        iVar6 = FUN_00414eb0(pcVar7,uVar16,uVar9,bVar20,uVar5);\n                        pplVar10 = local_40[0];\n                      }\n                      local_40[0] = pplVar10;\n                      if (iVar6 == 0) {\n                        return 0;\n                      }\n                    }\n                    uVar16 = uVar16 + 1;\n                  } while (uVar16 <= uVar9);\n                }\n                pplVar10 = (long **)*pplVar10;\n                local_40[0] = pplVar10;\n                if (pplVar10 == (long **)0x0) {\n                  return 1;\n                }\n              } while( true );\n            case 0x3f:\n              *(undefined8 *)((long)ppcVar15 + lVar18 + -8) = 0x414e27;\n              iVar6 = FUN_00414eb0(pcVar17,uVar2,uVar9,param_5,uVar5);\n              if (iVar6 == 0) {\n                return 0;\n              }\n              break;\n            case 0x40:\n            }\n            uVar9 = local_70;\n            pplVar10 = local_58;\n            uVar5 = local_74 & 0xfffffffb;\n            if ((local_74 & 1) != 0) {\n              uVar5 = local_74;\n            }\n            do {\n              *(undefined8 *)((long)ppcVar15 + lVar18 + -8) = 0x414dec;\n              pcVar7 = strcat((char *)(pplVar10 + 1),pcVar17);\n              uVar2 = local_68;\n              *(undefined8 *)((long)ppcVar15 + lVar18 + -8) = 0x414e01;\n              iVar6 = FUN_00414eb0(pcVar7,uVar2,uVar9,param_5,uVar5);\n              if (iVar6 == 0) {\n                return 0;\n              }\n              local_40[0] = (long **)*pplVar10;\n              pplVar10 = local_40[0];\n            } while (local_40[0] != (long **)0x0);\n            return 1;\n          }\n          lVar18 = lVar18 + 1;\n          pcVar17 = pcVar17 + 1;\n          uVar5 = 0x28;\n        }\n        if (((char)uVar5 == '|') && (lVar18 == 0)) {\n          sVar8 = ((long)pcVar17 - (long)pcVar7) + 1;\n          if ((uint)local_60 < 2) {\n            sVar8 = (size_t)local_58;\n          }\n          uVar9 = sVar8 + 0xf & 0xfffffffffffffff8;\n          if (0x1f37 < uVar9 - 8) {\n            return 0xffffffff;\n          }\n          lVar1 = -(uVar9 + 0x17 & 0xfffffffffffffff0);\n          ppplVar19 = (long ***)((ulong)((long)ppcVar15 + lVar1 + 0xf) & 0xfffffffffffffff0);\n          *(undefined8 *)((long)ppcVar15 + lVar1 + -8) = 0x414b19;\n          puVar11 = (undefined *)mempcpy(ppplVar19 + 1,pcVar7,(long)pcVar17 - (long)pcVar7);\n          pcVar7 = pcVar17 + 1;\n          *puVar11 = 0;\n          uVar5 = (uint)(byte)pcVar17[1];\n          *ppplVar19 = (long **)0x0;\n          *ppplVar14 = (long **)ppplVar19;\n          lVar18 = 0;\n          ppplVar14 = ppplVar19;\n          ppcVar15 = (char **)((long)ppcVar15 + lVar1);\n          pcVar12 = pcVar7;\n        }\n        else {\nLAB_004149e5:\n          uVar5 = (uint)(byte)pcVar17[1];\n          pcVar12 = pcVar17 + 1;\n        }\n      }\n      bVar3 = (byte)uVar5;\n      pcVar17 = pcVar12;\njoined_r0x00414a2a:\n    } while (bVar3 != 0);\n  }\n  return 0xffffffff;\nLAB_00414d48:\n  *(undefined8 *)((long)ppcVar15 + lVar18 + -8) = 0x414d5d;\n  iVar6 = FUN_00414eb0(pplVar10 + 1,uVar2,uVar9,param_5,uVar5);\n  pcVar7 = local_50;\n  uVar16 = local_70;\n  if (iVar6 != 0) {\n    pplVar10 = (long **)*pplVar10;\n    if (pplVar10 != (long **)0x0) goto LAB_00414d48;\n    bVar3 = param_5;\n    if ((uVar2 != uVar9) && (bVar3 = 0, *(char *)(uVar9 - 1) == '/')) {\n      bVar3 = (local_74 & 5) == 5;\n    }\n    *(undefined8 *)((long)ppcVar15 + lVar18 + -8) = 0x414d9c;\n    iVar6 = FUN_00414eb0(pcVar7,uVar9,uVar16,bVar3,uVar5);\n    if (iVar6 == 0) {\n      return 0;\n    }\n  }\n  uVar9 = uVar9 + 1;\n  pplVar10 = local_58;\n  if (local_70 < uVar9) {\n    return 1;\n  }\n  goto LAB_00414d48;\n}\n\n",
            "funcName": "FUN_00414960"
        },
        {
            "funcStartAddr": "0x414eb0",
            "funcEndAddr": "0x4158d1",
            "decompiledFuncCode": "\n/* WARNING: Type propagation algorithm not settling */\n\nulong FUN_00414eb0(byte *param_1,byte *param_2,byte *param_3,byte param_4,uint param_5)\n\n{\n  byte bVar1;\n  uint uVar2;\n  bool bVar3;\n  uint uVar4;\n  wint_t __wc;\n  int iVar5;\n  __int32_t **pp_Var6;\n  byte *pbVar7;\n  char *pcVar8;\n  long lVar9;\n  wctype_t __desc;\n  byte bVar10;\n  byte bVar11;\n  __int32_t *p_Var12;\n  long lVar13;\n  byte *pbVar14;\n  uint uVar15;\n  uint uVar16;\n  ulong uVar17;\n  uint uVar18;\n  byte *pbVar19;\n  char cVar20;\n  byte bVar21;\n  ulong uVar22;\n  byte *local_168;\n  uint local_158;\n  byte local_148 [280];\n  \n  bVar10 = *param_1;\n  if (bVar10 != 0) {\n    uVar16 = param_5 & 2;\n    uVar15 = param_5 & 0x10;\n    local_168 = param_1 + 1;\n    do {\n      uVar22 = (ulong)bVar10;\n      if (uVar15 != 0) {\n        pp_Var6 = __ctype_tolower_loc();\n        uVar22 = (ulong)*(byte *)(*pp_Var6 + uVar22);\n      }\n      uVar4 = (uint)uVar22;\n      switch(uVar4 - 0x21 & 0xff) {\n      case 0:\n      case 10:\n      case 0x1f:\n        if ((((param_5 & 0x20) != 0) && (param_1[1] == 0x28)) &&\n           (uVar22 = FUN_00414960(uVar22,local_168,param_2,param_3,param_4,param_5),\n           (int)uVar22 != -1)) {\n          return uVar22;\n        }\n      default:\nswitchD_00414f20_caseD_1:\n        if (param_2 == param_3) {\n          return 1;\n        }\nLAB_0041516a:\n        bVar10 = *param_2;\n        uVar18 = (uint)bVar10;\n        if (uVar15 != 0) {\n          pp_Var6 = __ctype_tolower_loc();\n          uVar18 = (*pp_Var6)[bVar10];\n        }\n        if (uVar18 != uVar4) {\n          return 1;\n        }\nLAB_00415186:\n        param_4 = false;\n        break;\n      case 9:\n        uVar4 = param_5 & 0x20;\n        if (((uVar4 != 0) && (param_1[1] == 0x28)) &&\n           (uVar22 = FUN_00414960(0x2a,local_168,param_2,param_3,param_4,param_5), (int)uVar22 != -1\n           )) {\n          return uVar22;\n        }\n        if (((param_2 != param_3) && (*param_2 == 0x2e)) && (param_4 != 0)) {\n          return 1;\n        }\n        bVar10 = param_1[1];\n        param_1 = param_1 + 2;\n        if ((bVar10 == 0x2a) || (bVar10 == 0x3f)) {\n          do {\n            if ((((*param_1 != 0x28) || (uVar4 == 0)) ||\n                (pbVar19 = (byte *)FUN_004137f0(param_1), pbVar19 == param_1)) &&\n               (pbVar19 = param_1, bVar10 == 0x3f)) {\n              if (param_2 == param_3) {\n                return 1;\n              }\n              if ((*param_2 == 0x2f) && ((param_5 & 1) != 0)) {\n                return 1;\n              }\n              param_2 = param_2 + 1;\n            }\n            bVar10 = *pbVar19;\n            param_1 = pbVar19 + 1;\n          } while ((bVar10 == 0x3f) || (bVar10 == 0x2a));\n        }\n        if (bVar10 == 0) {\n          if ((param_5 & 1) == 0) {\n            return 0;\n          }\n          if ((param_5 & 8) != 0) {\n            return 0;\n          }\n          lVar9 = FUN_00416f00(param_2,0x2f,(long)param_3 - (long)param_2);\n          return (ulong)(lVar9 != 0);\n        }\n        uVar18 = (uint)bVar10;\n        uVar2 = param_5 & 1;\n        pbVar19 = (byte *)FUN_00416f00(param_2,-(param_5 & 1) & 0x2f,(long)param_3 - (long)param_2);\n        if (pbVar19 == (byte *)0x0) {\n          pbVar19 = param_3;\n        }\n        if ((bVar10 == 0x5b) ||\n           ((((uVar4 != 0 && ((byte)(uVar18 - 0x21) < 0x20)) &&\n             ((0x80000401UL >> ((ulong)(uVar18 - 0x21) & 0x3f) & 1) != 0)) && (*param_1 == 0x28))))\n        {\n          uVar15 = param_5 & 0xfffffffb;\n          if (uVar2 != 0) {\n            uVar15 = param_5;\n          }\n          if (pbVar19 <= param_2) {\n            return 1;\n          }\n          do {\n            iVar5 = FUN_00414eb0(param_1 + -1,param_2,param_3,param_4,uVar15);\n            if (iVar5 == 0) {\n              return 0;\n            }\n            param_2 = param_2 + 1;\n            param_4 = 0;\n          } while (pbVar19 != param_2);\n          return 1;\n        }\n        if (bVar10 == 0x2f) {\n          if (uVar2 != 0) {\n            if (param_3 <= param_2) {\n              return 1;\n            }\n            do {\n              if (*param_2 == 0x2f) {\n                iVar5 = FUN_00414eb0(param_1,param_2 + 1,param_3,param_5 >> 2 & 1);\n                return (ulong)(iVar5 != 0);\n              }\n              param_2 = param_2 + 1;\n            } while (param_3 != param_2);\n            return 1;\n          }\n        }\n        else {\n          local_158 = param_5;\n          if (uVar2 != 0) goto LAB_00415321;\n        }\n        local_158 = param_5 & 0xfffffffb;\nLAB_00415321:\n        if ((bVar10 == 0x5c) && (uVar16 == 0)) {\n          uVar18 = (uint)*param_1;\n        }\n        if (uVar15 != 0) {\n          pp_Var6 = __ctype_tolower_loc();\n          uVar18 = (uint)*(byte *)(*pp_Var6 + (byte)uVar18);\n        }\n        if (param_2 < pbVar19) {\n          do {\n            bVar10 = *param_2;\n            uVar16 = (uint)bVar10;\n            if (uVar15 != 0) {\n              pp_Var6 = __ctype_tolower_loc();\n              uVar16 = (*pp_Var6)[bVar10];\n            }\n            if ((uVar16 == uVar18) &&\n               (iVar5 = FUN_00414eb0(param_1 + -1,param_2,param_3,param_4,local_158), iVar5 == 0)) {\n              return 0;\n            }\n            param_2 = param_2 + 1;\n            param_4 = 0;\n          } while (pbVar19 != param_2);\n        }\n        return 1;\n      case 0xe:\n        if ((param_5 & 5) != 5) goto switchD_00414f20_caseD_1;\n        if (param_2 == param_3) {\n          return 1;\n        }\n        if (*param_2 != 0x2f) {\n          return 1;\n        }\n        param_4 = true;\n        break;\n      case 0x1e:\n        if ((((param_5 & 0x20) != 0) && (param_1[1] == 0x28)) &&\n           (uVar22 = FUN_00414960(0x3f,local_168,param_2,param_3,param_4,param_5), (int)uVar22 != -1\n           )) {\n          return uVar22;\n        }\n        if (param_2 == param_3) {\n          return 1;\n        }\n        if (*param_2 != 0x2f) {\n          param_4 = param_4 & *param_2 == 0x2e;\n          if ((bool)param_4 != false) {\n            return 1;\n          }\n          break;\n        }\n        if ((param_5 & 1) != 0) {\n          return 1;\n        }\n        goto LAB_00415186;\n      case 0x3a:\n        if (DAT_00625918 == 0) {\n          pcVar8 = getenv(\"POSIXLY_CORRECT\");\n          DAT_00625918 = -(uint)(pcVar8 == (char *)0x0) | 1;\n        }\n        if (param_2 == param_3) {\n          return 1;\n        }\n        bVar10 = *param_2;\n        if (bVar10 == 0x2e) {\n          if (param_4 != 0) {\n            return 1;\n          }\n        }\n        else if ((bVar10 == 0x2f) && ((param_5 & 1) != 0)) {\n          return 1;\n        }\n        if ((param_1[1] == 0x21) || (((int)DAT_00625918 < 0 && (param_1[1] == 0x5e)))) {\n          param_1 = param_1 + 2;\n          bVar3 = true;\n        }\n        else {\n          bVar3 = false;\n          param_1 = local_168;\n        }\n        if (uVar15 != 0) {\n          pp_Var6 = __ctype_tolower_loc();\n          bVar10 = *(byte *)(*pp_Var6 + bVar10);\n        }\n        uVar22 = (ulong)*param_1;\n        pbVar19 = param_1 + 1;\nLAB_0041502a:\n        do {\n          cVar20 = (char)uVar22;\n          if ((uVar16 == 0) && (cVar20 == '\\\\')) {\n            uVar22 = (ulong)*pbVar19;\n            if (*pbVar19 == 0) {\n              return 1;\n            }\n            if (uVar15 != 0) {\n              pp_Var6 = __ctype_tolower_loc();\n              uVar22 = (ulong)*(byte *)(*pp_Var6 + uVar22);\n            }\n            uVar17 = (ulong)pbVar19[1];\n            pbVar19 = pbVar19 + 1;\n            goto LAB_0041506b;\n          }\n          if (cVar20 == '[') {\n            uVar17 = (ulong)*pbVar19;\n            if (*pbVar19 != 0x3a) goto LAB_00415050;\n            lVar9 = 0;\n            pbVar7 = pbVar19;\n            while( true ) {\n              bVar21 = pbVar7[1];\n              if (bVar21 == 0x3a) break;\n              if (0x18 < (byte)(bVar21 + 0x9f)) goto LAB_00415488;\n              lVar13 = lVar9 + 1;\n              local_148[lVar9] = bVar21;\n              lVar9 = lVar13;\n              pbVar7 = pbVar7 + 1;\n              if (lVar13 == 0x100) {\n                return 1;\n              }\n            }\n            if (pbVar7[2] != 0x5d) {\nLAB_00415488:\n              pbVar14 = pbVar19 + 1;\n              if (bVar10 == 0x5b) {\nLAB_00415820:\n                uVar17 = (ulong)*pbVar19;\n                goto LAB_004150d7;\n              }\n              uVar22 = 0x3a;\n              pbVar19 = pbVar14;\n              goto LAB_0041502a;\n            }\n            local_148[lVar9] = 0;\n            __desc = wctype((char *)local_148);\n            if (__desc == 0) {\n              return 1;\n            }\n            __wc = btowc((uint)*param_2);\n            iVar5 = iswctype(__wc,__desc);\n            if (iVar5 != 0) {\n              pbVar19 = pbVar7 + 3;\n              uVar17 = (ulong)pbVar7[3];\n              pbVar14 = pbVar7 + 4;\n              goto LAB_004150d7;\n            }\n            pbVar14 = pbVar7 + 4;\n            uVar22 = (ulong)pbVar7[3];\n          }\n          else {\n            if (cVar20 == '\\0') {\n              uVar4 = 0x5b;\n              goto LAB_0041516a;\n            }\n            uVar17 = (ulong)*pbVar19;\nLAB_00415050:\n            while( true ) {\n              if (uVar15 != 0) {\n                pp_Var6 = __ctype_tolower_loc();\n                uVar22 = (ulong)*(byte *)(*pp_Var6 + uVar22);\n              }\nLAB_0041506b:\n              pbVar14 = pbVar19 + 1;\n              bVar21 = (byte)uVar22;\n              if ((char)uVar17 != '-') {\n                uVar22 = uVar17;\n                if (bVar10 == bVar21) goto LAB_00415820;\n                goto LAB_00415020;\n              }\n              bVar11 = pbVar19[1];\n              if ((bVar11 != 0x5d) && (bVar11 != 0)) break;\n              if (bVar10 == bVar21) goto LAB_004150d7;\n              if (bVar11 != 0x5d) break;\n              uVar17 = 0x5d;\n              uVar22 = 0x2d;\n              pbVar19 = pbVar14;\n            }\n            pbVar7 = pbVar19 + 2;\n            if ((uVar16 == 0) && (bVar11 == 0x5c)) {\n              pbVar7 = pbVar19 + 3;\n              bVar11 = pbVar19[2];\n            }\n            if (bVar11 == 0) {\n              return 1;\n            }\n            bVar1 = *pbVar7;\n            uVar17 = (ulong)bVar1;\n            pbVar14 = pbVar7 + 1;\n            uVar22 = (ulong)bVar1;\n            if (((int)(char)bVar21 <= (int)(uint)bVar10) && (bVar10 <= bVar11)) {\nLAB_004150d3:\n              do {\n                pbVar14 = pbVar7 + 1;\n                pbVar19 = pbVar7;\nLAB_004150d7:\n                while( true ) {\n                  bVar10 = (byte)uVar17;\n                  if (bVar10 == 0) {\n                    return 1;\n                  }\n                  param_4 = bVar10 == 0x5c && uVar16 == 0;\n                  if ((bool)param_4) break;\n                  local_168 = pbVar14;\n                  if (bVar10 == 0x5b) {\n                    bVar10 = pbVar19[1];\n                    uVar17 = (ulong)bVar10;\n                    pbVar7 = pbVar14;\n                    if (bVar10 == 0x3a) {\n                      pbVar14 = pbVar19 + 2;\n                      bVar10 = pbVar19[2];\n                      while (uVar17 = (ulong)bVar10, bVar10 != 0x3a) {\n                        if (0x18 < (byte)(bVar10 + 0x9f)) {\n                          uVar17 = 0x3a;\n                          goto LAB_004150d3;\n                        }\n                        pbVar14 = pbVar14 + 1;\n                        bVar10 = *pbVar14;\n                        if (pbVar19 + 0x101 == pbVar14) {\n                          return 1;\n                        }\n                      }\n                      if (pbVar14[1] != 0x5d) goto LAB_004150d3;\n                      local_168 = pbVar14 + 3;\n                      bVar10 = pbVar14[2];\n                    }\n                    else if (bVar10 == 0x3d) {\n                      if (pbVar19[2] == 0) {\n                        return 1;\n                      }\n                      if (pbVar19[3] != 0x3d) {\n                        return 1;\n                      }\n                      if (pbVar19[4] != 0x5d) {\n                        return 1;\n                      }\n                      local_168 = pbVar19 + 6;\n                      bVar10 = pbVar19[5];\n                    }\n                    else {\n                      pbVar19 = pbVar19 + 2;\n                      if (bVar10 != 0x2e) goto LAB_004150d3;\n                      do {\n                        pbVar7 = pbVar19;\n                        if (pbVar7[1] == 0) {\n                          return 1;\n                        }\n                        pbVar19 = pbVar7 + 1;\n                      } while ((pbVar7[1] != 0x2e) || (pbVar7[2] != 0x5d));\n                      local_168 = pbVar7 + 4;\n                      bVar10 = pbVar7[3];\n                    }\n                  }\n                  if (bVar10 == 0x5d) {\n                    if (bVar3) {\n                      return 1;\n                    }\n                    goto LAB_0041518e;\n                  }\n                  uVar17 = (ulong)*local_168;\n                  pbVar14 = local_168 + 1;\n                  pbVar19 = local_168;\n                }\n                if (pbVar19[1] == 0) {\n                  return 1;\n                }\n                uVar17 = (ulong)pbVar19[2];\n                pbVar7 = pbVar19 + 2;\n              } while( true );\n            }\n          }\nLAB_00415020:\n          pbVar19 = pbVar14;\n        } while ((char)uVar22 != ']');\n        local_168 = pbVar14;\n        if (!bVar3) {\n          return 1;\n        }\n        goto LAB_00414f77;\n      case 0x3b:\n        if (uVar16 == 0) {\n          bVar10 = param_1[1];\n          local_168 = param_1 + 2;\n          if (bVar10 == 0) {\n            return 1;\n          }\n          if (uVar15 == 0) {\n            if (param_2 == param_3) {\n              return 1;\n            }\n            uVar4 = (uint)bVar10;\n            goto LAB_00414f66;\n          }\n          pp_Var6 = __ctype_tolower_loc();\n          p_Var12 = *pp_Var6;\n          if (param_2 == param_3) {\n            return 1;\n          }\n          uVar4 = p_Var12[bVar10] & 0xff;\nLAB_004153f5:\n          uVar18 = p_Var12[*param_2];\n        }\n        else {\n          if (param_2 == param_3) {\n            return 1;\n          }\n          if (uVar15 != 0) {\n            pp_Var6 = __ctype_tolower_loc();\n            p_Var12 = *pp_Var6;\n            uVar4 = 0x5c;\n            goto LAB_004153f5;\n          }\n          uVar4 = 0x5c;\nLAB_00414f66:\n          uVar18 = (uint)*param_2;\n        }\n        if (uVar18 != uVar4) {\n          return 1;\n        }\nLAB_00414f77:\n        param_4 = false;\n      }\nLAB_0041518e:\n      bVar10 = *local_168;\n      param_2 = param_2 + 1;\n      param_1 = local_168;\n      local_168 = local_168 + 1;\n    } while (bVar10 != 0);\n  }\n  if (param_3 == param_2) {\n    return 0;\n  }\n  if ((param_5 & 8) == 0) {\n    return 1;\n  }\n  return (ulong)(*param_2 != 0x2f);\n}\n\n",
            "funcName": "FUN_00414eb0"
        },
        {
            "funcStartAddr": "0x4159a0",
            "funcEndAddr": "0x415bd6",
            "decompiledFuncCode": "\nulong FUN_004159a0(char *param_1,char *param_2,uint param_3)\n\n{\n  wchar_t *pwVar1;\n  long lVar2;\n  char *pcVar3;\n  int iVar4;\n  size_t sVar5;\n  ulong uVar6;\n  ulong __len;\n  ulong uVar7;\n  int *piVar8;\n  wchar_t *pwVar9;\n  undefined *puVar10;\n  undefined8 uStack_70;\n  undefined auStack_68 [8];\n  wchar_t awStack_60 [2];\n  char *local_58;\n  char *local_50 [2];\n  mbstate_t local_40 [2];\n  \n  puVar10 = auStack_68;\n  uStack_70 = 0x4159c1;\n  local_58 = param_2;\n  local_50[0] = param_1;\n  sVar5 = __ctype_get_mb_cur_max();\n  if (sVar5 != 1) {\n    local_40[0] = (mbstate_t)0x0;\n    uStack_70 = 0x415a19;\n    sVar5 = mbsrtowcs((wchar_t *)0x0,local_50,0,local_40);\n    uVar6 = sVar5 + 1;\n    if (uVar6 != 0) {\n      uStack_70 = 0x415a2b;\n      iVar4 = mbsinit(local_40);\n      if (iVar4 == 0) {\n                    /* WARNING: Subroutine does not return */\n        uStack_70 = 0x415bd8;\n        __assert_fail(\"mbsinit (&ps)\",\"lib/fnmatch.c\",0x129,\"gnu_fnmatch\");\n      }\n      uStack_70 = 0x415a44;\n      sVar5 = mbsrtowcs((wchar_t *)0x0,&local_58,0,local_40);\n      __len = sVar5 + 1;\n      if (__len != 0) {\n        uStack_70 = 0x415a5a;\n        iVar4 = mbsinit(local_40);\n        if (iVar4 == 0) {\n                    /* WARNING: Subroutine does not return */\n          uStack_70 = 0x415bbf;\n          __assert_fail(\"mbsinit (&ps)\",\"lib/fnmatch.c\",0x12d,\"gnu_fnmatch\");\n        }\n        uVar7 = uVar6 + __len;\n        if ((!CARRY8(uVar6,__len)) && (uVar7 < 0x4000000000000000)) {\n          if (uVar7 < 2000) {\n            lVar2 = -(uVar7 * 4 + 0x17 & 0xfffffffffffffff0);\n            puVar10 = auStack_68 + lVar2;\n            pwVar1 = (wchar_t *)((long)awStack_60 + lVar2);\n            pwVar9 = pwVar1 + uVar6;\n            *(undefined8 *)(auStack_68 + lVar2 + -8) = 0x415ac0;\n            mbsrtowcs(pwVar1,local_50,uVar6,local_40);\n            *(undefined8 *)(auStack_68 + lVar2 + -8) = 0x415ac9;\n            iVar4 = mbsinit(local_40);\n            if (iVar4 != 0) {\n              *(undefined8 *)(auStack_68 + lVar2 + -8) = 0x415ae4;\n              mbsrtowcs(pwVar9,&local_58,__len,local_40);\n              *(undefined8 *)(auStack_68 + lVar2 + -8) = 0x415b00;\n              uVar6 = FUN_00413e80(pwVar1,pwVar9,pwVar9 + sVar5,param_3 >> 2 & 1,param_3);\n              return uVar6;\n            }\n          }\n          else {\n            uStack_70 = 0x415b1f;\n            pwVar9 = (wchar_t *)malloc(uVar7 * 4);\n            if (pwVar9 == (wchar_t *)0x0) goto LAB_00415b05;\n            pwVar1 = pwVar9 + uVar6;\n            uStack_70 = 0x415b3e;\n            mbsrtowcs(pwVar9,local_50,uVar6,local_40);\n            uStack_70 = 0x415b47;\n            iVar4 = mbsinit(local_40);\n            if (iVar4 != 0) {\n              uStack_70 = 0x415b5e;\n              mbsrtowcs(pwVar1,&local_58,__len,local_40);\n              uStack_70 = 0x415b7a;\n              awStack_60[1] = FUN_00413e80(pwVar9,pwVar1,pwVar1 + sVar5,param_3 >> 2 & 1,param_3);\n              uStack_70 = 0x415b85;\n              free(pwVar9);\n              return (ulong)(uint)awStack_60[1];\n            }\n          }\n                    /* WARNING: Subroutine does not return */\n          *(undefined8 *)(puVar10 + -8) = 0x415ba6;\n          __assert_fail(\"mbsinit (&ps)\",\"lib/fnmatch.c\",0x147,\"gnu_fnmatch\");\n        }\nLAB_00415b05:\n        uStack_70 = 0x415b0a;\n        piVar8 = __errno_location();\n        *piVar8 = 0xc;\n        return 0xffffffff;\n      }\n    }\n  }\n  pcVar3 = local_58;\n  uStack_70 = 0x4159d3;\n  sVar5 = strlen(local_58);\n  uStack_70 = 0x4159ef;\n  uVar6 = FUN_00414eb0(local_50[0],pcVar3,pcVar3 + sVar5,param_3 >> 2 & 1,param_3);\n  return uVar6;\n}\n\n",
            "funcName": "FUN_004159a0"
        },
        {
            "funcStartAddr": "0x415be0",
            "funcEndAddr": "0x416085",
            "decompiledFuncCode": "\nvoid * FUN_00415be0(void *param_1,size_t param_2)\n\n{\n  char *__filename;\n  bool bVar1;\n  __dev_t _Var2;\n  __dev_t _Var3;\n  __ino_t _Var4;\n  __ino_t _Var5;\n  int iVar6;\n  int iVar7;\n  int *piVar8;\n  DIR *__dirp;\n  dirent *pdVar9;\n  size_t __n;\n  void *pvVar10;\n  bool bVar11;\n  ulong uVar12;\n  long lVar13;\n  ulong uVar14;\n  __ino_t _Var15;\n  bool bVar16;\n  bool bVar17;\n  bool bVar18;\n  __dev_t local_120;\n  void *local_110;\n  void *local_108;\n  ulong local_100;\n  void *local_e8;\n  stat local_c8;\n  \n  if (param_2 == 0) {\n    local_100 = 0x1000;\n    if (param_1 != (void *)0x0) {\n      piVar8 = __errno_location();\n      *piVar8 = 0x16;\n      return (void *)0x0;\n    }\nLAB_00415c12:\n    local_110 = malloc(local_100);\n    if (local_110 == (void *)0x0) {\n      return (void *)0x0;\n    }\n  }\n  else {\n    local_110 = param_1;\n    local_100 = param_2;\n    if (param_1 == (void *)0x0) goto LAB_00415c12;\n  }\n  lVar13 = (long)local_110 + local_100;\n  *(undefined *)(lVar13 + -1) = 0;\n  iVar6 = __lxstat(1,\".\",&local_c8);\n  _Var15 = local_c8.st_ino;\n  _Var2 = local_c8.st_dev;\n  if (-1 < iVar6) {\n    local_120 = local_c8.st_dev;\n    iVar6 = __lxstat(1,\"/\",&local_c8);\n    _Var4 = local_c8.st_ino;\n    _Var3 = local_c8.st_dev;\n    if (-1 < iVar6) {\n      local_e8 = (void *)(lVar13 + -1);\n      bVar16 = _Var2 != local_c8.st_dev;\n      bVar17 = _Var15 != local_c8.st_ino;\n      if (!bVar16 && !bVar17) {\nLAB_00415ef8:\n        if (local_e8 == (void *)((long)local_110 + (local_100 - 1))) {\n          *(undefined *)((long)local_e8 + -1) = 0x2f;\n          local_e8 = (void *)((long)local_e8 + -1);\n        }\n        memmove(local_110,local_e8,lVar13 - (long)local_e8);\n        local_108 = param_1;\n        if (param_2 == 0) {\n          local_108 = realloc(local_110,lVar13 - (long)local_e8);\n        }\n        if (local_108 != (void *)0x0) {\n          return local_108;\n        }\n        return local_110;\n      }\n      piVar8 = __errno_location();\n      __dirp = (DIR *)0x0;\n      iVar6 = -100;\n      do {\n        iVar6 = openat(iVar6,\"..\",0);\n        if (iVar6 < 0) {\n          iVar7 = *piVar8;\n          if (__dirp != (DIR *)0x0) goto LAB_00415fb1;\n          goto joined_r0x00415fbf;\n        }\n        iVar7 = __fxstat(1,iVar6,&local_c8);\n        if (iVar7 != 0) {\n          iVar7 = *piVar8;\n          if (__dirp != (DIR *)0x0) {\n            closedir(__dirp);\n          }\nLAB_0041601d:\n          close(iVar6);\n          goto joined_r0x00415fbf;\n        }\n        if (((__dirp != (DIR *)0x0) && (iVar7 = closedir(__dirp), iVar7 != 0)) ||\n           (_Var5 = local_c8.st_ino, _Var2 = local_c8.st_dev, __dirp = fdopendir(iVar6),\n           bVar1 = bVar16 || bVar17, __dirp == (DIR *)0x0)) {\n          iVar7 = *piVar8;\n          goto LAB_0041601d;\n        }\nLAB_00415d70:\n        do {\n          do {\n            *piVar8 = 0;\n            pdVar9 = readdir(__dirp);\n            if (pdVar9 == (dirent *)0x0) {\n              iVar7 = *piVar8;\n              if ((iVar7 == 0) && (bVar1)) {\n                rewinddir(__dirp);\n                pdVar9 = readdir(__dirp);\n                if (pdVar9 != (dirent *)0x0) {\n                  bVar11 = false;\n                  bVar1 = bVar11;\n                  if (pdVar9->d_name[0] == '.') goto LAB_00415f80;\n                  break;\n                }\n                iVar7 = *piVar8;\n              }\n              if (iVar7 == 0) {\n                *piVar8 = 2;\n                iVar7 = 2;\n              }\n              goto LAB_00415fb1;\n            }\n            if (pdVar9->d_name[0] == '.') {\nLAB_00415f80:\n              if ((pdVar9->d_name[1] == '\\0') || (*(short *)(pdVar9->d_name + 1) == 0x2e))\n              goto LAB_00415d70;\n            }\n            bVar11 = bVar1;\n          } while ((bVar1) &&\n                  (bVar18 = pdVar9->d_ino == _Var15, bVar11 = bVar18 || _Var2 != local_120,\n                  !bVar18 && _Var2 == local_120));\n          __filename = pdVar9->d_name;\n          iVar7 = __fxstatat(1,iVar6,__filename,&local_c8,0x100);\n          bVar1 = bVar11;\n        } while ((((iVar7 != 0) || ((local_c8.st_mode & 0xf000) != 0x4000)) ||\n                 (local_c8.st_dev != local_120)) || (local_c8.st_ino != _Var15));\n        uVar14 = (long)local_e8 - (long)local_110;\n        __n = strlen(__filename);\n        if (uVar14 <= __n) {\n          if (param_2 == 0) {\n            uVar12 = local_100;\n            if (local_100 <= __n) {\n              uVar12 = __n;\n            }\n            if ((!CARRY8(local_100,uVar12)) &&\n               (pvVar10 = realloc(local_110,local_100 + uVar12), pvVar10 != (void *)0x0)) {\n              local_e8 = memcpy((void *)((long)pvVar10 + uVar12 + uVar14),\n                                (void *)((long)pvVar10 + uVar14),local_100 - uVar14);\n              local_110 = pvVar10;\n              local_100 = local_100 + uVar12;\n              goto LAB_00415e8f;\n            }\n            *piVar8 = 0xc;\n            iVar7 = 0xc;\n          }\n          else {\n            *piVar8 = 0x22;\n            iVar7 = 0x22;\n          }\nLAB_00415fb1:\n          closedir(__dirp);\n          goto joined_r0x00415fbf;\n        }\nLAB_00415e8f:\n        pvVar10 = memcpy((void *)((long)local_e8 - __n),__filename,__n);\n        local_e8 = (void *)((long)pvVar10 + -1);\n        local_120 = _Var2;\n        *(undefined *)((long)pvVar10 + -1) = 0x2f;\n        _Var15 = _Var5;\n      } while ((_Var3 != _Var2) || (_Var4 != _Var5));\n      iVar6 = closedir(__dirp);\n      if (iVar6 == 0) {\n        lVar13 = (long)local_110 + local_100;\n        goto LAB_00415ef8;\n      }\n      goto LAB_00415fe0;\n    }\n  }\n  piVar8 = __errno_location();\nLAB_00415fe0:\n  iVar7 = *piVar8;\njoined_r0x00415fbf:\n  if (param_1 == (void *)0x0) {\n    free(local_110);\n  }\n  *piVar8 = iVar7;\n  return (void *)0x0;\n}\n\n",
            "funcName": "FUN_00415be0"
        },
        {
            "funcStartAddr": "0x4160b0",
            "funcEndAddr": "0x416185",
            "decompiledFuncCode": "\nvoid FUN_004160b0(long param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 *puVar5;\n  long lVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  \n  iVar1 = param_2[0xb];\n  iVar2 = *param_2;\n  iVar3 = param_2[0xc];\n  iVar8 = iVar1;\n  iVar9 = iVar2;\n  while (iVar3 < iVar9) {\n    while( true ) {\n      if (iVar3 <= iVar8) goto LAB_0041612c;\n      iVar10 = iVar9 - iVar3;\n      iVar7 = iVar3 - iVar8;\n      if (iVar10 <= iVar7) break;\n      lVar6 = (long)iVar8;\n      iVar9 = iVar9 - iVar7;\n      puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n      do {\n        uVar4 = *puVar5;\n        *puVar5 = puVar5[iVar9 - lVar6];\n        puVar5[iVar9 - lVar6] = uVar4;\n        puVar5 = puVar5 + 1;\n      } while ((undefined8 *)(param_1 + 8 + ((ulong)(iVar7 - 1) + lVar6) * 8) != puVar5);\n      if (iVar9 <= iVar3) goto LAB_0041612c;\n    }\n    lVar6 = (long)iVar8;\n    puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n    do {\n      uVar4 = *puVar5;\n      *puVar5 = puVar5[iVar3 - lVar6];\n      puVar5[iVar3 - lVar6] = uVar4;\n      puVar5 = puVar5 + 1;\n    } while (puVar5 != (undefined8 *)(param_1 + 8 + ((ulong)(iVar10 - 1) + lVar6) * 8));\n    iVar8 = iVar8 + iVar10;\n  }\nLAB_0041612c:\n  param_2[0xc] = iVar2;\n  param_2[0xb] = iVar1 + (iVar2 - iVar3);\n  return;\n}\n\n",
            "funcName": "FUN_004160b0"
        },
        {
            "funcStartAddr": "0x416190",
            "funcEndAddr": "0x41678e",
            "decompiledFuncCode": "\nint FUN_00416190(int param_1,undefined8 *param_2,char *param_3,char **param_4,undefined4 *param_5,\n                int param_6,int *param_7,int param_8,undefined8 param_9)\n\n{\n  char cVar1;\n  undefined8 uVar2;\n  bool bVar3;\n  bool bVar4;\n  int iVar5;\n  int iVar6;\n  size_t sVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  char **ppcVar10;\n  char *pcVar11;\n  char **ppcVar12;\n  char *pcVar13;\n  char *__s1;\n  FILE *__stream;\n  ulong uVar14;\n  size_t sVar15;\n  char *__s1_00;\n  long lVar16;\n  char *local_70;\n  uint local_44;\n  \n  pcVar13 = *(char **)(param_7 + 8);\n  cVar1 = *pcVar13;\n  pcVar11 = pcVar13;\n  if ((cVar1 == '=') || (cVar1 == '\\0')) {\n    sVar15 = 0;\n  }\n  else {\n    do {\n      pcVar11 = pcVar11 + 1;\n      if (*pcVar11 == '\\0') break;\n    } while (*pcVar11 != '=');\n    sVar15 = (long)pcVar11 - (long)pcVar13;\n  }\n  uVar14 = 0;\n  __s1 = *param_4;\n  ppcVar10 = param_4;\n  __s1_00 = __s1;\n  if (__s1 != (char *)0x0) {\n    while( true ) {\n      iVar5 = strncmp(__s1_00,pcVar13,sVar15);\n      if ((iVar5 == 0) && (sVar7 = strlen(__s1_00), sVar7 == sVar15)) goto LAB_004163b0;\n      ppcVar10 = ppcVar10 + 4;\n      __s1_00 = *ppcVar10;\n      iVar5 = (int)uVar14 + 1;\n      if (__s1_00 == (char *)0x0) break;\n      uVar14 = (ulong)iVar5;\n    }\n    lVar16 = 0;\n    ppcVar10 = (char **)0x0;\n    local_44 = 0xffffffff;\n    bVar3 = false;\n    bVar4 = false;\n    local_70 = (char *)0x0;\n    ppcVar12 = param_4;\n    do {\n      iVar6 = strncmp(__s1,pcVar13,sVar15);\n      if (iVar6 == 0) {\n        if (ppcVar10 == (char **)0x0) {\n          local_44 = (uint)lVar16;\n          ppcVar10 = ppcVar12;\n        }\n        else if (((((param_6 != 0) || (*(int *)(ppcVar10 + 1) != *(int *)(ppcVar12 + 1))) ||\n                  (ppcVar10[2] != ppcVar12[2])) ||\n                 (*(int *)(ppcVar10 + 3) != *(int *)(ppcVar12 + 3))) && (!bVar3)) {\n          if (param_8 == 0) {\n            bVar3 = true;\n            if (local_70 == (char *)0x0) goto LAB_004162f0;\n          }\n          else if (local_70 == (char *)0x0) {\n            local_70 = (char *)calloc((long)iVar5,1);\n            if (local_70 == (char *)0x0) {\n              bVar3 = true;\n              goto LAB_004162f0;\n            }\n            bVar4 = true;\n            local_70[(int)local_44] = '\\x01';\n          }\n          local_70[lVar16] = '\\x01';\n        }\n      }\nLAB_004162f0:\n      ppcVar12 = ppcVar12 + 4;\n      __s1 = *ppcVar12;\n      lVar16 = lVar16 + 1;\n    } while (__s1 != (char *)0x0);\n    if ((local_70 != (char *)0x0) || (bVar3)) {\n      if (param_8 != 0) {\n        if (bVar3) {\n          uVar2 = *param_2;\n          uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous\\n\",5);\n          __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n        else {\n          flockfile(stderr);\n          uVar2 = *(undefined8 *)(param_7 + 8);\n          uVar8 = *param_2;\n          uVar9 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous; possibilities:\",5);\n          __fprintf_chk(stderr,1,uVar9,uVar8,param_9,uVar2);\n          pcVar13 = local_70;\n          __stream = stderr;\n          do {\n            if (*pcVar13 != '\\0') {\n              __fprintf_chk(__stream,1,\" \\'%s%s\\'\",param_9,*param_4);\n              __stream = stderr;\n            }\n            pcVar13 = pcVar13 + 1;\n            param_4 = param_4 + 4;\n          } while (local_70 + uVar14 + 1 != pcVar13);\n          fputc(10,__stream);\n          funlockfile(stderr);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n      }\n      if (bVar4) {\n        free(local_70);\n      }\n      sVar15 = strlen(pcVar13);\n      *(char **)(param_7 + 8) = pcVar13 + sVar15;\n      *param_7 = *param_7 + 1;\n      param_7[2] = 0;\n      return 0x3f;\n    }\n    if (ppcVar10 != (char **)0x0) {\n      uVar14 = (ulong)local_44;\nLAB_004163b0:\n      iVar6 = *param_7;\n      *(undefined8 *)(param_7 + 8) = 0;\n      iVar5 = iVar6 + 1;\n      *param_7 = iVar5;\n      if (*pcVar11 == '\\0') {\n        if (*(int *)(ppcVar10 + 1) == 1) {\n          if (param_1 <= iVar5) {\n            if (param_8 != 0) {\n              pcVar13 = *ppcVar10;\n              uVar2 = *param_2;\n              uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' requires an argument\\n\",5);\n              __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n            }\n            param_7[2] = *(int *)(ppcVar10 + 3);\n            return (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          *param_7 = iVar6 + 2;\n          *(undefined8 *)(param_7 + 4) = param_2[iVar5];\n        }\n      }\n      else {\n        if (*(int *)(ppcVar10 + 1) == 0) {\n          if (param_8 != 0) {\n            pcVar13 = *ppcVar10;\n            uVar2 = *param_2;\n            uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' doesn\\'t allow an argument\\n\",5);\n            __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          }\n          param_7[2] = *(int *)(ppcVar10 + 3);\n          return 0x3f;\n        }\n        *(char **)(param_7 + 4) = pcVar11 + 1;\n      }\n      if (param_5 != (undefined4 *)0x0) {\n        *param_5 = (int)uVar14;\n      }\n      if ((int *)ppcVar10[2] == (int *)0x0) {\n        return *(int *)(ppcVar10 + 3);\n      }\n      *(int *)ppcVar10[2] = *(int *)(ppcVar10 + 3);\n      return 0;\n    }\n  }\n  if (((param_6 != 0) && (*(char *)(param_2[*param_7] + 1) != '-')) &&\n     (pcVar11 = strchr(param_3,(int)cVar1), pcVar11 != (char *)0x0)) {\n    return -1;\n  }\n  if (param_8 != 0) {\n    uVar2 = *param_2;\n    uVar8 = dcgettext(0,\"%s: unrecognized option \\'%s%s\\'\\n\",5);\n    __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n  }\n  *(undefined8 *)(param_7 + 8) = 0;\n  *param_7 = *param_7 + 1;\n  param_7[2] = 0;\n  return 0x3f;\n}\n\n",
            "funcName": "FUN_00416190"
        },
        {
            "funcStartAddr": "0x4167b0",
            "funcEndAddr": "0x416d17",
            "decompiledFuncCode": "\nuint FUN_004167b0(uint param_1,undefined8 *param_2,char *param_3,long param_4,undefined8 param_5,\n                 ulong param_6,uint *param_7,int param_8)\n\n{\n  undefined8 uVar1;\n  char cVar2;\n  uint uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  long lVar6;\n  uint uVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  uint uVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  undefined1 *puVar15;\n  \n  bVar14 = 0;\n  uVar3 = param_7[1];\n  if ((int)param_1 < 1) {\n    return 0xffffffff;\n  }\n  uVar11 = *param_7;\n  *(undefined8 *)(param_7 + 4) = 0;\n  if (uVar11 == 0) {\n    *param_7 = 1;\n    uVar11 = 1;\nLAB_004167fa:\n    param_7[0xc] = uVar11;\n    param_7[0xb] = uVar11;\n    *(undefined8 *)(param_7 + 8) = 0;\n    if (*param_3 == '-') {\n      param_7[10] = 2;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else if (*param_3 == '+') {\n      param_7[10] = 0;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else {\n      pbVar8 = (byte *)0x0;\n      if (param_8 == 0) {\n        pcVar4 = getenv(\"POSIXLY_CORRECT\");\n        param_6 = param_6 & 0xffffffff;\n        if (pcVar4 == (char *)0x0) {\n          param_7[10] = 1;\n          pbVar8 = *(byte **)(param_7 + 8);\n          goto LAB_004168fd;\n        }\n        pbVar8 = *(byte **)(param_7 + 8);\n      }\n      param_7[10] = 0;\n    }\nLAB_004168fd:\n    param_7[6] = 1;\n    cVar2 = *param_3;\nLAB_00416908:\n    if (cVar2 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 == (byte *)0x0) goto LAB_00416878;\nLAB_0041691c:\n    if (*pbVar8 == 0) goto LAB_00416878;\n  }\n  else {\n    if (param_7[6] == 0) goto LAB_004167fa;\n    cVar2 = *param_3;\n    pbVar8 = *(byte **)(param_7 + 8);\n    if ((cVar2 - 0x2bU & 0xfd) != 0) goto LAB_00416908;\n    pcVar4 = param_3 + 1;\n    param_3 = param_3 + 1;\n    if (*pcVar4 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 != (byte *)0x0) goto LAB_0041691c;\nLAB_00416878:\n    uVar11 = *param_7;\n    if (param_7[0xc] != uVar11 && (int)uVar11 <= (int)param_7[0xc]) {\n      param_7[0xc] = uVar11;\n    }\n    if ((int)uVar11 < (int)param_7[0xb]) {\n      param_7[0xb] = uVar11;\n    }\n    if (param_7[10] == 1) {\n      uVar7 = param_7[0xc];\n      if (param_7[0xb] == uVar7) {\n        if (uVar11 != uVar7) {\n          param_7[0xb] = uVar11;\n          uVar7 = uVar11;\n        }\n      }\n      else if (uVar11 != uVar7) {\n        FUN_004160b0(param_2,param_7);\n        param_6 = param_6 & 0xffffffff;\n        uVar7 = *param_7;\n      }\n      uVar11 = uVar7;\n      uVar7 = uVar11;\n      if ((int)uVar11 < (int)param_1) {\n        lVar6 = (long)(int)uVar11;\n        do {\n          if ((*(char *)param_2[lVar6] == '-') && (((char *)param_2[lVar6])[1] != '\\0')) {\n            uVar11 = *param_7;\n            uVar7 = (uint)lVar6;\n            break;\n          }\n          uVar11 = (uint)lVar6 + 1;\n          lVar6 = lVar6 + 1;\n          *param_7 = uVar11;\n          uVar7 = uVar11;\n        } while ((int)lVar6 < (int)param_1);\n      }\n      param_7[0xc] = uVar7;\n    }\n    bVar12 = param_1 < uVar11;\n    bVar13 = param_1 == uVar11;\n    if (bVar13) {\n      param_1 = param_7[0xc];\n      uVar11 = param_7[0xb];\nLAB_004169e6:\n      if (uVar11 != param_1) {\n        *param_7 = uVar11;\n      }\n      return 0xffffffff;\n    }\n    lVar6 = 3;\n    pbVar8 = (byte *)param_2[(int)uVar11];\n    pbVar9 = pbVar8;\n    pbVar10 = &DAT_0041f171;\n    do {\n      if (lVar6 == 0) break;\n      lVar6 = lVar6 + -1;\n      bVar12 = *pbVar9 < *pbVar10;\n      bVar13 = *pbVar9 == *pbVar10;\n      pbVar9 = pbVar9 + (ulong)bVar14 * -2 + 1;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n    if ((!bVar12 && !bVar13) == bVar12) {\n      uVar11 = uVar11 + 1;\n      *param_7 = uVar11;\n      if (param_7[0xb] == param_7[0xc]) {\n        param_7[0xb] = uVar11;\n      }\n      else {\n        bVar12 = uVar11 != param_7[0xc];\n        uVar11 = param_7[0xb];\n        if (bVar12) {\n          FUN_004160b0(param_2,param_7);\n          uVar11 = param_7[0xb];\n        }\n      }\n      param_7[0xc] = param_1;\n      *param_7 = param_1;\n      goto LAB_004169e6;\n    }\n    if ((*pbVar8 != 0x2d) || (bVar14 = pbVar8[1], bVar14 == 0)) {\n      if (param_7[10] == 0) {\n        return 0xffffffff;\n      }\n      *(byte **)(param_7 + 4) = pbVar8;\n      *param_7 = uVar11 + 1;\n      return 1;\n    }\n    if (param_4 != 0) {\n      if (bVar14 == 0x2d) {\n        *(byte **)(param_7 + 8) = pbVar8 + 2;\n        puVar15 = &DAT_0041f171;\n        goto LAB_00416b45;\n      }\n      if ((int)param_6 != 0) {\n        if (pbVar8[2] == 0) {\n          pcVar4 = strchr(param_3,(int)(char)bVar14);\n          param_6 = param_6 & 0xffffffff;\n          if (pcVar4 != (char *)0x0) goto LAB_00416af0;\n        }\n        *(byte **)(param_7 + 8) = pbVar8 + 1;\n        uVar11 = FUN_00416190(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,\n                              &DAT_0041f172);\n        if (uVar11 != 0xffffffff) {\n          return uVar11;\n        }\n        pbVar8 = (byte *)param_2[(int)*param_7];\n      }\n    }\nLAB_00416af0:\n    pbVar8 = pbVar8 + 1;\n  }\n  pbVar9 = pbVar8 + 1;\n  *(byte **)(param_7 + 8) = pbVar9;\n  bVar14 = *pbVar8;\n  uVar11 = (uint)(char)bVar14;\n  pcVar4 = strchr(param_3,uVar11);\n  if (pbVar8[1] == 0) {\n    *param_7 = *param_7 + 1;\n  }\n  if (((byte)(bVar14 - 0x3a) < 2) || (pcVar4 == (char *)0x0)) {\n    if (uVar3 != 0) {\n      uVar1 = *param_2;\n      uVar5 = dcgettext(0,\"%s: invalid option -- \\'%c\\'\\n\",5);\n      __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n    }\n    param_7[2] = uVar11;\n    return 0x3f;\n  }\n  if (((*pcVar4 != 'W') || (param_4 == 0)) || (pcVar4[1] != ';')) {\n    if (pcVar4[1] == ':') {\n      if (pcVar4[2] == ':') {\n        if (pbVar8[1] == 0) {\n          *(undefined8 *)(param_7 + 4) = 0;\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = *param_7 + 1;\n        }\n      }\n      else {\n        uVar7 = *param_7;\n        if (pbVar8[1] == 0) {\n          if (param_1 == uVar7) {\n            if (uVar3 != 0) {\n              uVar1 = *param_2;\n              uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n              __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n            }\n            param_7[2] = uVar11;\n            uVar11 = (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          else {\n            uVar1 = param_2[(int)uVar7];\n            *param_7 = uVar7 + 1;\n            *(undefined8 *)(param_7 + 4) = uVar1;\n          }\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = uVar7 + 1;\n        }\n      }\n      *(undefined8 *)(param_7 + 8) = 0;\n      return uVar11;\n    }\n    return uVar11;\n  }\n  if (pbVar8[1] == 0) {\n    if (*param_7 == param_1) {\n      if (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n        __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n      }\n      param_7[2] = uVar11;\n      return (uint)(*param_3 != ':') * 5 + 0x3a;\n    }\n    pbVar9 = (byte *)param_2[(int)*param_7];\n  }\n  *(byte **)(param_7 + 8) = pbVar9;\n  param_6 = 0;\n  *(undefined8 *)(param_7 + 4) = 0;\n  puVar15 = &DAT_0041fcb5;\nLAB_00416b45:\n  uVar3 = FUN_00416190(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,puVar15);\n  return uVar3;\n}\n\n",
            "funcName": "FUN_004167b0"
        },
        {
            "funcStartAddr": "0x416d80",
            "funcEndAddr": "0x416dd6",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00416d80(void)\n\n{\n  DAT_00625920 = DAT_0062463c;\n  _DAT_00625924 = DAT_00624638;\n  FUN_004167b0();\n  DAT_0062463c = DAT_00625920;\n  DAT_00625970 = DAT_00625930;\n  _DAT_00624634 = DAT_00625928;\n  return;\n}\n\n",
            "funcName": "FUN_00416d80"
        },
        {
            "funcStartAddr": "0x416de0",
            "funcEndAddr": "0x416df8",
            "decompiledFuncCode": "\nvoid FUN_00416de0(void)\n\n{\n  FUN_00416d80();\n  return;\n}\n\n",
            "funcName": "FUN_00416de0"
        },
        {
            "funcStartAddr": "0x416e00",
            "funcEndAddr": "0x416e13",
            "decompiledFuncCode": "\nvoid FUN_00416e00(void)\n\n{\n  FUN_00416d80();\n  return;\n}\n\n",
            "funcName": "FUN_00416e00"
        },
        {
            "funcStartAddr": "0x416e20",
            "funcEndAddr": "0x416e35",
            "decompiledFuncCode": "\nvoid FUN_00416e20(void)\n\n{\n  FUN_004167b0();\n  return;\n}\n\n",
            "funcName": "FUN_00416e20"
        },
        {
            "funcStartAddr": "0x416e40",
            "funcEndAddr": "0x416e56",
            "decompiledFuncCode": "\nvoid FUN_00416e40(void)\n\n{\n  FUN_00416d80();\n  return;\n}\n\n",
            "funcName": "FUN_00416e40"
        },
        {
            "funcStartAddr": "0x416e60",
            "funcEndAddr": "0x416e78",
            "decompiledFuncCode": "\nvoid FUN_00416e60(void)\n\n{\n  FUN_004167b0();\n  return;\n}\n\n",
            "funcName": "FUN_00416e60"
        },
        {
            "funcStartAddr": "0x416e80",
            "funcEndAddr": "0x416eef",
            "decompiledFuncCode": "\nsize_t FUN_00416e80(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  wchar_t local_1c;\n  \n  if (param_2 == (byte *)0x0) {\n    param_3 = 1;\n    param_2 = &DAT_0041b08a;\n  }\n  else {\n    if (param_3 == 0) {\n      return 0xfffffffffffffffe;\n    }\n    if (param_1 != (wchar_t *)0x0) goto LAB_00416ea4;\n  }\n  param_1 = &local_1c;\nLAB_00416ea4:\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (cVar1 = FUN_0040c190(0), cVar1 == '\\0')) {\n    sVar2 = 1;\n    *param_1 = (uint)*param_2;\n  }\n  return sVar2;\n}\n\n",
            "funcName": "FUN_00416e80"
        },
        {
            "funcStartAddr": "0x416f00",
            "funcEndAddr": "0x416fe3",
            "decompiledFuncCode": "\nulong * FUN_00416f00(ulong *param_1,char param_2,ulong param_3)\n\n{\n  char cVar1;\n  ulong uVar2;\n  ulong *puVar3;\n  ulong uVar4;\n  \n  if (param_3 == 0) {\n    return (ulong *)0x0;\n  }\n  if (((ulong)param_1 & 7) == 0) {\nLAB_00416f40:\n    uVar4 = (long)(int)(uint)CONCAT11(param_2,param_2) |\n            (long)(int)(uint)CONCAT11(param_2,param_2) << 0x10;\n    uVar4 = uVar4 | uVar4 << 0x20;\n    if (7 < param_3) {\n      uVar2 = *param_1 ^ uVar4;\n      for (uVar2 = ~uVar2 & uVar2 + 0xfefefefefefefeff; (uVar2 & 0x8080808080808080) == 0;\n          uVar2 = ~uVar2 & uVar2 + 0xfefefefefefefeff) {\n        param_3 = param_3 - 8;\n        param_1 = param_1 + 1;\n        if (param_3 < 8) {\n          if (param_3 == 0) {\n            return (ulong *)0x0;\n          }\n          break;\n        }\n        uVar2 = *param_1 ^ uVar4;\n      }\n    }\n    if (param_2 != *(char *)param_1) {\n      puVar3 = (ulong *)((long)param_1 + param_3);\n      do {\n        param_1 = (ulong *)((long)param_1 + 1);\n        if (param_1 == puVar3) {\n          return (ulong *)0x0;\n        }\n      } while (*(char *)param_1 != param_2);\n    }\n  }\n  else {\n    cVar1 = *(char *)param_1;\n    while (param_2 != cVar1) {\n      param_1 = (ulong *)((long)param_1 + 1);\n      param_3 = param_3 - 1;\n      if (param_3 == 0) {\n        return (ulong *)0x0;\n      }\n      if (((ulong)param_1 & 7) == 0) goto LAB_00416f40;\n      cVar1 = *(char *)param_1;\n    }\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_00416f00"
        },
        {
            "funcStartAddr": "0x417010",
            "funcEndAddr": "0x41704b",
            "decompiledFuncCode": "\nvoid FUN_00417010(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  __fprintf_chk(stderr,1,\"%s\\n\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  exit(DAT_006245c0);\n}\n\n",
            "funcName": "FUN_00417010"
        },
        {
            "funcStartAddr": "0x417050",
            "funcEndAddr": "0x417065",
            "decompiledFuncCode": "\nvoid FUN_00417050(long param_1,undefined8 param_2)\n\n{\n  if ((*(byte *)(param_1 + 0x50) & 1) != 0) {\n                    /* WARNING: Could not recover jumptable at 0x0041705e. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (**(code **)(param_1 + 0x38))(*(undefined8 *)(param_1 + 0x48));\n    return;\n  }\n                    /* WARNING: Could not recover jumptable at 0x00417063. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (**(code **)(param_1 + 0x38))(param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00417050"
        },
        {
            "funcStartAddr": "0x417070",
            "funcEndAddr": "0x417085",
            "decompiledFuncCode": "\nvoid FUN_00417070(long param_1,undefined8 param_2)\n\n{\n  if ((*(byte *)(param_1 + 0x50) & 1) != 0) {\n                    /* WARNING: Could not recover jumptable at 0x0041707e. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (**(code **)(param_1 + 0x40))(*(undefined8 *)(param_1 + 0x48));\n    return;\n  }\n                    /* WARNING: Could not recover jumptable at 0x00417083. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (**(code **)(param_1 + 0x40))(param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00417070"
        },
        {
            "funcStartAddr": "0x417090",
            "funcEndAddr": "0x41711d",
            "decompiledFuncCode": "\nundefined8 FUN_00417090(long *param_1,long param_2,long param_3,long param_4,long param_5)\n\n{\n  long *plVar1;\n  undefined8 uVar2;\n  ulong uVar3;\n  long *plVar4;\n  long lVar5;\n  \n  if (param_3 == 0) {\n    lVar5 = 0xf;\n    param_3 = 0x10;\n  }\n  else {\n    lVar5 = param_3 + -1;\n  }\n  param_1[6] = lVar5;\n  if (param_2 == 0) {\n    param_2 = 0xfe0;\n  }\n  *param_1 = param_2;\n  plVar4 = param_1;\n  plVar1 = (long *)FUN_00417050();\n  param_1[1] = (long)plVar1;\n  if (plVar1 != (long *)0x0) {\n    uVar3 = -param_3 & (long)plVar1 + lVar5 + 0x10;\n    lVar5 = *param_1;\n    param_1[2] = uVar3;\n    param_1[3] = uVar3;\n    *plVar1 = lVar5 + (long)plVar1;\n    param_1[4] = lVar5 + (long)plVar1;\n    plVar1[1] = 0;\n    *(byte *)(param_1 + 10) = *(byte *)(param_1 + 10) & 0xf9;\n    return 1;\n  }\n  (*(code *)obstack_alloc_failed_handler)();\n  *(byte *)(plVar4 + 10) = *(byte *)(plVar4 + 10) & 0xfe;\n  plVar4[7] = param_4;\n  plVar4[8] = param_5;\n  uVar2 = FUN_00417090();\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00417090"
        },
        {
            "funcStartAddr": "0x417120",
            "funcEndAddr": "0x417131",
            "decompiledFuncCode": "\nvoid _obstack_begin(long param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                   undefined8 param_5)\n\n{\n  *(byte *)(param_1 + 0x50) = *(byte *)(param_1 + 0x50) & 0xfe;\n  *(undefined8 *)(param_1 + 0x38) = param_4;\n  *(undefined8 *)(param_1 + 0x40) = param_5;\n  FUN_00417090();\n  return;\n}\n\n",
            "funcName": "obstack_begin"
        },
        {
            "funcStartAddr": "0x417140",
            "funcEndAddr": "0x417155",
            "decompiledFuncCode": "\nvoid _obstack_begin_1(long param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                     undefined8 param_5,undefined8 param_6)\n\n{\n  *(byte *)(param_1 + 0x50) = *(byte *)(param_1 + 0x50) | 1;\n  *(undefined8 *)(param_1 + 0x38) = param_4;\n  *(undefined8 *)(param_1 + 0x40) = param_5;\n  *(undefined8 *)(param_1 + 0x48) = param_6;\n  FUN_00417090();\n  return;\n}\n\n",
            "funcName": "obstack_begin_1"
        },
        {
            "funcStartAddr": "0x417160",
            "funcEndAddr": "0x417259",
            "decompiledFuncCode": "\nulong * _obstack_newchunk(ulong **param_1,ulong param_2)\n\n{\n  ulong *puVar1;\n  ulong **ppuVar2;\n  ulong *puVar3;\n  ulong *puVar4;\n  ulong **ppuVar5;\n  ulong __n;\n  \n  __n = (long)param_1[3] - (long)param_1[2];\n  puVar1 = param_1[1];\n  puVar4 = (ulong *)(param_2 + __n + (long)param_1[6]);\n  puVar3 = (ulong *)((long)puVar4 + (__n >> 3) + 100);\n  if (puVar4 <= *param_1) {\n    puVar4 = *param_1;\n  }\n  if (puVar3 <= puVar4) {\n    puVar3 = puVar4;\n  }\n  ppuVar5 = param_1;\n  if ((CARRY8(param_2,__n) == false) && (CARRY8(param_2 + __n,(ulong)param_1[6]) == false)) {\n    puVar4 = puVar3;\n    ppuVar2 = (ulong **)FUN_00417050();\n    if (ppuVar2 != (ulong **)0x0) {\n      param_1[1] = (ulong *)ppuVar2;\n      ppuVar2[1] = puVar1;\n      param_1[4] = (ulong *)((long)ppuVar2 + (long)puVar3);\n      *ppuVar2 = (ulong *)((long)ppuVar2 + (long)puVar3);\n      puVar4 = (ulong *)((long)(ppuVar2 + 2) + (long)param_1[6] & ~(ulong)param_1[6]);\n      puVar3 = (ulong *)memcpy(puVar4,param_1[2],__n);\n      if ((*(byte *)(param_1 + 10) & 2) == 0) {\n        puVar3 = (ulong *)(~(ulong)param_1[6] & (long)(puVar1 + 2) + (long)param_1[6]);\n        if (param_1[2] == puVar3) {\n          ppuVar2[1] = (ulong *)puVar1[1];\n          puVar3 = (ulong *)FUN_00417070(param_1,puVar1);\n        }\n      }\n      param_1[2] = puVar4;\n      param_1[3] = (ulong *)(__n + (long)puVar4);\n      *(byte *)(param_1 + 10) = *(byte *)(param_1 + 10) & 0xfd;\n      return puVar3;\n    }\n  }\n  (*(code *)obstack_alloc_failed_handler)();\n  puVar3 = ppuVar5[1];\n  if (puVar3 != (ulong *)0x0) {\n    while ((puVar4 <= puVar3 || ((ulong *)*puVar3 < puVar4))) {\n      puVar3 = (ulong *)puVar3[1];\n      if (puVar3 == (ulong *)0x0) {\n        return (ulong *)0x0;\n      }\n    }\n    return (ulong *)0x1;\n  }\n  return puVar3;\n}\n\n",
            "funcName": "obstack_newchunk"
        },
        {
            "funcStartAddr": "0x417260",
            "funcEndAddr": "0x41728d",
            "decompiledFuncCode": "\nulong * _obstack_allocated_p(long param_1,ulong *param_2)\n\n{\n  ulong *puVar1;\n  \n  puVar1 = *(ulong **)(param_1 + 8);\n  if (puVar1 == (ulong *)0x0) {\n    return puVar1;\n  }\n  while ((param_2 <= puVar1 || ((ulong *)*puVar1 < param_2))) {\n    puVar1 = (ulong *)puVar1[1];\n    if (puVar1 == (ulong *)0x0) {\n      return (ulong *)0x0;\n    }\n  }\n  return (ulong *)0x1;\n}\n\n",
            "funcName": "obstack_allocated_p"
        },
        {
            "funcStartAddr": "0x4172a0",
            "funcEndAddr": "0x417300",
            "decompiledFuncCode": "\nvoid _obstack_free(long param_1,ulong *param_2)\n\n{\n  ulong *puVar1;\n  ulong *puVar2;\n  \n  puVar1 = *(ulong **)(param_1 + 8);\n  while( true ) {\n    if (puVar1 == (ulong *)0x0) {\n      if (param_2 == (ulong *)0x0) {\n        return;\n      }\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n    if ((puVar1 < param_2) && (puVar2 = (ulong *)*puVar1, param_2 <= puVar2)) break;\n    puVar1 = (ulong *)puVar1[1];\n    FUN_00417070(param_1);\n    *(byte *)(param_1 + 0x50) = *(byte *)(param_1 + 0x50) | 2;\n  }\n  *(ulong **)(param_1 + 0x18) = param_2;\n  *(ulong **)(param_1 + 0x10) = param_2;\n  *(ulong **)(param_1 + 0x20) = puVar2;\n  *(ulong **)(param_1 + 8) = puVar1;\n  return;\n}\n\n",
            "funcName": "obstack_free"
        },
        {
            "funcStartAddr": "0x417310",
            "funcEndAddr": "0x417334",
            "decompiledFuncCode": "\nlong _obstack_memory_used(long param_1)\n\n{\n  long lVar1;\n  long lVar2;\n  long *plVar3;\n  \n  plVar3 = *(long **)(param_1 + 8);\n  lVar1 = 0;\n  if (plVar3 == (long *)0x0) {\n    return 0;\n  }\n  do {\n    lVar2 = *plVar3 - (long)plVar3;\n    plVar3 = (long *)plVar3[1];\n    lVar1 = lVar1 + lVar2;\n  } while (plVar3 != (long *)0x0);\n  return lVar1;\n}\n\n",
            "funcName": "obstack_memory_used"
        },
        {
            "funcStartAddr": "0x417340",
            "funcEndAddr": "0x417380",
            "decompiledFuncCode": "\nbool FUN_00417340(long param_1)\n\n{\n  int iVar1;\n  \n  if (*(char *)(param_1 + 8) == '\\0') {\n    iVar1 = unsetenv(\"TZ\");\n  }\n  else {\n    iVar1 = setenv(\"TZ\",(char *)(param_1 + 9),1);\n  }\n  if (iVar1 == 0) {\n    tzset();\n  }\n  return iVar1 == 0;\n}\n\n",
            "funcName": "FUN_00417340"
        },
        {
            "funcStartAddr": "0x417390",
            "funcEndAddr": "0x4173b3",
            "decompiledFuncCode": "\nvoid FUN_00417390(long *param_1)\n\n{\n  long *plVar1;\n  \n  if (param_1 == (long *)0x0) {\n    return;\n  }\n  do {\n    plVar1 = (long *)*param_1;\n    free(param_1);\n    param_1 = plVar1;\n  } while (plVar1 != (long *)0x0);\n  return;\n}\n\n",
            "funcName": "FUN_00417390"
        },
        {
            "funcStartAddr": "0x4173c0",
            "funcEndAddr": "0x417401",
            "decompiledFuncCode": "\nundefined4 FUN_004173c0(undefined8 param_1)\n\n{\n  undefined4 uVar1;\n  int *piVar2;\n  int iVar3;\n  \n  piVar2 = __errno_location();\n  iVar3 = *piVar2;\n  uVar1 = FUN_00417340(param_1);\n  if ((char)uVar1 == '\\0') {\n    iVar3 = *piVar2;\n  }\n  FUN_00417390(param_1);\n  *piVar2 = iVar3;\n  return uVar1;\n}\n\n",
            "funcName": "FUN_004173c0"
        },
        {
            "funcStartAddr": "0x417410",
            "funcEndAddr": "0x41749a",
            "decompiledFuncCode": "\nundefined8 * FUN_00417410(char *param_1)\n\n{\n  ulong __n;\n  size_t sVar1;\n  undefined8 *puVar2;\n  ulong uVar3;\n  \n  if (param_1 == (char *)0x0) {\n    puVar2 = (undefined8 *)malloc(0x80);\n    if (puVar2 != (undefined8 *)0x0) {\n      *puVar2 = 0;\n      *(undefined2 *)(puVar2 + 1) = 0;\n      return puVar2;\n    }\n  }\n  else {\n    sVar1 = strlen(param_1);\n    __n = sVar1 + 1;\n    uVar3 = 0x76;\n    if (0x75 < __n) {\n      uVar3 = __n;\n    }\n    puVar2 = (undefined8 *)malloc(uVar3 + 0x11 & 0xfffffffffffffff8);\n    if (puVar2 != (undefined8 *)0x0) {\n      *puVar2 = 0;\n      *(undefined2 *)(puVar2 + 1) = 1;\n      memcpy((void *)((long)puVar2 + 9),param_1,__n);\n      *(undefined *)((long)puVar2 + sVar1 + 10) = 0;\n    }\n  }\n  return puVar2;\n}\n\n",
            "funcName": "FUN_00417410"
        },
        {
            "funcStartAddr": "0x4174a0",
            "funcEndAddr": "0x4175fb",
            "decompiledFuncCode": "\nundefined8 FUN_004174a0(long *param_1,char *param_2)\n\n{\n  char *__s2;\n  long *plVar1;\n  int iVar2;\n  size_t sVar3;\n  ulong uVar4;\n  int *piVar5;\n  long lVar6;\n  char *__s1;\n  \n  __s2 = *(char **)(param_2 + 0x30);\n  if (__s2 == (char *)0x0) {\n    return 1;\n  }\n  if ((__s2 < param_2) || (param_2 + 0x38 <= __s2)) {\n    __s1 = (char *)((long)param_1 + 9);\n    if (*__s2 == '\\0') {\n      __s1 = \"\";\n    }\n    else {\nLAB_004174e8:\n      iVar2 = strcmp(__s1,__s2);\n      if (iVar2 != 0) {\n        do {\n          if (*__s1 == '\\0') {\n            if ((char *)((long)param_1 + 9) == __s1) {\n              if (*(char *)(param_1 + 1) != '\\0') goto LAB_00417513;\n              sVar3 = strlen(__s2);\n              sVar3 = sVar3 + 1;\n              uVar4 = 0;\n            }\n            else {\n              sVar3 = strlen(__s2);\n              sVar3 = sVar3 + 1;\n              uVar4 = (long)__s1 - (long)(char *)((long)param_1 + 9);\n              if (~uVar4 < sVar3) {\n                piVar5 = __errno_location();\n                *piVar5 = 0xc;\n                return 0;\n              }\n            }\n            if (uVar4 + sVar3 < 0x77) {\n              memcpy(__s1,__s2,sVar3);\n              __s1[sVar3] = '\\0';\n            }\n            else {\n              lVar6 = FUN_00417410(__s2);\n              *param_1 = lVar6;\n              if (lVar6 == 0) {\n                return 0;\n              }\n              *(undefined *)(lVar6 + 8) = 0;\n              __s1 = (char *)(lVar6 + 9);\n            }\n            break;\n          }\nLAB_00417513:\n          sVar3 = strlen(__s1);\n          __s1 = __s1 + sVar3 + 1;\n          if ((*__s1 != '\\0') || (plVar1 = (long *)*param_1, plVar1 == (long *)0x0))\n          goto LAB_004174e8;\n          __s1 = (char *)((long)plVar1 + 9);\n          iVar2 = strcmp(__s1,__s2);\n          param_1 = plVar1;\n          if (iVar2 == 0) break;\n        } while( true );\n      }\n    }\n    *(char **)(param_2 + 0x30) = __s1;\n  }\n  return 1;\n}\n\n",
            "funcName": "FUN_004174a0"
        },
        {
            "funcStartAddr": "0x417620",
            "funcEndAddr": "0x4176bf",
            "decompiledFuncCode": "\nlong FUN_00417620(long param_1)\n\n{\n  char cVar1;\n  int iVar2;\n  char *__s2;\n  long lVar3;\n  int *piVar4;\n  \n  __s2 = getenv(\"TZ\");\n  if (__s2 == (char *)0x0) {\n    if (*(char *)(param_1 + 8) == '\\0') {\n      return 1;\n    }\n  }\n  else if (*(char *)(param_1 + 8) != '\\0') {\n    iVar2 = strcmp((char *)(param_1 + 9),__s2);\n    if (iVar2 == 0) {\n      return 1;\n    }\n  }\n  lVar3 = FUN_00417410(__s2);\n  if (lVar3 != 0) {\n    cVar1 = FUN_00417340(param_1);\n    if (cVar1 == '\\0') {\n      piVar4 = __errno_location();\n      iVar2 = *piVar4;\n      if (lVar3 != 1) {\n        FUN_00417390(lVar3);\n      }\n      *piVar4 = iVar2;\n      return 0;\n    }\n  }\n  return lVar3;\n}\n\n",
            "funcName": "FUN_00417620"
        },
        {
            "funcStartAddr": "0x4176d0",
            "funcEndAddr": "0x4176dc",
            "decompiledFuncCode": "\nvoid FUN_004176d0(long param_1)\n\n{\n  if (param_1 != 1) {\n    FUN_00417390();\n    return;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_004176d0"
        },
        {
            "funcStartAddr": "0x4176f0",
            "funcEndAddr": "0x417786",
            "decompiledFuncCode": "\ntm * FUN_004176f0(long param_1,time_t *param_2,tm *param_3)\n\n{\n  char cVar1;\n  long lVar2;\n  tm *ptVar3;\n  \n  if (param_1 == 0) {\n    ptVar3 = gmtime_r(param_2,param_3);\n    return ptVar3;\n  }\n  lVar2 = FUN_00417620();\n  if (lVar2 != 0) {\n    ptVar3 = localtime_r(param_2,param_3);\n    if ((ptVar3 == (tm *)0x0) || (cVar1 = FUN_004174a0(param_1,param_3), cVar1 == '\\0')) {\n      if (lVar2 != 1) {\n        FUN_004173c0(lVar2);\n      }\n    }\n    else if ((lVar2 == 1) || (cVar1 = FUN_004173c0(lVar2), cVar1 != '\\0')) {\n      return param_3;\n    }\n  }\n  return (tm *)0x0;\n}\n\n",
            "funcName": "FUN_004176f0"
        },
        {
            "funcStartAddr": "0x4177a0",
            "funcEndAddr": "0x4178a5",
            "decompiledFuncCode": "\nlong FUN_004177a0(long param_1,uint *param_2)\n\n{\n  char cVar1;\n  long lVar2;\n  tm *ptVar3;\n  long local_60;\n  tm local_58;\n  \n  if (param_1 == 0) {\n    lVar2 = FUN_004178c0(param_2);\n    return lVar2;\n  }\n  lVar2 = FUN_00417620();\n  if (lVar2 != 0) {\n    local_60 = FUN_004186f0(param_2);\n    if (((local_60 != -1) ||\n        (((ptVar3 = localtime_r(&local_60,&local_58), ptVar3 != (tm *)0x0 &&\n          ((((param_2[8] == 0) == (local_58.tm_isdst == 0) || ((int)param_2[8] < 0)) ||\n           (local_58.tm_isdst < 0)))) &&\n         ((param_2[4] ^ local_58.tm_mon | param_2[5] ^ local_58.tm_year |\n           param_2[3] ^ local_58.tm_mday | param_2[2] ^ local_58.tm_hour |\n           param_2[1] ^ local_58.tm_min | *param_2 ^ local_58.tm_sec) == 0)))) &&\n       (cVar1 = FUN_004174a0(param_1,param_2), cVar1 == '\\0')) {\n      local_60 = -1;\n    }\n    if (lVar2 == 1) {\n      return local_60;\n    }\n    cVar1 = FUN_004173c0(lVar2);\n    if (cVar1 != '\\0') {\n      return local_60;\n    }\n  }\n  return -1;\n}\n\n",
            "funcName": "FUN_004177a0"
        },
        {
            "funcStartAddr": "0x4178c0",
            "funcEndAddr": "0x4178d6",
            "decompiledFuncCode": "\nvoid FUN_004178c0(long param_1)\n\n{\n  *(undefined4 *)(param_1 + 0x20) = 0;\n  FUN_004182b0(param_1,gmtime_r,&DAT_00625958);\n  return;\n}\n\n",
            "funcName": "FUN_004178c0"
        },
        {
            "funcStartAddr": "0x4178e0",
            "funcEndAddr": "0x41793c",
            "decompiledFuncCode": "\nulong FUN_004178e0(uint *param_1)\n\n{\n  uint uVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  uVar1 = *param_1;\n  uVar3 = FUN_00417f10(param_1);\n  if ((uVar1 & 0x20) == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_004178e0"
        },
        {
            "funcStartAddr": "0x417940",
            "funcEndAddr": "0x417958",
            "decompiledFuncCode": "\nvoid FUN_00417940(void)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_0040b810();\n  if (lVar1 != 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00412bd0();\n}\n\n",
            "funcName": "FUN_00417940"
        },
        {
            "funcStartAddr": "0x417960",
            "funcEndAddr": "0x417992",
            "decompiledFuncCode": "\nulong FUN_00417960(char *param_1,ulong param_2)\n\n{\n  char cVar1;\n  ulong uVar2;\n  \n  cVar1 = *param_1;\n  if (cVar1 != '\\0') {\n    uVar2 = 0;\n    do {\n      param_1 = param_1 + 1;\n      uVar2 = (uVar2 << 9 | uVar2 >> 0x37) + (long)cVar1;\n      cVar1 = *param_1;\n    } while (cVar1 != '\\0');\n    return uVar2 % param_2;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_00417960"
        },
        {
            "funcStartAddr": "0x4179a0",
            "funcEndAddr": "0x417ef4",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nchar * FUN_004179a0(void)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  char *__s1;\n  size_t sVar5;\n  size_t sVar6;\n  char *pcVar7;\n  size_t __n;\n  char *__file;\n  FILE *__stream;\n  byte *pbVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  long lVar11;\n  ulong uVar12;\n  undefined8 *puVar13;\n  char *__ptr;\n  bool bVar14;\n  long local_d0;\n  undefined8 local_c0;\n  undefined8 local_b8;\n  undefined auStack_80 [8];\n  undefined8 local_78;\n  \n  __s1 = nl_langinfo(0xe);\n  if (__s1 == (char *)0x0) {\n    __s1 = \"\";\n  }\n  if (DAT_00625960 != (char *)0x0) goto LAB_004179da;\n  pcVar7 = getenv(\"CHARSETALIASDIR\");\n  if ((pcVar7 == (char *)0x0) || (*pcVar7 == '\\0')) {\n    sVar6 = 0x73;\n    sVar5 = 0x65;\n    __n = 100;\n    pcVar7 = \n    \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\"\n    ;\nLAB_00417ac5:\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      __file[__n] = '/';\n      goto LAB_00417ae6;\n    }\n  }\n  else {\n    __n = strlen(pcVar7);\n    if (__n == 0) {\n      sVar6 = 0xe;\n    }\n    else {\n      if (pcVar7[__n - 1] != '/') {\n        sVar6 = __n + 0xf;\n        sVar5 = __n + 1;\n        goto LAB_00417ac5;\n      }\n      sVar6 = __n + 0xe;\n    }\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      sVar5 = __n;\nLAB_00417ae6:\n      puVar13 = (undefined8 *)(__file + sVar5);\n      *puVar13 = 0x2e74657372616863;\n      *(undefined2 *)((long)puVar13 + 0xc) = 0x73;\n      *(undefined4 *)(puVar13 + 1) = 0x61696c61;\n      iVar2 = open(__file,0);\n      if (-1 < iVar2) {\n        __stream = fdopen(iVar2,\"r\");\n        local_d0 = 0;\n        if (__stream != (FILE *)0x0) {\n          pcVar7 = (char *)0x0;\nLAB_00417b80:\n          pbVar8 = (byte *)__stream->_IO_read_ptr;\n          if (__stream->_IO_read_end <= pbVar8) goto LAB_00417d0c;\n          do {\n            __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n            uVar4 = (uint)*pbVar8;\n            __ptr = pcVar7;\n            while( true ) {\n              pcVar7 = __ptr;\n              if ((uVar4 - 9 < 2) || (uVar4 == 0x20)) goto LAB_00417b80;\n              if (uVar4 == 0x23) goto LAB_00417d71;\n              ungetc(uVar4,__stream);\n              iVar2 = fscanf(__stream,\"%50s %50s\",&local_b8,&local_78);\n              puVar13 = &local_b8;\n              if (iVar2 < 2) goto LAB_00417d1f;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              lVar11 = (long)puVar13 +\n                       ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_b8);\n              puVar13 = &local_78;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              local_c0 = (long)puVar13 +\n                         ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_78);\n              lVar9 = lVar11 + local_c0;\n              if (local_d0 == 0) {\n                pcVar7 = (char *)malloc(lVar9 + 3);\n              }\n              else {\n                lVar9 = lVar9 + local_d0;\n                pcVar7 = (char *)realloc(__ptr,lVar9 + 3);\n              }\n              local_d0 = lVar9 + 2;\n              if (pcVar7 == (char *)0x0) {\n                pcVar7 = \"\";\n                free(__ptr);\n                FUN_00417f10(__stream);\n                goto LAB_00417b24;\n              }\n              uVar12 = lVar11 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (-2 - lVar11) + (local_d0 - local_c0));\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_b8;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 2));\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_b8;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 4));\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_b8._4_4_,(undefined4)local_b8);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 8));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_b8 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              uVar12 = local_c0 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (local_d0 - local_c0) + -1);\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_78;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 6);\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_78;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 4);\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_78._4_4_,(undefined4)local_78);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)auStack_80 + (uVar12 & 0xffffffff));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_78 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              pbVar8 = (byte *)__stream->_IO_read_ptr;\n              if (pbVar8 < __stream->_IO_read_end) break;\nLAB_00417d0c:\n              uVar4 = __uflow(__stream);\n              __ptr = pcVar7;\n              if (uVar4 == 0xffffffff) goto LAB_00417d1f;\n            }\n          } while( true );\n        }\n        close(iVar2);\n      }\n      goto LAB_00417b1e;\n    }\n  }\n  DAT_00625960 = \"\";\nLAB_004179da:\n  cVar1 = *DAT_00625960;\n  pcVar7 = DAT_00625960;\n  do {\n    if (cVar1 == '\\0') {\nLAB_00417a34:\n      if (*__s1 == '\\0') {\n        __s1 = \"ASCII\";\n      }\n      return __s1;\n    }\n    iVar2 = strcmp(__s1,pcVar7);\n    if ((iVar2 == 0) || ((cVar1 == '*' && (pcVar7[1] == '\\0')))) {\n      sVar6 = strlen(pcVar7);\n      __s1 = pcVar7 + sVar6 + 1;\n      goto LAB_00417a34;\n    }\n    sVar6 = strlen(pcVar7);\n    sVar5 = strlen(pcVar7 + sVar6 + 1);\n    pcVar7 = pcVar7 + sVar6 + 1 + sVar5 + 1;\n    cVar1 = *pcVar7;\n  } while( true );\nLAB_00417d71:\n  do {\n    pbVar8 = (byte *)__stream->_IO_read_ptr;\n    if (pbVar8 < __stream->_IO_read_end) {\n      __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n      uVar4 = (uint)*pbVar8;\n      bVar14 = true;\n    }\n    else {\n      uVar4 = __uflow(__stream);\n      bVar14 = uVar4 != 0xffffffff;\n    }\n  } while ((uVar4 != 10) && (bVar14));\n  if (uVar4 == 0xffffffff) goto LAB_00417d1f;\n  goto LAB_00417b80;\nLAB_00417d1f:\n  FUN_00417f10(__stream);\n  if (local_d0 == 0) {\nLAB_00417b1e:\n    pcVar7 = \"\";\n  }\n  else {\n    pcVar7[local_d0] = '\\0';\n  }\nLAB_00417b24:\n  free(__file);\n  DAT_00625960 = pcVar7;\n  goto LAB_004179da;\n}\n\n",
            "funcName": "FUN_004179a0"
        },
        {
            "funcStartAddr": "0x417f10",
            "funcEndAddr": "0x417f88",
            "decompiledFuncCode": "\nint FUN_00417f10(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_00417f77;\n    }\n    iVar1 = FUN_00417f90(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_00417f77:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n",
            "funcName": "FUN_00417f10"
        },
        {
            "funcStartAddr": "0x417f90",
            "funcEndAddr": "0x417fcb",
            "decompiledFuncCode": "\nvoid FUN_00417f90(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if ((iVar1 != 0) && ((param_1->_flags & 0x100U) != 0)) {\n      FUN_00417fd0(param_1,0,1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00417f90"
        },
        {
            "funcStartAddr": "0x417fd0",
            "funcEndAddr": "0x418026",
            "decompiledFuncCode": "\nulong FUN_00417fd0(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  uint uVar1;\n  int __fd;\n  ulong uVar2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    __fd = fileno(param_1);\n    uVar2 = lseek(__fd,param_2,param_3);\n    if (uVar2 != 0xffffffffffffffff) {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = uVar2;\n      uVar2 = 0;\n    }\n    return uVar2;\n  }\n  uVar1 = fseeko(param_1,param_2,param_3);\n  return (ulong)uVar1;\n}\n\n",
            "funcName": "FUN_00417fd0"
        },
        {
            "funcStartAddr": "0x418030",
            "funcEndAddr": "0x418147",
            "decompiledFuncCode": "\nlong FUN_00418030(ulong param_1,long param_2,int param_3,int param_4,int param_5,uint param_6,\n                 int param_7,int param_8,int param_9,int param_10)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  \n  iVar3 = ((int)((long)param_1 >> 2) + 0x1db) - (uint)((param_1 & 3) == 0);\n  iVar4 = ((int)((long)(int)param_6 >> 2) + 0x1db) - (uint)((param_6 & 3) == 0);\n  iVar2 = iVar3 / 0x19 + (iVar3 % 0x19 >> 0x1f);\n  iVar1 = iVar4 / 0x19 + (iVar4 % 0x19 >> 0x1f);\n  return ((long)param_5 +\n         (((long)param_4 +\n          (((long)param_3 +\n           (((param_2 + (param_1 - (long)(int)param_6) * 0x16d) - (long)param_7) +\n           (long)(((iVar2 >> 2) - (iVar1 >> 2)) + ((iVar3 - iVar4) - (iVar2 - iVar1)))) * 0x18) -\n          (long)param_8) * 0x3c) - (long)param_9) * 0x3c) - (long)param_10;\n}\n\n",
            "funcName": "FUN_00418030"
        },
        {
            "funcStartAddr": "0x418150",
            "funcEndAddr": "0x4181d0",
            "decompiledFuncCode": "\nlong FUN_00418150(void)\n\n{\n  long lVar1;\n  long in_R9;\n  long param_7;\n  \n  if (param_7 != 0) {\n    lVar1 = FUN_00418030();\n    if (!SCARRY8(lVar1,in_R9)) {\n      return lVar1 + in_R9;\n    }\n  }\n  if (-1 < in_R9) {\n    lVar1 = 0x7fffffffffffffff;\n    if (0x7ffffffffffffffd < in_R9) {\n      lVar1 = in_R9 + -1;\n    }\n    return lVar1;\n  }\n  if (in_R9 < -0x7ffffffffffffffe) {\n    return in_R9 + 1;\n  }\n  return -0x8000000000000000;\n}\n\n",
            "funcName": "FUN_00418150"
        },
        {
            "funcStartAddr": "0x4181f0",
            "funcEndAddr": "0x4182a2",
            "decompiledFuncCode": "\nvoid FUN_004181f0(code *param_1,long *param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  long lVar2;\n  long lVar3;\n  long lVar4;\n  long lVar5;\n  long local_30;\n  \n  local_30 = *param_2;\n  lVar2 = (*param_1)(&local_30,param_3);\n  if (lVar2 == 0) {\n    lVar1 = 0;\n    lVar5 = *param_2;\n    if (*param_2 != 0) {\n      while ((lVar4 = lVar1,\n             lVar3 = (ulong)(((uint)lVar4 | (uint)lVar5) & 1) + (lVar5 >> 1) + (lVar4 >> 1),\n             lVar4 == lVar3 || (lVar5 == lVar3))) {\n        local_30 = lVar3;\n        lVar2 = (*param_1)(&local_30,param_3);\n        lVar1 = lVar3;\n        if (lVar2 == 0) {\n          lVar1 = lVar4;\n          lVar5 = lVar3;\n        }\n      }\n      if ((lVar2 == 0) && (lVar4 != 0)) {\n        local_30 = lVar4;\n        (*param_1)(&local_30,param_3);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "funcName": "FUN_004181f0"
        },
        {
            "funcStartAddr": "0x4182b0",
            "funcEndAddr": "0x4186c2",
            "decompiledFuncCode": "\nlong FUN_004182b0(int *param_1,code *param_2,long *param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  int iVar6;\n  long lVar7;\n  undefined8 uVar8;\n  long lVar9;\n  long lVar10;\n  uint uVar11;\n  ulong uVar12;\n  int iVar13;\n  long lVar14;\n  int iVar15;\n  int iVar16;\n  long lVar17;\n  long lVar18;\n  bool bVar19;\n  int local_e0;\n  long local_c8;\n  long local_c0;\n  int local_b8;\n  int iStack_b4;\n  int iStack_b0;\n  int iStack_ac;\n  int local_a8;\n  int iStack_a4;\n  int iStack_a0;\n  int iStack_9c;\n  int local_98;\n  int iStack_94;\n  int iStack_90;\n  int iStack_8c;\n  undefined8 local_88;\n  long local_78 [4];\n  int local_58;\n  \n  iVar1 = *param_1;\n  iVar2 = param_1[1];\n  iVar3 = param_1[2];\n  iVar4 = param_1[8];\n  uVar11 = 0;\n  iVar15 = param_1[4] % 0xc;\n  uVar5 = iVar15 >> 0x1f;\n  uVar12 = (long)(int)(param_1[4] / 0xc + uVar5) + (long)param_1[5];\n  if ((uVar12 & 3) == 0) {\n    uVar11 = 1;\n    if (uVar12 == ((long)uVar12 / 100) * 100) {\n      uVar11 = (uint)(((uint)((long)uVar12 / 100) & 3) == 1);\n    }\n  }\n  iVar13 = 6;\n  lVar14 = (long)param_1[3] +\n           (long)(int)(*(ushort *)\n                        (&DAT_0041fd60 +\n                        ((long)(int)(iVar15 + (uVar5 & 0xc)) + (long)(int)uVar11 * 0xd) * 2) - 1);\n  iVar15 = 0x3b;\n  if (iVar1 < 0x3c) {\n    iVar15 = iVar1;\n  }\n  iVar6 = 0;\n  if (-1 < iVar15) {\n    iVar6 = iVar15;\n  }\n  local_e0 = (int)*param_3;\n  lVar7 = FUN_00418030(uVar12,lVar14,iVar3,iVar2,iVar6,0x46,0,0,0,-local_e0);\n  bVar19 = false;\n  lVar17 = lVar7;\n  lVar18 = lVar7;\n  local_c8 = lVar7;\n  while( true ) {\n    uVar8 = FUN_004181f0(param_2,&local_c8,&local_b8);\n    lVar10 = local_c8;\n    lVar9 = FUN_00418150(uVar12,lVar14,iVar3,iVar2,iVar6,local_c8,uVar8);\n    if (lVar10 == lVar9) break;\n    if ((lVar10 == lVar17) && (lVar10 != lVar18)) {\n      if (local_98 < 0) goto LAB_004184c0;\n      if (iVar4 < 0) {\n        if (bVar19 <= (local_98 != 0)) goto LAB_004184c0;\n      }\n      else if ((iVar4 != 0) != (local_98 != 0)) goto LAB_004184c0;\n    }\n    iVar13 = iVar13 + -1;\n    if (iVar13 == 0) goto LAB_00418570;\n    bVar19 = local_98 != 0;\n    lVar17 = lVar18;\n    lVar18 = lVar10;\n    local_c8 = lVar9;\n  }\n  lVar10 = lVar9;\n  if ((((iVar4 == 0) != (local_98 == 0)) && (-1 < iVar4)) && (-1 < local_98)) {\n    iVar15 = 0x92c70;\n    do {\n      iVar16 = 2;\n      iVar13 = -iVar15;\n      bVar19 = SCARRY8((long)iVar13,lVar10);\n      local_c0 = iVar13 + lVar10;\n      while( true ) {\n        if (!bVar19) {\n          uVar8 = 0x418675;\n          FUN_004181f0(param_2,&local_c0,local_78);\n          if (((iVar4 == 0) == (local_58 == 0)) || (lVar10 = local_c8, local_58 < 0)) {\n            local_c8 = FUN_00418150(uVar12,lVar14,iVar3,iVar2,iVar6,local_c0,local_78);\n            FUN_004181f0(param_2,&local_c8,&local_b8,uVar8);\n            lVar10 = local_c8;\n            goto LAB_004184c0;\n          }\n        }\n        iVar13 = iVar13 + iVar15 * 2;\n        if (iVar16 == 1) break;\n        iVar16 = 1;\n        bVar19 = SCARRY8((long)iVar13,lVar10);\n        local_c0 = iVar13 + lVar10;\n      }\n      iVar15 = iVar15 + 0x92c70;\n    } while (iVar15 != 0x100dc400);\n  }\nLAB_004184c0:\n  *param_3 = lVar10 - (-local_e0 + lVar7);\n  local_c8 = lVar10;\n  if ((local_b8 == iVar1) ||\n     ((lVar14 = (long)iVar1 + ((ulong)(iVar1 < 1 && local_b8 == 0x3c) - (long)iVar6),\n      local_c8 = lVar10 + lVar14, !SCARRY8(lVar10,lVar14) &&\n      (local_78[0] = local_c8, lVar14 = (*param_2)(local_78,&local_b8), lVar14 != 0)))) {\n    *param_1 = local_b8;\n    param_1[1] = iStack_b4;\n    param_1[2] = iStack_b0;\n    param_1[3] = iStack_ac;\n    param_1[4] = local_a8;\n    param_1[5] = iStack_a4;\n    param_1[6] = iStack_a0;\n    param_1[7] = iStack_9c;\n    param_1[8] = local_98;\n    param_1[9] = iStack_94;\n    param_1[10] = iStack_90;\n    param_1[0xb] = iStack_8c;\n    *(undefined8 *)(param_1 + 0xc) = local_88;\n  }\n  else {\nLAB_00418570:\n    local_c8 = -1;\n  }\n  return local_c8;\n}\n\n",
            "funcName": "FUN_004182b0"
        },
        {
            "funcStartAddr": "0x4186f0",
            "funcEndAddr": "0x41870c",
            "decompiledFuncCode": "\nvoid FUN_004186f0(undefined8 param_1)\n\n{\n  tzset();\n  FUN_004182b0(param_1,localtime_r,&DAT_00625968);\n  return;\n}\n\n",
            "funcName": "FUN_004186f0"
        },
        {
            "funcStartAddr": "0x418710",
            "funcEndAddr": "0x41876d",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00418743) */\n/* WARNING: Removing unreachable block (ram,0x00418748) */\n\nvoid FUN_00418710(void)\n\n{\n  __DT_INIT();\n  return;\n}\n\n",
            "funcName": "FUN_00418710"
        },
        {
            "funcStartAddr": "0x418770",
            "funcEndAddr": "0x418771",
            "decompiledFuncCode": "\nvoid FUN_00418770(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00418770"
        },
        {
            "funcStartAddr": "0x418780",
            "funcEndAddr": "0x418798",
            "decompiledFuncCode": "\nvoid FUN_00418780(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,DAT_006243e8);\n  return;\n}\n\n",
            "funcName": "FUN_00418780"
        },
        {
            "funcStartAddr": "0x418798",
            "funcEndAddr": "0x4187b8",
            "decompiledFuncCode": "\nundefined8 FUN_00418798(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  code **ppcVar1;\n  \n  for (ppcVar1 = (code **)&DAT_00623e30; *ppcVar1 != (code *)0xffffffffffffffff;\n      ppcVar1 = ppcVar1 + -1) {\n    (**ppcVar1)();\n  }\n  return param_3;\n}\n\n",
            "funcName": "FUN_00418798"
        }
    ],
    "decompilerName": "Ghidra",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_vdir.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O"
}