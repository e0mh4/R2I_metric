{
    "funcCount": 192,
    "funcInfo": [
        {
            "funcStartAddr": "0x4023a0",
            "funcEndAddr": "0x4023a5",
            "decompiledFuncCode": "\nvoid FUN_004023a0(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004023a0"
        },
        {
            "funcStartAddr": "0x4023a5",
            "funcEndAddr": "0x4023aa",
            "decompiledFuncCode": "\nvoid FUN_004023a5(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004023a5"
        },
        {
            "funcStartAddr": "0x4023aa",
            "funcEndAddr": "0x4023af",
            "decompiledFuncCode": "\nvoid FUN_004023aa(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004023aa"
        },
        {
            "funcStartAddr": "0x4023af",
            "funcEndAddr": "0x4023b4",
            "decompiledFuncCode": "\nvoid FUN_004023af(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004023af"
        },
        {
            "funcStartAddr": "0x4023b9",
            "funcEndAddr": "0x4023be",
            "decompiledFuncCode": "\nvoid FUN_004023b9(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004023b9"
        },
        {
            "funcStartAddr": "0x4023be",
            "funcEndAddr": "0x4023c3",
            "decompiledFuncCode": "\nvoid FUN_004023be(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004023be"
        },
        {
            "funcStartAddr": "0x4023c3",
            "funcEndAddr": "0x4023c8",
            "decompiledFuncCode": "\nvoid FUN_004023c3(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004023c3"
        },
        {
            "funcStartAddr": "0x4023c8",
            "funcEndAddr": "0x4023cd",
            "decompiledFuncCode": "\nvoid FUN_004023c8(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004023c8"
        },
        {
            "funcStartAddr": "0x4023d2",
            "funcEndAddr": "0x4023d7",
            "decompiledFuncCode": "\nvoid FUN_004023d2(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004023d2"
        },
        {
            "funcStartAddr": "0x4023e0",
            "funcEndAddr": "0x4038a9",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nint FUN_004023e0(int param_1,undefined8 *param_2)\n\n{\n  byte bVar1;\n  char cVar2;\n  int iVar3;\n  int iVar4;\n  undefined8 uVar5;\n  char **ppcVar6;\n  undefined8 uVar7;\n  char *pcVar8;\n  int *piVar9;\n  char *pcVar10;\n  char *__s1;\n  size_t sVar11;\n  byte *__s2;\n  void *__ptr;\n  char **ppcVar12;\n  code *pcVar13;\n  ulong uVar14;\n  code *pcVar15;\n  undefined *puVar16;\n  long lVar17;\n  long extraout_RDX;\n  long extraout_RDX_00;\n  ulong extraout_RDX_01;\n  undefined8 extraout_RDX_02;\n  long extraout_RDX_03;\n  undefined8 extraout_RDX_04;\n  undefined8 extraout_RDX_05;\n  undefined8 extraout_RDX_06;\n  long extraout_RDX_07;\n  undefined8 extraout_RDX_08;\n  undefined8 extraout_RDX_09;\n  char *pcVar18;\n  char **ppcVar19;\n  char **ppcVar20;\n  ulong uVar21;\n  undefined4 uVar22;\n  byte *pbVar23;\n  char cVar24;\n  byte *pbVar25;\n  undefined8 *puVar26;\n  undefined8 *in_R10;\n  long lVar27;\n  ulong uVar28;\n  undefined8 *puVar29;\n  char **ppcVar30;\n  bool bVar31;\n  bool bVar32;\n  byte bVar33;\n  undefined auVar34 [16];\n  undefined8 *local_158;\n  char *local_150;\n  char *local_138;\n  size_t local_130;\n  long local_128;\n  long local_120;\n  char **local_118;\n  char **local_108;\n  long local_f8;\n  char *local_f0;\n  char *local_e8 [4];\n  undefined local_c8 [152];\n  \n  bVar33 = 0;\n  bVar31 = false;\n  FUN_004081c0(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\n                 \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\"\n                );\n  textdomain(\"coreutils\");\n  FUN_00410f70(FUN_004058f0);\n  DAT_006176d0 = (char **)0x0;\n  DAT_006176c8 = (char **)0x0;\n  DAT_006176ee = '\\0';\n  DAT_006176ec = '\\0';\n  DAT_006176e8 = 0xffffffff;\n  DAT_006176b9 = '\\0';\n  DAT_006176dd = '\\0';\n  DAT_006176d8 = 0;\n  DAT_006176b8 = '\\0';\n  _DAT_00617680 = 1;\n  uVar5 = dcgettext(0,\"options %s and %s are mutually exclusive\",5);\n  while( true ) {\n    local_c8._0_8_ = (char *)CONCAT44(local_c8._4_4_,0xffffffff);\n    iVar3 = FUN_0040c380(param_1,param_2,\"aB:iF:hHklmPTt:vx:\",&PTR_DAT_00411380,local_c8);\n    pcVar8 = DAT_006178a8;\n    if (iVar3 == -1) break;\n    if (iVar3 == 0x69) {\n      if (DAT_00617660 == 4) {\nLAB_004038fa:\n        puVar16 = &DAT_00411100;\nLAB_004038b4:\n        error(0,0,uVar5,puVar16,\"--output\");\nLAB_00402741:\n        do {\n          iVar3 = FUN_00404930(1);\nLAB_00402750:\n        } while (iVar3 != -0x83);\n        FUN_0040a420(stdout,&DAT_0041103a,\"GNU coreutils\",PTR_DAT_00617560,\"Torbjorn Granlund\",\n                     \"David MacKenzie\",\"Paul Eggert\",0);\n                    /* WARNING: Subroutine does not return */\n        exit(0);\n      }\n      DAT_00617660 = 1;\n    }\n    else if (iVar3 < 0x6a) {\n      if (iVar3 == 0x48) {\n        DAT_006176e8 = 0x90;\n        DAT_006176e0 = 1;\n      }\n      else if (iVar3 < 0x49) {\n        if (iVar3 == -0x82) {\n          FUN_00404930(0);\n          goto switchD_00402919_caseD_5;\n        }\n        if (iVar3 < -0x81) goto LAB_00402750;\n        if (iVar3 != 0x42) {\n          if (iVar3 == 0x46) goto LAB_00402629;\n          goto LAB_00402741;\n        }\n        iVar3 = FUN_00407980(DAT_006178a8,&DAT_006176e8,&DAT_006176e0);\n        if (iVar3 != 0) {\n          iVar3 = FUN_0040a820(iVar3,(ulong)local_c8._0_8_ & 0xffffffff,0x42,&PTR_DAT_00411380,\n                               DAT_006178a8);\n          goto LAB_004026e0;\n        }\n      }\n      else if (iVar3 == 0x54) {\n        if (DAT_00617660 == 4) goto LAB_004038a9;\n        DAT_006176b9 = '\\x01';\n      }\n      else if (iVar3 < 0x55) {\n        if (iVar3 != 0x50) goto LAB_00402741;\n        if (DAT_00617660 == 4) {\n          puVar16 = &DAT_00411106;\n          goto LAB_004038b4;\n        }\n        bVar31 = true;\n      }\n      else if (iVar3 == 0x61) {\n        DAT_006176ee = '\\x01';\n      }\n      else {\n        if (iVar3 != 0x68) goto LAB_00402741;\n        DAT_006176e8 = 0xb0;\n        DAT_006176e0 = 1;\n      }\n    }\n    else if (iVar3 != 0x76) {\n      if (iVar3 < 0x77) {\n        if (iVar3 == 0x6c) {\n          DAT_006176ed = '\\x01';\n        }\n        else if (iVar3 < 0x6d) {\n          if (iVar3 != 0x6b) goto LAB_00402741;\n          DAT_006176e8 = 0;\n          DAT_006176e0 = 0x400;\n        }\n        else if (iVar3 == 0x6d) {\n          DAT_006176e8 = 0;\n          DAT_006176e0 = 0x100000;\n        }\n        else {\n          if (iVar3 != 0x74) goto LAB_00402741;\nLAB_00402629:\n          ppcVar6 = (char **)FUN_0040a560(0x10);\n          *ppcVar6 = pcVar8;\n          ppcVar6[1] = (char *)DAT_006176d0;\n          DAT_006176d0 = ppcVar6;\n        }\n      }\n      else if (iVar3 == 0x81) {\n        DAT_006176dc = '\\x01';\n      }\n      else if (iVar3 < 0x82) {\n        if (iVar3 == 0x78) {\n          ppcVar6 = (char **)FUN_0040a560(0x10);\n          *ppcVar6 = pcVar8;\n          ppcVar6[1] = (char *)DAT_006176c8;\n          DAT_006176c8 = ppcVar6;\n        }\n        else {\n          if (iVar3 != 0x80) goto LAB_00402741;\n          DAT_006176dc = '\\0';\n        }\n      }\n      else if (iVar3 == 0x82) {\n        DAT_006176b8 = '\\x01';\n      }\n      else {\nLAB_004026e0:\n        if (iVar3 != 0x83) goto LAB_00402741;\n        if (DAT_00617660 == 1) goto LAB_004038fa;\n        if ((DAT_00617660 == 0) && (bVar31)) {\n          error(0,0,uVar5,&DAT_00411106,\"--output\");\n          FUN_00404930(1);\n          goto LAB_004038e8;\n        }\n        if (DAT_006176b9 != '\\0') {\nLAB_004038a9:\n          puVar16 = &DAT_00411103;\n          goto LAB_004038b4;\n        }\n        DAT_00617660 = 4;\n        if (DAT_006178a8 != (char *)0x0) {\n          FUN_00404d60();\n        }\n      }\n    }\n  }\n  if (DAT_006176e8 == 0xffffffff) {\n    if (bVar31) {\n      DAT_006176e8 = 0;\n      pcVar8 = getenv(\"POSIXLY_CORRECT\");\n      DAT_006176e0 = (ulong)(-(uint)(pcVar8 == (char *)0x0) & 0x200) + 0x200;\n    }\n    else {\n      pcVar8 = getenv(\"DF_BLOCK_SIZE\");\n      FUN_00407980(pcVar8,&DAT_006176e8,&DAT_006176e0);\n    }\n  }\n  if ((DAT_00617660 != 1) && (DAT_00617660 != 4)) {\n    if ((DAT_006176e8 & 0x10) == 0) {\n      if (bVar31) {\n        DAT_00617660 = 3;\n      }\n    }\n    else {\n      DAT_00617660 = 2;\n    }\n  }\n  bVar31 = false;\n  ppcVar6 = DAT_006176d0;\n  if (DAT_006176d0 != (char **)0x0) {\n    do {\n      if (DAT_006176c8 != (char **)0x0) {\n        pcVar8 = *ppcVar6;\n        ppcVar19 = DAT_006176c8;\n        do {\n          iVar3 = strcmp(pcVar8,*ppcVar19);\n          if (iVar3 == 0) {\n            bVar31 = true;\n            uVar5 = FUN_00409de0(pcVar8);\n            uVar7 = dcgettext(0,\"file system type %s both selected and excluded\",5);\n            error(0,0,uVar7,uVar5);\n            break;\n          }\n          ppcVar19 = (char **)ppcVar19[1];\n        } while (ppcVar19 != (char **)0x0);\n      }\n      ppcVar6 = (char **)ppcVar6[1];\n    } while (ppcVar6 != (char **)0x0);\n    if (bVar31) {\n      return 1;\n    }\n  }\n  if ((int)DAT_006175e0 < param_1) {\n    local_f8 = FUN_0040a560((long)(int)(param_1 - DAT_006175e0) * 0x90);\n    for (lVar27 = (long)(int)DAT_006175e0; iVar3 = (int)lVar27, iVar3 < param_1; lVar27 = lVar27 + 1\n        ) {\n      iVar4 = __xstat(1,(char *)param_2[lVar27],\n                      (stat *)((long)(int)(iVar3 - DAT_006175e0) * 0x90 + local_f8));\n      if (iVar4 == 0) {\n        if (((*(uint *)(local_f8 + 0x18 + (long)(int)(iVar3 - DAT_006175e0) * 0x90) & 0xf000) !=\n             0x1000) && (iVar3 = open((char *)param_2[lVar27],0x100), -1 < iVar3)) {\n          close(iVar3);\n        }\n      }\n      else {\n        uVar5 = FUN_00409c60(0,3,param_2[lVar27]);\n        piVar9 = __errno_location();\n        error(0,*piVar9,&DAT_00413b3f,uVar5);\n        DAT_006176d8 = 1;\n        param_2[lVar27] = 0;\n      }\n    }\n  }\n  cVar24 = '\\x01';\n  if ((((DAT_006176d0 == (char **)0x0) && (DAT_006176c8 == (char **)0x0)) && (DAT_006176b9 == '\\0'))\n     && (DAT_0061737c == '\\0')) {\n    cVar24 = DAT_006176ed;\n  }\n  DAT_006176c0 = (char **)FUN_0040c670(cVar24);\n  if (DAT_006176c0 == (char **)0x0) {\n    if ((((int)DAT_006175e0 < param_1) && (DAT_006176ee == '\\0')) &&\n       ((DAT_006176ed == '\\0' && ((DAT_006176d0 == (char **)0x0 && (DAT_006176c8 == (char **)0x0))))\n       )) {\n      uVar22 = 0;\n      pcVar8 = (char *)dcgettext(0,\"Warning: \",5);\n    }\n    else {\n      uVar22 = 1;\n      pcVar8 = \"\";\n    }\n    uVar5 = dcgettext(0,\"cannot read table of mounted file systems\",5);\n    piVar9 = __errno_location();\n    error(uVar22,*piVar9,&DAT_0041115f,pcVar8,uVar5);\n  }\n  if (DAT_006176dc != '\\0') {\n    sync();\n  }\n  switch(DAT_00617660) {\n  case 0:\n    FUN_00403e20(0,0);\n    if (DAT_006176b9 != '\\0') {\n      FUN_00403e20(1,0);\n    }\n    FUN_00403e20(2,0);\n    FUN_00403e20(3,0);\n    FUN_00403e20(4,0);\n    pcVar8 = (char *)0x0;\n    break;\n  case 1:\n    FUN_00403e20(0,0);\n    if (DAT_006176b9 != '\\0') {\n      FUN_00403e20(1,0);\n    }\n    FUN_00403e20(6,0);\n    FUN_00403e20(7,0);\n    FUN_00403e20(8,0);\n    FUN_00403e20(9,0);\n    FUN_00403e20(10,0);\n    goto LAB_00402ba2;\n  case 2:\n    FUN_00403e20(0,0);\n    if (DAT_006176b9 != '\\0') {\n      FUN_00403e20(1,0);\n    }\n    FUN_00403e20(2,&DAT_004110c8);\n    FUN_00403e20(3,0);\n    FUN_00403e20(4,\"Avail\");\n    pcVar8 = (char *)0x0;\n    break;\n  case 3:\n    FUN_00403e20(0,0);\n    if (DAT_006176b9 != '\\0') {\n      FUN_00403e20(1,0);\n    }\n    FUN_00403e20(2,0);\n    FUN_00403e20(3,0);\n    FUN_00403e20(4,0);\n    pcVar8 = \"Capacity\";\n    break;\n  case 4:\n    if (DAT_00617650 == 0) {\n      FUN_00404d60(\"source,fstype,itotal,iused,iavail,ipcent,size,used,avail,pcent,file,target\");\n    }\n    goto LAB_00402ba2;\n  default:\nswitchD_00402919_caseD_5:\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"!\\\"invalid header_mode\\\"\",\"src/df.c\",0x1f0,\"get_field_list\");\n  }\n  FUN_00403e20(5,pcVar8);\n  FUN_00403e20(10,0);\nLAB_00402ba2:\n  FUN_00403ba0();\n  cVar24 = DAT_006176ee;\n  local_158 = param_2;\n  if (param_1 <= (int)DAT_006175e0) {\n    iVar3 = 0;\n    for (ppcVar6 = DAT_006176c0; ppcVar6 != (char **)0x0; ppcVar6 = (char **)ppcVar6[6]) {\n      iVar3 = iVar3 + 1;\n    }\n    pcVar15 = FUN_00403a00;\n    auVar34 = FUN_00406460((long)iVar3,0,FUN_004039f0,FUN_00403a00,FUN_00403ac0);\n    DAT_006176f0 = SUB168(auVar34,0);\n    if (DAT_006176f0 == 0) {\nLAB_004038e8:\n                    /* WARNING: Subroutine does not return */\n      FUN_0040a7b0();\n    }\n    ppcVar19 = (char **)0x0;\n    ppcVar20 = DAT_006176c0;\n    do {\n      if (ppcVar20 == (char **)0x0) {\n        DAT_006176f0 = SUB168(auVar34,0);\n        ppcVar20 = DAT_006176c0;\n        if (cVar24 == '\\0') {\n          DAT_006176c0 = (char **)0x0;\n          while (ppcVar19 != (char **)0x0) {\n            ppcVar20 = (char **)ppcVar19[1];\n            ppcVar19 = (char **)ppcVar19[2];\n            cVar24 = '\\x01';\n            ppcVar20[6] = (char *)ppcVar6;\n            ppcVar6 = ppcVar20;\n          }\n          if (cVar24 != '\\0') {\n            DAT_006176c0 = ppcVar6;\n          }\n          FUN_004066a0(DAT_006176f0);\n          auVar34 = ZEXT816(extraout_RDX_01) << 0x40;\n          ppcVar20 = DAT_006176c0;\n        }\n        do {\n          DAT_006176f0 = SUB168(auVar34,0);\n          if (ppcVar20 == (char **)0x0) goto LAB_0040318e;\n          pcVar13 = (code *)0x0;\n          FUN_00403f10(*ppcVar20,ppcVar20[1],0,0,ppcVar20[3],*(byte *)(ppcVar20 + 5) & 1,\n                       *(byte *)(ppcVar20 + 5) >> 1 & 1,0,1,pcVar15);\n          auVar34 = CONCAT88(extraout_RDX_02,DAT_006176f0);\n          pcVar15 = pcVar13;\n          ppcVar20 = (char **)ppcVar20[6];\n        } while( true );\n      }\n      if ((((*(byte *)(ppcVar20 + 5) & 2) == 0) || (DAT_006176ed == '\\0')) &&\n         (((*(byte *)(ppcVar20 + 5) & 1) == 0 || ((DAT_006176ee != '\\0' || (DAT_006176ec != '\\0'))))\n         )) {\n        pcVar8 = ppcVar20[3];\n        cVar2 = FUN_00403a10(pcVar8);\n        if ((cVar2 == '\\0') ||\n           ((cVar2 = FUN_00403a60(pcVar8), cVar2 != '\\0' ||\n            (iVar3 = __xstat(1,ppcVar20[1],(stat *)local_c8), iVar3 == -1)))) goto LAB_00403570;\n        if (DAT_006176f0 == 0) goto LAB_0040357c;\n        local_e8[0] = local_c8._0_8_;\n        lVar27 = FUN_004061f0(DAT_006176f0,local_e8);\n        if (lVar27 == 0) goto LAB_0040357c;\n        ppcVar12 = *(char ***)(lVar27 + 8);\n        if ((ppcVar12[2] == (char *)0x0) || (ppcVar20[2] == (char *)0x0)) {\n          local_158 = (undefined8 *)((ulong)local_158 & 0xffffffff00000000);\n        }\n        else {\n          uVar28 = 0xffffffffffffffff;\n          pcVar8 = ppcVar12[2];\n          do {\n            if (uVar28 == 0) break;\n            uVar28 = uVar28 - 1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + (ulong)bVar33 * -2 + 1;\n          } while (cVar2 != '\\0');\n          pcVar15 = (code *)0xffffffffffffffff;\n          pcVar8 = ppcVar20[2];\n          do {\n            if (pcVar15 == (code *)0x0) break;\n            pcVar15 = pcVar15 + -1;\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + (ulong)bVar33 * -2 + 1;\n          } while (cVar2 != '\\0');\n          local_158 = (undefined8 *)\n                      ((ulong)local_158 & 0xffffffff00000000 |\n                      (ulong)(~uVar28 - 1 < ~(ulong)pcVar15 - 1));\n        }\n        pcVar8 = *ppcVar20;\n        if ((((DAT_006176b8 == '\\0') && ((*(byte *)(ppcVar20 + 5) & 2) != 0)) &&\n            ((*(byte *)(ppcVar12 + 5) & 2) != 0)) && (iVar3 = strcmp(*ppcVar12,pcVar8), iVar3 != 0))\n        goto LAB_0040357c;\n        pcVar10 = strchr(pcVar8,0x2f);\n        uVar5 = extraout_RDX_04;\n        if ((pcVar10 == (char *)0x0) ||\n           (pcVar10 = strchr(*ppcVar12,0x2f), uVar5 = extraout_RDX_05, pcVar10 != (char *)0x0)) {\n          puVar29 = (undefined8 *)ppcVar12[1];\n          uVar28 = 0xffffffffffffffff;\n          pcVar10 = ppcVar20[1];\n          puVar26 = puVar29;\n          do {\n            if (uVar28 == 0) break;\n            uVar28 = uVar28 - 1;\n            cVar2 = *(char *)puVar26;\n            puVar26 = (undefined8 *)((long)puVar26 + (ulong)bVar33 * -2 + 1);\n          } while (cVar2 != '\\0');\n          pcVar15 = (code *)0xffffffffffffffff;\n          pcVar18 = pcVar10;\n          do {\n            if (pcVar15 == (code *)0x0) break;\n            pcVar15 = pcVar15 + -1;\n            cVar2 = *pcVar18;\n            pcVar18 = pcVar18 + (ulong)bVar33 * -2 + 1;\n          } while (cVar2 != '\\0');\n          in_R10 = puVar29;\n          if (((~(ulong)pcVar15 - 1 < ~uVar28 - 1) && ((int)local_158 == 0)) ||\n             ((iVar3 = strcmp(*ppcVar12,pcVar8), uVar5 = extraout_RDX_08, ppcVar30 = ppcVar20,\n              local_158 = puVar29, iVar3 != 0 &&\n              (in_R10 = puVar29, iVar3 = strcmp(pcVar10,(char *)puVar29), uVar5 = extraout_RDX_09,\n              iVar3 == 0)))) goto LAB_00403743;\n        }\n        else {\nLAB_00403743:\n          *(char ***)(lVar27 + 8) = ppcVar20;\n          ppcVar30 = ppcVar12;\n        }\n        ppcVar20 = (char **)ppcVar20[6];\n        ppcVar12 = ppcVar19;\n        if (cVar24 == '\\0') {\n          FUN_0040c620(ppcVar30);\n          uVar5 = extraout_RDX_06;\n        }\n      }\n      else {\nLAB_00403570:\n        local_c8._0_8_ = ppcVar20[4];\nLAB_0040357c:\n        ppcVar12 = (char **)FUN_0040a560(0x18);\n        lVar27 = DAT_006176f0;\n        ppcVar12[1] = (char *)ppcVar20;\n        ppcVar12[2] = (char *)ppcVar19;\n        *ppcVar12 = local_c8._0_8_;\n        auVar34 = FUN_00406c00(lVar27,ppcVar12);\n        uVar5 = SUB168(auVar34 >> 0x40,0);\n        if (SUB168(auVar34,0) == 0) goto LAB_004038e8;\n        ppcVar20 = (char **)ppcVar20[6];\n      }\n      auVar34 = CONCAT88(uVar5,DAT_006176f0);\n      ppcVar19 = ppcVar12;\n    } while( true );\n  }\n  DAT_006176ec = '\\x01';\n  local_128 = (long)(int)DAT_006175e0 + 1;\n  lVar17 = (ulong)(~DAT_006175e0 + param_1) + local_128;\n  lVar27 = (long)(int)DAT_006175e0;\n  local_120 = lVar17;\nLAB_00402bd8:\n  local_138 = (char *)local_158[lVar27];\n  if (local_138 == (char *)0x0) goto LAB_00402fb8;\n  local_118 = (char **)((long)(int)((int)lVar27 - DAT_006175e0) * 0x90 + local_f8);\n  if ((*(uint *)(local_118 + 3) & 0xb000) != 0x2000) goto LAB_00402da8;\n  local_f0 = canonicalize_file_name(local_138);\n  if (local_f0 == (char *)0x0) goto LAB_004034bf;\n  local_150 = local_f0;\n  if (*local_f0 != '/') {\n    local_150 = local_138;\n  }\n  do {\n    if (DAT_006176c0 == (char **)0x0) {\n      free(local_f0);\nLAB_00402da8:\n      __s2 = (byte *)canonicalize_file_name(local_138);\n      ppcVar6 = DAT_006176c0;\n      if ((__s2 == (byte *)0x0) || (*__s2 != 0x2f)) {\n        free(__s2);\n        if (ppcVar6 != (char **)0x0) goto LAB_00402ddb;\n      }\n      else {\n        uVar28 = 0xffffffffffffffff;\n        pbVar23 = __s2;\n        do {\n          if (uVar28 == 0) break;\n          uVar28 = uVar28 - 1;\n          bVar1 = *pbVar23;\n          pbVar23 = pbVar23 + (ulong)bVar33 * -2 + 1;\n        } while (bVar1 != 0);\n        if (DAT_006176c0 != (char **)0x0) {\n          puVar29 = (undefined8 *)0x0;\n          ppcVar20 = (char **)0x0;\n          bVar31 = true;\n          ppcVar19 = DAT_006176c0;\n          do {\n            bVar32 = false;\n            lVar27 = 5;\n            pbVar23 = (byte *)ppcVar19[3];\n            pbVar25 = &DAT_00411184;\n            do {\n              if (lVar27 == 0) break;\n              lVar27 = lVar27 + -1;\n              bVar32 = *pbVar23 < *pbVar25;\n              bVar31 = *pbVar23 == *pbVar25;\n              pbVar23 = pbVar23 + (ulong)bVar33 * -2 + 1;\n              pbVar25 = pbVar25 + (ulong)bVar33 * -2 + 1;\n            } while (bVar31);\n            if (((!bVar32 && !bVar31) != bVar32) &&\n               (((ppcVar20 == (char **)0x0 || ((*(byte *)(ppcVar20 + 5) & 1) != 0)) ||\n                ((*(byte *)(ppcVar19 + 5) & 1) == 0)))) {\n              uVar14 = 0xffffffffffffffff;\n              pcVar8 = ppcVar19[1];\n              do {\n                if (uVar14 == 0) break;\n                uVar14 = uVar14 - 1;\n                cVar24 = *pcVar8;\n                pcVar8 = pcVar8 + (ulong)bVar33 * -2 + 1;\n              } while (cVar24 != '\\0');\n              in_R10 = (undefined8 *)(~uVar14 - 1);\n              if ((puVar29 <= in_R10) && (in_R10 <= (undefined8 *)(~uVar28 - 1))) {\n                if (in_R10 == (undefined8 *)0x1) {\n                  ppcVar20 = ppcVar19;\n                  puVar29 = (undefined8 *)0x1;\n                }\n                else if ((((undefined8 *)(~uVar28 - 1) == in_R10) || (__s2[~uVar14 - 1] == 0x2f)) &&\n                        (iVar3 = strncmp(ppcVar19[1],(char *)__s2,(size_t)in_R10), iVar3 == 0)) {\n                  ppcVar20 = ppcVar19;\n                  puVar29 = in_R10;\n                }\n              }\n            }\n            ppcVar19 = (char **)ppcVar19[6];\n            bVar31 = ppcVar19 == (char **)0x0;\n          } while (!bVar31);\n          free(__s2);\n          if (ppcVar20 == (char **)0x0) {\nLAB_00402ddb:\n            ppcVar19 = (char **)0x0;\n            do {\n              pcVar8 = ppcVar6[4];\n              if (ppcVar6[4] == (char *)0xffffffffffffffff) {\n                __s2 = (byte *)0x1;\n                iVar3 = __xstat(1,ppcVar6[1],(stat *)local_c8);\n                if (iVar3 == 0) {\n                  ppcVar6[4] = local_c8._0_8_;\n                  pcVar8 = local_c8._0_8_;\n                }\n                else {\n                  piVar9 = __errno_location();\n                  if (*piVar9 == 5) {\n                    uVar5 = FUN_00409c60(0,3,ppcVar6[1]);\n                    __s2 = (byte *)0x0;\n                    error(0,*piVar9,&DAT_00413b3f,uVar5);\n                    DAT_006176d8 = 1;\n                  }\n                  ppcVar6[4] = (char *)0xfffffffffffffffe;\n                  pcVar8 = (char *)0xfffffffffffffffe;\n                }\n              }\n              bVar31 = *local_118 < pcVar8;\n              bVar32 = *local_118 == pcVar8;\n              ppcVar20 = ppcVar19;\n              if (bVar32) {\n                lVar27 = 5;\n                pbVar23 = (byte *)ppcVar6[3];\n                pbVar25 = &DAT_00411184;\n                do {\n                  __s2 = pbVar25;\n                  if (lVar27 == 0) break;\n                  lVar27 = lVar27 + -1;\n                  __s2 = pbVar25 + (ulong)bVar33 * -2 + 1;\n                  bVar31 = *pbVar23 < *pbVar25;\n                  bVar32 = *pbVar23 == *pbVar25;\n                  pbVar23 = pbVar23 + (ulong)bVar33 * -2 + 1;\n                  pbVar25 = __s2;\n                } while (bVar32);\n                if (((!bVar31 && !bVar32) != bVar31) &&\n                   (((ppcVar19 == (char **)0x0 || ((*(byte *)(ppcVar19 + 5) & 1) != 0)) ||\n                    ((*(byte *)(ppcVar6 + 5) & 1) == 0)))) {\n                  __s2 = (byte *)0x1;\n                  iVar3 = __xstat(1,ppcVar6[1],(stat *)local_c8);\n                  if ((iVar3 != 0) || (ppcVar20 = ppcVar6, local_c8._0_8_ != ppcVar6[4])) {\n                    ppcVar6[4] = (char *)0xfffffffffffffffe;\n                    ppcVar20 = ppcVar19;\n                  }\n                }\n              }\n              ppcVar6 = (char **)ppcVar6[6];\n              ppcVar19 = ppcVar20;\n            } while (ppcVar6 != (char **)0x0);\n            if (ppcVar20 == (char **)0x0) goto LAB_00402f72;\n          }\n          else {\n            __s2 = (byte *)0x1;\n            iVar3 = __xstat(1,ppcVar20[1],(stat *)local_c8);\n            if ((iVar3 != 0) || (local_c8._0_8_ != *local_118)) goto LAB_00402ddb;\n          }\n          FUN_00403f10(*ppcVar20,ppcVar20[1],local_138,local_138,ppcVar20[3],\n                       *(byte *)(ppcVar20 + 5) & 1,*(byte *)(ppcVar20 + 5) >> 1 & 1,0,0,__s2);\n          lVar17 = extraout_RDX_00;\n          goto LAB_00402fb8;\n        }\n        free(__s2);\n      }\nLAB_00402f72:\n      ppcVar6 = local_118;\n      auVar34 = FUN_00404ed0(local_138);\n      lVar17 = SUB168(auVar34 >> 0x40,0);\n      __ptr = SUB168(auVar34,0);\n      if (__ptr != (void *)0x0) {\n        FUN_00403f10(0,__ptr,local_138,0,0,0,0,0,0,ppcVar6);\n        free(__ptr);\n        lVar17 = extraout_RDX;\n      }\n    }\n    else {\n      local_108 = (char **)0x0;\n      bVar31 = false;\n      local_130 = 0xffffffffffffffff;\n      bVar32 = false;\n      ppcVar6 = DAT_006176c0;\n      do {\n        pcVar8 = *ppcVar6;\n        pcVar10 = canonicalize_file_name(pcVar8);\n        if ((pcVar10 != (char *)0x0) && (*pcVar10 == '/')) {\n          pcVar8 = pcVar10;\n        }\n        iVar3 = strcmp(local_150,pcVar8);\n        if (iVar3 == 0) {\n          pcVar18 = ppcVar6[1];\n          ppcVar20 = (char **)0x0;\n          ppcVar19 = DAT_006176c0;\n          if (DAT_006176c0 == (char **)0x0) {\nLAB_00402fef:\n            __s1 = (char *)0x0;\nLAB_00402d36:\n            sVar11 = strlen(pcVar18);\n            bVar31 = (bool)(bVar32 ^ 1U | sVar11 < local_130);\n            if (bVar31) {\n              iVar3 = __xstat(1,pcVar18,(stat *)local_c8);\n              if (iVar3 == 0) {\nLAB_00403043:\n                local_130 = sVar11;\n                local_108 = ppcVar6;\n                bVar32 = bVar31;\n                if (sVar11 == 1) {\n                  free(__s1);\n                  free(pcVar10);\n                  free(local_f0);\n                  goto LAB_00403453;\n                }\n              }\n              else if (((bool)(bVar32 ^ 1U)) && (sVar11 < local_130)) {\n                bVar31 = false;\n                goto LAB_00403043;\n              }\n              bVar31 = false;\n            }\n            else {\n              bVar32 = true;\n            }\n          }\n          else {\n            do {\n              iVar3 = strcmp(ppcVar19[1],pcVar18);\n              if (iVar3 == 0) {\n                ppcVar20 = ppcVar19;\n              }\n              ppcVar12 = ppcVar19 + 6;\n              ppcVar19 = (char **)*ppcVar12;\n            } while ((char **)*ppcVar12 != (char **)0x0);\n            if (ppcVar20 == (char **)0x0) goto LAB_00402fef;\n            __s1 = canonicalize_file_name(*ppcVar20);\n            if ((__s1 == (char *)0x0) || (*__s1 != '/')) {\n              free(__s1);\n              __s1 = (char *)FUN_0040a790(*ppcVar20);\n              if (__s1 == (char *)0x0) {\n                pcVar18 = ppcVar6[1];\n                goto LAB_00402fef;\n              }\n            }\n            iVar3 = strcmp(__s1,pcVar8);\n            if (iVar3 == 0) {\n              pcVar18 = ppcVar6[1];\n              goto LAB_00402d36;\n            }\n            bVar31 = true;\n          }\n          free(__s1);\n        }\n        free(pcVar10);\n        ppcVar6 = (char **)ppcVar6[6];\n      } while (ppcVar6 != (char **)0x0);\n      free(local_f0);\n      if (local_108 == (char **)0x0) {\n        if (!bVar31) goto LAB_00402da8;\n        uVar5 = FUN_00409b90(4,local_138);\n        uVar7 = dcgettext(0,\"cannot access %s: over-mounted by another device\",5);\n        error(0,0,uVar7,uVar5);\n        DAT_006176d8 = 1;\n        lVar17 = extraout_RDX_07;\n      }\n      else {\nLAB_00403453:\n        FUN_00403f10(*local_108,local_108[1],local_138,0,local_108[3],*(byte *)(local_108 + 5) & 1,\n                     *(byte *)(local_108 + 5) >> 1 & 1,0,0,in_R10);\n        lVar17 = extraout_RDX_03;\n      }\n    }\nLAB_00402fb8:\n    auVar34 = CONCAT88(lVar17,DAT_006176f0);\n    if (local_120 != local_128) break;\nLAB_0040318e:\n    DAT_006176f0 = SUB168(auVar34,0);\n    if (DAT_006176dd != '\\0') {\n      if (DAT_006176b8 != '\\0') {\n        pcVar8 = \"-\";\n        if (DAT_0061734c == '\\0') {\n          pcVar8 = \"total\";\n        }\n        FUN_00403f10(\"total\",pcVar8,0,0,0,0,0,&DAT_00617680,0,SUB168(auVar34 >> 0x40,0));\n      }\n      if (DAT_00617640 == 0) {\n        return DAT_006176d8;\n      }\n      uVar28 = 0;\n      do {\n        if (DAT_00617650 != 0) {\n          uVar21 = 0;\n          uVar5 = **(undefined8 **)(DAT_00617648 + uVar28 * 8);\n          uVar14 = DAT_00617650;\n          while( true ) {\n            lVar27 = uVar21 * 8;\n            lVar17 = *(long *)(DAT_00617658 + uVar21 * 8);\n            local_c8._0_8_ = *(char **)(lVar17 + 0x20);\n            pcVar10 = (char *)FUN_00407f30(uVar5,local_c8,*(undefined4 *)(lVar17 + 0x28),\n                                           (ulong)(uVar21 == uVar14 - 1) << 3);\n            pcVar8 = pcVar10;\n            if (pcVar10 == (char *)0x0) {\n              pcVar8 = *(char **)(*(long *)(DAT_00617648 + uVar28 * 8) + uVar21 * 8);\n            }\n            fputs_unlocked(pcVar8,stdout);\n            uVar21 = uVar21 + 1;\n            free(pcVar10);\n            uVar14 = DAT_00617650;\n            if (DAT_00617650 <= uVar21) break;\n            uVar5 = *(undefined8 *)(*(long *)(DAT_00617648 + uVar28 * 8) + 8 + lVar27);\n            if (uVar21 != 0) {\n              pcVar8 = stdout->_IO_write_ptr;\n              if (pcVar8 < stdout->_IO_write_end) {\n                stdout->_IO_write_ptr = pcVar8 + 1;\n                *pcVar8 = ' ';\n              }\n              else {\n                __overflow(stdout,0x20);\n                uVar14 = DAT_00617650;\n              }\n            }\n          }\n        }\n        pcVar8 = stdout->_IO_write_ptr;\n        if (pcVar8 < stdout->_IO_write_end) {\n          stdout->_IO_write_ptr = pcVar8 + 1;\n          *pcVar8 = '\\n';\n        }\n        else {\n          __overflow(stdout,10);\n        }\n        uVar28 = uVar28 + 1;\n      } while (uVar28 < DAT_00617640);\n      return DAT_006176d8;\n    }\n    if (DAT_006176d8 != 0) {\n      return DAT_006176d8;\n    }\n    uVar5 = dcgettext(0,\"no file systems processed\",5);\n    error(1,0,uVar5);\nLAB_004034bf:\n    local_150 = local_138;\n  } while( true );\n  lVar27 = local_128;\n  local_128 = local_128 + 1;\n  goto LAB_00402bd8;\n}\n\n",
            "funcName": "FUN_004023e0"
        },
        {
            "funcStartAddr": "0x403910",
            "funcEndAddr": "0x40393b",
            "decompiledFuncCode": "\nvoid FUN_00403910(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00616ff0)\n            (FUN_004023e0,unaff_retaddr,&stack0x00000008,FUN_00410f00,FUN_00410f60,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "funcName": "FUN_00403910"
        },
        {
            "funcStartAddr": "0x40393b",
            "funcEndAddr": "0x40395a",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00403948) */\n/* WARNING: Removing unreachable block (ram,0x00403952) */\n\nvoid FUN_0040393b(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_0040393b"
        },
        {
            "funcStartAddr": "0x40395a",
            "funcEndAddr": "0x403991",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00403989) */\n\nvoid FUN_0040395a(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_0040395a"
        },
        {
            "funcStartAddr": "0x403991",
            "funcEndAddr": "0x4039e8",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004039c6) */\n\nvoid FUN_00403991(void)\n\n{\n  if (DAT_00617628 != '\\0') {\n    return;\n  }\n  FUN_0040393b();\n  DAT_00617628 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00403991"
        },
        {
            "funcStartAddr": "0x4039e8",
            "funcEndAddr": "0x4039ed",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00403989) */\n\nvoid thunk_FUN_0040395a(void)\n\n{\n  return;\n}\n\n",
            "funcName": "thunk_4039e8"
        },
        {
            "funcStartAddr": "0x4039f0",
            "funcEndAddr": "0x4039fc",
            "decompiledFuncCode": "\nulong FUN_004039f0(ulong *param_1,ulong param_2)\n\n{\n  return *param_1 % param_2;\n}\n\n",
            "funcName": "FUN_004039f0"
        },
        {
            "funcStartAddr": "0x403a00",
            "funcEndAddr": "0x403a0a",
            "decompiledFuncCode": "\nulong FUN_00403a00(ulong *param_1,ulong *param_2)\n\n{\n  return *param_2 & 0xffffffffffffff00 | (ulong)(*param_1 == *param_2);\n}\n\n",
            "funcName": "FUN_00403a00"
        },
        {
            "funcStartAddr": "0x403a10",
            "funcEndAddr": "0x403a5e",
            "decompiledFuncCode": "\nulong FUN_00403a10(char *param_1)\n\n{\n  char **ppcVar1;\n  int iVar2;\n  char **ppcVar3;\n  ulong unaff_R12;\n  bool bVar4;\n  \n  bVar4 = DAT_006176d0 == (char **)0x0;\n  ppcVar3 = DAT_006176d0;\n  if (param_1 != (char *)0x0 && !bVar4) {\n    do {\n      iVar2 = strcmp(param_1,*ppcVar3);\n      if (iVar2 == 0) {\n        return 1;\n      }\n      ppcVar1 = ppcVar3 + 1;\n      ppcVar3 = (char **)*ppcVar1;\n    } while ((char **)*ppcVar1 != (char **)0x0);\n  }\n  return unaff_R12 & 0xffffff00 | (ulong)(param_1 == (char *)0x0 || bVar4);\n}\n\n",
            "funcName": "FUN_00403a10"
        },
        {
            "funcStartAddr": "0x403a60",
            "funcEndAddr": "0x403ab9",
            "decompiledFuncCode": "\nulong FUN_00403a60(char *param_1)\n\n{\n  char **ppcVar1;\n  int iVar2;\n  char **ppcVar3;\n  bool bVar4;\n  ulong unaff_R12;\n  \n  bVar4 = param_1 == (char *)0x0 || DAT_006176c8 == (char **)0x0;\n  ppcVar3 = DAT_006176c8;\n  if (bVar4) {\n    return 0;\n  }\n  do {\n    iVar2 = strcmp(param_1,*ppcVar3);\n    if (iVar2 == 0) {\n      return 1;\n    }\n    ppcVar1 = ppcVar3 + 1;\n    ppcVar3 = (char **)*ppcVar1;\n  } while ((char **)*ppcVar1 != (char **)0x0);\n  return unaff_R12 & 0xffffff00 | (ulong)bVar4;\n}\n\n",
            "funcName": "FUN_00403a60"
        },
        {
            "funcStartAddr": "0x403ac0",
            "funcEndAddr": "0x403ac5",
            "decompiledFuncCode": "\nvoid FUN_00403ac0(void)\n\n{\n  (*(code *)PTR_free_00617030)();\n  return;\n}\n\n",
            "funcName": "FUN_00403ac0"
        },
        {
            "funcStartAddr": "0x403ad0",
            "funcEndAddr": "0x403b48",
            "decompiledFuncCode": "\nvoid FUN_00403ad0(void)\n\n{\n  long lVar1;\n  long lVar2;\n  undefined8 uVar3;\n  \n  DAT_00617640 = DAT_00617640 + 1;\n  if ((-1 < (long)(DAT_00617640 * 8)) && (DAT_00617640 >> 0x3d == 0)) {\n    DAT_00617648 = FUN_0040a5c0(DAT_00617648);\n    lVar1 = DAT_00617648 + -8;\n    lVar2 = DAT_00617640 * 8;\n    if ((-1 < (long)(DAT_00617650 << 3)) && (DAT_00617650 >> 0x3d == 0)) {\n      uVar3 = FUN_0040a560();\n      *(undefined8 *)(lVar1 + lVar2) = uVar3;\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0040a7b0();\n}\n\n",
            "funcName": "FUN_00403ad0"
        },
        {
            "funcStartAddr": "0x403b50",
            "funcEndAddr": "0x403b91",
            "decompiledFuncCode": "\nbyte * FUN_00403b50(byte *param_1)\n\n{\n  byte bVar1;\n  ushort **ppuVar2;\n  byte *pbVar3;\n  \n  bVar1 = *param_1;\n  if (bVar1 != 0) {\n    ppuVar2 = __ctype_b_loc();\n    pbVar3 = param_1;\n    do {\n      if ((*(byte *)(*ppuVar2 + bVar1) & 2) != 0) {\n        *pbVar3 = 0x3f;\n      }\n      pbVar3 = pbVar3 + 1;\n      bVar1 = *pbVar3;\n    } while (bVar1 != 0);\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_00403b50"
        },
        {
            "funcStartAddr": "0x403ba0",
            "funcEndAddr": "0x403e0d",
            "decompiledFuncCode": "\nvoid FUN_00403ba0(void)\n\n{\n  int iVar1;\n  char *__s;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  long lVar4;\n  ulong uVar5;\n  long lVar6;\n  uint uVar7;\n  long lVar8;\n  ulong uVar9;\n  ulong uVar10;\n  ulong uVar11;\n  ulong uVar12;\n  char *local_2c0;\n  undefined local_2b8 [656];\n  \n  FUN_00403ad0();\n  if (DAT_00617650 != 0) {\n    uVar9 = 0;\n    lVar8 = DAT_00617658;\n    do {\n      lVar6 = uVar9 * 8;\n      local_2c0 = (char *)0x0;\n      __s = (char *)dcgettext(0,*(undefined8 *)(*(int **)(lVar8 + lVar6) + 6),5);\n      if (**(int **)(lVar8 + lVar6) != 2) goto LAB_00403be0;\n      if (DAT_00617660 == 0) {\nLAB_00403d48:\n        uVar11 = DAT_006176e0;\n        uVar12 = DAT_006176e0;\n        do {\n          uVar5 = (ulong)((uint)uVar12 & 0x3ff);\n          uVar10 = uVar11 + ((uVar11 >> 3) / 0x7d) * -1000;\n          uVar11 = (uVar11 >> 3) / 0x7d;\n          uVar12 = uVar12 >> 10;\n        } while ((uVar10 | uVar5) == 0);\n        if ((uVar10 == 0) < (uVar5 == 0)) {\n          uVar7 = DAT_006176e8 & 0x124 | 0xb8;\nLAB_00403db2:\n          if ((uVar7 & 0x20) == 0) goto LAB_00403e0e;\n        }\n        else {\n          if ((uVar10 == 0) <= (uVar5 == 0)) {\n            uVar7 = DAT_006176e8 & 0x124 | 0x98;\n            goto LAB_00403db2;\n          }\n          uVar7 = DAT_006176e8 & 0x104 | 0x98;\nLAB_00403e0e:\n          uVar7 = (uint)CONCAT11(1,(char)uVar7);\n        }\n        uVar2 = FUN_00406fb0(DAT_006176e0,local_2b8,uVar7,1,1);\n        __s = (char *)dcgettext(0,\"blocks\",5);\nLAB_00403ccf:\n        uVar3 = dcgettext(0,\"%s-%s\",5);\n        iVar1 = FUN_0040acf0(&local_2c0,uVar3,uVar2,__s);\n        if (iVar1 == -1) {\n          local_2c0 = (char *)0x0;\n        }\n      }\n      else {\n        if (DAT_00617660 == 4) {\n          if ((DAT_006176e8 & 0x10) == 0) goto LAB_00403d48;\n        }\n        else if (DAT_00617660 == 3) {\n          uVar2 = FUN_00407b40(DAT_006176e0,local_2b8);\n          goto LAB_00403ccf;\n        }\nLAB_00403be0:\n        local_2c0 = strdup(__s);\n      }\n      if (local_2c0 == (char *)0x0) {\n                    /* WARNING: Subroutine does not return */\n        FUN_0040a7b0();\n      }\n      FUN_00403b50();\n      *(char **)(*(long *)(DAT_00617648 + -8 + DAT_00617640 * 8) + lVar6) = local_2c0;\n      uVar11 = *(ulong *)(*(long *)(DAT_00617658 + lVar6) + 0x20);\n      iVar1 = FUN_00408190(local_2c0,0);\n      if ((ulong)(long)iVar1 < uVar11) {\n        lVar6 = *(long *)(DAT_00617658 + lVar6);\n        lVar4 = *(long *)(lVar6 + 0x20);\n      }\n      else {\n        iVar1 = FUN_00408190(local_2c0,0);\n        lVar4 = (long)iVar1;\n        lVar6 = *(long *)(DAT_00617658 + lVar6);\n      }\n      lVar8 = DAT_00617658;\n      uVar11 = DAT_00617650;\n      uVar9 = uVar9 + 1;\n      *(long *)(lVar6 + 0x20) = lVar4;\n    } while (uVar9 < uVar11);\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00403ba0"
        },
        {
            "funcStartAddr": "0x403e20",
            "funcEndAddr": "0x403ecc",
            "decompiledFuncCode": "\nvoid FUN_00403e20(int param_1,undefined *param_2)\n\n{\n  long lVar1;\n  \n  DAT_00617650 = DAT_00617650 + 1;\n  if (((long)(DAT_00617650 * 8) < 0) || (DAT_00617650 >> 0x3d != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_0040a7b0(DAT_00617658);\n  }\n  DAT_00617658 = FUN_0040a5c0();\n  lVar1 = (long)param_1;\n  *(undefined **)(DAT_00617658 + -8 + DAT_00617650 * 8) = &DAT_00617320 + lVar1 * 0x30;\n  if (param_2 != (undefined *)0x0) {\n    (&PTR_s_Filesystem_00617338)[lVar1 * 6] = param_2;\n  }\n  if ((&DAT_0061734c)[lVar1 * 0x30] == '\\0') {\n    (&DAT_0061734c)[lVar1 * 0x30] = 1;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"!\\\"field used\\\"\",\"src/df.c\",0x164,\"alloc_field\");\n}\n\n",
            "funcName": "FUN_00403e20"
        },
        {
            "funcStartAddr": "0x403ed0",
            "funcEndAddr": "0x403f0f",
            "decompiledFuncCode": "\nlong FUN_00403ed0(byte param_1,long param_2,long param_3)\n\n{\n  long lVar1;\n  \n  if (param_1 == 0) {\n    lVar1 = FUN_00406fb0(param_2,param_3 + (ulong)param_1,DAT_006176e8);\n    return lVar1;\n  }\n  lVar1 = FUN_00406fb0(-param_2,param_3 + (ulong)param_1,DAT_006176e8);\n  *(undefined *)(lVar1 + -1) = 0x2d;\n  return lVar1 + -1;\n}\n\n",
            "funcName": "FUN_00403ed0"
        },
        {
            "funcStartAddr": "0x403f10",
            "funcEndAddr": "0x4048e1",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00403f10(char *param_1,char *param_2,char *param_3,char *param_4,undefined *param_5,\n                 char param_6,char param_7,__dev_t *param_8,char param_9)\n\n{\n  long lVar1;\n  uint uVar2;\n  uint *puVar3;\n  ulong uVar4;\n  char **ppcVar5;\n  char cVar6;\n  int iVar7;\n  size_t sVar8;\n  long lVar9;\n  int *piVar10;\n  undefined8 uVar11;\n  char *pcVar12;\n  long lVar13;\n  long lVar14;\n  __dev_t *p_Var15;\n  ulong uVar16;\n  ulong uVar17;\n  ulong uVar18;\n  double dVar19;\n  double dVar20;\n  char *local_3b8;\n  char *local_390;\n  __dev_t local_388;\n  ulong uStack_380;\n  ulong local_378;\n  ulong uStack_370;\n  uint local_368;\n  undefined4 uStack_364;\n  ulong uStack_360;\n  ulong local_358;\n  __dev_t local_348;\n  undefined8 local_340;\n  ulong local_338;\n  ulong local_330;\n  byte local_328 [8];\n  ulong local_320;\n  long local_318;\n  undefined local_310 [8];\n  __dev_t local_308;\n  undefined8 local_300;\n  ulong local_2f8;\n  ulong local_2f0;\n  undefined local_2e8;\n  ulong local_2e0;\n  long local_2d8;\n  undefined local_2d0;\n  stat local_2c8 [4];\n  \n  if ((param_7 != '\\0') && (DAT_006176ed != '\\0')) {\n    return;\n  }\n  if (((param_6 != '\\0') && (DAT_006176ee == '\\0')) && (DAT_006176ec == '\\0')) {\n    return;\n  }\n  cVar6 = FUN_00403a10(param_5);\n  if (cVar6 == '\\0') {\n    return;\n  }\n  cVar6 = FUN_00403a60(param_5);\n  if (cVar6 != '\\0') {\n    return;\n  }\n  if ((param_2 == (char *)0x0) || (param_8 != (__dev_t *)0x0)) {\n    if ((param_4 == (char *)0x0) && (param_4 = param_2, param_2 == (char *)0x0)) {\n      param_4 = param_1;\n    }\n    if (param_8 != (__dev_t *)0x0) {\n      local_388 = *param_8;\n      uStack_380 = param_8[1];\n      local_378 = param_8[2];\n      uStack_370 = param_8[3];\n      local_368 = *(uint *)(param_8 + 4);\n      uStack_364 = *(undefined4 *)((long)param_8 + 0x24);\n      uStack_360 = param_8[5];\n      local_358 = param_8[6];\n      if (((uStack_380 == 0) && (DAT_006176ee == '\\0')) && (DAT_006176ec == '\\0')) {\n        return;\n      }\n      goto LAB_0040401c;\n    }\n  }\n  else {\n    if (*param_2 != '/') {\n      return;\n    }\n    if (param_4 == (char *)0x0) {\n      param_4 = param_2;\n    }\n  }\n  iVar7 = FUN_0040b070(param_4,param_1,&local_388);\n  if (iVar7 == 0) {\n    if (param_9 == '\\0') {\nLAB_00404839:\n      if ((uStack_380 != 0) || (DAT_006176ee != '\\0')) goto LAB_00404015;\n    }\n    else {\n      if (DAT_006176ee != '\\0') {\n        iVar7 = __xstat(1,param_4,local_2c8);\n        if ((iVar7 == 0) && (DAT_006176f0 != 0)) {\n          local_308 = local_2c8[0].st_dev;\n          lVar13 = FUN_004061f0(DAT_006176f0,&local_308);\n          if (((lVar13 != 0) &&\n              ((ppcVar5 = *(char ***)(lVar13 + 8), ppcVar5 != (char **)0x0 &&\n               (iVar7 = strcmp(*ppcVar5,param_1), iVar7 != 0)))) &&\n             (((*(byte *)(ppcVar5 + 5) & 2) == 0 || (param_7 == '\\0')))) {\n            local_368 = local_368 & 0xffffff00;\n            param_5 = &DAT_00413461;\n            local_358 = 0xffffffffffffffff;\n            uStack_360 = 0xffffffffffffffff;\n            uStack_370 = 0xffffffffffffffff;\n            local_378 = 0xffffffffffffffff;\n            uStack_380 = 0xffffffffffffffff;\n            local_388 = 0xffffffffffffffff;\n          }\n        }\n        goto LAB_00404839;\n      }\n      if (uStack_380 != 0) goto LAB_00404015;\n    }\n    if (DAT_006176ec == '\\0') {\n      return;\n    }\n    if (param_8 != (__dev_t *)0x0) goto LAB_0040401c;\n  }\n  else {\n    piVar10 = __errno_location();\n    if ((param_9 == '\\0') || ((*piVar10 != 0xd && (*piVar10 != 2)))) {\n      uVar11 = FUN_00409c60(0,3,param_4);\n      error(0,*piVar10,&DAT_00413b3f,uVar11);\n      DAT_006176d8 = 1;\n      return;\n    }\n    if (DAT_006176ee == '\\0') {\n      return;\n    }\n    local_368 = local_368 & 0xffffff00;\n    param_5 = &DAT_00413461;\n    local_358 = 0xffffffffffffffff;\n    uStack_360 = 0xffffffffffffffff;\n    uStack_370 = 0xffffffffffffffff;\n    local_378 = 0xffffffffffffffff;\n    uStack_380 = 0xffffffffffffffff;\n    local_388 = 0xffffffffffffffff;\n  }\nLAB_00404015:\n  DAT_006176dd = 1;\nLAB_0040401c:\n  FUN_00403ad0();\n  if (param_1 == (char *)0x0) {\n    param_1 = \"-\";\n  }\n  if (param_3 == (char *)0x0) {\n    param_3 = \"-\";\n  }\n  local_3b8 = (char *)FUN_0040a790(param_1);\n  if ((((param_9 != '\\0') && (sVar8 = strlen(local_3b8), 0x24 < sVar8)) &&\n      (sVar8 = strspn(local_3b8 + (sVar8 - 0x24),\"-0123456789abcdefABCDEF\"), sVar8 == 0x24)) &&\n     (pcVar12 = (char *)FUN_00405250(local_3b8,0), pcVar12 != (char *)0x0)) {\n    free(local_3b8);\n    local_3b8 = pcVar12;\n  }\n  if (param_5 == (undefined *)0x0) {\n    param_5 = &DAT_00413461;\n  }\n  local_2e8 = 0;\n  local_300 = 1;\n  local_308 = 1;\n  local_2f8 = uStack_360;\n  local_2e0 = local_358;\n  local_2f0 = local_358;\n  local_2d8 = -1;\n  local_2d0 = false;\n  if ((uStack_360 < 0xfffffffffffffffe) && (local_358 < 0xfffffffffffffffe)) {\n    local_2d8 = uStack_360 - local_358;\n    local_2d0 = uStack_360 < local_358;\n  }\n  local_318 = -1;\n  local_310[0] = false;\n  local_340 = DAT_006176e0;\n  local_328[0] = uStack_370 < 0xfffffffffffffffe & (byte)local_368;\n  local_348 = local_388;\n  local_338 = uStack_380;\n  local_330 = uStack_370;\n  local_320 = local_378;\n  if ((uStack_380 < 0xfffffffffffffffe) && (local_378 < 0xfffffffffffffffe)) {\n    local_318 = uStack_380 - local_378;\n    local_310[0] = uStack_380 < local_378;\n  }\n  if ((DAT_006176b8 != '\\0') && (param_8 == (__dev_t *)0x0)) {\n    if (uStack_360 < 0xfffffffffffffffe) {\n      _DAT_006176a8 = _DAT_006176a8 + uStack_360;\n    }\n    if (local_358 < 0xfffffffffffffffe) {\n      _DAT_006176b0 = _DAT_006176b0 + local_358;\n    }\n    if (uStack_380 < 0xfffffffffffffffe) {\n      _DAT_00617688 = _DAT_00617688 + uStack_380 * local_388;\n    }\n    if (local_378 < 0xfffffffffffffffe) {\n      _DAT_00617690 = _DAT_00617690 + local_378 * local_388;\n    }\n    if (uStack_370 < 0xfffffffffffffffe) {\n      uVar18 = uStack_370 * local_388;\n      if (DAT_006176a0 == local_328[0]) {\n        DAT_00617698 = uVar18 + DAT_00617698;\n      }\n      else {\n        uVar17 = -DAT_00617698;\n        if (DAT_006176a0 == 0) {\n          uVar17 = DAT_00617698;\n        }\n        if (local_328[0] != 0) {\n          uVar18 = -uVar18;\n        }\n        if (uVar18 < uVar17) {\n          DAT_00617698 = uVar17 - uVar18;\n        }\n        else {\n          DAT_00617698 = uVar18 - uVar17;\n          DAT_006176a0 = local_328[0];\n        }\n        if (DAT_006176a0 != 0) {\n          DAT_00617698 = -DAT_00617698;\n        }\n      }\n    }\n  }\n  uVar18 = 0;\n  lVar13 = DAT_00617658;\n  if (DAT_00617650 != 0) {\n    do {\n      puVar3 = *(uint **)(lVar13 + uVar18 * 8);\n      lVar1 = uVar18 * 8;\n      uVar2 = puVar3[4];\n      if (uVar2 == 1) {\n        p_Var15 = &local_308;\n      }\n      else if (uVar2 == 0) {\n        p_Var15 = &local_348;\n      }\n      else {\n        if (uVar2 != 2) {\n                    /* WARNING: Subroutine does not return */\n          __assert_fail(\"!\\\"bad field_type\\\"\",\"src/df.c\",0x435,\"get_dev\");\n        }\n        p_Var15 = (__dev_t *)0x0;\n      }\n      if (0xb < *puVar3) {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"!\\\"unhandled field\\\"\",\"src/df.c\",0x49b,\"get_dev\");\n      }\n      switch(*puVar3) {\n      case 0:\n        local_390 = (char *)FUN_0040a790(local_3b8);\n        goto LAB_00404288;\n      case 1:\n        local_390 = (char *)FUN_0040a790(param_5);\n        goto LAB_00404288;\n      default:\n        pcVar12 = \"-\";\n        if (p_Var15[2] < 0xfffffffffffffffe) {\n          pcVar12 = (char *)FUN_00403ed0(0,p_Var15[2],local_2c8,*p_Var15,p_Var15[1]);\n        }\n        break;\n      case 3:\n      case 7:\n        uVar17 = p_Var15[6];\n        cVar6 = *(char *)(p_Var15 + 7);\n        goto joined_r0x0040434c;\n      case 4:\n      case 8:\n        uVar17 = p_Var15[3];\n        cVar6 = *(char *)(p_Var15 + 4);\njoined_r0x0040434c:\n        if ((uVar17 < 0xfffffffffffffffe) || (pcVar12 = \"-\", cVar6 != '\\0')) {\n          pcVar12 = (char *)FUN_00403ed0(cVar6,uVar17,local_2c8,*p_Var15,p_Var15[1]);\n        }\n        break;\n      case 5:\n      case 9:\n        uVar17 = p_Var15[6];\n        if ((uVar17 < 0xfffffffffffffffe) && (uVar4 = p_Var15[3], uVar4 < 0xfffffffffffffffe)) {\n          if (*(char *)(p_Var15 + 7) == '\\0') {\n            if (0x28f5c28f5c28f5c < uVar17) {\nLAB_0040448f:\n              if ((long)uVar17 < 0) {\n                dVar19 = (double)(uVar17 >> 1 | (ulong)((uint)uVar17 & 1));\n                dVar19 = dVar19 + dVar19;\n              }\n              else {\n                dVar19 = (double)uVar17;\n              }\n              goto LAB_004044a1;\n            }\n            uVar16 = uVar17 + uVar4;\n            if ((uVar16 == 0) || ((bool)*(char *)(p_Var15 + 4) != CARRY8(uVar17,uVar4)))\n            goto LAB_0040448f;\n            uVar17 = (ulong)((uVar17 * 100) % uVar16 != 0) + (uVar17 * 100) / uVar16;\n            if ((long)uVar17 < 0) {\n              dVar19 = (double)(uVar17 >> 1 | (ulong)((uint)uVar17 & 1));\n              dVar19 = dVar19 + dVar19;\n            }\n            else {\n              dVar19 = (double)uVar17;\n            }\n          }\n          else {\n            uVar16 = -uVar17;\n            if ((long)uVar17 < 1) {\n              dVar19 = (double)uVar16;\n            }\n            else {\n              dVar19 = (double)(uVar16 >> 1 | (ulong)((uint)uVar16 & 1));\n              dVar19 = dVar19 + dVar19;\n            }\n            dVar19 = (double)((ulong)dVar19 ^ _DAT_00412130);\nLAB_004044a1:\n            if (*(char *)(p_Var15 + 4) == '\\0') {\n              if ((long)uVar4 < 0) {\n                dVar20 = (double)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n                dVar20 = dVar20 + dVar20;\n              }\n              else {\n                dVar20 = (double)uVar4;\n              }\n            }\n            else {\n              uVar17 = -uVar4;\n              if ((long)uVar4 < 1) {\n                dVar20 = (double)uVar17;\n              }\n              else {\n                dVar20 = (double)(uVar17 >> 1 | (ulong)((uint)uVar17 & 1));\n                dVar20 = dVar20 + dVar20;\n              }\n              dVar20 = (double)((ulong)dVar20 ^ _DAT_00412130);\n            }\n            if (dVar20 + dVar19 == 0.0) goto LAB_0040431e;\n            dVar19 = (dVar19 * _DAT_00412140) / (dVar20 + dVar19);\n            dVar20 = (double)(long)dVar19;\n            if (((dVar20 - _DAT_00412148 < dVar19) && (dVar19 <= _DAT_00412148 + dVar20)) &&\n               (dVar19 = _DAT_00412148 + dVar20, dVar19 <= dVar20)) {\n              dVar19 = dVar20 + 0.0;\n            }\n          }\n          if (dVar19 < 0.0) goto LAB_0040431e;\n          iVar7 = FUN_0040acf0(&local_390,\"%.0f%%\");\n          if (iVar7 == -1) {\n            local_390 = (char *)0x0;\n            goto LAB_00404559;\n          }\n        }\n        else {\nLAB_0040431e:\n          local_390 = strdup(\"-\");\n        }\n        if (local_390 == (char *)0x0) {\nLAB_00404559:\n                    /* WARNING: Subroutine does not return */\n          FUN_0040a7b0();\n        }\n        goto LAB_00404291;\n      case 10:\n        pcVar12 = param_2;\n        break;\n      case 0xb:\n        pcVar12 = param_3;\n      }\n      local_390 = (char *)FUN_0040a790(pcVar12);\nLAB_00404288:\n      if (local_390 == (char *)0x0) {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"!\\\"empty cell\\\"\",\"src/df.c\",0x49f,\"get_dev\");\n      }\nLAB_00404291:\n      FUN_00403b50();\n      uVar17 = *(ulong *)(*(long *)(DAT_00617658 + lVar1) + 0x20);\n      iVar7 = FUN_00408190(local_390,0);\n      if ((ulong)(long)iVar7 < uVar17) {\n        lVar14 = *(long *)(DAT_00617658 + lVar1);\n        lVar9 = *(long *)(lVar14 + 0x20);\n      }\n      else {\n        iVar7 = FUN_00408190(local_390,0);\n        lVar9 = (long)iVar7;\n        lVar14 = *(long *)(DAT_00617658 + lVar1);\n      }\n      lVar13 = DAT_00617658;\n      *(long *)(lVar14 + 0x20) = lVar9;\n      uVar17 = DAT_00617650;\n      uVar18 = uVar18 + 1;\n      *(char **)(*(long *)(DAT_00617648 + -8 + DAT_00617640 * 8) + lVar1) = local_390;\n    } while (uVar18 < uVar17);\n  }\n  free(local_3b8);\n  return;\n}\n\n",
            "funcName": "FUN_00403f10"
        },
        {
            "funcStartAddr": "0x404930",
            "funcEndAddr": "0x404d5d",
            "decompiledFuncCode": "\nvoid FUN_00404930(int param_1)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  byte **ppbVar6;\n  long lVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  bool bVar11;\n  bool bVar12;\n  byte bVar13;\n  byte *local_88;\n  char *local_80;\n  byte *local_78 [5];\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  char *local_38;\n  char *local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  byte **ppbVar7;\n  \n  uVar5 = DAT_00617708;\n  bVar13 = 0;\n  if (param_1 != 0) {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar5);\n    goto LAB_0040496f;\n  }\n  uVar3 = dcgettext(0,\"Usage: %s [OPTION]... [FILE]...\\n\",5);\n  __printf_chk(1,uVar3,uVar5);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"Show information about the file system on which each FILE resides,\\nor all file systems by default.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -a, --all             include pseudo, duplicate, inaccessible file systems\\n  -B, --block-size=SIZE  scale sizes by SIZE before printing them; e.g.,\\n                           \\'-BM\\' prints sizes in units of 1,048,576 bytes;\\n                           see SIZE format below\\n  -h, --human-readable  print sizes in powers of 1024 (e.g., 1023M)\\n  -H, --si              print sizes in powers of 1000 (e.g., 1.1G)\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -i, --inodes          list inode information instead of block usage\\n  -k                    like --block-size=1K\\n  -l, --local           limit listing to local file systems\\n      --no-sync         do not invoke sync before getting usage info (default)\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --output[=FIELD_LIST]  use the output format defined by FIELD_LIST,\\n                               or print all fields if FIELD_LIST is omitted.\\n  -P, --portability     use the POSIX output format\\n      --sync            invoke sync before getting usage info\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --total           elide all entries insignificant to available space,\\n                          and produce a grand total\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -t, --type=TYPE       limit listing to file systems of type TYPE\\n  -T, --print-type      print file system type\\n  -x, --exclude-type=TYPE   limit listing to file systems not of type TYPE\\n  -v                    (ignored)\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  uVar5 = dcgettext(0,\n                    \"\\nDisplay values are in units of the first available SIZE from --block-size,\\nand the %s_BLOCK_SIZE, BLOCK_SIZE and BLOCKSIZE environment variables.\\nOtherwise, units default to 1024 bytes (or 512 if POSIXLY_CORRECT is set).\\n\"\n                    ,5);\n  __printf_chk(1,uVar5,&DAT_0041103d);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\\nUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nFIELD_LIST is a comma-separated list of columns to be included.  Valid\\nfield names are: \\'source\\', \\'fstype\\', \\'itotal\\', \\'iused\\', \\'iavail\\', \\'ipcent\\',\\n\\'size\\', \\'used\\', \\'avail\\', \\'pcent\\', \\'file\\' and \\'target\\' (see info page).\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  local_88 = &DAT_00411040;\n  local_80 = \"test invocation\";\n  local_78[0] = (byte *)0x4110ba;\n  local_78[1] = (byte *)0x411052;\n  local_78[2] = (byte *)0x411068;\n  local_78[3] = (byte *)0x411072;\n  local_78[4] = (byte *)0x411081;\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha384sum\";\n  local_40 = \"sha2 utilities\";\n  local_38 = \"sha512sum\";\n  local_30 = \"sha2 utilities\";\n  local_28 = 0;\n  local_20 = 0;\n  ppbVar6 = &local_88;\n  do {\n    ppbVar7 = ppbVar6;\n    ppbVar6 = ppbVar7 + 2;\n    pbVar9 = *ppbVar6;\n    bVar11 = false;\n    bVar12 = pbVar9 == (byte *)0x0;\n    if (bVar12) break;\n    lVar8 = 3;\n    pbVar10 = &DAT_0041103a;\n    do {\n      if (lVar8 == 0) break;\n      lVar8 = lVar8 + -1;\n      bVar11 = *pbVar10 < *pbVar9;\n      bVar12 = *pbVar10 == *pbVar9;\n      pbVar10 = pbVar10 + (ulong)bVar13 * -2 + 1;\n      pbVar9 = pbVar9 + (ulong)bVar13 * -2 + 1;\n    } while (bVar12);\n  } while ((!bVar11 && !bVar12) != bVar11);\n  pbVar9 = ppbVar7[3];\n  if (pbVar9 == (byte *)0x0) {\n    uVar5 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar5,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\n        pbVar9 = &DAT_0041103a;\n        goto LAB_00404d33;\n      }\n    }\n    pbVar9 = &DAT_0041103a;\n    uVar5 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar4 = \" invocation\";\n    __printf_chk(1,uVar5,\"https://www.gnu.org/software/coreutils/\",&DAT_0041103a);\n  }\n  else {\n    uVar5 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar5,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\nLAB_00404d33:\n        uVar5 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar5,&DAT_0041103a);\n      }\n    }\n    pcVar4 = \" invocation\";\n    uVar5 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar5,\"https://www.gnu.org/software/coreutils/\",&DAT_0041103a);\n    if (pbVar9 != &DAT_0041103a) {\n      pcVar4 = \"\";\n    }\n  }\n  uVar5 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  __printf_chk(1,uVar5,pbVar9,pcVar4);\nLAB_0040496f:\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n",
            "funcName": "FUN_00404930"
        },
        {
            "funcStartAddr": "0x404d60",
            "funcEndAddr": "0x404eb3",
            "decompiledFuncCode": "\nvoid FUN_00404d60(void)\n\n{\n  byte bVar1;\n  int iVar2;\n  char *__ptr;\n  char *pcVar3;\n  undefined8 uVar4;\n  ulong uVar5;\n  ulong uVar6;\n  char *pcVar7;\n  char *pcVar8;\n  \n  __ptr = (char *)FUN_0040a790();\n  pcVar7 = __ptr;\n  do {\n    pcVar8 = (char *)0x0;\n    pcVar3 = strchr(pcVar7,0x2c);\n    if (pcVar3 != (char *)0x0) {\n      *pcVar3 = '\\0';\n      pcVar8 = pcVar3 + 1;\n    }\n    uVar6 = 0;\n    do {\n      bVar1 = (byte)uVar6;\n      iVar2 = strcmp((&PTR_s_source_00617328)[uVar6 * 6],pcVar7);\n      if (iVar2 == 0) goto LAB_00404e08;\n      uVar6 = uVar6 + 1;\n    } while (uVar6 != 0xc);\n    uVar6 = FUN_00409de0(pcVar7);\n    pcVar7 = \"option --output: field %s unknown\";\n    while( true ) {\n      uVar4 = dcgettext(0,pcVar7,5);\n      error(0,0,uVar4,uVar6);\n      FUN_00404930(1);\nLAB_00404e08:\n      if ((&DAT_0061734c)[(uVar6 & 0xffffffff) * 0x30] == '\\0') break;\n      uVar6 = FUN_00409de0();\n      pcVar7 = \"option --output: field %s used more than once\";\n    }\n    uVar5 = 1L << (bVar1 & 0x3f);\n    if ((uVar5 & 0xfeb) == 0) {\n      if ((uVar5 & 0x10) == 0) {\n        if ((uVar5 & 4) == 0) {\n                    /* WARNING: Subroutine does not return */\n          __assert_fail(\"!\\\"invalid field\\\"\",\"src/df.c\",0x1ab,\"decode_output_arg\");\n        }\n        FUN_00403e20(uVar6 & 0xffffffff,&DAT_004110c8);\n      }\n      else {\n        FUN_00403e20(uVar6 & 0xffffffff,\"Avail\");\n      }\n    }\n    else {\n      FUN_00403e20(uVar6 & 0xffffffff,0);\n    }\n    pcVar7 = pcVar8;\n  } while (pcVar8 != (char *)0x0);\n  free(__ptr);\n  return;\n}\n\n",
            "funcName": "FUN_00404d60"
        },
        {
            "funcStartAddr": "0x404ed0",
            "funcEndAddr": "0x40523b",
            "decompiledFuncCode": "\nchar * FUN_00404ed0(char *param_1,undefined4 *param_2)\n\n{\n  ulong uVar1;\n  uint uVar2;\n  bool bVar3;\n  char cVar4;\n  int iVar5;\n  uint *puVar6;\n  char *pcVar7;\n  size_t sVar8;\n  char *pcVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  char *pcVar12;\n  size_t __n;\n  long lVar13;\n  int *piVar14;\n  ulong uVar15;\n  uint uVar16;\n  undefined4 uVar17;\n  char cVar18;\n  undefined4 *puVar19;\n  char *pcVar20;\n  char *pcVar21;\n  long lVar22;\n  undefined *puVar23;\n  undefined *puVar24;\n  char *pcVar25;\n  uint uVar26;\n  char *pcVar27;\n  undefined8 unaff_R15;\n  undefined8 uStack_160;\n  undefined local_158 [8];\n  undefined auStack_150 [8];\n  undefined4 local_148;\n  undefined4 uStack_144;\n  undefined4 uStack_140;\n  undefined4 uStack_13c;\n  undefined4 local_138;\n  undefined4 uStack_134;\n  __mode_t _Stack_130;\n  __uid_t _Stack_12c;\n  __gid_t local_128;\n  int iStack_124;\n  undefined4 uStack_120;\n  undefined4 uStack_11c;\n  undefined4 local_118;\n  undefined4 uStack_114;\n  undefined4 uStack_110;\n  undefined4 uStack_10c;\n  undefined4 local_108;\n  undefined4 uStack_104;\n  undefined4 uStack_100;\n  undefined4 uStack_fc;\n  undefined4 local_f8;\n  undefined4 uStack_f4;\n  undefined4 uStack_f0;\n  undefined4 uStack_ec;\n  undefined4 local_e8;\n  undefined4 uStack_e4;\n  undefined4 uStack_e0;\n  undefined4 uStack_dc;\n  undefined4 local_d8;\n  undefined4 uStack_d4;\n  undefined4 uStack_d0;\n  undefined4 uStack_cc;\n  undefined4 local_c8;\n  undefined4 uStack_c4;\n  undefined4 uStack_c0;\n  undefined4 uStack_bc;\n  undefined4 local_b8;\n  undefined4 uStack_b4;\n  undefined4 uStack_b0;\n  undefined4 uStack_ac;\n  undefined4 local_a8;\n  undefined4 uStack_a4;\n  __mode_t _Stack_a0;\n  __uid_t _Stack_9c;\n  __gid_t local_98;\n  int iStack_94;\n  undefined4 uStack_90;\n  undefined4 uStack_8c;\n  undefined4 local_88;\n  undefined4 uStack_84;\n  undefined4 uStack_80;\n  undefined4 uStack_7c;\n  undefined4 local_78;\n  undefined4 uStack_74;\n  undefined4 uStack_70;\n  undefined4 uStack_6c;\n  undefined4 local_68;\n  undefined4 uStack_64;\n  undefined4 uStack_60;\n  undefined4 uStack_5c;\n  undefined4 local_58;\n  undefined4 uStack_54;\n  undefined4 uStack_50;\n  undefined4 uStack_4c;\n  undefined4 local_48;\n  undefined4 uStack_44;\n  undefined4 uStack_40;\n  undefined4 uStack_3c;\n  undefined4 local_38;\n  undefined4 uStack_34;\n  undefined4 uStack_30;\n  undefined4 uStack_2c;\n  \n  puVar24 = local_158;\n  puVar23 = local_158;\n  uStack_160 = 0x404ef4;\n  iVar5 = FUN_00409f30(local_158);\n  uStack_160 = 0x404efc;\n  puVar6 = (uint *)__errno_location();\n  if (iVar5 != 0) {\n    uStack_160 = 0x40520b;\n    uVar10 = dcgettext(0,\"cannot get current directory\",5);\n    uStack_160 = 0x40521b;\n    error(0,*puVar6,uVar10);\n    return (char *)0x0;\n  }\n  if ((param_2[6] & 0xf000) == 0x4000) {\n    local_148 = *param_2;\n    uStack_144 = param_2[1];\n    uStack_140 = param_2[2];\n    uStack_13c = param_2[3];\n    local_138 = param_2[4];\n    uStack_134 = param_2[5];\n    _Stack_130 = param_2[6];\n    _Stack_12c = param_2[7];\n    local_128 = param_2[8];\n    iStack_124 = param_2[9];\n    uStack_120 = param_2[10];\n    uStack_11c = param_2[0xb];\n    local_118 = param_2[0xc];\n    uStack_114 = param_2[0xd];\n    uStack_110 = param_2[0xe];\n    uStack_10c = param_2[0xf];\n    local_108 = param_2[0x10];\n    uStack_104 = param_2[0x11];\n    uStack_100 = param_2[0x12];\n    uStack_fc = param_2[0x13];\n    local_f8 = param_2[0x14];\n    uStack_f4 = param_2[0x15];\n    uStack_f0 = param_2[0x16];\n    uStack_ec = param_2[0x17];\n    local_e8 = param_2[0x18];\n    uStack_e4 = param_2[0x19];\n    uStack_e0 = param_2[0x1a];\n    uStack_dc = param_2[0x1b];\n    local_d8 = param_2[0x1c];\n    uStack_d4 = param_2[0x1d];\n    uStack_d0 = param_2[0x1e];\n    uStack_cc = param_2[0x1f];\n    local_c8 = param_2[0x20];\n    uStack_c4 = param_2[0x21];\n    uStack_c0 = param_2[0x22];\n    uStack_bc = param_2[0x23];\n    uStack_160 = 0x405186;\n    iVar5 = chdir(param_1);\n    pcVar9 = param_1;\n    if (iVar5 < 0) goto LAB_00405191;\n  }\n  else {\n    uStack_160 = 0x404f23;\n    pcVar7 = (char *)FUN_00405990(param_1);\n    uStack_160 = 0x404f2e;\n    sVar8 = strlen(pcVar7);\n    lVar13 = -(sVar8 + 0x18 & 0xfffffffffffffff0);\n    puVar23 = local_158 + lVar13;\n    puVar24 = local_158 + lVar13;\n    *(undefined8 *)(local_158 + lVar13 + -8) = 0x404f4e;\n    pcVar9 = (char *)memcpy(auStack_150 + lVar13,pcVar7,sVar8 + 1);\n    *(undefined8 *)(local_158 + lVar13 + -8) = 0x404f59;\n    free(pcVar7);\n    *(undefined8 *)(local_158 + lVar13 + -8) = 0x404f61;\n    iVar5 = chdir(pcVar9);\n    if (iVar5 < 0) {\nLAB_00405191:\n      *(undefined8 *)(puVar24 + -8) = 0x40519b;\n      uVar10 = FUN_00409b90(4,pcVar9);\n      *(undefined8 *)(puVar24 + -8) = 0x4051af;\n      uVar11 = dcgettext(0,\"cannot change to directory %s\",5);\n      uVar2 = *puVar6;\n      *(undefined8 *)(puVar24 + -8) = 0x4051c4;\n      error(0,uVar2,uVar11,uVar10);\n      return (char *)0x0;\n    }\n    *(undefined8 *)(local_158 + lVar13 + -8) = 0x404f7f;\n    iVar5 = __xstat(1,\".\",(stat *)&local_148);\n    if (iVar5 < 0) {\n      *(undefined8 *)(local_158 + lVar13 + -8) = 0x404f94;\n      uVar10 = FUN_00409b90(4,pcVar9);\n      *(undefined8 *)(local_158 + lVar13 + -8) = 0x404fa8;\n      uVar11 = dcgettext(0,\"cannot stat current directory (now %s)\",5);\n      uVar2 = *puVar6;\n      pcVar9 = (char *)0x0;\n      *(undefined8 *)(local_158 + lVar13 + -8) = 0x404fbd;\n      error(0,uVar2,uVar11,uVar10);\n      puVar23 = local_158 + lVar13;\n      goto LAB_004050d8;\n    }\n  }\n  while( true ) {\n    *(undefined8 *)(puVar23 + -8) = 0x40508d;\n    iVar5 = __xstat(1,\"..\",(stat *)&local_b8);\n    if (iVar5 < 0) break;\n    if ((CONCAT44(uStack_b4,local_b8) != CONCAT44(uStack_144,local_148)) ||\n       (CONCAT44(uStack_ac,uStack_b0) == CONCAT44(uStack_13c,uStack_140))) {\n      *(undefined8 *)(puVar23 + -8) = 0x4050d5;\n      pcVar9 = (char *)FUN_0040a7f0();\n      goto LAB_004050d8;\n    }\n    *(undefined8 *)(puVar23 + -8) = 0x404ffa;\n    iVar5 = chdir(\"..\");\n    if (iVar5 < 0) {\n      *(undefined8 *)(puVar23 + -8) = 0x4051df;\n      uVar10 = FUN_00409b90(4,&DAT_0041218b);\n      pcVar9 = \"cannot change to directory %s\";\n      goto LAB_004050b1;\n    }\n    local_148 = local_b8;\n    uStack_144 = uStack_b4;\n    uStack_140 = uStack_b0;\n    uStack_13c = uStack_ac;\n    local_138 = local_a8;\n    uStack_134 = uStack_a4;\n    _Stack_130 = _Stack_a0;\n    _Stack_12c = _Stack_9c;\n    local_128 = local_98;\n    iStack_124 = iStack_94;\n    uStack_120 = uStack_90;\n    uStack_11c = uStack_8c;\n    local_118 = local_88;\n    uStack_114 = uStack_84;\n    uStack_110 = uStack_80;\n    uStack_10c = uStack_7c;\n    local_108 = local_78;\n    uStack_104 = uStack_74;\n    uStack_100 = uStack_70;\n    uStack_fc = uStack_6c;\n    local_f8 = local_68;\n    uStack_f4 = uStack_64;\n    uStack_f0 = uStack_60;\n    uStack_ec = uStack_5c;\n    local_e8 = local_58;\n    uStack_e4 = uStack_54;\n    uStack_e0 = uStack_50;\n    uStack_dc = uStack_4c;\n    local_d8 = local_48;\n    uStack_d4 = uStack_44;\n    uStack_d0 = uStack_40;\n    uStack_cc = uStack_3c;\n    local_c8 = local_38;\n    uStack_c4 = uStack_34;\n    uStack_c0 = uStack_30;\n    uStack_bc = uStack_2c;\n  }\n  *(undefined8 *)(puVar23 + -8) = 0x4050a4;\n  uVar10 = FUN_00409b90(4,&DAT_0041218b);\n  pcVar9 = \"cannot stat %s\";\nLAB_004050b1:\n  *(undefined8 *)(puVar23 + -8) = 0x4050b8;\n  uVar11 = dcgettext(0,pcVar9,5);\n  uVar2 = *puVar6;\n  pcVar9 = (char *)0x0;\n  *(undefined8 *)(puVar23 + -8) = 0x4050cd;\n  error(0,uVar2,uVar11,uVar10);\nLAB_004050d8:\n  uVar2 = *puVar6;\n  *(undefined8 *)(puVar23 + -8) = 0x4050e8;\n  iVar5 = FUN_00409f80(local_158);\n  if (iVar5 == 0) {\n    *(undefined8 *)(puVar23 + -8) = 0x4050fc;\n    FUN_00409fa0(local_158);\n    *puVar6 = uVar2;\n    return pcVar9;\n  }\n  *(undefined8 *)(puVar23 + -8) = 0x405239;\n  uVar10 = dcgettext(0,\"failed to return to initial working directory\",5);\n  uVar26 = *puVar6;\n  pcVar7 = (char *)0x1;\n  *(undefined8 *)(puVar23 + -8) = 0x40524c;\n  error(1,uVar26,uVar10);\n  *(undefined8 *)(puVar23 + -8) = unaff_R15;\n  *(char **)(puVar23 + -0x10) = param_1;\n  uVar16 = uVar26 & 3;\n  *(ulong *)(puVar23 + -0x18) = (ulong)uVar2;\n  *(uint **)(puVar23 + -0x20) = puVar6;\n  *(undefined **)(puVar23 + -0x28) = &stack0xfffffffffffffff8;\n  *(char **)(puVar23 + -0x30) = pcVar9;\n  *(uint *)(puVar23 + -0xf4) = uVar16;\n  if (((uVar16 & uVar16 - 1) == 0) && (pcVar7 != (char *)0x0)) {\n    if (*pcVar7 == '\\0') {\n      *(undefined8 *)(puVar23 + -0x110) = 0x4057c6;\n      piVar14 = __errno_location();\n      pcVar9 = (char *)0x0;\n      *piVar14 = 2;\n    }\n    else {\n      if (*pcVar7 == '/') {\n        *(undefined8 *)(puVar23 + -0x110) = 0x40541a;\n        pcVar9 = (char *)FUN_0040a560(0x1000);\n        pcVar25 = pcVar9 + 0x1000;\n        pcVar20 = pcVar9 + 1;\n        *pcVar9 = '/';\n      }\n      else {\n        *(undefined8 *)(puVar23 + -0x110) = 0x40529c;\n        pcVar9 = (char *)FUN_0040a7f0();\n        if (pcVar9 == (char *)0x0) {\n          return (char *)0x0;\n        }\n        *(undefined8 *)(puVar23 + -0x110) = 0x4052b0;\n        sVar8 = strlen(pcVar9);\n        if (sVar8 < 0x1000) {\n          *(undefined8 *)(puVar23 + -0x110) = 0x4057e1;\n          pcVar9 = (char *)FUN_0040a5c0(pcVar9,0x1000);\n          pcVar20 = pcVar9 + sVar8;\n          pcVar25 = pcVar9 + 0x1000;\n        }\n        else {\n          pcVar20 = pcVar9 + sVar8;\n          pcVar25 = pcVar20;\n        }\n      }\n      *(char **)(puVar23 + -0xe8) = pcVar7;\n      cVar4 = *pcVar7;\n      *(uint *)(puVar23 + -0xd0) = uVar26 & 4;\n      *(undefined8 *)(puVar23 + -0xf0) = 0;\n      *(undefined8 *)(puVar23 + -0xd8) = 0;\n      *(undefined8 *)(puVar23 + -0xe0) = 0;\nLAB_004052f8:\n      while (pcVar21 = pcVar20, cVar4 != '\\0') {\n        pcVar12 = pcVar7;\n        cVar18 = cVar4;\n        if (cVar4 == '/') {\n          do {\n            pcVar7 = pcVar7 + 1;\n            cVar18 = *pcVar7;\n          } while (cVar18 == '/');\n          pcVar12 = pcVar7;\n          if (cVar18 == '\\0') break;\n        }\n        do {\n          pcVar27 = pcVar7;\n          cVar4 = pcVar27[1];\n          pcVar7 = pcVar27 + 1;\n          if (cVar4 == '\\0') break;\n        } while (cVar4 != '/');\n        if (pcVar7 == pcVar12) break;\n        sVar8 = (long)pcVar7 - (long)pcVar12;\n        pcVar20 = pcVar21;\n        if (sVar8 == 1) goto LAB_004054e8;\n        if (((cVar18 != '.') || (sVar8 != 2)) || (pcVar12[1] != '.')) goto LAB_0040536c;\n        if (((pcVar9 + 1 < pcVar21) && (pcVar20 = pcVar21 + -1, pcVar9 < pcVar20)) &&\n           (pcVar21[-2] != '/')) {\n          for (pcVar20 = pcVar21 + -2; (pcVar9 != pcVar20 && (pcVar20[-1] != '/'));\n              pcVar20 = pcVar20 + -1) {\n          }\n        }\n      }\n      if ((pcVar9 + 1 < pcVar21) && (pcVar21[-1] == '/')) {\n        pcVar20 = pcVar21 + -1;\n        pcVar7 = pcVar21;\n      }\n      else {\n        pcVar7 = pcVar21 + 1;\n        pcVar20 = pcVar21;\n      }\n      *pcVar20 = '\\0';\n      if (pcVar25 != pcVar7) {\n        *(undefined8 *)(puVar23 + -0x110) = 0x40552f;\n        pcVar9 = (char *)FUN_0040a5c0(pcVar9,pcVar20 + (1 - (long)pcVar9));\n      }\n      *(undefined8 *)(puVar23 + -0x110) = 0x40553c;\n      free(*(void **)(puVar23 + -0xe0));\n      if (*(long *)(puVar23 + -0xf0) != 0) {\n        *(undefined8 *)(puVar23 + -0x110) = 0x40554e;\n        FUN_004066a0(*(long *)(puVar23 + -0xf0));\n      }\n    }\n  }\n  else {\n    *(undefined8 *)(puVar23 + -0x110) = 0x405705;\n    piVar14 = __errno_location();\n    pcVar9 = (char *)0x0;\n    *piVar14 = 0x16;\n  }\n  return pcVar9;\nLAB_004054e8:\n  if (cVar18 == '.') goto LAB_004052f8;\nLAB_0040536c:\n  if (pcVar21[-1] != '/') {\n    *pcVar21 = '/';\n    pcVar21 = pcVar21 + 1;\n  }\n  if (pcVar25 <= pcVar21 + sVar8) {\n    lVar22 = (long)pcVar21 - (long)pcVar9;\n    *(size_t *)(puVar23 + -0x100) = sVar8;\n    lVar13 = 0x1000 - (long)pcVar9;\n    if (0xfff < (long)sVar8) {\n      lVar13 = (sVar8 + 1) - (long)pcVar9;\n    }\n    *(undefined8 *)(puVar23 + -0x110) = 0x4053af;\n    pcVar9 = (char *)FUN_0040a5c0(pcVar9,pcVar25 + lVar13);\n    sVar8 = *(size_t *)(puVar23 + -0x100);\n    pcVar25 = pcVar9 + (long)(pcVar25 + lVar13);\n    pcVar21 = pcVar9 + lVar22;\n  }\n  *(size_t *)(puVar23 + -0x100) = sVar8;\n  *(undefined8 *)(puVar23 + -0x110) = 0x4053d0;\n  memcpy(pcVar21,pcVar12,sVar8);\n  iVar5 = *(int *)(puVar23 + -0xf4);\n  pcVar20 = pcVar21 + *(long *)(puVar23 + -0x100);\n  *pcVar20 = '\\0';\n  pcVar21 = pcVar20;\n  if ((iVar5 == 2) && (*(int *)(puVar23 + -0xd0) != 0)) {\nLAB_004053eb:\n    *(undefined4 *)(puVar23 + -0xb0) = 0;\nLAB_004053f3:\n    if ((*pcVar7 == '\\0') || (*(int *)(puVar23 + -0xf4) == 2)) {\nLAB_00405404:\n      cVar4 = *pcVar7;\n      pcVar20 = pcVar21;\n      goto LAB_004052f8;\n    }\n    *(undefined8 *)(puVar23 + -0x110) = 0x40574d;\n    piVar14 = __errno_location();\n    iVar5 = 0x14;\nLAB_00405755:\n    *(int *)(puVar23 + -0xf4) = iVar5;\n    *(int **)(puVar23 + -0x100) = piVar14;\n    *(undefined8 *)(puVar23 + -0x110) = 0x405768;\n    free(*(void **)(puVar23 + -0xe0));\n    *(undefined8 *)(puVar23 + -0x110) = 0x405770;\n    free(pcVar9);\n    puVar19 = *(undefined4 **)(puVar23 + -0x100);\n    uVar17 = *(undefined4 *)(puVar23 + -0xf4);\n    if (*(long *)(puVar23 + -0xf0) == 0) goto LAB_004056b1;\n  }\n  else {\n    if (*(int *)(puVar23 + -0xd0) == 0) {\n      *(undefined8 *)(puVar23 + -0x110) = 0x40556d;\n      iVar5 = __lxstat(1,pcVar9,(stat *)(puVar23 + -200));\n    }\n    else {\n      *(undefined8 *)(puVar23 + -0x110) = 0x40544e;\n      iVar5 = __xstat(1,pcVar9,(stat *)(puVar23 + -200));\n    }\n    if (iVar5 != 0) {\n      *(undefined8 *)(puVar23 + -0x110) = 0x40545c;\n      piVar14 = __errno_location();\n      iVar5 = *piVar14;\n      if (*(int *)(puVar23 + -0xf4) != 0) {\n        if (*(int *)(puVar23 + -0xf4) != 1) goto LAB_004053eb;\n        *(int *)(puVar23 + -0xcc) = iVar5;\n        *(int **)(puVar23 + -0x100) = piVar14;\n        *(undefined8 *)(puVar23 + -0x110) = 0x40548c;\n        sVar8 = strspn(pcVar7,\"/\");\n        piVar14 = *(int **)(puVar23 + -0x100);\n        iVar5 = *(int *)(puVar23 + -0xcc);\n        if ((pcVar7[sVar8] == '\\0') && (iVar5 == 2)) goto LAB_004054a9;\n      }\n      goto LAB_00405755;\n    }\n    if ((*(uint *)(puVar23 + -0xb0) & 0xf000) != 0xa000) {\n      if ((*(uint *)(puVar23 + -0xb0) & 0xf000) == 0x4000) goto LAB_00405404;\n      goto LAB_004053f3;\n    }\n    if (*(long *)(puVar23 + -0xf0) == 0) {\n      *(undefined8 *)(puVar23 + -0x110) = 0x40572f;\n      lVar13 = FUN_00406460(7,0,FUN_00406e20,FUN_00406e90,FUN_00406ed0);\n      *(long *)(puVar23 + -0xf0) = lVar13;\n      if (lVar13 == 0) {\n                    /* WARNING: Subroutine does not return */\n        *(undefined8 *)(puVar23 + -0x110) = 0x405742;\n        FUN_0040a7b0();\n      }\n    }\n    *(undefined8 *)(puVar23 + -0x110) = 0x4055a0;\n    cVar4 = FUN_00405b90(*(undefined8 *)(puVar23 + -0xf0),*(undefined8 *)(puVar23 + -0xe8),\n                         puVar23 + -200);\n    if (cVar4 == '\\0') {\n      *(undefined8 *)(puVar23 + -0x110) = 0x4055bc;\n      FUN_00405b00(*(undefined8 *)(puVar23 + -0xf0),*(undefined8 *)(puVar23 + -0xe8),puVar23 + -200)\n      ;\n      *(undefined8 *)(puVar23 + -0x110) = 0x4055c9;\n      pcVar12 = (char *)FUN_0040d6b0(pcVar9,*(undefined8 *)(puVar23 + -0x98));\n      if (pcVar12 != (char *)0x0) {\n        *(undefined8 *)(puVar23 + -0x110) = 0x4055dd;\n        __n = strlen(pcVar12);\n        *(undefined8 *)(puVar23 + -0x110) = 0x4055e8;\n        sVar8 = strlen(pcVar7);\n        uVar1 = __n + 1 + sVar8;\n        if (*(long *)(puVar23 + -0xd8) == 0) {\n          *(size_t *)(puVar23 + -0x100) = sVar8;\n          uVar15 = 0x1000;\n          if (0xfff < uVar1) {\n            uVar15 = uVar1;\n          }\n          *(ulong *)(puVar23 + -0xd8) = uVar15;\n          *(undefined8 *)(puVar23 + -0x110) = 0x4057b2;\n          uVar10 = FUN_0040a560(uVar15);\n          sVar8 = *(size_t *)(puVar23 + -0x100);\n          *(undefined8 *)(puVar23 + -0xe0) = uVar10;\n        }\n        else if (*(ulong *)(puVar23 + -0xd8) <= uVar1 && uVar1 != *(ulong *)(puVar23 + -0xd8)) {\n          *(ulong *)(puVar23 + -0x100) = uVar1;\n          *(size_t *)(puVar23 + -0xe8) = sVar8;\n          *(undefined8 *)(puVar23 + -0x110) = 0x405867;\n          uVar10 = FUN_0040a5c0(*(undefined8 *)(puVar23 + -0xe0),uVar1);\n          sVar8 = *(size_t *)(puVar23 + -0xe8);\n          *(undefined8 *)(puVar23 + -0xe0) = uVar10;\n          *(undefined8 *)(puVar23 + -0xd8) = *(undefined8 *)(puVar23 + -0x100);\n        }\n        *(undefined8 *)(puVar23 + -0x110) = 0x40561c;\n        memmove((void *)(*(long *)(puVar23 + -0xe0) + __n),pcVar7,sVar8 + 1);\n        *(undefined8 *)(puVar23 + -0x110) = 0x40562c;\n        pcVar7 = (char *)memcpy(*(void **)(puVar23 + -0xe0),pcVar12,__n);\n        cVar4 = *pcVar12;\n        pcVar21 = pcVar9 + 1;\n        *(char **)(puVar23 + -0xe8) = pcVar7;\n        if (cVar4 == '/') {\n          *pcVar9 = '/';\n        }\n        else {\n          bVar3 = pcVar21 < pcVar20;\n          pcVar21 = pcVar20;\n          if ((bVar3) && (pcVar21 = pcVar20 + -1, pcVar9 < pcVar21)) {\n            cVar4 = pcVar20[-2];\n            pcVar20 = pcVar21;\n            while ((pcVar21 = pcVar20, cVar4 != '/' && (pcVar21 = pcVar20 + -1, pcVar9 != pcVar21)))\n            {\n              cVar4 = pcVar20[-2];\n              pcVar20 = pcVar21;\n            }\n          }\n        }\n        *(undefined8 *)(puVar23 + -0x110) = 0x405654;\n        free(pcVar12);\n        goto LAB_00405404;\n      }\n      *(undefined8 *)(puVar23 + -0x110) = 0x4057f8;\n      piVar14 = __errno_location();\n      iVar5 = *piVar14;\n      if ((*(int *)(puVar23 + -0xf4) == 2) && (iVar5 != 0xc)) goto LAB_004054a9;\n    }\n    else {\n      if (*(int *)(puVar23 + -0xf4) == 2) {\nLAB_004054a9:\n        cVar4 = pcVar27[1];\n        goto LAB_004052f8;\n      }\n      *(undefined8 *)(puVar23 + -0x110) = 0x405669;\n      piVar14 = __errno_location();\n      iVar5 = 0x28;\n    }\n    *(int *)(puVar23 + -0xf4) = iVar5;\n    *(int **)(puVar23 + -0x100) = piVar14;\n    *(undefined8 *)(puVar23 + -0x110) = 0x405684;\n    free(*(void **)(puVar23 + -0xe0));\n    *(undefined8 *)(puVar23 + -0x110) = 0x40568c;\n    free(pcVar9);\n    puVar19 = *(undefined4 **)(puVar23 + -0x100);\n    uVar17 = *(undefined4 *)(puVar23 + -0xf4);\n  }\n  *(undefined4 *)(puVar23 + -0xf4) = uVar17;\n  *(undefined4 **)(puVar23 + -0x100) = puVar19;\n  *(undefined8 *)(puVar23 + -0x110) = 0x4056a8;\n  FUN_004066a0(*(undefined8 *)(puVar23 + -0xf0));\n  uVar17 = *(undefined4 *)(puVar23 + -0xf4);\n  puVar19 = *(undefined4 **)(puVar23 + -0x100);\nLAB_004056b1:\n  *puVar19 = uVar17;\n  return (char *)0x0;\n}\n\n",
            "funcName": "FUN_00404ed0"
        },
        {
            "funcStartAddr": "0x405250",
            "funcEndAddr": "0x40587b",
            "decompiledFuncCode": "\nchar * FUN_00405250(char *param_1,uint param_2)\n\n{\n  ulong uVar1;\n  bool bVar2;\n  long lVar3;\n  char cVar4;\n  int iVar5;\n  char *__s;\n  size_t sVar6;\n  char *pcVar7;\n  size_t sVar8;\n  int *piVar9;\n  uint uVar10;\n  char cVar11;\n  char *pcVar12;\n  char *pcVar13;\n  long lVar14;\n  char *pcVar15;\n  char *pcVar16;\n  long local_f0;\n  char *local_e8;\n  void *local_e0;\n  ulong local_d8;\n  stat local_c8;\n  \n  uVar10 = param_2 & 3;\n  if (((uVar10 & uVar10 - 1) == 0) && (param_1 != (char *)0x0)) {\n    if (*param_1 == '\\0') {\n      piVar9 = __errno_location();\n      __s = (char *)0x0;\n      *piVar9 = 2;\n    }\n    else {\n      if (*param_1 == '/') {\n        __s = (char *)FUN_0040a560(0x1000);\n        pcVar15 = __s + 0x1000;\n        pcVar12 = __s + 1;\n        *__s = '/';\n      }\n      else {\n        __s = (char *)FUN_0040a7f0();\n        if (__s == (char *)0x0) {\n          return (char *)0x0;\n        }\n        sVar6 = strlen(__s);\n        if (sVar6 < 0x1000) {\n          __s = (char *)FUN_0040a5c0(__s,0x1000);\n          pcVar12 = __s + sVar6;\n          pcVar15 = __s + 0x1000;\n        }\n        else {\n          pcVar12 = __s + sVar6;\n          pcVar15 = pcVar12;\n        }\n      }\n      cVar4 = *param_1;\n      local_f0 = 0;\n      local_d8 = 0;\n      local_e0 = (void *)0x0;\n      local_e8 = param_1;\nLAB_004052f8:\n      while (pcVar13 = pcVar12, cVar4 != '\\0') {\n        pcVar7 = param_1;\n        cVar11 = cVar4;\n        if (cVar4 == '/') {\n          do {\n            param_1 = param_1 + 1;\n            cVar11 = *param_1;\n          } while (cVar11 == '/');\n          pcVar7 = param_1;\n          if (cVar11 == '\\0') break;\n        }\n        do {\n          pcVar16 = param_1;\n          cVar4 = pcVar16[1];\n          param_1 = pcVar16 + 1;\n          if (cVar4 == '\\0') break;\n        } while (cVar4 != '/');\n        if (param_1 == pcVar7) break;\n        sVar6 = (long)param_1 - (long)pcVar7;\n        pcVar12 = pcVar13;\n        if (sVar6 == 1) goto LAB_004054e8;\n        if (((cVar11 != '.') || (sVar6 != 2)) || (pcVar7[1] != '.')) goto LAB_0040536c;\n        if (((__s + 1 < pcVar13) && (pcVar12 = pcVar13 + -1, __s < pcVar12)) && (pcVar13[-2] != '/')\n           ) {\n          for (pcVar12 = pcVar13 + -2; (__s != pcVar12 && (pcVar12[-1] != '/'));\n              pcVar12 = pcVar12 + -1) {\n          }\n        }\n      }\n      if ((__s + 1 < pcVar13) && (pcVar13[-1] == '/')) {\n        pcVar7 = pcVar13 + -1;\n        pcVar12 = pcVar13;\n      }\n      else {\n        pcVar12 = pcVar13 + 1;\n        pcVar7 = pcVar13;\n      }\n      *pcVar7 = '\\0';\n      if (pcVar15 != pcVar12) {\n        __s = (char *)FUN_0040a5c0(__s,pcVar7 + (1 - (long)__s));\n      }\n      free(local_e0);\n      if (local_f0 != 0) {\n        FUN_004066a0(local_f0);\n      }\n    }\n  }\n  else {\n    piVar9 = __errno_location();\n    __s = (char *)0x0;\n    *piVar9 = 0x16;\n  }\n  return __s;\nLAB_004054e8:\n  if (cVar11 == '.') goto LAB_004052f8;\nLAB_0040536c:\n  if (pcVar13[-1] != '/') {\n    *pcVar13 = '/';\n    pcVar13 = pcVar13 + 1;\n  }\n  if (pcVar15 <= pcVar13 + sVar6) {\n    lVar14 = (long)pcVar13 - (long)__s;\n    lVar3 = 0x1000 - (long)__s;\n    if (0xfff < (long)sVar6) {\n      lVar3 = (sVar6 + 1) - (long)__s;\n    }\n    __s = (char *)FUN_0040a5c0(__s,pcVar15 + lVar3);\n    pcVar15 = __s + (long)(pcVar15 + lVar3);\n    pcVar13 = __s + lVar14;\n  }\n  memcpy(pcVar13,pcVar7,sVar6);\n  pcVar12 = pcVar13 + sVar6;\n  *pcVar12 = '\\0';\n  pcVar13 = pcVar12;\n  if ((uVar10 == 2) && ((param_2 & 4) != 0)) {\nLAB_004053eb:\n    local_c8.st_mode = 0;\nLAB_004053f3:\n    if ((*param_1 == '\\0') || (uVar10 == 2)) {\nLAB_00405404:\n      cVar4 = *param_1;\n      pcVar12 = pcVar13;\n      goto LAB_004052f8;\n    }\n    piVar9 = __errno_location();\n    iVar5 = 0x14;\nLAB_00405755:\n    free(local_e0);\n    free(__s);\n    if (local_f0 == 0) goto LAB_004056b1;\n  }\n  else {\n    if ((param_2 & 4) == 0) {\n      iVar5 = __lxstat(1,__s,&local_c8);\n    }\n    else {\n      iVar5 = __xstat(1,__s,&local_c8);\n    }\n    if (iVar5 != 0) {\n      piVar9 = __errno_location();\n      iVar5 = *piVar9;\n      if (uVar10 != 0) {\n        if (uVar10 != 1) goto LAB_004053eb;\n        sVar6 = strspn(param_1,\"/\");\n        if ((param_1[sVar6] == '\\0') && (iVar5 == 2)) goto LAB_004054a9;\n      }\n      goto LAB_00405755;\n    }\n    if ((local_c8.st_mode & 0xf000) != 0xa000) {\n      if ((local_c8.st_mode & 0xf000) == 0x4000) goto LAB_00405404;\n      goto LAB_004053f3;\n    }\n    if ((local_f0 == 0) &&\n       (local_f0 = FUN_00406460(7,0,FUN_00406e20,FUN_00406e90,FUN_00406ed0), local_f0 == 0)) {\n                    /* WARNING: Subroutine does not return */\n      FUN_0040a7b0();\n    }\n    cVar4 = FUN_00405b90(local_f0,local_e8,&local_c8);\n    if (cVar4 == '\\0') {\n      FUN_00405b00(local_f0,local_e8,&local_c8);\n      pcVar7 = (char *)FUN_0040d6b0(__s,local_c8.st_size);\n      if (pcVar7 != (char *)0x0) {\n        sVar6 = strlen(pcVar7);\n        sVar8 = strlen(param_1);\n        uVar1 = sVar6 + 1 + sVar8;\n        if (local_d8 == 0) {\n          local_d8 = 0x1000;\n          if (0xfff < uVar1) {\n            local_d8 = uVar1;\n          }\n          local_e0 = (void *)FUN_0040a560(local_d8);\n        }\n        else if (local_d8 < uVar1) {\n          local_e0 = (void *)FUN_0040a5c0(local_e0,uVar1);\n          local_d8 = uVar1;\n        }\n        memmove((void *)((long)local_e0 + sVar6),param_1,sVar8 + 1);\n        param_1 = (char *)memcpy(local_e0,pcVar7,sVar6);\n        pcVar13 = __s + 1;\n        if (*pcVar7 == '/') {\n          *__s = '/';\n        }\n        else {\n          bVar2 = pcVar13 < pcVar12;\n          pcVar13 = pcVar12;\n          if ((bVar2) && (pcVar13 = pcVar12 + -1, __s < pcVar13)) {\n            cVar4 = pcVar12[-2];\n            pcVar12 = pcVar13;\n            while ((pcVar13 = pcVar12, cVar4 != '/' && (pcVar13 = pcVar12 + -1, __s != pcVar13))) {\n              cVar4 = pcVar12[-2];\n              pcVar12 = pcVar13;\n            }\n          }\n        }\n        free(pcVar7);\n        local_e8 = param_1;\n        goto LAB_00405404;\n      }\n      piVar9 = __errno_location();\n      iVar5 = *piVar9;\n      if ((uVar10 == 2) && (iVar5 != 0xc)) goto LAB_004054a9;\n    }\n    else {\n      if (uVar10 == 2) {\nLAB_004054a9:\n        cVar4 = pcVar16[1];\n        goto LAB_004052f8;\n      }\n      piVar9 = __errno_location();\n      iVar5 = 0x28;\n    }\n    free(local_e0);\n    free(__s);\n  }\n  FUN_004066a0(local_f0);\nLAB_004056b1:\n  *piVar9 = iVar5;\n  return (char *)0x0;\n}\n\n",
            "funcName": "FUN_00405250"
        },
        {
            "funcStartAddr": "0x4058d0",
            "funcEndAddr": "0x4058d8",
            "decompiledFuncCode": "\nvoid FUN_004058d0(undefined8 param_1)\n\n{\n  DAT_00617700 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_004058d0"
        },
        {
            "funcStartAddr": "0x4058e0",
            "funcEndAddr": "0x4058e8",
            "decompiledFuncCode": "\nvoid FUN_004058e0(undefined param_1)\n\n{\n  DAT_006176f8 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_004058e0"
        },
        {
            "funcStartAddr": "0x4058f0",
            "funcEndAddr": "0x40598e",
            "decompiledFuncCode": "\nvoid FUN_004058f0(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_0040db30(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_006176f8 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_00617700 == 0) {\n        error(0,*piVar2,&DAT_00413b3f,uVar3);\n      }\n      else {\n        uVar4 = FUN_00409c30();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_0040596e;\n    }\n  }\n  iVar1 = FUN_0040db30(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_0040596e:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_00617568);\n}\n\n",
            "funcName": "FUN_004058f0"
        },
        {
            "funcStartAddr": "0x405990",
            "funcEndAddr": "0x4059a8",
            "decompiledFuncCode": "\nvoid FUN_00405990(void)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_00405a10();\n  if (lVar1 != 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0040a7b0();\n}\n\n",
            "funcName": "FUN_00405990"
        },
        {
            "funcStartAddr": "0x4059b0",
            "funcEndAddr": "0x405a08",
            "decompiledFuncCode": "\nulong FUN_004059b0(char *param_1)\n\n{\n  char cVar1;\n  long lVar2;\n  ulong uVar3;\n  ulong uVar4;\n  \n  cVar1 = *param_1;\n  lVar2 = FUN_00405a70();\n  uVar3 = lVar2 - (long)param_1;\n  if (((cVar1 == '/') < uVar3) && (*(char *)(lVar2 + -1) == '/')) {\n    do {\n      uVar4 = uVar3 - 1;\n      if ((cVar1 == '/') == uVar4) {\n        return uVar4;\n      }\n      lVar2 = uVar3 - 2;\n      uVar3 = uVar4;\n    } while (param_1[lVar2] == '/');\n    return uVar4;\n  }\n  return uVar3;\n}\n\n",
            "funcName": "FUN_004059b0"
        },
        {
            "funcStartAddr": "0x405a10",
            "funcEndAddr": "0x405a6a",
            "decompiledFuncCode": "\nundefined * FUN_00405a10(void *param_1)\n\n{\n  size_t __n;\n  undefined *__dest;\n  \n  __n = FUN_004059b0();\n  __dest = (undefined *)malloc(__n + 1 + (ulong)(__n == 0));\n  if (__dest != (undefined *)0x0) {\n    __dest = (undefined *)memcpy(__dest,param_1,__n);\n    if (__n == 0) {\n      *__dest = 0x2e;\n      __n = 1;\n    }\n    __dest[__n] = 0;\n  }\n  return __dest;\n}\n\n",
            "funcName": "FUN_00405a10"
        },
        {
            "funcStartAddr": "0x405a70",
            "funcEndAddr": "0x405ac2",
            "decompiledFuncCode": "\nchar * FUN_00405a70(char *param_1)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  char cVar3;\n  \n  cVar3 = *param_1;\n  while (cVar3 == '/') {\n    param_1 = param_1 + 1;\n    cVar3 = *param_1;\n  }\n  if (cVar3 != '\\0') {\n    bVar1 = false;\n    pcVar2 = param_1;\n    do {\n      while (cVar3 == '/') {\n        pcVar2 = pcVar2 + 1;\n        cVar3 = *pcVar2;\n        bVar1 = true;\n        if (cVar3 == '\\0') {\n          return param_1;\n        }\n      }\n      if (bVar1) {\n        bVar1 = false;\n        param_1 = pcVar2;\n      }\n      pcVar2 = pcVar2 + 1;\n      cVar3 = *pcVar2;\n    } while (cVar3 != '\\0');\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_00405a70"
        },
        {
            "funcStartAddr": "0x405ad0",
            "funcEndAddr": "0x405af7",
            "decompiledFuncCode": "\nvoid FUN_00405ad0(char *param_1)\n\n{\n  long lVar1;\n  size_t sVar2;\n  \n  sVar2 = strlen(param_1);\n  if (1 < sVar2) {\n    while (lVar1 = sVar2 - 1, sVar2 = sVar2 - 1, param_1[lVar1] == '/') {\n      if (sVar2 == 1) {\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00405ad0"
        },
        {
            "funcStartAddr": "0x405b00",
            "funcEndAddr": "0x405b78",
            "decompiledFuncCode": "\nvoid FUN_00405b00(long param_1,undefined8 param_2,undefined8 *param_3)\n\n{\n  undefined8 *puVar1;\n  undefined8 uVar2;\n  undefined8 *puVar3;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  puVar1 = (undefined8 *)FUN_0040a560(0x18);\n  uVar2 = FUN_0040a790(param_2);\n  *puVar1 = uVar2;\n  puVar1[1] = param_3[1];\n  puVar1[2] = *param_3;\n  puVar3 = (undefined8 *)FUN_00406c00(param_1,puVar1);\n  if (puVar3 != (undefined8 *)0x0) {\n    if (puVar1 != puVar3) {\n      FUN_00406ed0(puVar1);\n      return;\n    }\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0040a7b0();\n}\n\n",
            "funcName": "FUN_00405b00"
        },
        {
            "funcStartAddr": "0x405b90",
            "funcEndAddr": "0x405bc4",
            "decompiledFuncCode": "\nulong FUN_00405b90(long param_1,undefined8 param_2,undefined8 *param_3)\n\n{\n  ulong uVar1;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_1 != 0) {\n    local_20 = param_3[1];\n    local_18 = *param_3;\n    local_28 = param_2;\n    uVar1 = FUN_004061f0(param_1,&local_28);\n    return uVar1 & 0xffffffffffffff00 | (ulong)(uVar1 != 0);\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_00405b90"
        },
        {
            "funcStartAddr": "0x405bd0",
            "funcEndAddr": "0x405c61",
            "decompiledFuncCode": "\nulong FUN_00405bd0(ulong param_1)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long lVar5;\n  \n  uVar3 = 10;\n  if (9 < param_1) {\n    uVar3 = param_1;\n  }\n  uVar3 = uVar3 | 1;\n  do {\n    if (uVar3 == 0xffffffffffffffff) {\n      return 0xffffffffffffffff;\n    }\n    uVar1 = uVar3 % 3;\n    if (uVar3 < 10) {\nLAB_00405c50:\n      if (uVar1 != 0) {\n        return uVar3;\n      }\n    }\n    else if (uVar1 != 0) {\n      lVar5 = 0x10;\n      uVar4 = 9;\n      uVar2 = 3;\n      do {\n        uVar2 = uVar2 + 2;\n        uVar4 = uVar4 + lVar5;\n        uVar1 = uVar3 % uVar2;\n        if (uVar3 <= uVar4) goto LAB_00405c50;\n        lVar5 = lVar5 + 8;\n      } while (uVar1 != 0);\n    }\n    uVar3 = uVar3 + 2;\n  } while( true );\n}\n\n",
            "funcName": "FUN_00405bd0"
        },
        {
            "funcStartAddr": "0x405c70",
            "funcEndAddr": "0x405c80",
            "decompiledFuncCode": "\nulong FUN_00405c70(ulong param_1,ulong param_2)\n\n{\n  return (param_1 >> 3 | param_1 << 0x3d) % param_2;\n}\n\n",
            "funcName": "FUN_00405c70"
        },
        {
            "funcStartAddr": "0x405c80",
            "funcEndAddr": "0x405c87",
            "decompiledFuncCode": "\nbool FUN_00405c80(long param_1,long param_2)\n\n{\n  return param_1 == param_2;\n}\n\n",
            "funcName": "FUN_00405c80"
        },
        {
            "funcStartAddr": "0x405c90",
            "funcEndAddr": "0x405cb1",
            "decompiledFuncCode": "\nlong FUN_00405c90(long *param_1,undefined8 param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = (*(code *)param_1[6])(param_2,param_1[2]);\n  if (uVar1 <= (ulong)param_1[2] && param_1[2] != uVar1) {\n    return uVar1 * 0x10 + *param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405c90"
        },
        {
            "funcStartAddr": "0x405cc0",
            "funcEndAddr": "0x405dc5",
            "decompiledFuncCode": "\nlong FUN_00405cc0(long param_1,long param_2,long **param_3,char param_4)\n\n{\n  undefined8 *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  char cVar5;\n  long *plVar6;\n  long *plVar7;\n  long lVar8;\n  \n  plVar6 = (long *)FUN_00405c90();\n  *param_3 = plVar6;\n  lVar8 = *plVar6;\n  if (lVar8 == 0) {\n    return 0;\n  }\n  if (lVar8 != param_2) {\n    cVar5 = (**(code **)(param_1 + 0x38))(param_2);\n    if (cVar5 == '\\0') {\n      plVar7 = (long *)plVar6[1];\n      if (plVar7 == (long *)0x0) {\n        return 0;\n      }\n      lVar8 = *plVar7;\n      do {\n        if (param_2 == lVar8) {\nLAB_00405d4c:\n          if (param_4 == '\\0') {\n            return lVar8;\n          }\n          plVar6[1] = plVar7[1];\n          *plVar7 = 0;\n          plVar7[1] = *(long *)(param_1 + 0x48);\n          *(long **)(param_1 + 0x48) = plVar7;\n          return lVar8;\n        }\n        cVar5 = (**(code **)(param_1 + 0x38))(param_2);\n        if (cVar5 != '\\0') {\n          plVar7 = (long *)plVar6[1];\n          lVar8 = *plVar7;\n          goto LAB_00405d4c;\n        }\n        plVar6 = (long *)plVar6[1];\n        plVar7 = (long *)plVar6[1];\n        if (plVar7 == (long *)0x0) {\n          return 0;\n        }\n        lVar8 = *plVar7;\n      } while( true );\n    }\n    lVar8 = *plVar6;\n  }\n  if (param_4 != '\\0') {\n    puVar1 = (undefined8 *)plVar6[1];\n    if (puVar1 != (undefined8 *)0x0) {\n      uVar2 = *(undefined4 *)((long)puVar1 + 4);\n      uVar3 = *(undefined4 *)(puVar1 + 1);\n      uVar4 = *(undefined4 *)((long)puVar1 + 0xc);\n      *(undefined4 *)plVar6 = *(undefined4 *)puVar1;\n      *(undefined4 *)((long)plVar6 + 4) = uVar2;\n      *(undefined4 *)(plVar6 + 1) = uVar3;\n      *(undefined4 *)((long)plVar6 + 0xc) = uVar4;\n      *puVar1 = 0;\n      puVar1[1] = *(undefined8 *)(param_1 + 0x48);\n      *(undefined8 **)(param_1 + 0x48) = puVar1;\n      return lVar8;\n    }\n    *plVar6 = 0;\n  }\n  return lVar8;\n}\n\n",
            "funcName": "FUN_00405cc0"
        },
        {
            "funcStartAddr": "0x405de0",
            "funcEndAddr": "0x405e5a",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_00405de0(float **param_1)\n\n{\n  float fVar1;\n  float *pfVar2;\n  float fVar3;\n  \n  pfVar2 = *param_1;\n  if (pfVar2 == (float *)&DAT_00412280) {\n    return 1;\n  }\n  fVar1 = pfVar2[2];\n  if ((((_DAT_00412294 < fVar1) && (fVar1 < DAT_00412298)) && (_DAT_0041229c < pfVar2[3])) &&\n     (_DAT_004122a0 <= *pfVar2)) {\n    fVar3 = *pfVar2 + _DAT_00412294;\n    if (((fVar3 < pfVar2[1]) && (pfVar2[1] <= DAT_004122a4)) && (fVar3 < fVar1)) {\n      return 1;\n    }\n  }\n  *param_1 = (float *)&DAT_00412280;\n  return 0;\n}\n\n",
            "funcName": "FUN_00405de0"
        },
        {
            "funcStartAddr": "0x405e60",
            "funcEndAddr": "0x405f9a",
            "decompiledFuncCode": "\nundefined8 FUN_00405e60(long param_1,long **param_2,char param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  long lVar6;\n  \n  plVar5 = *param_2;\n  if (param_2[1] <= plVar5) {\n    return 1;\n  }\n  do {\n    while (lVar6 = *plVar5, lVar6 == 0) {\nLAB_00405e88:\n      plVar5 = plVar5 + 2;\n      if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n        return 1;\n      }\n    }\n    plVar3 = (long *)plVar5[1];\n    if ((long *)plVar5[1] != (long *)0x0) {\n      do {\n        while( true ) {\n          lVar6 = *plVar3;\n          plVar2 = (long *)FUN_00405c90(param_1,lVar6);\n          plVar4 = (long *)plVar3[1];\n          if (*plVar2 != 0) break;\n          *plVar2 = lVar6;\n          *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n          *plVar3 = 0;\n          plVar3[1] = *(long *)(param_1 + 0x48);\n          *(long **)(param_1 + 0x48) = plVar3;\n          plVar3 = plVar4;\n          if (plVar4 == (long *)0x0) goto LAB_00405eff;\n        }\n        plVar3[1] = plVar2[1];\n        plVar2[1] = (long)plVar3;\n        plVar3 = plVar4;\n      } while (plVar4 != (long *)0x0);\nLAB_00405eff:\n      lVar6 = *plVar5;\n    }\n    plVar5[1] = 0;\n    if (param_3 != '\\0') goto LAB_00405e88;\n    plVar3 = (long *)FUN_00405c90(param_1,lVar6);\n    if (*plVar3 == 0) {\n      *plVar3 = lVar6;\n      *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n    }\n    else {\n      plVar4 = *(long **)(param_1 + 0x48);\n      if (plVar4 == (long *)0x0) {\n        plVar4 = (long *)malloc(0x10);\n        if (plVar4 == (long *)0x0) {\n          return 0;\n        }\n      }\n      else {\n        *(long *)(param_1 + 0x48) = plVar4[1];\n      }\n      lVar1 = plVar3[1];\n      *plVar4 = lVar6;\n      plVar4[1] = lVar1;\n      plVar3[1] = (long)plVar4;\n    }\n    *plVar5 = 0;\n    plVar5 = plVar5 + 2;\n    param_2[3] = (long *)((long)param_2[3] + -1);\n    if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n      return 1;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_00405e60"
        },
        {
            "funcStartAddr": "0x405fb0",
            "funcEndAddr": "0x405fb5",
            "decompiledFuncCode": "\nundefined8 FUN_00405fb0(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x10);\n}\n\n",
            "funcName": "FUN_00405fb0"
        },
        {
            "funcStartAddr": "0x405fc0",
            "funcEndAddr": "0x405fc5",
            "decompiledFuncCode": "\nundefined8 FUN_00405fc0(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x18);\n}\n\n",
            "funcName": "FUN_00405fc0"
        },
        {
            "funcStartAddr": "0x405fd0",
            "funcEndAddr": "0x405fd5",
            "decompiledFuncCode": "\nundefined8 FUN_00405fd0(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x20);\n}\n\n",
            "funcName": "FUN_00405fd0"
        },
        {
            "funcStartAddr": "0x405fe0",
            "funcEndAddr": "0x40602f",
            "decompiledFuncCode": "\nvoid FUN_00405fe0(long **param_1)\n\n{\n  long *plVar1;\n  long lVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  plVar1 = param_1[1];\n  uVar3 = 0;\n  if (plVar1 <= plVar5) {\n    return;\n  }\n  do {\n    while (*plVar5 == 0) {\n      plVar5 = plVar5 + 2;\n      if (plVar1 <= plVar5) {\n        return;\n      }\n    }\n    uVar4 = 1;\n    for (lVar2 = plVar5[1]; lVar2 != 0; lVar2 = *(long *)(lVar2 + 8)) {\n      uVar4 = uVar4 + 1;\n    }\n    if (uVar3 < uVar4) {\n      uVar3 = uVar4;\n    }\n    plVar5 = plVar5 + 2;\n  } while (plVar5 < plVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00405fe0"
        },
        {
            "funcStartAddr": "0x406030",
            "funcEndAddr": "0x406092",
            "decompiledFuncCode": "\nbool FUN_00406030(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  \n  plVar2 = *param_1;\n  plVar3 = (long *)0x0;\n  plVar4 = (long *)0x0;\n  do {\n    while( true ) {\n      if (param_1[1] <= plVar2) {\n        if (param_1[3] != plVar4) {\n          return false;\n        }\n        return param_1[4] == plVar3;\n      }\n      if (*plVar2 != 0) break;\nLAB_00406048:\n      plVar2 = plVar2 + 2;\n    }\n    lVar1 = plVar2[1];\n    plVar4 = (long *)((long)plVar4 + 1);\n    plVar3 = (long *)((long)plVar3 + 1);\n    if (lVar1 == 0) goto LAB_00406048;\n    do {\n      lVar1 = *(long *)(lVar1 + 8);\n      plVar3 = (long *)((long)plVar3 + 1);\n    } while (lVar1 != 0);\n    plVar2 = plVar2 + 2;\n  } while( true );\n}\n\n",
            "funcName": "FUN_00406030"
        },
        {
            "funcStartAddr": "0x4060a0",
            "funcEndAddr": "0x4061dc",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_004060a0(long **param_1,undefined8 param_2)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long lVar3;\n  ulong uVar4;\n  ulong uVar5;\n  long *plVar6;\n  double dVar7;\n  double dVar8;\n  \n  uVar5 = 0;\n  plVar1 = param_1[2];\n  plVar2 = param_1[3];\n  for (plVar6 = *param_1; plVar6 < param_1[1]; plVar6 = plVar6 + 2) {\n    while (*plVar6 != 0) {\n      uVar4 = 1;\n      for (lVar3 = plVar6[1]; lVar3 != 0; lVar3 = *(long *)(lVar3 + 8)) {\n        uVar4 = uVar4 + 1;\n      }\n      if (uVar5 < uVar4) {\n        uVar5 = uVar4;\n      }\n      plVar6 = plVar6 + 2;\n      if (param_1[1] <= plVar6) goto LAB_0040610d;\n    }\n  }\nLAB_0040610d:\n  __fprintf_chk(param_2,1,\"# entries:         %lu\\n\",param_1[4]);\n  __fprintf_chk(param_2,1,\"# buckets:         %lu\\n\",plVar1);\n  if ((long)plVar2 < 0) {\n    dVar7 = (double)((ulong)plVar2 >> 1 | (ulong)((uint)plVar2 & 1));\n    dVar7 = dVar7 + dVar7;\n  }\n  else {\n    dVar7 = (double)(long)plVar2;\n  }\n  if ((long)plVar1 < 0) {\n    dVar8 = (double)((ulong)plVar1 >> 1 | (ulong)((uint)plVar1 & 1));\n    dVar8 = dVar8 + dVar8;\n  }\n  else {\n    dVar8 = (double)(long)plVar1;\n  }\n  __fprintf_chk((dVar7 * _DAT_00412140) / dVar8,param_2,1,\"# buckets used:    %lu (%.2f%%)\\n\",plVar2\n               );\n  __fprintf_chk(param_2,1,\"max bucket length: %lu\\n\",uVar5);\n  return;\n}\n\n",
            "funcName": "FUN_004060a0"
        },
        {
            "funcStartAddr": "0x4061f0",
            "funcEndAddr": "0x40623b",
            "decompiledFuncCode": "\nlong FUN_004061f0(long param_1,long param_2)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  \n  plVar2 = (long *)FUN_00405c90();\n  lVar3 = *plVar2;\n  if (lVar3 == 0) {\n    return 0;\n  }\n  while( true ) {\n    if (lVar3 == param_2) {\n      return param_2;\n    }\n    cVar1 = (**(code **)(param_1 + 0x38))(param_2);\n    if (cVar1 != '\\0') break;\n    plVar2 = (long *)plVar2[1];\n    if (plVar2 == (long *)0x0) {\n      return 0;\n    }\n    lVar3 = *plVar2;\n  }\n  return *plVar2;\n}\n\n",
            "funcName": "FUN_004061f0"
        },
        {
            "funcStartAddr": "0x406250",
            "funcEndAddr": "0x40628a",
            "decompiledFuncCode": "\nlong FUN_00406250(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  \n  if (param_1[4] == (long *)0x0) {\n    return 0;\n  }\n  plVar2 = *param_1;\n  if (param_1[1] <= plVar2) {\n    lVar1 = FUN_004023a5();\n    return lVar1;\n  }\n  do {\n    if (*plVar2 != 0) {\n      return *plVar2;\n    }\n    plVar2 = plVar2 + 2;\n  } while (plVar2 < param_1[1]);\n  lVar1 = FUN_004023a5();\n  return lVar1;\n}\n\n",
            "funcName": "FUN_00406250"
        },
        {
            "funcStartAddr": "0x4062a0",
            "funcEndAddr": "0x4062f9",
            "decompiledFuncCode": "\nlong FUN_004062a0(long param_1,long param_2)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  \n  plVar2 = (long *)FUN_00405c90();\n  plVar3 = plVar2;\n  do {\n    lVar1 = *plVar3;\n    plVar3 = (long *)plVar3[1];\n    if (lVar1 == param_2) {\n      if (plVar3 != (long *)0x0) {\n        return *plVar3;\n      }\n      break;\n    }\n  } while (plVar3 != (long *)0x0);\n  do {\n    plVar2 = plVar2 + 2;\n    if (*(long **)(param_1 + 8) <= plVar2) {\n      return 0;\n    }\n  } while (*plVar2 == 0);\n  return *plVar2;\n}\n\n",
            "funcName": "FUN_004062a0"
        },
        {
            "funcStartAddr": "0x406310",
            "funcEndAddr": "0x406370",
            "decompiledFuncCode": "\nulong FUN_00406310(long **param_1,long param_2,ulong param_3)\n\n{\n  undefined8 *puVar1;\n  ulong uVar2;\n  long *plVar3;\n  \n  plVar3 = *param_1;\n  if (param_1[1] < plVar3 || param_1[1] == plVar3) {\n    return 0;\n  }\n  uVar2 = 0;\n  do {\n    if (*plVar3 != 0) {\n      if (param_3 <= uVar2) {\n        return uVar2;\n      }\n      *(long *)(param_2 + uVar2 * 8) = *plVar3;\n      uVar2 = uVar2 + 1;\n      for (puVar1 = (undefined8 *)plVar3[1]; puVar1 != (undefined8 *)0x0;\n          puVar1 = (undefined8 *)puVar1[1]) {\n        if (param_3 == uVar2) {\n          return param_3;\n        }\n        uVar2 = uVar2 + 1;\n        *(undefined8 *)(param_2 + -8 + uVar2 * 8) = *puVar1;\n      }\n    }\n    plVar3 = plVar3 + 2;\n  } while (plVar3 <= param_1[1] && param_1[1] != plVar3);\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00406310"
        },
        {
            "funcStartAddr": "0x406380",
            "funcEndAddr": "0x4063eb",
            "decompiledFuncCode": "\nlong FUN_00406380(long **param_1,code *param_2,undefined8 param_3)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  long lVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (param_1[1] < plVar5 || param_1[1] == plVar5) {\n    lVar3 = 0;\n  }\n  else {\n    lVar3 = 0;\n    do {\n      lVar4 = *plVar5;\n      plVar2 = plVar5;\n      if (lVar4 != 0) {\n        while( true ) {\n          cVar1 = (*param_2)(lVar4,param_3);\n          if (cVar1 == '\\0') {\n            return lVar3;\n          }\n          plVar2 = (long *)plVar2[1];\n          lVar3 = lVar3 + 1;\n          if (plVar2 == (long *)0x0) break;\n          lVar4 = *plVar2;\n        }\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\n  return lVar3;\n}\n\n",
            "funcName": "FUN_00406380"
        },
        {
            "funcStartAddr": "0x406400",
            "funcEndAddr": "0x406431",
            "decompiledFuncCode": "\nulong FUN_00406400(byte *param_1,ulong param_2)\n\n{\n  byte bVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  bVar1 = *param_1;\n  while (bVar1 != 0) {\n    param_1 = param_1 + 1;\n    uVar2 = (uVar2 * 0x1f + (ulong)bVar1) % param_2;\n    bVar1 = *param_1;\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00406400"
        },
        {
            "funcStartAddr": "0x406440",
            "funcEndAddr": "0x406460",
            "decompiledFuncCode": "\nvoid FUN_00406440(undefined8 *param_1)\n\n{\n  *(undefined *)(param_1 + 2) = 0;\n  *param_1 = 0x3f80000000000000;\n  param_1[1] = 0x3fb4fdf43f4ccccd;\n  return;\n}\n\n",
            "funcName": "FUN_00406440"
        },
        {
            "funcStartAddr": "0x406460",
            "funcEndAddr": "0x4065e0",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid ** FUN_00406460(ulong param_1,void *param_2,code *param_3,code *param_4,void *param_5)\n\n{\n  char cVar1;\n  void **__ptr;\n  void *__nmemb;\n  void *pvVar2;\n  float fVar3;\n  float fVar4;\n  \n  if (param_3 == (code *)0x0) {\n    param_3 = FUN_00405c70;\n  }\n  if (param_4 == (code *)0x0) {\n    param_4 = FUN_00405c80;\n  }\n  __ptr = (void **)malloc(0x50);\n  if (__ptr == (void **)0x0) {\n    return (void **)0x0;\n  }\n  if (param_2 == (void *)0x0) {\n    __ptr[5] = &DAT_00412280;\n    cVar1 = FUN_00405de0(__ptr + 5);\n    if (cVar1 == '\\0') goto LAB_00406540;\n    fVar4 = DAT_004122a8;\n    if ((long)param_1 < 0) goto LAB_004065c3;\nLAB_0040657e:\n    fVar3 = (float)param_1;\nLAB_00406587:\n    fVar3 = fVar3 / fVar4;\n    if (_DAT_004122ac <= fVar3) goto LAB_00406540;\n    if (fVar3 < _DAT_004122b0) {\n      param_1 = (ulong)fVar3;\n    }\n    else {\n      param_1 = (long)(fVar3 - _DAT_004122b0) ^ 0x8000000000000000;\n    }\n  }\n  else {\n    __ptr[5] = param_2;\n    cVar1 = FUN_00405de0(__ptr + 5);\n    if (cVar1 == '\\0') goto LAB_00406540;\n    if (*(char *)((long)param_2 + 0x10) == '\\0') {\n      fVar4 = *(float *)((long)param_2 + 8);\n      if (-1 < (long)param_1) goto LAB_0040657e;\nLAB_004065c3:\n      fVar3 = (float)(param_1 >> 1 | (ulong)((uint)param_1 & 1));\n      fVar3 = fVar3 + fVar3;\n      goto LAB_00406587;\n    }\n  }\n  __nmemb = (void *)FUN_00405bd0(param_1);\n  if (((((ulong)__nmemb >> 0x3c & 1) == 0) && ((ulong)__nmemb >> 0x3d == 0)) &&\n     (__ptr[2] = __nmemb, __nmemb != (void *)0x0)) {\n    pvVar2 = calloc((size_t)__nmemb,0x10);\n    *__ptr = pvVar2;\n    if (pvVar2 != (void *)0x0) {\n      __ptr[3] = (void *)0x0;\n      __ptr[4] = (void *)0x0;\n      __ptr[1] = (void *)((long)__nmemb * 0x10 + (long)pvVar2);\n      __ptr[6] = param_3;\n      __ptr[7] = param_4;\n      __ptr[8] = param_5;\n      __ptr[9] = (void *)0x0;\n      return __ptr;\n    }\n  }\nLAB_00406540:\n  free(__ptr);\n  return (void **)0x0;\n}\n\n",
            "funcName": "FUN_00406460"
        },
        {
            "funcStartAddr": "0x4065f0",
            "funcEndAddr": "0x406695",
            "decompiledFuncCode": "\nvoid FUN_004065f0(long **param_1)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (*param_1 < param_1[1]) {\n    do {\n      while (*plVar5 != 0) {\n        plVar4 = param_1[8];\n        plVar3 = (long *)plVar5[1];\n        while (plVar3 != (long *)0x0) {\n          if (plVar4 != (long *)0x0) {\n            (*(code *)plVar4)(*plVar3);\n            plVar4 = param_1[8];\n          }\n          plVar1 = (long *)plVar3[1];\n          plVar2 = param_1[9];\n          *plVar3 = 0;\n          plVar3[1] = (long)plVar2;\n          param_1[9] = plVar3;\n          plVar3 = plVar1;\n        }\n        if (plVar4 != (long *)0x0) {\n          (*(code *)plVar4)(*plVar5);\n        }\n        *plVar5 = 0;\n        plVar4 = plVar5 + 2;\n        plVar5[1] = 0;\n        plVar5 = plVar4;\n        if (param_1[1] < plVar4 || param_1[1] == plVar4) goto LAB_00406683;\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\nLAB_00406683:\n  param_1[3] = (long *)0x0;\n  param_1[4] = (long *)0x0;\n  return;\n}\n\n",
            "funcName": "FUN_004065f0"
        },
        {
            "funcStartAddr": "0x4066a0",
            "funcEndAddr": "0x406770",
            "decompiledFuncCode": "\nvoid FUN_004066a0(long **param_1)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long lVar5;\n  \n  plVar4 = *param_1;\n  plVar2 = param_1[1];\n  if ((param_1[8] != (long *)0x0) && (param_1[4] != (long *)0x0)) {\n    if (plVar2 <= plVar4) goto LAB_0040673c;\n    do {\n      while (lVar5 = *plVar4, plVar3 = plVar4, lVar5 == 0) {\n        plVar4 = plVar4 + 2;\n        if (plVar2 <= plVar4) goto LAB_004066ff;\n      }\n      while( true ) {\n        (*(code *)param_1[8])(lVar5);\n        plVar3 = (long *)plVar3[1];\n        if (plVar3 == (long *)0x0) break;\n        lVar5 = *plVar3;\n      }\n      plVar2 = param_1[1];\n      plVar4 = plVar4 + 2;\n    } while (plVar4 < plVar2);\nLAB_004066ff:\n    plVar4 = *param_1;\n  }\n  if (plVar4 < plVar2) {\n    do {\n      __ptr = (void *)plVar4[1];\n      while (__ptr != (void *)0x0) {\n        pvVar1 = *(void **)((long)__ptr + 8);\n        free(__ptr);\n        __ptr = pvVar1;\n      }\n      plVar4 = plVar4 + 2;\n    } while (plVar4 <= param_1[1] && param_1[1] != plVar4);\n  }\nLAB_0040673c:\n  plVar4 = param_1[9];\n  while (plVar4 != (long *)0x0) {\n    plVar2 = (long *)plVar4[1];\n    free(plVar4);\n    plVar4 = plVar2;\n  }\n  free(*param_1);\n  free(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_004066a0"
        },
        {
            "funcStartAddr": "0x406780",
            "funcEndAddr": "0x40696b",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined4 FUN_00406780(void **param_1,ulong param_2)\n\n{\n  char cVar1;\n  undefined4 uVar2;\n  float fVar3;\n  void *local_68;\n  void *local_60;\n  void *local_58;\n  void *local_50;\n  undefined8 local_48;\n  void *local_40;\n  void *local_38;\n  void *local_30;\n  void *local_28;\n  void *local_20;\n  \n  local_40 = param_1[5];\n  if (*(char *)((long)local_40 + 0x10) == '\\0') {\n    if ((long)param_2 < 0) {\n      fVar3 = (float)(param_2 >> 1 | (ulong)((uint)param_2 & 1));\n      fVar3 = fVar3 + fVar3;\n    }\n    else {\n      fVar3 = (float)param_2;\n    }\n    fVar3 = fVar3 / *(float *)((long)local_40 + 8);\n    if (_DAT_004122ac <= fVar3) {\n      return 0;\n    }\n    if (fVar3 < _DAT_004122b0) {\n      param_2 = (ulong)fVar3;\n    }\n    else {\n      param_2 = (long)(fVar3 - _DAT_004122b0) ^ 0x8000000000000000;\n    }\n  }\n  local_58 = (void *)FUN_00405bd0(param_2);\n  if ((local_58 != (void *)0x0) && (-1 < (long)local_58 * 8 && (ulong)local_58 >> 0x3d == 0)) {\n    if (param_1[2] == local_58) {\n      return 1;\n    }\n    local_68 = calloc((size_t)local_58,0x10);\n    if (local_68 != (void *)0x0) {\n      local_60 = (void *)((long)local_58 * 0x10 + (long)local_68);\n      local_38 = param_1[6];\n      local_50 = (void *)0x0;\n      local_30 = param_1[7];\n      local_48 = 0;\n      local_28 = param_1[8];\n      local_20 = param_1[9];\n      uVar2 = FUN_00405e60(&local_68,param_1,0);\n      if ((char)uVar2 != '\\0') {\n        free(*param_1);\n        *param_1 = local_68;\n        param_1[1] = local_60;\n        param_1[2] = local_58;\n        param_1[3] = local_50;\n        param_1[9] = local_20;\n        return uVar2;\n      }\n      param_1[9] = local_20;\n      cVar1 = FUN_00405e60(param_1,&local_68,1);\n      if ((cVar1 != '\\0') && (cVar1 = FUN_00405e60(param_1,&local_68,0), cVar1 != '\\0')) {\n        free(local_68);\n        return uVar2;\n      }\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_00406780"
        },
        {
            "funcStartAddr": "0x406980",
            "funcEndAddr": "0x406bd1",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_00406980(long param_1,long param_2,long *param_3)\n\n{\n  char cVar1;\n  long lVar2;\n  ulong uVar3;\n  long *plVar4;\n  undefined8 uVar5;\n  ulong uVar6;\n  float fVar7;\n  float fVar8;\n  long *local_20;\n  \n  if (param_2 == 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  lVar2 = FUN_00405cc0(param_1,param_2,&local_20,0);\n  if (lVar2 != 0) {\n    if (param_3 != (long *)0x0) {\n      *param_3 = lVar2;\n    }\n    return 0;\n  }\n  uVar6 = *(ulong *)(param_1 + 0x18);\n  if ((long)uVar6 < 0) {\n    uVar3 = *(ulong *)(param_1 + 0x10);\n    fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n    lVar2 = *(long *)(param_1 + 0x28);\n    fVar7 = fVar7 + fVar7;\n    if ((long)uVar3 < 0) goto LAB_00406a7a;\nLAB_004069eb:\n    if (fVar7 <= (float)uVar3 * *(float *)(lVar2 + 8)) goto LAB_00406a02;\n  }\n  else {\n    lVar2 = *(long *)(param_1 + 0x28);\n    fVar7 = (float)uVar6;\n    uVar3 = *(ulong *)(param_1 + 0x10);\n    if (-1 < (long)uVar3) goto LAB_004069eb;\nLAB_00406a7a:\n    fVar8 = (float)(uVar3 >> 1 | (ulong)((uint)uVar3 & 1));\n    if (fVar7 <= (fVar8 + fVar8) * *(float *)(lVar2 + 8)) goto LAB_00406a02;\n  }\n  FUN_00405de0(param_1 + 0x28);\n  lVar2 = *(long *)(param_1 + 0x28);\n  uVar6 = *(ulong *)(param_1 + 0x10);\n  if ((long)uVar6 < 0) {\n    fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n    fVar7 = fVar7 + fVar7;\n  }\n  else {\n    fVar7 = (float)uVar6;\n  }\n  uVar6 = *(ulong *)(param_1 + 0x18);\n  if ((long)uVar6 < 0) {\n    fVar8 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n    fVar8 = fVar8 + fVar8;\n  }\n  else {\n    fVar8 = (float)uVar6;\n  }\n  if (*(float *)(lVar2 + 8) * fVar7 < fVar8) {\n    fVar7 = fVar7 * *(float *)(lVar2 + 0xc);\n    if (*(char *)(lVar2 + 0x10) == '\\0') {\n      fVar7 = fVar7 * *(float *)(lVar2 + 8);\n    }\n    if (_DAT_004122ac <= fVar7) {\n      return 0xffffffff;\n    }\n    if (_DAT_004122b0 <= fVar7) {\n      uVar6 = (long)(fVar7 - _DAT_004122b0) ^ 0x8000000000000000;\n    }\n    else {\n      uVar6 = (ulong)fVar7;\n    }\n    cVar1 = FUN_00406780(param_1,uVar6);\n    if (cVar1 == '\\0') {\n      return 0xffffffff;\n    }\n    lVar2 = FUN_00405cc0(param_1,param_2,&local_20,0);\n    if (lVar2 != 0) {\n      uVar5 = FUN_004023af();\n      return uVar5;\n    }\n  }\nLAB_00406a02:\n  if (*local_20 == 0) {\n    *local_20 = param_2;\n    *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n    *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n    return 1;\n  }\n  plVar4 = *(long **)(param_1 + 0x48);\n  if (plVar4 == (long *)0x0) {\n    plVar4 = (long *)malloc(0x10);\n    if (plVar4 == (long *)0x0) {\n      return 0xffffffff;\n    }\n  }\n  else {\n    *(long *)(param_1 + 0x48) = plVar4[1];\n  }\n  lVar2 = local_20[1];\n  *plVar4 = param_2;\n  plVar4[1] = lVar2;\n  local_20[1] = (long)plVar4;\n  *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n  return 1;\n}\n\n",
            "funcName": "FUN_00406980"
        },
        {
            "funcStartAddr": "0x406c00",
            "funcEndAddr": "0x406c34",
            "decompiledFuncCode": "\nundefined8 FUN_00406c00(undefined8 param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  undefined8 local_10;\n  \n  iVar1 = FUN_00406980(param_1,param_2,&local_10);\n  if (iVar1 != -1) {\n    if (iVar1 == 0) {\n      param_2 = local_10;\n    }\n    return param_2;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_00406c00"
        },
        {
            "funcStartAddr": "0x406c40",
            "funcEndAddr": "0x406dff",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nlong FUN_00406c40(long param_1,undefined8 param_2)\n\n{\n  float *pfVar1;\n  ulong uVar2;\n  void *pvVar3;\n  void *__ptr;\n  char cVar4;\n  long lVar5;\n  ulong uVar6;\n  float fVar7;\n  float fVar8;\n  long *local_20;\n  \n  lVar5 = FUN_00405cc0(param_1,param_2,&local_20,1);\n  if (lVar5 == 0) {\n    return 0;\n  }\n  *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + -1;\n  if (*local_20 == 0) {\n    uVar6 = *(long *)(param_1 + 0x18) - 1;\n    *(ulong *)(param_1 + 0x18) = uVar6;\n    if ((long)uVar6 < 0) {\n      uVar2 = *(ulong *)(param_1 + 0x10);\n      fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n      pfVar1 = *(float **)(param_1 + 0x28);\n      fVar7 = fVar7 + fVar7;\n    }\n    else {\n      pfVar1 = *(float **)(param_1 + 0x28);\n      fVar7 = (float)uVar6;\n      uVar2 = *(ulong *)(param_1 + 0x10);\n    }\n    if ((long)uVar2 < 0) {\n      fVar8 = (float)(uVar2 >> 1 | (ulong)((uint)uVar2 & 1));\n      fVar8 = fVar8 + fVar8;\n    }\n    else {\n      fVar8 = (float)uVar2;\n    }\n    if (fVar7 < fVar8 * *pfVar1) {\n      FUN_00405de0(param_1 + 0x28);\n      uVar6 = *(ulong *)(param_1 + 0x10);\n      pfVar1 = *(float **)(param_1 + 0x28);\n      if ((long)uVar6 < 0) {\n        fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n        fVar7 = fVar7 + fVar7;\n      }\n      else {\n        fVar7 = (float)uVar6;\n      }\n      uVar6 = *(ulong *)(param_1 + 0x18);\n      if ((long)uVar6 < 0) {\n        fVar8 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n        fVar8 = fVar8 + fVar8;\n      }\n      else {\n        fVar8 = (float)uVar6;\n      }\n      if (fVar8 < *pfVar1 * fVar7) {\n        fVar7 = fVar7 * pfVar1[1];\n        if (*(char *)(pfVar1 + 4) == '\\0') {\n          fVar7 = fVar7 * pfVar1[2];\n        }\n        if (_DAT_004122b0 <= fVar7) {\n          uVar6 = (long)(fVar7 - _DAT_004122b0) ^ 0x8000000000000000;\n        }\n        else {\n          uVar6 = (ulong)fVar7;\n        }\n        cVar4 = FUN_00406780(param_1,uVar6);\n        if (cVar4 == '\\0') {\n          __ptr = *(void **)(param_1 + 0x48);\n          while (__ptr != (void *)0x0) {\n            pvVar3 = *(void **)((long)__ptr + 8);\n            free(__ptr);\n            __ptr = pvVar3;\n          }\n          *(undefined8 *)(param_1 + 0x48) = 0;\n        }\n      }\n    }\n    return lVar5;\n  }\n  return lVar5;\n}\n\n",
            "funcName": "FUN_00406c40"
        },
        {
            "funcStartAddr": "0x406e20",
            "funcEndAddr": "0x406e47",
            "decompiledFuncCode": "\nulong FUN_00406e20(undefined8 *param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = FUN_0040dc40(*param_1);\n  return (uVar1 ^ param_1[1]) % param_2;\n}\n\n",
            "funcName": "FUN_00406e20"
        },
        {
            "funcStartAddr": "0x406e50",
            "funcEndAddr": "0x406e5d",
            "decompiledFuncCode": "\nulong FUN_00406e50(long param_1,ulong param_2)\n\n{\n  return *(ulong *)(param_1 + 8) % param_2;\n}\n\n",
            "funcName": "FUN_00406e50"
        },
        {
            "funcStartAddr": "0x406e60",
            "funcEndAddr": "0x406e82",
            "decompiledFuncCode": "\nundefined8 FUN_00406e60(undefined8 *param_1,undefined8 *param_2)\n\n{\n  undefined8 uVar1;\n  \n  if ((param_1[1] == param_2[1]) && (param_1[2] == param_2[2])) {\n    uVar1 = FUN_00409e00(*param_1,*param_2);\n    return uVar1;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_00406e60"
        },
        {
            "funcStartAddr": "0x406e90",
            "funcEndAddr": "0x406ec0",
            "decompiledFuncCode": "\nulong FUN_00406e90(char **param_1,char **param_2)\n\n{\n  int iVar1;\n  undefined4 extraout_var;\n  \n  if ((param_1[1] == param_2[1]) && (param_1[2] == param_2[2])) {\n    iVar1 = strcmp(*param_1,*param_2);\n    return CONCAT44(extraout_var,iVar1) & 0xffffffffffffff00 | (ulong)(iVar1 == 0);\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_00406e90"
        },
        {
            "funcStartAddr": "0x406ed0",
            "funcEndAddr": "0x406ee5",
            "decompiledFuncCode": "\nvoid FUN_00406ed0(void **param_1)\n\n{\n  free(*param_1);\n  free(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00406ed0"
        },
        {
            "funcStartAddr": "0x406ef0",
            "funcEndAddr": "0x406f98",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00406f48) */\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00406ef0(int param_1)\n\n{\n  ulong uVar1;\n  float10 fVar2;\n  float10 param_7;\n  \n  if ((float10)_DAT_004122b0 <= param_7) {\n    uVar1 = (long)ROUND(param_7 - (float10)_DAT_004122b0) ^ 0x8000000000000000;\n  }\n  else {\n    uVar1 = (ulong)ROUND(param_7);\n  }\n  fVar2 = (float10)uVar1;\n  if ((long)uVar1 < 0) {\n    fVar2 = fVar2 + (float10)_DAT_004122ac;\n  }\n  if (((param_1 == 0) && (param_7 != fVar2)) && ((long)(uVar1 + 1) < 0)) {\n    return;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00406ef0"
        },
        {
            "funcStartAddr": "0x406fb0",
            "funcEndAddr": "0x407915",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 * FUN_00406fb0(ulong param_1,char *param_2,uint param_3,ulong param_4,ulong param_5)\n\n{\n  byte bVar1;\n  undefined auVar2 [16];\n  undefined auVar3 [16];\n  char cVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  lconv *plVar9;\n  ulong uVar10;\n  size_t sVar11;\n  size_t __n;\n  ulong uVar12;\n  long lVar13;\n  uint uVar14;\n  uint uVar15;\n  uint uVar16;\n  ulong uVar17;\n  ulong uVar18;\n  uint uVar19;\n  ulong uVar20;\n  char *__s;\n  undefined8 *__dest;\n  undefined8 *puVar21;\n  undefined8 *puVar22;\n  byte *pbVar23;\n  bool bVar24;\n  float10 fVar25;\n  float10 fVar26;\n  float10 fVar27;\n  undefined8 *local_a8;\n  undefined local_68 [56];\n  \n  uVar5 = param_3 & 0x20;\n  uVar14 = param_3 & 3;\n  uVar6 = (-(uint)(uVar5 == 0) & 0xffffffe8) + 0x400;\n  plVar9 = localeconv();\n  puVar21 = (undefined8 *)plVar9->decimal_point;\n  uVar10 = strlen((char *)puVar21);\n  bVar24 = 0xf < uVar10 - 1;\n  if (bVar24) {\n    puVar21 = (undefined8 *)&DAT_0041218c;\n  }\n  pbVar23 = (byte *)plVar9->grouping;\n  __s = plVar9->thousands_sep;\n  if (bVar24) {\n    uVar10 = 1;\n  }\n  sVar11 = strlen(__s);\n  if (0x10 < sVar11) {\n    __s = \"\";\n  }\n  local_a8 = (undefined8 *)(param_2 + 0x287);\n  uVar15 = (uint)uVar10;\n  if (param_4 < param_5) {\n    if (param_4 != 0) {\n      auVar3 = ZEXT816(param_5) / ZEXT816(param_4);\n      if (param_5 % param_4 == 0) {\n        uVar17 = SUB168(ZEXT816(param_1) / (auVar3 & (undefined  [16])0xffffffffffffffff),0);\n        auVar2 = ZEXT816((ulong)(SUB168(ZEXT816(param_1) %\n                                        (auVar3 & (undefined  [16])0xffffffffffffffff),0) * 10));\n        uVar18 = SUB168(auVar2 % (auVar3 & (undefined  [16])0xffffffffffffffff),0) * 2;\n        uVar8 = SUB164(auVar2 / (auVar3 & (undefined  [16])0xffffffffffffffff),0);\n        uVar12 = (ulong)uVar8;\n        if (uVar18 < SUB168(auVar3,0)) {\n          uVar19 = (uint)(uVar18 != 0);\n        }\n        else {\n          uVar19 = (SUB168(auVar3,0) < uVar18) + 2;\n        }\n        goto joined_r0x00407348;\n      }\n    }\nLAB_00407095:\n    fVar25 = (float10)param_4;\n    if ((long)param_4 < 0) {\n      fVar25 = fVar25 + (float10)_DAT_004122ac;\n    }\n    if ((long)param_5 < 0) {\n      fVar25 = fVar25 / ((float10)param_5 + (float10)_DAT_004122ac);\n      if ((long)param_1 < 0) goto LAB_004072a8;\nLAB_004070d2:\n      fVar25 = (float10)param_1 * fVar25;\n      if ((param_3 & 0x10) != 0) goto LAB_004070df;\nLAB_004071f0:\n      if ((uVar14 != 1) && (fVar25 < _DAT_00412320)) {\n        FUN_00406ef0();\n        uVar10 = SUB108(fVar25,0);\n      }\n      __sprintf_chk(param_2,1,0xffffffffffffffff,\"%.0Lf\",uVar10);\n      uVar16 = 0xffffffff;\n      __n = strlen(param_2);\n      sVar11 = __n;\n    }\n    else {\n      fVar25 = fVar25 / (float10)param_5;\n      if (-1 < (long)param_1) goto LAB_004070d2;\nLAB_004072a8:\n      fVar25 = ((float10)param_1 + (float10)_DAT_004122ac) * fVar25;\n      if ((param_3 & 0x10) == 0) goto LAB_004071f0;\nLAB_004070df:\n      uVar16 = 0;\n      fVar27 = (float10)uVar6;\n      do {\n        fVar26 = fVar27;\n        uVar16 = uVar16 + 1;\n        fVar27 = fVar26 * (float10)uVar6;\n        if (fVar25 < fVar27) break;\n      } while (uVar16 != 8);\n      fVar25 = fVar25 / fVar26;\n      uVar17 = uVar10 + 2 + (ulong)(uVar5 == 0);\n      if (uVar14 == 1) {\n        __sprintf_chk(param_2,1,0xffffffffffffffff,\"%.1Lf\");\n        __n = strlen(param_2);\n        if (__n <= uVar17) goto LAB_00407618;\n      }\n      else {\n        if (fVar25 < _DAT_00412320) {\n          FUN_00406ef0();\n        }\n        __sprintf_chk(param_2,1,0xffffffffffffffff,\"%.1Lf\");\n        __n = strlen(param_2);\n        if (__n <= uVar17) {\nLAB_00407618:\n          if (((param_3 & 8) == 0) || (param_2[__n - 1] != '0')) {\n            sVar11 = __n - (uVar10 + 1);\n            goto LAB_00407240;\n          }\n          if (uVar14 == 1) goto LAB_004071b6;\n        }\n        if (fVar25 * (float10)_DAT_00412314 < _DAT_00412320) {\n          FUN_00406ef0(uVar14);\n        }\n      }\nLAB_004071b6:\n      __sprintf_chk(param_2,1,0xffffffffffffffff,\"%.0Lf\");\n      __n = strlen(param_2);\n      sVar11 = __n;\n    }\nLAB_00407240:\n    puVar22 = (undefined8 *)((long)local_a8 - __n);\n    memmove(puVar22,param_2,__n);\n    __dest = (undefined8 *)(sVar11 + (long)puVar22);\n  }\n  else {\n    if ((param_4 % param_5 != 0) ||\n       (uVar17 = SUB168(ZEXT816(param_4) / ZEXT816(param_5),0) * param_1,\n       SUB168(ZEXT816(uVar17) /\n              (ZEXT816(param_4) / ZEXT816(param_5) & (undefined  [16])0xffffffffffffffff),0) !=\n       param_1)) goto LAB_00407095;\n    uVar19 = 0;\n    uVar12 = 0;\n    uVar8 = 0;\njoined_r0x00407348:\n    puVar22 = local_a8;\n    if ((param_3 & 0x10) == 0) {\n      uVar16 = 0xffffffff;\nLAB_00407361:\n      if (uVar14 != 1) goto LAB_00407370;\n      __dest = local_a8;\n      if (5 < (int)(uVar8 + (((uint)uVar17 & 1) + uVar19 != 0))) goto LAB_00407381;\nLAB_004073b3:\n      do {\n        puVar22 = (undefined8 *)((long)puVar22 + -1);\n        *(char *)puVar22 = (char)uVar17 + (char)(uVar17 / 10) * -10 + '0';\n        bVar24 = 9 < uVar17;\n        uVar17 = uVar17 / 10;\n      } while (bVar24);\n    }\n    else {\n      uVar8 = (uint)uVar12;\n      uVar20 = (ulong)uVar6;\n      uVar16 = 0;\n      uVar18 = uVar17;\n      if (uVar17 < uVar20) goto LAB_00407361;\n      while( true ) {\n        uVar17 = uVar18 / uVar20;\n        uVar7 = (int)uVar12 + (int)(uVar18 % uVar20) * 10;\n        uVar12 = uVar7 / uVar20;\n        uVar8 = (uint)uVar12;\n        uVar7 = ((int)uVar19 >> 1) + (uVar7 % uVar6) * 2;\n        uVar19 = uVar19 + uVar7;\n        if (uVar7 < uVar6) {\n          uVar19 = (uint)(uVar19 != 0);\n        }\n        else {\n          uVar19 = (uVar6 < uVar19) + 2;\n        }\n        uVar16 = uVar16 + 1;\n        if (uVar17 < uVar20) break;\n        uVar18 = uVar17;\n        if (uVar16 == 8) goto LAB_00407361;\n      }\n      if (9 < uVar17) goto LAB_00407361;\n      if (uVar14 == 1) {\n        bVar24 = 2 < (uVar8 & 1) + uVar19;\n      }\n      else {\n        bVar24 = uVar19 != 0 && uVar14 == 0;\n      }\n      if (bVar24) {\n        uVar8 = uVar8 + 1;\n        if (uVar8 != 10) goto LAB_00407818;\n        uVar17 = uVar17 + 1;\n        if (uVar17 == 10) goto LAB_004077ce;\n        uVar19 = 0;\nLAB_00407787:\n        if ((param_3 & 8) != 0) goto LAB_004077d0;\n        cVar4 = '0';\n      }\n      else {\n        if (uVar8 == 0) goto LAB_00407787;\nLAB_00407818:\n        cVar4 = (char)uVar8 + '0';\n      }\n      param_2[0x286] = cVar4;\n      uVar12 = uVar10 & 0xffffffff;\n      puVar22 = (undefined8 *)(param_2 + (0x286 - uVar10));\n      if (uVar15 < 8) {\n        if ((uVar10 & 4) == 0) {\n          if (((int)uVar12 != 0) &&\n             (*(undefined *)puVar22 = *(undefined *)puVar21, (uVar10 & 2) != 0)) {\n            *(undefined2 *)((long)puVar22 + (uVar12 - 2)) =\n                 *(undefined2 *)((long)puVar21 + (uVar12 - 2));\n          }\n        }\n        else {\n          *(undefined4 *)puVar22 = *(undefined4 *)puVar21;\n          *(undefined4 *)((long)puVar22 + (uVar12 - 4)) =\n               *(undefined4 *)((long)puVar21 + (uVar12 - 4));\n        }\n      }\n      else {\n        *puVar22 = *puVar21;\n        *(undefined8 *)((long)puVar22 + ((uVar10 & 0xffffffff) - 8)) =\n             *(undefined8 *)((long)puVar21 + ((uVar10 & 0xffffffff) - 8));\n        lVar13 = (long)puVar22 - ((ulong)(puVar22 + 1) & 0xfffffffffffffff8);\n        uVar8 = (int)lVar13 + uVar15 & 0xfffffff8;\n        if (7 < uVar8) {\n          uVar19 = 0;\n          do {\n            uVar12 = (ulong)uVar19;\n            uVar19 = uVar19 + 8;\n            *(undefined8 *)(((ulong)(puVar22 + 1) & 0xfffffffffffffff8) + uVar12) =\n                 *(undefined8 *)((long)puVar21 + (uVar12 - lVar13));\n          } while (uVar19 < uVar8);\n        }\n      }\nLAB_004077ce:\n      uVar19 = 0;\nLAB_004077d0:\n      __dest = puVar22;\n      if (uVar14 == 1) goto LAB_004073b3;\n      uVar8 = 0;\nLAB_00407370:\n      __dest = puVar22;\n      if ((uVar14 != 0) || ((int)(uVar19 + uVar8) < 1)) goto LAB_004073b3;\nLAB_00407381:\n      uVar17 = uVar17 + 1;\n      __dest = puVar22;\n      if ((((param_3 & 0x10) == 0) || (uVar6 != uVar17)) || (uVar16 == 8)) goto LAB_004073b3;\n      uVar16 = uVar16 + 1;\n      if ((param_3 & 8) == 0) {\n        *(undefined *)((long)puVar22 + -1) = 0x30;\n        puVar22 = (undefined8 *)((long)puVar22 + ~uVar10);\n        uVar17 = uVar10 & 0xffffffff;\n        if (uVar15 < 8) {\n          if ((uVar10 & 4) == 0) {\n            if (((int)uVar17 != 0) &&\n               (*(undefined *)puVar22 = *(undefined *)puVar21, (uVar10 & 2) != 0)) {\n              *(undefined2 *)((long)puVar22 + (uVar17 - 2)) =\n                   *(undefined2 *)((long)puVar21 + (uVar17 - 2));\n            }\n          }\n          else {\n            *(undefined4 *)puVar22 = *(undefined4 *)puVar21;\n            *(undefined4 *)((long)puVar22 + (uVar17 - 4)) =\n                 *(undefined4 *)((long)puVar21 + (uVar17 - 4));\n          }\n        }\n        else {\n          *puVar22 = *puVar21;\n          *(undefined8 *)((long)puVar22 + ((uVar10 & 0xffffffff) - 8)) =\n               *(undefined8 *)((long)puVar21 + ((uVar10 & 0xffffffff) - 8));\n          lVar13 = (long)puVar22 - ((ulong)(puVar22 + 1) & 0xfffffffffffffff8);\n          uVar14 = (int)lVar13 + uVar15 & 0xfffffff8;\n          if (7 < uVar14) {\n            uVar15 = 0;\n            do {\n              uVar10 = (ulong)uVar15;\n              uVar15 = uVar15 + 8;\n              *(undefined8 *)(((ulong)(puVar22 + 1) & 0xfffffffffffffff8) + uVar10) =\n                   *(undefined8 *)((long)puVar21 + (uVar10 - lVar13));\n            } while (uVar15 < uVar14);\n          }\n        }\n      }\n      *(undefined *)((long)puVar22 + -1) = 0x31;\n      __dest = puVar22;\n      puVar22 = (undefined8 *)((long)puVar22 + -1);\n    }\n  }\n  if ((param_3 & 4) != 0) {\n    sVar11 = strlen(__s);\n    uVar17 = (long)__dest - (long)puVar22;\n    __memcpy_chk(local_68,puVar22,uVar17,0x29);\n    uVar10 = 0xffffffffffffffff;\n    while( true ) {\n      bVar1 = *pbVar23;\n      if (bVar1 != 0) {\n        uVar10 = (ulong)bVar1;\n        if (0x7e < bVar1) {\n          uVar10 = uVar17;\n        }\n        pbVar23 = pbVar23 + 1;\n      }\n      if (uVar17 < uVar10) break;\n      puVar22 = (undefined8 *)((long)__dest - uVar10);\n      uVar17 = uVar17 - uVar10;\n      memcpy(puVar22,local_68 + uVar17,uVar10);\n      if (uVar17 == 0) goto LAB_00407265;\n      __dest = (undefined8 *)((long)puVar22 - sVar11);\n      memcpy(__dest,__s,sVar11);\n    }\n    puVar22 = (undefined8 *)((long)__dest - uVar17);\n    memcpy(puVar22,local_68,uVar17);\n  }\nLAB_00407265:\n  if ((param_3 & 0x80) == 0) goto LAB_00407288;\n  if (uVar16 == 0xffffffff) {\n    if (param_5 < 2) {\n      uVar16 = 0;\n      goto LAB_00407275;\n    }\n    uVar16 = 1;\n    uVar10 = 1;\n    do {\n      uVar10 = uVar10 * uVar6;\n      if (param_5 <= uVar10) break;\n      uVar16 = uVar16 + 1;\n    } while (uVar16 != 8);\n    if ((param_3 & 0x40) != 0) goto LAB_004074f1;\nLAB_00407510:\n    if ((uVar5 == 0) && (uVar16 == 1)) {\n      *(undefined *)local_a8 = 0x6b;\n      puVar21 = (undefined8 *)((long)local_a8 + 1);\n      if ((param_3 & 0x100) == 0) {\nLAB_00407743:\n        local_a8 = (undefined8 *)((long)local_a8 + 1);\n        goto LAB_00407288;\n      }\n    }\n    else {\n      *(undefined *)local_a8 = (&UNK_00412308)[(int)uVar16];\n      if ((param_3 & 0x100) == 0) goto LAB_00407743;\n      puVar21 = (undefined8 *)((long)local_a8 + 1);\n      if (uVar5 != 0) {\n        *(undefined *)((long)local_a8 + 1) = 0x69;\n        puVar21 = (undefined8 *)((long)local_a8 + 2);\n      }\n    }\n  }\n  else {\nLAB_00407275:\n    if ((param_3 & 0x100 | uVar16) == 0) goto LAB_00407288;\n    if ((param_3 & 0x40) != 0) {\nLAB_004074f1:\n      local_a8 = (undefined8 *)(param_2 + 0x288);\n      param_2[0x287] = ' ';\n    }\n    if (uVar16 != 0) goto LAB_00407510;\n    puVar21 = local_a8;\n    if ((param_3 & 0x100) == 0) goto LAB_00407288;\n  }\n  local_a8 = (undefined8 *)((long)puVar21 + 1);\n  *(undefined *)puVar21 = 0x42;\nLAB_00407288:\n  *(undefined *)local_a8 = 0;\n  return puVar22;\n}\n\n",
            "funcName": "FUN_00406fb0"
        },
        {
            "funcStartAddr": "0x407980",
            "funcEndAddr": "0x407b11",
            "decompiledFuncCode": "\nchar * FUN_00407980(char *param_1,uint *param_2,long *param_3)\n\n{\n  char cVar1;\n  int iVar2;\n  char *pcVar3;\n  long lVar4;\n  uint uVar5;\n  char *local_30 [2];\n  \n  if (((param_1 == (char *)0x0) && (param_1 = getenv(\"BLOCK_SIZE\"), param_1 == (char *)0x0)) &&\n     (param_1 = getenv(\"BLOCKSIZE\"), param_1 == (char *)0x0)) {\n    pcVar3 = getenv(\"POSIXLY_CORRECT\");\n    if (pcVar3 == (char *)0x0) {\n      *param_3 = 0x400;\n      *param_2 = 0;\n    }\n    else {\n      *param_3 = 0x200;\n      pcVar3 = (char *)0x0;\n      *param_2 = 0;\n    }\n  }\n  else {\n    uVar5 = 0;\n    if (*param_1 == '\\'') {\n      param_1 = param_1 + 1;\n      uVar5 = 4;\n    }\n    iVar2 = FUN_0040d7b0(param_1,&PTR_s_human_readable_004122f0,&DAT_004122e0,4);\n    if (iVar2 < 0) {\n      pcVar3 = (char *)FUN_0040a8b0(param_1,local_30,0,param_3,\"eEgGkKmMpPtTyYzZ0\");\n      if ((int)pcVar3 == 0) {\n        cVar1 = *param_1;\n        while (9 < (byte)(cVar1 - 0x30U)) {\n          if (param_1 == local_30[0]) {\n            if (local_30[0][-1] == 'B') {\n              uVar5 = uVar5 | 0x180;\n              if (local_30[0][-2] != 'i') break;\n            }\n            else {\n              uVar5 = uVar5 | 0x80;\n            }\n            uVar5 = uVar5 | 0x20;\n            break;\n          }\n          param_1 = param_1 + 1;\n          cVar1 = *param_1;\n        }\n        lVar4 = *param_3;\n        *param_2 = uVar5;\n      }\n      else {\n        *param_2 = 0;\n        lVar4 = *param_3;\n      }\n      if (lVar4 == 0) {\n        pcVar3 = getenv(\"POSIXLY_CORRECT\");\n        *param_3 = (ulong)(-(uint)(pcVar3 == (char *)0x0) & 0x200) + 0x200;\n        return &DAT_00000004;\n      }\n    }\n    else {\n      *param_3 = 1;\n      pcVar3 = (char *)0x0;\n      *param_2 = uVar5 | *(uint *)(&DAT_004122e0 + (long)iVar2 * 4);\n    }\n  }\n  return pcVar3;\n}\n\n",
            "funcName": "FUN_00407980"
        },
        {
            "funcStartAddr": "0x407b40",
            "funcEndAddr": "0x407b84",
            "decompiledFuncCode": "\nchar * FUN_00407b40(ulong param_1,long param_2)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  \n  pcVar2 = (char *)(param_2 + 0x14);\n  *(undefined *)(param_2 + 0x14) = 0;\n  do {\n    pcVar2 = pcVar2 + -1;\n    *pcVar2 = (char)param_1 + (char)(param_1 / 10) * -10 + '0';\n    bVar1 = 9 < param_1;\n    param_1 = param_1 / 10;\n  } while (bVar1);\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_00407b40"
        },
        {
            "funcStartAddr": "0x407b90",
            "funcEndAddr": "0x407f00",
            "decompiledFuncCode": "\nlong FUN_00407b90(char *param_1,undefined *param_2,long param_3,ulong *param_4,int param_5,\n                 uint param_6)\n\n{\n  size_t __n;\n  undefined *puVar1;\n  bool bVar2;\n  int iVar3;\n  ulong uVar4;\n  undefined *puVar5;\n  ulong uVar6;\n  size_t sVar7;\n  size_t sVar8;\n  char *__s;\n  ulong uVar9;\n  undefined *puVar10;\n  wchar_t *pwVar12;\n  wchar_t wVar13;\n  ulong uVar14;\n  long lVar15;\n  ulong uVar16;\n  wchar_t *local_68;\n  char *local_50;\n  size_t local_48;\n  undefined *puVar11;\n  \n  uVar4 = strlen(param_1);\n  uVar14 = uVar4;\n  if (((param_6 & 2) == 0) && (sVar7 = __ctype_get_mb_cur_max(), 1 < sVar7)) {\n    sVar7 = mbstowcs((wchar_t *)0x0,param_1,0);\n    if (sVar7 == 0xffffffffffffffff) {\n      if ((param_6 & 1) == 0) {\nLAB_00407d40:\n        local_68 = (wchar_t *)0x0;\n        __s = (char *)0x0;\n        lVar15 = -1;\n        goto LAB_00407cae;\n      }\n      goto LAB_00407bc8;\n    }\n    __n = sVar7 + 1;\n    local_68 = (wchar_t *)malloc(__n * 4);\n    local_50 = param_1;\n    if (local_68 == (wchar_t *)0x0) {\n      __s = (char *)0x0;\n      if ((param_6 & 1) == 0) goto LAB_00407d40;\n      goto LAB_00407bd6;\n    }\n    sVar8 = mbstowcs(local_68,param_1,__n);\n    if (sVar8 == 0) {\n      __s = (char *)0x0;\n      goto LAB_00407bd6;\n    }\n    local_68[sVar7] = L'\\0';\n    wVar13 = *local_68;\n    if (wVar13 != L'\\0') {\n      bVar2 = false;\n      pwVar12 = local_68;\n      do {\n        iVar3 = iswprint(wVar13);\n        if (iVar3 == 0) {\n          *pwVar12 = L'\u00ef\u00bf\u00bd';\n          bVar2 = true;\n        }\n        pwVar12 = pwVar12 + 1;\n        wVar13 = *pwVar12;\n      } while (wVar13 != L'\\0');\n      iVar3 = wcswidth(local_68,__n);\n      uVar14 = (ulong)iVar3;\n      if (!bVar2) goto LAB_00407eb0;\n      local_48 = wcstombs((char *)0x0,local_68,0);\nLAB_00407e20:\n      local_48 = local_48 + 1;\n      __s = (char *)malloc(local_48);\n      if (__s == (char *)0x0) {\n        if ((param_6 & 1) == 0) {\n          lVar15 = -1;\n          goto LAB_00407cae;\n        }\n      }\n      else {\n        uVar4 = *param_4;\n        wVar13 = *local_68;\n        pwVar12 = local_68;\n        if (wVar13 == L'\\0') {\n          uVar14 = 0;\n        }\n        else {\n          uVar14 = 0;\n          do {\n            iVar3 = wcwidth(wVar13);\n            if (iVar3 == -1) {\n              *pwVar12 = L'\u00ef\u00bf\u00bd';\n              lVar15 = 1;\n            }\n            else {\n              lVar15 = (long)iVar3;\n            }\n            uVar6 = lVar15 + uVar14;\n            if (uVar4 < uVar6) break;\n            pwVar12 = pwVar12 + 1;\n            wVar13 = *pwVar12;\n            uVar14 = uVar6;\n          } while (wVar13 != L'\\0');\n        }\n        *pwVar12 = L'\\0';\n        uVar4 = wcstombs(__s,local_68,local_48);\n        local_50 = __s;\n      }\n      goto LAB_00407bd6;\n    }\n    iVar3 = wcswidth(local_68,__n);\n    uVar14 = (ulong)iVar3;\nLAB_00407eb0:\n    uVar6 = *param_4;\n    local_48 = uVar4;\n    if (uVar6 < uVar14) goto LAB_00407e20;\n    __s = (char *)0x0;\nLAB_00407cdb:\n    uVar16 = uVar4;\n    uVar9 = uVar14;\n    if (uVar6 <= uVar14) goto LAB_00407be8;\n    uVar6 = uVar6 - uVar14;\n    *param_4 = uVar14;\n    if (param_5 != 0) goto LAB_00407bf8;\nLAB_00407cfd:\n    uVar4 = 0;\n    uVar14 = uVar6;\n  }\n  else {\nLAB_00407bc8:\n    local_68 = (wchar_t *)0x0;\n    __s = (char *)0x0;\n    local_50 = param_1;\nLAB_00407bd6:\n    uVar6 = *param_4;\n    uVar9 = uVar6;\n    uVar16 = uVar6;\n    if (uVar14 <= uVar6) goto LAB_00407cdb;\nLAB_00407be8:\n    uVar6 = 0;\n    *param_4 = uVar9;\n    if (param_5 == 0) goto LAB_00407cfd;\nLAB_00407bf8:\n    uVar4 = uVar6;\n    uVar14 = 0;\n    if (param_5 != 1) {\n      uVar4 = (ulong)((uint)uVar6 & 1) + (uVar6 >> 1);\n      uVar14 = uVar6 >> 1;\n    }\n  }\n  uVar6 = uVar4 + uVar16;\n  if ((param_6 & 4) != 0) {\n    uVar4 = 0;\n    uVar6 = uVar16;\n  }\n  if ((param_6 & 8) != 0) {\n    uVar14 = 0;\n  }\n  if (param_3 != 0) {\n    puVar1 = param_2 + param_3 + -1;\n    puVar10 = param_2;\n    if ((param_2 < puVar1) && (puVar5 = param_2, uVar4 != 0)) {\n      do {\n        puVar10 = puVar5 + 1;\n        *puVar5 = 0x20;\n        if (param_2 + (uVar4 - (long)puVar10) == (undefined *)0x0) break;\n        puVar5 = puVar10;\n      } while (puVar10 < puVar1);\n    }\n    *puVar10 = 0;\n    uVar4 = (long)puVar1 - (long)puVar10;\n    if (uVar16 < (ulong)((long)puVar1 - (long)puVar10)) {\n      uVar4 = uVar16;\n    }\n    puVar5 = (undefined *)mempcpy(puVar10,local_50,uVar4);\n    puVar10 = puVar5;\n    if ((puVar5 < puVar1) && (puVar11 = puVar5, uVar14 != 0)) {\n      do {\n        puVar10 = puVar11 + 1;\n        *puVar11 = 0x20;\n        if (puVar5 + (uVar14 - (long)puVar10) == (undefined *)0x0) break;\n        puVar11 = puVar10;\n      } while (puVar10 < puVar1);\n    }\n    *puVar10 = 0;\n  }\n  lVar15 = uVar14 + uVar6;\nLAB_00407cae:\n  free(local_68);\n  free(__s);\n  return lVar15;\n}\n\n",
            "funcName": "FUN_00407b90"
        },
        {
            "funcStartAddr": "0x407f30",
            "funcEndAddr": "0x407fc5",
            "decompiledFuncCode": "\nvoid * FUN_00407f30(undefined8 param_1,ulong *param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  ulong __size;\n  ulong uVar1;\n  void *__ptr;\n  ulong uVar2;\n  void *__ptr_00;\n  \n  uVar1 = *param_2;\n  uVar2 = uVar1;\n  __ptr_00 = (void *)0x0;\n  while( true ) {\n    __size = uVar2 + 1;\n    __ptr = realloc(__ptr_00,__size);\n    if (__ptr == (void *)0x0) {\n      free(__ptr_00);\n      return (void *)0x0;\n    }\n    *param_2 = uVar1;\n    uVar2 = FUN_00407b90(param_1,__ptr,__size,param_2,param_3,param_4);\n    if (uVar2 == 0xffffffffffffffff) break;\n    __ptr_00 = __ptr;\n    if (uVar2 < __size) {\n      return __ptr;\n    }\n  }\n  free(__ptr);\n  return (void *)0x0;\n}\n\n",
            "funcName": "FUN_00407f30"
        },
        {
            "funcStartAddr": "0x407fd0",
            "funcEndAddr": "0x408164",
            "decompiledFuncCode": "\nint FUN_00407fd0(byte *param_1,long param_2,uint param_3)\n\n{\n  byte *pbVar1;\n  byte bVar2;\n  int iVar3;\n  size_t sVar4;\n  long lVar5;\n  ushort **ppuVar6;\n  byte *pbVar7;\n  int iVar8;\n  wchar_t local_44;\n  mbstate_t local_40 [2];\n  \n  pbVar1 = param_1 + param_2;\n  sVar4 = __ctype_get_mb_cur_max();\n  if (sVar4 < 2) {\n    iVar8 = 0;\n    if (param_1 < pbVar1) {\n      ppuVar6 = __ctype_b_loc();\n      iVar8 = 0;\n      do {\n        pbVar7 = param_1 + 1;\n        if (((*ppuVar6)[*param_1] & 0x4000) == 0) {\n          if ((param_3 & 2) != 0) {\n            return -1;\n          }\n          if (((*ppuVar6)[*param_1] & 2) == 0) goto LAB_0040814a;\n        }\n        else {\nLAB_0040814a:\n          if (iVar8 == 0x7fffffff) {\n            return 0x7fffffff;\n          }\n          iVar8 = iVar8 + 1;\n        }\n        param_1 = pbVar7;\n      } while (pbVar1 != pbVar7);\n    }\n  }\n  else {\n    iVar8 = 0;\n    if (param_1 < pbVar1) {\n      do {\n        bVar2 = *param_1;\n        if ((char)bVar2 < '@') {\n          if (((char)bVar2 < '%') && (3 < (byte)(bVar2 - 0x20))) goto LAB_00408042;\nLAB_0040801b:\n          param_1 = param_1 + 1;\n          iVar8 = iVar8 + 1;\n        }\n        else {\n          if (('@' < (char)bVar2) && (((char)bVar2 < '`' || ((byte)(bVar2 + 0x9f) < 0x1e))))\n          goto LAB_0040801b;\nLAB_00408042:\n          local_40[0] = (mbstate_t)0x0;\n          do {\n            lVar5 = FUN_0040c400(&local_44,param_1,(long)pbVar1 - (long)param_1,local_40);\n            if (lVar5 == -1) {\n              if ((param_3 & 1) != 0) {\n                return -1;\n              }\n              goto LAB_0040801b;\n            }\n            if (lVar5 == -2) {\n              if ((param_3 & 1) != 0) {\n                return -1;\n              }\n              iVar8 = iVar8 + 1;\n              param_1 = pbVar1;\n              break;\n            }\n            if (lVar5 == 0) {\n              lVar5 = 1;\n            }\n            iVar3 = wcwidth(local_44);\n            if (iVar3 < 0) {\n              if ((param_3 & 2) != 0) {\n                return -1;\n              }\n              iVar3 = iswcntrl(local_44);\n              if (iVar3 == 0) {\n                if (iVar8 == 0x7fffffff) {\n                  return 0x7fffffff;\n                }\n                iVar8 = iVar8 + 1;\n              }\n            }\n            else {\n              if (0x7fffffff - iVar8 < iVar3) {\n                return 0x7fffffff;\n              }\n              iVar8 = iVar8 + iVar3;\n            }\n            param_1 = param_1 + lVar5;\n            iVar3 = mbsinit(local_40);\n          } while (iVar3 == 0);\n        }\n      } while (param_1 < pbVar1);\n    }\n  }\n  return iVar8;\n}\n\n",
            "funcName": "FUN_00407fd0"
        },
        {
            "funcStartAddr": "0x408190",
            "funcEndAddr": "0x4081b3",
            "decompiledFuncCode": "\nvoid FUN_00408190(char *param_1,undefined4 param_2)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  FUN_00407fd0(param_1,sVar1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00408190"
        },
        {
            "funcStartAddr": "0x4081c0",
            "funcEndAddr": "0x408259",
            "decompiledFuncCode": "\nvoid FUN_004081c0(byte *param_1)\n\n{\n  byte *pbVar1;\n  char *pcVar2;\n  long lVar3;\n  ulong uVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  byte bVar10;\n  \n  bVar10 = 0;\n  if (param_1 == (byte *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar2 = strrchr((char *)param_1,0x2f);\n  if (pcVar2 != (char *)0x0) {\n    pbVar1 = (byte *)(pcVar2 + 1);\n    uVar4 = (long)pbVar1 - (long)param_1;\n    bVar7 = uVar4 < 6;\n    bVar9 = uVar4 == 6;\n    if (6 < (long)uVar4) {\n      lVar3 = 7;\n      pbVar5 = (byte *)(pcVar2 + -6);\n      pbVar6 = &DAT_00412368;\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar5 < *pbVar6;\n        bVar9 = *pbVar5 == *pbVar6;\n        pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      bVar8 = false;\n      bVar7 = (!bVar7 && !bVar9) == bVar7;\n      if (bVar7) {\n        lVar3 = 3;\n        pbVar5 = pbVar1;\n        pbVar6 = &DAT_00412370;\n        do {\n          if (lVar3 == 0) break;\n          lVar3 = lVar3 + -1;\n          bVar8 = *pbVar5 < *pbVar6;\n          bVar7 = *pbVar5 == *pbVar6;\n          pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n          pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        } while (bVar7);\n        param_1 = pbVar1;\n        if ((!bVar8 && !bVar7) == bVar8) {\n          param_1 = (byte *)(pcVar2 + 4);\n          program_invocation_short_name = param_1;\n        }\n      }\n    }\n  }\n  DAT_00617708 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_004081c0"
        },
        {
            "funcStartAddr": "0x408260",
            "funcEndAddr": "0x40833f",
            "decompiledFuncCode": "\nchar * FUN_00408260(char *param_1,int param_2)\n\n{\n  char cVar1;\n  char *pcVar2;\n  byte *pbVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    pbVar3 = (byte *)FUN_0040dc80();\n    if ((*pbVar3 & 0xdf) == 0x55) {\n      if (((((pbVar3[1] & 0xdf) != 0x54) || ((pbVar3[2] & 0xdf) != 0x46)) || (pbVar3[3] != 0x2d)) ||\n         ((pbVar3[4] != 0x38 || (pbVar3[5] != 0)))) {\nLAB_00408338:\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_0041237f;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_00412374;\n      }\n    }\n    else {\n      if (((((*pbVar3 & 0xdf) != 0x47) || ((pbVar3[1] & 0xdf) != 0x42)) || (pbVar3[2] != 0x31)) ||\n         (((pbVar3[3] != 0x38 || (pbVar3[4] != 0x30)) ||\n          ((pbVar3[5] != 0x33 || ((pbVar3[6] != 0x30 || (pbVar3[7] != 0)))))))) goto LAB_00408338;\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_0041237b;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_00412378;\n      }\n    }\n  }\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_00408260"
        },
        {
            "funcStartAddr": "0x408360",
            "funcEndAddr": "0x409493",
            "decompiledFuncCode": "\nulong FUN_00408360(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  ulong uVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ulong uVar9;\n  ushort **ppuVar10;\n  long lVar11;\n  char *pcVar12;\n  byte bVar13;\n  char cVar14;\n  ulong uVar15;\n  ulong uVar16;\n  byte bVar17;\n  uint uVar18;\n  ulong uVar19;\n  bool bVar20;\n  ulong uVar21;\n  ulong uVar22;\n  bool bVar23;\n  bool bVar24;\n  bool bVar25;\n  bool bVar26;\n  size_t local_a0;\n  char *local_78;\n  ulong local_70;\n  bool local_5c;\n  bool local_5b;\n  wint_t local_44;\n  mbstate_t local_40 [2];\n  \n  sVar8 = __ctype_get_mb_cur_max();\n  uVar18 = param_6 & 2;\n  local_5c = uVar18 != 0;\n  uVar9 = param_2;\n  switch(param_5) {\n  case 0:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = false;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar18 != 0) {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = false;\n      local_a0 = 1;\n      local_78 = \"\\'\";\n      break;\n    }\n    bVar6 = false;\nLAB_00408fb1:\n    if (param_2 != 0) {\n      bVar3 = false;\n      local_5b = false;\n      bVar2 = true;\n      local_70 = 0;\n      goto LAB_00408be6;\n    }\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 1;\n    param_5 = 2;\n    local_70 = 0;\n    local_5b = false;\n    local_5c = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 3:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 4:\n    if (uVar18 == 0) {\n      bVar6 = true;\n      goto LAB_00408fb1;\n    }\n  case 1:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 5:\n    if (uVar18 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      local_5b = false;\n      local_70 = 0;\n      bVar2 = true;\n      bVar3 = false;\n      local_5c = false;\n      uVar15 = 1;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    else {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 5;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\\"\";\n    break;\n  case 7:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = true;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      param_8 = (char *)FUN_00408260(&DAT_00412383,param_5);\n      param_9 = (char *)FUN_00408260(&DAT_004138af);\n    }\n    uVar15 = 0;\n    if (uVar18 == 0) {\n      cVar14 = *param_8;\n      while (cVar14 != '\\0') {\n        if (uVar15 < param_2) {\n          param_1[uVar15] = cVar14;\n        }\n        uVar15 = uVar15 + 1;\n        cVar14 = param_8[uVar15];\n      }\n    }\n    local_a0 = strlen(param_9);\n    bVar2 = true;\n    bVar3 = false;\n    local_78 = param_9;\n    local_5b = false;\n    local_70 = 0;\n    bVar6 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\nLAB_004083f8:\n  uVar22 = 0;\n  bVar5 = local_5b;\nLAB_00408408:\n  bVar23 = param_4 != uVar22;\n  if (param_4 == 0xffffffffffffffff) {\n    bVar23 = param_3[uVar22] != '\\0';\n  }\n  bVar26 = bVar6;\n  if (!bVar23) goto LAB_00408b88;\n  bVar20 = (bool)(param_5 != 2 & bVar6);\n  __s1 = (byte *)(param_3 + uVar22);\n  uVar16 = uVar15;\n  bVar4 = bVar3;\n  if (bVar20) {\n    if (local_a0 == 0) {\nLAB_00408b00:\n      uVar19 = (ulong)*__s1;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00408b12_caseD_0;\n      default:\n        bVar20 = false;\n        goto switchD_0040897e_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00408815;\n      case 8:\n        bVar17 = 0x62;\n        break;\n      case 9:\nswitchD_00408b12_caseD_9:\n        bVar17 = 0x74;\n        break;\n      case 10:\nswitchD_00408b12_caseD_a:\n        bVar17 = 0x6e;\n        break;\n      case 0xb:\nswitchD_00408b12_caseD_b:\n        bVar17 = 0x76;\n        goto LAB_00408815;\n      case 0xc:\nswitchD_00408b12_caseD_c:\n        bVar17 = 0x66;\nLAB_00408815:\n        if (local_5c) {\n          bVar25 = false;\n          goto LAB_00408768;\n        }\nLAB_00408820:\n        bVar23 = false;\n        goto LAB_004085db;\n      case 0xd:\n        bVar20 = false;\nswitchD_004084f8_caseD_d:\n        bVar25 = param_5 == 2;\n        uVar19 = 0xd;\n        bVar13 = 0x72;\n        goto LAB_00408730;\n      case 0x20:\n        bVar25 = false;\nLAB_00408b5a:\n        uVar19 = 0x20;\n        goto LAB_00408b22;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar20 = false;\nswitchD_004084f8_caseD_21:\n        bVar25 = false;\n        goto LAB_0040873b;\n      case 0x23:\n      case 0x7e:\n        bVar26 = false;\nLAB_00408b3a:\n        if (uVar22 == 0) {\n          bVar25 = false;\n          bVar23 = bVar20;\n          bVar20 = bVar26;\n          goto LAB_00408548;\n        }\n        bVar23 = false;\n        goto LAB_0040855f;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar25 = false;\nLAB_00408b22:\n        bVar24 = false;\n        bVar23 = bVar20;\n        bVar20 = bVar25;\n        goto LAB_00408561;\n      case 0x27:\n        bVar20 = false;\n        goto switchD_0040897e_caseD_27;\n      case 0x3f:\n        bVar20 = false;\n        goto switchD_0040897e_caseD_3f;\n      case 0x5c:\n        bVar20 = false;\n        goto switchD_004084f8_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        bVar20 = false;\n        goto switchD_0040897e_caseD_7b;\n      }\n      bVar25 = false;\n      bVar23 = false;\n      goto joined_r0x00408757;\n    }\n    if ((param_4 == 0xffffffffffffffff) && (1 < local_a0)) {\n      param_4 = strlen(param_3);\n    }\n    if ((param_4 < uVar22 + local_a0) || (iVar7 = memcmp(__s1,local_78,local_a0), iVar7 != 0))\n    goto LAB_00408b00;\n    if (!local_5c) {\n      uVar19 = (ulong)*__s1;\n      bVar25 = bVar20;\n      switch(uVar19) {\n      case 0:\n        goto switchD_004084f8_caseD_0;\n      default:\n        goto switchD_0040897e_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00408820;\n      case 8:\n        bVar25 = false;\n        bVar23 = false;\n        bVar17 = 0x62;\n        break;\n      case 9:\n        goto switchD_00408b12_caseD_9;\n      case 10:\n        goto switchD_00408b12_caseD_a;\n      case 0xb:\n        goto switchD_00408b12_caseD_b;\n      case 0xc:\n        goto switchD_00408b12_caseD_c;\n      case 0xd:\n        goto switchD_004084f8_caseD_d;\n      case 0x20:\n        goto LAB_00408b5a;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        goto switchD_004084f8_caseD_21;\n      case 0x23:\n      case 0x7e:\n        bVar26 = bVar20;\n        goto LAB_00408b3a;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        goto LAB_00408b22;\n      case 0x27:\n        goto switchD_0040897e_caseD_27;\n      case 0x3f:\n        goto switchD_0040897e_caseD_3f;\n      case 0x5c:\n        goto switchD_004084f8_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        goto switchD_0040897e_caseD_7b;\n      }\n      goto LAB_004085a2;\n    }\n    goto LAB_0040877a;\n  }\n  uVar19 = (ulong)*__s1;\n  switch(uVar19) {\n  case 0:\n    if (bVar6) {\nswitchD_00408b12_caseD_0:\n      if (!local_5c) {\n        bVar20 = false;\nswitchD_004084f8_caseD_0:\n        bVar26 = param_5 == 2;\n        bVar24 = (bool)((bVar3 ^ 1U) & bVar26);\n        if (bVar24) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar16 = uVar15 + 3;\n          bVar3 = bVar24;\n          if (uVar9 <= uVar15 + 3) {\n            uVar16 = uVar15 + 4;\n            bVar23 = false;\n            bVar17 = 0x30;\n            bVar4 = bVar24;\n            goto LAB_00408658;\n          }\nLAB_0040889a:\n          param_1[uVar16] = 0x5c;\n          uVar15 = uVar16;\n        }\n        else if (uVar15 < uVar9) goto LAB_0040889a;\n        uVar16 = uVar15 + 1;\n        bVar24 = bVar23;\n        if (param_5 == 2) {\n          bVar17 = 0x30;\n          bVar23 = false;\n          bVar4 = bVar3;\n          goto LAB_00408658;\n        }\n        uVar19 = 0x30;\n        if ((uVar22 + 1 < param_4) && ((byte)(param_3[uVar22 + 1] - 0x30U) < 10)) {\n          if (uVar16 < uVar9) {\n            param_1[uVar16] = 0x30;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x30;\n          }\n          uVar16 = uVar15 + 3;\n          uVar19 = 0x30;\n        }\nLAB_004088d9:\n        bVar17 = (byte)uVar19;\n        bVar23 = false;\n        uVar15 = uVar16;\n        bVar4 = bVar3;\n        if ((bool)(bVar6 ^ 1U | bVar26)) goto LAB_00408658;\n        goto LAB_00408561;\n      }\n      bVar26 = param_5 == 2;\n      goto LAB_0040876c;\n    }\n    if ((param_6 & 1) == 0) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0;\n      bVar23 = false;\n      bVar20 = false;\n      goto LAB_00408548;\n    }\n    uVar22 = uVar22 + 1;\n    goto LAB_00408408;\n  default:\nswitchD_0040897e_caseD_1:\n    bVar25 = bVar6;\n    if (sVar8 != 1) {\n      local_40[0] = (mbstate_t)0x0;\n      if (param_4 == 0xffffffffffffffff) {\n        param_4 = strlen(param_3);\n      }\n      uVar21 = 0;\n      do {\n        uVar1 = uVar22 + uVar21;\n        lVar11 = FUN_0040c400(&local_44,param_3 + uVar1,param_4 - uVar1,local_40);\n        if (lVar11 == 0) break;\n        if (lVar11 == -1) {\n          bVar23 = false;\n          goto LAB_0040928a;\n        }\n        if (lVar11 == -2) {\n          if ((param_4 <= uVar1) || (param_3[uVar1] == '\\0')) goto LAB_004093c7;\n          goto LAB_004093b7;\n        }\n        if (((param_5 == 2) && (local_5c)) && (lVar11 != 1)) {\n          pcVar12 = param_3 + uVar1 + 1;\n          do {\n            if (((byte)(*pcVar12 + 0xa5U) < 0x22) &&\n               ((1L << (*pcVar12 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n              param_5 = 2;\n              goto LAB_0040876c;\n            }\n            pcVar12 = pcVar12 + 1;\n          } while (param_3 + uVar1 + lVar11 != pcVar12);\n        }\n        iVar7 = iswprint(local_44);\n        if (iVar7 == 0) {\n          bVar23 = false;\n        }\n        uVar21 = uVar21 + lVar11;\n        iVar7 = mbsinit(local_40);\n      } while (iVar7 == 0);\n      bVar25 = (bool)((bVar23 ^ 1U) & bVar6);\n      goto LAB_0040928a;\n    }\n    ppuVar10 = __ctype_b_loc();\n    uVar21 = 1;\n    bVar25 = ((*ppuVar10)[uVar19] & 0x4000) == 0;\n    bVar23 = !bVar25;\n    bVar25 = (bool)(bVar25 & bVar6);\n    goto LAB_00408954;\n  case 7:\n    bVar25 = param_5 == 2;\n    uVar19 = 7;\n    bVar13 = 0x61;\n    break;\n  case 8:\n    bVar25 = param_5 == 2;\n    uVar19 = 8;\n    bVar13 = 0x62;\n    break;\n  case 9:\n    uVar19 = 9;\n    bVar13 = 0x74;\n    goto LAB_00408992;\n  case 10:\n    uVar19 = 10;\n    bVar13 = 0x6e;\n    goto LAB_00408992;\n  case 0xb:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xb;\n    bVar13 = 0x76;\n    break;\n  case 0xc:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xc;\n    bVar13 = 0x66;\n    break;\n  case 0xd:\n    uVar19 = 0xd;\n    bVar13 = 0x72;\nLAB_00408992:\n    bVar25 = param_5 == 2;\n    bVar20 = (bool)(local_5c & bVar25);\n    if (bVar20) {\nLAB_004089aa:\n      param_5 = 2;\n      goto LAB_0040876c;\n    }\n    break;\n  case 0x20:\n    uVar19 = 0x20;\n    goto LAB_00408536;\n  case 0x21:\n  case 0x22:\n  case 0x24:\n  case 0x26:\n  case 0x28:\n  case 0x29:\n  case 0x2a:\n  case 0x3b:\n  case 0x3c:\n  case 0x3d:\n  case 0x3e:\n  case 0x5b:\n  case 0x5e:\n  case 0x60:\n  case 0x7c:\n    bVar23 = false;\nLAB_00408536:\n    bVar25 = param_5 == 2;\n    if ((local_5c) && (bVar25)) goto LAB_004089aa;\n    goto LAB_00408548;\n  case 0x23:\n  case 0x7e:\nLAB_0040852d:\n    bVar25 = param_5 == 2;\n    if (uVar22 == 0) goto LAB_00408536;\n    goto LAB_0040873b;\n  case 0x25:\n  case 0x2b:\n  case 0x2c:\n  case 0x2d:\n  case 0x2e:\n  case 0x2f:\n  case 0x30:\n  case 0x31:\n  case 0x32:\n  case 0x33:\n  case 0x34:\n  case 0x35:\n  case 0x36:\n  case 0x37:\n  case 0x38:\n  case 0x39:\n  case 0x3a:\n  case 0x41:\n  case 0x42:\n  case 0x43:\n  case 0x44:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x48:\n  case 0x49:\n  case 0x4a:\n  case 0x4b:\n  case 0x4c:\n  case 0x4d:\n  case 0x4e:\n  case 0x4f:\n  case 0x50:\n  case 0x51:\n  case 0x52:\n  case 0x53:\n  case 0x54:\n  case 0x55:\n  case 0x56:\n  case 0x57:\n  case 0x58:\n  case 0x59:\n  case 0x5a:\n  case 0x5d:\n  case 0x5f:\n  case 0x61:\n  case 0x62:\n  case 99:\n  case 100:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n  case 0x68:\n  case 0x69:\n  case 0x6a:\n  case 0x6b:\n  case 0x6c:\n  case 0x6d:\n  case 0x6e:\n  case 0x6f:\n  case 0x70:\n  case 0x71:\n  case 0x72:\n  case 0x73:\n  case 0x74:\n  case 0x75:\n  case 0x76:\n  case 0x77:\n  case 0x78:\n  case 0x79:\n  case 0x7a:\n    goto switchD_0040897e_caseD_25;\n  case 0x27:\nswitchD_0040897e_caseD_27:\n    bVar5 = bVar23;\n    if (param_5 != 2) {\n      bVar25 = false;\n      uVar19 = 0x27;\n      goto LAB_00408548;\n    }\n    if (!local_5c) {\n      if ((uVar9 == 0) || (uVar19 = 0, uVar21 = uVar9, local_70 != 0)) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x5c;\n        }\n        uVar19 = uVar9;\n        uVar21 = local_70;\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x27;\n        }\n      }\n      uVar16 = uVar15 + 3;\n      bVar17 = 0x27;\n      uVar9 = uVar19;\n      local_70 = uVar21;\n      bVar24 = false;\n      bVar4 = false;\n      goto LAB_00408658;\n    }\n    goto LAB_0040876c;\n  case 0x3f:\nswitchD_0040897e_caseD_3f:\n    if (param_5 == 2) {\n      if (!local_5c) {\n        bVar17 = 0x3f;\n        bVar24 = false;\n        bVar23 = false;\n        goto LAB_00408658;\n      }\n      goto LAB_0040876c;\n    }\n    if (param_5 != 5) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0x3f;\n      bVar23 = false;\n      goto LAB_00408548;\n    }\n    if (((((param_6 & 4) != 0) && (uVar21 = uVar22 + 2, uVar21 < param_4)) &&\n        (param_3[uVar22 + 1] == '?')) &&\n       ((uVar19 = (ulong)(byte)param_3[uVar21], (byte)param_3[uVar21] < 0x3f &&\n        ((0x7000a38200000000U >> (uVar19 & 0x3f) & 1) != 0)))) {\n      if (!local_5c) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x3f;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x22;\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x22;\n        }\n        if (uVar15 + 3 < uVar9) {\n          param_1[uVar15 + 3] = 0x3f;\n        }\n        uVar16 = uVar15 + 4;\n        bVar26 = false;\n        uVar22 = uVar21;\n        bVar24 = false;\n        goto LAB_004088d9;\n      }\n      goto LAB_0040877a;\n    }\n    bVar25 = false;\n    uVar19 = 0x3f;\n    bVar23 = false;\n    goto LAB_00408548;\n  case 0x5c:\n    if (param_5 != 2) {\nswitchD_004084f8_caseD_5c:\n      uVar19 = 0x5c;\n      bVar17 = 0x5c;\n      bVar13 = 0x5c;\n      bVar25 = (bool)(bVar6 & local_5c & local_a0 != 0);\n      if (!bVar25) break;\n      uVar22 = uVar22 + 1;\n      bVar23 = false;\n      goto LAB_00408674;\n    }\n    if (local_5c) goto LAB_0040876c;\n    uVar22 = uVar22 + 1;\n    bVar23 = false;\n    bVar17 = 0x5c;\n    goto LAB_00408674;\n  case 0x7b:\n  case 0x7d:\nswitchD_0040897e_caseD_7b:\n    bVar24 = param_4 != 1;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar24 = param_3[1] != '\\0';\n    }\n    bVar25 = param_5 == 2;\n    if (!bVar24) goto LAB_0040852d;\n    goto LAB_0040873b;\n  }\nLAB_00408730:\n  if (!bVar6) {\nLAB_0040873b:\n    bVar23 = false;\n    goto LAB_00408548;\n  }\n  bVar23 = false;\n  bVar17 = bVar13;\n  goto joined_r0x00408757;\nLAB_00408b88:\n  if ((uVar15 == 0) && ((bool)(local_5c & param_5 == 2))) {\n    param_5 = 2;\nLAB_0040876c:\n    if (bVar26) {\n      param_5 = 4;\n    }\nLAB_0040877a:\n    uVar9 = FUN_00408360(param_1,uVar9,param_3,param_4,param_5,param_6 & 0xfffffffd,0,param_8,\n                         param_9);\n    return uVar9;\n  }\n  bVar26 = (bool)(param_5 == 2 & (local_5c ^ 1U));\n  bVar23 = (bool)(local_5c ^ 1U);\n  if ((!bVar26) || (bVar23 = bVar26, !bVar5)) {\nLAB_0040945d:\n    uVar22 = uVar15;\n    if (((local_78 != (char *)0x0) && (bVar23)) && (cVar14 = *local_78, cVar14 != '\\0')) {\n      do {\n        if (uVar22 < uVar9) {\n          param_1[uVar22] = cVar14;\n        }\n        uVar22 = uVar22 + 1;\n        cVar14 = local_78[uVar22 - uVar15];\n      } while (cVar14 != '\\0');\n    }\n    if (uVar22 < uVar9) {\n      param_1[uVar22] = 0;\n    }\n    return uVar22;\n  }\n  if (bVar2) {\n    uVar9 = FUN_00408360(param_1,local_70,param_3,param_4,5,param_6,param_7,param_8,param_9);\n    return uVar9;\n  }\n  local_5b = uVar9 == 0 && local_70 != 0;\n  param_2 = local_70;\n  bVar23 = bVar5;\n  if (uVar9 != 0 || local_70 == 0) goto LAB_0040945d;\nLAB_00408be6:\n  *param_1 = 0x27;\n  param_5 = 2;\n  uVar15 = 1;\n  local_78 = \"\\'\";\n  local_a0 = 1;\n  local_5c = false;\n  uVar9 = param_2;\n  goto LAB_004083f8;\n  while (__s1[uVar21] != 0) {\nLAB_004093b7:\n    uVar21 = uVar21 + 1;\n    if (param_4 <= uVar22 + uVar21) break;\n  }\nLAB_004093c7:\n  bVar23 = false;\nLAB_0040928a:\n  if (1 < uVar21) {\nLAB_00408e4e:\n    bVar26 = false;\n    uVar21 = uVar21 + uVar22;\n    uVar16 = uVar22;\n    do {\n      bVar17 = (byte)uVar19;\n      if (bVar25) {\n        bVar26 = param_5 == 2;\n        if (local_5c) goto LAB_0040876c;\n        bVar26 = (bool)(bVar26 & (bVar4 ^ 1U));\n        if (bVar26) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar15 = uVar15 + 3;\n          bVar4 = bVar26;\n        }\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x5c;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = (char)(uVar19 >> 6) + '0';\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = ((byte)(uVar19 >> 3) & 7) + 0x30;\n        }\n        uVar22 = uVar16 + 1;\n        uVar15 = uVar15 + 3;\n        bVar17 = (bVar17 & 7) + 0x30;\n        bVar26 = bVar25;\n        if (uVar21 <= uVar22) goto LAB_004085ed;\n      }\n      else {\n        bVar3 = (bool)((bVar26 ^ 1U) & bVar4);\n        if (bVar20) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x5c;\n          }\n          uVar15 = uVar15 + 1;\n        }\n        uVar22 = uVar16 + 1;\n        if (uVar21 <= uVar22) goto LAB_00408674;\n        if (bVar3) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x27;\n          }\n          uVar15 = uVar15 + 2;\n          bVar20 = false;\n          bVar4 = false;\n        }\n        else {\n          bVar20 = false;\n        }\n      }\n      uVar16 = uVar16 + 1;\n      if (uVar15 < uVar9) {\n        param_1[uVar15] = bVar17;\n      }\n      uVar19 = (ulong)(byte)param_3[uVar16];\n      uVar15 = uVar15 + 1;\n    } while( true );\n  }\nLAB_00408954:\n  if (bVar25) {\n    bVar23 = false;\n    bVar25 = bVar6;\n    goto LAB_00408e4e;\n  }\nswitchD_0040897e_caseD_25:\n  bVar25 = param_5 == 2;\nLAB_00408548:\n  bVar17 = (byte)uVar19;\n  bVar24 = (bool)((bVar6 ^ 1U | bVar25) ^ 1 | local_5c);\n  bVar26 = bVar20;\n  if (bVar24) {\nLAB_0040855f:\n    bVar24 = false;\n    bVar20 = bVar26;\nLAB_00408561:\n    bVar17 = (byte)uVar19;\n    uVar16 = uVar15;\n    bVar4 = bVar3;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar19 >> 5) * 4) >> (bVar17 & 0x1f) & 1) == 0))\n    goto LAB_00408658;\n    bVar25 = param_5 == 2;\n  }\n  else {\nLAB_00408658:\n    bVar25 = param_5 == 2;\n    uVar15 = uVar16;\n    bVar3 = bVar4;\n    if (!bVar20) {\n      uVar22 = uVar22 + 1;\n      bVar3 = (bool)((bVar24 ^ 1U) & bVar4);\nLAB_00408674:\n      if (bVar3) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x27;\n        }\n        uVar15 = uVar15 + 2;\n        bVar4 = false;\n      }\n      goto LAB_004085ed;\n    }\n  }\njoined_r0x00408757:\n  if (local_5c) {\nLAB_00408768:\n    bVar26 = (bool)(bVar6 & bVar25);\n    goto LAB_0040876c;\n  }\nLAB_004085a2:\n  bVar25 = (bool)((bVar3 ^ 1U) & bVar25);\n  if (bVar25) {\n    if (uVar15 < uVar9) {\n      param_1[uVar15] = 0x27;\n    }\n    if (uVar15 + 1 < uVar9) {\n      param_1[uVar15 + 1] = 0x24;\n    }\n    if (uVar15 + 2 < uVar9) {\n      param_1[uVar15 + 2] = 0x27;\n    }\n    uVar15 = uVar15 + 3;\n    bVar3 = bVar25;\n  }\nLAB_004085db:\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = 0x5c;\n  }\n  uVar15 = uVar15 + 1;\n  uVar22 = uVar22 + 1;\n  bVar4 = bVar3;\nLAB_004085ed:\n  bVar3 = bVar4;\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = bVar17;\n  }\n  uVar15 = uVar15 + 1;\n  if (!bVar23) {\n    bVar2 = false;\n  }\n  goto LAB_00408408;\n}\n\n",
            "funcName": "FUN_00408360"
        },
        {
            "funcStartAddr": "0x409590",
            "funcEndAddr": "0x40972b",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_00409590(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_006175b8;\n  if (DAT_006175d0 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_0040a7b0();\n    }\n    if (PTR_DAT_006175b8 == &DAT_006175c0) {\n      puVar8 = (undefined4 *)FUN_0040a5c0(0);\n      uVar6 = PTR_DAT_006175c8._4_4_;\n      uVar5 = PTR_DAT_006175c8._0_4_;\n      uVar3 = _UNK_006175c4;\n      PTR_DAT_006175b8 = (undefined *)puVar8;\n      *puVar8 = _DAT_006175c0;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_0040a5c0(PTR_DAT_006175b8);\n      PTR_DAT_006175b8 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_006175d0 * 4,0,(long)((param_1 + 1) - DAT_006175d0) << 4);\n    DAT_006175d0 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_00408360(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_00617720) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)FUN_0040a560(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_00408360(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n",
            "funcName": "FUN_00409590"
        },
        {
            "funcStartAddr": "0x409730",
            "funcEndAddr": "0x409764",
            "decompiledFuncCode": "\nvoid FUN_00409730(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00617820;\n  }\n  FUN_0040a760(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00409730"
        },
        {
            "funcStartAddr": "0x409770",
            "funcEndAddr": "0x40977f",
            "decompiledFuncCode": "\nundefined4 FUN_00409770(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00617820;\n  }\n  return *param_1;\n}\n\n",
            "funcName": "FUN_00409770"
        },
        {
            "funcStartAddr": "0x409780",
            "funcEndAddr": "0x40978f",
            "decompiledFuncCode": "\nvoid FUN_00409780(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00617820;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_00409780"
        },
        {
            "funcStartAddr": "0x409790",
            "funcEndAddr": "0x4097c3",
            "decompiledFuncCode": "\nuint FUN_00409790(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00617820;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n",
            "funcName": "FUN_00409790"
        },
        {
            "funcStartAddr": "0x4097d0",
            "funcEndAddr": "0x4097e3",
            "decompiledFuncCode": "\nundefined4 FUN_004097d0(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00617820;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n",
            "funcName": "FUN_004097d0"
        },
        {
            "funcStartAddr": "0x4097f0",
            "funcEndAddr": "0x40981b",
            "decompiledFuncCode": "\nvoid FUN_004097f0(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00617820;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004097f0"
        },
        {
            "funcStartAddr": "0x409820",
            "funcEndAddr": "0x409892",
            "decompiledFuncCode": "\nvoid FUN_00409820(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_00617820;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00408360(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00409820"
        },
        {
            "funcStartAddr": "0x4098a0",
            "funcEndAddr": "0x409981",
            "decompiledFuncCode": "\nundefined8 FUN_004098a0(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_00617820;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00408360(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = FUN_0040a560(lVar3 + 1);\n  FUN_00408360(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n",
            "funcName": "FUN_004098a0"
        },
        {
            "funcStartAddr": "0x409990",
            "funcEndAddr": "0x40999a",
            "decompiledFuncCode": "\nvoid FUN_00409990(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_004098a0(param_1,param_2,0,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00409990"
        },
        {
            "funcStartAddr": "0x4099a0",
            "funcEndAddr": "0x409a35",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_004099a0(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_006175b8;\n  if (1 < DAT_006175d0) {\n    ppvVar2 = (void **)(PTR_DAT_006175b8 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_006175b8 + (ulong)(DAT_006175d0 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_00617720) {\n    free(*(undefined **)(__ptr_00 + 8));\n    _DAT_006175c0 = 0x100;\n    PTR_DAT_006175c8 = &DAT_00617720;\n  }\n  if (__ptr_00 != &DAT_006175c0) {\n    free(__ptr_00);\n    PTR_DAT_006175b8 = &DAT_006175c0;\n  }\n  DAT_006175d0 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_004099a0"
        },
        {
            "funcStartAddr": "0x409a40",
            "funcEndAddr": "0x409a51",
            "decompiledFuncCode": "\nvoid FUN_00409a40(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00409590(param_1,param_2,0xffffffffffffffff,&DAT_00617820);\n  return;\n}\n\n",
            "funcName": "FUN_00409a40"
        },
        {
            "funcStartAddr": "0x409a60",
            "funcEndAddr": "0x409a6a",
            "decompiledFuncCode": "\nvoid FUN_00409a60(void)\n\n{\n  FUN_00409590();\n  return;\n}\n\n",
            "funcName": "FUN_00409a60"
        },
        {
            "funcStartAddr": "0x409a70",
            "funcEndAddr": "0x409a86",
            "decompiledFuncCode": "\nvoid FUN_00409a70(undefined8 param_1)\n\n{\n  FUN_00409590(0,param_1,0xffffffffffffffff,&DAT_00617820);\n  return;\n}\n\n",
            "funcName": "FUN_00409a70"
        },
        {
            "funcStartAddr": "0x409a90",
            "funcEndAddr": "0x409aa2",
            "decompiledFuncCode": "\nvoid FUN_00409a90(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00409590(0,param_1,param_2,&DAT_00617820);\n  return;\n}\n\n",
            "funcName": "FUN_00409a90"
        },
        {
            "funcStartAddr": "0x409ab0",
            "funcEndAddr": "0x409b18",
            "decompiledFuncCode": "\nvoid FUN_00409ab0(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00409590(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00409ab0"
        },
        {
            "funcStartAddr": "0x409b20",
            "funcEndAddr": "0x409b84",
            "decompiledFuncCode": "\nvoid FUN_00409b20(undefined8 param_1,int param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00409590(param_1,param_3,param_4,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00409b20"
        },
        {
            "funcStartAddr": "0x409b90",
            "funcEndAddr": "0x409b9c",
            "decompiledFuncCode": "\nvoid FUN_00409b90(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00409ab0(0,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00409b90"
        },
        {
            "funcStartAddr": "0x409ba0",
            "funcEndAddr": "0x409baf",
            "decompiledFuncCode": "\nvoid FUN_00409ba0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00409b20(0,param_1,param_2,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00409ba0"
        },
        {
            "funcStartAddr": "0x409bb0",
            "funcEndAddr": "0x409c20",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00409bb0(undefined8 param_1,undefined8 param_2,byte param_3)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  \n  local_18 = DAT_00617850;\n  local_48 = _DAT_00617820;\n  uStack_40 = uRam0000000000617828;\n  local_38 = _DAT_00617830;\n  uStack_30 = uRam0000000000617838;\n  puVar1 = (uint *)((long)&uStack_40 + (ulong)(param_3 >> 5) * 4);\n  local_28 = _DAT_00617840;\n  uStack_20 = uRam0000000000617848;\n  uVar2 = *puVar1;\n  *puVar1 = (~(uVar2 >> (param_3 & 0x1f)) & 1) << (param_3 & 0x1f) ^ uVar2;\n  FUN_00409590(0,param_1,param_2,&local_48);\n  return;\n}\n\n",
            "funcName": "FUN_00409bb0"
        },
        {
            "funcStartAddr": "0x409c20",
            "funcEndAddr": "0x409c2d",
            "decompiledFuncCode": "\nvoid FUN_00409c20(undefined8 param_1,char param_2)\n\n{\n  FUN_00409bb0(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00409c20"
        },
        {
            "funcStartAddr": "0x409c30",
            "funcEndAddr": "0x409c41",
            "decompiledFuncCode": "\nvoid FUN_00409c30(undefined8 param_1)\n\n{\n  FUN_00409bb0(param_1,0xffffffffffffffff,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00409c30"
        },
        {
            "funcStartAddr": "0x409c50",
            "funcEndAddr": "0x409c5a",
            "decompiledFuncCode": "\nvoid FUN_00409c50(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00409bb0(param_1,param_2,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00409c50"
        },
        {
            "funcStartAddr": "0x409c60",
            "funcEndAddr": "0x409cce",
            "decompiledFuncCode": "\nvoid FUN_00409c60(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_40 = 0x400000000000000;\n    local_44 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00409590(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00409c60"
        },
        {
            "funcStartAddr": "0x409cd0",
            "funcEndAddr": "0x409d3c",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00409cd0(undefined8 param_1,long param_2,long param_3,undefined8 param_4,undefined8 param_5\n                 )\n\n{\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long lStack_20;\n  long local_18;\n  \n  uStack_40 = uRam0000000000617828;\n  local_38 = _DAT_00617830;\n  uStack_30 = uRam0000000000617838;\n  local_28 = _DAT_00617840;\n  lStack_20 = uRam0000000000617848;\n  local_18 = DAT_00617850;\n  local_48 = CONCAT44((int)((ulong)_DAT_00617820 >> 0x20),10);\n  if ((param_2 != 0) && (param_3 != 0)) {\n    lStack_20 = param_2;\n    local_18 = param_3;\n    FUN_00409590(param_1,param_4,param_5,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00409cd0"
        },
        {
            "funcStartAddr": "0x409d40",
            "funcEndAddr": "0x409d49",
            "decompiledFuncCode": "\nvoid FUN_00409d40(void)\n\n{\n  FUN_00409cd0();\n  return;\n}\n\n",
            "funcName": "FUN_00409d40"
        },
        {
            "funcStartAddr": "0x409d50",
            "funcEndAddr": "0x409d67",
            "decompiledFuncCode": "\nvoid FUN_00409d50(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00409cd0(0,param_1,param_2,param_3,0xffffffffffffffff);\n  return;\n}\n\n",
            "funcName": "FUN_00409d50"
        },
        {
            "funcStartAddr": "0x409d70",
            "funcEndAddr": "0x409d83",
            "decompiledFuncCode": "\nvoid FUN_00409d70(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00409cd0(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n",
            "funcName": "FUN_00409d70"
        },
        {
            "funcStartAddr": "0x409d90",
            "funcEndAddr": "0x409d9a",
            "decompiledFuncCode": "\nvoid FUN_00409d90(void)\n\n{\n  FUN_00409590();\n  return;\n}\n\n",
            "funcName": "FUN_00409d90"
        },
        {
            "funcStartAddr": "0x409da0",
            "funcEndAddr": "0x409db2",
            "decompiledFuncCode": "\nvoid FUN_00409da0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00409590(0,param_1,param_2,&DAT_00617580);\n  return;\n}\n\n",
            "funcName": "FUN_00409da0"
        },
        {
            "funcStartAddr": "0x409dc0",
            "funcEndAddr": "0x409dd1",
            "decompiledFuncCode": "\nvoid FUN_00409dc0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00409590(param_1,param_2,0xffffffffffffffff,&DAT_00617580);\n  return;\n}\n\n",
            "funcName": "FUN_00409dc0"
        },
        {
            "funcStartAddr": "0x409de0",
            "funcEndAddr": "0x409df6",
            "decompiledFuncCode": "\nvoid FUN_00409de0(undefined8 param_1)\n\n{\n  FUN_00409590(0,param_1,0xffffffffffffffff,&DAT_00617580);\n  return;\n}\n\n",
            "funcName": "FUN_00409de0"
        },
        {
            "funcStartAddr": "0x409e00",
            "funcEndAddr": "0x409f1f",
            "decompiledFuncCode": "\nbool FUN_00409e00(undefined8 param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  void *__s1;\n  void *__s2;\n  size_t __n;\n  size_t sVar2;\n  char *__filename;\n  char *__filename_00;\n  int *piVar3;\n  bool bVar4;\n  stat local_158;\n  stat local_c8;\n  \n  bVar4 = false;\n  __s1 = (void *)FUN_00405a70();\n  __s2 = (void *)FUN_00405a70(param_2);\n  __n = FUN_00405ad0(__s1);\n  sVar2 = FUN_00405ad0(__s2);\n  if ((__n == sVar2) && (iVar1 = memcmp(__s1,__s2,__n), iVar1 == 0)) {\n    __filename = (char *)FUN_00405990(param_1);\n    __filename_00 = (char *)FUN_00405990(param_2);\n    iVar1 = __xstat(1,__filename,&local_158);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      error(1,*piVar3,&DAT_00413b3f,__filename);\n    }\n    iVar1 = __xstat(1,__filename_00,&local_c8);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      error(1,*piVar3,&DAT_00413b3f,__filename_00);\n    }\n    bVar4 = local_158.st_ino == local_c8.st_ino && local_158.st_dev == local_c8.st_dev;\n    free(__filename);\n    free(__filename_00);\n  }\n  return bVar4;\n}\n\n",
            "funcName": "FUN_00409e00"
        },
        {
            "funcStartAddr": "0x409f30",
            "funcEndAddr": "0x409f73",
            "decompiledFuncCode": "\nint FUN_00409f30(int *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  \n  *(undefined8 *)(param_1 + 2) = 0;\n  iVar1 = FUN_0040db90(&DAT_0041218c,0x80000);\n  *param_1 = iVar1;\n  if (-1 < iVar1) {\n    return 0;\n  }\n  lVar2 = FUN_0040b160(0,0);\n  *(long *)(param_1 + 2) = lVar2;\n  return -(uint)(lVar2 == 0);\n}\n\n",
            "funcName": "FUN_00409f30"
        },
        {
            "funcStartAddr": "0x409f80",
            "funcEndAddr": "0x409f96",
            "decompiledFuncCode": "\nvoid FUN_00409f80(int *param_1)\n\n{\n  if (-1 < *param_1) {\n    fchdir(*param_1);\n    return;\n  }\n  FUN_0040ae00(*(undefined8 *)(param_1 + 2));\n  return;\n}\n\n",
            "funcName": "FUN_00409f80"
        },
        {
            "funcStartAddr": "0x409fa0",
            "funcEndAddr": "0x409fb9",
            "decompiledFuncCode": "\nvoid FUN_00409fa0(int *param_1)\n\n{\n  if (-1 < *param_1) {\n    close(*param_1);\n  }\n  free(*(void **)(param_1 + 2));\n  return;\n}\n\n",
            "funcName": "FUN_00409fa0"
        },
        {
            "funcStartAddr": "0x409fc0",
            "funcEndAddr": "0x40a364",
            "decompiledFuncCode": "\nundefined8\nFUN_00409fc0(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_004130cb,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0040a23c;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_0040a23c:\n    __fprintf_chk(param_1,1,uVar7,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[1];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar1 = param_5[2];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_0040a2d9;\n  case 7:\n    uVar1 = param_5[2];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    local_58 = param_5[1];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_0040a2d9:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_58,uVar1,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0040a0ba;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_0040a0ba:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_50,local_58,uVar6,uVar5,uVar4,uVar1,local_48);\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00409fc0"
        },
        {
            "funcStartAddr": "0x40a3a0",
            "funcEndAddr": "0x40a3c0",
            "decompiledFuncCode": "\nvoid FUN_0040a3a0(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_00409fc0();\n  return;\n}\n\n",
            "funcName": "FUN_0040a3a0"
        },
        {
            "funcStartAddr": "0x40a3c0",
            "funcEndAddr": "0x40a419",
            "decompiledFuncCode": "\nvoid FUN_0040a3c0(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long local_58 [11];\n  \n  lVar4 = 0;\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_58[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_58[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_00409fc0();\n  return;\n}\n\n",
            "funcName": "FUN_0040a3c0"
        },
        {
            "funcStartAddr": "0x40a420",
            "funcEndAddr": "0x40a4d8",
            "decompiledFuncCode": "\nvoid FUN_0040a420(void)\n\n{\n  long lVar1;\n  undefined8 in_R8;\n  ulong uVar2;\n  undefined8 in_R9;\n  long lVar3;\n  long *plVar4;\n  long local_88 [10];\n  long local_38 [4];\n  long local_18 [3];\n  \n  local_18[0] = in_R8;\n  plVar4 = (long *)&stack0x00000008;\n  uVar2 = 0x20;\n  local_18[1] = in_R9;\n  lVar3 = 0;\n  do {\n    if ((uint)uVar2 < 0x30) {\n      lVar1 = *(long *)((long)local_38 + uVar2);\n      local_88[lVar3] = lVar1;\n      uVar2 = (ulong)((uint)uVar2 + 8);\n    }\n    else {\n      lVar1 = *plVar4;\n      local_88[lVar3] = lVar1;\n      plVar4 = plVar4 + 1;\n    }\n  } while ((lVar1 != 0) && (lVar3 = lVar3 + 1, lVar3 != 10));\n  FUN_00409fc0();\n  return;\n}\n\n",
            "funcName": "FUN_0040a420"
        },
        {
            "funcStartAddr": "0x40a4e0",
            "funcEndAddr": "0x40a554",
            "decompiledFuncCode": "\nvoid FUN_0040a4e0(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n",
            "funcName": "FUN_0040a4e0"
        },
        {
            "funcStartAddr": "0x40a560",
            "funcEndAddr": "0x40a57a",
            "decompiledFuncCode": "\nvoid FUN_0040a560(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_0040a7b0();\n  }\n  return;\n}\n\n",
            "funcName": "FUN_0040a560"
        },
        {
            "funcStartAddr": "0x40a580",
            "funcEndAddr": "0x40a5a1",
            "decompiledFuncCode": "\nvoid FUN_0040a580(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_0040a560();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0040a7b0();\n}\n\n",
            "funcName": "FUN_0040a580"
        },
        {
            "funcStartAddr": "0x40a5b0",
            "funcEndAddr": "0x40a5b2",
            "decompiledFuncCode": "\nvoid thunk_FUN_0040a560(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_0040a7b0();\n  }\n  return;\n}\n\n",
            "funcName": "thunk_40a5b0"
        },
        {
            "funcStartAddr": "0x40a5c0",
            "funcEndAddr": "0x40a5f0",
            "decompiledFuncCode": "\nvoid * FUN_0040a5c0(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_0040a7b0();\n  }\n  return pvVar1;\n}\n\n",
            "funcName": "FUN_0040a5c0"
        },
        {
            "funcStartAddr": "0x40a600",
            "funcEndAddr": "0x40a621",
            "decompiledFuncCode": "\nvoid FUN_0040a600(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_0040a5c0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0040a7b0();\n}\n\n",
            "funcName": "FUN_0040a600"
        },
        {
            "funcStartAddr": "0x40a630",
            "funcEndAddr": "0x40a6a8",
            "decompiledFuncCode": "\nvoid FUN_0040a630(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar2 = *param_2;\n  if (param_1 == 0) {\n    if (uVar2 == 0) {\n      uVar2 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar3 = (ulong)(SUB168(ZEXT816(uVar2) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar2) * ZEXT816(param_3),0) < 0) || (uVar3 != 0)) goto LAB_0040a68b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar3 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar2) {\nLAB_0040a68b:\n                    /* WARNING: Subroutine does not return */\n      FUN_0040a7b0(param_1,param_2,uVar3);\n    }\n    uVar2 = (uVar2 >> 1) + 1 + uVar2;\n  }\n  *param_2 = uVar2;\n  FUN_0040a5c0(param_1,uVar2 * param_3);\n  return;\n}\n\n",
            "funcName": "FUN_0040a630"
        },
        {
            "funcStartAddr": "0x40a6c0",
            "funcEndAddr": "0x40a70a",
            "decompiledFuncCode": "\nvoid FUN_0040a6c0(long param_1,ulong *param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = *param_2;\n  if (param_1 == 0) {\n    if (uVar1 == 0) {\n      *param_2 = 0x80;\n      FUN_0040a5c0(0,0x80);\n      return;\n    }\n    if ((long)uVar1 < 0) goto LAB_0040a70a;\n  }\n  else {\n    if (0x5555555555555553 < uVar1) {\nLAB_0040a70a:\n                    /* WARNING: Subroutine does not return */\n      FUN_0040a7b0();\n    }\n    uVar1 = (uVar1 >> 1) + 1 + uVar1;\n  }\n  *param_2 = uVar1;\n  FUN_0040a5c0(param_1,uVar1);\n  return;\n}\n\n",
            "funcName": "FUN_0040a6c0"
        },
        {
            "funcStartAddr": "0x40a710",
            "funcEndAddr": "0x40a727",
            "decompiledFuncCode": "\nvoid FUN_0040a710(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_0040a560();\n  memset(__s,0,param_1);\n  return;\n}\n\n",
            "funcName": "FUN_0040a710"
        },
        {
            "funcStartAddr": "0x40a730",
            "funcEndAddr": "0x40a75e",
            "decompiledFuncCode": "\nvoid FUN_0040a730(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0040a7b0();\n}\n\n",
            "funcName": "FUN_0040a730"
        },
        {
            "funcStartAddr": "0x40a760",
            "funcEndAddr": "0x40a788",
            "decompiledFuncCode": "\nvoid FUN_0040a760(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_0040a560(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_0040a760"
        },
        {
            "funcStartAddr": "0x40a790",
            "funcEndAddr": "0x40a7a3",
            "decompiledFuncCode": "\nvoid FUN_0040a790(char *param_1)\n\n{\n  void *__dest;\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  __dest = (void *)FUN_0040a560(sVar1 + 1);\n  memcpy(__dest,param_1,sVar1 + 1);\n  return;\n}\n\n",
            "funcName": "FUN_0040a790"
        },
        {
            "funcStartAddr": "0x40a7b0",
            "funcEndAddr": "0x40a7e1",
            "decompiledFuncCode": "\nvoid FUN_0040a7b0(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_00617568,0,&DAT_00413b3f,uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040a7b0"
        },
        {
            "funcStartAddr": "0x40a7f0",
            "funcEndAddr": "0x40a816",
            "decompiledFuncCode": "\nlong FUN_0040a7f0(void)\n\n{\n  long lVar1;\n  int *piVar2;\n  \n  lVar1 = FUN_0040b160(0,0);\n  if (lVar1 == 0) {\n    piVar2 = __errno_location();\n    if (*piVar2 == 0xc) {\n                    /* WARNING: Subroutine does not return */\n      FUN_0040a7b0();\n    }\n  }\n  return lVar1;\n}\n\n",
            "funcName": "FUN_0040a7f0"
        },
        {
            "funcStartAddr": "0x40a820",
            "funcEndAddr": "0x40a8a1",
            "decompiledFuncCode": "\nvoid FUN_0040a820(int param_1,int param_2,undefined param_3,long param_4,undefined8 param_5)\n\n{\n  undefined4 uVar1;\n  undefined8 uVar2;\n  undefined1 *puVar3;\n  undefined *puVar4;\n  undefined local_2a;\n  undefined local_29;\n  \n  uVar1 = DAT_00617568;\n  if (param_1 - 1U < 4) {\n    if (param_2 < 0) {\n      puVar4 = &local_2a;\n      puVar3 = &DAT_00413460 + -(long)param_2;\n      local_29 = 0;\n      local_2a = param_3;\n    }\n    else {\n      puVar3 = &DAT_00413460;\n      puVar4 = *(undefined **)(param_4 + (long)param_2 * 0x20);\n    }\n    uVar2 = dcgettext(0,(&PTR_s__s_s_argument___s__too_large_004134e0)[param_1 - 1U],5);\n    error(uVar1,0,uVar2,puVar3,puVar4,param_5);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040a820"
        },
        {
            "funcStartAddr": "0x40a8b0",
            "funcEndAddr": "0x40ac5e",
            "decompiledFuncCode": "\nulong FUN_0040a8b0(byte *param_1,byte **param_2,uint param_3,ulong *param_4,char *param_5)\n\n{\n  byte bVar1;\n  undefined auVar2 [16];\n  int *piVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  ulong uVar6;\n  char *pcVar7;\n  byte bVar8;\n  uint uVar9;\n  int iVar10;\n  ulong uVar11;\n  byte bVar12;\n  uint uVar13;\n  ulong uVar14;\n  int iVar15;\n  int iVar16;\n  byte *local_40 [2];\n  \n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoumax\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = local_40;\n  }\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  bVar12 = *param_1;\n  ppuVar4 = __ctype_b_loc();\n  pbVar5 = param_1;\n  while ((*(byte *)((long)*ppuVar4 + (ulong)bVar12 * 2 + 1) & 0x20) != 0) {\n    pbVar5 = pbVar5 + 1;\n    bVar12 = *pbVar5;\n  }\n  if (bVar12 == 0x2d) {\n    return 4;\n  }\n  uVar6 = __strtoul_internal(param_1,param_2,param_3,0);\n  pbVar5 = *param_2;\n  if (pbVar5 == param_1) {\n    if ((param_5 == (char *)0x0) || (bVar12 = *param_1, bVar12 == 0)) {\n      return 4;\n    }\n    uVar14 = 0;\n    uVar6 = 1;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) {\n      return 4;\n    }\n  }\n  else {\n    if (*piVar3 == 0) {\n      uVar14 = 0;\n    }\n    else {\n      uVar14 = 1;\n      if (*piVar3 != 0x22) {\n        return 4;\n      }\n    }\n    uVar13 = (uint)uVar14;\n    if ((param_5 == (char *)0x0) || (bVar12 = *pbVar5, bVar12 == 0)) goto LAB_0040a952;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) goto switchD_0040aa3c_caseD_1;\n  }\n  uVar13 = (uint)uVar14;\n  uVar9 = bVar12 - 0x45;\n  bVar8 = (byte)uVar9;\n  if (((bVar8 < 0x30) && ((0x814400308945U >> ((ulong)uVar9 & 0x3f) & 1) != 0)) &&\n     (pcVar7 = strchr(param_5,0x30), pcVar7 != (char *)0x0)) {\n    bVar1 = pbVar5[1];\n    if (bVar1 != 0x44) {\n      if (bVar1 == 0x69) {\n        uVar11 = 0x400;\n        iVar15 = (pbVar5[2] == 0x42) + 1 + (uint)(pbVar5[2] == 0x42);\n        goto LAB_0040aa2a;\n      }\n      if (bVar1 != 0x42) {\n                    /* WARNING: Could not recover jumptable at 0x0040aa11. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        uVar6 = (*(code *)(&PTR_LAB_00413538)[bVar8])();\n        return uVar6;\n      }\n    }\n    iVar15 = 2;\n    uVar11 = 1000;\n  }\n  else {\n    iVar15 = 1;\n    uVar11 = 0x400;\n  }\nLAB_0040aa2a:\n  iVar10 = (int)uVar11;\n  switch(bVar12 - 0x42 & 0xff) {\n  case 0:\n    if (uVar6 >> 0x36 == 0) {\n      uVar6 = uVar6 << 10;\n      break;\n    }\n    goto LAB_0040aa97;\n  default:\nswitchD_0040aa3c_caseD_1:\n    *param_4 = uVar6;\n    return (ulong)(uVar13 | 2);\n  case 3:\n    iVar16 = 6;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_0040ab24;\n  case 5:\n  case 0x25:\n    uVar11 = (ulong)iVar10;\n    if (((SUB168(ZEXT816(uVar6) * ZEXT816(uVar11) >> 0x40,0) != 0) ||\n        (auVar2 = (ZEXT816(uVar6) * ZEXT816(uVar11) & (undefined  [16])0xffffffffffffffff) *\n                  ZEXT816(uVar11), SUB168(auVar2 >> 0x40,0) != 0)) ||\n       (auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816(uVar11),\n       uVar6 = SUB168(auVar2,0), SUB168(auVar2 >> 0x40,0) != 0)) {\n      uVar6 = 0xffffffffffffffff;\n      uVar14 = 1;\n    }\n    break;\n  case 9:\n  case 0x29:\n    auVar2 = ZEXT816(uVar6) * ZEXT816(uVar11);\n    goto joined_r0x0040aa5c;\n  case 0xb:\n  case 0x2b:\n    auVar2 = ZEXT816(uVar6) * ZEXT816((ulong)(long)iVar10);\n    if (SUB168(auVar2 >> 0x40,0) != 0) goto LAB_0040aa97;\n    auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816((ulong)(long)iVar10);\njoined_r0x0040aa5c:\n    uVar6 = SUB168(auVar2,0);\n    if (SUB168(auVar2 >> 0x40,0) != 0) {\nLAB_0040aa97:\n      uVar14 = 1;\n      uVar6 = 0xffffffffffffffff;\n    }\n    break;\n  case 0xe:\n    iVar16 = 5;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_0040ab24;\n  case 0x12:\n  case 0x32:\n    iVar16 = 4;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_0040ab24;\n  case 0x17:\n    iVar16 = 8;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_0040ab24;\n  case 0x18:\n    iVar16 = 7;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\nLAB_0040ab24:\n    uVar14 = (ulong)(uVar13 | uVar9);\n    break;\n  case 0x20:\n    if (uVar6 >> 0x37 != 0) goto LAB_0040aa97;\n    uVar6 = uVar6 << 9;\n    break;\n  case 0x21:\n    break;\n  case 0x35:\n    if ((long)uVar6 < 0) goto LAB_0040aa97;\n    uVar6 = uVar6 * 2;\n  }\n  *param_2 = pbVar5 + iVar15;\n  if (pbVar5[iVar15] != 0) {\n    uVar14 = (ulong)((uint)uVar14 | 2);\n  }\nLAB_0040a952:\n  *param_4 = uVar6;\n  return uVar14;\n}\n\n",
            "funcName": "FUN_0040a8b0"
        },
        {
            "funcStartAddr": "0x40acf0",
            "funcEndAddr": "0x40ad7f",
            "decompiledFuncCode": "\nvoid FUN_0040acf0(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined8 param_9,undefined8 param_10,undefined8 param_11,undefined8 param_12,\n                 undefined8 param_13,undefined8 param_14)\n\n{\n  char in_AL;\n  undefined4 local_d0;\n  undefined4 local_cc;\n  undefined *local_c8;\n  undefined *local_c0;\n  undefined local_b8 [16];\n  undefined8 local_a8;\n  undefined8 local_a0;\n  undefined8 local_98;\n  undefined8 local_90;\n  undefined4 local_88;\n  undefined4 local_78;\n  undefined4 local_68;\n  undefined4 local_58;\n  undefined4 local_48;\n  undefined4 local_38;\n  undefined4 local_28;\n  undefined4 local_18;\n  \n  if (in_AL != '\\0') {\n    local_88 = param_1;\n    local_78 = param_2;\n    local_68 = param_3;\n    local_58 = param_4;\n    local_48 = param_5;\n    local_38 = param_6;\n    local_28 = param_7;\n    local_18 = param_8;\n  }\n  local_c8 = &stack0x00000008;\n  local_d0 = 0x10;\n  local_c0 = local_b8;\n  local_cc = 0x30;\n  local_a8 = param_11;\n  local_a0 = param_12;\n  local_98 = param_13;\n  local_90 = param_14;\n  FUN_0040d650(param_9,param_10,&local_d0);\n  return;\n}\n\n",
            "funcName": "FUN_0040acf0"
        },
        {
            "funcStartAddr": "0x40ad80",
            "funcEndAddr": "0x40adb0",
            "decompiledFuncCode": "\nvoid FUN_0040ad80(int param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 < 0) {\n    return;\n  }\n  iVar1 = close(param_1);\n  if (iVar1 == 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"! close_fail\",\"lib/chdir-long.c\",0x40,\"cdb_free\");\n}\n\n",
            "funcName": "FUN_0040ad80"
        },
        {
            "funcStartAddr": "0x40adc0",
            "funcEndAddr": "0x40adf6",
            "decompiledFuncCode": "\nundefined8 FUN_0040adc0(int *param_1,char *param_2)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  \n  iVar1 = openat(*param_1,param_2,0x10900);\n  if (iVar1 < 0) {\n    uVar2 = 0xffffffff;\n  }\n  else {\n    FUN_0040ad80(*param_1);\n    *param_1 = iVar1;\n    uVar2 = 0;\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_0040adc0"
        },
        {
            "funcStartAddr": "0x40ae00",
            "funcEndAddr": "0x40b056",
            "decompiledFuncCode": "\nint FUN_0040ae00(char *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  size_t sVar3;\n  size_t sVar4;\n  undefined *puVar5;\n  char *__s;\n  int local_2c;\n  \n  iVar1 = chdir(param_1);\n  if (iVar1 == 0) {\n    return 0;\n  }\n  piVar2 = __errno_location();\n  if (*piVar2 != 0x24) {\n    return iVar1;\n  }\n  sVar3 = strlen(param_1);\n  local_2c = -100;\n  if (sVar3 == 0) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 < len\",\"lib/chdir-long.c\",0x7e,\"chdir_long\");\n  }\n  if (sVar3 < 0x1000) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"4096 <= len\",\"lib/chdir-long.c\",0x7f,\"chdir_long\");\n  }\n  sVar4 = strspn(param_1,\"/\");\n  if (sVar4 == 2) {\n    puVar5 = (undefined *)FUN_0040c480(param_1 + 3,0x2f,sVar3 - 3);\n    if (puVar5 == (undefined *)0x0) {\n      return -1;\n    }\n    *puVar5 = 0;\n    iVar1 = FUN_0040adc0(&local_2c,param_1);\n    *puVar5 = 0x2f;\n    if (iVar1 != 0) goto LAB_0040af30;\n    sVar4 = strspn(puVar5 + 1,\"/\");\n    __s = puVar5 + 1 + sVar4;\n  }\n  else {\n    __s = param_1;\n    if (sVar4 != 0) {\n      iVar1 = FUN_0040adc0(&local_2c,&DAT_0041236e);\n      if (iVar1 != 0) goto LAB_0040af30;\n      __s = param_1 + sVar4;\n    }\n  }\n  if (*__s == '/') {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"*dir != \\'/\\'\",\"lib/chdir-long.c\",0xa2,\"chdir_long\");\n  }\n  param_1 = param_1 + sVar3;\n  if (param_1 < __s) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"dir <= dir_end\",\"lib/chdir-long.c\",0xa3,\"chdir_long\");\n  }\n  while (0xfff < (long)param_1 - (long)__s) {\n    puVar5 = (undefined *)memrchr(__s,0x2f,0x1000);\n    if (puVar5 == (undefined *)0x0) {\n      *piVar2 = 0x24;\n      return -1;\n    }\n    *puVar5 = 0;\n    if (0xfff < (long)puVar5 - (long)__s) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"slash - dir < 4096\",\"lib/chdir-long.c\",0xb3,\"chdir_long\");\n    }\n    iVar1 = FUN_0040adc0(&local_2c,__s);\n    *puVar5 = 0x2f;\n    if (iVar1 != 0) goto LAB_0040af30;\n    sVar3 = strspn(puVar5 + 1,\"/\");\n    __s = puVar5 + 1 + sVar3;\n  }\n  if (((param_1 <= __s) || (iVar1 = FUN_0040adc0(&local_2c,__s), iVar1 == 0)) &&\n     (iVar1 = fchdir(local_2c), iVar1 == 0)) {\n    FUN_0040ad80(local_2c);\n    return 0;\n  }\nLAB_0040af30:\n  iVar1 = *piVar2;\n  FUN_0040ad80(local_2c);\n  *piVar2 = iVar1;\n  return -1;\n}\n\n",
            "funcName": "FUN_0040ae00"
        },
        {
            "funcStartAddr": "0x40b070",
            "funcEndAddr": "0x40b150",
            "decompiledFuncCode": "\nundefined8 FUN_0040b070(char *param_1,undefined8 param_2,long *param_3)\n\n{\n  int iVar1;\n  utsname local_1a8;\n  \n  if (DAT_006175d4 < 0) {\n    iVar1 = uname(&local_1a8);\n    if ((iVar1 == 0) && (iVar1 = strverscmp(local_1a8.release,\"2.6.36\"), -1 < iVar1)) {\n      DAT_006175d4 = 1;\n      goto LAB_0040b090;\n    }\n    DAT_006175d4 = 0;\n  }\n  else if (DAT_006175d4 != 0) {\nLAB_0040b090:\n    iVar1 = statvfs(param_1,(statvfs *)&local_1a8);\n    if (iVar1 < 0) {\n      return 0xffffffff;\n    }\n    if (local_1a8.sysname._8_8_ == 0) {\n      local_1a8.sysname._8_8_ = local_1a8.sysname._0_8_;\n    }\n    goto LAB_0040b0ea;\n  }\n  iVar1 = statfs(param_1,(statfs *)&local_1a8);\n  if (iVar1 < 0) {\n    return 0xffffffff;\n  }\nLAB_0040b0ea:\n  *param_3 = local_1a8.sysname._8_8_;\n  param_3[1] = local_1a8.sysname._16_8_;\n  param_3[2] = local_1a8.sysname._24_8_;\n  param_3[3] = local_1a8.sysname._32_8_;\n  *(byte *)(param_3 + 4) = (byte)((ulong)local_1a8.sysname._32_8_ >> 0x3f);\n  param_3[5] = local_1a8.sysname._40_8_;\n  param_3[6] = local_1a8.sysname._48_8_;\n  return 0;\n}\n\n",
            "funcName": "FUN_0040b070"
        },
        {
            "funcStartAddr": "0x40b160",
            "funcEndAddr": "0x40b605",
            "decompiledFuncCode": "\nvoid * FUN_0040b160(void *param_1,size_t param_2)\n\n{\n  char *__filename;\n  bool bVar1;\n  __dev_t _Var2;\n  __dev_t _Var3;\n  __ino_t _Var4;\n  __ino_t _Var5;\n  int iVar6;\n  int iVar7;\n  int *piVar8;\n  DIR *__dirp;\n  dirent *pdVar9;\n  size_t __n;\n  void *pvVar10;\n  bool bVar11;\n  ulong uVar12;\n  long lVar13;\n  ulong uVar14;\n  __ino_t _Var15;\n  bool bVar16;\n  bool bVar17;\n  bool bVar18;\n  __dev_t local_120;\n  void *local_110;\n  void *local_108;\n  ulong local_100;\n  void *local_e8;\n  stat local_c8;\n  \n  if (param_2 == 0) {\n    local_100 = 0x1000;\n    if (param_1 != (void *)0x0) {\n      piVar8 = __errno_location();\n      *piVar8 = 0x16;\n      return (void *)0x0;\n    }\nLAB_0040b192:\n    local_110 = malloc(local_100);\n    if (local_110 == (void *)0x0) {\n      return (void *)0x0;\n    }\n  }\n  else {\n    local_110 = param_1;\n    local_100 = param_2;\n    if (param_1 == (void *)0x0) goto LAB_0040b192;\n  }\n  lVar13 = (long)local_110 + local_100;\n  *(undefined *)(lVar13 + -1) = 0;\n  iVar6 = __lxstat(1,\".\",&local_c8);\n  _Var15 = local_c8.st_ino;\n  _Var2 = local_c8.st_dev;\n  if (-1 < iVar6) {\n    local_120 = local_c8.st_dev;\n    iVar6 = __lxstat(1,\"/\",&local_c8);\n    _Var4 = local_c8.st_ino;\n    _Var3 = local_c8.st_dev;\n    if (-1 < iVar6) {\n      local_e8 = (void *)(lVar13 + -1);\n      bVar16 = _Var2 != local_c8.st_dev;\n      bVar17 = _Var15 != local_c8.st_ino;\n      if (!bVar16 && !bVar17) {\nLAB_0040b478:\n        if (local_e8 == (void *)((long)local_110 + (local_100 - 1))) {\n          *(undefined *)((long)local_e8 + -1) = 0x2f;\n          local_e8 = (void *)((long)local_e8 + -1);\n        }\n        memmove(local_110,local_e8,lVar13 - (long)local_e8);\n        local_108 = param_1;\n        if (param_2 == 0) {\n          local_108 = realloc(local_110,lVar13 - (long)local_e8);\n        }\n        if (local_108 != (void *)0x0) {\n          return local_108;\n        }\n        return local_110;\n      }\n      piVar8 = __errno_location();\n      __dirp = (DIR *)0x0;\n      iVar6 = -100;\n      do {\n        iVar6 = openat(iVar6,\"..\",0);\n        if (iVar6 < 0) {\n          iVar7 = *piVar8;\n          if (__dirp != (DIR *)0x0) goto LAB_0040b531;\n          goto joined_r0x0040b53f;\n        }\n        iVar7 = __fxstat(1,iVar6,&local_c8);\n        if (iVar7 != 0) {\n          iVar7 = *piVar8;\n          if (__dirp != (DIR *)0x0) {\n            closedir(__dirp);\n          }\nLAB_0040b59d:\n          close(iVar6);\n          goto joined_r0x0040b53f;\n        }\n        if (((__dirp != (DIR *)0x0) && (iVar7 = closedir(__dirp), iVar7 != 0)) ||\n           (_Var5 = local_c8.st_ino, _Var2 = local_c8.st_dev, __dirp = fdopendir(iVar6),\n           bVar1 = bVar16 || bVar17, __dirp == (DIR *)0x0)) {\n          iVar7 = *piVar8;\n          goto LAB_0040b59d;\n        }\nLAB_0040b2f0:\n        do {\n          do {\n            *piVar8 = 0;\n            pdVar9 = readdir(__dirp);\n            if (pdVar9 == (dirent *)0x0) {\n              iVar7 = *piVar8;\n              if ((iVar7 == 0) && (bVar1)) {\n                rewinddir(__dirp);\n                pdVar9 = readdir(__dirp);\n                if (pdVar9 != (dirent *)0x0) {\n                  bVar11 = false;\n                  bVar1 = bVar11;\n                  if (pdVar9->d_name[0] == '.') goto LAB_0040b500;\n                  break;\n                }\n                iVar7 = *piVar8;\n              }\n              if (iVar7 == 0) {\n                *piVar8 = 2;\n                iVar7 = 2;\n              }\n              goto LAB_0040b531;\n            }\n            if (pdVar9->d_name[0] == '.') {\nLAB_0040b500:\n              if ((pdVar9->d_name[1] == '\\0') || (*(short *)(pdVar9->d_name + 1) == 0x2e))\n              goto LAB_0040b2f0;\n            }\n            bVar11 = bVar1;\n          } while ((bVar1) &&\n                  (bVar18 = pdVar9->d_ino == _Var15, bVar11 = bVar18 || _Var2 != local_120,\n                  !bVar18 && _Var2 == local_120));\n          __filename = pdVar9->d_name;\n          iVar7 = __fxstatat(1,iVar6,__filename,&local_c8,0x100);\n          bVar1 = bVar11;\n        } while ((((iVar7 != 0) || ((local_c8.st_mode & 0xf000) != 0x4000)) ||\n                 (local_c8.st_dev != local_120)) || (local_c8.st_ino != _Var15));\n        uVar14 = (long)local_e8 - (long)local_110;\n        __n = strlen(__filename);\n        if (uVar14 <= __n) {\n          if (param_2 == 0) {\n            uVar12 = local_100;\n            if (local_100 <= __n) {\n              uVar12 = __n;\n            }\n            if ((!CARRY8(local_100,uVar12)) &&\n               (pvVar10 = realloc(local_110,local_100 + uVar12), pvVar10 != (void *)0x0)) {\n              local_e8 = memcpy((void *)((long)pvVar10 + uVar12 + uVar14),\n                                (void *)((long)pvVar10 + uVar14),local_100 - uVar14);\n              local_110 = pvVar10;\n              local_100 = local_100 + uVar12;\n              goto LAB_0040b40f;\n            }\n            *piVar8 = 0xc;\n            iVar7 = 0xc;\n          }\n          else {\n            *piVar8 = 0x22;\n            iVar7 = 0x22;\n          }\nLAB_0040b531:\n          closedir(__dirp);\n          goto joined_r0x0040b53f;\n        }\nLAB_0040b40f:\n        pvVar10 = memcpy((void *)((long)local_e8 - __n),__filename,__n);\n        local_e8 = (void *)((long)pvVar10 + -1);\n        local_120 = _Var2;\n        *(undefined *)((long)pvVar10 + -1) = 0x2f;\n        _Var15 = _Var5;\n      } while ((_Var3 != _Var2) || (_Var4 != _Var5));\n      iVar6 = closedir(__dirp);\n      if (iVar6 == 0) {\n        lVar13 = (long)local_110 + local_100;\n        goto LAB_0040b478;\n      }\n      goto LAB_0040b560;\n    }\n  }\n  piVar8 = __errno_location();\nLAB_0040b560:\n  iVar7 = *piVar8;\njoined_r0x0040b53f:\n  if (param_1 == (void *)0x0) {\n    free(local_110);\n  }\n  *piVar8 = iVar7;\n  return (void *)0x0;\n}\n\n",
            "funcName": "FUN_0040b160"
        },
        {
            "funcStartAddr": "0x40b630",
            "funcEndAddr": "0x40b705",
            "decompiledFuncCode": "\nvoid FUN_0040b630(long param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 *puVar5;\n  long lVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  \n  iVar1 = param_2[0xb];\n  iVar2 = *param_2;\n  iVar3 = param_2[0xc];\n  iVar8 = iVar1;\n  iVar9 = iVar2;\n  while (iVar3 < iVar9) {\n    while( true ) {\n      if (iVar3 <= iVar8) goto LAB_0040b6ac;\n      iVar10 = iVar9 - iVar3;\n      iVar7 = iVar3 - iVar8;\n      if (iVar10 <= iVar7) break;\n      lVar6 = (long)iVar8;\n      iVar9 = iVar9 - iVar7;\n      puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n      do {\n        uVar4 = *puVar5;\n        *puVar5 = puVar5[iVar9 - lVar6];\n        puVar5[iVar9 - lVar6] = uVar4;\n        puVar5 = puVar5 + 1;\n      } while ((undefined8 *)(param_1 + 8 + ((ulong)(iVar7 - 1) + lVar6) * 8) != puVar5);\n      if (iVar9 <= iVar3) goto LAB_0040b6ac;\n    }\n    lVar6 = (long)iVar8;\n    puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n    do {\n      uVar4 = *puVar5;\n      *puVar5 = puVar5[iVar3 - lVar6];\n      puVar5[iVar3 - lVar6] = uVar4;\n      puVar5 = puVar5 + 1;\n    } while (puVar5 != (undefined8 *)(param_1 + 8 + ((ulong)(iVar10 - 1) + lVar6) * 8));\n    iVar8 = iVar8 + iVar10;\n  }\nLAB_0040b6ac:\n  param_2[0xc] = iVar2;\n  param_2[0xb] = iVar1 + (iVar2 - iVar3);\n  return;\n}\n\n",
            "funcName": "FUN_0040b630"
        },
        {
            "funcStartAddr": "0x40b710",
            "funcEndAddr": "0x40bd0e",
            "decompiledFuncCode": "\nint FUN_0040b710(int param_1,undefined8 *param_2,char *param_3,char **param_4,undefined4 *param_5,\n                int param_6,int *param_7,int param_8,undefined8 param_9)\n\n{\n  char cVar1;\n  undefined8 uVar2;\n  bool bVar3;\n  bool bVar4;\n  int iVar5;\n  int iVar6;\n  size_t sVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  char **ppcVar10;\n  char *pcVar11;\n  char **ppcVar12;\n  char *pcVar13;\n  char *__s1;\n  FILE *__stream;\n  ulong uVar14;\n  size_t sVar15;\n  char *__s1_00;\n  long lVar16;\n  char *local_70;\n  uint local_44;\n  \n  pcVar13 = *(char **)(param_7 + 8);\n  cVar1 = *pcVar13;\n  pcVar11 = pcVar13;\n  if ((cVar1 == '=') || (cVar1 == '\\0')) {\n    sVar15 = 0;\n  }\n  else {\n    do {\n      pcVar11 = pcVar11 + 1;\n      if (*pcVar11 == '\\0') break;\n    } while (*pcVar11 != '=');\n    sVar15 = (long)pcVar11 - (long)pcVar13;\n  }\n  uVar14 = 0;\n  __s1 = *param_4;\n  ppcVar10 = param_4;\n  __s1_00 = __s1;\n  if (__s1 != (char *)0x0) {\n    while( true ) {\n      iVar5 = strncmp(__s1_00,pcVar13,sVar15);\n      if ((iVar5 == 0) && (sVar7 = strlen(__s1_00), sVar7 == sVar15)) goto LAB_0040b930;\n      ppcVar10 = ppcVar10 + 4;\n      __s1_00 = *ppcVar10;\n      iVar5 = (int)uVar14 + 1;\n      if (__s1_00 == (char *)0x0) break;\n      uVar14 = (ulong)iVar5;\n    }\n    lVar16 = 0;\n    ppcVar10 = (char **)0x0;\n    local_44 = 0xffffffff;\n    bVar3 = false;\n    bVar4 = false;\n    local_70 = (char *)0x0;\n    ppcVar12 = param_4;\n    do {\n      iVar6 = strncmp(__s1,pcVar13,sVar15);\n      if (iVar6 == 0) {\n        if (ppcVar10 == (char **)0x0) {\n          local_44 = (uint)lVar16;\n          ppcVar10 = ppcVar12;\n        }\n        else if (((((param_6 != 0) || (*(int *)(ppcVar10 + 1) != *(int *)(ppcVar12 + 1))) ||\n                  (ppcVar10[2] != ppcVar12[2])) ||\n                 (*(int *)(ppcVar10 + 3) != *(int *)(ppcVar12 + 3))) && (!bVar3)) {\n          if (param_8 == 0) {\n            bVar3 = true;\n            if (local_70 == (char *)0x0) goto LAB_0040b870;\n          }\n          else if (local_70 == (char *)0x0) {\n            local_70 = (char *)calloc((long)iVar5,1);\n            if (local_70 == (char *)0x0) {\n              bVar3 = true;\n              goto LAB_0040b870;\n            }\n            bVar4 = true;\n            local_70[(int)local_44] = '\\x01';\n          }\n          local_70[lVar16] = '\\x01';\n        }\n      }\nLAB_0040b870:\n      ppcVar12 = ppcVar12 + 4;\n      __s1 = *ppcVar12;\n      lVar16 = lVar16 + 1;\n    } while (__s1 != (char *)0x0);\n    if ((local_70 != (char *)0x0) || (bVar3)) {\n      if (param_8 != 0) {\n        if (bVar3) {\n          uVar2 = *param_2;\n          uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous\\n\",5);\n          __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n        else {\n          flockfile(stderr);\n          uVar2 = *(undefined8 *)(param_7 + 8);\n          uVar8 = *param_2;\n          uVar9 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous; possibilities:\",5);\n          __fprintf_chk(stderr,1,uVar9,uVar8,param_9,uVar2);\n          pcVar13 = local_70;\n          __stream = stderr;\n          do {\n            if (*pcVar13 != '\\0') {\n              __fprintf_chk(__stream,1,\" \\'%s%s\\'\",param_9,*param_4);\n              __stream = stderr;\n            }\n            pcVar13 = pcVar13 + 1;\n            param_4 = param_4 + 4;\n          } while (local_70 + uVar14 + 1 != pcVar13);\n          fputc(10,__stream);\n          funlockfile(stderr);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n      }\n      if (bVar4) {\n        free(local_70);\n      }\n      sVar15 = strlen(pcVar13);\n      *(char **)(param_7 + 8) = pcVar13 + sVar15;\n      *param_7 = *param_7 + 1;\n      param_7[2] = 0;\n      return 0x3f;\n    }\n    if (ppcVar10 != (char **)0x0) {\n      uVar14 = (ulong)local_44;\nLAB_0040b930:\n      iVar6 = *param_7;\n      *(undefined8 *)(param_7 + 8) = 0;\n      iVar5 = iVar6 + 1;\n      *param_7 = iVar5;\n      if (*pcVar11 == '\\0') {\n        if (*(int *)(ppcVar10 + 1) == 1) {\n          if (param_1 <= iVar5) {\n            if (param_8 != 0) {\n              pcVar13 = *ppcVar10;\n              uVar2 = *param_2;\n              uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' requires an argument\\n\",5);\n              __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n            }\n            param_7[2] = *(int *)(ppcVar10 + 3);\n            return (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          *param_7 = iVar6 + 2;\n          *(undefined8 *)(param_7 + 4) = param_2[iVar5];\n        }\n      }\n      else {\n        if (*(int *)(ppcVar10 + 1) == 0) {\n          if (param_8 != 0) {\n            pcVar13 = *ppcVar10;\n            uVar2 = *param_2;\n            uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' doesn\\'t allow an argument\\n\",5);\n            __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          }\n          param_7[2] = *(int *)(ppcVar10 + 3);\n          return 0x3f;\n        }\n        *(char **)(param_7 + 4) = pcVar11 + 1;\n      }\n      if (param_5 != (undefined4 *)0x0) {\n        *param_5 = (int)uVar14;\n      }\n      if ((int *)ppcVar10[2] == (int *)0x0) {\n        return *(int *)(ppcVar10 + 3);\n      }\n      *(int *)ppcVar10[2] = *(int *)(ppcVar10 + 3);\n      return 0;\n    }\n  }\n  if (((param_6 != 0) && (*(char *)(param_2[*param_7] + 1) != '-')) &&\n     (pcVar11 = strchr(param_3,(int)cVar1), pcVar11 != (char *)0x0)) {\n    return -1;\n  }\n  if (param_8 != 0) {\n    uVar2 = *param_2;\n    uVar8 = dcgettext(0,\"%s: unrecognized option \\'%s%s\\'\\n\",5);\n    __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n  }\n  *(undefined8 *)(param_7 + 8) = 0;\n  *param_7 = *param_7 + 1;\n  param_7[2] = 0;\n  return 0x3f;\n}\n\n",
            "funcName": "FUN_0040b710"
        },
        {
            "funcStartAddr": "0x40bd30",
            "funcEndAddr": "0x40c297",
            "decompiledFuncCode": "\nuint FUN_0040bd30(uint param_1,undefined8 *param_2,char *param_3,long param_4,undefined8 param_5,\n                 ulong param_6,uint *param_7,int param_8)\n\n{\n  undefined8 uVar1;\n  char cVar2;\n  uint uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  long lVar6;\n  uint uVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  uint uVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  undefined1 *puVar15;\n  \n  bVar14 = 0;\n  uVar3 = param_7[1];\n  if ((int)param_1 < 1) {\n    return 0xffffffff;\n  }\n  uVar11 = *param_7;\n  *(undefined8 *)(param_7 + 4) = 0;\n  if (uVar11 == 0) {\n    *param_7 = 1;\n    uVar11 = 1;\nLAB_0040bd7a:\n    param_7[0xc] = uVar11;\n    param_7[0xb] = uVar11;\n    *(undefined8 *)(param_7 + 8) = 0;\n    if (*param_3 == '-') {\n      param_7[10] = 2;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else if (*param_3 == '+') {\n      param_7[10] = 0;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else {\n      pbVar8 = (byte *)0x0;\n      if (param_8 == 0) {\n        pcVar4 = getenv(\"POSIXLY_CORRECT\");\n        param_6 = param_6 & 0xffffffff;\n        if (pcVar4 == (char *)0x0) {\n          param_7[10] = 1;\n          pbVar8 = *(byte **)(param_7 + 8);\n          goto LAB_0040be7d;\n        }\n        pbVar8 = *(byte **)(param_7 + 8);\n      }\n      param_7[10] = 0;\n    }\nLAB_0040be7d:\n    param_7[6] = 1;\n    cVar2 = *param_3;\nLAB_0040be88:\n    if (cVar2 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 == (byte *)0x0) goto LAB_0040bdf8;\nLAB_0040be9c:\n    if (*pbVar8 == 0) goto LAB_0040bdf8;\n  }\n  else {\n    if (param_7[6] == 0) goto LAB_0040bd7a;\n    cVar2 = *param_3;\n    pbVar8 = *(byte **)(param_7 + 8);\n    if ((cVar2 - 0x2bU & 0xfd) != 0) goto LAB_0040be88;\n    pcVar4 = param_3 + 1;\n    param_3 = param_3 + 1;\n    if (*pcVar4 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 != (byte *)0x0) goto LAB_0040be9c;\nLAB_0040bdf8:\n    uVar11 = *param_7;\n    if (param_7[0xc] != uVar11 && (int)uVar11 <= (int)param_7[0xc]) {\n      param_7[0xc] = uVar11;\n    }\n    if ((int)uVar11 < (int)param_7[0xb]) {\n      param_7[0xb] = uVar11;\n    }\n    if (param_7[10] == 1) {\n      uVar7 = param_7[0xc];\n      if (param_7[0xb] == uVar7) {\n        if (uVar11 != uVar7) {\n          param_7[0xb] = uVar11;\n          uVar7 = uVar11;\n        }\n      }\n      else if (uVar11 != uVar7) {\n        FUN_0040b630(param_2,param_7);\n        param_6 = param_6 & 0xffffffff;\n        uVar7 = *param_7;\n      }\n      uVar11 = uVar7;\n      uVar7 = uVar11;\n      if ((int)uVar11 < (int)param_1) {\n        lVar6 = (long)(int)uVar11;\n        do {\n          if ((*(char *)param_2[lVar6] == '-') && (((char *)param_2[lVar6])[1] != '\\0')) {\n            uVar11 = *param_7;\n            uVar7 = (uint)lVar6;\n            break;\n          }\n          uVar11 = (uint)lVar6 + 1;\n          lVar6 = lVar6 + 1;\n          *param_7 = uVar11;\n          uVar7 = uVar11;\n        } while ((int)lVar6 < (int)param_1);\n      }\n      param_7[0xc] = uVar7;\n    }\n    bVar12 = param_1 < uVar11;\n    bVar13 = param_1 == uVar11;\n    if (bVar13) {\n      param_1 = param_7[0xc];\n      uVar11 = param_7[0xb];\nLAB_0040bf66:\n      if (uVar11 != param_1) {\n        *param_7 = uVar11;\n      }\n      return 0xffffffff;\n    }\n    lVar6 = 3;\n    pbVar8 = (byte *)param_2[(int)uVar11];\n    pbVar9 = pbVar8;\n    pbVar10 = &DAT_00413460;\n    do {\n      if (lVar6 == 0) break;\n      lVar6 = lVar6 + -1;\n      bVar12 = *pbVar9 < *pbVar10;\n      bVar13 = *pbVar9 == *pbVar10;\n      pbVar9 = pbVar9 + (ulong)bVar14 * -2 + 1;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n    if ((!bVar12 && !bVar13) == bVar12) {\n      uVar11 = uVar11 + 1;\n      *param_7 = uVar11;\n      if (param_7[0xb] == param_7[0xc]) {\n        param_7[0xb] = uVar11;\n      }\n      else {\n        bVar12 = uVar11 != param_7[0xc];\n        uVar11 = param_7[0xb];\n        if (bVar12) {\n          FUN_0040b630(param_2,param_7);\n          uVar11 = param_7[0xb];\n        }\n      }\n      param_7[0xc] = param_1;\n      *param_7 = param_1;\n      goto LAB_0040bf66;\n    }\n    if ((*pbVar8 != 0x2d) || (bVar14 = pbVar8[1], bVar14 == 0)) {\n      if (param_7[10] == 0) {\n        return 0xffffffff;\n      }\n      *(byte **)(param_7 + 4) = pbVar8;\n      *param_7 = uVar11 + 1;\n      return 1;\n    }\n    if (param_4 != 0) {\n      if (bVar14 == 0x2d) {\n        *(byte **)(param_7 + 8) = pbVar8 + 2;\n        puVar15 = &DAT_00413460;\n        goto LAB_0040c0c5;\n      }\n      if ((int)param_6 != 0) {\n        if (pbVar8[2] == 0) {\n          pcVar4 = strchr(param_3,(int)(char)bVar14);\n          param_6 = param_6 & 0xffffffff;\n          if (pcVar4 != (char *)0x0) goto LAB_0040c070;\n        }\n        *(byte **)(param_7 + 8) = pbVar8 + 1;\n        uVar11 = FUN_0040b710(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,\n                              &DAT_00413461);\n        if (uVar11 != 0xffffffff) {\n          return uVar11;\n        }\n        pbVar8 = (byte *)param_2[(int)*param_7];\n      }\n    }\nLAB_0040c070:\n    pbVar8 = pbVar8 + 1;\n  }\n  pbVar9 = pbVar8 + 1;\n  *(byte **)(param_7 + 8) = pbVar9;\n  bVar14 = *pbVar8;\n  uVar11 = (uint)(char)bVar14;\n  pcVar4 = strchr(param_3,uVar11);\n  if (pbVar8[1] == 0) {\n    *param_7 = *param_7 + 1;\n  }\n  if (((byte)(bVar14 - 0x3a) < 2) || (pcVar4 == (char *)0x0)) {\n    if (uVar3 != 0) {\n      uVar1 = *param_2;\n      uVar5 = dcgettext(0,\"%s: invalid option -- \\'%c\\'\\n\",5);\n      __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n    }\n    param_7[2] = uVar11;\n    return 0x3f;\n  }\n  if (((*pcVar4 != 'W') || (param_4 == 0)) || (pcVar4[1] != ';')) {\n    if (pcVar4[1] == ':') {\n      if (pcVar4[2] == ':') {\n        if (pbVar8[1] == 0) {\n          *(undefined8 *)(param_7 + 4) = 0;\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = *param_7 + 1;\n        }\n      }\n      else {\n        uVar7 = *param_7;\n        if (pbVar8[1] == 0) {\n          if (param_1 == uVar7) {\n            if (uVar3 != 0) {\n              uVar1 = *param_2;\n              uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n              __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n            }\n            param_7[2] = uVar11;\n            uVar11 = (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          else {\n            uVar1 = param_2[(int)uVar7];\n            *param_7 = uVar7 + 1;\n            *(undefined8 *)(param_7 + 4) = uVar1;\n          }\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = uVar7 + 1;\n        }\n      }\n      *(undefined8 *)(param_7 + 8) = 0;\n      return uVar11;\n    }\n    return uVar11;\n  }\n  if (pbVar8[1] == 0) {\n    if (*param_7 == param_1) {\n      if (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n        __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n      }\n      param_7[2] = uVar11;\n      return (uint)(*param_3 != ':') * 5 + 0x3a;\n    }\n    pbVar9 = (byte *)param_2[(int)*param_7];\n  }\n  *(byte **)(param_7 + 8) = pbVar9;\n  param_6 = 0;\n  *(undefined8 *)(param_7 + 4) = 0;\n  puVar15 = &DAT_00413a15;\nLAB_0040c0c5:\n  uVar3 = FUN_0040b710(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,puVar15);\n  return uVar3;\n}\n\n",
            "funcName": "FUN_0040bd30"
        },
        {
            "funcStartAddr": "0x40c300",
            "funcEndAddr": "0x40c356",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0040c300(void)\n\n{\n  DAT_00617860 = DAT_006175e0;\n  _DAT_00617864 = DAT_006175d8._4_4_;\n  FUN_0040bd30();\n  DAT_006175e0 = DAT_00617860;\n  DAT_006178a8 = DAT_00617870;\n  DAT_006175d8._0_4_ = DAT_00617868;\n  return;\n}\n\n",
            "funcName": "FUN_0040c300"
        },
        {
            "funcStartAddr": "0x40c360",
            "funcEndAddr": "0x40c378",
            "decompiledFuncCode": "\nvoid FUN_0040c360(void)\n\n{\n  FUN_0040c300();\n  return;\n}\n\n",
            "funcName": "FUN_0040c360"
        },
        {
            "funcStartAddr": "0x40c380",
            "funcEndAddr": "0x40c393",
            "decompiledFuncCode": "\nvoid FUN_0040c380(void)\n\n{\n  FUN_0040c300();\n  return;\n}\n\n",
            "funcName": "FUN_0040c380"
        },
        {
            "funcStartAddr": "0x40c3a0",
            "funcEndAddr": "0x40c3b5",
            "decompiledFuncCode": "\nvoid FUN_0040c3a0(void)\n\n{\n  FUN_0040bd30();\n  return;\n}\n\n",
            "funcName": "FUN_0040c3a0"
        },
        {
            "funcStartAddr": "0x40c3c0",
            "funcEndAddr": "0x40c3d6",
            "decompiledFuncCode": "\nvoid FUN_0040c3c0(void)\n\n{\n  FUN_0040c300();\n  return;\n}\n\n",
            "funcName": "FUN_0040c3c0"
        },
        {
            "funcStartAddr": "0x40c3e0",
            "funcEndAddr": "0x40c3f8",
            "decompiledFuncCode": "\nvoid FUN_0040c3e0(void)\n\n{\n  FUN_0040bd30();\n  return;\n}\n\n",
            "funcName": "FUN_0040c3e0"
        },
        {
            "funcStartAddr": "0x40c400",
            "funcEndAddr": "0x40c46f",
            "decompiledFuncCode": "\nsize_t FUN_0040c400(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  wchar_t local_1c;\n  \n  if (param_2 == (byte *)0x0) {\n    param_3 = 1;\n    param_2 = (byte *)0x413a14;\n  }\n  else {\n    if (param_3 == 0) {\n      return 0xfffffffffffffffe;\n    }\n    if (param_1 != (wchar_t *)0x0) goto LAB_0040c424;\n  }\n  param_1 = &local_1c;\nLAB_0040c424:\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (cVar1 = FUN_0040dbe0(0), cVar1 == '\\0')) {\n    sVar2 = 1;\n    *param_1 = (uint)*param_2;\n  }\n  return sVar2;\n}\n\n",
            "funcName": "FUN_0040c400"
        },
        {
            "funcStartAddr": "0x40c480",
            "funcEndAddr": "0x40c563",
            "decompiledFuncCode": "\nulong * FUN_0040c480(ulong *param_1,char param_2,ulong param_3)\n\n{\n  char cVar1;\n  ulong uVar2;\n  ulong *puVar3;\n  ulong uVar4;\n  \n  if (param_3 == 0) {\n    return (ulong *)0x0;\n  }\n  if (((ulong)param_1 & 7) == 0) {\nLAB_0040c4c0:\n    uVar4 = (long)(int)(uint)CONCAT11(param_2,param_2) |\n            (long)(int)(uint)CONCAT11(param_2,param_2) << 0x10;\n    uVar4 = uVar4 | uVar4 << 0x20;\n    if (7 < param_3) {\n      uVar2 = *param_1 ^ uVar4;\n      for (uVar2 = ~uVar2 & uVar2 + 0xfefefefefefefeff; (uVar2 & 0x8080808080808080) == 0;\n          uVar2 = ~uVar2 & uVar2 + 0xfefefefefefefeff) {\n        param_3 = param_3 - 8;\n        param_1 = param_1 + 1;\n        if (param_3 < 8) {\n          if (param_3 == 0) {\n            return (ulong *)0x0;\n          }\n          break;\n        }\n        uVar2 = *param_1 ^ uVar4;\n      }\n    }\n    if (param_2 != *(char *)param_1) {\n      puVar3 = (ulong *)((long)param_1 + param_3);\n      do {\n        param_1 = (ulong *)((long)param_1 + 1);\n        if (param_1 == puVar3) {\n          return (ulong *)0x0;\n        }\n      } while (*(char *)param_1 != param_2);\n    }\n  }\n  else {\n    cVar1 = *(char *)param_1;\n    while (param_2 != cVar1) {\n      param_1 = (ulong *)((long)param_1 + 1);\n      param_3 = param_3 - 1;\n      if (param_3 == 0) {\n        return (ulong *)0x0;\n      }\n      if (((ulong)param_1 & 7) == 0) goto LAB_0040c4c0;\n      cVar1 = *(char *)param_1;\n    }\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_0040c480"
        },
        {
            "funcStartAddr": "0x40c590",
            "funcEndAddr": "0x40c60f",
            "decompiledFuncCode": "\nvoid FUN_0040c590(char *param_1)\n\n{\n  ulong uVar1;\n  size_t sVar2;\n  char *pcVar3;\n  ulong uVar4;\n  \n  sVar2 = strlen(param_1);\n  uVar4 = 0;\n  pcVar3 = param_1;\n  do {\n    uVar1 = uVar4 + 1;\n    if ((((param_1[uVar4] == '\\\\') && (uVar4 + 4 < sVar2 + 1)) &&\n        ((byte)(param_1[uVar1] - 0x30U) < 4)) &&\n       (((byte)(param_1[uVar4 + 2] - 0x30U) < 8 && ((byte)(param_1[uVar4 + 3] - 0x30U) < 8)))) {\n      *pcVar3 = param_1[uVar4 + 3] + 'P' + (param_1[uVar4 + 2] + param_1[uVar1] * '\\b') * '\\b';\n      uVar4 = uVar4 + 4;\n    }\n    else {\n      *pcVar3 = param_1[uVar4];\n      uVar4 = uVar1;\n      if (sVar2 + 1 <= uVar1) {\n        return;\n      }\n    }\n    pcVar3 = pcVar3 + 1;\n  } while( true );\n}\n\n",
            "funcName": "FUN_0040c590"
        },
        {
            "funcStartAddr": "0x40c620",
            "funcEndAddr": "0x40c65f",
            "decompiledFuncCode": "\nvoid FUN_0040c620(void **param_1)\n\n{\n  free(*param_1);\n  free(param_1[1]);\n  free(param_1[2]);\n  if ((*(byte *)(param_1 + 5) & 4) == 0) {\n    free(param_1);\n    return;\n  }\n  free(param_1[3]);\n  free(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_0040c620"
        },
        {
            "funcStartAddr": "0x40c670",
            "funcEndAddr": "0x40ce02",
            "decompiledFuncCode": "\nbyte * FUN_0040c670(void)\n\n{\n  undefined8 uVar1;\n  uint uVar2;\n  int iVar3;\n  FILE *__stream;\n  __ssize_t _Var4;\n  char *pcVar5;\n  byte **ppbVar6;\n  byte *pbVar7;\n  byte *pbVar8;\n  undefined8 *puVar9;\n  long lVar10;\n  byte **ppbVar11;\n  int *piVar12;\n  long lVar13;\n  long lVar14;\n  byte *pbVar15;\n  byte *pbVar16;\n  byte **ppbVar17;\n  bool bVar18;\n  bool bVar19;\n  bool bVar20;\n  bool bVar21;\n  byte bVar22;\n  undefined local_79;\n  uint local_78;\n  uint local_74;\n  int local_70;\n  int local_6c;\n  int local_68;\n  int local_64;\n  int local_60;\n  int local_5c;\n  int local_58;\n  int local_54;\n  byte *local_50;\n  char *local_48;\n  size_t local_40 [2];\n  \n  bVar22 = 0;\n  __stream = fopen(\"/proc/self/mountinfo\",\"r\");\n  if (__stream == (FILE *)0x0) {\n    lVar13 = setmntent(\"/etc/mtab\",\"r\");\n    if (lVar13 == 0) {\n      return (byte *)0;\n    }\n    ppbVar17 = &local_50;\n    puVar9 = (undefined8 *)getmntent(lVar13);\n    while (puVar9 != (undefined8 *)0x0) {\n      lVar10 = hasmntopt(puVar9,&DAT_00413abe);\n      ppbVar11 = (byte **)FUN_0040a560(0x38);\n      pbVar7 = (byte *)FUN_0040a790(*puVar9);\n      uVar1 = puVar9[1];\n      *ppbVar11 = pbVar7;\n      pbVar7 = (byte *)FUN_0040a790(uVar1);\n      ppbVar11[2] = (byte *)0x0;\n      uVar1 = puVar9[2];\n      ppbVar11[1] = pbVar7;\n      pbVar7 = (byte *)FUN_0040a790(uVar1);\n      lVar14 = 7;\n      ppbVar6 = ppbVar11 + 5;\n      bVar18 = false;\n      *(byte *)ppbVar6 = *(byte *)ppbVar6 | 4;\n      bVar20 = *(byte *)ppbVar6 == 0;\n      ppbVar11[3] = pbVar7;\n      bVar21 = true;\n      pbVar15 = pbVar7;\n      pbVar16 = (byte *)\"autofs\";\n      do {\n        if (lVar14 == 0) break;\n        lVar14 = lVar14 + -1;\n        bVar18 = *pbVar15 < *pbVar16;\n        bVar20 = *pbVar15 == *pbVar16;\n        pbVar15 = pbVar15 + (ulong)bVar22 * -2 + 1;\n        pbVar16 = pbVar16 + (ulong)bVar22 * -2 + 1;\n      } while (bVar20);\n      bVar19 = false;\n      bVar18 = (!bVar18 && !bVar20) == bVar18;\n      if (!bVar18) {\n        lVar14 = 5;\n        pbVar15 = pbVar7;\n        pbVar16 = &DAT_00413a4f;\n        do {\n          if (lVar14 == 0) break;\n          lVar14 = lVar14 + -1;\n          bVar19 = *pbVar15 < *pbVar16;\n          bVar18 = *pbVar15 == *pbVar16;\n          pbVar15 = pbVar15 + (ulong)bVar22 * -2 + 1;\n          pbVar16 = pbVar16 + (ulong)bVar22 * -2 + 1;\n        } while (bVar18);\n        bVar20 = false;\n        bVar18 = (!bVar19 && !bVar18) == bVar19;\n        if (!bVar18) {\n          lVar14 = 6;\n          pbVar15 = pbVar7;\n          pbVar16 = (byte *)\"subfs\";\n          do {\n            if (lVar14 == 0) break;\n            lVar14 = lVar14 + -1;\n            bVar20 = *pbVar15 < *pbVar16;\n            bVar18 = *pbVar15 == *pbVar16;\n            pbVar15 = pbVar15 + (ulong)bVar22 * -2 + 1;\n            pbVar16 = pbVar16 + (ulong)bVar22 * -2 + 1;\n          } while (bVar18);\n          bVar19 = false;\n          bVar18 = (!bVar20 && !bVar18) == bVar20;\n          if (!bVar18) {\n            lVar14 = 8;\n            pbVar15 = pbVar7;\n            pbVar16 = (byte *)\"debugfs\";\n            do {\n              if (lVar14 == 0) break;\n              lVar14 = lVar14 + -1;\n              bVar19 = *pbVar15 < *pbVar16;\n              bVar18 = *pbVar15 == *pbVar16;\n              pbVar15 = pbVar15 + (ulong)bVar22 * -2 + 1;\n              pbVar16 = pbVar16 + (ulong)bVar22 * -2 + 1;\n            } while (bVar18);\n            bVar20 = false;\n            bVar18 = (!bVar19 && !bVar18) == bVar19;\n            if (!bVar18) {\n              lVar14 = 7;\n              pbVar15 = pbVar7;\n              pbVar16 = (byte *)\"devpts\";\n              do {\n                if (lVar14 == 0) break;\n                lVar14 = lVar14 + -1;\n                bVar20 = *pbVar15 < *pbVar16;\n                bVar18 = *pbVar15 == *pbVar16;\n                pbVar15 = pbVar15 + (ulong)bVar22 * -2 + 1;\n                pbVar16 = pbVar16 + (ulong)bVar22 * -2 + 1;\n              } while (bVar18);\n              bVar19 = false;\n              bVar18 = (!bVar20 && !bVar18) == bVar20;\n              if (!bVar18) {\n                lVar14 = 8;\n                pbVar15 = pbVar7;\n                pbVar16 = (byte *)\"fusectl\";\n                do {\n                  if (lVar14 == 0) break;\n                  lVar14 = lVar14 + -1;\n                  bVar19 = *pbVar15 < *pbVar16;\n                  bVar18 = *pbVar15 == *pbVar16;\n                  pbVar15 = pbVar15 + (ulong)bVar22 * -2 + 1;\n                  pbVar16 = pbVar16 + (ulong)bVar22 * -2 + 1;\n                } while (bVar18);\n                bVar20 = false;\n                bVar18 = (!bVar19 && !bVar18) == bVar19;\n                if (!bVar18) {\n                  lVar14 = 7;\n                  pbVar15 = pbVar7;\n                  pbVar16 = (byte *)\"mqueue\";\n                  do {\n                    if (lVar14 == 0) break;\n                    lVar14 = lVar14 + -1;\n                    bVar20 = *pbVar15 < *pbVar16;\n                    bVar18 = *pbVar15 == *pbVar16;\n                    pbVar15 = pbVar15 + (ulong)bVar22 * -2 + 1;\n                    pbVar16 = pbVar16 + (ulong)bVar22 * -2 + 1;\n                  } while (bVar18);\n                  bVar19 = false;\n                  bVar18 = (!bVar20 && !bVar18) == bVar20;\n                  if (!bVar18) {\n                    lVar14 = 0xb;\n                    pbVar15 = pbVar7;\n                    pbVar16 = (byte *)\"rpc_pipefs\";\n                    do {\n                      if (lVar14 == 0) break;\n                      lVar14 = lVar14 + -1;\n                      bVar19 = *pbVar15 < *pbVar16;\n                      bVar18 = *pbVar15 == *pbVar16;\n                      pbVar15 = pbVar15 + (ulong)bVar22 * -2 + 1;\n                      pbVar16 = pbVar16 + (ulong)bVar22 * -2 + 1;\n                    } while (bVar18);\n                    bVar20 = false;\n                    bVar18 = (!bVar19 && !bVar18) == bVar19;\n                    if (!bVar18) {\n                      lVar14 = 6;\n                      pbVar15 = pbVar7;\n                      pbVar16 = (byte *)\"sysfs\";\n                      do {\n                        if (lVar14 == 0) break;\n                        lVar14 = lVar14 + -1;\n                        bVar20 = *pbVar15 < *pbVar16;\n                        bVar18 = *pbVar15 == *pbVar16;\n                        pbVar15 = pbVar15 + (ulong)bVar22 * -2 + 1;\n                        pbVar16 = pbVar16 + (ulong)bVar22 * -2 + 1;\n                      } while (bVar18);\n                      bVar19 = false;\n                      bVar18 = (!bVar20 && !bVar18) == bVar20;\n                      if (!bVar18) {\n                        lVar14 = 6;\n                        pbVar15 = pbVar7;\n                        pbVar16 = (byte *)\"devfs\";\n                        do {\n                          if (lVar14 == 0) break;\n                          lVar14 = lVar14 + -1;\n                          bVar19 = *pbVar15 < *pbVar16;\n                          bVar18 = *pbVar15 == *pbVar16;\n                          pbVar15 = pbVar15 + (ulong)bVar22 * -2 + 1;\n                          pbVar16 = pbVar16 + (ulong)bVar22 * -2 + 1;\n                        } while (bVar18);\n                        bVar20 = false;\n                        bVar18 = (!bVar19 && !bVar18) == bVar19;\n                        if (!bVar18) {\n                          lVar14 = 7;\n                          pbVar15 = pbVar7;\n                          pbVar16 = (byte *)\"kernfs\";\n                          do {\n                            if (lVar14 == 0) break;\n                            lVar14 = lVar14 + -1;\n                            bVar20 = *pbVar15 < *pbVar16;\n                            bVar18 = *pbVar15 == *pbVar16;\n                            pbVar15 = pbVar15 + (ulong)bVar22 * -2 + 1;\n                            pbVar16 = pbVar16 + (ulong)bVar22 * -2 + 1;\n                          } while (bVar18);\n                          if ((!bVar20 && !bVar18) != bVar20) {\n                            iVar3 = strcmp((char *)pbVar7,\"ignore\");\n                            bVar21 = true;\n                            if (iVar3 != 0) {\n                              iVar3 = strcmp((char *)pbVar7,\"none\");\n                              bVar21 = lVar10 == 0 && iVar3 == 0;\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      pbVar15 = *ppbVar11;\n      *(byte *)(ppbVar11 + 5) = *(byte *)(ppbVar11 + 5) & 0xfe | bVar21;\n      pcVar5 = strchr((char *)pbVar15,0x3a);\n      bVar21 = true;\n      if (pcVar5 != (char *)0x0) goto LAB_0040ccba;\n      bVar18 = *pbVar15 < 0x2f;\n      bVar20 = *pbVar15 == 0x2f;\n      if (bVar20) {\n        bVar18 = pbVar15[1] < 0x2f;\n        bVar20 = pbVar15[1] == 0x2f;\n        if (!bVar20) goto LAB_0040cd52;\n        lVar10 = 6;\n        pbVar16 = pbVar7;\n        pbVar8 = (byte *)\"smbfs\";\n        do {\n          if (lVar10 == 0) break;\n          lVar10 = lVar10 + -1;\n          bVar18 = *pbVar16 < *pbVar8;\n          bVar20 = *pbVar16 == *pbVar8;\n          pbVar16 = pbVar16 + (ulong)bVar22 * -2 + 1;\n          pbVar8 = pbVar8 + (ulong)bVar22 * -2 + 1;\n        } while (bVar20);\n        bVar19 = false;\n        bVar20 = (!bVar18 && !bVar20) == bVar18;\n        if (!bVar20) {\n          lVar10 = 5;\n          pbVar16 = &DAT_00413aa8;\n          do {\n            if (lVar10 == 0) break;\n            lVar10 = lVar10 + -1;\n            bVar19 = *pbVar7 < *pbVar16;\n            bVar20 = *pbVar7 == *pbVar16;\n            pbVar7 = pbVar7 + (ulong)bVar22 * -2 + 1;\n            pbVar16 = pbVar16 + (ulong)bVar22 * -2 + 1;\n          } while (bVar20);\n          bVar18 = false;\n          bVar20 = (!bVar19 && !bVar20) == bVar19;\n          if (!bVar20) goto LAB_0040cd52;\n        }\n      }\n      else {\nLAB_0040cd52:\n        lVar10 = 7;\n        pbVar7 = (byte *)\"-hosts\";\n        do {\n          if (lVar10 == 0) break;\n          lVar10 = lVar10 + -1;\n          bVar18 = *pbVar7 < *pbVar15;\n          bVar20 = *pbVar7 == *pbVar15;\n          pbVar7 = pbVar7 + (ulong)bVar22 * -2 + 1;\n          pbVar15 = pbVar15 + (ulong)bVar22 * -2 + 1;\n        } while (bVar20);\n        bVar21 = (!bVar18 && !bVar20) == bVar18;\n      }\nLAB_0040ccba:\n      ppbVar11[4] = (byte *)0xffffffffffffffff;\n      *(byte *)(ppbVar11 + 5) = *(byte *)(ppbVar11 + 5) & 0xfd | bVar21 * '\\x02';\n      *ppbVar17 = (byte *)ppbVar11;\n      ppbVar17 = ppbVar11 + 6;\n      puVar9 = (undefined8 *)getmntent(lVar13);\n    }\n    iVar3 = endmntent(lVar13);\n    if (iVar3 != 0) {\nLAB_0040c91d:\n      *ppbVar17 = (byte *)0x0;\n      return local_50;\n    }\n  }\n  else {\n    local_48 = (char *)0x0;\n    ppbVar17 = &local_50;\n    local_40[0] = 0;\n    while (_Var4 = __getdelim(&local_48,local_40,10,__stream), _Var4 != -1) {\n      uVar2 = sscanf(local_48,\"%*u %*u %u:%u %n%*s%n %n%*s%n%c\",&local_78,&local_74,&local_58,\n                     &local_54,&local_70,&local_6c,&local_79);\n      if ((((uVar2 & 0xfffffffb) == 3) &&\n          (pcVar5 = (char *)FUN_0040d2b0(local_48 + local_6c,&DAT_00413a2e), pcVar5 != (char *)0x0))\n         && (uVar2 = sscanf(pcVar5,\" - %n%*s%n %n%*s%n %c\",&local_68,&local_64,&local_60,&local_5c,\n                            &local_79), (uVar2 & 0xfffffffb) == 1)) {\n        bVar21 = true;\n        local_48[local_54] = '\\0';\n        local_48[local_6c] = '\\0';\n        pcVar5[local_64] = '\\0';\n        pcVar5[local_5c] = '\\0';\n        FUN_0040c590(pcVar5 + local_60);\n        FUN_0040c590(local_48 + local_70);\n        FUN_0040c590(local_48 + local_58);\n        ppbVar6 = (byte **)FUN_0040a560(0x38);\n        pbVar7 = (byte *)FUN_0040a790(pcVar5 + local_60);\n        *ppbVar6 = pbVar7;\n        pbVar7 = (byte *)FUN_0040a790(local_48 + local_70);\n        ppbVar6[1] = pbVar7;\n        pbVar7 = (byte *)FUN_0040a790(local_48 + local_58);\n        ppbVar6[2] = pbVar7;\n        pbVar7 = (byte *)FUN_0040a790(pcVar5 + local_68);\n        ppbVar6[3] = pbVar7;\n        *(byte *)(ppbVar6 + 5) = *(byte *)(ppbVar6 + 5) | 4;\n        lVar13 = 7;\n        bVar18 = false;\n        pbVar8 = (byte *)(((ulong)local_74 & 0xffffff00) << 0xc |\n                         ((ulong)local_78 & 0xfffff000) << 0x20 | (ulong)((local_78 & 0xfff) << 8) |\n                         (ulong)(byte)local_74);\n        bVar20 = pbVar8 == (byte *)0x0;\n        pbVar15 = pbVar7;\n        pbVar16 = (byte *)\"autofs\";\n        do {\n          if (lVar13 == 0) break;\n          lVar13 = lVar13 + -1;\n          bVar18 = *pbVar15 < *pbVar16;\n          bVar20 = *pbVar15 == *pbVar16;\n          pbVar15 = pbVar15 + (ulong)bVar22 * -2 + 1;\n          pbVar16 = pbVar16 + (ulong)bVar22 * -2 + 1;\n        } while (bVar20);\n        ppbVar6[4] = pbVar8;\n        bVar19 = false;\n        bVar18 = (!bVar18 && !bVar20) == bVar18;\n        if (!bVar18) {\n          lVar13 = 5;\n          pbVar15 = pbVar7;\n          pbVar16 = &DAT_00413a4f;\n          do {\n            if (lVar13 == 0) break;\n            lVar13 = lVar13 + -1;\n            bVar19 = *pbVar15 < *pbVar16;\n            bVar18 = *pbVar15 == *pbVar16;\n            pbVar15 = pbVar15 + (ulong)bVar22 * -2 + 1;\n            pbVar16 = pbVar16 + (ulong)bVar22 * -2 + 1;\n          } while (bVar18);\n          bVar20 = false;\n          bVar18 = (!bVar19 && !bVar18) == bVar19;\n          if (!bVar18) {\n            lVar13 = 6;\n            pbVar15 = pbVar7;\n            pbVar16 = (byte *)\"subfs\";\n            do {\n              if (lVar13 == 0) break;\n              lVar13 = lVar13 + -1;\n              bVar20 = *pbVar15 < *pbVar16;\n              bVar18 = *pbVar15 == *pbVar16;\n              pbVar15 = pbVar15 + (ulong)bVar22 * -2 + 1;\n              pbVar16 = pbVar16 + (ulong)bVar22 * -2 + 1;\n            } while (bVar18);\n            bVar19 = false;\n            bVar18 = (!bVar20 && !bVar18) == bVar20;\n            if (!bVar18) {\n              lVar13 = 8;\n              pbVar15 = pbVar7;\n              pbVar16 = (byte *)\"debugfs\";\n              do {\n                if (lVar13 == 0) break;\n                lVar13 = lVar13 + -1;\n                bVar19 = *pbVar15 < *pbVar16;\n                bVar18 = *pbVar15 == *pbVar16;\n                pbVar15 = pbVar15 + (ulong)bVar22 * -2 + 1;\n                pbVar16 = pbVar16 + (ulong)bVar22 * -2 + 1;\n              } while (bVar18);\n              bVar20 = false;\n              bVar18 = (!bVar19 && !bVar18) == bVar19;\n              if (!bVar18) {\n                lVar13 = 7;\n                pbVar15 = pbVar7;\n                pbVar16 = (byte *)\"devpts\";\n                do {\n                  if (lVar13 == 0) break;\n                  lVar13 = lVar13 + -1;\n                  bVar20 = *pbVar15 < *pbVar16;\n                  bVar18 = *pbVar15 == *pbVar16;\n                  pbVar15 = pbVar15 + (ulong)bVar22 * -2 + 1;\n                  pbVar16 = pbVar16 + (ulong)bVar22 * -2 + 1;\n                } while (bVar18);\n                bVar19 = false;\n                bVar18 = (!bVar20 && !bVar18) == bVar20;\n                if (!bVar18) {\n                  lVar13 = 8;\n                  pbVar15 = pbVar7;\n                  pbVar16 = (byte *)\"fusectl\";\n                  do {\n                    if (lVar13 == 0) break;\n                    lVar13 = lVar13 + -1;\n                    bVar19 = *pbVar15 < *pbVar16;\n                    bVar18 = *pbVar15 == *pbVar16;\n                    pbVar15 = pbVar15 + (ulong)bVar22 * -2 + 1;\n                    pbVar16 = pbVar16 + (ulong)bVar22 * -2 + 1;\n                  } while (bVar18);\n                  bVar20 = false;\n                  bVar18 = (!bVar19 && !bVar18) == bVar19;\n                  if (!bVar18) {\n                    lVar13 = 7;\n                    pbVar15 = pbVar7;\n                    pbVar16 = (byte *)\"mqueue\";\n                    do {\n                      if (lVar13 == 0) break;\n                      lVar13 = lVar13 + -1;\n                      bVar20 = *pbVar15 < *pbVar16;\n                      bVar18 = *pbVar15 == *pbVar16;\n                      pbVar15 = pbVar15 + (ulong)bVar22 * -2 + 1;\n                      pbVar16 = pbVar16 + (ulong)bVar22 * -2 + 1;\n                    } while (bVar18);\n                    bVar19 = false;\n                    bVar18 = (!bVar20 && !bVar18) == bVar20;\n                    if (!bVar18) {\n                      lVar13 = 0xb;\n                      pbVar15 = pbVar7;\n                      pbVar16 = (byte *)\"rpc_pipefs\";\n                      do {\n                        if (lVar13 == 0) break;\n                        lVar13 = lVar13 + -1;\n                        bVar19 = *pbVar15 < *pbVar16;\n                        bVar18 = *pbVar15 == *pbVar16;\n                        pbVar15 = pbVar15 + (ulong)bVar22 * -2 + 1;\n                        pbVar16 = pbVar16 + (ulong)bVar22 * -2 + 1;\n                      } while (bVar18);\n                      bVar20 = false;\n                      bVar18 = (!bVar19 && !bVar18) == bVar19;\n                      if (!bVar18) {\n                        lVar13 = 6;\n                        pbVar15 = pbVar7;\n                        pbVar16 = (byte *)\"sysfs\";\n                        do {\n                          if (lVar13 == 0) break;\n                          lVar13 = lVar13 + -1;\n                          bVar20 = *pbVar15 < *pbVar16;\n                          bVar18 = *pbVar15 == *pbVar16;\n                          pbVar15 = pbVar15 + (ulong)bVar22 * -2 + 1;\n                          pbVar16 = pbVar16 + (ulong)bVar22 * -2 + 1;\n                        } while (bVar18);\n                        bVar19 = false;\n                        bVar18 = (!bVar20 && !bVar18) == bVar20;\n                        if (!bVar18) {\n                          lVar13 = 6;\n                          pbVar15 = pbVar7;\n                          pbVar16 = (byte *)\"devfs\";\n                          do {\n                            if (lVar13 == 0) break;\n                            lVar13 = lVar13 + -1;\n                            bVar19 = *pbVar15 < *pbVar16;\n                            bVar18 = *pbVar15 == *pbVar16;\n                            pbVar15 = pbVar15 + (ulong)bVar22 * -2 + 1;\n                            pbVar16 = pbVar16 + (ulong)bVar22 * -2 + 1;\n                          } while (bVar18);\n                          bVar20 = false;\n                          bVar18 = (!bVar19 && !bVar18) == bVar19;\n                          if (!bVar18) {\n                            lVar13 = 7;\n                            pbVar15 = pbVar7;\n                            pbVar16 = (byte *)\"kernfs\";\n                            do {\n                              if (lVar13 == 0) break;\n                              lVar13 = lVar13 + -1;\n                              bVar20 = *pbVar15 < *pbVar16;\n                              bVar18 = *pbVar15 == *pbVar16;\n                              pbVar15 = pbVar15 + (ulong)bVar22 * -2 + 1;\n                              pbVar16 = pbVar16 + (ulong)bVar22 * -2 + 1;\n                            } while (bVar18);\n                            if (((!bVar20 && !bVar18) != bVar20) &&\n                               (iVar3 = strcmp((char *)pbVar7,\"ignore\"), iVar3 != 0)) {\n                              iVar3 = strcmp((char *)pbVar7,\"none\");\n                              bVar21 = iVar3 == 0;\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        pbVar15 = *ppbVar6;\n        *(byte *)(ppbVar6 + 5) = *(byte *)(ppbVar6 + 5) & 0xfe | bVar21;\n        pcVar5 = strchr((char *)pbVar15,0x3a);\n        bVar21 = true;\n        if (pcVar5 != (char *)0x0) goto LAB_0040c8d6;\n        bVar18 = *pbVar15 < 0x2f;\n        bVar20 = *pbVar15 == 0x2f;\n        if (bVar20) {\n          bVar18 = pbVar15[1] < 0x2f;\n          bVar20 = pbVar15[1] == 0x2f;\n          if (!bVar20) goto LAB_0040ca7b;\n          lVar13 = 6;\n          pbVar16 = pbVar7;\n          pbVar8 = (byte *)\"smbfs\";\n          do {\n            if (lVar13 == 0) break;\n            lVar13 = lVar13 + -1;\n            bVar18 = *pbVar16 < *pbVar8;\n            bVar20 = *pbVar16 == *pbVar8;\n            pbVar16 = pbVar16 + (ulong)bVar22 * -2 + 1;\n            pbVar8 = pbVar8 + (ulong)bVar22 * -2 + 1;\n          } while (bVar20);\n          bVar19 = false;\n          bVar20 = (!bVar18 && !bVar20) == bVar18;\n          if (!bVar20) {\n            lVar13 = 5;\n            pbVar16 = &DAT_00413aa8;\n            do {\n              if (lVar13 == 0) break;\n              lVar13 = lVar13 + -1;\n              bVar19 = *pbVar7 < *pbVar16;\n              bVar20 = *pbVar7 == *pbVar16;\n              pbVar7 = pbVar7 + (ulong)bVar22 * -2 + 1;\n              pbVar16 = pbVar16 + (ulong)bVar22 * -2 + 1;\n            } while (bVar20);\n            bVar18 = false;\n            bVar20 = (!bVar19 && !bVar20) == bVar19;\n            if (!bVar20) goto LAB_0040ca7b;\n          }\n        }\n        else {\nLAB_0040ca7b:\n          lVar13 = 7;\n          pbVar7 = (byte *)\"-hosts\";\n          do {\n            if (lVar13 == 0) break;\n            lVar13 = lVar13 + -1;\n            bVar18 = *pbVar7 < *pbVar15;\n            bVar20 = *pbVar7 == *pbVar15;\n            pbVar7 = pbVar7 + (ulong)bVar22 * -2 + 1;\n            pbVar15 = pbVar15 + (ulong)bVar22 * -2 + 1;\n          } while (bVar20);\n          bVar21 = (!bVar18 && !bVar20) == bVar18;\n        }\nLAB_0040c8d6:\n        *(byte *)(ppbVar6 + 5) = *(byte *)(ppbVar6 + 5) & 0xfd | bVar21 * '\\x02';\n        *ppbVar17 = (byte *)ppbVar6;\n        ppbVar17 = ppbVar6 + 6;\n      }\n    }\n    free(local_48);\n    if ((*(byte *)&__stream->_flags & 0x20) != 0) {\n      piVar12 = __errno_location();\n      iVar3 = *piVar12;\n      FUN_0040e240(__stream);\n      *piVar12 = iVar3;\n      goto LAB_0040cd03;\n    }\n    iVar3 = FUN_0040e240(__stream);\n    if (iVar3 != -1) goto LAB_0040c91d;\n  }\n  piVar12 = __errno_location();\n  iVar3 = *piVar12;\nLAB_0040cd03:\n  *ppbVar17 = (byte *)0x0;\n  while (local_50 != (byte *)0x0) {\n    pbVar7 = *(byte **)(local_50 + 0x30);\n    FUN_0040c620();\n    local_50 = pbVar7;\n  }\n  *piVar12 = iVar3;\n  return (byte *)0;\n}\n\n",
            "funcName": "FUN_0040c670"
        },
        {
            "funcStartAddr": "0x40ce30",
            "funcEndAddr": "0x40cf4d",
            "decompiledFuncCode": "\nulong FUN_0040ce30(long param_1,ulong param_2,long *param_3)\n\n{\n  byte bVar1;\n  ulong uVar2;\n  ulong uVar3;\n  long lVar4;\n  ulong uVar5;\n  ulong uVar6;\n  ulong uVar7;\n  long lVar8;\n  bool bVar9;\n  \n  lVar8 = 1;\n  lVar4 = 1;\n  uVar2 = 0xffffffffffffffff;\n  uVar3 = 0;\n  while (uVar7 = lVar4 + uVar3, uVar5 = uVar3, lVar4 + uVar3 < param_2) {\n    while (uVar3 = uVar7, bVar1 = *(byte *)(param_1 + uVar2 + lVar4),\n          *(byte *)(param_1 + uVar3) < bVar1) {\n      lVar4 = 1;\n      lVar8 = uVar3 - uVar2;\n      uVar7 = uVar3 + 1;\n      uVar5 = uVar3;\n      if (param_2 <= uVar3 + 1) goto LAB_0040ce83;\n    }\n    if (*(byte *)(param_1 + uVar3) == bVar1) {\n      if (lVar4 == lVar8) {\n        lVar4 = 1;\n      }\n      else {\n        lVar4 = lVar4 + 1;\n        uVar3 = uVar5;\n      }\n    }\n    else {\n      lVar8 = 1;\n      lVar4 = 1;\n      uVar2 = uVar5;\n      uVar3 = uVar5 + 1;\n    }\n  }\nLAB_0040ce83:\n  *param_3 = lVar8;\n  lVar4 = 1;\n  lVar8 = 1;\n  uVar3 = 0;\n  uVar7 = 0xffffffffffffffff;\n  while (uVar5 = lVar8 + uVar3, uVar6 = uVar3, lVar8 + uVar3 < param_2) {\n    while (uVar3 = uVar5, bVar1 = *(byte *)(param_1 + uVar7 + lVar8),\n          bVar9 = *(byte *)(param_1 + uVar3) == bVar1, bVar1 <= *(byte *)(param_1 + uVar3) && !bVar9\n          ) {\n      lVar8 = 1;\n      lVar4 = uVar3 - uVar7;\n      uVar5 = uVar3 + 1;\n      uVar6 = uVar3;\n      if (param_2 <= uVar3 + 1) goto LAB_0040ced0;\n    }\n    if (bVar9) {\n      if (lVar8 == lVar4) {\n        lVar8 = 1;\n      }\n      else {\n        lVar8 = lVar8 + 1;\n        uVar3 = uVar6;\n      }\n    }\n    else {\n      lVar4 = 1;\n      lVar8 = 1;\n      uVar3 = uVar6 + 1;\n      uVar7 = uVar6;\n    }\n  }\nLAB_0040ced0:\n  uVar3 = uVar2 + 1;\n  if (uVar2 + 1 <= uVar7 + 1) {\n    *param_3 = lVar4;\n    uVar3 = uVar7 + 1;\n  }\n  return uVar3;\n}\n\n",
            "funcName": "FUN_0040ce30"
        },
        {
            "funcStartAddr": "0x40cf60",
            "funcEndAddr": "0x40d283",
            "decompiledFuncCode": "\n/* WARNING: Type propagation algorithm not settling */\n\nbyte * FUN_0040cf60(long param_1,byte *param_2,byte *param_3,byte *param_4)\n\n{\n  byte bVar1;\n  int iVar2;\n  byte *__n;\n  byte **ppbVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  long lVar6;\n  byte *pbVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  byte *pbVar11;\n  byte *local_840;\n  byte *local_838 [256];\n  byte *local_38;\n  \n  if (param_4 < (byte *)0x3) {\n    local_840 = (byte *)0x1;\n    __n = param_4 + -1;\n  }\n  else {\n    __n = (byte *)FUN_0040ce30(param_3,param_4,&local_840);\n  }\n  pbVar5 = local_840;\n  ppbVar3 = local_838;\n  do {\n    *ppbVar3 = param_4;\n    ppbVar3 = ppbVar3 + 1;\n  } while (&local_38 != ppbVar3);\n  if (param_4 == (byte *)0x0) {\n    iVar2 = memcmp(param_3,param_3 + (long)local_840,(size_t)__n);\n    if (iVar2 == 0) {\n      return (byte *)0;\n    }\n  }\n  else {\n    pbVar10 = param_4 + -1;\n    pbVar4 = param_3;\n    do {\n      bVar1 = *pbVar4;\n      lVar6 = (long)pbVar10 - (long)pbVar4;\n      pbVar4 = pbVar4 + 1;\n      local_838[bVar1] = param_3 + lVar6;\n    } while (param_3 + (long)param_4 != pbVar4);\n    iVar2 = memcmp(param_3,param_3 + (long)local_840,(size_t)__n);\n    if (iVar2 == 0) {\n      pbVar4 = __n + -1;\n      pbVar7 = (byte *)0x0;\n      pbVar11 = (byte *)0x0;\nLAB_0040d199:\n      do {\n        while( true ) {\n          pbVar9 = pbVar7 + (long)param_4;\n          lVar6 = FUN_0040c480(param_2 + param_1,0,(long)pbVar9 - (long)param_2);\n          if (lVar6 != 0) {\n            return (byte *)0;\n          }\n          if (pbVar9 == (byte *)0x0) {\n            return (byte *)0;\n          }\n          pbVar8 = local_838[pbVar9[param_1 + -1]];\n          param_2 = pbVar9;\n          if (pbVar8 == (byte *)0x0) break;\n          if ((pbVar8 < pbVar5) && (pbVar11 != (byte *)0x0)) {\n            pbVar8 = param_4 + -(long)pbVar5;\n          }\n          pbVar7 = pbVar7 + (long)pbVar8;\n          pbVar11 = (byte *)0x0;\n        }\n        pbVar9 = __n;\n        if (__n <= pbVar11) {\n          pbVar9 = pbVar11;\n        }\n        if (pbVar9 < pbVar10) {\n          do {\n            if (param_3[(long)pbVar9] != (pbVar7 + param_1)[(long)pbVar9]) {\n              pbVar7 = pbVar9 + (long)(pbVar7 + (1 - (long)__n));\n              pbVar11 = (byte *)0x0;\n              goto LAB_0040d199;\n            }\n            pbVar9 = pbVar9 + 1;\n          } while (pbVar9 != pbVar10);\n        }\n        pbVar9 = __n;\n        if ((pbVar11 < __n) &&\n           (pbVar8 = pbVar4, (pbVar7 + param_1)[(long)pbVar4] == param_3[(long)pbVar4])) {\n          do {\n            pbVar9 = pbVar8;\n            if (pbVar11 == pbVar9) break;\n            pbVar8 = pbVar9 + -1;\n          } while (param_3[(long)(pbVar9 + -1)] == (pbVar9 + -1)[(long)(pbVar7 + param_1)]);\n        }\n        if (pbVar9 < pbVar11 + 1) {\n          return pbVar7 + param_1;\n        }\n        pbVar7 = pbVar7 + (long)pbVar5;\n        pbVar11 = param_4 + -(long)pbVar5;\n      } while( true );\n    }\n  }\n  pbVar5 = param_4 + -(long)__n;\n  if (param_4 + -(long)__n < __n) {\n    pbVar5 = __n;\n  }\n  pbVar10 = (byte *)0x0;\n  local_840 = pbVar5 + 1;\n  do {\n    while( true ) {\n      pbVar4 = param_4 + (long)pbVar10;\n      lVar6 = FUN_0040c480(param_2 + param_1,0,(long)pbVar4 - (long)param_2);\n      if ((pbVar4 == (byte *)0x0) || (lVar6 != 0)) {\n        return (byte *)0x0;\n      }\n      pbVar7 = local_838[pbVar4[param_1 + -1]];\n      param_2 = pbVar4;\n      if (pbVar7 == (byte *)0x0) break;\nLAB_0040d050:\n      pbVar10 = pbVar10 + (long)pbVar7;\n    }\n    pbVar4 = pbVar10 + param_1;\n    if (__n < param_4 + -1) {\n      pbVar7 = __n;\n      if (pbVar4[(long)__n] == param_3[(long)__n]) {\n        do {\n          pbVar7 = pbVar7 + 1;\n          if (param_4 + -1 <= pbVar7) goto LAB_0040d0d3;\n        } while (param_3[(long)pbVar7] == pbVar4[(long)pbVar7]);\n      }\n      pbVar10 = pbVar10 + (1 - (long)__n);\n      goto LAB_0040d050;\n    }\nLAB_0040d0d3:\n    pbVar7 = __n + -1;\n    if (pbVar7 == (byte *)0xffffffffffffffff) {\n      return pbVar4;\n    }\n    if (pbVar4[(long)pbVar7] == param_3[(long)(__n + -1)]) {\n      do {\n        pbVar7 = pbVar7 + -1;\n        if (pbVar7 == (byte *)0xffffffffffffffff) {\n          return pbVar4;\n        }\n      } while (param_3[(long)pbVar7] == pbVar4[(long)pbVar7]);\n    }\n    pbVar10 = pbVar10 + (long)(pbVar5 + 1);\n  } while( true );\n}\n\n",
            "funcName": "FUN_0040cf60"
        },
        {
            "funcStartAddr": "0x40d2b0",
            "funcEndAddr": "0x40d603",
            "decompiledFuncCode": "\nchar * FUN_0040d2b0(char *param_1,char *param_2)\n\n{\n  long lVar1;\n  char cVar2;\n  bool bVar3;\n  ulong uVar4;\n  char cVar5;\n  int iVar6;\n  char *pcVar7;\n  ulong __n;\n  ulong uVar8;\n  ulong uVar9;\n  ulong uVar10;\n  char cVar11;\n  char *pcVar12;\n  char *pcVar13;\n  ulong uVar14;\n  long lVar15;\n  long lVar16;\n  long lVar17;\n  bool bVar18;\n  long local_40 [2];\n  \n  cVar5 = *param_1;\n  cVar2 = *param_2;\n  pcVar7 = param_1;\n  if (cVar5 == '\\0') {\n    pcVar7 = (char *)0x0;\n    if (cVar2 == '\\0') {\n      pcVar7 = param_1;\n    }\n  }\n  else if (cVar2 != '\\0') {\n    bVar3 = true;\n    pcVar12 = param_1;\n    pcVar13 = param_2;\n    cVar11 = cVar2;\n    do {\n      pcVar12 = pcVar12 + 1;\n      pcVar13 = pcVar13 + 1;\n      bVar18 = cVar11 == cVar5;\n      cVar11 = *pcVar13;\n      bVar3 = (bool)(bVar3 & bVar18);\n      cVar5 = *pcVar12;\n      if (cVar5 == '\\0') {\n        if (cVar11 != '\\0') {\n          return (char *)0x0;\n        }\n        break;\n      }\n    } while (cVar11 != '\\0');\n    if (!bVar3) {\n      uVar14 = (long)pcVar13 - (long)param_2;\n      pcVar7 = strchr(param_1 + 1,(int)cVar2);\n      if ((pcVar7 != (char *)0x0) && (uVar14 != 1)) {\n        pcVar13 = pcVar13 + -uVar14;\n        lVar15 = (long)(param_1 + uVar14) - (long)pcVar7;\n        if (param_1 + uVar14 < pcVar7) {\n          lVar15 = 1;\n        }\n        if (uVar14 < 0x20) {\n          if (uVar14 < 3) {\n            local_40[0] = 1;\n            __n = uVar14 - 1;\n          }\n          else {\n            __n = FUN_0040ce30(pcVar13,uVar14,local_40);\n          }\n          lVar17 = local_40[0];\n          iVar6 = memcmp(pcVar13,pcVar13 + local_40[0],__n);\n          if (iVar6 == 0) {\n            uVar9 = __n - 1;\n            lVar16 = 0;\n            uVar10 = 0;\n            while( true ) {\n              lVar1 = uVar14 + lVar16;\n              lVar15 = FUN_0040c480(pcVar7 + lVar15,0,lVar1 - lVar15);\n              if ((lVar1 == 0) || (lVar15 != 0)) break;\n              uVar8 = uVar10;\n              if (uVar10 <= __n) {\n                uVar8 = __n;\n              }\n              lVar15 = lVar1;\n              if (uVar8 < uVar14) {\n                if (pcVar7[lVar16 + uVar8] == pcVar13[uVar8]) {\n                  do {\n                    uVar8 = uVar8 + 1;\n                    if (uVar14 == uVar8) goto LAB_0040d483;\n                  } while (pcVar13[uVar8] == pcVar7[uVar8 + lVar16]);\n                }\n                uVar10 = 0;\n                lVar16 = uVar8 + (1 - __n) + lVar16;\n              }\n              else {\nLAB_0040d483:\n                uVar8 = __n;\n                if ((uVar10 < __n) && (uVar4 = uVar9, pcVar13[uVar9] == pcVar7[uVar9 + lVar16])) {\n                  do {\n                    uVar8 = uVar4;\n                    if (uVar10 == uVar8) break;\n                    uVar4 = uVar8 - 1;\n                  } while (pcVar13[uVar8 - 1] == pcVar7[(uVar8 - 1) + lVar16]);\n                }\n                if (uVar8 < uVar10 + 1) {\n                  return pcVar7 + lVar16;\n                }\n                lVar16 = lVar16 + lVar17;\n                uVar10 = uVar14 - lVar17;\n              }\n            }\n          }\n          else {\n            uVar9 = uVar14 - __n;\n            if (uVar14 - __n < __n) {\n              uVar9 = __n;\n            }\n            lVar17 = 0;\n            local_40[0] = uVar9 + 1;\n            while( true ) {\n              lVar16 = uVar14 + lVar17;\n              lVar15 = FUN_0040c480(pcVar7 + lVar15,0,lVar16 - lVar15);\n              if ((lVar16 == 0) || (lVar15 != 0)) break;\n              lVar15 = lVar16;\n              if (__n < uVar14) {\n                uVar10 = __n;\n                if (pcVar7[lVar17 + __n] == pcVar13[__n]) {\n                  do {\n                    uVar10 = uVar10 + 1;\n                    if (uVar14 <= uVar10) goto LAB_0040d5a3;\n                  } while (pcVar13[uVar10] == pcVar7[uVar10 + lVar17]);\n                }\n                lVar17 = uVar10 + (1 - __n) + lVar17;\n              }\n              else {\nLAB_0040d5a3:\n                pcVar12 = pcVar7 + lVar17;\n                lVar16 = __n - 1;\n                if (lVar16 == -1) {\n                  return pcVar12;\n                }\n                if (pcVar12[lVar16] == pcVar13[__n - 1]) {\n                  do {\n                    lVar16 = lVar16 + -1;\n                    if (lVar16 == -1) {\n                      return pcVar12;\n                    }\n                  } while (pcVar13[lVar16] == pcVar12[lVar16]);\n                }\n                lVar17 = lVar17 + uVar9 + 1;\n              }\n            }\n          }\n          pcVar7 = (char *)0x0;\n        }\n        else {\n          pcVar7 = (char *)FUN_0040cf60(pcVar7,lVar15,pcVar13,uVar14);\n        }\n      }\n    }\n  }\n  return pcVar7;\n}\n\n",
            "funcName": "FUN_0040d2b0"
        },
        {
            "funcStartAddr": "0x40d650",
            "funcEndAddr": "0x40d6a9",
            "decompiledFuncCode": "\nulong FUN_0040d650(void **param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  void *__ptr;\n  int *piVar1;\n  ulong local_10;\n  \n  __ptr = (void *)FUN_0040e360(0,&local_10,param_2,param_3);\n  if (__ptr == (void *)0x0) {\n    local_10 = 0xffffffff;\n  }\n  else if (local_10 < 0x80000000) {\n    *param_1 = __ptr;\n    local_10 = local_10 & 0xffffffff;\n  }\n  else {\n    free(__ptr);\n    piVar1 = __errno_location();\n    *piVar1 = 0x4b;\n    local_10 = 0xffffffff;\n  }\n  return local_10;\n}\n\n",
            "funcName": "FUN_0040d650"
        },
        {
            "funcStartAddr": "0x40d6b0",
            "funcEndAddr": "0x40d78b",
            "decompiledFuncCode": "\nchar * FUN_0040d6b0(char *param_1,ulong param_2)\n\n{\n  char *__buf;\n  ulong uVar1;\n  int *piVar2;\n  size_t __size;\n  \n  __size = param_2 + 1;\n  if (0x400 < param_2) {\n    __size = 0x401;\n  }\n  do {\n    __buf = (char *)malloc(__size);\n    while( true ) {\n      if (__buf == (char *)0x0) {\n        return (char *)0x0;\n      }\n      uVar1 = readlink(param_1,__buf,__size);\n      if (((long)uVar1 < 0) && (piVar2 = __errno_location(), *piVar2 != 0x22)) {\n        free(__buf);\n        return (char *)0x0;\n      }\n      if (uVar1 < __size) {\n        __buf[uVar1] = '\\0';\n        return __buf;\n      }\n      free(__buf);\n      if (0x3fffffffffffffff < __size) break;\n      __size = __size * 2;\n      __buf = (char *)malloc(__size);\n    }\n    if (0x7ffffffffffffffe < __size) {\n      piVar2 = __errno_location();\n      *piVar2 = 0xc;\n      return (char *)0x0;\n    }\n    __size = 0x7fffffffffffffff;\n  } while( true );\n}\n\n",
            "funcName": "FUN_0040d6b0"
        },
        {
            "funcStartAddr": "0x40d7a0",
            "funcEndAddr": "0x40d7aa",
            "decompiledFuncCode": "\nvoid FUN_0040d7a0(void)\n\n{\n  FUN_00404930(1);\n  return;\n}\n\n",
            "funcName": "FUN_0040d7a0"
        },
        {
            "funcStartAddr": "0x40d7b0",
            "funcEndAddr": "0x40d8b3",
            "decompiledFuncCode": "\nlong FUN_0040d7b0(char *param_1,char **param_2,void *param_3,size_t param_4)\n\n{\n  bool bVar1;\n  long lVar2;\n  int iVar3;\n  size_t __n;\n  size_t sVar4;\n  long lVar5;\n  void *__s2;\n  char *__s1;\n  long local_58;\n  \n  __n = strlen(param_1);\n  __s1 = *param_2;\n  local_58 = -1;\n  lVar2 = local_58;\n  if (__s1 != (char *)0x0) {\n    bVar1 = false;\n    lVar2 = 0;\n    __s2 = param_3;\nLAB_0040d847:\n    do {\n      lVar5 = lVar2;\n      iVar3 = strncmp(__s1,param_1,__n);\n      if (iVar3 == 0) {\n        sVar4 = strlen(__s1);\n        if (sVar4 == __n) {\n          return lVar5;\n        }\n        if (local_58 == -1) {\n          __s2 = (void *)((long)__s2 + param_4);\n          __s1 = param_2[lVar5 + 1];\n          lVar2 = lVar5 + 1;\n          local_58 = lVar5;\n          if (__s1 == (char *)0x0) break;\n          goto LAB_0040d847;\n        }\n        if (param_3 == (void *)0x0) {\n          bVar1 = true;\n        }\n        else {\n          iVar3 = memcmp((void *)(local_58 * param_4 + (long)param_3),__s2,param_4);\n          if (iVar3 != 0) {\n            bVar1 = true;\n          }\n        }\n      }\n      __s2 = (void *)((long)__s2 + param_4);\n      __s1 = param_2[lVar5 + 1];\n      lVar2 = lVar5 + 1;\n    } while (__s1 != (char *)0x0);\n    lVar2 = -2;\n    if (!bVar1) {\n      lVar2 = local_58;\n    }\n  }\n  local_58 = lVar2;\n  return local_58;\n}\n\n",
            "funcName": "FUN_0040d7b0"
        },
        {
            "funcStartAddr": "0x40d8d0",
            "funcEndAddr": "0x40d93c",
            "decompiledFuncCode": "\nvoid FUN_0040d8d0(undefined8 param_1,undefined8 param_2,long param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  \n  if (param_3 == -1) {\n    uVar1 = dcgettext(0,\"invalid argument %s for %s\",5);\n  }\n  else {\n    uVar1 = dcgettext(0,\"ambiguous argument %s for %s\",5);\n  }\n  uVar2 = FUN_00409dc0(1,param_1);\n  uVar3 = FUN_00409ab0(0,8,param_2);\n  error(0,0,uVar1,uVar3,uVar2);\n  return;\n}\n\n",
            "funcName": "FUN_0040d8d0"
        },
        {
            "funcStartAddr": "0x40d950",
            "funcEndAddr": "0x40da5f",
            "decompiledFuncCode": "\nvoid FUN_0040d950(long *param_1,void *param_2,size_t param_3)\n\n{\n  FILE *__stream;\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  long lVar4;\n  void *__s2;\n  long lVar5;\n  void *__s1;\n  \n  __stream = stderr;\n  __s1 = (void *)0x0;\n  pcVar2 = (char *)dcgettext(0,\"Valid arguments are:\",5);\n  lVar4 = 0;\n  fputs_unlocked(pcVar2,__stream);\n  lVar5 = *param_1;\n  while (lVar5 != 0) {\n    while ((__s2 = param_2, lVar4 == 0 || (iVar1 = memcmp(__s1,__s2,param_3), iVar1 != 0))) {\n      lVar4 = lVar4 + 1;\n      uVar3 = FUN_00409de0(lVar5);\n      __fprintf_chk(stderr,1,\"\\n  - %s\",uVar3);\n      lVar5 = param_1[lVar4];\n      param_2 = (void *)((long)__s2 + param_3);\n      __s1 = __s2;\n      if (lVar5 == 0) goto LAB_0040da20;\n    }\n    lVar4 = lVar4 + 1;\n    param_2 = (void *)((long)__s2 + param_3);\n    uVar3 = FUN_00409de0(lVar5);\n    __fprintf_chk(stderr,1,&DAT_00413b3d,uVar3);\n    lVar5 = param_1[lVar4];\n  }\nLAB_0040da20:\n  pcVar2 = stderr->_IO_write_ptr;\n  if (pcVar2 < stderr->_IO_write_end) {\n    stderr->_IO_write_ptr = pcVar2 + 1;\n    *pcVar2 = '\\n';\n    return;\n  }\n  __overflow(stderr,10);\n  return;\n}\n\n",
            "funcName": "FUN_0040d950"
        },
        {
            "funcStartAddr": "0x40da70",
            "funcEndAddr": "0x40dadd",
            "decompiledFuncCode": "\nlong FUN_0040da70(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5,code *param_6)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_0040d7b0(param_2,param_3,param_4,param_5);\n  if (lVar1 < 0) {\n    FUN_0040d8d0(param_1,param_2,lVar1);\n    FUN_0040d950(param_3,param_4,param_5);\n    (*param_6)();\n    lVar1 = -1;\n  }\n  return lVar1;\n}\n\n",
            "funcName": "FUN_0040da70"
        },
        {
            "funcStartAddr": "0x40dae0",
            "funcEndAddr": "0x40db2c",
            "decompiledFuncCode": "\nlong FUN_0040dae0(void *param_1,long *param_2,void *param_3,size_t param_4)\n\n{\n  int iVar1;\n  long lVar2;\n  \n  lVar2 = *param_2;\n  if (lVar2 != 0) {\n    param_2 = param_2 + 1;\n    do {\n      iVar1 = memcmp(param_1,param_3,param_4);\n      if (iVar1 == 0) {\n        return lVar2;\n      }\n      lVar2 = *param_2;\n      param_3 = (void *)((long)param_3 + param_4);\n      param_2 = param_2 + 1;\n    } while (lVar2 != 0);\n  }\n  return lVar2;\n}\n\n",
            "funcName": "FUN_0040dae0"
        },
        {
            "funcStartAddr": "0x40db30",
            "funcEndAddr": "0x40db8c",
            "decompiledFuncCode": "\nulong FUN_0040db30(uint *param_1)\n\n{\n  uint uVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  uVar1 = *param_1;\n  uVar3 = FUN_0040e240(param_1);\n  if ((uVar1 & 0x20) == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_0040db30"
        },
        {
            "funcStartAddr": "0x40db90",
            "funcEndAddr": "0x40dbd6",
            "decompiledFuncCode": "\nvoid FUN_0040db90(char *param_1,uint param_2,ulong param_3)\n\n{\n  int iVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  if ((param_2 & 0x40) != 0) {\n    uVar2 = param_3 & 0xffffffff;\n  }\n  iVar1 = open(param_1,param_2,uVar2);\n  FUN_0040e1f0(iVar1);\n  return;\n}\n\n",
            "funcName": "FUN_0040db90"
        },
        {
            "funcStartAddr": "0x40dbe0",
            "funcEndAddr": "0x40dc36",
            "decompiledFuncCode": "\nbool FUN_0040dbe0(int param_1)\n\n{\n  bool bVar1;\n  byte *pbVar2;\n  long lVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  bool bVar8;\n  byte bVar9;\n  \n  bVar9 = 0;\n  pbVar2 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar1 = true;\n  bVar6 = false;\n  bVar8 = pbVar2 == (byte *)0x0;\n  if (!bVar8) {\n    lVar3 = 2;\n    pbVar4 = pbVar2;\n    pbVar5 = &DAT_00413b42;\n    do {\n      if (lVar3 == 0) break;\n      lVar3 = lVar3 + -1;\n      bVar6 = *pbVar4 < *pbVar5;\n      bVar8 = *pbVar4 == *pbVar5;\n      pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      pbVar5 = pbVar5 + (ulong)bVar9 * -2 + 1;\n    } while (bVar8);\n    bVar1 = false;\n    bVar7 = false;\n    bVar6 = (!bVar6 && !bVar8) == bVar6;\n    if (!bVar6) {\n      lVar3 = 6;\n      pbVar4 = (byte *)\"POSIX\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar2 < *pbVar4;\n        bVar6 = *pbVar2 == *pbVar4;\n        pbVar2 = pbVar2 + (ulong)bVar9 * -2 + 1;\n        pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      } while (bVar6);\n      return (!bVar7 && !bVar6) != bVar7;\n    }\n  }\n  return bVar1;\n}\n\n",
            "funcName": "FUN_0040dbe0"
        },
        {
            "funcStartAddr": "0x40dc40",
            "funcEndAddr": "0x40dc72",
            "decompiledFuncCode": "\nulong FUN_0040dc40(char *param_1,ulong param_2)\n\n{\n  char cVar1;\n  ulong uVar2;\n  \n  cVar1 = *param_1;\n  if (cVar1 != '\\0') {\n    uVar2 = 0;\n    do {\n      param_1 = param_1 + 1;\n      uVar2 = (uVar2 << 9 | uVar2 >> 0x37) + (long)cVar1;\n      cVar1 = *param_1;\n    } while (cVar1 != '\\0');\n    return uVar2 % param_2;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040dc40"
        },
        {
            "funcStartAddr": "0x40dc80",
            "funcEndAddr": "0x40e1d4",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nchar * FUN_0040dc80(void)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  char *__s1;\n  size_t sVar5;\n  size_t sVar6;\n  char *pcVar7;\n  size_t __n;\n  char *__file;\n  FILE *__stream;\n  byte *pbVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  long lVar11;\n  ulong uVar12;\n  undefined8 *puVar13;\n  char *__ptr;\n  bool bVar14;\n  long local_d0;\n  undefined8 local_c0;\n  undefined8 local_b8;\n  undefined auStack_80 [8];\n  undefined8 local_78;\n  \n  __s1 = nl_langinfo(0xe);\n  if (__s1 == (char *)0x0) {\n    __s1 = \"\";\n  }\n  if (DAT_00617898 != (char *)0x0) goto LAB_0040dcba;\n  pcVar7 = getenv(\"CHARSETALIASDIR\");\n  if ((pcVar7 == (char *)0x0) || (*pcVar7 == '\\0')) {\n    sVar6 = 0x73;\n    sVar5 = 0x65;\n    __n = 100;\n    pcVar7 = \n    \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\"\n    ;\nLAB_0040dda5:\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      __file[__n] = '/';\n      goto LAB_0040ddc6;\n    }\n  }\n  else {\n    __n = strlen(pcVar7);\n    if (__n == 0) {\n      sVar6 = 0xe;\n    }\n    else {\n      if (pcVar7[__n - 1] != '/') {\n        sVar6 = __n + 0xf;\n        sVar5 = __n + 1;\n        goto LAB_0040dda5;\n      }\n      sVar6 = __n + 0xe;\n    }\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      sVar5 = __n;\nLAB_0040ddc6:\n      puVar13 = (undefined8 *)(__file + sVar5);\n      *puVar13 = 0x2e74657372616863;\n      *(undefined2 *)((long)puVar13 + 0xc) = 0x73;\n      *(undefined4 *)(puVar13 + 1) = 0x61696c61;\n      iVar2 = open(__file,0);\n      if (-1 < iVar2) {\n        __stream = fdopen(iVar2,\"r\");\n        local_d0 = 0;\n        if (__stream != (FILE *)0x0) {\n          pcVar7 = (char *)0x0;\nLAB_0040de60:\n          pbVar8 = (byte *)__stream->_IO_read_ptr;\n          if (__stream->_IO_read_end <= pbVar8) goto LAB_0040dfec;\n          do {\n            __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n            uVar4 = (uint)*pbVar8;\n            __ptr = pcVar7;\n            while( true ) {\n              pcVar7 = __ptr;\n              if ((uVar4 - 9 < 2) || (uVar4 == 0x20)) goto LAB_0040de60;\n              if (uVar4 == 0x23) goto LAB_0040e051;\n              ungetc(uVar4,__stream);\n              iVar2 = fscanf(__stream,\"%50s %50s\",&local_b8,&local_78);\n              puVar13 = &local_b8;\n              if (iVar2 < 2) goto LAB_0040dfff;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              lVar11 = (long)puVar13 +\n                       ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_b8);\n              puVar13 = &local_78;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              local_c0 = (long)puVar13 +\n                         ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_78);\n              lVar9 = lVar11 + local_c0;\n              if (local_d0 == 0) {\n                pcVar7 = (char *)malloc(lVar9 + 3);\n              }\n              else {\n                lVar9 = lVar9 + local_d0;\n                pcVar7 = (char *)realloc(__ptr,lVar9 + 3);\n              }\n              local_d0 = lVar9 + 2;\n              if (pcVar7 == (char *)0x0) {\n                pcVar7 = \"\";\n                free(__ptr);\n                FUN_0040e240(__stream);\n                goto LAB_0040de04;\n              }\n              uVar12 = lVar11 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (-2 - lVar11) + (local_d0 - local_c0));\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_b8;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 2));\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_b8;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 4));\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_b8._4_4_,(undefined4)local_b8);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 8));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_b8 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              uVar12 = local_c0 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (local_d0 - local_c0) + -1);\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_78;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 6);\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_78;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 4);\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_78._4_4_,(undefined4)local_78);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)auStack_80 + (uVar12 & 0xffffffff));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_78 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              pbVar8 = (byte *)__stream->_IO_read_ptr;\n              if (pbVar8 < __stream->_IO_read_end) break;\nLAB_0040dfec:\n              uVar4 = __uflow(__stream);\n              __ptr = pcVar7;\n              if (uVar4 == 0xffffffff) goto LAB_0040dfff;\n            }\n          } while( true );\n        }\n        close(iVar2);\n      }\n      goto LAB_0040ddfe;\n    }\n  }\n  DAT_00617898 = \"\";\nLAB_0040dcba:\n  cVar1 = *DAT_00617898;\n  pcVar7 = DAT_00617898;\n  do {\n    if (cVar1 == '\\0') {\nLAB_0040dd14:\n      if (*__s1 == '\\0') {\n        __s1 = \"ASCII\";\n      }\n      return __s1;\n    }\n    iVar2 = strcmp(__s1,pcVar7);\n    if ((iVar2 == 0) || ((cVar1 == '*' && (pcVar7[1] == '\\0')))) {\n      sVar6 = strlen(pcVar7);\n      __s1 = pcVar7 + sVar6 + 1;\n      goto LAB_0040dd14;\n    }\n    sVar6 = strlen(pcVar7);\n    sVar5 = strlen(pcVar7 + sVar6 + 1);\n    pcVar7 = pcVar7 + sVar6 + 1 + sVar5 + 1;\n    cVar1 = *pcVar7;\n  } while( true );\nLAB_0040e051:\n  do {\n    pbVar8 = (byte *)__stream->_IO_read_ptr;\n    if (pbVar8 < __stream->_IO_read_end) {\n      __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n      uVar4 = (uint)*pbVar8;\n      bVar14 = true;\n    }\n    else {\n      uVar4 = __uflow(__stream);\n      bVar14 = uVar4 != 0xffffffff;\n    }\n  } while ((uVar4 != 10) && (bVar14));\n  if (uVar4 == 0xffffffff) goto LAB_0040dfff;\n  goto LAB_0040de60;\nLAB_0040dfff:\n  FUN_0040e240(__stream);\n  if (local_d0 == 0) {\nLAB_0040ddfe:\n    pcVar7 = \"\";\n  }\n  else {\n    pcVar7[local_d0] = '\\0';\n  }\nLAB_0040de04:\n  free(__file);\n  DAT_00617898 = pcVar7;\n  goto LAB_0040dcba;\n}\n\n",
            "funcName": "FUN_0040dc80"
        },
        {
            "funcStartAddr": "0x40e1f0",
            "funcEndAddr": "0x40e23c",
            "decompiledFuncCode": "\nuint FUN_0040e1f0(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  \n  if (2 < param_1) {\n    return param_1;\n  }\n  uVar2 = FUN_0040fe80();\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  close(param_1);\n  *piVar3 = iVar1;\n  return uVar2;\n}\n\n",
            "funcName": "FUN_0040e1f0"
        },
        {
            "funcStartAddr": "0x40e240",
            "funcEndAddr": "0x40e2b8",
            "decompiledFuncCode": "\nint FUN_0040e240(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_0040e2a7;\n    }\n    iVar1 = FUN_0040e2c0(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_0040e2a7:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n",
            "funcName": "FUN_0040e240"
        },
        {
            "funcStartAddr": "0x40e2c0",
            "funcEndAddr": "0x40e2fb",
            "decompiledFuncCode": "\nvoid FUN_0040e2c0(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if ((iVar1 != 0) && ((param_1->_flags & 0x100U) != 0)) {\n      FUN_0040e300(param_1,0,1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_0040e2c0"
        },
        {
            "funcStartAddr": "0x40e300",
            "funcEndAddr": "0x40e356",
            "decompiledFuncCode": "\nulong FUN_0040e300(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  uint uVar1;\n  int __fd;\n  ulong uVar2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    __fd = fileno(param_1);\n    uVar2 = lseek(__fd,param_2,param_3);\n    if (uVar2 != 0xffffffffffffffff) {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = uVar2;\n      uVar2 = 0;\n    }\n    return uVar2;\n  }\n  uVar1 = fseeko(param_1,param_2,param_3);\n  return (ulong)uVar1;\n}\n\n",
            "funcName": "FUN_0040e300"
        },
        {
            "funcStartAddr": "0x40e360",
            "funcEndAddr": "0x40fd74",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x0040fb9c) */\n/* WARNING: Removing unreachable block (ram,0x0040fcdd) */\n/* WARNING: Removing unreachable block (ram,0x0040fbb0) */\n/* WARNING: Removing unreachable block (ram,0x0040f084) */\n/* WARNING: Removing unreachable block (ram,0x0040e650) */\n/* WARNING: Type propagation algorithm not settling */\n/* WARNING: Could not reconcile some variable overlaps */\n\nundefined2 *\nFUN_0040e360(undefined2 *param_1,undefined8 *param_2,undefined2 *param_3,undefined8 param_4)\n\n{\n  undefined8 uVar1;\n  unkbyte10 Var2;\n  undefined uVar3;\n  uint uVar4;\n  void *pvVar5;\n  char *pcVar6;\n  uint uVar7;\n  byte bVar8;\n  char cVar9;\n  int iVar10;\n  ulong uVar11;\n  ulong uVar12;\n  undefined *__n;\n  undefined2 *puVar13;\n  undefined *puVar14;\n  uint *puVar15;\n  int *piVar16;\n  undefined2 *puVar17;\n  undefined2 *puVar18;\n  ulong uVar19;\n  undefined2 *puVar20;\n  char *pcVar21;\n  undefined2 *puVar22;\n  undefined *puVar23;\n  undefined2 *puVar24;\n  char *pcVar25;\n  char *pcVar26;\n  undefined *puVar27;\n  size_t sVar28;\n  uint uVar29;\n  long lVar30;\n  undefined *puVar31;\n  undefined8 *puVar32;\n  bool bVar33;\n  ushort in_FPUControlWord;\n  float10 fVar34;\n  undefined auStack_6f8 [4];\n  uint local_6f4;\n  undefined2 *local_6f0;\n  undefined2 *local_6e8;\n  undefined *local_6e0;\n  undefined8 *local_6d8;\n  undefined2 *local_6d0;\n  undefined2 *local_6c8;\n  long local_6c0;\n  undefined8 local_6b8;\n  undefined *local_6b0;\n  undefined local_6a8 [4];\n  undefined auStack_6a4 [12];\n  undefined2 *local_698;\n  undefined2 *local_690;\n  int local_684;\n  undefined4 local_680;\n  uint local_67c;\n  undefined local_678 [8];\n  undefined2 *local_670;\n  undefined2 auStack_668 [112];\n  long local_588;\n  undefined8 *local_580;\n  long local_578;\n  ulong local_570;\n  undefined8 auStack_568 [78];\n  undefined2 local_2f8 [356];\n  \n  local_6d8 = param_2;\n  local_690 = param_1;\n  iVar10 = FUN_004101f0(param_3,&local_588,local_678);\n  if (iVar10 < 0) {\n    return (undefined2 *)0x0;\n  }\n  iVar10 = FUN_0040ffd0(param_4,local_678);\n  if (iVar10 < 0) {\n    if (local_580 != auStack_568) {\n      free(local_580);\n    }\n    if (local_670 != auStack_668) {\n      free(local_670);\n    }\n    piVar16 = __errno_location();\n    *piVar16 = 0x16;\n    return (undefined2 *)0x0;\n  }\n  uVar11 = local_578 + 7;\n  if (uVar11 < 7) {\n    uVar11 = 0xffffffffffffffff;\n  }\n  uVar12 = uVar11 + local_570;\n  puVar27 = auStack_6f8;\n  if ((!CARRY8(uVar11,local_570)) &&\n     (sVar28 = uVar12 + 6, puVar27 = auStack_6f8, uVar12 < 0xfffffffffffffffa)) {\n    if (sVar28 < 4000) {\n      local_6e0 = (undefined *)0x0;\n      lVar30 = -(uVar12 + 0x1d & 0xfffffffffffffff0);\n      puVar27 = auStack_6f8 + lVar30;\n      local_6b0 = (undefined *)((long)&local_6f0 + lVar30);\nLAB_0040e424:\n      puVar31 = (undefined *)0x0;\n      if (local_690 != (undefined2 *)0x0) {\n        puVar31 = (undefined *)*local_6d8;\n      }\n      __n = (undefined *)0x0;\n      local_6c0 = 0;\n      puVar24 = (undefined2 *)*local_580;\n      puVar20 = local_690;\n      _local_6a8 = (int *)param_3;\n      puVar32 = local_580;\n      puVar14 = __n;\n      if (puVar24 == param_3) goto LAB_0040e5d8;\n      do {\n        puVar24 = (undefined2 *)((long)puVar24 - (long)_local_6a8);\n        __n = puVar14 + (long)puVar24;\n        puVar13 = puVar20;\n        if (CARRY8((ulong)puVar14,(ulong)puVar24)) {\n          if (puVar31 != (undefined *)0xffffffffffffffff) goto LAB_0040e950;\n          __n = (undefined *)0xffffffffffffffff;\n        }\n        else if (puVar31 < __n) {\n          if (puVar31 == (undefined *)0x0) {\n            if (__n < (undefined *)0xd) {\n              puVar31 = (undefined *)0xc;\n            }\n            else {\nLAB_0040e56e:\n              puVar31 = __n;\n              if (__n == (undefined *)0xffffffffffffffff) goto LAB_0040e950;\n            }\n          }\n          else {\n            if ((long)puVar31 < 0) goto LAB_0040e950;\n            puVar31 = (undefined *)((long)puVar31 * 2);\n            if (puVar31 < __n) goto LAB_0040e56e;\n          }\n          if ((puVar20 == (undefined2 *)0x0) || (puVar20 == local_690)) {\n            local_6b8 = (undefined2 *)_local_6a8;\n            _local_6a8 = (float10)CONCAT91(stack0xfffffffffffff959,puVar20 == local_690);\n            local_698 = puVar24;\n            *(undefined8 *)(puVar27 + -8) = 0x40e4cc;\n            puVar13 = (undefined2 *)malloc((size_t)puVar31);\n            if (puVar13 == (undefined2 *)0x0) goto LAB_0040e950;\n            puVar24 = local_698;\n            _local_6a8 = (int *)local_6b8;\n            if ((puVar14 != (undefined *)0x0) && (local_6a8[0] != '\\0')) {\n              _local_6a8 = (float10)CONCAT28(auStack_6a4._4_2_,local_6b8);\n              *(undefined8 *)(puVar27 + -8) = 0x40e51a;\n              puVar13 = (undefined2 *)memcpy(puVar13,puVar20,(size_t)puVar14);\n              puVar24 = local_698;\n            }\n          }\n          else {\n            local_698 = puVar24;\n            *(undefined8 *)(puVar27 + -8) = 0x40e5af;\n            puVar13 = (undefined2 *)realloc(puVar20,(size_t)puVar31);\n            if (puVar13 == (undefined2 *)0x0) {\nLAB_0040eb65:\n              *(undefined8 *)(puVar27 + -8) = 0x40eb6a;\n              piVar16 = __errno_location();\n              _local_6a8 = (float10)CONCAT28(auStack_6a4._4_2_,piVar16);\n              goto LAB_0040eb78;\n            }\n            puVar24 = local_698;\n          }\n        }\n        *(undefined8 *)(puVar27 + -8) = 0x40e5d8;\n        memcpy((undefined *)((long)puVar13 + (long)puVar14),_local_6a8,(size_t)puVar24);\n        puVar20 = puVar13;\nLAB_0040e5d8:\n        do {\n          if (local_588 == local_6c0) {\n            puVar14 = __n + 1;\n            puVar24 = puVar20;\n            if ((undefined *)0xfffffffffffffffe < __n) {\n              if (puVar31 == (undefined *)0xffffffffffffffff) goto LAB_0040f762;\n              goto LAB_0040e950;\n            }\n            if (puVar14 <= puVar31) goto LAB_0040f762;\n            if (puVar31 == (undefined *)0x0) {\n              if (puVar14 < (undefined *)0xd) {\n                puVar31 = (undefined *)0xc;\n              }\n              else {\nLAB_0040fd3f:\n                puVar31 = puVar14;\n                if (puVar14 == (undefined *)0xffffffffffffffff) goto LAB_0040e950;\n              }\n            }\n            else {\n              if ((long)puVar31 < 0) goto LAB_0040e950;\n              puVar31 = (undefined *)((long)puVar31 * 2);\n              if (puVar31 < puVar14) goto LAB_0040fd3f;\n            }\n            bVar33 = puVar20 == local_690;\n            if ((puVar20 == (undefined2 *)0x0) || (bVar33)) {\n              *(undefined8 *)(puVar27 + -8) = 0x40fcf9;\n              puVar24 = (undefined2 *)malloc((size_t)puVar31);\n              if (puVar24 == (undefined2 *)0x0) goto LAB_0040e950;\n              if ((__n != (undefined *)0x0) && (bVar33)) {\n                *(undefined8 *)(puVar27 + -8) = 0x40fd25;\n                puVar24 = (undefined2 *)memcpy(puVar24,puVar20,(size_t)__n);\n              }\n            }\n            else {\n              *(undefined8 *)(puVar27 + -8) = 0x40f756;\n              puVar24 = (undefined2 *)realloc(puVar20,(size_t)puVar31);\n              if (puVar24 == (undefined2 *)0x0) goto LAB_0040eb65;\n            }\nLAB_0040f762:\n            *(undefined *)((long)puVar24 + (long)__n) = 0;\n            if ((puVar14 < puVar31) && (puVar24 != local_690)) {\n              *(undefined8 *)(puVar27 + -8) = 0x40f780;\n              puVar20 = (undefined2 *)realloc(puVar24,(size_t)puVar14);\n              if (puVar20 != (undefined2 *)0x0) {\n                puVar24 = puVar20;\n              }\n            }\n            puVar31 = local_6e0;\n            if (local_6e0 != (undefined *)0x0) {\n              *(undefined8 *)(puVar27 + -8) = 0x40f79b;\n              free(puVar31);\n            }\n            if (local_580 != auStack_568) {\n              *(undefined8 *)(puVar27 + -8) = 0x40f7b7;\n              free(local_580);\n            }\n            if (local_670 != auStack_668) {\n              *(undefined8 *)(puVar27 + -8) = 0x40f7d3;\n              free(local_670);\n            }\n            *local_6d8 = __n;\n            return puVar24;\n          }\n          bVar8 = *(byte *)(puVar32 + 9);\n          lVar30 = puVar32[10];\n          if (bVar8 == 0x25) {\n            if (lVar30 != -1) goto LAB_0040f08c;\n            puVar14 = __n + 1;\n            puVar24 = puVar20;\n            if (__n < (undefined *)0xffffffffffffffff) {\n              if (puVar31 < puVar14) {\n                if (puVar31 == (undefined *)0x0) {\n                  if (puVar14 < (undefined *)0xd) {\n                    puVar31 = (undefined *)0xc;\n                  }\n                  else {\nLAB_0040f302:\n                    puVar31 = puVar14;\n                    if (puVar14 == (undefined *)0xffffffffffffffff) goto LAB_0040e950;\n                  }\n                }\n                else {\n                  if ((long)puVar31 < 0) goto LAB_0040e950;\n                  puVar31 = (undefined *)((long)puVar31 * 2);\n                  if (puVar31 < puVar14) goto LAB_0040f302;\n                }\n                if ((puVar20 == (undefined2 *)0x0) || (puVar20 == local_690)) {\n                  local_698 = (undefined2 *)\n                              ((ulong)local_698 & 0xffffffffffffff00 | (ulong)(puVar20 == local_690)\n                              );\n                  *(undefined8 *)(puVar27 + -8) = 0x40f24e;\n                  puVar24 = (undefined2 *)malloc((size_t)puVar31);\n                  if (puVar24 == (undefined2 *)0x0) goto LAB_0040e950;\n                  if ((__n != (undefined *)0x0) && ((char)local_698 != '\\0')) {\n                    *(undefined8 *)(puVar27 + -8) = 0x40f280;\n                    puVar24 = (undefined2 *)memcpy(puVar24,puVar20,(size_t)__n);\n                  }\n                }\n                else {\n                  *(undefined8 *)(puVar27 + -8) = 0x40ea46;\n                  puVar24 = (undefined2 *)realloc(puVar20,(size_t)puVar31);\n                  if (puVar24 == (undefined2 *)0x0) goto LAB_0040eb65;\n                }\n              }\n            }\n            else {\n              if (puVar31 != (undefined *)0xffffffffffffffff) goto LAB_0040e950;\n              puVar14 = (undefined *)0xffffffffffffffff;\n            }\n            *(undefined *)((long)puVar24 + (long)__n) = 0x25;\n            puVar20 = puVar24;\n            __n = puVar14;\n            goto LAB_0040ea57;\n          }\n          if (lVar30 == -1) goto LAB_0040f08c;\n          puVar15 = (uint *)(local_670 + lVar30 * 0x10);\n          uVar4 = *puVar15;\n          local_698 = (undefined2 *)((ulong)local_698 & 0xffffffff00000000 | (ulong)uVar4);\n          if (bVar8 == 0x6e) {\n            switch(uVar4) {\n            case 0x12:\n              **(undefined **)(puVar15 + 4) = (char)__n;\n              break;\n            case 0x13:\n              **(undefined2 **)(puVar15 + 4) = (short)__n;\n              break;\n            case 0x14:\n              **(undefined4 **)(puVar15 + 4) = (int)__n;\n              break;\n            case 0x15:\n            case 0x16:\n              **(undefined8 **)(puVar15 + 4) = __n;\n              break;\n            default:\nswitchD_0040eabc_caseD_5:\n                    /* WARNING: Subroutine does not return */\n              *(undefined8 *)(puVar27 + -8) = 0x4023dc;\n              abort();\n            }\n          }\n          else {\n            bVar8 = bVar8 & 0xdf;\n            if (((((byte)(bVar8 + 0xbb) < 3) || (bVar8 == 0x41)) && (uVar4 == 0xc)) &&\n               (fVar34 = *(float10 *)(puVar15 + 4), fVar34 == fVar34 + fVar34)) {\n              pcVar21 = (char *)puVar32[4];\n              local_6b8._0_4_ = *(uint *)(puVar32 + 2);\n              if ((char *)puVar32[3] == pcVar21) {\n                puVar24 = (undefined2 *)0x0;\n              }\n              else {\n                puVar13 = (undefined2 *)puVar32[5];\n                if (puVar13 == (undefined2 *)0xffffffffffffffff) {\n                  puVar24 = (undefined2 *)0x0;\n                  local_698 = puVar13;\n                  pcVar25 = (char *)puVar32[3];\n                  do {\n                    pcVar26 = pcVar25 + 1;\n                    uVar11 = 0xffffffffffffffff;\n                    if (puVar24 < (undefined2 *)0x199999999999999a) {\n                      uVar11 = (long)puVar24 * 10;\n                    }\n                    puVar24 = (undefined2 *)((long)(*pcVar25 + -0x30) + uVar11);\n                    pcVar6 = pcVar26;\n                    if (CARRY8((long)(*pcVar25 + -0x30),uVar11)) {\n                      do {\n                        puVar24 = local_698;\n                        if (pcVar21 == pcVar6) goto LAB_0040e8e0;\n                        pcVar26 = pcVar6 + 1;\n                        cVar9 = *pcVar6;\n                        pcVar6 = pcVar26;\n                      } while (cVar9 != '0');\n                      puVar24 = (undefined2 *)0xffffffffffffffff;\n                    }\n                    pcVar25 = pcVar26;\n                  } while (pcVar21 != pcVar26);\n                }\n                else {\n                  if (*(int *)(local_670 + (long)puVar13 * 0x10) != 5) goto LAB_0040f08c;\n                  iVar10 = *(int *)((long)(local_670 + (long)puVar13 * 0x10) + 0x10);\n                  puVar24 = (undefined2 *)(long)iVar10;\n                  if (iVar10 < 0) {\n                    local_6b8._0_4_ = (uint)local_6b8 | 2;\n                    puVar24 = (undefined2 *)-(long)(undefined2 *)(long)iVar10;\n                  }\n                }\n              }\nLAB_0040e8e0:\n              pcVar21 = (char *)puVar32[7];\n              if ((char *)puVar32[6] == pcVar21) {\nLAB_0040ef90:\n                puVar18 = (undefined2 *)0xc;\n                if (bVar8 != 0x41) {\n                  puVar18 = (undefined2 *)0x12;\n                }\n                puVar13 = (undefined2 *)0x0;\n                if (bVar8 != 0x41) {\n                  puVar13 = (undefined2 *)0x6;\n                }\n              }\n              else {\n                if (puVar32[8] == -1) {\n                  pcVar25 = (char *)puVar32[6] + 1;\n                  puVar13 = (undefined2 *)0x0;\n                  if (pcVar21 != pcVar25) {\n                    do {\n                      pcVar26 = pcVar25 + 1;\n                      uVar11 = 0xffffffffffffffff;\n                      if (puVar13 < (undefined2 *)0x199999999999999a) {\n                        uVar11 = (long)puVar13 * 10;\n                      }\n                      puVar13 = (undefined2 *)((long)(*pcVar25 + -0x30) + uVar11);\n                      pcVar6 = pcVar26;\n                      if (CARRY8((long)(*pcVar25 + -0x30),uVar11)) {\n                        do {\n                          if (pcVar21 == pcVar6) goto LAB_0040e950;\n                          pcVar26 = pcVar6 + 1;\n                          cVar9 = *pcVar6;\n                          pcVar6 = pcVar26;\n                        } while (cVar9 != '0');\n                        puVar13 = (undefined2 *)0xffffffffffffffff;\n                      }\n                      pcVar25 = pcVar26;\n                    } while (pcVar21 != pcVar26);\n                    goto LAB_0040e91c;\n                  }\n                }\n                else {\n                  if (*(int *)(local_670 + puVar32[8] * 0x10) != 5) goto LAB_0040f08c;\n                  iVar10 = *(int *)((long)(local_670 + puVar32[8] * 0x10) + 0x10);\n                  puVar13 = (undefined2 *)(long)iVar10;\n                  if (iVar10 < 0) goto LAB_0040ef90;\nLAB_0040e91c:\n                  if (puVar13 != (undefined2 *)0x0) {\n                    puVar18 = puVar13 + 6;\n                    if (puVar13 < (undefined2 *)0xfffffffffffffff4) goto LAB_0040efae;\n                    goto LAB_0040e950;\n                  }\n                }\n                puVar18 = (undefined2 *)0xc;\n              }\nLAB_0040efae:\n              if (puVar18 <= puVar24) {\n                puVar18 = puVar24;\n              }\n              puVar17 = (undefined2 *)((long)puVar18 + 1);\n              local_698 = puVar17;\n              if (puVar18 == (undefined2 *)0xffffffffffffffff) goto LAB_0040e950;\n              if (puVar17 < (undefined2 *)0x2bd) {\n                puVar18 = local_2f8;\n              }\n              else {\n                local_6d0 = puVar24;\n                local_6c8 = puVar13;\n                local_6b8 = (undefined2 *)\n                            ((ulong)local_6b8 & 0xffffffff00000000 | (ulong)(uint)local_6b8);\n                _local_6a8 = fVar34;\n                if (puVar17 == (undefined2 *)0xffffffffffffffff) goto LAB_0040e950;\n                *(undefined8 *)(puVar27 + -8) = 0x40f002;\n                puVar18 = (undefined2 *)malloc((size_t)puVar17);\n                puVar13 = local_6c8;\n                puVar24 = local_6d0;\n                fVar34 = _local_6a8;\n                if (puVar18 == (undefined2 *)0x0) goto LAB_0040e950;\n              }\n              uVar4 = local_680 & 0xffff0000;\n              uVar29 = (uint)in_FPUControlWord;\n              local_680 = uVar4 | uVar29;\n              uVar7 = local_680;\n              local_680 = local_680 | 0x300;\n              if ((float10)0 <= fVar34) {\n                if (((uint)local_6b8 & 4) == 0) {\n                  puVar17 = puVar18;\n                  if (((uint)local_6b8 & 8) != 0) {\n                    puVar17 = (undefined2 *)((long)puVar18 + 1);\n                    *(undefined *)puVar18 = 0x20;\n                  }\n                }\n                else {\n                  *(undefined *)puVar18 = 0x2b;\n                  puVar17 = (undefined2 *)((long)puVar18 + 1);\n                }\n              }\n              else {\n                *(undefined *)puVar18 = 0x2d;\n                fVar34 = -fVar34;\n                puVar17 = (undefined2 *)((long)puVar18 + 1);\n              }\n              local_680._2_2_ = (undefined2)(uVar4 >> 0x10);\n              if (fVar34 <= (float10)0) {\n                if (fVar34 != (float10)0) goto LAB_0040f08c;\n                bVar8 = *(byte *)(puVar32 + 9) & 0xdf;\n                if (bVar8 == 0x46) {\n                  *(undefined *)puVar17 = 0x30;\n                  if ((((uint)local_6b8 & 0x10) == 0) && (puVar13 == (undefined2 *)0x0)) {\nLAB_0040f4d7:\n                    puVar13 = (undefined2 *)((long)puVar17 + 1);\n                  }\n                  else {\n                    local_6f0 = (undefined2 *)\n                                ((ulong)local_6f0 & 0xffffffff00000000 |\n                                (ulong)uVar7 & 0xffffffff0000ffff);\n                    local_6e8 = puVar24;\n                    local_6d0 = puVar18;\n                    local_6c8 = puVar13;\n                    local_6b8 = (undefined2 *)\n                                ((ulong)local_6b8 & 0xffffffff00000000 | (ulong)(uint)local_6b8);\n                    _local_6a8 = (float10)CONCAT28(auStack_6a4._4_2_,puVar17 + 1);\n                    *(undefined8 *)(puVar27 + -8) = 0x40fa11;\n                    pcVar21 = nl_langinfo(0x10000);\n                    cVar9 = *pcVar21;\n                    in_FPUControlWord = (ushort)local_6f0;\n                    if (cVar9 == '\\0') {\n                      cVar9 = '.';\n                    }\n                    *(char *)((long)puVar17 + 1) = cVar9;\n                    puVar18 = local_6d0;\n                    puVar13 = (undefined2 *)_local_6a8;\n                    puVar24 = local_6e8;\n                    if (local_6c8 != (undefined2 *)0x0) {\n                      do {\n                        puVar22 = (undefined2 *)((long)puVar13 + 1);\n                        *(undefined *)puVar13 = 0x30;\n                        puVar13 = puVar22;\n                      } while (puVar22 != (undefined2 *)((long)(puVar17 + 1) + (long)local_6c8));\n                      puVar13 = (undefined2 *)((long)_local_6a8 + (long)local_6c8);\n                    }\n                  }\n                }\n                else if (bVar8 == 0x45) {\n                  *(undefined *)puVar17 = 0x30;\n                  if ((((uint)local_6b8 & 0x10) != 0) ||\n                     (_local_6a8 = (int *)((long)puVar17 + 1), puVar13 != (undefined2 *)0x0)) {\n                    local_6f0 = (undefined2 *)\n                                ((ulong)local_6f0 & 0xffffffff00000000 |\n                                (ulong)uVar7 & 0xffffffff0000ffff);\n                    local_6e8 = puVar24;\n                    local_6d0 = puVar18;\n                    local_6c8 = puVar13;\n                    local_6b8 = (undefined2 *)\n                                ((ulong)local_6b8 & 0xffffffff00000000 | (ulong)(uint)local_6b8);\n                    _local_6a8 = (float10)CONCAT28(auStack_6a4._4_2_,puVar17 + 1);\n                    *(undefined8 *)(puVar27 + -8) = 0x40fc6f;\n                    pcVar21 = nl_langinfo(0x10000);\n                    cVar9 = *pcVar21;\n                    if (cVar9 == '\\0') {\n                      cVar9 = '.';\n                    }\n                    *(char *)((long)puVar17 + 1) = cVar9;\n                    puVar18 = local_6d0;\n                    puVar24 = local_6e8;\n                    in_FPUControlWord = (ushort)local_6f0;\n                    if (local_6c8 != (undefined2 *)0x0) {\n                      puVar14 = (undefined *)_local_6a8;\n                      do {\n                        puVar23 = puVar14 + 1;\n                        *puVar14 = 0x30;\n                        puVar14 = puVar23;\n                      } while (puVar23 != (undefined *)((long)(puVar17 + 1) + (long)local_6c8));\n                      _local_6a8 = (int *)((long)_local_6a8 + (long)local_6c8);\n                    }\n                  }\n                  uVar3 = *(undefined *)(puVar32 + 9);\n                  puVar13 = (undefined2 *)((long)_local_6a8 + 4);\n                  *(undefined *)((long)_local_6a8 + 3) = 0x30;\n                  *(undefined *)_local_6a8 = uVar3;\n                  *(undefined2 *)((long)_local_6a8 + 1) = 0x302b;\n                }\n                else if (bVar8 == 0x47) {\n                  *(undefined *)puVar17 = 0x30;\n                  if (((uint)local_6b8 & 0x10) == 0) goto LAB_0040f4d7;\n                  if (puVar13 == (undefined2 *)0x0) {\n                    local_6e8 = (undefined2 *)\n                                ((ulong)local_6e8 & 0xffffffff00000000 |\n                                (ulong)uVar7 & 0xffffffff0000ffff);\n                    local_6d0 = puVar24;\n                    local_6c8 = puVar17 + 1;\n                    local_6b8 = puVar18;\n                    _local_6a8 = (float10)CONCAT64(auStack_6a4._0_6_,(uint)local_6b8);\n                    *(undefined8 *)(puVar27 + -8) = 0x40fe27;\n                    pcVar21 = nl_langinfo(0x10000);\n                    cVar9 = *pcVar21;\n                    in_FPUControlWord = (ushort)local_6e8;\n                    if (cVar9 == '\\0') {\n                      cVar9 = '.';\n                    }\n                    *(char *)((long)puVar17 + 1) = cVar9;\n                    puVar18 = local_6b8;\n                    puVar13 = local_6c8;\n                    puVar24 = local_6d0;\n                    local_6b8._0_4_ = (uint)local_6a8;\n                  }\n                  else {\n                    local_6f4 = uVar29;\n                    local_6f0 = puVar24;\n                    local_6e8 = puVar17 + 1;\n                    local_6d0 = puVar18;\n                    local_6c8 = (undefined2 *)\n                                ((ulong)local_6c8 & 0xffffffff00000000 | (ulong)(uint)local_6b8);\n                    local_6b8 = puVar13;\n                    _local_6a8 = (float10)CONCAT28(auStack_6a4._4_2_,\n                                                   (undefined *)((long)puVar13 + -1));\n                    *(undefined8 *)(puVar27 + -8) = 0x40f93d;\n                    pcVar21 = nl_langinfo(0x10000);\n                    cVar9 = *pcVar21;\n                    in_FPUControlWord = (ushort)local_6f4;\n                    if (cVar9 == '\\0') {\n                      cVar9 = '.';\n                    }\n                    *(char *)((long)puVar17 + 1) = cVar9;\n                    puVar18 = local_6d0;\n                    puVar13 = local_6e8;\n                    puVar24 = local_6f0;\n                    local_6b8._0_4_ = (uint)local_6c8;\n                    if (_local_6a8 != (int *)0x0) {\n                      do {\n                        puVar22 = (undefined2 *)((long)puVar13 + 1);\n                        *(undefined *)puVar13 = 0x30;\n                        puVar13 = puVar22;\n                      } while (puVar22 !=\n                               (undefined2 *)((undefined *)((long)puVar17 + 1) + (long)local_6b8));\n                      puVar13 = (undefined2 *)((long)local_6e8 + (long)_local_6a8);\n                    }\n                  }\n                }\n                else {\n                  if (bVar8 != 0x41) goto LAB_0040f08c;\n                  *(undefined *)puVar17 = 0x30;\n                  _local_6a8 = (float10)CONCAT28(auStack_6a4._4_2_,puVar17 + 1);\n                  cVar9 = *(char *)(puVar32 + 9);\n                  *(undefined *)(puVar17 + 1) = 0x30;\n                  *(char *)((long)puVar17 + 1) = cVar9 + '\\x17';\n                  if ((((uint)local_6b8 & 0x10) != 0) ||\n                     (puVar22 = (undefined2 *)((long)puVar17 + 3), puVar13 != (undefined2 *)0x0)) {\n                    local_6f4 = uVar29;\n                    local_6f0 = puVar24;\n                    local_6e8 = puVar18;\n                    local_6d0 = puVar13;\n                    local_6c8 = (undefined2 *)\n                                ((ulong)local_6c8 & 0xffffffff00000000 | (ulong)(uint)local_6b8);\n                    local_6b8 = puVar17 + 2;\n                    *(undefined8 *)(puVar27 + -8) = 0x40fd89;\n                    pcVar21 = nl_langinfo(0x10000);\n                    cVar9 = *pcVar21;\n                    if (cVar9 == '\\0') {\n                      cVar9 = '.';\n                    }\n                    *(char *)((long)puVar17 + 3) = cVar9;\n                    puVar18 = local_6e8;\n                    puVar22 = local_6b8;\n                    puVar24 = local_6f0;\n                    local_6b8._0_4_ = (uint)local_6c8;\n                    uVar29 = local_6f4;\n                    if (local_6d0 != (undefined2 *)0x0) {\n                      puVar13 = local_6b8;\n                      do {\n                        puVar22 = (undefined2 *)((long)puVar13 + 1);\n                        *(undefined *)puVar13 = 0x30;\n                        puVar13 = puVar22;\n                      } while (puVar22 != (undefined2 *)((long)(puVar17 + 2) + (long)local_6d0));\n                      puVar22 = (undefined2 *)((long)local_6b8 + (long)local_6d0);\n                    }\n                  }\n                  in_FPUControlWord = (ushort)uVar29;\n                  cVar9 = *(char *)(puVar32 + 9);\n                  puVar13 = (undefined2 *)((long)puVar22 + 3);\n                  *(undefined2 *)((long)puVar22 + 1) = 0x302b;\n                  *(char *)puVar22 = cVar9 + '\\x0f';\n                  puVar17 = (undefined2 *)_local_6a8;\n                }\n              }\n              else {\n                if (fVar34 + fVar34 != fVar34) goto LAB_0040f08c;\n                puVar13 = (undefined2 *)((long)puVar17 + 3);\n                if ((byte)(*(char *)(puVar32 + 9) + 0xbfU) < 0x1a) {\n                  *(undefined *)(puVar17 + 1) = 0x46;\n                  *puVar17 = 0x4e49;\n                  puVar17 = (undefined2 *)0x0;\n                }\n                else {\n                  *(undefined *)(puVar17 + 1) = 0x66;\n                  *puVar17 = 0x6e69;\n                  puVar17 = (undefined2 *)0x0;\n                }\n              }\n              local_680 = CONCAT22(local_680._2_2_,in_FPUControlWord);\n              _local_6a8 = (int *)((long)puVar13 - (long)puVar18);\n              if (_local_6a8 < puVar24) {\n                lVar30 = (long)puVar24 - (long)_local_6a8;\n                puVar24 = (undefined2 *)((long)puVar13 + lVar30);\n                _local_6a8 = (int *)((long)puVar24 - (long)puVar18);\n                if (((uint)local_6b8 & 2) == 0) {\n                  if ((((uint)local_6b8 & 0x20) == 0) || (puVar17 == (undefined2 *)0x0)) {\n                    puVar14 = (undefined *)0xffffffffffffffff;\n                    puVar17 = puVar13;\n                    if (puVar18 < puVar13) {\n                      do {\n                        *(undefined *)((long)puVar24 + (long)puVar14) =\n                             *(undefined *)((long)puVar13 + (long)puVar14);\n                        puVar14 = puVar14 + -1;\n                        puVar17 = puVar18;\n                      } while ((undefined *)((long)puVar18 + (-1 - (long)puVar13)) != puVar14);\n                    }\n                    if (lVar30 != 0) {\n                      puVar24 = puVar17;\n                      do {\n                        puVar13 = (undefined2 *)((long)puVar24 + 1);\n                        *(undefined *)puVar24 = 0x20;\n                        puVar24 = puVar13;\n                      } while (puVar13 != (undefined2 *)(lVar30 + (long)puVar17));\n                    }\n                  }\n                  else {\n                    puVar22 = puVar13;\n                    if (puVar17 < puVar13) {\n                      puVar14 = (undefined *)0xffffffffffffffff;\n                      do {\n                        *(undefined *)((long)puVar24 + (long)puVar14) =\n                             *(undefined *)((long)puVar13 + (long)puVar14);\n                        puVar14 = puVar14 + -1;\n                        puVar22 = puVar17;\n                      } while (puVar14 != (undefined *)((long)puVar17 + (-1 - (long)puVar13)));\n                    }\n                    if (lVar30 != 0) {\n                      puVar24 = puVar22;\n                      do {\n                        puVar13 = (undefined2 *)((long)puVar24 + 1);\n                        *(undefined *)puVar24 = 0x30;\n                        puVar24 = puVar13;\n                      } while (puVar13 != (undefined2 *)(lVar30 + (long)puVar22));\n                    }\n                  }\n                }\n                else if (lVar30 != 0) {\n                  do {\n                    puVar17 = (undefined2 *)((long)puVar13 + 1);\n                    *(undefined *)puVar13 = 0x20;\n                    puVar13 = puVar17;\n                  } while (puVar24 != puVar17);\n                }\n              }\n              if (local_698 <= _local_6a8) {\nLAB_0040f08c:\n                    /* WARNING: Subroutine does not return */\n                *(undefined **)(puVar27 + -8) = &UNK_0040f091;\n                abort();\n              }\n              puVar14 = __n + (long)_local_6a8;\n              puVar24 = puVar20;\n              if (puVar31 + -(long)__n <= _local_6a8) {\n                if (CARRY8((ulong)__n,(ulong)_local_6a8) == false) {\n                  if (puVar31 < puVar14) {\n                    if (puVar31 == (undefined *)0x0) {\n                      if (puVar14 < (undefined *)0xd) {\n                        puVar31 = (undefined *)0xc;\n                      }\n                      else {\nLAB_0040fb8a:\n                        puVar31 = puVar14;\n                        if (puVar14 == (undefined *)0xffffffffffffffff) goto LAB_0040e950;\n                      }\n                    }\n                    else {\n                      if ((long)puVar31 < 0) goto LAB_0040e950;\n                      puVar31 = (undefined *)((long)puVar31 * 2);\n                      if (puVar31 < puVar14) goto LAB_0040fb8a;\n                    }\n                    if ((puVar20 == (undefined2 *)0x0) || (puVar20 == local_690)) {\n                      local_6b8 = (undefined2 *)\n                                  ((ulong)local_6b8 & 0xffffffffffffff00 |\n                                  (ulong)(puVar20 == local_690));\n                      local_698 = puVar18;\n                      *(undefined8 *)(puVar27 + -8) = 0x40f877;\n                      puVar24 = (undefined2 *)malloc((size_t)puVar31);\n                      if (puVar24 == (undefined2 *)0x0) goto LAB_0040e950;\n                      puVar18 = local_698;\n                      if ((__n != (undefined *)0x0) && ((char)local_6b8 != '\\0')) {\n                        *(undefined8 *)(puVar27 + -8) = 0x40f8c5;\n                        puVar24 = (undefined2 *)memcpy(puVar24,puVar20,(size_t)__n);\n                        puVar18 = local_698;\n                      }\n                    }\n                    else {\n                      local_698 = puVar18;\n                      *(undefined8 *)(puVar27 + -8) = 0x40f5f2;\n                      puVar24 = (undefined2 *)realloc(puVar20,(size_t)puVar31);\n                      if (puVar24 == (undefined2 *)0x0) goto LAB_0040e950;\n                      puVar18 = local_698;\n                    }\n                  }\n                }\n                else if (puVar31 != (undefined *)0xffffffffffffffff) goto LAB_0040e950;\n              }\n              local_698 = puVar18;\n              *(undefined8 *)(puVar27 + -8) = 0x40f626;\n              memcpy((undefined *)((long)puVar24 + (long)__n),puVar18,(size_t)_local_6a8);\n              puVar13 = local_698;\n              puVar20 = puVar24;\n              __n = puVar14;\n              if (local_698 != local_2f8) {\n                *(undefined8 *)(puVar27 + -8) = 0x40f645;\n                free(puVar13);\n              }\n            }\n            else {\n              uVar4 = *(uint *)(puVar32 + 2);\n              puVar24 = (undefined2 *)(local_6b0 + 1);\n              *local_6b0 = 0x25;\n              if ((uVar4 & 1) != 0) {\n                local_6b0[1] = 0x27;\n                puVar24 = (undefined2 *)(local_6b0 + 2);\n              }\n              if ((uVar4 & 2) != 0) {\n                *(undefined *)puVar24 = 0x2d;\n                puVar24 = (undefined2 *)((long)puVar24 + 1);\n              }\n              if ((uVar4 & 4) != 0) {\n                *(undefined *)puVar24 = 0x2b;\n                puVar24 = (undefined2 *)((long)puVar24 + 1);\n              }\n              if ((uVar4 & 8) != 0) {\n                *(undefined *)puVar24 = 0x20;\n                puVar24 = (undefined2 *)((long)puVar24 + 1);\n              }\n              if ((uVar4 & 0x10) != 0) {\n                *(undefined *)puVar24 = 0x23;\n                puVar24 = (undefined2 *)((long)puVar24 + 1);\n              }\n              if ((uVar4 & 0x40) != 0) {\n                *(undefined *)puVar24 = 0x49;\n                puVar24 = (undefined2 *)((long)puVar24 + 1);\n              }\n              if ((uVar4 & 0x20) != 0) {\n                *(undefined *)puVar24 = 0x30;\n                puVar24 = (undefined2 *)((long)puVar24 + 1);\n              }\n              pvVar5 = (void *)puVar32[3];\n              puVar13 = local_670;\n              if (pvVar5 != (void *)puVar32[4]) {\n                local_6b8 = local_670;\n                sVar28 = (long)(void *)puVar32[4] - (long)pvVar5;\n                _local_6a8 = (float10)CONCAT28(auStack_6a4._4_2_,sVar28);\n                *(undefined8 *)(puVar27 + -8) = 0x40e6f9;\n                memcpy(puVar24,pvVar5,sVar28);\n                puVar24 = (undefined2 *)((long)puVar24 + (long)_local_6a8);\n                puVar13 = local_6b8;\n              }\n              pvVar5 = (void *)puVar32[6];\n              if (pvVar5 != (void *)puVar32[7]) {\n                local_6b8 = puVar13;\n                sVar28 = (long)(void *)puVar32[7] - (long)pvVar5;\n                _local_6a8 = (float10)CONCAT28(auStack_6a4._4_2_,sVar28);\n                *(undefined8 *)(puVar27 + -8) = 0x40e736;\n                memcpy(puVar24,pvVar5,sVar28);\n                puVar24 = (undefined2 *)((long)puVar24 + (long)_local_6a8);\n                puVar13 = local_6b8;\n              }\n              if ((uint)local_698 < 0x11) {\n                uVar11 = 1L << ((byte)local_698 & 0x3f);\n                if ((uVar11 & 0x14180) == 0) {\n                  if ((uVar11 & 0x1000) == 0) {\n                    if ((uVar11 & 0x600) != 0) {\n                      *(undefined *)puVar24 = 0x6c;\n                      puVar24 = (undefined2 *)((long)puVar24 + 1);\n                      goto LAB_0040eb58;\n                    }\n                  }\n                  else {\n                    *(undefined *)puVar24 = 0x4c;\n                    puVar24 = (undefined2 *)((long)puVar24 + 1);\n                  }\n                }\n                else {\nLAB_0040eb58:\n                  *(undefined *)puVar24 = 0x6c;\n                  puVar24 = (undefined2 *)((long)puVar24 + 1);\n                }\n              }\n              uVar3 = *(undefined *)(puVar32 + 9);\n              *(undefined *)((long)puVar24 + 1) = 0;\n              *(undefined *)puVar24 = uVar3;\n              if (puVar32[5] == -1) {\n                local_6b8 = (undefined2 *)((ulong)local_6b8._4_4_ << 0x20);\n              }\n              else {\n                if (*(int *)(puVar13 + puVar32[5] * 0x10) != 5) goto LAB_0040f08c;\n                local_6b8 = (undefined2 *)CONCAT44(local_6b8._4_4_,1);\n                local_680 = *(uint *)((long)(puVar13 + puVar32[5] * 0x10) + 0x10);\n              }\n              if (puVar32[8] != -1) {\n                if (*(int *)(puVar13 + puVar32[8] * 0x10) != 5) goto LAB_0040f08c;\n                (&local_680)[(ulong)local_6b8 & 0xffffffff] =\n                     *(int *)((long)(puVar13 + puVar32[8] * 0x10) + 0x10);\n                local_6b8 = (undefined2 *)\n                            ((ulong)local_6b8 & 0xffffffff00000000 | (ulong)((uint)local_6b8 + 1));\n              }\n              puVar14 = __n + 2;\n              puVar13 = puVar20;\n              if (__n < (undefined *)0xfffffffffffffffe) {\n                if (puVar31 < puVar14) {\n                  if (puVar31 == (undefined *)0x0) {\n                    if (puVar14 < (undefined *)0xd) {\n                      puVar31 = (undefined *)0xc;\n                    }\n                    else {\nLAB_0040ef42:\n                      puVar31 = puVar14;\n                      if (puVar14 == (undefined *)0xffffffffffffffff) goto LAB_0040e950;\n                    }\n                  }\n                  else {\n                    if ((long)puVar31 < 0) goto LAB_0040e950;\n                    puVar31 = (undefined *)((long)puVar31 * 2);\n                    if (puVar31 < puVar14) goto LAB_0040ef42;\n                  }\n                  if ((puVar20 == (undefined2 *)0x0) || (puVar20 == local_690)) {\n                    _local_6a8 = (float10)CONCAT91(stack0xfffffffffffff959,puVar20 == local_690);\n                    *(undefined8 *)(puVar27 + -8) = 0x40f1ee;\n                    puVar13 = (undefined2 *)malloc((size_t)puVar31);\n                    if (puVar13 == (undefined2 *)0x0) goto LAB_0040e950;\n                    if ((__n != (undefined *)0x0) && (local_6a8[0] != '\\0')) {\n                      *(undefined8 *)(puVar27 + -8) = 0x40f220;\n                      puVar13 = (undefined2 *)memcpy(puVar13,puVar20,(size_t)__n);\n                    }\n                  }\n                  else {\n                    *(undefined8 *)(puVar27 + -8) = 0x40e848;\n                    puVar13 = (undefined2 *)realloc(puVar20,(size_t)puVar31);\n                    if (puVar13 == (undefined2 *)0x0) goto LAB_0040e950;\n                  }\n                }\n              }\n              else if (puVar31 != (undefined *)0xffffffffffffffff) goto LAB_0040e950;\n              *(undefined *)((long)puVar13 + (long)__n) = 0;\n              local_6c8 = puVar13;\n              *(undefined8 *)(puVar27 + -8) = 0x40e865;\n              puVar15 = (uint *)__errno_location();\n              puVar13 = local_6c8;\n              local_6c8 = puVar24;\n              _local_6a8 = (float10)CONCAT28(auStack_6a4._4_2_,puVar15);\n              local_6e8 = (undefined2 *)((ulong)local_6e8 & 0xffffffff00000000 | (ulong)*puVar15);\nLAB_0040e888:\n              uVar4 = local_680;\n              puVar14 = local_6b0;\n              local_684 = -1;\n              uVar12 = (long)puVar31 - (long)__n;\n              *_local_6a8 = 0;\n              uVar11 = 0x7fffffff;\n              if (uVar12 < 0x80000000) {\n                uVar11 = uVar12;\n              }\n              switch((ulong)local_698 & 0xffffffff) {\n              default:\n                goto switchD_0040eabc_caseD_5;\n              case 1:\n                uVar19 = (ulong)(uint)(int)*(char *)(local_670 + puVar32[10] * 0x10 + 8);\n                break;\n              case 2:\n                uVar19 = (ulong)*(byte *)(local_670 + puVar32[10] * 0x10 + 8);\n                break;\n              case 3:\n                uVar19 = (ulong)(uint)(int)(short)local_670[puVar32[10] * 0x10 + 8];\n                break;\n              case 4:\n                uVar19 = (ulong)(ushort)local_670[puVar32[10] * 0x10 + 8];\n                break;\n              case 5:\n              case 6:\n              case 0xd:\n              case 0xe:\n                uVar19 = (ulong)*(uint *)(local_670 + puVar32[10] * 0x10 + 8);\n                break;\n              case 7:\n              case 8:\n              case 9:\n              case 10:\n              case 0xf:\n              case 0x10:\n              case 0x11:\n                piVar16 = *(int **)(local_670 + puVar32[10] * 0x10 + 8);\n                local_6d0 = puVar13;\n                if ((uint)local_6b8 == 1) {\n                  *(int **)(puVar27 + -8) = &local_684;\n                  *(int **)(puVar27 + -0x10) = piVar16;\n                  goto LAB_0040f162;\n                }\n                if ((uint)local_6b8 != 2) {\n                  *(int **)(puVar27 + -0x10) = &local_684;\nLAB_0040ebca:\n                  puVar14 = local_6b0;\n                  *(undefined8 *)(puVar27 + -0x18) = 0x40ebe7;\n                  iVar10 = __snprintf_chk((undefined *)((long)puVar13 + (long)__n),uVar11,1,\n                                          0xffffffffffffffff,puVar14,piVar16);\n                  goto LAB_0040ebf0;\n                }\n                *(int **)(puVar27 + -0x10) = &local_684;\n                *(int **)(puVar27 + -0x18) = piVar16;\n                goto LAB_0040f116;\n              case 0xb:\n                local_6d0 = puVar13;\n                uVar1 = *(undefined8 *)(local_670 + puVar32[10] * 0x10 + 8);\n                if ((uint)local_6b8 == 1) {\n                  *(int **)(puVar27 + -0x10) = &local_684;\n                }\n                else {\n                  if ((uint)local_6b8 != 2) {\n                    *(undefined8 *)(puVar27 + -8) = 0x40eebe;\n                    iVar10 = __snprintf_chk(uVar1,(undefined *)((long)puVar13 + (long)__n),uVar11,1,\n                                            0xffffffffffffffff,puVar14,&local_684);\n                    goto LAB_0040ebf0;\n                  }\n                  *(int **)(puVar27 + -8) = &local_684;\n                  *(ulong *)(puVar27 + -0x10) = (ulong)local_67c;\n                }\n                uVar4 = local_680;\n                puVar14 = local_6b0;\n                *(undefined8 *)(puVar27 + -0x18) = 0x40f35e;\n                iVar10 = __snprintf_chk(uVar1,(undefined *)((long)puVar13 + (long)__n),uVar11,1,\n                                        0xffffffffffffffff,puVar14,uVar4);\n                goto LAB_0040ebf0;\n              case 0xc:\n                local_6d0 = puVar13;\n                Var2 = *(unkbyte10 *)(local_670 + puVar32[10] * 0x10 + 8);\n                if ((uint)local_6b8 != 1) {\n                  if ((uint)local_6b8 != 2) {\n                    piVar16 = &local_684;\n                    *(unkbyte10 *)(puVar27 + -0x10) = Var2;\n                    goto LAB_0040ebca;\n                  }\n                  *(int **)(puVar27 + -0x10) = &local_684;\n                  uVar19 = (ulong)local_67c;\n                  *(unkbyte10 *)(puVar27 + -0x20) = Var2;\n                  *(ulong *)(puVar27 + -0x30) = uVar19;\n                  *(undefined8 *)(puVar27 + -0x38) = 0x40f3bf;\n                  iVar10 = __snprintf_chk((undefined *)((long)puVar13 + (long)__n),uVar11,1,\n                                          0xffffffffffffffff,puVar14,uVar4);\n                  goto LAB_0040ebf0;\n                }\n                *(int **)(puVar27 + -0x10) = &local_684;\n                *(unkbyte10 *)(puVar27 + -0x20) = Var2;\n                goto LAB_0040f11d;\n              }\n              local_6d0 = puVar13;\n              if ((uint)local_6b8 == 1) {\n                *(int **)(puVar27 + -8) = &local_684;\n                *(ulong *)(puVar27 + -0x10) = uVar19;\nLAB_0040f162:\n                uVar19 = (ulong)local_680;\nLAB_0040ed0a:\n                puVar14 = local_6b0;\n                *(undefined8 *)(puVar27 + -0x18) = 0x40ed27;\n                iVar10 = __snprintf_chk((undefined *)((long)puVar13 + (long)__n),uVar11,1,\n                                        0xffffffffffffffff,puVar14,uVar19);\n                if (-1 < local_684) goto LAB_0040ebfe;\nLAB_0040ed3e:\n                puVar24 = local_6d0;\n                if (*(char *)((long)local_6c8 + 1) == '\\0') {\n                  if (iVar10 < 0) {\n                    iVar10 = *_local_6a8;\n                    if ((iVar10 == 0) && (iVar10 = 0x54, (*(byte *)(puVar32 + 9) & 0xef) != 99)) {\n                      iVar10 = 0x16;\n                    }\n                    if ((local_6d0 != local_690) && (local_6d0 != (undefined2 *)0x0)) {\n                      *(undefined8 *)(puVar27 + -8) = 0x40ed94;\n                      free(puVar24);\n                    }\n                    puVar31 = local_6e0;\n                    if (local_6e0 != (undefined *)0x0) {\n                      *(undefined8 *)(puVar27 + -8) = 0x40eda8;\n                      free(puVar31);\n                    }\n                    if (local_580 != auStack_568) {\n                      *(undefined8 *)(puVar27 + -8) = 0x40edc4;\n                      free(local_580);\n                    }\n                    if (local_670 != auStack_668) {\n                      *(undefined8 *)(puVar27 + -8) = 0x40ede0;\n                      free(local_670);\n                    }\n                    *_local_6a8 = iVar10;\n                    return (undefined2 *)0x0;\n                  }\n                  goto LAB_0040ec18;\n                }\n                *(undefined *)((long)local_6c8 + 1) = 0;\n                puVar13 = local_6d0;\n                goto LAB_0040e888;\n              }\n              if ((uint)local_6b8 != 2) {\n                *(int **)(puVar27 + -0x10) = &local_684;\n                goto LAB_0040ed0a;\n              }\n              *(int **)(puVar27 + -0x10) = &local_684;\n              *(ulong *)(puVar27 + -0x18) = uVar19;\nLAB_0040f116:\n              *(ulong *)(puVar27 + -0x20) = (ulong)local_67c;\nLAB_0040f11d:\n              uVar4 = local_680;\n              puVar14 = local_6b0;\n              *(undefined8 *)(puVar27 + -0x28) = 0x40f141;\n              iVar10 = __snprintf_chk((undefined *)((long)puVar13 + (long)__n),uVar11,1,\n                                      0xffffffffffffffff,puVar14,uVar4);\nLAB_0040ebf0:\n              if (local_684 < 0) goto LAB_0040ed3e;\nLAB_0040ebfe:\n              if (((ulong)(long)local_684 < uVar11) &&\n                 (((undefined *)((long)local_684 + (long)local_6d0))[(long)__n] != '\\0'))\n              goto LAB_0040f08c;\n              if (local_684 < iVar10) {\nLAB_0040ec18:\n                local_684 = iVar10;\n              }\n              puVar24 = local_6d0;\n              puVar20 = local_6d0;\n              if (uVar11 <= local_684 + 1) {\n                if (0x7ffffffe < uVar12) {\n                  if ((local_6d0 != local_690) && (local_6d0 != (undefined2 *)0x0)) {\n                    *(undefined8 *)(puVar27 + -8) = 0x40f426;\n                    free(puVar24);\n                  }\n                  puVar31 = local_6e0;\n                  if (local_6e0 != (undefined *)0x0) {\n                    *(undefined8 *)(puVar27 + -8) = 0x40f43a;\n                    free(puVar31);\n                  }\n                  if (local_580 != auStack_568) {\n                    *(undefined8 *)(puVar27 + -8) = 0x40f456;\n                    free(local_580);\n                  }\n                  if (local_670 != auStack_668) {\n                    *(undefined8 *)(puVar27 + -8) = 0x40f472;\n                    free(local_670);\n                  }\n                  *_local_6a8 = 0x4b;\n                  return (undefined2 *)0x0;\n                }\n                puVar13 = local_6d0;\n                if ((long)puVar31 < 0) {\n                  if (puVar31 != (undefined *)0xffffffffffffffff) goto LAB_0040e95f;\n                }\n                else {\n                  if (CARRY8((ulong)(local_684 + 2),(ulong)__n) != false) goto LAB_0040e95f;\n                  puVar14 = __n + (local_684 + 2);\n                  if (__n + (local_684 + 2) <= (undefined *)((long)puVar31 * 2)) {\n                    puVar14 = (undefined *)((long)puVar31 * 2);\n                  }\n                  if (puVar31 < puVar14) {\n                    puVar31 = (undefined *)((long)puVar31 * 2);\n                    if ((puVar31 < puVar14) &&\n                       (puVar31 = puVar14, puVar14 == (undefined *)0xffffffffffffffff))\n                    goto LAB_0040e95f;\n                    bVar33 = local_6d0 == local_690;\n                    if ((local_6d0 == (undefined2 *)0x0) || (bVar33)) {\n                      *(undefined8 *)(puVar27 + -8) = 0x40f0bf;\n                      puVar13 = (undefined2 *)malloc((size_t)puVar31);\n                      puVar24 = local_6d0;\n                      puVar20 = local_6d0;\n                      if (puVar13 == (undefined2 *)0x0) goto LAB_0040e95f;\n                      if ((__n != (undefined *)0x0) && (bVar33)) {\n                        *(undefined8 *)(puVar27 + -8) = 0x40f0ed;\n                        puVar13 = (undefined2 *)memcpy(puVar13,puVar24,(size_t)__n);\n                      }\n                    }\n                    else {\n                      *(undefined8 *)(puVar27 + -8) = 0x40ecad;\n                      puVar13 = (undefined2 *)realloc(puVar24,(size_t)puVar31);\n                      puVar20 = local_6d0;\n                      if (puVar13 == (undefined2 *)0x0) goto LAB_0040e95f;\n                    }\n                  }\n                }\n                goto LAB_0040e888;\n              }\n              __n = __n + local_684;\n              *_local_6a8 = local_6e8._0_4_;\n            }\n          }\nLAB_0040ea57:\n          _local_6a8 = (int *)puVar32[1];\n          puVar32 = puVar32 + 0xb;\n          puVar24 = (undefined2 *)*puVar32;\n          local_6c0 = local_6c0 + 1;\n          puVar14 = __n;\n        } while ((int *)puVar24 == _local_6a8);\n      } while( true );\n    }\n    puVar27 = auStack_6f8;\n    if (sVar28 != 0xffffffffffffffff) {\n      local_6b0 = (undefined *)malloc(sVar28);\n      puVar27 = auStack_6f8;\n      if (local_6b0 != (undefined *)0x0) {\n        local_6e0 = local_6b0;\n        puVar27 = auStack_6f8;\n        goto LAB_0040e424;\n      }\n    }\n  }\n  goto LAB_0040ea80;\nLAB_0040e950:\n  *(undefined8 *)(puVar27 + -8) = 0x40e955;\n  piVar16 = __errno_location();\n  _local_6a8 = (float10)CONCAT28(auStack_6a4._4_2_,piVar16);\nLAB_0040e95f:\n  if ((puVar20 != local_690) && (puVar20 != (undefined2 *)0x0)) {\nLAB_0040eb78:\n    *(undefined8 *)(puVar27 + -8) = 0x40eb80;\n    free(puVar20);\n  }\n  puVar31 = local_6e0;\n  if (local_6e0 != (undefined *)0x0) {\n    *(undefined8 *)(puVar27 + -8) = 0x40e989;\n    free(puVar31);\n    goto LAB_0040e989;\n  }\nLAB_0040ea80:\n  *(undefined8 *)(puVar27 + -8) = 0x40ea85;\n  piVar16 = __errno_location();\n  _local_6a8 = (float10)CONCAT28(auStack_6a4._4_2_,piVar16);\nLAB_0040e989:\n  if (local_580 != auStack_568) {\n    *(undefined8 *)(puVar27 + -8) = 0x40e9a5;\n    free(local_580);\n  }\n  if (local_670 != auStack_668) {\n    *(undefined8 *)(puVar27 + -8) = 0x40e9c1;\n    free(local_670);\n  }\n  *_local_6a8 = 0xc;\n  return (undefined2 *)0x0;\n}\n\n",
            "funcName": "FUN_0040e360"
        },
        {
            "funcStartAddr": "0x40fe80",
            "funcEndAddr": "0x40fe8e",
            "decompiledFuncCode": "\nvoid FUN_0040fe80(undefined8 param_1)\n\n{\n  FUN_0040fe90(param_1,0,3);\n  return;\n}\n\n",
            "funcName": "FUN_0040fe80"
        },
        {
            "funcStartAddr": "0x40fe90",
            "funcEndAddr": "0x40ffbc",
            "decompiledFuncCode": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint FUN_0040fe90(ulong param_1,int param_2,ulong param_3)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  int *piVar4;\n  \n  if (param_2 != 0x406) {\n    iVar1 = fcntl((int)param_1,param_2,param_3);\n    return iVar1;\n  }\n  if (DAT_006178a0 < 0) {\n    iVar1 = FUN_0040fe90(param_1,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    if (DAT_006178a0 != -1) {\n      return iVar1;\n    }\n  }\n  else {\n    iVar1 = fcntl((int)param_1,0x406);\n    if ((-1 < iVar1) || (piVar4 = __errno_location(), *piVar4 != 0x16)) {\n      DAT_006178a0 = 1;\n      return iVar1;\n    }\n    iVar1 = FUN_0040fe90(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    DAT_006178a0 = -1;\n  }\n  uVar2 = fcntl(iVar1,1);\n  if ((-1 < (int)uVar2) && (iVar3 = fcntl(iVar1,2,(ulong)(uVar2 | 1)), iVar3 != -1)) {\n    return iVar1;\n  }\n  piVar4 = __errno_location();\n  iVar3 = *piVar4;\n  close(iVar1);\n  *piVar4 = iVar3;\n  return -1;\n}\n\n",
            "funcName": "FUN_0040fe90"
        },
        {
            "funcStartAddr": "0x40ffd0",
            "funcEndAddr": "0x41018c",
            "decompiledFuncCode": "\nundefined8 FUN_0040ffd0(uint *param_1,ulong *param_2)\n\n{\n  uint uVar1;\n  undefined4 *puVar2;\n  unkbyte10 *pVar3;\n  undefined *puVar4;\n  char *pcVar5;\n  ulong uVar6;\n  undefined8 *puVar7;\n  undefined4 *puVar8;\n  char **ppcVar9;\n  \n  puVar2 = (undefined4 *)param_2[1];\n  if (*param_2 != 0) {\n    uVar6 = 0;\n    do {\n      switch(*puVar2) {\n      default:\n        return 0xffffffff;\n      case 1:\n      case 2:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar8 = (undefined4 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar8 = *(undefined4 **)(param_1 + 2);\n          *(undefined4 **)(param_1 + 2) = puVar8 + 2;\n        }\n        *(char *)(puVar2 + 4) = (char)*puVar8;\n        break;\n      case 3:\n      case 4:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar8 = (undefined4 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar8 = *(undefined4 **)(param_1 + 2);\n          *(undefined4 **)(param_1 + 2) = puVar8 + 2;\n        }\n        *(short *)(puVar2 + 4) = (short)*puVar8;\n        break;\n      case 5:\n      case 6:\n      case 0xd:\n      case 0xe:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar8 = (undefined4 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar8 = *(undefined4 **)(param_1 + 2);\n          *(undefined4 **)(param_1 + 2) = puVar8 + 2;\n        }\n        puVar2[4] = *puVar8;\n        break;\n      case 7:\n      case 8:\n      case 9:\n      case 10:\n      case 0x11:\n      case 0x12:\n      case 0x13:\n      case 0x14:\n      case 0x15:\n      case 0x16:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar7 = (undefined8 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar7 = *(undefined8 **)(param_1 + 2);\n          *(undefined8 **)(param_1 + 2) = puVar7 + 1;\n        }\n        *(undefined8 *)(puVar2 + 4) = *puVar7;\n        break;\n      case 0xb:\n        uVar1 = param_1[1];\n        if (uVar1 < 0xb0) {\n          puVar7 = (undefined8 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          param_1[1] = uVar1 + 0x10;\n        }\n        else {\n          puVar7 = *(undefined8 **)(param_1 + 2);\n          *(undefined8 **)(param_1 + 2) = puVar7 + 1;\n        }\n        *(undefined8 *)(puVar2 + 4) = *puVar7;\n        break;\n      case 0xc:\n        pVar3 = (unkbyte10 *)(*(long *)(param_1 + 2) + 0xfU & 0xfffffffffffffff0);\n        *(long *)(param_1 + 2) = (long)pVar3 + 0x10;\n        *(unkbyte10 *)(puVar2 + 4) = *pVar3;\n        break;\n      case 0xf:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          ppcVar9 = (char **)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          ppcVar9 = *(char ***)(param_1 + 2);\n          *(char ***)(param_1 + 2) = ppcVar9 + 1;\n        }\n        pcVar5 = *ppcVar9;\n        if (pcVar5 == (char *)0x0) {\n          pcVar5 = \"(NULL)\";\n        }\n        *(char **)(puVar2 + 4) = pcVar5;\n        break;\n      case 0x10:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar7 = (undefined8 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar7 = *(undefined8 **)(param_1 + 2);\n          *(undefined8 **)(param_1 + 2) = puVar7 + 1;\n        }\n        puVar4 = (undefined *)*puVar7;\n        if (puVar4 == (undefined *)0x0) {\n          puVar4 = &DAT_00413d60;\n        }\n        *(undefined **)(puVar2 + 4) = puVar4;\n      }\n      uVar6 = uVar6 + 1;\n      puVar2 = puVar2 + 8;\n    } while (uVar6 <= *param_2 && *param_2 != uVar6);\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040ffd0"
        },
        {
            "funcStartAddr": "0x4101f0",
            "funcEndAddr": "0x410ea6",
            "decompiledFuncCode": "\nundefined8 FUN_004101f0(byte *param_1,ulong *param_2,byte **param_3)\n\n{\n  ulong *puVar1;\n  byte **ppbVar2;\n  byte **ppbVar3;\n  byte bVar4;\n  uint uVar5;\n  int iVar6;\n  int iVar7;\n  ulong *__dest;\n  ulong uVar8;\n  int *piVar9;\n  byte **__dest_00;\n  byte *pbVar10;\n  byte *pbVar11;\n  byte *pbVar12;\n  byte *pbVar13;\n  byte *pbVar14;\n  ulong uVar15;\n  ulong uVar16;\n  byte bVar17;\n  byte *pbVar18;\n  byte **__ptr;\n  byte *pbVar19;\n  ulong uVar20;\n  ulong *__ptr_00;\n  bool bVar21;\n  ulong local_78;\n  ulong local_70;\n  byte *local_68;\n  \n  puVar1 = param_2 + 4;\n  ppbVar2 = param_3 + 2;\n  pbVar19 = (byte *)0x7;\n  uVar8 = 0;\n  *param_2 = 0;\n  param_2[1] = (ulong)puVar1;\n  *param_3 = (byte *)0x0;\n  param_3[1] = (byte *)ppbVar2;\n  local_70 = 0;\n  local_78 = 0;\n  local_68 = (byte *)0x0;\n  __dest = puVar1;\n  uVar20 = 7;\nLAB_0041026b:\n  do {\n    pbVar11 = param_1;\n    pbVar12 = (byte *)0xffffffffffffffff;\n    if (*pbVar11 == 0) {\n      __dest[uVar8 * 0xb] = (ulong)pbVar11;\n      param_2[2] = local_78;\n      param_2[3] = local_70;\n      return 0;\n    }\n    param_1 = pbVar11 + 1;\n  } while (*pbVar11 != 0x25);\n  ppbVar3 = (byte **)(__dest + uVar8 * 0xb);\n  *ppbVar3 = pbVar11;\n  *(undefined4 *)(ppbVar3 + 2) = 0;\n  ppbVar3[3] = (byte *)0x0;\n  ppbVar3[4] = (byte *)0x0;\n  ppbVar3[5] = (byte *)0xffffffffffffffff;\n  ppbVar3[6] = (byte *)0x0;\n  ppbVar3[7] = (byte *)0x0;\n  ppbVar3[8] = (byte *)0xffffffffffffffff;\n  ppbVar3[10] = (byte *)0xffffffffffffffff;\n  bVar17 = pbVar11[1];\n  pbVar11 = param_1;\n  pbVar18 = (byte *)0xffffffffffffffff;\n  if (9 < (byte)(bVar17 - 0x30)) {\nLAB_00410336:\n    do {\n      pbVar11 = param_1 + 1;\n      if (bVar17 == 0x27) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 1;\n      }\n      else if (bVar17 == 0x2d) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 2;\n      }\n      else if (bVar17 == 0x2b) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 4;\n      }\n      else if (bVar17 == 0x20) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 8;\n      }\n      else if (bVar17 == 0x23) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 0x10;\n      }\n      else if (bVar17 == 0x30) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 0x20;\n      }\n      else {\n        if (bVar17 != 0x49) goto LAB_00410398;\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 0x40;\n      }\n      bVar17 = *pbVar11;\n      param_1 = pbVar11;\n    } while( true );\n  }\n  do {\n    bVar4 = pbVar11[1];\n    pbVar11 = pbVar11 + 1;\n  } while ((byte)(bVar4 - 0x30) < 10);\n  pbVar18 = pbVar12;\n  if (bVar4 != 0x24) goto LAB_00410336;\n  pbVar11 = (byte *)0x0;\n  do {\n    pbVar18 = param_1;\n    pbVar14 = (byte *)0xffffffffffffffff;\n    if (pbVar11 < (byte *)0x199999999999999a) {\n      pbVar14 = (byte *)((long)pbVar11 * 10);\n    }\n    while( true ) {\n      iVar6 = (int)(char)bVar17;\n      bVar17 = pbVar18[1];\n      pbVar11 = pbVar14 + (iVar6 + -0x30);\n      param_1 = pbVar18 + 1;\n      if (CARRY8((long)(iVar6 + -0x30),(ulong)pbVar14) == false) break;\n      pbVar18 = param_1;\n      pbVar14 = pbVar12;\n      if (9 < (byte)(bVar17 - 0x30)) goto switchD_00410577_caseD_26;\n    }\n  } while ((byte)(bVar17 - 0x30) < 10);\n  if (pbVar11 + -1 < (byte *)0xfffffffffffffffe) {\n    param_1 = pbVar18 + 2;\n    bVar17 = pbVar18[2];\n    pbVar18 = pbVar11 + -1;\n    goto LAB_00410336;\n  }\n  goto switchD_00410577_caseD_26;\nLAB_00410398:\n  if (bVar17 != 0x2a) {\n    pbVar12 = local_68;\n    if ((byte)(bVar17 - 0x30) < 10) {\n      ppbVar3[3] = param_1;\n      pbVar14 = param_1;\n      uVar8 = local_78;\n      if ((byte)(*param_1 - 0x30) < 10) {\n        do {\n          pbVar11 = pbVar14;\n          pbVar14 = pbVar11 + 1;\n        } while ((byte)(pbVar11[1] - 0x30) < 10);\n        pbVar11 = pbVar11 + 2;\n        uVar8 = (long)pbVar14 - (long)param_1;\n        if ((ulong)((long)pbVar14 - (long)param_1) <= local_78) {\n          uVar8 = local_78;\n        }\n      }\n      local_78 = uVar8;\n      ppbVar3[4] = pbVar14;\n      bVar17 = *pbVar14;\n      param_1 = pbVar14;\n    }\njoined_r0x004104aa:\n    uVar8 = local_70;\n    local_68 = pbVar12;\n    if (bVar17 != 0x2e) goto LAB_004103b1;\n    bVar17 = param_1[1];\n    ppbVar3[6] = param_1;\n    if (bVar17 != 0x2a) {\n      if ((byte)(param_1[1] - 0x30) < 10) {\n        do {\n          pbVar11 = pbVar11 + 1;\n        } while ((byte)(*pbVar11 - 0x30) < 10);\n        uVar8 = (long)pbVar11 - (long)param_1;\n      }\n      else {\n        uVar8 = 1;\n      }\n      ppbVar3[7] = pbVar11;\n      bVar17 = *pbVar11;\n      param_1 = pbVar11;\n      if (uVar8 <= local_70) {\n        uVar8 = local_70;\n      }\n      goto LAB_004103b1;\n    }\n    pbVar11 = param_1 + 2;\n    ppbVar3[7] = pbVar11;\n    uVar8 = 2;\n    if (1 < local_70) {\n      uVar8 = local_70;\n    }\n    iVar6 = (int)(char)param_1[2];\n    pbVar14 = pbVar11;\n    if ((byte)(param_1[2] - 0x30) < 10) {\n      do {\n        bVar17 = pbVar14[1];\n        pbVar14 = pbVar14 + 1;\n      } while ((byte)(bVar17 - 0x30) < 10);\n      if (bVar17 != 0x24) goto LAB_004104ef;\n      uVar16 = 0;\n      do {\n        pbVar12 = pbVar11;\n        uVar15 = 0xffffffffffffffff;\n        if (uVar16 < 0x199999999999999a) {\n          uVar15 = uVar16 * 10;\n        }\n        while( true ) {\n          iVar7 = iVar6 + -0x30;\n          uVar16 = uVar15 + (long)iVar7;\n          pbVar11 = pbVar12 + 1;\n          iVar6 = (int)(char)*pbVar11;\n          bVar17 = *pbVar11 - 0x30;\n          if (CARRY8(uVar15,(long)iVar7) == false) break;\n          pbVar12 = pbVar11;\n          uVar15 = 0xffffffffffffffff;\n          if (9 < bVar17) goto switchD_00410577_caseD_26;\n        }\n      } while (bVar17 < 10);\n      pbVar14 = (byte *)(uVar16 - 1);\n      if ((byte *)0xfffffffffffffffd < pbVar14) goto switchD_00410577_caseD_26;\n      ppbVar3[8] = pbVar14;\n      pbVar11 = pbVar12 + 2;\n    }\n    else {\nLAB_004104ef:\n      pbVar14 = ppbVar3[8];\n      if (ppbVar3[8] == (byte *)0xffffffffffffffff) {\n        local_68 = pbVar12 + 1;\n        ppbVar3[8] = pbVar12;\n        pbVar14 = pbVar12;\n        if (pbVar12 == (byte *)0xffffffffffffffff) goto switchD_00410577_caseD_26;\n      }\n    }\n    __ptr = (byte **)param_3[1];\n    if (pbVar14 < pbVar19) {\n      pbVar12 = *param_3;\n      __dest_00 = __ptr;\nLAB_0041050e:\n      if (pbVar12 <= pbVar14) {\n        do {\n          pbVar12 = pbVar12 + 1;\n          *(undefined4 *)(__dest_00 + (long)pbVar12 * 4 + -4) = 0;\n        } while (pbVar12 <= pbVar14);\n        *param_3 = pbVar12;\n      }\n      iVar6 = *(int *)(__dest_00 + (long)pbVar14 * 4);\n      param_1 = pbVar11;\n      if (iVar6 == 0) {\n        *(undefined4 *)(__dest_00 + (long)pbVar14 * 4) = 5;\n        bVar17 = *pbVar11;\nLAB_004103b1:\n        local_70 = uVar8;\n        uVar5 = 0;\n        do {\n          param_1 = param_1 + 1;\n          if (bVar17 == 0x68) {\n            uVar5 = uVar5 | 1 << ((byte)uVar5 & 1);\n          }\n          else if (bVar17 == 0x4c) {\n            uVar5 = uVar5 | 4;\n          }\n          else {\n            if ((((bVar17 != 0x6c) && (bVar17 != 0x6a)) && ((bVar17 & 0xdf) != 0x5a)) &&\n               (bVar17 != 0x74)) goto code_r0x00410574;\n            uVar5 = uVar5 + 8;\n          }\n          bVar17 = *param_1;\n        } while( true );\n      }\n      if (iVar6 == 5) {\n        bVar17 = *pbVar11;\n        goto LAB_004103b1;\n      }\n      goto LAB_004109bc;\n    }\n    pbVar19 = (byte *)((long)pbVar19 * 2);\n    if (pbVar19 <= pbVar14) {\n      pbVar19 = pbVar14 + 1;\n    }\n    if (pbVar19 < (byte *)0x800000000000000) {\n      if (ppbVar2 == __ptr) {\n        __dest_00 = (byte **)malloc((long)pbVar19 << 5);\n        if (__dest_00 == (byte **)0x0) goto LAB_00410ba9;\n        pbVar12 = *param_3;\n        __ptr = ppbVar2;\nLAB_00410e5b:\n        memcpy(__dest_00,__ptr,(long)pbVar12 << 5);\n        pbVar12 = *param_3;\n      }\n      else {\n        __dest_00 = (byte **)realloc(__ptr,(long)pbVar19 << 5);\n        __ptr = (byte **)param_3[1];\n        if (__dest_00 == (byte **)0x0) goto LAB_00410b90;\n        pbVar12 = *param_3;\n        if (ppbVar2 == __ptr) goto LAB_00410e5b;\n      }\n      param_3[1] = (byte *)__dest_00;\n      goto LAB_0041050e;\n    }\n    goto LAB_00410b90;\n  }\n  ppbVar3[3] = param_1;\n  ppbVar3[4] = pbVar11;\n  uVar8 = 1;\n  if (local_78 != 0) {\n    uVar8 = local_78;\n  }\n  iVar6 = (int)(char)param_1[1];\n  pbVar14 = pbVar11;\n  if ((byte)(param_1[1] - 0x30) < 10) {\n    do {\n      bVar17 = pbVar14[1];\n      pbVar14 = pbVar14 + 1;\n    } while ((byte)(bVar17 - 0x30) < 10);\n    if (bVar17 != 0x24) goto LAB_0041043d;\n    pbVar14 = (byte *)0x0;\n    do {\n      pbVar10 = pbVar11;\n      pbVar13 = (byte *)0xffffffffffffffff;\n      if (pbVar14 < (byte *)0x199999999999999a) {\n        pbVar13 = (byte *)((long)pbVar14 * 10);\n      }\n      while( true ) {\n        iVar7 = iVar6 + -0x30;\n        pbVar14 = pbVar13 + iVar7;\n        iVar6 = (int)(char)pbVar10[1];\n        pbVar11 = pbVar10 + 1;\n        bVar17 = pbVar10[1] - 0x30;\n        if (CARRY8((ulong)pbVar13,(long)iVar7) == false) break;\n        pbVar10 = pbVar11;\n        pbVar13 = pbVar12;\n        if (9 < bVar17) goto switchD_00410577_caseD_26;\n      }\n    } while (bVar17 < 10);\n    pbVar14 = pbVar14 + -1;\n    if ((byte *)0xfffffffffffffffd < pbVar14) goto switchD_00410577_caseD_26;\n    ppbVar3[5] = pbVar14;\n    pbVar11 = pbVar10 + 2;\n  }\n  else {\nLAB_0041043d:\n    pbVar14 = ppbVar3[5];\n    if (ppbVar3[5] == (byte *)0xffffffffffffffff) {\n      ppbVar3[5] = local_68;\n      bVar21 = local_68 == (byte *)0xffffffffffffffff;\n      pbVar14 = local_68;\n      local_68 = local_68 + 1;\n      if (bVar21) goto switchD_00410577_caseD_26;\n    }\n  }\n  __ptr = (byte **)param_3[1];\n  if (pbVar14 < pbVar19) {\n    pbVar12 = *param_3;\n    __dest_00 = __ptr;\nLAB_0041045c:\n    if (pbVar12 <= pbVar14) {\n      do {\n        pbVar12 = pbVar12 + 1;\n        *(undefined4 *)(__dest_00 + (long)pbVar12 * 4 + -4) = 0;\n      } while (pbVar12 <= pbVar14);\n      *param_3 = pbVar12;\n    }\n    iVar6 = *(int *)(__dest_00 + (long)pbVar14 * 4);\n    param_1 = pbVar11;\n    local_78 = uVar8;\n    pbVar12 = local_68;\n    if (iVar6 == 0) {\n      *(undefined4 *)(__dest_00 + (long)pbVar14 * 4) = 5;\n      bVar17 = *pbVar11;\n      pbVar11 = pbVar11 + 1;\n    }\n    else {\n      if (iVar6 != 5) goto LAB_004109bc;\n      bVar17 = *pbVar11;\n      pbVar11 = pbVar11 + 1;\n    }\n    goto joined_r0x004104aa;\n  }\n  pbVar19 = (byte *)((long)pbVar19 * 2);\n  if (pbVar19 <= pbVar14) {\n    pbVar19 = pbVar14 + 1;\n  }\n  if ((byte *)0x7ffffffffffffff < pbVar19) goto LAB_00410b90;\n  if (ppbVar2 != __ptr) {\n    __dest_00 = (byte **)realloc(__ptr,(long)pbVar19 << 5);\n    __ptr = (byte **)param_3[1];\n    if (__dest_00 != (byte **)0x0) {\n      pbVar12 = *param_3;\n      if (ppbVar2 == __ptr) goto LAB_00410ca9;\n      goto LAB_0041077d;\n    }\n    goto LAB_00410b90;\n  }\n  __dest_00 = (byte **)malloc((long)pbVar19 << 5);\n  if (__dest_00 != (byte **)0x0) {\n    pbVar12 = *param_3;\n    __ptr = ppbVar2;\nLAB_00410ca9:\n    memcpy(__dest_00,__ptr,(long)pbVar12 << 5);\n    pbVar12 = *param_3;\nLAB_0041077d:\n    param_3[1] = (byte *)__dest_00;\n    goto LAB_0041045c;\n  }\n  goto LAB_00410ba9;\ncode_r0x00410574:\n  switch(bVar17) {\n  case 0x25:\n    goto switchD_00410577_caseD_25;\n  default:\n    goto switchD_00410577_caseD_26;\n  case 0x41:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x61:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n    iVar6 = 0xc;\n    if ((int)uVar5 < 0x10) {\n      iVar6 = ((uVar5 & 4) != 0) + 0xb;\n    }\n    break;\n  case 0x43:\n    iVar6 = 0xe;\n    bVar17 = 99;\n    break;\n  case 0x53:\n    iVar6 = 0x10;\n    bVar17 = 0x73;\n    break;\n  case 0x58:\n  case 0x6f:\n  case 0x75:\n  case 0x78:\n    iVar6 = 10;\n    if (((((int)uVar5 < 0x10) && ((uVar5 & 4) == 0)) && (iVar6 = 8, (int)uVar5 < 8)) &&\n       (iVar6 = 2, (uVar5 & 2) == 0)) {\n      iVar6 = (-(uint)((uVar5 & 1) == 0) & 2) + 4;\n    }\n    break;\n  case 99:\n    iVar6 = (7 < (int)uVar5) + 0xd;\n    break;\n  case 100:\n  case 0x69:\n    iVar6 = 9;\n    if ((((int)uVar5 < 0x10) && ((uVar5 & 4) == 0)) &&\n       ((iVar6 = 7, (int)uVar5 < 8 && (iVar6 = 1, (uVar5 & 2) == 0)))) {\n      iVar6 = (-(uint)((uVar5 & 1) == 0) & 2) + 3;\n    }\n    break;\n  case 0x6e:\n    iVar6 = 0x16;\n    if ((((int)uVar5 < 0x10) && ((uVar5 & 4) == 0)) &&\n       ((iVar6 = 0x15, (int)uVar5 < 8 && (iVar6 = 0x12, (uVar5 & 2) == 0)))) {\n      iVar6 = ((uVar5 & 1) == 0) + 0x13;\n    }\n    break;\n  case 0x70:\n    iVar6 = 0x11;\n    break;\n  case 0x73:\n    iVar6 = (7 < (int)uVar5) + 0xf;\n  }\n  if (pbVar18 == (byte *)0xffffffffffffffff) {\n    ppbVar3[10] = local_68;\n    bVar21 = local_68 == (byte *)0xffffffffffffffff;\n    pbVar18 = local_68;\n    local_68 = local_68 + 1;\n    if (bVar21) {\nswitchD_00410577_caseD_26:\n      __dest_00 = (byte **)param_3[1];\n      goto LAB_004109bc;\n    }\n  }\n  else {\n    ppbVar3[10] = pbVar18;\n  }\n  __ptr = (byte **)param_3[1];\n  __dest_00 = __ptr;\n  if (pbVar18 < pbVar19) {\nLAB_004105a5:\n    pbVar11 = *param_3;\n    if (pbVar11 <= pbVar18) {\n      do {\n        pbVar11 = pbVar11 + 1;\n        *(undefined4 *)(__dest_00 + (long)pbVar11 * 4 + -4) = 0;\n      } while (pbVar11 <= pbVar18);\n      *param_3 = pbVar11;\n    }\n    iVar7 = *(int *)(__dest_00 + (long)pbVar18 * 4);\n    if (iVar7 == 0) {\n      *(int *)(__dest_00 + (long)pbVar18 * 4) = iVar6;\n    }\n    else if (iVar7 != iVar6) {\nLAB_004109bc:\n      if (ppbVar2 != __dest_00) {\n        free(__dest_00);\n      }\n      if (puVar1 != (ulong *)param_2[1]) {\n        free((ulong *)param_2[1]);\n      }\n      piVar9 = __errno_location();\n      *piVar9 = 0x16;\n      return 0xffffffff;\n    }\nswitchD_00410577_caseD_25:\n    *(byte *)(ppbVar3 + 9) = bVar17;\n    uVar8 = *param_2;\n    ppbVar3[1] = param_1;\n    uVar8 = uVar8 + 1;\n    *param_2 = uVar8;\n    if (uVar8 < uVar20) {\n      __dest = (ulong *)param_2[1];\n      goto LAB_0041026b;\n    }\n    if (((long)uVar20 < 0) || (0x2e8ba2e8ba2e8ba < uVar20 * 2)) {\nLAB_00410ee3:\n      __ptr = (byte **)param_3[1];\n      goto LAB_00410b90;\n    }\n    __ptr_00 = (ulong *)param_2[1];\n    if (puVar1 != __ptr_00) {\n      __dest = (ulong *)realloc(__ptr_00,uVar20 * 0xb0);\n      if (__dest == (ulong *)0x0) goto LAB_00410ee3;\n      __ptr_00 = (ulong *)param_2[1];\n      uVar8 = *param_2;\n      if (puVar1 != __ptr_00) goto LAB_0041067f;\nLAB_004107a4:\n      __dest = (ulong *)memcpy(__dest,__ptr_00,uVar8 * 0x58);\n      uVar8 = *param_2;\nLAB_0041067f:\n      param_2[1] = (ulong)__dest;\n      uVar20 = uVar20 * 2;\n      goto LAB_0041026b;\n    }\n    __dest = (ulong *)malloc(uVar20 * 0xb0);\n    if (__dest != (ulong *)0x0) goto LAB_004107a4;\n    __ptr = (byte **)param_3[1];\n    if (ppbVar2 == __ptr) goto LAB_00410bb9;\n  }\n  else {\n    pbVar19 = (byte *)((long)pbVar19 * 2);\n    if (pbVar19 <= pbVar18) {\n      pbVar19 = pbVar18 + 1;\n    }\n    if (pbVar19 < (byte *)0x800000000000000) {\n      if (ppbVar2 == __ptr) {\n        __dest_00 = (byte **)malloc((long)pbVar19 << 5);\n        if (__dest_00 == (byte **)0x0) goto LAB_00410ba9;\nLAB_00410b46:\n        memcpy(__dest_00,__ptr,(long)*param_3 << 5);\nLAB_00410a8b:\n        param_3[1] = (byte *)__dest_00;\n        goto LAB_004105a5;\n      }\n      __dest_00 = (byte **)realloc(__ptr,(long)pbVar19 << 5);\n      if (__dest_00 != (byte **)0x0) {\n        __ptr = ppbVar2;\n        if (ppbVar2 == (byte **)param_3[1]) goto LAB_00410b46;\n        goto LAB_00410a8b;\n      }\n      goto LAB_00410ee3;\n    }\nLAB_00410b90:\n    if (ppbVar2 == __ptr) goto LAB_00410ba9;\n  }\n  free(__ptr);\nLAB_00410ba9:\n  if (puVar1 != (ulong *)param_2[1]) {\n    free((ulong *)param_2[1]);\n  }\nLAB_00410bb9:\n  piVar9 = __errno_location();\n  *piVar9 = 0xc;\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_004101f0"
        },
        {
            "funcStartAddr": "0x410f00",
            "funcEndAddr": "0x410f5d",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00410f33) */\n/* WARNING: Removing unreachable block (ram,0x00410f38) */\n\nvoid FUN_00410f00(void)\n\n{\n  __DT_INIT();\n  return;\n}\n\n",
            "funcName": "FUN_00410f00"
        },
        {
            "funcStartAddr": "0x410f60",
            "funcEndAddr": "0x410f61",
            "decompiledFuncCode": "\nvoid FUN_00410f60(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00410f60"
        },
        {
            "funcStartAddr": "0x410f70",
            "funcEndAddr": "0x410f88",
            "decompiledFuncCode": "\nvoid FUN_00410f70(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,DAT_00617308);\n  return;\n}\n\n",
            "funcName": "FUN_00410f70"
        },
        {
            "funcStartAddr": "0x410f88",
            "funcEndAddr": "0x410fa8",
            "decompiledFuncCode": "\nundefined8 FUN_00410f88(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  code **ppcVar1;\n  \n  for (ppcVar1 = (code **)&DAT_00616e30; *ppcVar1 != (code *)0xffffffffffffffff;\n      ppcVar1 = ppcVar1 + -1) {\n    (**ppcVar1)();\n  }\n  return param_3;\n}\n\n",
            "funcName": "FUN_00410f88"
        }
    ],
    "decompilerName": "Ghidra",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_df.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O"
}