{
    "funcCount": 149,
    "funcInfo": [
        {
            "funcStartAddr": "0x401d15",
            "funcEndAddr": "0x401d1a",
            "decompiledFuncCode": "\nvoid FUN_00401d15(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401d15"
        },
        {
            "funcStartAddr": "0x401d1a",
            "funcEndAddr": "0x401d1f",
            "decompiledFuncCode": "\nvoid FUN_00401d1a(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401d1a"
        },
        {
            "funcStartAddr": "0x401d1f",
            "funcEndAddr": "0x401d24",
            "decompiledFuncCode": "\nvoid FUN_00401d1f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401d1f"
        },
        {
            "funcStartAddr": "0x401d24",
            "funcEndAddr": "0x401d29",
            "decompiledFuncCode": "\nvoid FUN_00401d24(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401d24"
        },
        {
            "funcStartAddr": "0x401d2e",
            "funcEndAddr": "0x401d33",
            "decompiledFuncCode": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "thunk_401d2e"
        },
        {
            "funcStartAddr": "0x401d40",
            "funcEndAddr": "0x4025c9",
            "decompiledFuncCode": "\nundefined FUN_00401d40(int param_1,undefined8 *param_2)\n\n{\n  ulong uVar1;\n  char cVar2;\n  int iVar3;\n  undefined4 uVar4;\n  long lVar5;\n  void *__ptr;\n  char *pcVar6;\n  undefined8 uVar7;\n  int *piVar8;\n  undefined8 uVar9;\n  ulong uVar10;\n  uint uVar11;\n  uint uVar12;\n  ulong uVar13;\n  long lVar14;\n  long lVar15;\n  char local_4b;\n  char local_4a;\n  char local_49;\n  undefined4 local_44;\n  ulong local_40 [2];\n  \n  lVar5 = 0;\n  local_40[0] = 0;\n  FUN_00407110(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\n                 \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\"\n                );\n  textdomain(\"coreutils\");\n  FUN_0040cd90(FUN_004053d0);\n  if (1 < param_1) {\n    lVar5 = FUN_00409300((long)(param_1 + -1) << 3);\n  }\n  local_49 = '\\0';\n  local_4a = '\\0';\n  local_4b = '\\0';\n  uVar10 = 0;\n  __ptr = (void *)0x0;\n  uVar13 = 0;\nLAB_00401dd0:\n  do {\n    local_44 = 0xffffffff;\n    iVar3 = FUN_0040b9d0(param_1,param_2,\"-0123456789D:FJN:S::TW:abcde::fh:i::l:mn::o:rs::tvw:\",\n                         &PTR_s_pages_0040ebe0,&local_44);\n    uVar12 = (uint)uVar13;\n    if (iVar3 == -1) break;\n    if (9 < iVar3 - 0x30U) {\n      switch(iVar3) {\n      case 1:\n        if (((DAT_00614418 != 0) || (*DAT_00614630 != '+')) ||\n           (cVar2 = FUN_00402820(0xfffffffe,0x2b,DAT_00614630 + 1), cVar2 == '\\0')) {\n          uVar10 = 0;\n          *(char **)(lVar5 + uVar13 * 8) = DAT_00614630;\n          uVar13 = (ulong)(uVar12 + 1);\n          goto LAB_00401dd0;\n        }\n        break;\n      case 0x44:\n        DAT_006143c0 = DAT_00614630;\n        uVar10 = 0;\n        goto LAB_00401dd0;\n      case 0x46:\n      case 0x66:\n        DAT_00614447 = 1;\n        uVar10 = 0;\n        goto LAB_00401dd0;\n      case 0x4a:\n        DAT_0061443c = 1;\n        uVar10 = 0;\n        goto LAB_00401dd0;\n      case 0x4e:\n        uVar10 = 0;\n        DAT_00614280 = 0;\n        uVar7 = dcgettext(0,\"\\'-N NUMBER\\' invalid starting line number\",5);\n        DAT_0061427c = FUN_00409680(DAT_00614630,0xffffffff80000000,0x7fffffff,&DAT_0040ce63,uVar7,0\n                                   );\n        goto LAB_00401dd0;\n      case 0x53:\n        DAT_006143e0 = '\\x01';\n        PTR_DAT_00614270 = &DAT_0040ce63;\n        DAT_006143dc = 0;\n        local_49 = '\\0';\n        if (DAT_00614630 != (char *)0x0) {\n          FUN_00402920();\n          uVar10 = 0;\n          goto LAB_00401dd0;\n        }\n        break;\n      case 0x54:\n        DAT_006142b5 = 0;\n        uVar10 = 0;\n        DAT_0061444a = 0;\n        goto LAB_00401dd0;\n      case 0x57:\n        uVar10 = 0;\n        DAT_0061443d = '\\x01';\n        uVar7 = dcgettext(0,\"\\'-W PAGE_WIDTH\\' invalid number of characters\",5);\n        DAT_006142ac = FUN_00409680(DAT_00614630,1,0x7fffffff,&DAT_0040ce63,uVar7,0);\n        local_4a = '\\0';\n        goto LAB_00401dd0;\n      case 0x61:\n        DAT_00614445 = '\\x01';\n        uVar10 = 0;\n        DAT_006142b4 = 0;\n        goto LAB_00401dd0;\n      case 0x62:\n        DAT_00614444 = 1;\n        uVar10 = 0;\n        goto LAB_00401dd0;\n      case 99:\n        DAT_006143e9 = 1;\n        uVar10 = 0;\n        goto LAB_00401dd0;\n      case 100:\n        DAT_006143e8 = 1;\n        uVar10 = 0;\n        goto LAB_00401dd0;\n      case 0x65:\n        if (DAT_00614630 != (char *)0x0) {\n          FUN_004052e0(DAT_00614630,0x65,&DAT_006142a8,&DAT_006142a4);\n        }\n        DAT_00614435 = 1;\n        uVar10 = 0;\n        goto LAB_00401dd0;\n      case 0x68:\n        DAT_006143c8 = DAT_00614630;\n        uVar10 = 0;\n        goto LAB_00401dd0;\n      case 0x69:\n        if (DAT_00614630 != (char *)0x0) {\n          FUN_004052e0(DAT_00614630,0x69,&DAT_006142a0,&DAT_0061429c);\n        }\n        DAT_00614434 = 1;\n        uVar10 = 0;\n        goto LAB_00401dd0;\n      case 0x6c:\n        uVar10 = 0;\n        uVar7 = dcgettext(0,\"\\'-l PAGE_LENGTH\\' invalid number of lines\",5);\n        DAT_006142b0 = FUN_00409680(DAT_00614630,1,0x7fffffff,&DAT_0040ce63,uVar7,0);\n        goto LAB_00401dd0;\n      case 0x6d:\n        DAT_0061444f = '\\x01';\n        uVar10 = 0;\n        DAT_006142b4 = 0;\n        goto LAB_00401dd0;\n      case 0x6e:\n        DAT_006143fc = 1;\n        if (DAT_00614630 != (char *)0x0) {\n          uVar10 = 0;\n          FUN_004052e0(DAT_00614630,0x6e,&DAT_00614288,&DAT_00614278);\n          goto LAB_00401dd0;\n        }\n        break;\n      case 0x6f:\n        uVar10 = 0;\n        uVar7 = dcgettext(0,\"\\'-o MARGIN\\' invalid line offset\",5);\n        DAT_0061442c = FUN_00409680(DAT_00614630,0,0x7fffffff,&DAT_0040ce63,uVar7,0);\n        goto LAB_00401dd0;\n      case 0x72:\n        DAT_006143e1 = 1;\n        uVar10 = 0;\n        goto LAB_00401dd0;\n      case 0x73:\n        local_4b = DAT_006143e0;\n        local_49 = DAT_006143e0;\n        if (DAT_006143e0 == '\\0') {\n          if (DAT_00614630 == (char *)0x0) {\n            local_49 = '\\x01';\n            uVar10 = 0;\n            local_4b = '\\x01';\n          }\n          else {\n            FUN_00402920();\n            uVar10 = 0;\n            local_49 = '\\x01';\n            local_4b = '\\x01';\n          }\n          goto LAB_00401dd0;\n        }\n        break;\n      case 0x74:\n        DAT_006142b5 = 0;\n        uVar10 = 0;\n        DAT_0061444a = 1;\n        goto LAB_00401dd0;\n      case 0x76:\n        DAT_006143ea = 1;\n        uVar10 = 0;\n        goto LAB_00401dd0;\n      case 0x77:\n        uVar7 = dcgettext(0,\"\\'-w PAGE_WIDTH\\' invalid number of characters\",5);\n        uVar4 = FUN_00409680(DAT_00614630,1,0x7fffffff,&DAT_0040ce63,uVar7,0);\n        local_4b = DAT_0061443d;\n        local_4a = local_4b;\n        if (DAT_0061443d == '\\0') {\n          uVar10 = 0;\n          local_4a = '\\x01';\n          local_4b = '\\x01';\n          DAT_006142ac = uVar4;\n          goto LAB_00401dd0;\n        }\n        break;\n      case 0x80:\n        uVar10 = 0;\n        FUN_00402950(DAT_00614630);\n        free(__ptr);\n        local_40[0] = 0;\n        __ptr = (void *)0x0;\n        goto LAB_00401dd0;\n      case 0x81:\n        if (DAT_00614630 == (char *)0x0) {\n          uVar7 = dcgettext(0,\"\\'--pages=FIRST_PAGE[:LAST_PAGE]\\' missing argument\",5);\n                    /* WARNING: Subroutine does not return */\n          error(1,0,uVar7);\n        }\n        cVar2 = FUN_00402820(local_44,0);\n        if (cVar2 == '\\0') {\n          uVar7 = FUN_00408d30(DAT_00614630);\n          uVar9 = dcgettext(0,\"invalid page range %s\",5);\n                    /* WARNING: Subroutine does not return */\n          error(1,0,uVar9,uVar7);\n        }\n        break;\n      case -0x83:\n        FUN_004091c0(stdout,&DAT_0040ce7a,\"GNU coreutils\",PTR_DAT_006142b8,\"Pete TerMaat\",\n                     \"Roland Huebner\",0,iVar3 - 0x30U);\n                    /* WARNING: Subroutine does not return */\n        exit(0);\n      case -0x82:\n                    /* WARNING: Subroutine does not return */\n        FUN_00404de0(0);\n      default:\n                    /* WARNING: Subroutine does not return */\n        FUN_00404de0(1);\n      }\n      uVar10 = 0;\n      goto LAB_00401dd0;\n    }\n    uVar1 = uVar10 + 1;\n    if (local_40[0] <= uVar1) {\n      __ptr = (void *)FUN_00409460(__ptr,local_40);\n    }\n    *(char *)((long)__ptr + uVar10) = (char)iVar3;\n    *(undefined *)((long)__ptr + uVar1) = 0;\n    uVar10 = uVar1;\n  } while( true );\n  if (__ptr != (void *)0x0) {\n    FUN_00402950(__ptr);\n    free(__ptr);\n  }\n  if (DAT_006143c0 == (char *)0x0) {\n    pcVar6 = getenv(\"POSIXLY_CORRECT\");\n    if ((pcVar6 == (char *)0x0) || (cVar2 = FUN_00405590(2), cVar2 != '\\0')) {\n      DAT_006143c0 = \"%Y-%m-%d %H:%M\";\n    }\n    else {\n      DAT_006143c0 = \"%b %e %H:%M %Y\";\n    }\n  }\n  pcVar6 = getenv(\"TZ\");\n  DAT_006143b8 = FUN_0040bba0(pcVar6);\n  cVar2 = DAT_0061444f;\n  if (DAT_00614418 == 0) {\n    DAT_00614418 = 1;\n  }\n  if (DAT_0061444f != '\\0') {\n    if (DAT_0061444b != '\\0') {\n      uVar7 = dcgettext(0,\"cannot specify number of columns when printing in parallel\",5);\n                    /* WARNING: Subroutine does not return */\n      error(1,0,uVar7);\n    }\n    if (DAT_00614445 != '\\0') {\n      uVar7 = dcgettext(0,\"cannot specify both printing across and printing in parallel\",5);\n                    /* WARNING: Subroutine does not return */\n      error(1,0,uVar7);\n    }\n  }\n  if (local_4b == '\\0') goto LAB_0040233f;\n  if (local_4a == '\\0') {\n    if ((((DAT_006143e0 == '\\x01') || (local_49 == '\\0')) ||\n        ((DAT_0061444f == '\\0' && (DAT_0061444b == '\\0')))) ||\n       ((DAT_0061443d == '\\0' && (DAT_0061443c = 1, DAT_006143dc < 1)))) goto LAB_0040233f;\n  }\n  else {\n    if ((DAT_0061444f == '\\0') && (DAT_0061444b == '\\0')) {\n      DAT_0061443c = 1;\n      goto LAB_0040233f;\n    }\n    DAT_0061443d = '\\x01';\n    if (local_49 == '\\0') goto LAB_0040233f;\n  }\n  DAT_006143e0 = '\\x01';\nLAB_0040233f:\n  if (DAT_00614338._4_4_ < param_1) {\n    param_2 = param_2 + DAT_00614338._4_4_;\n    uVar11 = (param_1 - DAT_00614338._4_4_) + uVar12;\n    do {\n      uVar7 = *param_2;\n      uVar12 = (int)uVar13 + 1;\n      param_2 = param_2 + 1;\n      *(undefined8 *)(lVar5 + uVar13 * 8) = uVar7;\n      uVar13 = (ulong)uVar12;\n      DAT_00614338._4_4_ = param_1;\n    } while (uVar12 != uVar11);\n  }\n  if (uVar12 == 0) {\n    FUN_00403e40(0,0);\n  }\n  else if (cVar2 == '\\0') {\n    lVar14 = lVar5;\n    do {\n      lVar15 = lVar14 + 8;\n      FUN_00403e40(1,lVar14);\n      lVar14 = lVar15;\n    } while (lVar5 + 8 + (ulong)(uVar12 - 1) * 8 != lVar15);\n  }\n  else {\n    FUN_00403e40(uVar12,lVar5);\n  }\n  free(DAT_006143f0);\n  free(DAT_00614398);\n  free(DAT_00614478);\n  free(DAT_00614458);\n  free(DAT_00614450);\n  free(DAT_00614470);\n  if ((DAT_00614446 != '\\0') && (iVar3 = FUN_0040aa20(stdin), iVar3 == -1)) {\n    uVar7 = dcgettext(0,\"standard input\",5);\n    piVar8 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n    error(1,*piVar8,uVar7);\n  }\n  return DAT_00614420;\n}\n\n",
            "funcName": "FUN_00401d40"
        },
        {
            "funcStartAddr": "0x4025d0",
            "funcEndAddr": "0x4025fb",
            "decompiledFuncCode": "\nvoid FUN_004025d0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00613ff0)\n            (FUN_00401d40,unaff_retaddr,&stack0x00000008,FUN_0040cd20,FUN_0040cd80,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "funcName": "FUN_004025d0"
        },
        {
            "funcStartAddr": "0x4025fb",
            "funcEndAddr": "0x40261a",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402608) */\n/* WARNING: Removing unreachable block (ram,0x00402612) */\n\nvoid FUN_004025fb(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_004025fb"
        },
        {
            "funcStartAddr": "0x40261a",
            "funcEndAddr": "0x402651",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402649) */\n\nvoid FUN_0040261a(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_0040261a"
        },
        {
            "funcStartAddr": "0x402651",
            "funcEndAddr": "0x4026a8",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402686) */\n\nvoid FUN_00402651(void)\n\n{\n  if (DAT_00614368 != '\\0') {\n    return;\n  }\n  FUN_004025fb();\n  DAT_00614368 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00402651"
        },
        {
            "funcStartAddr": "0x4026a8",
            "funcEndAddr": "0x4026ad",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402649) */\n\nvoid thunk_FUN_0040261a(void)\n\n{\n  return;\n}\n\n",
            "funcName": "thunk_4026a8"
        },
        {
            "funcStartAddr": "0x4026b0",
            "funcEndAddr": "0x402708",
            "decompiledFuncCode": "\nint FUN_004026b0(void)\n\n{\n  int iVar1;\n  long lVar2;\n  \n  iVar1 = DAT_00614298;\n  if (DAT_00614298 != 0) {\n    iVar1 = 0;\n    lVar2 = DAT_00614478;\n    do {\n      if ((*(uint *)(lVar2 + 0x10) < 2) ||\n         (((DAT_006142b4 != '\\0' && (0 < *(int *)(lVar2 + 0x2c))) && (0 < *(int *)(lVar2 + 0x30)))))\n      {\n        iVar1 = iVar1 + 1;\n      }\n      lVar2 = lVar2 + 0x40;\n    } while (lVar2 != ((ulong)(DAT_00614298 - 1) + 1) * 0x40 + DAT_00614478);\n  }\n  return iVar1;\n}\n\n",
            "funcName": "FUN_004026b0"
        },
        {
            "funcStartAddr": "0x402710",
            "funcEndAddr": "0x402782",
            "decompiledFuncCode": "\nvoid FUN_00402710(void)\n\n{\n  bool bVar1;\n  long lVar2;\n  long lVar3;\n  uint uVar4;\n  long lVar5;\n  \n  lVar2 = DAT_00614478;\n  if (DAT_00614298 != 0) {\n    bVar1 = false;\n    lVar5 = ((ulong)(DAT_00614298 - 1) + 1) * 0x40 + DAT_00614478;\n    lVar3 = DAT_00614478;\n    uVar4 = DAT_00614410;\n    do {\n      if (*(int *)(lVar3 + 0x10) == 2) {\n        *(undefined4 *)(lVar3 + 0x10) = 0;\n        uVar4 = uVar4 + 1;\n        bVar1 = true;\n      }\n      lVar3 = lVar3 + 0x40;\n    } while (lVar3 != lVar5);\n    if (bVar1) {\n      DAT_00614410 = uVar4;\n    }\n  }\n  if (DAT_006142b4 != '\\0') {\n    DAT_00614410 = (uint)(*(int *)(lVar2 + 0x10) != 3);\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00402710"
        },
        {
            "funcStartAddr": "0x402790",
            "funcEndAddr": "0x4027e5",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00402790(undefined param_1)\n\n{\n  if (DAT_00614468 < _DAT_00614460) {\n    *(undefined *)(DAT_00614470 + (ulong)DAT_00614468) = param_1;\n    DAT_00614468 = DAT_00614468 + 1;\n    return;\n  }\n  DAT_00614470 = FUN_00409460(DAT_00614470,&DAT_00614460);\n  *(undefined *)(DAT_00614470 + (ulong)DAT_00614468) = param_1;\n  DAT_00614468 = DAT_00614468 + 1;\n  return;\n}\n\n",
            "funcName": "FUN_00402790"
        },
        {
            "funcStartAddr": "0x4027f0",
            "funcEndAddr": "0x402816",
            "decompiledFuncCode": "\nvoid FUN_004027f0(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"integer overflow\",5);\n                    /* WARNING: Subroutine does not return */\n  error(1,0,uVar1);\n}\n\n",
            "funcName": "FUN_004027f0"
        },
        {
            "funcStartAddr": "0x402820",
            "funcEndAddr": "0x402916",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nsize_t FUN_00402820(undefined4 param_1,char param_2,char *param_3)\n\n{\n  char cVar1;\n  uint uVar2;\n  size_t sVar3;\n  undefined8 uVar4;\n  char *__s;\n  char *pcVar5;\n  char *local_40;\n  ulong local_38;\n  ulong local_30 [2];\n  \n  local_30[0] = 0xffffffffffffffff;\n  uVar2 = FUN_0040a5e0(param_3,&local_40,10,&local_38,&DAT_0040ce63);\n  if ((uVar2 & 0xfffffffd) != 0) {\nLAB_00402903:\n    __s = (char *)(ulong)uVar2;\n    FUN_0040a550(__s,param_1,(int)param_2,&PTR_s_pages_0040ebe0,param_3);\n    pcVar5 = __s;\n    sVar3 = strlen(__s);\n    if (0x7fffffff < sVar3) {\n      FUN_004027f0();\n      uVar4 = dcgettext(0,\"invalid number of columns\",5);\n      sVar3 = FUN_00409680(pcVar5,1,0x7fffffff,&DAT_0040ce63,uVar4,0,__s,param_3);\n      DAT_0061444b = 1;\n      DAT_00614298 = (int)sVar3;\n      return sVar3;\n    }\n    PTR_DAT_00614270 = __s;\n    DAT_006143dc = (int)sVar3;\n    return sVar3;\n  }\n  if ((local_40 != param_3) && (local_38 != 0)) {\n    cVar1 = *local_40;\n    if (cVar1 == ':') {\n      pcVar5 = local_40 + 1;\n      uVar2 = FUN_0040a5e0(pcVar5,&local_40,10,local_30,&DAT_0040ce63);\n      if (uVar2 != 0) goto LAB_00402903;\n      if (local_40 == pcVar5) {\n        return 0;\n      }\n      if (local_30[0] < local_38) {\n        return 0;\n      }\n      cVar1 = *local_40;\n    }\n    if (cVar1 == '\\0') {\n      DAT_00614418 = local_38;\n      _DAT_00614290 = local_30[0];\n      return 1;\n    }\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_00402820"
        },
        {
            "funcStartAddr": "0x402920",
            "funcEndAddr": "0x402950",
            "decompiledFuncCode": "\nvoid FUN_00402920(char *param_1)\n\n{\n  size_t sVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  \n  pcVar3 = param_1;\n  sVar1 = strlen(param_1);\n  if (sVar1 < 0x80000000) {\n    PTR_DAT_00614270 = param_1;\n    DAT_006143dc = (int)sVar1;\n    return;\n  }\n  FUN_004027f0();\n  uVar2 = dcgettext(0,\"invalid number of columns\",5);\n  DAT_00614298 = FUN_00409680(pcVar3,1,0x7fffffff,&DAT_0040ce63,uVar2,0,param_1);\n  DAT_0061444b = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00402920"
        },
        {
            "funcStartAddr": "0x402950",
            "funcEndAddr": "0x402991",
            "decompiledFuncCode": "\nvoid FUN_00402950(undefined8 param_1)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"invalid number of columns\",5);\n  DAT_00614298 = FUN_00409680(param_1,1,0x7fffffff,&DAT_0040ce63,uVar1,0);\n  DAT_0061444b = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00402950"
        },
        {
            "funcStartAddr": "0x4029a0",
            "funcEndAddr": "0x402a9b",
            "decompiledFuncCode": "\nvoid FUN_004029a0(FILE **param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  long lVar5;\n  \n  if (*(int *)(param_1 + 2) == 3) {\n    return;\n  }\n  if ((*(byte *)&(*param_1)->_flags & 0x20) == 0) {\n    iVar1 = fileno(*param_1);\n    if (iVar1 != 0) {\n      iVar1 = FUN_0040aa20(*param_1);\n      if (iVar1 != 0) {\n        uVar3 = FUN_00408bb0(0,3,param_1[1]);\n        piVar4 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n        error(1,*piVar4,\"%s\",uVar3);\n      }\n    }\n    if (DAT_0061444f == '\\0') {\n      if (DAT_00614298 != 0) {\n        lVar5 = ((ulong)(DAT_00614298 - 1) + 1) * 0x40 + DAT_00614478;\n        lVar2 = DAT_00614478;\n        do {\n          *(undefined4 *)(lVar2 + 0x10) = 3;\n          if (*(int *)(lVar2 + 0x2c) == 0) {\n            *(undefined4 *)(lVar2 + 0x30) = 0;\n          }\n          lVar2 = lVar2 + 0x40;\n        } while (lVar2 != lVar5);\n        DAT_00614410 = DAT_00614410 + -1;\n        return;\n      }\n    }\n    else {\n      *(undefined4 *)(param_1 + 2) = 3;\n      *(undefined4 *)(param_1 + 6) = 0;\n    }\n    DAT_00614410 = DAT_00614410 + -1;\n    return;\n  }\n  uVar3 = FUN_00408bb0(0,3,param_1[1]);\n  piVar4 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n  error(1,*piVar4,\"%s\",uVar3);\n}\n\n",
            "funcName": "FUN_004029a0"
        },
        {
            "funcStartAddr": "0x402ab0",
            "funcEndAddr": "0x402c87",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00402ab0(byte *param_1,int param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  long lVar6;\n  byte *pbVar7;\n  byte *pbVar8;\n  bool bVar9;\n  bool bVar10;\n  long local_128;\n  ulong uStack_120;\n  undefined local_118 [32];\n  undefined local_f8 [64];\n  stat local_b8;\n  \n  lVar6 = 2;\n  bVar9 = &stack0xffffffffffffffd8 < (undefined *)0x100;\n  bVar10 = &stack0x00000000 == (undefined *)0x128;\n  pbVar7 = param_1;\n  pbVar8 = &DAT_00410b71;\n  do {\n    if (lVar6 == 0) break;\n    lVar6 = lVar6 + -1;\n    bVar9 = *pbVar7 < *pbVar8;\n    bVar10 = *pbVar7 == *pbVar8;\n    pbVar7 = pbVar7 + 1;\n    pbVar8 = pbVar8 + 1;\n  } while (bVar10);\n  if ((!bVar9 && !bVar10) == bVar9) {\n    param_2 = -1;\n    iVar3 = -1;\n    if (_DAT_00614380 == 0) {\nLAB_00402bf4:\n      param_2 = iVar3;\n      FUN_00405550(&DAT_00614380);\n    }\n  }\n  else {\n    if ((-1 < param_2) && (iVar3 = __fxstat(1,param_2,&local_b8), iVar3 == 0)) {\n      local_128 = local_b8.st_mtim.tv_sec;\n      goto LAB_00402b09;\n    }\n    iVar3 = param_2;\n    if (_DAT_00614380 == 0) goto LAB_00402bf4;\n  }\n  local_128 = _DAT_00614380;\n  local_b8.st_mtim.tv_nsec = uRam0000000000614388;\nLAB_00402b09:\n  uStack_120 = local_b8.st_mtim.tv_nsec;\n  lVar6 = FUN_0040be80(DAT_006143b8,&local_128,local_f8);\n  if (lVar6 == 0) {\n    uVar4 = FUN_00409300(0x21);\n    uVar5 = FUN_004055f0(local_128,local_118);\n    __sprintf_chk(uVar4,1,0x21,\"%s.%09d\",uVar5,local_b8.st_mtim.tv_nsec & 0xffffffff);\n  }\n  else {\n    lVar6 = FUN_004070f0(0,0xffffffffffffffff,DAT_006143c0,local_f8,DAT_006143b8,\n                         local_b8.st_mtim.tv_nsec & 0xffffffff);\n    uVar4 = FUN_00409300(lVar6 + 1);\n    FUN_004070f0(uVar4,lVar6 + 1,DAT_006143c0,local_f8,DAT_006143b8,\n                 local_b8.st_mtim.tv_nsec & 0xffffffff);\n  }\n  free(DAT_006143b0);\n  iVar3 = DAT_006142ac;\n  DAT_006143a8 = DAT_006143c8;\n  if ((DAT_006143c8 == (byte *)0x0) && (DAT_006143a8 = &DAT_0040ce63, -1 < param_2)) {\n    DAT_006143a8 = param_1;\n  }\n  DAT_006143b0 = (void *)uVar4;\n  iVar1 = FUN_00405850(uVar4,0);\n  iVar2 = FUN_00405850(DAT_006143a8,0);\n  DAT_006143a0 = (iVar3 - iVar1) - iVar2;\n  return;\n}\n\n",
            "funcName": "FUN_00402ab0"
        },
        {
            "funcStartAddr": "0x402ca0",
            "funcEndAddr": "0x402d02",
            "decompiledFuncCode": "\nvoid FUN_00402ca0(int param_1)\n\n{\n  char *pcVar1;\n  int iVar2;\n  \n  iVar2 = DAT_00614428;\n  if (DAT_00614434 != '\\0') {\n    DAT_00614430 = param_1 - DAT_00614428;\n    return;\n  }\n  while (iVar2 = iVar2 + 1, iVar2 <= param_1) {\n    pcVar1 = stdout->_IO_write_ptr;\n    if (pcVar1 < stdout->_IO_write_end) {\n      stdout->_IO_write_ptr = pcVar1 + 1;\n      *pcVar1 = ' ';\n    }\n    else {\n      __overflow(stdout,0x20);\n    }\n  }\n  DAT_00614428 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00402ca0"
        },
        {
            "funcStartAddr": "0x402d10",
            "funcEndAddr": "0x402dc0",
            "decompiledFuncCode": "\nchar * FUN_00402d10(void)\n\n{\n  int iVar1;\n  byte *pbVar2;\n  byte bVar3;\n  uint uVar4;\n  char *pcVar5;\n  int iVar6;\n  int iVar7;\n  \n  iVar7 = DAT_00614430 + DAT_00614428;\n  iVar6 = DAT_00614428;\n  while (bVar3 = DAT_006142a0, pcVar5 = (char *)(ulong)(uint)(iVar7 - iVar6), 1 < iVar7 - iVar6) {\n    pcVar5 = (char *)((long)iVar6 / (long)DAT_0061429c & 0xffffffff);\n    iVar1 = (DAT_0061429c - iVar6 % DAT_0061429c) + iVar6;\n    if (iVar7 < iVar1) break;\n    pbVar2 = (byte *)stdout->_IO_write_ptr;\n    iVar6 = iVar1;\n    if (pbVar2 < stdout->_IO_write_end) {\n      stdout->_IO_write_ptr = (char *)(pbVar2 + 1);\n      *pbVar2 = bVar3;\n    }\n    else {\n      __overflow(stdout,(uint)DAT_006142a0);\n    }\n  }\n  while (iVar6 = iVar6 + 1, iVar6 <= iVar7) {\n    pcVar5 = stdout->_IO_write_ptr;\n    if (pcVar5 < stdout->_IO_write_end) {\n      stdout->_IO_write_ptr = pcVar5 + 1;\n      *pcVar5 = ' ';\n    }\n    else {\n      uVar4 = __overflow(stdout,0x20);\n      pcVar5 = (char *)(ulong)uVar4;\n    }\n  }\n  DAT_00614428 = iVar7;\n  DAT_00614430 = 0;\n  return pcVar5;\n}\n\n",
            "funcName": "FUN_00402d10"
        },
        {
            "funcStartAddr": "0x402dd0",
            "funcEndAddr": "0x402ec3",
            "decompiledFuncCode": "\nvoid FUN_00402dd0(void)\n\n{\n  byte bVar1;\n  byte *pbVar2;\n  byte *pbVar3;\n  int iVar4;\n  byte *pbVar5;\n  int iVar6;\n  \n  pbVar5 = PTR_DAT_00614270;\n  iVar4 = DAT_006143dc;\n  if (DAT_006143d8 < 1) {\n    if (0 < DAT_00614430) {\n      FUN_00402d10();\n      return;\n    }\n    return;\n  }\n  do {\n    iVar6 = iVar4 + (int)pbVar5;\n    pbVar3 = pbVar5;\n    while (pbVar2 = pbVar3, 0 < iVar6 - (int)pbVar3) {\n      while( true ) {\n        bVar1 = *pbVar2;\n        pbVar3 = pbVar2 + 1;\n        if (bVar1 == 0x20) break;\n        if (0 < DAT_00614430) {\n          FUN_00402d10();\n          bVar1 = *pbVar2;\n        }\n        pbVar2 = (byte *)stdout->_IO_write_ptr;\n        if (pbVar2 < stdout->_IO_write_end) {\n          stdout->_IO_write_ptr = (char *)(pbVar2 + 1);\n          *pbVar2 = bVar1;\n        }\n        else {\n          __overflow(stdout,(uint)bVar1);\n        }\n        DAT_00614428 = DAT_00614428 + 1;\n        pbVar2 = pbVar3;\n        if (iVar6 - (int)pbVar3 < 1) goto LAB_00402e61;\n      }\n      DAT_00614430 = DAT_00614430 + 1;\n    }\nLAB_00402e61:\n    iVar6 = 0;\n    if (-1 < iVar4) {\n      iVar6 = iVar4;\n    }\n    iVar4 = (iVar4 + -1) - iVar6;\n    pbVar5 = pbVar5 + iVar6;\n    if (0 < DAT_00614430) {\n      FUN_00402d10();\n    }\n    DAT_006143d8 = DAT_006143d8 + -1;\n    if (DAT_006143d8 < 1) {\n      return;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_00402dd0"
        },
        {
            "funcStartAddr": "0x402ee0",
            "funcEndAddr": "0x402fd8",
            "decompiledFuncCode": "\nvoid FUN_00402ee0(void)\n\n{\n  long lVar1;\n  int iVar2;\n  undefined8 uVar3;\n  int iVar4;\n  undefined auStack_138 [296];\n  \n  DAT_00614428 = 0;\n  FUN_00402ca0(DAT_0061442c);\n  FUN_00402d10();\n  lVar1 = DAT_00614408;\n  if (DAT_00614408 != 0) {\n    uVar3 = dcgettext(0,\"Page %lu\",5);\n    __sprintf_chk(auStack_138,1,0x114,uVar3,lVar1);\n    iVar4 = DAT_006143a0;\n    iVar2 = FUN_00405850(auStack_138,0);\n    iVar4 = iVar4 - iVar2;\n    if (iVar4 < 0) {\n      iVar4 = 0;\n    }\n    __printf_chk(1,\"\\n\\n%*s%s%*s%s%*s%s\\n\\n\\n\",DAT_0061442c,&DAT_0040ce63,DAT_006143b0,iVar4 >> 1,\n                 &DAT_00411057,DAT_006143a8,iVar4 - (iVar4 >> 1),&DAT_00411057,auStack_138);\n    DAT_00614448 = 0;\n    DAT_00614428 = 0;\n    return;\n  }\n  uVar3 = dcgettext(0,\"page number overflow\",5);\n                    /* WARNING: Subroutine does not return */\n  error(1,0,uVar3);\n}\n\n",
            "funcName": "FUN_00402ee0"
        },
        {
            "funcStartAddr": "0x402fe0",
            "funcEndAddr": "0x4031bb",
            "decompiledFuncCode": "\nint FUN_00402fe0(byte param_1)\n\n{\n  byte *pbVar1;\n  uint uVar2;\n  int iVar3;\n  int iVar4;\n  ushort **ppuVar5;\n  int iVar6;\n  byte *pbVar7;\n  byte local_1c;\n  byte local_1b;\n  byte local_1a;\n  byte *pbVar8;\n  \n  pbVar1 = DAT_00614398;\n  if (DAT_006142a8 == param_1) {\n    iVar3 = DAT_006142a4 - DAT_00614424 % DAT_006142a4;\n    if (DAT_00614435 == '\\0') goto LAB_00403084;\n    if (iVar3 == 0) {\n      return 0;\n    }\nLAB_004030f8:\n    pbVar1 = DAT_00614398 + (ulong)(iVar3 - 1) + 1;\n    pbVar8 = DAT_00614398;\n    do {\n      pbVar7 = pbVar8 + 1;\n      *pbVar8 = 0x20;\n      pbVar8 = pbVar7;\n      iVar4 = iVar3;\n    } while (pbVar7 != pbVar1);\nLAB_0040308c:\n    if (-1 < iVar3) goto LAB_00403090;\n    if (DAT_00614424 == 0) {\n      DAT_00614424 = 0;\n      return 0;\n    }\n    iVar6 = -iVar3;\n  }\n  else {\n    if (param_1 == 9) {\n      uVar2 = (uint)(DAT_00614424 >> 0x1f) >> 0x1d;\n      iVar3 = (uVar2 - (DAT_00614424 + uVar2 & 7)) + 8;\n      if (DAT_00614435 != '\\0') goto LAB_004030f8;\nLAB_00403084:\n      *DAT_00614398 = param_1;\n      iVar4 = 1;\n      goto LAB_0040308c;\n    }\n    ppuVar5 = __ctype_b_loc();\n    if ((*(byte *)((long)*ppuVar5 + (ulong)param_1 * 2 + 1) & 0x40) != 0) {\n      *pbVar1 = param_1;\n      DAT_00614424 = DAT_00614424 + 1;\n      return 1;\n    }\n    if (DAT_006143ea != '\\0') {\nLAB_00403148:\n      *pbVar1 = 0x5c;\n      __sprintf_chk(&local_1c,1,4,&DAT_0040ce4a,param_1);\n      pbVar1[1] = local_1c;\n      pbVar1[2] = local_1b;\n      pbVar1[3] = local_1a;\n      DAT_00614424 = DAT_00614424 + 4;\n      return 4;\n    }\n    if (DAT_006143e9 != '\\0') {\n      if (-1 < (char)param_1) {\n        *pbVar1 = 0x5e;\n        pbVar1[1] = param_1 ^ 0x40;\n        DAT_00614424 = DAT_00614424 + 2;\n        return 2;\n      }\n      goto LAB_00403148;\n    }\n    if (param_1 != 8) {\n      *pbVar1 = param_1;\n      return 1;\n    }\n    *pbVar1 = 8;\n    if (DAT_00614424 == 0) {\n      DAT_00614424 = 0;\n      return 0;\n    }\n    iVar6 = 1;\n    iVar3 = -1;\n    iVar4 = 1;\n  }\n  if (DAT_00614424 <= iVar6) {\n    DAT_00614424 = 0;\n    return iVar4;\n  }\nLAB_00403090:\n  DAT_00614424 = DAT_00614424 + iVar3;\n  return iVar4;\n}\n\n",
            "funcName": "FUN_00402fe0"
        },
        {
            "funcStartAddr": "0x4031e0",
            "funcEndAddr": "0x403271",
            "decompiledFuncCode": "\nvoid FUN_004031e0(byte param_1)\n\n{\n  byte *pbVar1;\n  ushort **ppuVar2;\n  \n  if (DAT_00614434 != '\\0') {\n    if (param_1 == 0x20) {\n      DAT_00614430 = DAT_00614430 + 1;\n      return;\n    }\n    if (0 < DAT_00614430) {\n      FUN_00402d10();\n    }\n    ppuVar2 = __ctype_b_loc();\n    if ((*(byte *)((long)*ppuVar2 + (ulong)param_1 * 2 + 1) & 0x40) == 0) {\n      if (param_1 == 8) {\n        DAT_00614428 = DAT_00614428 + -1;\n      }\n    }\n    else {\n      DAT_00614428 = DAT_00614428 + 1;\n    }\n  }\n  pbVar1 = (byte *)stdout->_IO_write_ptr;\n  if (pbVar1 < stdout->_IO_write_end) {\n    stdout->_IO_write_ptr = (char *)(pbVar1 + 1);\n    *pbVar1 = param_1;\n    return;\n  }\n  __overflow(stdout,(uint)param_1);\n  return;\n}\n\n",
            "funcName": "FUN_004031e0"
        },
        {
            "funcStartAddr": "0x403280",
            "funcEndAddr": "0x4033f0",
            "decompiledFuncCode": "\nundefined8 FUN_00403280(long param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  long lVar3;\n  long lVar4;\n  long lVar5;\n  char *pcVar6;\n  long lVar7;\n  \n  lVar2 = DAT_00614470;\n  lVar7 = (long)*(int *)(param_1 + 0x28);\n  DAT_006143d0 = 1;\n  *(int *)(param_1 + 0x28) = *(int *)(param_1 + 0x28) + 1;\n  iVar1 = *(int *)(DAT_00614458 + 4 + lVar7 * 4);\n  pcVar6 = (char *)(*(int *)(DAT_00614458 + lVar7 * 4) + lVar2);\n  if (DAT_00614448 != '\\0') {\n    FUN_00402ee0();\n  }\n  lVar3 = DAT_00614478;\n  if (*(int *)(param_1 + 0x10) == 1) {\n    if (0 < DAT_00614298) {\n      lVar5 = ((ulong)(DAT_00614298 - 1) + 1) * 0x40 + DAT_00614478;\n      lVar4 = DAT_00614478;\n      do {\n        *(undefined4 *)(lVar4 + 0x10) = 2;\n        lVar4 = lVar4 + 0x40;\n      } while (lVar4 != lVar5);\n    }\n    if (*(int *)(lVar3 + 0x30) < 1) {\n      if (DAT_006142b5 != '\\0') {\n        return 1;\n      }\n      DAT_006143d0 = 0;\n      return 1;\n    }\n  }\n  if (DAT_006143dc < DAT_006143d4) {\n    FUN_00402ca0(DAT_006143d4 - DAT_006143dc);\n    DAT_006143d4 = 0;\n  }\n  if (DAT_006143e0 != '\\0') {\n    FUN_00402dd0();\n  }\n  for (; pcVar6 != (char *)(lVar2 + iVar1); pcVar6 = pcVar6 + 1) {\n    FUN_004031e0((int)*pcVar6);\n  }\n  if ((DAT_00614430 == 0) &&\n     (DAT_00614428 = *(int *)(DAT_00614450 + lVar7 * 4) + *(int *)(param_1 + 0x34),\n     *(int *)(param_1 + 0x34) - DAT_006143dc == DAT_0061442c)) {\n    DAT_00614428 = DAT_00614428 - DAT_006143dc;\n    return 1;\n  }\n  return 1;\n}\n\n",
            "funcName": "FUN_00403280"
        },
        {
            "funcStartAddr": "0x403410",
            "funcEndAddr": "0x40347e",
            "decompiledFuncCode": "\nvoid FUN_00403410(undefined4 *param_1,undefined4 *param_2)\n\n{\n  long lVar1;\n  long lVar2;\n  bool bVar3;\n  \n  if (DAT_0061444f == '\\0') {\n    if (DAT_00614298 != 0) {\n      bVar3 = DAT_006142b4 == '\\0';\n      lVar2 = ((ulong)(DAT_00614298 - 1) + 1) * 0x40 + DAT_00614478;\n      lVar1 = DAT_00614478;\n      do {\n        *(uint *)(lVar1 + 0x10) = ~-(uint)bVar3 + 2;\n        lVar1 = lVar1 + 0x40;\n      } while (lVar1 != lVar2);\n    }\n    *param_2 = 0;\n    DAT_00614410 = DAT_00614410 + -1;\n    return;\n  }\n  *param_1 = 2;\n  DAT_00614410 = DAT_00614410 + -1;\n  *param_2 = 0;\n  return;\n}\n\n",
            "funcName": "FUN_00403410"
        },
        {
            "funcStartAddr": "0x403490",
            "funcEndAddr": "0x40369b",
            "decompiledFuncCode": "\nvoid FUN_00403490(_IO_FILE **param_1,int param_2)\n\n{\n  _IO_FILE *__stream;\n  byte *pbVar1;\n  char cVar2;\n  uint uVar3;\n  long lVar4;\n  long lVar5;\n  char cVar6;\n  \n  __stream = *param_1;\n  pbVar1 = (byte *)__stream->_IO_read_ptr;\n  if (pbVar1 < __stream->_IO_read_end) {\n    __stream->_IO_read_ptr = (char *)(pbVar1 + 1);\n    uVar3 = (uint)*pbVar1;\n  }\n  else {\n    uVar3 = __uflow(__stream);\n  }\n  cVar2 = DAT_00614390;\n  if (uVar3 == 0xc) {\n    if (*(char *)((long)param_1 + 0x39) == '\\0') {\n      if (DAT_00614390 == '\\0') {\n        cVar6 = '\\x01';\n      }\n      else {\n        *(undefined *)((long)param_1 + 0x39) = 1;\n        cVar6 = cVar2;\nLAB_00403597:\n        if (cVar2 != '\\0') {\n          if (DAT_0061444f == '\\0') {\n            if (DAT_00614298 != 0) {\n              lVar5 = ((ulong)(DAT_00614298 - 1) + 1) * 0x40 + DAT_00614478;\n              lVar4 = DAT_00614478;\n              do {\n                *(undefined *)(lVar4 + 0x39) = 0;\n                lVar4 = lVar4 + 0x40;\n              } while (lVar4 != lVar5);\n            }\n          }\n          else {\n            *(undefined *)((long)param_1 + 0x39) = 0;\n          }\n        }\n      }\n      pbVar1 = (byte *)__stream->_IO_read_ptr;\n      if (pbVar1 < __stream->_IO_read_end) {\n        __stream->_IO_read_ptr = (char *)(pbVar1 + 1);\n        uVar3 = (uint)*pbVar1;\n      }\n      else {\n        uVar3 = __uflow(__stream);\n      }\n      if (uVar3 == 10) {\n        FUN_00403410(param_1 + 2,param_1 + 6);\n      }\n      else {\n        ungetc(uVar3,__stream);\n        FUN_00403410(param_1 + 2,param_1 + 6);\n      }\n      goto LAB_004034e0;\n    }\n    pbVar1 = (byte *)__stream->_IO_read_ptr;\n    if (pbVar1 < __stream->_IO_read_end) {\n      __stream->_IO_read_ptr = (char *)(pbVar1 + 1);\n      uVar3 = (uint)*pbVar1;\n    }\n    else {\n      uVar3 = __uflow(__stream);\n    }\n    if (uVar3 == 10) {\n      pbVar1 = (byte *)__stream->_IO_read_ptr;\n      if (pbVar1 < __stream->_IO_read_end) {\n        __stream->_IO_read_ptr = (char *)(pbVar1 + 1);\n        uVar3 = (uint)*pbVar1;\n      }\n      else {\n        uVar3 = __uflow(__stream);\n      }\n    }\n    cVar6 = uVar3 == 0xc;\n    *(undefined *)((long)param_1 + 0x39) = 0;\n  }\n  else {\n    *(undefined *)((long)param_1 + 0x39) = 0;\n    cVar6 = false;\n  }\n  cVar2 = DAT_00614390;\n  if (DAT_00614390 != '\\0') {\n    *(undefined *)((long)param_1 + 0x39) = 1;\n    cVar2 = DAT_00614390;\n  }\n  while (DAT_00614390 = cVar2, uVar3 != 10) {\n    if (uVar3 == 0xc) goto LAB_00403597;\n    if (uVar3 == 0xffffffff) {\n      FUN_004029a0(param_1);\n      break;\n    }\n    pbVar1 = (byte *)__stream->_IO_read_ptr;\n    if (pbVar1 < __stream->_IO_read_end) {\n      __stream->_IO_read_ptr = (char *)(pbVar1 + 1);\n      uVar3 = (uint)*pbVar1;\n      cVar2 = DAT_00614390;\n    }\n    else {\n      uVar3 = __uflow(__stream);\n      cVar2 = DAT_00614390;\n    }\n  }\nLAB_004034e0:\n  if ((DAT_00614280 != '\\0') && (((DAT_0061444f != '\\x01' || (param_2 == 1)) && (cVar6 == '\\0')))) {\n    DAT_00614284 = DAT_00614284 + 1;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00403490"
        },
        {
            "funcStartAddr": "0x4036c0",
            "funcEndAddr": "0x4037d3",
            "decompiledFuncCode": "\nvoid FUN_004036c0(code **param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  char *pcVar3;\n  char *pcVar4;\n  char *pcVar5;\n  \n  iVar1 = __sprintf_chk(DAT_006143f0,1,0xffffffffffffffff,&DAT_0040ce4f,DAT_00614278,DAT_00614400);\n  DAT_00614400 = DAT_00614400 + 1;\n  uVar2 = DAT_00614278 - 1;\n  pcVar3 = (char *)((iVar1 - DAT_00614278) + DAT_006143f0);\n  pcVar5 = pcVar3;\n  if (0 < DAT_00614278) {\n    do {\n      pcVar4 = pcVar5 + 1;\n      (**param_1)((int)*pcVar5);\n      pcVar5 = pcVar4;\n    } while (pcVar4 != pcVar3 + (ulong)uVar2 + 1);\n  }\n  if (DAT_00614298 < 2) {\n    (**param_1)();\n    if (DAT_00614288 == '\\t') {\n      DAT_00614428 = (DAT_0061429c - DAT_00614428 % DAT_0061429c) + DAT_00614428;\n    }\n  }\n  else if (DAT_00614288 == '\\t') {\n    iVar1 = (DAT_006143f8 - DAT_00614278) + -1;\n    if (0 < DAT_006143f8 - DAT_00614278) {\n      do {\n        (**param_1)(0x20);\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -2;\n        (**param_1)(0x20);\n      } while (iVar1 != -1);\n    }\n  }\n  else {\n    (**param_1)();\n  }\n  if ((DAT_0061443d != '\\0') && (DAT_0061444f == '\\0')) {\n    DAT_00614424 = DAT_00614424 + DAT_006143f8;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_004036c0"
        },
        {
            "funcStartAddr": "0x4037e0",
            "funcEndAddr": "0x403837",
            "decompiledFuncCode": "\nvoid FUN_004037e0(long param_1)\n\n{\n  char cVar1;\n  \n  DAT_006143d4 = *(int *)(param_1 + 0x34);\n  if (DAT_006143dc < DAT_006143d4) {\n    FUN_00402ca0(DAT_006143d4 - DAT_006143dc);\n    DAT_006143d4 = 0;\n    if (DAT_006143e0 != '\\0') goto LAB_0040382a;\n  }\n  else if (DAT_006143e0 != '\\0') {\nLAB_0040382a:\n    FUN_00402dd0();\n    cVar1 = *(char *)(param_1 + 0x38);\n    goto joined_r0x00403833;\n  }\n  cVar1 = *(char *)(param_1 + 0x38);\njoined_r0x00403833:\n  if (cVar1 == '\\0') {\n    return;\n  }\n  FUN_004036c0(param_1 + 0x20);\n  return;\n}\n\n",
            "funcName": "FUN_004037e0"
        },
        {
            "funcStartAddr": "0x403840",
            "funcEndAddr": "0x403c3b",
            "decompiledFuncCode": "\nundefined8 FUN_00403840(_IO_FILE **param_1)\n\n{\n  char *pcVar1;\n  int iVar2;\n  int iVar3;\n  uint uVar4;\n  undefined8 uVar5;\n  byte *pbVar6;\n  byte *pbVar7;\n  char *pcVar8;\n  char *pcVar9;\n  _IO_FILE *p_Var10;\n  int unaff_R12D;\n  long lVar11;\n  long lVar12;\n  long lVar13;\n  \n  p_Var10 = *param_1;\n  pbVar6 = (byte *)p_Var10->_IO_read_ptr;\n  if (pbVar6 < p_Var10->_IO_read_end) {\n    p_Var10->_IO_read_ptr = (char *)(pbVar6 + 1);\n    uVar4 = (uint)*pbVar6;\n  }\n  else {\n    uVar4 = __uflow(p_Var10);\n  }\n  iVar2 = DAT_00614424;\n  if (uVar4 == 0xc) {\n    p_Var10 = *param_1;\n    pbVar6 = (byte *)p_Var10->_IO_read_ptr;\n    pbVar7 = (byte *)p_Var10->_IO_read_end;\n    if (*(char *)((long)param_1 + 0x39) == '\\0') goto LAB_00403adc;\n    if (pbVar6 < pbVar7) {\n      p_Var10->_IO_read_ptr = (char *)(pbVar6 + 1);\n      uVar4 = (uint)*pbVar6;\n    }\n    else {\n      uVar4 = __uflow(p_Var10);\n    }\n    if (uVar4 == 10) {\n      p_Var10 = *param_1;\n      pbVar6 = (byte *)p_Var10->_IO_read_ptr;\n      if (pbVar6 < p_Var10->_IO_read_end) {\n        p_Var10->_IO_read_ptr = (char *)(pbVar6 + 1);\n        uVar4 = (uint)*pbVar6;\n      }\n      else {\n        uVar4 = __uflow(p_Var10);\n      }\n    }\n  }\n  *(undefined *)((long)param_1 + 0x39) = 0;\n  if (uVar4 != 10) {\n    if (uVar4 == 0xc) {\n      p_Var10 = *param_1;\n      pbVar6 = (byte *)p_Var10->_IO_read_ptr;\n      pbVar7 = (byte *)p_Var10->_IO_read_end;\nLAB_00403adc:\n      if (pbVar6 < pbVar7) {\n        p_Var10->_IO_read_ptr = (char *)(pbVar6 + 1);\n        uVar4 = (uint)*pbVar6;\n      }\n      else {\n        uVar4 = __uflow(p_Var10);\n      }\n      if (uVar4 != 10) {\n        ungetc(uVar4,*param_1);\n      }\n      DAT_0061444c = 1;\n      if ((DAT_00614448 == '\\0') || (DAT_0061444c = 1, DAT_006142b4 != '\\0')) {\nLAB_00403b12:\n        if (DAT_0061444a != '\\0') {\n          DAT_00614449 = 1;\n        }\n      }\n      else {\n        DAT_006143d0 = 1;\n        FUN_00402ee0();\n      }\n      FUN_00403410(param_1 + 2,param_1 + 6);\n      return 1;\n    }\n    if (uVar4 == 0xffffffff) {\nLAB_00403978:\n      FUN_004029a0(param_1);\n      return 1;\n    }\n    unaff_R12D = FUN_00402fe0((int)(char)uVar4);\n  }\n  if ((DAT_0061443d == '\\0') || (DAT_00614424 <= DAT_00614438)) {\n    if (param_1[4] != (_IO_FILE *)FUN_00402790) {\n      DAT_006143d0 = 1;\n      if ((DAT_00614448 != '\\0') && (DAT_006142b4 == '\\0')) {\n        FUN_00402ee0();\n      }\n      iVar2 = DAT_006143d8;\n      if ((DAT_0061444f != '\\0') && (DAT_0061444e != '\\0')) {\n        DAT_006143d8 = 0;\n        if (0 < iVar2) {\n          lVar13 = ((ulong)(iVar2 - 1) + 1) * 0x40 + DAT_00614478;\n          lVar11 = DAT_00614478;\n          do {\n            lVar12 = lVar11 + 0x40;\n            FUN_004037e0(lVar11);\n            DAT_006143d8 = DAT_006143d8 + 1;\n            lVar11 = lVar12;\n          } while (lVar13 != lVar12);\n        }\n        DAT_006143d4 = *(int *)((long)param_1 + 0x34);\n        DAT_0061444e = '\\0';\n        DAT_00614430 = 0;\n        if (DAT_0061443d != '\\0') {\n          DAT_00614430 = DAT_00614438;\n        }\n      }\n      if (DAT_006143dc < DAT_006143d4) {\n        FUN_00402ca0(DAT_006143d4 - DAT_006143dc);\n        DAT_006143d4 = 0;\n      }\n      if (DAT_006143e0 != '\\0') {\n        FUN_00402dd0();\n      }\n    }\n    if (*(char *)(param_1 + 7) != '\\0') {\n      FUN_004036c0(param_1 + 4);\n    }\n    DAT_0061444d = 0;\n    uVar5 = 1;\n    if (uVar4 != 10) {\n      pcVar1 = DAT_00614398 + (ulong)(unaff_R12D - 1) + 1;\n      pcVar9 = DAT_00614398;\n      if (unaff_R12D != 0) {\n        do {\n          pcVar8 = pcVar9 + 1;\n          (*(code *)param_1[4])((int)*pcVar9);\n          pcVar9 = pcVar8;\n        } while (pcVar1 != pcVar8);\n      }\n      while( true ) {\n        p_Var10 = *param_1;\n        pbVar6 = (byte *)p_Var10->_IO_read_ptr;\n        if (pbVar6 < p_Var10->_IO_read_end) {\n          p_Var10->_IO_read_ptr = (char *)(pbVar6 + 1);\n          uVar4 = (uint)*pbVar6;\n        }\n        else {\n          uVar4 = __uflow(p_Var10);\n        }\n        iVar2 = DAT_00614424;\n        if (uVar4 == 10) {\n          return 1;\n        }\n        if (uVar4 == 0xc) {\n          p_Var10 = *param_1;\n          pbVar6 = (byte *)p_Var10->_IO_read_ptr;\n          if (pbVar6 < p_Var10->_IO_read_end) {\n            p_Var10->_IO_read_ptr = (char *)(pbVar6 + 1);\n            uVar4 = (uint)*pbVar6;\n          }\n          else {\n            uVar4 = __uflow(p_Var10);\n          }\n          if (uVar4 != 10) {\n            ungetc(uVar4,*param_1);\n          }\n          goto LAB_00403b12;\n        }\n        if (uVar4 == 0xffffffff) goto LAB_00403978;\n        iVar3 = FUN_00402fe0((int)(char)uVar4);\n        if ((DAT_0061443d != '\\0') && (DAT_00614438 < DAT_00614424)) break;\n        pcVar1 = DAT_00614398 + (ulong)(iVar3 - 1) + 1;\n        pcVar9 = DAT_00614398;\n        if (iVar3 != 0) {\n          do {\n            pcVar8 = pcVar9 + 1;\n            (*(code *)param_1[4])((int)*pcVar9);\n            pcVar9 = pcVar8;\n          } while (pcVar8 != pcVar1);\n        }\n      }\n      uVar5 = 0;\n      DAT_00614424 = iVar2;\n    }\n  }\n  else {\n    uVar5 = 0;\n    DAT_00614424 = iVar2;\n  }\n  return uVar5;\n}\n\n",
            "funcName": "FUN_00403840"
        },
        {
            "funcStartAddr": "0x403c80",
            "funcEndAddr": "0x403d5a",
            "decompiledFuncCode": "\nundefined8 FUN_00403c80(byte *param_1,long *param_2)\n\n{\n  long lVar1;\n  undefined8 uVar2;\n  int *piVar3;\n  long lVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  bool bVar7;\n  bool bVar8;\n  \n  lVar4 = 2;\n  bVar7 = &stack0xfffffffffffffff0 < &DAT_00000008;\n  bVar8 = &stack0x00000000 == &DAT_00000018;\n  pbVar5 = param_1;\n  pbVar6 = &DAT_00410b71;\n  do {\n    if (lVar4 == 0) break;\n    lVar4 = lVar4 + -1;\n    bVar7 = *pbVar5 < *pbVar6;\n    bVar8 = *pbVar5 == *pbVar6;\n    pbVar5 = pbVar5 + 1;\n    pbVar6 = pbVar6 + 1;\n  } while (bVar8);\n  if ((!bVar7 && !bVar8) == bVar7) {\n    lVar1 = dcgettext(0,\"standard input\",5);\n    lVar4 = stdin;\n    DAT_00614446 = 1;\n    param_2[1] = lVar1;\n    *param_2 = lVar4;\n  }\n  else {\n    param_2[1] = (long)param_1;\n    lVar4 = FUN_004054b0(param_1,\"r\");\n    *param_2 = lVar4;\n  }\n  if (lVar4 != 0) {\n    FUN_00405480(lVar4,2);\n    *(undefined4 *)(param_2 + 2) = 0;\n    *(undefined *)((long)param_2 + 0x39) = 0;\n    DAT_006143e4 = DAT_006143e4 + 1;\n    return 1;\n  }\n  DAT_00614420 = 1;\n  if (DAT_006143e1 == '\\0') {\n    uVar2 = FUN_00408bb0(0,3,param_1);\n    piVar3 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n    error(0,*piVar3,\"%s\",uVar2);\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_00403c80"
        },
        {
            "funcStartAddr": "0x403d80",
            "funcEndAddr": "0x403e30",
            "decompiledFuncCode": "\nvoid FUN_00403d80(_IO_FILE **param_1)\n\n{\n  _IO_FILE *__stream;\n  byte *pbVar1;\n  uint uVar2;\n  \n  __stream = *param_1;\n  while( true ) {\n    pbVar1 = (byte *)__stream->_IO_read_ptr;\n    if (pbVar1 < __stream->_IO_read_end) {\n      __stream->_IO_read_ptr = (char *)(pbVar1 + 1);\n      uVar2 = (uint)*pbVar1;\n      if (*pbVar1 == 10) {\n        return;\n      }\n    }\n    else {\n      uVar2 = __uflow(__stream);\n      if (uVar2 == 10) {\n        return;\n      }\n    }\n    if (uVar2 == 0xc) break;\n    if (uVar2 == 0xffffffff) {\n      FUN_004029a0(param_1);\n      return;\n    }\n  }\n  pbVar1 = (byte *)__stream->_IO_read_ptr;\n  if (pbVar1 < __stream->_IO_read_end) {\n    __stream->_IO_read_ptr = (char *)(pbVar1 + 1);\n    uVar2 = (uint)*pbVar1;\n  }\n  else {\n    uVar2 = __uflow(__stream);\n  }\n  if (uVar2 != 10) {\n    ungetc(uVar2,__stream);\n  }\n  if (DAT_0061444a != '\\0') {\n    DAT_00614449 = 1;\n  }\n  FUN_00403410(param_1 + 2,param_1 + 6);\n  return;\n}\n\n",
            "funcName": "FUN_00403d80"
        },
        {
            "funcStartAddr": "0x403e40",
            "funcEndAddr": "0x404d04",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00403e40(int param_1,undefined8 *param_2)\n\n{\n  undefined8 *puVar1;\n  char *pcVar2;\n  FILE *pFVar3;\n  undefined auVar4 [16];\n  char cVar5;\n  void *pvVar6;\n  void *pvVar7;\n  char cVar8;\n  int iVar9;\n  FILE **ppFVar10;\n  FILE **ppFVar11;\n  long lVar12;\n  FILE *pFVar13;\n  undefined8 uVar14;\n  byte bVar15;\n  int iVar16;\n  int iVar17;\n  int iVar18;\n  FILE **ppFVar19;\n  byte bVar20;\n  uint uVar21;\n  int iVar22;\n  int iVar23;\n  ulong uVar24;\n  byte bVar25;\n  ulong uVar26;\n  int local_40;\n  \n  DAT_00614440 = DAT_006142b0 + -10;\n  if (DAT_00614440 < 1) {\n    DAT_006142b5 = '\\0';\n    DAT_0061444a = '\\x01';\nLAB_004041be:\n    DAT_00614440 = DAT_006142b0;\n  }\n  else if (DAT_006142b5 == '\\0') goto LAB_004041be;\n  if (DAT_006143e8 != '\\0') {\n    DAT_00614440 = DAT_00614440 / 2;\n  }\n  if (param_1 == 0) {\n    DAT_0061444f = 0;\n  }\n  else if (DAT_0061444f != 0) {\n    DAT_00614298 = param_1;\n  }\n  if (DAT_006142b4 != '\\0') {\n    DAT_00614444 = '\\x01';\n  }\n  if (DAT_00614298 < 2) {\n    DAT_006142b4 = '\\0';\n  }\n  else {\n    if (DAT_006143e0 == 0) {\n      PTR_DAT_00614270 = &DAT_00411057;\n      DAT_006143dc = 1;\n      if (DAT_0061443c != '\\0') {\n        PTR_DAT_00614270 = &DAT_0040ce62;\n      }\n      DAT_006143e0 = 1;\n    }\n    else if (((DAT_0061443c == '\\0') && (DAT_006143dc == 1)) && (*PTR_DAT_00614270 == '\\t')) {\n      PTR_DAT_00614270 = &DAT_00411057;\n    }\n    DAT_0061443d = '\\x01';\n    DAT_00614434 = 1;\n  }\n  if (DAT_0061443c != '\\0') {\n    DAT_0061443d = '\\0';\n  }\n  if (DAT_006143fc == 0) {\nLAB_00404210:\n    iVar9 = 0;\n  }\n  else {\n    DAT_00614284 = DAT_0061427c;\n    iVar9 = DAT_00614278 + 1;\n    if (DAT_00614288 == '\\t') {\n      uVar21 = (uint)((int)DAT_00614278 >> 0x1f) >> 0x1d;\n      iVar9 = DAT_00614278 + 8 + (uVar21 - (DAT_00614278 + uVar21 & 7));\n    }\n    DAT_006143f8 = iVar9;\n    if (DAT_0061444f == 0) goto LAB_00404210;\n  }\n  lVar12 = (long)(DAT_00614298 + -1) * (long)DAT_006143dc;\n  iVar16 = (int)lVar12;\n  if (iVar16 != lVar12) {\n    iVar16 = 0x7fffffff;\n  }\n  if (!SBORROW4(DAT_006142ac - iVar9,iVar16)) {\n    DAT_00614438 = ((DAT_006142ac - iVar9) - iVar16) / DAT_00614298;\n    if (DAT_00614438 < 1) goto LAB_00404d9f;\n    if (DAT_006143fc != 0) {\n      free(DAT_006143f0);\n      lVar12 = (long)(int)DAT_00614278 + 1;\n      if (DAT_00614278 < 0xc) {\n        lVar12 = 0xc;\n      }\n      DAT_006143f0 = (void *)FUN_00409300(lVar12);\n    }\n    free(DAT_00614398);\n    iVar9 = 8;\n    if (7 < DAT_006142a4) {\n      iVar9 = DAT_006142a4;\n    }\n    DAT_00614398 = (void *)FUN_00409300((long)iVar9);\n    DAT_006143e4 = 0;\n    free(DAT_00614478);\n    if (((long)DAT_00614298 << 6 < 0) || ((ulong)(long)DAT_00614298 >> 0x3a != 0)) {\nLAB_00404dc1:\n                    /* WARNING: Subroutine does not return */\n      FUN_00409550();\n    }\n    ppFVar10 = (FILE **)FUN_00409300();\n    DAT_00614478 = ppFVar10;\n    if (DAT_0061444f == 0) {\n      if (param_1 < 1) {\n        pFVar13 = (FILE *)dcgettext(0,\"standard input\",5);\n        *(undefined *)((long)ppFVar10 + 0x39) = 0;\n        ppFVar10[1] = pFVar13;\n        pFVar13 = stdin;\n        *(undefined4 *)(ppFVar10 + 2) = 0;\n        *ppFVar10 = pFVar13;\n        DAT_00614446 = 1;\n        DAT_006143e4 = DAT_006143e4 + 1;\n        FUN_00402ab0(&DAT_0040ce63,0xffffffff);\n        *(undefined4 *)((long)ppFVar10 + 0x2c) = 0;\n      }\n      else {\n        cVar8 = FUN_00403c80(*param_2,ppFVar10);\n        if (cVar8 == '\\0') {\n          return;\n        }\n        iVar9 = fileno(*ppFVar10);\n        FUN_00402ab0(*param_2,iVar9);\n        *(undefined4 *)((long)ppFVar10 + 0x2c) = 0;\n      }\n      pFVar13 = ppFVar10[1];\n      pFVar3 = *ppFVar10;\n      if (DAT_00614298 != 1) {\n        uVar21 = DAT_00614298 - 2;\n        ppFVar10 = ppFVar10 + 8;\n        do {\n          ppFVar10[1] = pFVar13;\n          ppFVar11 = ppFVar10 + 8;\n          *ppFVar10 = pFVar3;\n          *(undefined4 *)(ppFVar10 + 2) = 0;\n          *(undefined *)((long)ppFVar10 + 0x39) = 0;\n          *(undefined4 *)((long)ppFVar10 + 0x2c) = 0;\n          ppFVar10 = ppFVar11;\n        } while (ppFVar11 != ppFVar10 + ((ulong)uVar21 + 2) * 8);\n      }\n    }\n    else {\n      if (param_1 != 0) {\n        puVar1 = param_2 + (ulong)(param_1 - 1) + 1;\n        do {\n          while (cVar8 = FUN_00403c80(*param_2,ppFVar10), cVar8 != '\\0') {\n            param_2 = param_2 + 1;\n            ppFVar10 = ppFVar10 + 8;\n            if (param_2 == puVar1) goto LAB_00404074;\n          }\n          param_2 = param_2 + 1;\n          DAT_00614298 = DAT_00614298 + -1;\n        } while (param_2 != puVar1);\n      }\nLAB_00404074:\n      if (DAT_00614298 == 0) {\n        return;\n      }\n      FUN_00402ab0(&DAT_0040ce63,0xffffffff);\n    }\n    DAT_00614410 = DAT_006143e4;\n    if (DAT_006142b4 == '\\0') {\nLAB_004040aa:\n      uVar26 = DAT_00614418;\n      if (DAT_00614418 < 2) {\n        DAT_00614408 = 1;\n      }\n      else {\n        uVar24 = 1;\n        do {\n          iVar16 = 1;\n          ppFVar10 = DAT_00614478;\n          iVar9 = DAT_00614298;\n          if (1 < DAT_00614440) {\n            do {\n              if (0 < iVar9) {\n                ppFVar11 = ppFVar10;\n                iVar22 = 1;\n                do {\n                  while (*(int *)(ppFVar11 + 2) == 0) {\n                    iVar23 = iVar22 + 1;\n                    FUN_00403490(ppFVar11,iVar22);\n                    ppFVar10 = DAT_00614478;\n                    ppFVar11 = ppFVar11 + 8;\n                    iVar22 = iVar23;\n                    iVar9 = DAT_00614298;\n                    if (DAT_00614298 < iVar23) goto LAB_00404a17;\n                  }\n                  iVar22 = iVar22 + 1;\n                  ppFVar11 = ppFVar11 + 8;\n                  ppFVar10 = DAT_00614478;\n                } while (iVar22 <= iVar9);\n              }\nLAB_00404a17:\n              iVar16 = iVar16 + 1;\n            } while (iVar16 < DAT_00614440);\n          }\n          DAT_00614390 = 1;\n          if (0 < iVar9) {\n            iVar16 = 1;\n            do {\n              while (*(int *)(ppFVar10 + 2) == 0) {\n                iVar22 = iVar16 + 1;\n                FUN_00403490(ppFVar10,iVar16);\n                ppFVar10 = ppFVar10 + 8;\n                iVar16 = iVar22;\n                iVar9 = DAT_00614298;\n                if (DAT_00614298 < iVar22) goto LAB_00404a70;\n              }\n              iVar16 = iVar16 + 1;\n              ppFVar10 = ppFVar10 + 8;\n            } while (iVar16 <= iVar9);\nLAB_00404a70:\n            if ((DAT_006142b4 != '\\0') && (0 < iVar9)) {\n              ppFVar11 = DAT_00614478 + ((ulong)(iVar9 - 1) + 1) * 8;\n              ppFVar10 = DAT_00614478;\n              do {\n                if (*(int *)(ppFVar10 + 2) != 3) {\n                  *(undefined4 *)(ppFVar10 + 2) = 2;\n                }\n                ppFVar10 = ppFVar10 + 8;\n              } while (ppFVar10 != ppFVar11);\n            }\n          }\n          FUN_00402710();\n          DAT_00614390 = 0;\n          if (DAT_00614410 < 1) {\n            uVar14 = dcgettext(0,\"starting page number %lu exceeds page count %lu\",5);\n                    /* WARNING: Subroutine does not return */\n            error(0,0,uVar14,uVar26,uVar24);\n          }\n          uVar24 = uVar24 + 1;\n        } while (uVar26 != uVar24);\n        DAT_00614408 = DAT_00614418;\n      }\n      ppFVar10 = DAT_00614478;\n      cVar5 = DAT_0061443d;\n      iVar22 = DAT_00614438;\n      bVar20 = DAT_006143fc;\n      iVar16 = DAT_006143dc;\n      cVar8 = DAT_006142b4;\n      iVar9 = DAT_00614298;\n      iVar23 = 0;\n      if (((DAT_0061443d != '\\0') && (iVar23 = DAT_00614438 + DAT_0061442c, DAT_0061444f != 0)) &&\n         (DAT_006143fc != 0)) {\n        iVar23 = iVar23 + DAT_006143f8;\n      }\n      iVar18 = DAT_0061442c + DAT_006143dc;\n      if (DAT_00614298 < 2) {\n        iVar16 = 1;\n        ppFVar11 = DAT_00614478;\n      }\n      else {\n        iVar17 = 1;\n        bVar25 = DAT_0061444f ^ 1;\n        ppFVar11 = DAT_00614478;\n        do {\n          while( true ) {\n            if (cVar8 == '\\0') {\n              ppFVar11[4] = (FILE *)FUN_004031e0;\n              ppFVar11[3] = (FILE *)FUN_00403840;\n            }\n            else {\n              ppFVar11[4] = (FILE *)FUN_00402790;\n              ppFVar11[3] = (FILE *)FUN_00403280;\n            }\n            bVar15 = 0;\n            if (bVar20 != 0) {\n              bVar15 = iVar17 == 1 | bVar25;\n            }\n            *(byte *)(ppFVar11 + 7) = bVar15;\n            *(int *)((long)ppFVar11 + 0x34) = iVar18;\n            if (cVar5 == '\\0') break;\n            iVar18 = iVar16 + iVar23;\n            iVar17 = iVar17 + 1;\n            ppFVar11 = ppFVar11 + 8;\n            iVar23 = iVar18 + iVar22;\n            if (iVar17 == iVar9) goto LAB_00404285;\n          }\n          iVar17 = iVar17 + 1;\n          iVar23 = 0;\n          iVar18 = 0;\n          ppFVar11 = ppFVar11 + 8;\n        } while (iVar17 != iVar9);\nLAB_00404285:\n        ppFVar11 = ppFVar10 + ((ulong)(iVar9 - 2) + 1) * 8;\n        iVar16 = iVar9;\n      }\n      if ((cVar8 == '\\0') || (DAT_00614444 == '\\0')) {\n        ppFVar11[4] = (FILE *)FUN_004031e0;\n        ppFVar11[3] = (FILE *)FUN_00403840;\n      }\n      else {\n        ppFVar11[4] = (FILE *)FUN_00402790;\n        ppFVar11[3] = (FILE *)FUN_00403280;\n      }\n      if (bVar20 != 0) {\n        bVar20 = DAT_0061444f ^ 1 | iVar16 == 1;\n      }\n      *(byte *)(ppFVar11 + 7) = bVar20;\n      *(int *)((long)ppFVar11 + 0x34) = iVar18;\n      DAT_00614400 = DAT_00614284;\n      ppFVar11 = ppFVar10;\n      if (cVar8 != '\\0') goto LAB_004045de;\n      do {\n        iVar16 = DAT_00614440;\n        if (iVar9 != 0) {\n          ppFVar11 = ppFVar10;\n          do {\n            iVar22 = 0;\n            if (*(int *)(ppFVar11 + 2) == 0) {\n              iVar22 = iVar16;\n            }\n            ppFVar19 = ppFVar11 + 8;\n            *(int *)(ppFVar11 + 6) = iVar22;\n            ppFVar11 = ppFVar19;\n          } while (ppFVar10 + ((ulong)(iVar9 - 1) + 1) * 8 != ppFVar19);\n        }\nLAB_00404327:\n        iVar16 = FUN_004026b0();\n        if (iVar16 == 0) {\n          return;\n        }\n        if (DAT_006142b5 != '\\0') {\n          DAT_00614448 = 1;\n        }\n        DAT_006143d0 = 0;\n        iVar16 = DAT_00614440;\n        if (DAT_006143e8 != '\\0') {\n          iVar16 = DAT_00614440 * 2;\n        }\n        bVar20 = 0;\n        if (iVar16 < 1) {\n          if ((iVar16 == 0) && (bVar20 = 0, 0 < iVar9)) goto LAB_00404521;\nLAB_00404561:\n          if ((DAT_0061444a != '\\0') && (DAT_00614449 != '\\0')) {\n            pcVar2 = stdout->_IO_write_ptr;\n            if (pcVar2 < stdout->_IO_write_end) {\n              stdout->_IO_write_ptr = pcVar2 + 1;\n              *pcVar2 = '\\f';\n            }\n            else {\n              __overflow(stdout,0xc);\n            }\n            DAT_00614449 = '\\0';\n          }\n        }\n        else {\n          do {\n            iVar9 = FUN_004026b0();\n            DAT_006143d0 = bVar20;\n            if (iVar9 == 0) goto LAB_00404548;\n            DAT_00614428 = 0;\n            DAT_00614430 = 0;\n            DAT_006143d8 = 0;\n            DAT_006143d0 = 0;\n            DAT_0061444e = 0;\n            DAT_0061444d = '\\x01';\n            if (0 < DAT_00614298) {\n              iVar9 = 1;\n              ppFVar10 = DAT_00614478;\n              do {\n                DAT_00614424 = 0;\n                if ((*(int *)(ppFVar10 + 6) < 1) && (*(int *)(ppFVar10 + 2) != 1)) {\n                  if (DAT_0061444f != 0) {\n                    if (DAT_0061444d == '\\0') {\nLAB_00404780:\n                      FUN_004037e0();\n                    }\n                    else {\nLAB_0040448b:\n                      DAT_0061444e = 1;\n                    }\n                  }\n                }\n                else {\n                  DAT_006143d4 = *(undefined4 *)((long)ppFVar10 + 0x34);\n                  DAT_0061444c = '\\0';\n                  cVar8 = (*(code *)ppFVar10[3])();\n                  if (cVar8 == '\\0') {\n                    FUN_00403d80();\n                  }\n                  bVar25 = DAT_006143d0;\n                  iVar22 = *(int *)(ppFVar10 + 6);\n                  bVar20 = bVar20 | DAT_006143d0;\n                  *(int *)(ppFVar10 + 6) = iVar22 + -1;\n                  if ((iVar22 + -1 < 1) && (iVar22 = FUN_004026b0(), iVar22 == 0)) {\n                    if (bVar25 == 0) goto LAB_00404746;\n                    goto LAB_004044a1;\n                  }\n                  if ((DAT_0061444f != 0) && (iVar22 = *(int *)(ppFVar10 + 2), iVar22 != 0)) {\n                    if (DAT_0061444d != '\\0') goto LAB_0040448b;\n                    if ((iVar22 == 3) || ((iVar22 == 2 && (DAT_0061444c != '\\0'))))\n                    goto LAB_00404780;\n                  }\n                }\n                if (DAT_006143e0 != 0) {\n                  DAT_006143d8 = DAT_006143d8 + 1;\n                }\n                iVar9 = iVar9 + 1;\n                ppFVar10 = ppFVar10 + 8;\n              } while (iVar9 <= DAT_00614298);\n              if (DAT_006143d0 != 0) {\nLAB_004044a1:\n                pcVar2 = stdout->_IO_write_ptr;\n                if (pcVar2 < stdout->_IO_write_end) {\n                  stdout->_IO_write_ptr = pcVar2 + 1;\n                  *pcVar2 = '\\n';\n                }\n                else {\n                  __overflow(stdout,10);\n                }\n                iVar16 = iVar16 + -1;\n              }\n            }\n            iVar9 = FUN_004026b0();\n            if (iVar9 == 0) {\nLAB_00404746:\n              if (DAT_006142b5 == '\\0') break;\n            }\n            if ((DAT_006143e8 != '\\0') && (bVar20 != 0)) {\n              pcVar2 = stdout->_IO_write_ptr;\n              if (pcVar2 < stdout->_IO_write_end) {\n                stdout->_IO_write_ptr = pcVar2 + 1;\n                *pcVar2 = '\\n';\n              }\n              else {\n                __overflow(stdout,10);\n              }\n              iVar16 = iVar16 + -1;\n            }\n          } while (0 < iVar16);\n          DAT_006143d0 = bVar20;\n          if ((iVar16 == 0) &&\n             (ppFVar10 = DAT_00614478, iVar9 = DAT_00614298, bVar20 = DAT_006143d0, 0 < DAT_00614298\n             )) {\nLAB_00404521:\n            DAT_006143d0 = bVar20;\n            ppFVar11 = ppFVar10 + ((ulong)(iVar9 - 1) + 1) * 8;\n            do {\n              if (*(int *)(ppFVar10 + 2) == 0) {\n                *(undefined *)((long)ppFVar10 + 0x39) = 1;\n              }\n              ppFVar10 = ppFVar10 + 8;\n            } while (ppFVar10 != ppFVar11);\n            iVar16 = 0;\n          }\nLAB_00404548:\n          if ((DAT_006143d0 == 0) || (DAT_006142b5 == '\\0')) goto LAB_00404561;\n          if (DAT_00614447 == '\\0') {\n            for (iVar16 = iVar16 + 5; iVar16 != 0; iVar16 = iVar16 + -1) {\n              pcVar2 = stdout->_IO_write_ptr;\n              if (pcVar2 < stdout->_IO_write_end) {\n                stdout->_IO_write_ptr = pcVar2 + 1;\n                *pcVar2 = '\\n';\n              }\n              else {\n                __overflow(stdout,10);\n              }\n            }\n          }\n          else {\n            pcVar2 = stdout->_IO_write_ptr;\n            if (pcVar2 < stdout->_IO_write_end) {\n              stdout->_IO_write_ptr = pcVar2 + 1;\n              *pcVar2 = '\\f';\n            }\n            else {\n              __overflow(stdout,0xc);\n            }\n          }\n        }\n        DAT_00614408 = DAT_00614408 + 1;\n        if (_DAT_00614290 < DAT_00614408) {\n          return;\n        }\n        FUN_00402710();\n        ppFVar10 = DAT_00614478;\n        ppFVar11 = DAT_00614478;\n        iVar9 = DAT_00614298;\n      } while (DAT_006142b4 == '\\0');\nLAB_004045de:\n      cVar8 = DAT_00614444;\n      DAT_00614468 = 0;\n      iVar16 = iVar9 - (uint)(DAT_00614444 == '\\0');\n      if (iVar16 < 1) {\n        iVar22 = 0;\n      }\n      else {\n        ppFVar10 = ppFVar11;\n        do {\n          *(undefined4 *)((long)ppFVar10 + 0x2c) = 0;\n          ppFVar10 = ppFVar10 + 8;\n        } while (ppFVar10 != ppFVar11 + ((ulong)(iVar16 - 1) + 1) * 8);\n        iVar22 = DAT_00614410;\n        if (DAT_00614410 != 0) {\n          local_40 = 1;\n          iVar22 = 0;\n          uVar21 = 0;\n          uVar26 = 0;\n          do {\n            iVar9 = DAT_00614440;\n            *(uint *)(ppFVar11 + 5) = uVar21;\njoined_r0x0040465d:\n            if (iVar9 != 0) {\n              do {\n                if (DAT_00614410 == 0) {\n                  lVar12 = uVar26 * 4;\n                  ppFVar10 = DAT_00614478;\n                  cVar8 = DAT_00614444;\n                  iVar9 = DAT_00614298;\n                  goto LAB_004047d4;\n                }\n                if (*(int *)(ppFVar11 + 2) == 0) {\n                  DAT_00614424 = 0;\n                  cVar8 = FUN_00403840();\n                  if (cVar8 == '\\0') {\n                    FUN_00403d80();\n                  }\n                  iVar23 = DAT_00614468;\n                  pvVar7 = DAT_00614458;\n                  if ((*(int *)(ppFVar11 + 2) == 0) || (DAT_00614468 != iVar22)) goto LAB_004046b0;\n                }\n                iVar9 = iVar9 + -1;\n                if (iVar9 == 0) break;\n              } while( true );\n            }\n            local_40 = local_40 + 1;\n            ppFVar11 = ppFVar11 + 8;\n            lVar12 = uVar26 * 4;\n            ppFVar10 = DAT_00614478;\n            cVar8 = DAT_00614444;\n            iVar9 = DAT_00614298;\n            if ((iVar16 < local_40) || (DAT_00614410 == 0)) goto LAB_004047d4;\n          } while( true );\n        }\n      }\n      lVar12 = 0;\n      uVar21 = 0;\n      ppFVar10 = ppFVar11;\nLAB_004047d4:\n      *(int *)((long)DAT_00614458 + lVar12) = iVar22;\n      ppFVar11 = ppFVar10;\n      if (cVar8 == '\\0') {\n        if (iVar9 != 1) goto LAB_00404834;\nLAB_00404898:\n        if (*(int *)(ppFVar11 + 2) == 0) {\n          *(int *)(ppFVar11 + 6) = DAT_00614440;\n        }\n        else {\n          *(undefined4 *)(ppFVar11 + 6) = 0;\n        }\n      }\n      else {\n        if (0 < iVar9) {\n          iVar22 = 0;\n          iVar16 = 1;\n          ppFVar19 = ppFVar10;\n          do {\n            *(int *)(ppFVar19 + 5) = iVar22;\n            iVar23 = (int)uVar21 / iVar9;\n            if (iVar16 <= (int)uVar21 % iVar9) {\n              iVar23 = (int)uVar21 / iVar9 + 1;\n            }\n            iVar16 = iVar16 + 1;\n            *(int *)((long)ppFVar19 + 0x2c) = iVar23;\n            iVar22 = iVar22 + iVar23;\n            ppFVar19 = ppFVar19 + 8;\n          } while (iVar16 != iVar9 + 1);\n        }\n        if (iVar9 != 1) {\nLAB_00404834:\n          do {\n            ppFVar19 = ppFVar11 + 8;\n            *(undefined4 *)(ppFVar11 + 6) = *(undefined4 *)((long)ppFVar11 + 0x2c);\n            ppFVar11 = ppFVar19;\n          } while (ppFVar19 != ppFVar10 + ((ulong)(iVar9 - 2) + 1) * 8);\n          ppFVar11 = ppFVar10 + ((ulong)(iVar9 - 2) + 1) * 8;\n          if (cVar8 == '\\0') goto LAB_00404898;\n        }\n        *(undefined4 *)(ppFVar11 + 6) = *(undefined4 *)((long)ppFVar11 + 0x2c);\n      }\n      goto LAB_00404327;\n    }\n    iVar9 = (int)((long)DAT_00614440 * (long)DAT_00614298);\n    if ((((long)iVar9 == (long)DAT_00614440 * (long)DAT_00614298) && (!SCARRY4(iVar9,1))) &&\n       ((!SCARRY4(DAT_00614438,1) &&\n        (lVar12 = (long)(DAT_00614438 + 1) * (long)iVar9, iVar16 = (int)lVar12, iVar16 == lVar12))))\n    {\n      free(DAT_00614458);\n      if ((-1 < (long)(iVar9 + 1) << 2) && ((ulong)(long)(iVar9 + 1) >> 0x3e == 0)) {\n        DAT_00614458 = (void *)FUN_00409300();\n        free(DAT_00614450);\n        if ((-1 < (long)iVar9 << 2) && ((ulong)(long)iVar9 >> 0x3e == 0)) {\n          DAT_00614450 = (void *)FUN_00409300();\n          free(DAT_00614470);\n          auVar4 = ZEXT816((ulong)(long)iVar16) * ZEXT816((ulong)DAT_006143e0 + 1);\n          lVar12 = SUB168(auVar4,0);\n          if ((-1 < lVar12) && (SUB168(auVar4 >> 0x40,0) == 0)) {\n            DAT_00614470 = (void *)FUN_00409300(lVar12);\n            _DAT_00614460 = (long)iVar16 * ((ulong)DAT_006143e0 + 1);\n            goto LAB_004040aa;\n          }\n        }\n      }\n      goto LAB_00404dc1;\n    }\n    FUN_004027f0();\n  }\n  DAT_00614438 = 0;\nLAB_00404d9f:\n  uVar14 = dcgettext(0,\"page width too narrow\",5);\n                    /* WARNING: Subroutine does not return */\n  error(1,0,uVar14);\nLAB_004046b0:\n  *(int *)((long)ppFVar11 + 0x2c) = *(int *)((long)ppFVar11 + 0x2c) + 1;\n  pvVar6 = DAT_00614450;\n  uVar21 = uVar21 + 1;\n  *(int *)((long)pvVar7 + uVar26 * 4) = iVar22;\n  *(undefined4 *)((long)pvVar6 + uVar26 * 4) = DAT_00614424;\n  uVar26 = (ulong)uVar21;\n  iVar9 = iVar9 + -1;\n  iVar22 = iVar23;\n  goto joined_r0x0040465d;\n}\n\n",
            "funcName": "FUN_00403e40"
        },
        {
            "funcStartAddr": "0x404de0",
            "funcEndAddr": "0x4052dd",
            "decompiledFuncCode": "\nvoid FUN_00404de0(int param_1)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  byte **ppbVar5;\n  undefined8 uVar7;\n  long lVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  bool bVar11;\n  bool bVar12;\n  byte bVar13;\n  byte *local_88;\n  char *local_80;\n  byte *local_78 [5];\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  char *local_38;\n  char *local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  byte **ppbVar6;\n  \n  uVar7 = DAT_00614490;\n  bVar13 = 0;\n  if (param_1 != 0) {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar7);\n    goto LAB_00404e1f;\n  }\n  uVar3 = dcgettext(0,\"Usage: %s [OPTION]... [FILE]...\\n\",5);\n  __printf_chk(1,uVar3,uVar7);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"Paginate or columnate FILE(s) for printing.\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"\\nWith no FILE, or when FILE is -, read standard input.\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  +FIRST_PAGE[:LAST_PAGE], --pages=FIRST_PAGE[:LAST_PAGE]\\n                    begin [stop] printing with page FIRST_[LAST_]PAGE\\n  -COLUMN, --columns=COLUMN\\n                    output COLUMN columns and print columns down,\\n                    unless -a is used. Balance number of lines in the\\n                    columns on each page\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -a, --across      print columns across rather than down, used together\\n                    with -COLUMN\\n  -c, --show-control-chars\\n                    use hat notation (^G) and octal backslash notation\\n  -d, --double-space\\n                    double space the output\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -D, --date-format=FORMAT\\n                    use FORMAT for the header date\\n  -e[CHAR[WIDTH]], --expand-tabs[=CHAR[WIDTH]]\\n                    expand input CHARs (TABs) to tab WIDTH (8)\\n  -F, -f, --form-feed\\n                    use form feeds instead of newlines to separate pages\\n                    (by a 3-line page header with -F or a 5-line header\\n                    and trailer without -F)\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -h, --header=HEADER\\n                    use a centered HEADER instead of filename in page header,\\n                    -h \\\"\\\" prints a blank line, don\\'t use -h\\\"\\\"\\n  -i[CHAR[WIDTH]], --output-tabs[=CHAR[WIDTH]]\\n                    replace spaces with CHARs (TABs) to tab WIDTH (8)\\n  -J, --join-lines  merge full lines, turns off -W line truncation, no column\\n                    alignment, --sep-string[=STRING] sets separators\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -l, --length=PAGE_LENGTH\\n                    set the page length to PAGE_LENGTH (66) lines\\n                    (default number of lines of text 56, and with -F 63).\\n                    implies -t if PAGE_LENGTH <= 10\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -m, --merge       print all files in parallel, one in each column,\\n                    truncate lines, but join lines of full length with -J\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -n[SEP[DIGITS]], --number-lines[=SEP[DIGITS]]\\n                    number lines, use DIGITS (5) digits, then SEP (TAB),\\n                    default counting starts with 1st line of input file\\n  -N, --first-line-number=NUMBER\\n                    start counting with NUMBER at 1st line of first\\n                    page printed (see +FIRST_PAGE)\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -o, --indent=MARGIN\\n                    offset each line with MARGIN (zero) spaces, do not\\n                    affect -w or -W, MARGIN will be added to PAGE_WIDTH\\n  -r, --no-file-warnings\\n                    omit warning when a file cannot be opened\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -s[CHAR], --separator[=CHAR]\\n                    separate columns by a single character, default for CHAR\\n                    is the <TAB> character without -w and \\'no char\\' with -w.\\n                    -s[CHAR] turns off line truncation of all 3 column\\n                    options (-COLUMN|-a -COLUMN|-m) except -w is set\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -S[STRING], --sep-string[=STRING]\\n                    separate columns by STRING,\\n                    without -S: Default separator <TAB> with -J and <space>\\n                    otherwise (same as -S\\\" \\\"), no effect on column options\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -t, --omit-header  omit page headers and trailers;\\n                     implied if PAGE_LENGTH <= 10\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -T, --omit-pagination\\n                    omit page headers and trailers, eliminate any pagination\\n                    by form feeds set in input files\\n  -v, --show-nonprinting\\n                    use octal backslash notation\\n  -w, --width=PAGE_WIDTH\\n                    set page width to PAGE_WIDTH (72) characters for\\n                    multiple text-column output only, -s[char] turns off (72)\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -W, --page-width=PAGE_WIDTH\\n                    set page width to PAGE_WIDTH (72) characters always,\\n                    truncate lines, except -J option is set, no interference\\n                    with -S or -s\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  local_88 = &DAT_0040ce7d;\n  local_80 = \"test invocation\";\n  local_78[0] = (byte *)0x40cef7;\n  local_78[1] = (byte *)0x40ce8f;\n  local_78[2] = (byte *)0x40cea5;\n  local_78[3] = (byte *)0x40ceaf;\n  local_78[4] = (byte *)0x40cebe;\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha384sum\";\n  local_40 = \"sha2 utilities\";\n  local_38 = \"sha512sum\";\n  local_30 = \"sha2 utilities\";\n  local_28 = 0;\n  local_20 = 0;\n  ppbVar5 = &local_88;\n  do {\n    ppbVar6 = ppbVar5;\n    ppbVar5 = ppbVar6 + 2;\n    pbVar9 = *ppbVar5;\n    bVar11 = false;\n    bVar12 = pbVar9 == (byte *)0x0;\n    if (bVar12) break;\n    lVar8 = 3;\n    pbVar10 = &DAT_0040ce7a;\n    do {\n      if (lVar8 == 0) break;\n      lVar8 = lVar8 + -1;\n      bVar11 = *pbVar10 < *pbVar9;\n      bVar12 = *pbVar10 == *pbVar9;\n      pbVar10 = pbVar10 + (ulong)bVar13 * -2 + 1;\n      pbVar9 = pbVar9 + (ulong)bVar13 * -2 + 1;\n    } while (bVar12);\n  } while ((!bVar11 && !bVar12) != bVar11);\n  pbVar9 = ppbVar6[3];\n  if (pbVar9 == (byte *)0x0) {\n    uVar7 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar7,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\n        pbVar9 = &DAT_0040ce7a;\n        goto LAB_004052b3;\n      }\n    }\n    pbVar9 = &DAT_0040ce7a;\n    uVar7 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar4 = \" invocation\";\n    __printf_chk(1,uVar7,\"https://www.gnu.org/software/coreutils/\",&DAT_0040ce7a);\n  }\n  else {\n    uVar7 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar7,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\nLAB_004052b3:\n        uVar7 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar7,&DAT_0040ce7a);\n      }\n    }\n    pcVar4 = \" invocation\";\n    uVar7 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar7,\"https://www.gnu.org/software/coreutils/\",&DAT_0040ce7a);\n    if (pbVar9 != &DAT_0040ce7a) {\n      pcVar4 = \"\";\n    }\n  }\n  uVar7 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  __printf_chk(1,uVar7,pbVar9,pcVar4);\nLAB_00404e1f:\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n",
            "funcName": "FUN_00404de0"
        },
        {
            "funcStartAddr": "0x4052e0",
            "funcEndAddr": "0x40539d",
            "decompiledFuncCode": "\nvoid FUN_004052e0(char *param_1,char param_2,char *param_3,undefined4 *param_4)\n\n{\n  char cVar1;\n  int iVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  int *piVar5;\n  long local_20;\n  \n  cVar1 = *param_1;\n  if (9 < (int)cVar1 - 0x30U) {\n    *param_3 = cVar1;\n    cVar1 = param_1[1];\n    param_1 = param_1 + 1;\n  }\n  if (cVar1 == '\\0') {\n    return;\n  }\n  iVar2 = FUN_00409e00(param_1,0,10,&local_20,&DAT_0040ce63);\n  if (iVar2 == 0) {\n    if (local_20 - 1U < 0x7fffffff) {\n      *param_4 = (int)local_20;\n      return;\n    }\n  }\n  uVar3 = FUN_00408d30(param_1);\n  uVar4 = dcgettext(0,\"\\'-%c\\' extra characters or invalid number in the argument: %s\",5);\n  iVar2 = 0x4b;\n  if (local_20 < 0x80000000) {\n    piVar5 = __errno_location();\n    iVar2 = *piVar5;\n  }\n                    /* WARNING: Subroutine does not return */\n  error(0,iVar2,uVar4,(int)param_2,uVar3);\n}\n\n",
            "funcName": "FUN_004052e0"
        },
        {
            "funcStartAddr": "0x4053b0",
            "funcEndAddr": "0x4053b8",
            "decompiledFuncCode": "\nvoid FUN_004053b0(undefined8 param_1)\n\n{\n  DAT_00614488 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_004053b0"
        },
        {
            "funcStartAddr": "0x4053c0",
            "funcEndAddr": "0x4053c8",
            "decompiledFuncCode": "\nvoid FUN_004053c0(undefined param_1)\n\n{\n  DAT_00614480 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_004053c0"
        },
        {
            "funcStartAddr": "0x4053d0",
            "funcEndAddr": "0x40546c",
            "decompiledFuncCode": "\nvoid FUN_004053d0(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_0040c070(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_00614480 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_00614488 != 0) {\n        uVar4 = FUN_00408b80();\n                    /* WARNING: Subroutine does not return */\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n                    /* WARNING: Subroutine does not return */\n      error(0,*piVar2,\"%s\",uVar3);\n    }\n  }\n  iVar1 = FUN_0040c070(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_006142c0);\n}\n\n",
            "funcName": "FUN_004053d0"
        },
        {
            "funcStartAddr": "0x405470",
            "funcEndAddr": "0x405475",
            "decompiledFuncCode": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint posix_fadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_posix_fadvise_00614130)();\n  return iVar1;\n}\n\n",
            "funcName": "thunk_405470"
        },
        {
            "funcStartAddr": "0x405480",
            "funcEndAddr": "0x40549c",
            "decompiledFuncCode": "\nvoid FUN_00405480(FILE *param_1,int param_2)\n\n{\n  int __fd;\n  \n  if (param_1 != (FILE *)0x0) {\n    __fd = fileno(param_1);\n    posix_fadvise(__fd,0,0,param_2);\n    return;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00405480"
        },
        {
            "funcStartAddr": "0x4054b0",
            "funcEndAddr": "0x405539",
            "decompiledFuncCode": "\nFILE * FUN_004054b0(char *param_1,char *param_2)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  FILE *__stream;\n  FILE *pFVar4;\n  int *piVar5;\n  \n  __stream = fopen(param_1,param_2);\n  pFVar4 = __stream;\n  if ((__stream != (FILE *)0x0) && (uVar1 = fileno(__stream), uVar1 < 3)) {\n    iVar2 = FUN_00408d50(uVar1);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      pFVar4 = (FILE *)0x0;\n      iVar2 = *piVar5;\n      FUN_0040aa20(__stream);\n      *piVar5 = iVar2;\n    }\n    else {\n      iVar3 = FUN_0040aa20(__stream);\n      if ((iVar3 == 0) && (pFVar4 = fdopen(iVar2,param_2), pFVar4 != (FILE *)0x0)) {\n        return pFVar4;\n      }\n      piVar5 = __errno_location();\n      iVar3 = *piVar5;\n      close(iVar2);\n      *piVar5 = iVar3;\n      pFVar4 = (FILE *)0x0;\n    }\n  }\n  return pFVar4;\n}\n\n",
            "funcName": "FUN_004054b0"
        },
        {
            "funcStartAddr": "0x405550",
            "funcEndAddr": "0x40558a",
            "decompiledFuncCode": "\nvoid FUN_00405550(timespec *param_1)\n\n{\n  int iVar1;\n  timeval local_18;\n  \n  iVar1 = clock_gettime(0,param_1);\n  if (iVar1 != 0) {\n    gettimeofday(&local_18,(__timezone_ptr_t)0x0);\n    param_1->tv_sec = local_18.tv_sec;\n    param_1->tv_nsec = local_18.tv_usec * 1000;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00405550"
        },
        {
            "funcStartAddr": "0x405590",
            "funcEndAddr": "0x4055e6",
            "decompiledFuncCode": "\nbool FUN_00405590(int param_1)\n\n{\n  bool bVar1;\n  byte *pbVar2;\n  long lVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  bool bVar8;\n  byte bVar9;\n  \n  bVar9 = 0;\n  pbVar2 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar1 = true;\n  bVar6 = false;\n  bVar8 = pbVar2 == (byte *)0x0;\n  if (!bVar8) {\n    lVar3 = 2;\n    pbVar4 = pbVar2;\n    pbVar5 = &DAT_0040ef8d;\n    do {\n      if (lVar3 == 0) break;\n      lVar3 = lVar3 + -1;\n      bVar6 = *pbVar4 < *pbVar5;\n      bVar8 = *pbVar4 == *pbVar5;\n      pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      pbVar5 = pbVar5 + (ulong)bVar9 * -2 + 1;\n    } while (bVar8);\n    bVar1 = false;\n    bVar7 = false;\n    bVar6 = (!bVar6 && !bVar8) == bVar6;\n    if (!bVar6) {\n      lVar3 = 6;\n      pbVar4 = (byte *)\"POSIX\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar2 < *pbVar4;\n        bVar6 = *pbVar2 == *pbVar4;\n        pbVar2 = pbVar2 + (ulong)bVar9 * -2 + 1;\n        pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      } while (bVar6);\n      return (!bVar7 && !bVar6) != bVar7;\n    }\n  }\n  return bVar1;\n}\n\n",
            "funcName": "FUN_00405590"
        },
        {
            "funcStartAddr": "0x4055f0",
            "funcEndAddr": "0x405686",
            "decompiledFuncCode": "\nchar * FUN_004055f0(ulong param_1,long param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  ulong uVar3;\n  \n  pcVar1 = (char *)(param_2 + 0x14);\n  *(undefined *)(param_2 + 0x14) = 0;\n  if ((long)param_1 < 0) {\n    do {\n      pcVar2 = pcVar1;\n      uVar3 = (long)param_1 / 10;\n      pcVar2[-1] = ((char)uVar3 * '\\n' + '0') - (char)param_1;\n      pcVar1 = pcVar2 + -1;\n      param_1 = uVar3;\n    } while (uVar3 != 0);\n    pcVar2[-2] = '-';\n    return pcVar2 + -2;\n  }\n  do {\n    pcVar1 = pcVar1 + -1;\n    uVar3 = param_1 / 10;\n    *pcVar1 = (char)param_1 + (char)uVar3 * -10 + '0';\n    param_1 = uVar3;\n  } while (uVar3 != 0);\n  return pcVar1;\n}\n\n",
            "funcName": "FUN_004055f0"
        },
        {
            "funcStartAddr": "0x405690",
            "funcEndAddr": "0x405824",
            "decompiledFuncCode": "\nint FUN_00405690(byte *param_1,long param_2,uint param_3)\n\n{\n  byte *pbVar1;\n  byte bVar2;\n  int iVar3;\n  size_t sVar4;\n  long lVar5;\n  ushort **ppuVar6;\n  byte *pbVar7;\n  int iVar8;\n  wchar_t local_44;\n  mbstate_t local_40 [2];\n  \n  pbVar1 = param_1 + param_2;\n  sVar4 = __ctype_get_mb_cur_max();\n  if (sVar4 < 2) {\n    iVar8 = 0;\n    if (param_1 < pbVar1) {\n      ppuVar6 = __ctype_b_loc();\n      iVar8 = 0;\n      do {\n        pbVar7 = param_1 + 1;\n        if (((*ppuVar6)[*param_1] & 0x4000) == 0) {\n          if ((param_3 & 2) != 0) {\n            return -1;\n          }\n          if (((*ppuVar6)[*param_1] & 2) == 0) goto LAB_0040580a;\n        }\n        else {\nLAB_0040580a:\n          if (iVar8 == 0x7fffffff) {\n            return 0x7fffffff;\n          }\n          iVar8 = iVar8 + 1;\n        }\n        param_1 = pbVar7;\n      } while (pbVar1 != pbVar7);\n    }\n  }\n  else {\n    iVar8 = 0;\n    if (param_1 < pbVar1) {\n      do {\n        bVar2 = *param_1;\n        if ((char)bVar2 < '@') {\n          if (((char)bVar2 < '%') && (3 < (byte)(bVar2 - 0x20))) goto LAB_00405702;\nLAB_004056db:\n          param_1 = param_1 + 1;\n          iVar8 = iVar8 + 1;\n        }\n        else {\n          if (('@' < (char)bVar2) && (((char)bVar2 < '`' || ((byte)(bVar2 + 0x9f) < 0x1e))))\n          goto LAB_004056db;\nLAB_00405702:\n          local_40[0] = (mbstate_t)0x0;\n          do {\n            lVar5 = FUN_0040ba50(&local_44,param_1,(long)pbVar1 - (long)param_1,local_40);\n            if (lVar5 == -1) {\n              if ((param_3 & 1) != 0) {\n                return -1;\n              }\n              goto LAB_004056db;\n            }\n            if (lVar5 == -2) {\n              if ((param_3 & 1) != 0) {\n                return -1;\n              }\n              iVar8 = iVar8 + 1;\n              param_1 = pbVar1;\n              break;\n            }\n            if (lVar5 == 0) {\n              lVar5 = 1;\n            }\n            iVar3 = wcwidth(local_44);\n            if (iVar3 < 0) {\n              if ((param_3 & 2) != 0) {\n                return -1;\n              }\n              iVar3 = iswcntrl(local_44);\n              if (iVar3 == 0) {\n                if (iVar8 == 0x7fffffff) {\n                  return 0x7fffffff;\n                }\n                iVar8 = iVar8 + 1;\n              }\n            }\n            else {\n              if (0x7fffffff - iVar8 < iVar3) {\n                return 0x7fffffff;\n              }\n              iVar8 = iVar8 + iVar3;\n            }\n            param_1 = param_1 + lVar5;\n            iVar3 = mbsinit(local_40);\n          } while (iVar3 == 0);\n        }\n      } while (param_1 < pbVar1);\n    }\n  }\n  return iVar8;\n}\n\n",
            "funcName": "FUN_00405690"
        },
        {
            "funcStartAddr": "0x405850",
            "funcEndAddr": "0x405873",
            "decompiledFuncCode": "\nvoid FUN_00405850(char *param_1,undefined4 param_2)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  FUN_00405690(param_1,sVar1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00405850"
        },
        {
            "funcStartAddr": "0x405880",
            "funcEndAddr": "0x4058c1",
            "decompiledFuncCode": "\nlong FUN_00405880(long param_1,long param_2,long param_3)\n\n{\n  __int32_t **pp_Var1;\n  \n  if (param_3 != 0) {\n    param_3 = param_3 + -1;\n    pp_Var1 = __ctype_tolower_loc();\n    do {\n      *(char *)(param_1 + param_3) = (char)(*pp_Var1)[*(byte *)(param_2 + param_3)];\n      param_3 = param_3 + -1;\n    } while (param_3 != -1);\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_00405880"
        },
        {
            "funcStartAddr": "0x4058d0",
            "funcEndAddr": "0x405911",
            "decompiledFuncCode": "\nlong FUN_004058d0(long param_1,long param_2,long param_3)\n\n{\n  __int32_t **pp_Var1;\n  \n  if (param_3 != 0) {\n    param_3 = param_3 + -1;\n    pp_Var1 = __ctype_toupper_loc();\n    do {\n      *(char *)(param_1 + param_3) = (char)(*pp_Var1)[*(byte *)(param_2 + param_3)];\n      param_3 = param_3 + -1;\n    } while (param_3 != -1);\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_004058d0"
        },
        {
            "funcStartAddr": "0x405920",
            "funcEndAddr": "0x4070a6",
            "decompiledFuncCode": "\n/* WARNING: Type propagation algorithm not settling */\n\nlong FUN_00405920(char *param_1,long param_2,char *param_3,tm *param_4,char param_5,\n                 undefined8 param_6,undefined8 param_7,uint param_8)\n\n{\n  int iVar1;\n  bool bVar2;\n  long lVar3;\n  bool bVar4;\n  char cVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  char *pcVar9;\n  long lVar10;\n  char *pcVar11;\n  ulong uVar12;\n  char cVar13;\n  ulong __n;\n  uint uVar14;\n  int iVar15;\n  char *pcVar16;\n  size_t sVar17;\n  ulong uVar18;\n  size_t sVar19;\n  uint uVar20;\n  int iVar21;\n  uint uVar22;\n  int iVar23;\n  char cVar24;\n  uint uVar25;\n  uint uVar26;\n  char *__s;\n  char *pcVar27;\n  char cVar28;\n  ulong uVar29;\n  long lVar30;\n  long lVar31;\n  bool bVar32;\n  char *local_498;\n  char *local_488;\n  uint local_480;\n  uint local_478;\n  undefined2 local_458;\n  char local_456;\n  char local_455 [19];\n  char local_442 [10];\n  undefined8 local_438;\n  undefined8 uStack_430;\n  undefined8 local_428;\n  undefined8 uStack_420;\n  undefined8 local_418;\n  long lStack_410;\n  char *local_408;\n  \n  __s = param_4->tm_zone;\n  uVar25 = param_4->tm_hour;\n  if (__s == (char *)0x0) {\n    __s = \"\";\n  }\n  if ((int)uVar25 < 0xd) {\n    if (uVar25 == 0) {\n      uVar25 = 0xc;\n    }\n  }\n  else {\n    uVar25 = uVar25 - 0xc;\n  }\n  cVar5 = *param_3;\n  lVar31 = 0;\n  if (cVar5 == '\\0') {\nLAB_004059bb:\n    if ((param_1 != (char *)0x0) && (param_2 != 0)) {\n      *param_1 = '\\0';\n    }\n    return lVar31;\n  }\nLAB_0040598a:\n  if (cVar5 == '%') {\n    cVar5 = '\\0';\n    cVar24 = param_5;\n    uVar6 = 0;\n    do {\n      uVar26 = uVar6;\n      param_3 = param_3 + 1;\n      cVar13 = *param_3;\n      cVar28 = cVar13 + -0x30;\n      bVar32 = cVar13 == '0';\n      while (uVar6 = (uint)cVar13, !bVar32) {\n        if (!bVar32 && SBORROW1(cVar13,'0') == cVar28 < '\\0') {\n          if (cVar13 == '^') {\n            cVar24 = '\\x01';\n            uVar6 = uVar26;\n          }\n          else if (cVar13 != '_') {\n            uVar20 = 0xffffffff;\n            if (9 < uVar6 - 0x30) goto LAB_00405a68;\nLAB_00405ab1:\n            uVar20 = 0;\n            pcVar9 = param_3;\n            goto LAB_00405ab3;\n          }\n          break;\n        }\n        if (cVar13 != '#') {\n          if (cVar13 != '-') {\n            uVar20 = 0xffffffff;\n            if (uVar6 - 0x30 < 10) goto LAB_00405ab1;\n            goto LAB_00405a68;\n          }\n          break;\n        }\n        param_3 = param_3 + 1;\n        cVar13 = *param_3;\n        cVar5 = '\\x01';\n        cVar28 = cVar13 + -0x30;\n        bVar32 = cVar28 == '\\0';\n      }\n    } while( true );\n  }\n  if ((ulong)(param_2 - lVar31) < 2) {\n    return 0;\n  }\n  if (param_1 != (char *)0x0) {\n    *param_1 = cVar5;\n    param_1 = param_1 + 1;\n  }\n  lVar31 = lVar31 + 1;\n  pcVar9 = param_3;\n  goto LAB_004059ae;\nLAB_00405ab3:\n  do {\n    uVar6 = (uint)pcVar9[1];\n    param_3 = pcVar9 + 1;\n    uVar14 = uVar6 - 0x30;\n    if ((int)uVar20 < 0xccccccd) {\n      if ((uVar20 == 0xccccccc) && ('7' < *pcVar9)) goto LAB_00405afe;\n      uVar20 = *pcVar9 + -0x30 + uVar20 * 10;\n    }\n    else {\nLAB_00405afe:\n      if (9 < uVar14) {\n        uVar20 = 0x7fffffff;\n        break;\n      }\n      uVar6 = (uint)pcVar9[2];\n      uVar20 = 0x7fffffff;\n      param_3 = pcVar9 + 2;\n      uVar14 = uVar6 - 0x30;\n    }\n    pcVar9 = param_3;\n  } while (uVar14 < 10);\nLAB_00405a68:\n  if (((char)uVar6 == 'E') || ((char)uVar6 == 'O')) {\n    uVar8 = (uint)(byte)param_3[1];\n    param_3 = param_3 + 1;\n    uVar14 = uVar6;\n  }\n  else {\n    uVar14 = 0;\n    uVar8 = uVar6;\n  }\n  cVar13 = (char)uVar8;\n  pcVar11 = &local_456;\n  pcVar9 = param_3;\n  uVar6 = uVar25;\n  local_478 = uVar20;\n  switch(uVar8 & 0xff) {\n  case 0:\n    cVar5 = param_3[-1];\n    param_3 = param_3 + -1;\nLAB_004068f7:\n    uVar18 = param_2 - lVar31;\n    uVar6 = 0;\n    if (-1 < (int)uVar20) {\n      uVar6 = uVar20;\n    }\n    uVar12 = (ulong)(int)uVar6;\n    if (cVar5 != '%') break;\n    __n = 1;\n    pcVar9 = param_3;\n    uVar29 = 1;\n    if (uVar12 != 0) {\n      uVar29 = uVar12;\n    }\n    goto LAB_004067a3;\n  case 0x25:\n    uVar18 = param_2 - lVar31;\n    uVar6 = 0;\n    if (-1 < (int)uVar20) {\n      uVar6 = uVar20;\n    }\n    uVar12 = (ulong)(int)uVar6;\n    uVar29 = 1;\n    if (uVar12 != 0) {\n      uVar29 = uVar12;\n    }\n    if (uVar14 != 0) {\n      __n = 1;\n      goto LAB_004067a3;\n    }\n    if (uVar18 <= uVar29) {\n      return 0;\n    }\n    if (param_1 != (char *)0x0) {\n      pcVar11 = param_1;\n      if (1 < (int)uVar20) {\n        sVar19 = (long)(int)uVar20 - 1;\n        pcVar11 = param_1 + sVar19;\n        if (uVar26 == 0x30) {\n          memset(param_1,0x30,sVar19);\n          cVar13 = *param_3;\n        }\n        else {\n          memset(param_1,0x20,sVar19);\n          cVar13 = *param_3;\n        }\n      }\n      *pcVar11 = cVar13;\n      param_1 = pcVar11 + 1;\n    }\n    goto LAB_00406346;\n  case 0x3a:\n    pcVar9 = param_3 + 1;\n    lVar30 = 1;\n    cVar5 = param_3[1];\n    while (cVar5 == ':') {\n      lVar30 = lVar30 + 1;\n      pcVar9 = param_3 + lVar30;\n      cVar5 = param_3[lVar30];\n    }\n    if (cVar5 == 'z') goto LAB_00406840;\n    break;\n  case 0x41:\n  case 0x42:\n  case 0x61:\n    if (uVar14 != 0) break;\n    if (cVar5 != '\\0') {\n      cVar24 = cVar5;\n    }\nLAB_00405b40:\n    cVar28 = '\\0';\n    uVar14 = 0;\n    goto LAB_00405b60;\n  case 0x43:\n    if (uVar14 != 0x45) {\n      bVar4 = false;\n      local_478 = 2;\n      iVar15 = param_4->tm_year;\n      iVar23 = iVar15 / 100 + 0x13;\n      bVar32 = iVar15 < -0x76c;\n      uVar6 = iVar23 - ((uint)(0 < iVar23) & (uint)(iVar15 % 100) >> 0x1f);\n      uVar22 = 0;\n      goto LAB_004060bf;\n    }\nLAB_00406d3c:\n    uVar8 = 0;\n    goto LAB_004060d2;\n  case 0x44:\n    if (uVar14 == 0) {\n      local_498 = \"%m/%d/%y\";\n      goto LAB_00405e39;\n    }\n    break;\n  case 0x46:\n    if (uVar14 == 0) {\n      local_498 = \"%Y-%m-%d\";\n      goto LAB_00405e39;\n    }\n    break;\n  case 0x47:\n  case 0x56:\n  case 0x67:\n    if (uVar14 != 0x45) {\n      iVar15 = param_4->tm_year;\n      iVar1 = param_4->tm_yday;\n      iVar21 = param_4->tm_wday;\n      uVar6 = iVar15 + -100 + (iVar15 >> 0x1f & 400U);\n      iVar23 = (iVar1 - iVar21) + 0x17e;\n      iVar23 = (iVar1 - iVar23) + 3 + (iVar23 / 7) * 7;\n      if (iVar23 < 0) {\n        uVar6 = uVar6 - 1;\n        iVar23 = 0x16d;\n        if (((uVar6 & 3) == 0) && (iVar23 = 0x16e, uVar6 == ((int)uVar6 / 100) * 100)) {\n          iVar23 = ~-(uint)((int)uVar6 % 400 == 0) + 0x16e;\n        }\n        iVar7 = -1;\n        iVar21 = ((iVar1 + iVar23) - iVar21) + 0x17e;\n        iVar23 = ((iVar1 + iVar23) - iVar21) + 3 + (iVar21 / 7) * 7;\n      }\n      else {\n        iVar7 = 0x16d;\n        if (((uVar6 & 3) == 0) && (iVar7 = 0x16e, uVar6 == ((int)uVar6 / 100) * 100)) {\n          iVar7 = (uVar6 == ((int)uVar6 / 400) * 400) + 0x16d;\n        }\n        iVar21 = ((iVar1 - iVar7) - iVar21) + 0x17e;\n        iVar1 = ((iVar1 - iVar7) - iVar21) + 3 + (iVar21 / 7) * 7;\n        if (-1 < iVar1) {\n          iVar23 = iVar1;\n        }\n        iVar7 = (iVar1 >> 0x1f) + 1;\n      }\n      if (cVar13 == 'G') {\n        bVar4 = false;\n        local_478 = 4;\n        uVar6 = iVar15 + 0x76c + iVar7;\n        bVar32 = iVar15 < -0x76c - iVar7;\n        uVar22 = 0;\n        goto LAB_004060bf;\n      }\n      if (cVar13 == 'g') {\n        local_478 = 2;\n        uVar8 = (iVar15 % 100 + iVar7) % 100;\n        uVar6 = uVar8;\n        if ((int)uVar8 < 0) {\n          uVar6 = uVar8 + 100;\n          if (iVar15 < -0x76c - iVar7) {\n            uVar6 = -uVar8;\n          }\n        }\n      }\n      else {\n        uVar6 = iVar23 / 7 + 1;\n        local_478 = 2;\n      }\n      goto LAB_004060b0;\n    }\n    break;\n  case 0x48:\n    if (uVar14 != 0x45) {\n      uVar6 = param_4->tm_hour;\n      local_478 = 2;\n      goto LAB_004060b0;\n    }\n    break;\n  case 0x49:\n    if (uVar14 != 0x45) {\n      local_478 = 2;\n      goto LAB_004060b0;\n    }\n    break;\n  case 0x4d:\n    if (uVar14 != 0x45) {\n      uVar6 = param_4->tm_min;\n      local_478 = 2;\n      goto LAB_004060b0;\n    }\n    break;\n  case 0x4e:\n    if (uVar14 != 0x45) {\n      uVar6 = param_8;\n      if (uVar20 == 0xffffffff) {\n        uVar20 = 9;\n        local_478 = 9;\n      }\n      else {\n        uVar8 = param_8;\n        uVar22 = uVar20;\n        if ((int)uVar20 < 9) {\n          do {\n            uVar22 = uVar22 + 1;\n            uVar6 = (int)uVar8 / 10;\n            uVar8 = (int)uVar8 / 10;\n          } while (uVar22 != 9);\n        }\n      }\n      goto LAB_004060b0;\n    }\n    break;\n  case 0x50:\n    cVar28 = '\\x01';\n    goto LAB_00406255;\n  case 0x52:\n    local_498 = \"%H:%M\";\n    goto LAB_00405e39;\n  case 0x53:\n    if (uVar14 != 0x45) {\n      uVar6 = param_4->tm_sec;\n      local_478 = 2;\n      goto LAB_004060b0;\n    }\n    break;\n  case 0x54:\n    local_498 = \"%H:%M:%S\";\nLAB_00405e39:\n    uVar29 = FUN_00405920(0,0xffffffffffffffff,local_498,param_4,cVar24,param_6,param_7,param_8);\n    uVar6 = 0;\n    if (-1 < (int)uVar20) {\n      uVar6 = uVar20;\n    }\n    uVar12 = (ulong)(int)uVar6;\n    uVar18 = uVar12;\n    if (uVar12 <= uVar29) {\n      uVar18 = uVar29;\n    }\n    if ((ulong)(param_2 - lVar31) <= uVar18) {\n      return 0;\n    }\n    if (param_1 != (char *)0x0) {\n      pcVar11 = param_1;\n      if (uVar29 < uVar12) {\n        sVar19 = (long)(int)uVar20 - uVar29;\n        pcVar11 = param_1 + sVar19;\n        if (uVar26 == 0x30) {\n          memset(param_1,0x30,sVar19);\n        }\n        else {\n          memset(param_1,0x20,sVar19);\n        }\n      }\n      FUN_00405920(pcVar11,param_2 - lVar31,local_498,param_4,cVar24,param_6,param_7,param_8);\n      param_1 = pcVar11 + uVar29;\n    }\n    lVar31 = lVar31 + uVar18;\n    goto LAB_004059ae;\n  case 0x55:\n    if (uVar14 != 0x45) {\n      iVar23 = (param_4->tm_yday - param_4->tm_wday) + 7;\n      iVar15 = (int)((ulong)((long)iVar23 * -0x6db6db6d) >> 0x20);\nLAB_0040667d:\n      uVar6 = (iVar15 + iVar23 >> 2) - (iVar23 >> 0x1f);\n      local_478 = 2;\n      goto LAB_004060b0;\n    }\n    break;\n  case 0x57:\n    if (uVar14 != 0x45) {\n      iVar23 = param_4->tm_wday + 6;\n      iVar23 = ((iVar23 / 7) * 7 - iVar23) + 7 + param_4->tm_yday;\n      iVar15 = (int)((ulong)((long)iVar23 * -0x6db6db6d) >> 0x20);\n      goto LAB_0040667d;\n    }\n    break;\n  case 0x58:\n  case 99:\n  case 0x78:\n    if (uVar14 != 0x4f) goto switchD_00405a81_caseD_72;\n    break;\n  case 0x59:\n    if (uVar14 == 0x45) goto LAB_00406d3c;\n    if (uVar14 == 0x4f) break;\n    bVar4 = false;\n    local_478 = 4;\n    bVar32 = param_4->tm_year < -0x76c;\n    uVar6 = param_4->tm_year + 0x76c;\n    uVar22 = 0;\n    goto LAB_00406630;\n  case 0x5a:\n    if (cVar5 != '\\0') {\n      cVar24 = '\\0';\n    }\n    sVar19 = strlen(__s);\n    uVar6 = 0;\n    if (-1 < (int)uVar20) {\n      uVar6 = uVar20;\n    }\n    uVar18 = (ulong)(int)uVar6;\n    uVar29 = uVar18;\n    if (uVar18 <= sVar19) {\n      uVar29 = sVar19;\n    }\n    if ((ulong)(param_2 - lVar31) <= uVar29) {\n      return 0;\n    }\n    if (param_1 != (char *)0x0) {\n      pcVar11 = param_1;\n      if (sVar19 < uVar18) {\n        sVar17 = (long)(int)uVar20 - sVar19;\n        pcVar11 = param_1 + sVar17;\n        if (uVar26 == 0x30) {\n          memset(param_1,0x30,sVar17);\n        }\n        else {\n          memset(param_1,0x20,sVar17);\n        }\n      }\n      if (cVar5 == '\\0') {\n        if (cVar24 == '\\0') {\n          memcpy(pcVar11,__s,sVar19);\n        }\n        else {\n          FUN_004058d0();\n        }\n      }\n      else {\n        FUN_00405880();\n      }\n      param_1 = pcVar11 + sVar19;\n    }\n    lVar31 = lVar31 + uVar29;\n    goto LAB_004059ae;\n  case 0x62:\n  case 0x68:\n    if (cVar5 != '\\0') {\n      cVar24 = cVar5;\n    }\n    if (uVar14 == 0) goto LAB_00405b40;\n    break;\n  case 100:\n    if (uVar14 != 0x45) {\n      uVar6 = param_4->tm_mday;\n      local_478 = 2;\n      goto LAB_004060b0;\n    }\n    break;\n  case 0x65:\n    if (uVar14 != 0x45) {\n      uVar6 = param_4->tm_mday;\nLAB_00406281:\n      local_478 = 2;\n      if ((uVar26 != 0x30) && (uVar26 != 0x2d)) {\n        uVar26 = 0x5f;\n      }\n      goto LAB_004060b0;\n    }\n    break;\n  case 0x6a:\n    if (uVar14 != 0x45) {\n      bVar4 = false;\n      local_478 = 3;\n      bVar32 = param_4->tm_yday < -1;\n      uVar6 = param_4->tm_yday + 1;\n      uVar22 = 0;\n      goto LAB_004060bf;\n    }\n    break;\n  case 0x6b:\n    if (uVar14 != 0x45) {\n      uVar6 = param_4->tm_hour;\n      goto LAB_00406281;\n    }\n    break;\n  case 0x6c:\n    if (uVar14 != 0x45) goto LAB_00406281;\n    break;\n  case 0x6d:\n    if (uVar14 != 0x45) {\n      bVar4 = false;\n      local_478 = 2;\n      bVar32 = param_4->tm_mon < -1;\n      uVar6 = param_4->tm_mon + 1;\n      uVar22 = 0;\n      goto LAB_004060bf;\n    }\n    break;\n  case 0x6e:\n    uVar6 = 0;\n    if (-1 < (int)uVar20) {\n      uVar6 = uVar20;\n    }\n    uVar29 = (ulong)(int)uVar6;\n    if (uVar29 == 0) {\n      uVar29 = 1;\n    }\n    if ((ulong)(param_2 - lVar31) <= uVar29) {\n      return 0;\n    }\n    if (param_1 != (char *)0x0) {\n      pcVar11 = param_1;\n      if (1 < (int)uVar20) {\n        sVar19 = (long)(int)uVar20 - 1;\n        pcVar11 = param_1 + sVar19;\n        if (uVar26 == 0x30) {\n          memset(param_1,0x30,sVar19);\n        }\n        else {\n          memset(param_1,0x20,sVar19);\n        }\n      }\n      *pcVar11 = '\\n';\n      param_1 = pcVar11 + 1;\n    }\n    goto LAB_00406346;\n  case 0x70:\n    cVar28 = '\\0';\nLAB_00406255:\n    cVar13 = 'p';\n    if (cVar5 != '\\0') {\n      cVar24 = '\\0';\n      cVar28 = cVar5;\n    }\nLAB_00405c7d:\n    if (uVar14 != 0) {\n      uVar8 = 0;\n      goto LAB_004060df;\n    }\n    goto LAB_00405b60;\n  case 0x71:\n    uVar8 = 1;\n    local_478 = 1;\n    if (uVar14 == 0x4f) goto LAB_004060d2;\n    bVar4 = false;\n    bVar32 = false;\n    uVar22 = 0;\n    uVar6 = (param_4->tm_mon * 0xb >> 5) + 1;\n    goto LAB_00406380;\n  case 0x72:\nswitchD_00405a81_caseD_72:\n    cVar28 = '\\0';\n    goto LAB_00405c7d;\n  case 0x73:\n    pcVar9 = local_442 + 1;\n    local_418 = *(undefined8 *)&param_4->tm_isdst;\n    lStack_410 = param_4->tm_gmtoff;\n    local_438 = *(undefined8 *)param_4;\n    uStack_430 = *(undefined8 *)&param_4->tm_hour;\n    local_428 = *(undefined8 *)&param_4->tm_mon;\n    uStack_420 = *(undefined8 *)&param_4->tm_wday;\n    local_408 = param_4->tm_zone;\n    lVar10 = FUN_0040bf30(param_7,&local_438);\n    lVar30 = lVar10;\n    do {\n      lVar3 = lVar30 / 10;\n      cVar5 = (char)lVar30 + (char)lVar3 * -10;\n      if (lVar10 < 0) {\n        cVar5 = -cVar5;\n      }\n      pcVar9 = pcVar9 + -1;\n      *pcVar9 = cVar5 + '0';\n      lVar30 = lVar3;\n    } while (lVar3 != 0);\n    local_478 = 1;\n    if (0 < (int)uVar20) {\n      local_478 = uVar20;\n    }\n    if (lVar10 < 0) goto LAB_00406ac8;\n    goto LAB_00405d6d;\n  case 0x74:\n    uVar6 = 0;\n    if (-1 < (int)uVar20) {\n      uVar6 = uVar20;\n    }\n    uVar29 = (ulong)(int)uVar6;\n    if (uVar29 == 0) {\n      uVar29 = 1;\n    }\n    if ((ulong)(param_2 - lVar31) <= uVar29) {\n      return 0;\n    }\n    if (param_1 != (char *)0x0) {\n      pcVar11 = param_1;\n      if (1 < (int)uVar20) {\n        sVar19 = (long)(int)uVar20 - 1;\n        pcVar11 = param_1 + sVar19;\n        if (uVar26 == 0x30) {\n          memset(param_1,0x30,sVar19);\n        }\n        else {\n          memset(param_1,0x20,sVar19);\n        }\n      }\n      *pcVar11 = '\\t';\n      param_1 = pcVar11 + 1;\n    }\nLAB_00406346:\n    lVar31 = lVar31 + uVar29;\n    goto LAB_004059ae;\n  case 0x75:\n    uVar6 = (param_4->tm_wday + 6) % 7 + 1;\n    local_478 = 1;\n    goto LAB_004060b0;\n  case 0x77:\n    if (uVar14 != 0x45) {\n      uVar6 = param_4->tm_wday;\n      local_478 = 1;\n      goto LAB_004060b0;\n    }\n    break;\n  case 0x79:\n    if (uVar14 == 0x45) goto LAB_00406d3c;\n    local_478 = 2;\n    uVar8 = param_4->tm_year % 100;\n    uVar6 = uVar8;\n    if ((int)uVar8 < 0) {\n      uVar6 = uVar8 + 100;\n      if (param_4->tm_year < -0x76c) {\n        uVar6 = -uVar8;\n      }\n    }\nLAB_004060b0:\n    bVar4 = false;\n    uVar22 = 0;\n    bVar32 = SUB41(uVar6 >> 0x1f,0);\nLAB_004060bf:\n    if (uVar14 == 0x4f) {\n      uVar8 = local_478;\n      if (bVar32 != false) {\nLAB_00406639:\n        uVar6 = -uVar6;\n        goto LAB_00406380;\n      }\nLAB_004060d2:\n      cVar28 = '\\0';\nLAB_004060df:\n      local_456 = (char)uVar14;\n      pcVar11 = local_455;\n      uVar14 = uVar8;\nLAB_00405b60:\n      local_458 = 0x2520;\n      *pcVar11 = cVar13;\n      pcVar11[1] = '\\0';\n      sVar19 = strftime((char *)&local_438,0x400,(char *)&local_458,param_4);\n      pcVar9 = param_3;\n      if (sVar19 == 0) goto LAB_004059ae;\n      local_498 = (char *)(sVar19 - 1);\n      uVar6 = 0;\n      if (-1 < (int)uVar20) {\n        uVar6 = uVar20;\n      }\n      pcVar9 = (char *)(long)(int)uVar6;\n      pcVar16 = pcVar9;\n      if (pcVar9 <= local_498) {\n        pcVar16 = local_498;\n      }\n      if ((char *)(param_2 - lVar31) <= pcVar16) {\n        return 0;\n      }\n      if (param_1 != (char *)0x0) {\n        pcVar11 = param_1;\n        if ((uVar14 == 0) && (local_498 < pcVar9)) {\n          sVar19 = (long)(int)uVar20 - (long)local_498;\n          pcVar11 = param_1 + sVar19;\n          if (uVar26 == 0x30) {\n            memset(param_1,0x30,sVar19);\n          }\n          else {\n            memset(param_1,0x20,sVar19);\n          }\n        }\n        pcVar9 = (char *)((long)&local_438 + 1);\n        local_488 = param_3;\n        if (cVar28 == '\\0') goto LAB_00405c4b;\n        FUN_00405880();\n        goto LAB_00405c63;\n      }\n    }\n    else {\nLAB_00406630:\n      if (bVar32 != false) goto LAB_00406639;\nLAB_00406380:\n      pcVar9 = local_442 + 1;\n      do {\n        pcVar11 = pcVar9;\n        pcVar27 = pcVar9 + -1;\n        if ((uVar22 & 1) != 0) {\n          pcVar9[-1] = ':';\n          pcVar11 = pcVar9 + -1;\n          pcVar27 = pcVar9 + -2;\n        }\n        pcVar9 = pcVar27;\n        uVar22 = (int)uVar22 >> 1;\n        uVar14 = (uint)((ulong)uVar6 / 10);\n        pcVar11[-1] = (char)uVar6 + (char)((ulong)uVar6 / 10) * -10 + '0';\n        bVar2 = 9 < uVar6;\n        uVar6 = uVar14;\n      } while ((bVar2) || (uVar22 != 0));\n      if ((int)local_478 < (int)uVar20) {\n        local_478 = uVar20;\n      }\n      if (bVar32 == false) {\n        if (bVar4) {\n          if (uVar26 == 0x2d) {\n            cVar13 = '+';\n            goto LAB_00406adc;\n          }\n          cVar5 = '+';\nLAB_00406410:\n          local_498 = local_442 + (1 - (long)pcVar9);\n          iVar23 = (local_478 - 1) - (int)local_498;\n          pcVar11 = (char *)(param_2 - lVar31);\n          if (iVar23 < 1) {\n            uVar6 = 0;\n            if (-1 < (int)uVar20) {\n              uVar6 = uVar20;\n            }\n            pcVar27 = (char *)(long)(int)uVar6;\n            pcVar16 = (char *)0x1;\n            if (pcVar27 != (char *)0x0) {\n              pcVar16 = pcVar27;\n            }\n            if (pcVar11 <= pcVar16) {\n              return 0;\n            }\n            if (param_1 != (char *)0x0) {\n              pcVar11 = param_1;\n              if ((local_478 == 0) && ((char *)0x1 < pcVar27)) {\n                sVar19 = (long)(int)uVar20 - 1;\n                pcVar11 = param_1 + sVar19;\n                local_478 = 0;\n                if (uVar26 == 0x30) {\n                  memset(param_1,0x30,sVar19);\n                }\n                else {\n                  memset(param_1,0x20,sVar19);\n                }\n              }\n              param_1 = pcVar11 + 1;\n              *pcVar11 = cVar5;\n            }\n            lVar31 = lVar31 + (long)pcVar16;\n            pcVar11 = (char *)(param_2 - lVar31);\n          }\n          else {\n            if (uVar26 != 0x5f) {\n              if (pcVar11 <= (char *)(long)(int)local_478) {\n                return 0;\n              }\n              uVar6 = 0;\n              if (-1 < (int)uVar20) {\n                uVar6 = uVar20;\n              }\n              pcVar16 = (char *)(long)(int)uVar6;\n              pcVar27 = (char *)0x1;\n              if (pcVar16 != (char *)0x0) {\n                pcVar27 = pcVar16;\n              }\n              if (pcVar11 <= pcVar27) {\n                return 0;\n              }\n              lVar31 = lVar31 + (long)pcVar27;\n              sVar19 = (size_t)iVar23;\n              if (param_1 != (char *)0x0) {\n                pcVar11 = param_1;\n                if ((local_478 == 0) && ((char *)0x1 < pcVar16)) {\n                  sVar17 = (long)(int)uVar20 - 1;\n                  pcVar11 = param_1 + sVar17;\n                  local_480 = 0;\n                  local_478 = local_480;\n                  if (uVar26 == 0x30) {\n                    memset(param_1,0x30,sVar17);\n                  }\n                  else {\n                    memset(param_1,0x20,sVar17);\n                  }\n                }\n                param_1 = pcVar11 + 1;\n                *pcVar11 = cVar5;\n                goto LAB_004064e5;\n              }\n              goto LAB_00406530;\n            }\nLAB_00406c93:\n            pcVar27 = (char *)(long)iVar23;\n            if (pcVar11 <= pcVar27) {\n              return 0;\n            }\n            if (param_1 != (char *)0x0) {\n              memset(param_1,0x20,(size_t)pcVar27);\n              param_1 = param_1 + (long)pcVar27;\n            }\n            lVar31 = lVar31 + (long)pcVar27;\n            uVar6 = uVar20 - iVar23;\n            bVar32 = iVar23 < (int)uVar20;\n            uVar20 = 0;\n            if (bVar32) {\n              uVar20 = uVar6;\n            }\n            pcVar11 = (char *)(param_2 - lVar31);\n            if (cVar5 == '\\0') {\n              pcVar27 = (char *)(long)(int)uVar20;\n              uVar26 = 0x5f;\n              local_498 = local_442 + (1 - (long)pcVar9);\n            }\n            else {\n              pcVar27 = (char *)(long)(int)uVar20;\n              pcVar16 = (char *)0x1;\n              if (pcVar27 != (char *)0x0) {\n                pcVar16 = pcVar27;\n              }\n              if (pcVar11 <= pcVar16) {\n                return 0;\n              }\n              if (param_1 != (char *)0x0) {\n                pcVar11 = param_1;\n                if ((local_478 == 0) && ((char *)0x1 < pcVar27)) {\n                  pcVar11 = param_1 + (long)(pcVar27 + -1);\n                  memset(param_1,0x20,(size_t)(pcVar27 + -1));\n                  local_478 = 0;\n                }\n                param_1 = pcVar11 + 1;\n                *pcVar11 = cVar5;\n              }\n              lVar31 = lVar31 + (long)pcVar16;\n              uVar26 = 0x5f;\n              local_498 = local_442 + (1 - (long)pcVar9);\n              pcVar11 = (char *)(param_2 - lVar31);\n            }\n          }\n        }\n        else {\nLAB_00405d6d:\n          local_498 = local_442 + (1 - (long)pcVar9);\n          pcVar11 = (char *)(param_2 - lVar31);\n          if ((uVar26 == 0x2d) || (iVar23 = local_478 - (int)local_498, iVar23 < 1)) {\n            uVar6 = 0;\n            if (-1 < (int)uVar20) {\n              uVar6 = uVar20;\n            }\n            pcVar27 = (char *)(long)(int)uVar6;\n            goto LAB_00405da6;\n          }\n          if (uVar26 == 0x5f) {\n            cVar5 = '\\0';\n            goto LAB_00406c93;\n          }\n          if (pcVar11 <= (char *)(long)(int)local_478) {\n            return 0;\n          }\n          sVar19 = (size_t)iVar23;\nLAB_004064e5:\n          if (param_1 != (char *)0x0) {\n            memset(param_1,0x30,sVar19);\n            param_1 = param_1 + sVar19;\n          }\nLAB_00406530:\n          lVar31 = lVar31 + sVar19;\n          uVar20 = 0;\n          pcVar27 = (char *)0x0;\n          pcVar11 = (char *)(param_2 - lVar31);\n        }\n      }\n      else {\nLAB_00406ac8:\n        cVar5 = '-';\n        cVar13 = '-';\n        if (uVar26 != 0x2d) goto LAB_00406410;\nLAB_00406adc:\n        uVar6 = 0;\n        if (-1 < (int)uVar20) {\n          uVar6 = uVar20;\n        }\n        pcVar27 = (char *)(long)(int)uVar6;\n        pcVar11 = (char *)0x1;\n        if (pcVar27 != (char *)0x0) {\n          pcVar11 = pcVar27;\n        }\n        if ((char *)(param_2 - lVar31) <= pcVar11) {\n          return 0;\n        }\n        if (param_1 != (char *)0x0) {\n          if ((local_478 == 0) && ((char *)0x1 < pcVar27)) {\n            memset(param_1,0x20,(long)(int)uVar20 - 1U);\n            local_480 = 0;\n            param_1 = param_1 + ((long)(int)uVar20 - 1U);\n            local_478 = local_480;\n          }\n          *param_1 = cVar13;\n          param_1 = param_1 + 1;\n        }\n        lVar31 = lVar31 + (long)pcVar11;\n        uVar26 = 0x2d;\n        local_498 = local_442 + (1 - (long)pcVar9);\n        pcVar11 = (char *)(param_2 - lVar31);\n      }\nLAB_00405da6:\n      pcVar16 = pcVar27;\n      if (pcVar27 <= local_498) {\n        pcVar16 = local_498;\n      }\n      if (pcVar11 <= pcVar16) {\n        return 0;\n      }\n      if (param_1 != (char *)0x0) {\n        pcVar11 = param_1;\n        local_488 = param_3;\n        if ((local_478 == 0) && (local_498 < pcVar27)) {\n          sVar19 = (long)(int)uVar20 - (long)local_498;\n          pcVar11 = param_1 + sVar19;\n          if (uVar26 == 0x30) {\n            memset(param_1,0x30,sVar19);\n          }\n          else {\n            memset(param_1,0x20,sVar19);\n          }\n        }\nLAB_00405c4b:\n        if (cVar24 == '\\0') {\n          memcpy(pcVar11,pcVar9,(size_t)local_498);\n        }\n        else {\n          FUN_004058d0();\n        }\nLAB_00405c63:\n        param_1 = pcVar11 + (long)local_498;\n        param_3 = local_488;\n      }\n    }\n    lVar31 = lVar31 + (long)pcVar16;\n    pcVar9 = param_3;\n    goto LAB_004059ae;\n  case 0x7a:\n    lVar30 = 0;\nLAB_00406840:\n    if (param_4->tm_isdst < 0) goto LAB_004059ae;\n    bVar32 = true;\n    iVar23 = (int)param_4->tm_gmtoff;\n    if ((-1 < iVar23) && (bVar32 = false, iVar23 == 0)) {\n      bVar32 = *__s == '-';\n    }\n    uVar6 = iVar23 / 0xe10;\n    uVar8 = (iVar23 / 0x3c) % 0x3c;\n    param_3 = pcVar9;\n    if (lVar30 == 1) {\nLAB_00406f96:\n      local_478 = 6;\n      bVar4 = true;\n      uVar6 = uVar6 * 100 + uVar8;\n      uVar22 = 4;\n    }\n    else if (lVar30 == 0) {\n      uVar22 = 0;\n      bVar4 = true;\n      local_478 = 5;\n      uVar6 = uVar6 * 100 + uVar8;\n    }\n    else {\n      if (lVar30 != 2) {\n        if (lVar30 != 3) {\n          cVar5 = *pcVar9;\n          goto LAB_004068f7;\n        }\n        if (iVar23 % 0x3c == 0) {\n          if (uVar8 != 0) goto LAB_00406f96;\n          local_478 = 3;\n          bVar4 = true;\n          uVar22 = uVar8;\n          goto LAB_004060bf;\n        }\n      }\n      local_478 = 9;\n      bVar4 = true;\n      uVar22 = 0x14;\n      uVar6 = iVar23 % 0x3c + uVar6 * 10000 + uVar8 * 100;\n    }\n    goto LAB_004060bf;\n  }\n  pcVar11 = param_3 + -1;\n  do {\n    pcVar9 = pcVar11;\n    pcVar11 = pcVar9 + -1;\n  } while (*pcVar9 != '%');\n  __n = (ulong)(((int)(param_3 + -1) + 2) - (int)pcVar9);\n  uVar18 = param_2 - lVar31;\n  uVar6 = 0;\n  if (-1 < (int)uVar20) {\n    uVar6 = uVar20;\n  }\n  uVar12 = (ulong)(int)uVar6;\n  uVar29 = uVar12;\n  if (uVar12 <= __n) {\n    uVar29 = __n;\n  }\nLAB_004067a3:\n  if (uVar18 <= uVar29) {\n    return 0;\n  }\n  if (param_1 != (char *)0x0) {\n    pcVar11 = param_1;\n    if (__n < uVar12) {\n      sVar19 = (long)(int)uVar20 - __n;\n      pcVar11 = param_1 + sVar19;\n      if (uVar26 == 0x30) {\n        memset(param_1,0x30,sVar19);\n      }\n      else {\n        memset(param_1,0x20,sVar19);\n      }\n    }\n    if (cVar24 == '\\0') {\n      memcpy(pcVar11,pcVar9,__n);\n    }\n    else {\n      FUN_004058d0();\n    }\n    param_1 = pcVar11 + __n;\n  }\n  lVar31 = lVar31 + uVar29;\n  pcVar9 = param_3;\nLAB_004059ae:\n  cVar5 = pcVar9[1];\n  param_3 = pcVar9 + 1;\n  if (cVar5 == '\\0') goto LAB_004059bb;\n  goto LAB_0040598a;\n}\n\n",
            "funcName": "FUN_00405920"
        },
        {
            "funcStartAddr": "0x4070f0",
            "funcEndAddr": "0x40710f",
            "decompiledFuncCode": "\nvoid FUN_004070f0(void)\n\n{\n  FUN_00405920();\n  return;\n}\n\n",
            "funcName": "FUN_004070f0"
        },
        {
            "funcStartAddr": "0x407110",
            "funcEndAddr": "0x4071a9",
            "decompiledFuncCode": "\nvoid FUN_00407110(byte *param_1)\n\n{\n  byte *pbVar1;\n  char *pcVar2;\n  long lVar3;\n  ulong uVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  byte bVar10;\n  \n  bVar10 = 0;\n  if (param_1 == (byte *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar2 = strrchr((char *)param_1,0x2f);\n  if (pcVar2 != (char *)0x0) {\n    pbVar1 = (byte *)(pcVar2 + 1);\n    uVar4 = (long)pbVar1 - (long)param_1;\n    bVar7 = uVar4 < 6;\n    bVar9 = uVar4 == 6;\n    if (6 < (long)uVar4) {\n      lVar3 = 7;\n      pbVar5 = (byte *)(pcVar2 + -6);\n      pbVar6 = (byte *)\"/.libs/\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar5 < *pbVar6;\n        bVar9 = *pbVar5 == *pbVar6;\n        pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      bVar8 = false;\n      bVar7 = (!bVar7 && !bVar9) == bVar7;\n      if (bVar7) {\n        lVar3 = 3;\n        pbVar5 = pbVar1;\n        pbVar6 = &DAT_0040f3c8;\n        do {\n          if (lVar3 == 0) break;\n          lVar3 = lVar3 + -1;\n          bVar8 = *pbVar5 < *pbVar6;\n          bVar7 = *pbVar5 == *pbVar6;\n          pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n          pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        } while (bVar7);\n        param_1 = pbVar1;\n        if ((!bVar8 && !bVar7) == bVar8) {\n          param_1 = (byte *)(pcVar2 + 4);\n          program_invocation_short_name = param_1;\n        }\n      }\n    }\n  }\n  DAT_00614490 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00407110"
        },
        {
            "funcStartAddr": "0x4071b0",
            "funcEndAddr": "0x40728f",
            "decompiledFuncCode": "\nchar * FUN_004071b0(char *param_1,int param_2)\n\n{\n  char cVar1;\n  char *pcVar2;\n  byte *pbVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    pbVar3 = (byte *)FUN_0040c0d0();\n    if ((*pbVar3 & 0xdf) == 0x55) {\n      if (((((pbVar3[1] & 0xdf) != 0x54) || ((pbVar3[2] & 0xdf) != 0x46)) || (pbVar3[3] != 0x2d)) ||\n         ((pbVar3[4] != 0x38 || (pbVar3[5] != 0)))) {\nLAB_00407288:\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_0040f3d9;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0040f3ce;\n      }\n    }\n    else {\n      if (((((*pbVar3 & 0xdf) != 0x47) || ((pbVar3[1] & 0xdf) != 0x42)) || (pbVar3[2] != 0x31)) ||\n         (((pbVar3[3] != 0x38 || (pbVar3[4] != 0x30)) ||\n          ((pbVar3[5] != 0x33 || ((pbVar3[6] != 0x30 || (pbVar3[7] != 0)))))))) goto LAB_00407288;\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_0040f3d5;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0040f3d2;\n      }\n    }\n  }\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_004071b0"
        },
        {
            "funcStartAddr": "0x4072b0",
            "funcEndAddr": "0x4083e3",
            "decompiledFuncCode": "\nulong FUN_004072b0(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  ulong uVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ulong uVar9;\n  ushort **ppuVar10;\n  long lVar11;\n  char *pcVar12;\n  byte bVar13;\n  char cVar14;\n  ulong uVar15;\n  ulong uVar16;\n  byte bVar17;\n  uint uVar18;\n  ulong uVar19;\n  bool bVar20;\n  ulong uVar21;\n  ulong uVar22;\n  bool bVar23;\n  bool bVar24;\n  bool bVar25;\n  bool bVar26;\n  size_t local_a0;\n  char *local_78;\n  ulong local_70;\n  bool local_5c;\n  bool local_5b;\n  wint_t local_44;\n  mbstate_t local_40 [2];\n  \n  sVar8 = __ctype_get_mb_cur_max();\n  uVar18 = param_6 & 2;\n  local_5c = uVar18 != 0;\n  uVar9 = param_2;\n  switch(param_5) {\n  case 0:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = false;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar18 != 0) {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = false;\n      local_a0 = 1;\n      local_78 = \"\\'\";\n      break;\n    }\n    bVar6 = false;\nLAB_00407f01:\n    if (param_2 != 0) {\n      bVar3 = false;\n      local_5b = false;\n      bVar2 = true;\n      local_70 = 0;\n      goto LAB_00407b36;\n    }\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 1;\n    param_5 = 2;\n    local_70 = 0;\n    local_5b = false;\n    local_5c = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 3:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 4:\n    if (uVar18 == 0) {\n      bVar6 = true;\n      goto LAB_00407f01;\n    }\n  case 1:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 5:\n    if (uVar18 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      local_5b = false;\n      local_70 = 0;\n      bVar2 = true;\n      bVar3 = false;\n      local_5c = false;\n      uVar15 = 1;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    else {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 5;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\\"\";\n    break;\n  case 7:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = true;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      param_8 = (char *)FUN_004071b0(&DAT_0040f3dd,param_5);\n      param_9 = (char *)FUN_004071b0(\"\\'\");\n    }\n    uVar15 = 0;\n    if (uVar18 == 0) {\n      cVar14 = *param_8;\n      while (cVar14 != '\\0') {\n        if (uVar15 < param_2) {\n          param_1[uVar15] = cVar14;\n        }\n        uVar15 = uVar15 + 1;\n        cVar14 = param_8[uVar15];\n      }\n    }\n    local_a0 = strlen(param_9);\n    bVar2 = true;\n    bVar3 = false;\n    local_78 = param_9;\n    local_5b = false;\n    local_70 = 0;\n    bVar6 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\nLAB_00407348:\n  uVar22 = 0;\n  bVar5 = local_5b;\nLAB_00407358:\n  bVar23 = param_4 != uVar22;\n  if (param_4 == 0xffffffffffffffff) {\n    bVar23 = param_3[uVar22] != '\\0';\n  }\n  bVar26 = bVar6;\n  if (!bVar23) goto LAB_00407ad8;\n  bVar20 = (bool)(param_5 != 2 & bVar6);\n  __s1 = (byte *)(param_3 + uVar22);\n  uVar16 = uVar15;\n  bVar4 = bVar3;\n  if (bVar20) {\n    if (local_a0 == 0) {\nLAB_00407a50:\n      uVar19 = (ulong)*__s1;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00407a62_caseD_0;\n      default:\n        bVar20 = false;\n        goto switchD_004078ce_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00407765;\n      case 8:\n        bVar17 = 0x62;\n        break;\n      case 9:\nswitchD_00407a62_caseD_9:\n        bVar17 = 0x74;\n        break;\n      case 10:\nswitchD_00407a62_caseD_a:\n        bVar17 = 0x6e;\n        break;\n      case 0xb:\nswitchD_00407a62_caseD_b:\n        bVar17 = 0x76;\n        goto LAB_00407765;\n      case 0xc:\nswitchD_00407a62_caseD_c:\n        bVar17 = 0x66;\nLAB_00407765:\n        if (local_5c) {\n          bVar25 = false;\n          goto LAB_004076b8;\n        }\nLAB_00407770:\n        bVar23 = false;\n        goto LAB_0040752b;\n      case 0xd:\n        bVar20 = false;\nswitchD_00407448_caseD_d:\n        bVar25 = param_5 == 2;\n        uVar19 = 0xd;\n        bVar13 = 0x72;\n        goto LAB_00407680;\n      case 0x20:\n        bVar25 = false;\nLAB_00407aaa:\n        uVar19 = 0x20;\n        goto LAB_00407a72;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar20 = false;\nswitchD_00407448_caseD_21:\n        bVar25 = false;\n        goto LAB_0040768b;\n      case 0x23:\n      case 0x7e:\n        bVar26 = false;\nLAB_00407a8a:\n        if (uVar22 == 0) {\n          bVar25 = false;\n          bVar23 = bVar20;\n          bVar20 = bVar26;\n          goto LAB_00407498;\n        }\n        bVar23 = false;\n        goto LAB_004074af;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar25 = false;\nLAB_00407a72:\n        bVar24 = false;\n        bVar23 = bVar20;\n        bVar20 = bVar25;\n        goto LAB_004074b1;\n      case 0x27:\n        bVar20 = false;\n        goto switchD_004078ce_caseD_27;\n      case 0x3f:\n        bVar20 = false;\n        goto switchD_004078ce_caseD_3f;\n      case 0x5c:\n        bVar20 = false;\n        goto switchD_00407448_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        bVar20 = false;\n        goto switchD_004078ce_caseD_7b;\n      }\n      bVar25 = false;\n      bVar23 = false;\n      goto joined_r0x004076a7;\n    }\n    if ((param_4 == 0xffffffffffffffff) && (1 < local_a0)) {\n      param_4 = strlen(param_3);\n    }\n    if ((param_4 < uVar22 + local_a0) || (iVar7 = memcmp(__s1,local_78,local_a0), iVar7 != 0))\n    goto LAB_00407a50;\n    if (!local_5c) {\n      uVar19 = (ulong)*__s1;\n      bVar25 = bVar20;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00407448_caseD_0;\n      default:\n        goto switchD_004078ce_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00407770;\n      case 8:\n        bVar25 = false;\n        bVar23 = false;\n        bVar17 = 0x62;\n        break;\n      case 9:\n        goto switchD_00407a62_caseD_9;\n      case 10:\n        goto switchD_00407a62_caseD_a;\n      case 0xb:\n        goto switchD_00407a62_caseD_b;\n      case 0xc:\n        goto switchD_00407a62_caseD_c;\n      case 0xd:\n        goto switchD_00407448_caseD_d;\n      case 0x20:\n        goto LAB_00407aaa;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        goto switchD_00407448_caseD_21;\n      case 0x23:\n      case 0x7e:\n        bVar26 = bVar20;\n        goto LAB_00407a8a;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        goto LAB_00407a72;\n      case 0x27:\n        goto switchD_004078ce_caseD_27;\n      case 0x3f:\n        goto switchD_004078ce_caseD_3f;\n      case 0x5c:\n        goto switchD_00407448_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        goto switchD_004078ce_caseD_7b;\n      }\n      goto LAB_004074f2;\n    }\n    goto LAB_004076ca;\n  }\n  uVar19 = (ulong)*__s1;\n  switch(uVar19) {\n  case 0:\n    if (bVar6) {\nswitchD_00407a62_caseD_0:\n      if (!local_5c) {\n        bVar20 = false;\nswitchD_00407448_caseD_0:\n        bVar26 = param_5 == 2;\n        bVar24 = (bool)((bVar3 ^ 1U) & bVar26);\n        if (bVar24) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar16 = uVar15 + 3;\n          bVar3 = bVar24;\n          if (uVar9 <= uVar15 + 3) {\n            uVar16 = uVar15 + 4;\n            bVar23 = false;\n            bVar17 = 0x30;\n            bVar4 = bVar24;\n            goto LAB_004075a8;\n          }\nLAB_004077ea:\n          param_1[uVar16] = 0x5c;\n          uVar15 = uVar16;\n        }\n        else if (uVar15 < uVar9) goto LAB_004077ea;\n        uVar16 = uVar15 + 1;\n        bVar24 = bVar23;\n        if (param_5 == 2) {\n          bVar17 = 0x30;\n          bVar23 = false;\n          bVar4 = bVar3;\n          goto LAB_004075a8;\n        }\n        uVar19 = 0x30;\n        if ((uVar22 + 1 < param_4) && ((byte)(param_3[uVar22 + 1] - 0x30U) < 10)) {\n          if (uVar16 < uVar9) {\n            param_1[uVar16] = 0x30;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x30;\n          }\n          uVar16 = uVar15 + 3;\n          uVar19 = 0x30;\n        }\nLAB_00407829:\n        bVar17 = (byte)uVar19;\n        bVar23 = false;\n        uVar15 = uVar16;\n        bVar4 = bVar3;\n        if ((bool)(bVar6 ^ 1U | bVar26)) goto LAB_004075a8;\n        goto LAB_004074b1;\n      }\n      bVar26 = param_5 == 2;\n      goto LAB_004076bc;\n    }\n    if ((param_6 & 1) == 0) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0;\n      bVar23 = false;\n      bVar20 = false;\n      goto LAB_00407498;\n    }\n    uVar22 = uVar22 + 1;\n    goto LAB_00407358;\n  default:\nswitchD_004078ce_caseD_1:\n    bVar25 = bVar6;\n    if (sVar8 != 1) {\n      local_40[0] = (mbstate_t)0x0;\n      if (param_4 == 0xffffffffffffffff) {\n        param_4 = strlen(param_3);\n      }\n      uVar21 = 0;\n      do {\n        uVar1 = uVar22 + uVar21;\n        lVar11 = FUN_0040ba50(&local_44,param_3 + uVar1,param_4 - uVar1,local_40);\n        if (lVar11 == 0) break;\n        if (lVar11 == -1) {\n          bVar23 = false;\n          goto LAB_004081da;\n        }\n        if (lVar11 == -2) {\n          if ((param_4 <= uVar1) || (param_3[uVar1] == '\\0')) goto LAB_00408317;\n          goto LAB_00408307;\n        }\n        if (((param_5 == 2) && (local_5c)) && (lVar11 != 1)) {\n          pcVar12 = param_3 + uVar1 + 1;\n          do {\n            if (((byte)(*pcVar12 + 0xa5U) < 0x22) &&\n               ((1L << (*pcVar12 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n              param_5 = 2;\n              goto LAB_004076bc;\n            }\n            pcVar12 = pcVar12 + 1;\n          } while (param_3 + uVar1 + lVar11 != pcVar12);\n        }\n        iVar7 = iswprint(local_44);\n        if (iVar7 == 0) {\n          bVar23 = false;\n        }\n        uVar21 = uVar21 + lVar11;\n        iVar7 = mbsinit(local_40);\n      } while (iVar7 == 0);\n      bVar25 = (bool)((bVar23 ^ 1U) & bVar6);\n      goto LAB_004081da;\n    }\n    ppuVar10 = __ctype_b_loc();\n    uVar21 = 1;\n    bVar25 = ((*ppuVar10)[uVar19] & 0x4000) == 0;\n    bVar23 = !bVar25;\n    bVar25 = (bool)(bVar25 & bVar6);\n    goto LAB_004078a4;\n  case 7:\n    bVar25 = param_5 == 2;\n    uVar19 = 7;\n    bVar13 = 0x61;\n    break;\n  case 8:\n    bVar25 = param_5 == 2;\n    uVar19 = 8;\n    bVar13 = 0x62;\n    break;\n  case 9:\n    uVar19 = 9;\n    bVar13 = 0x74;\n    goto LAB_004078e2;\n  case 10:\n    uVar19 = 10;\n    bVar13 = 0x6e;\n    goto LAB_004078e2;\n  case 0xb:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xb;\n    bVar13 = 0x76;\n    break;\n  case 0xc:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xc;\n    bVar13 = 0x66;\n    break;\n  case 0xd:\n    uVar19 = 0xd;\n    bVar13 = 0x72;\nLAB_004078e2:\n    bVar25 = param_5 == 2;\n    bVar20 = (bool)(local_5c & bVar25);\n    if (bVar20) {\nLAB_004078fa:\n      param_5 = 2;\n      goto LAB_004076bc;\n    }\n    break;\n  case 0x20:\n    uVar19 = 0x20;\n    goto LAB_00407486;\n  case 0x21:\n  case 0x22:\n  case 0x24:\n  case 0x26:\n  case 0x28:\n  case 0x29:\n  case 0x2a:\n  case 0x3b:\n  case 0x3c:\n  case 0x3d:\n  case 0x3e:\n  case 0x5b:\n  case 0x5e:\n  case 0x60:\n  case 0x7c:\n    bVar23 = false;\nLAB_00407486:\n    bVar25 = param_5 == 2;\n    if ((local_5c) && (bVar25)) goto LAB_004078fa;\n    goto LAB_00407498;\n  case 0x23:\n  case 0x7e:\nLAB_0040747d:\n    bVar25 = param_5 == 2;\n    if (uVar22 == 0) goto LAB_00407486;\n    goto LAB_0040768b;\n  case 0x25:\n  case 0x2b:\n  case 0x2c:\n  case 0x2d:\n  case 0x2e:\n  case 0x2f:\n  case 0x30:\n  case 0x31:\n  case 0x32:\n  case 0x33:\n  case 0x34:\n  case 0x35:\n  case 0x36:\n  case 0x37:\n  case 0x38:\n  case 0x39:\n  case 0x3a:\n  case 0x41:\n  case 0x42:\n  case 0x43:\n  case 0x44:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x48:\n  case 0x49:\n  case 0x4a:\n  case 0x4b:\n  case 0x4c:\n  case 0x4d:\n  case 0x4e:\n  case 0x4f:\n  case 0x50:\n  case 0x51:\n  case 0x52:\n  case 0x53:\n  case 0x54:\n  case 0x55:\n  case 0x56:\n  case 0x57:\n  case 0x58:\n  case 0x59:\n  case 0x5a:\n  case 0x5d:\n  case 0x5f:\n  case 0x61:\n  case 0x62:\n  case 99:\n  case 100:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n  case 0x68:\n  case 0x69:\n  case 0x6a:\n  case 0x6b:\n  case 0x6c:\n  case 0x6d:\n  case 0x6e:\n  case 0x6f:\n  case 0x70:\n  case 0x71:\n  case 0x72:\n  case 0x73:\n  case 0x74:\n  case 0x75:\n  case 0x76:\n  case 0x77:\n  case 0x78:\n  case 0x79:\n  case 0x7a:\n    goto switchD_004078ce_caseD_25;\n  case 0x27:\nswitchD_004078ce_caseD_27:\n    bVar5 = bVar23;\n    if (param_5 != 2) {\n      bVar25 = false;\n      uVar19 = 0x27;\n      goto LAB_00407498;\n    }\n    if (!local_5c) {\n      if ((uVar9 == 0) || (uVar19 = 0, uVar21 = uVar9, local_70 != 0)) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x5c;\n        }\n        uVar19 = uVar9;\n        uVar21 = local_70;\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x27;\n        }\n      }\n      uVar16 = uVar15 + 3;\n      bVar17 = 0x27;\n      uVar9 = uVar19;\n      local_70 = uVar21;\n      bVar24 = false;\n      bVar4 = false;\n      goto LAB_004075a8;\n    }\n    goto LAB_004076bc;\n  case 0x3f:\nswitchD_004078ce_caseD_3f:\n    if (param_5 == 2) {\n      if (!local_5c) {\n        bVar17 = 0x3f;\n        bVar24 = false;\n        bVar23 = false;\n        goto LAB_004075a8;\n      }\n      goto LAB_004076bc;\n    }\n    if (param_5 != 5) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0x3f;\n      bVar23 = false;\n      goto LAB_00407498;\n    }\n    if (((((param_6 & 4) != 0) && (uVar21 = uVar22 + 2, uVar21 < param_4)) &&\n        (param_3[uVar22 + 1] == '?')) &&\n       ((uVar19 = (ulong)(byte)param_3[uVar21], (byte)param_3[uVar21] < 0x3f &&\n        ((0x7000a38200000000U >> (uVar19 & 0x3f) & 1) != 0)))) {\n      if (!local_5c) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x3f;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x22;\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x22;\n        }\n        if (uVar15 + 3 < uVar9) {\n          param_1[uVar15 + 3] = 0x3f;\n        }\n        uVar16 = uVar15 + 4;\n        bVar26 = false;\n        uVar22 = uVar21;\n        bVar24 = false;\n        goto LAB_00407829;\n      }\n      goto LAB_004076ca;\n    }\n    bVar25 = false;\n    uVar19 = 0x3f;\n    bVar23 = false;\n    goto LAB_00407498;\n  case 0x5c:\n    if (param_5 != 2) {\nswitchD_00407448_caseD_5c:\n      uVar19 = 0x5c;\n      bVar17 = 0x5c;\n      bVar13 = 0x5c;\n      bVar25 = (bool)(bVar6 & local_5c & local_a0 != 0);\n      if (!bVar25) break;\n      uVar22 = uVar22 + 1;\n      bVar23 = false;\n      goto LAB_004075c4;\n    }\n    if (local_5c) goto LAB_004076bc;\n    uVar22 = uVar22 + 1;\n    bVar23 = false;\n    bVar17 = 0x5c;\n    goto LAB_004075c4;\n  case 0x7b:\n  case 0x7d:\nswitchD_004078ce_caseD_7b:\n    bVar24 = param_4 != 1;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar24 = param_3[1] != '\\0';\n    }\n    bVar25 = param_5 == 2;\n    if (!bVar24) goto LAB_0040747d;\n    goto LAB_0040768b;\n  }\nLAB_00407680:\n  if (!bVar6) {\nLAB_0040768b:\n    bVar23 = false;\n    goto LAB_00407498;\n  }\n  bVar23 = false;\n  bVar17 = bVar13;\n  goto joined_r0x004076a7;\nLAB_00407ad8:\n  if ((uVar15 == 0) && ((bool)(local_5c & param_5 == 2))) {\n    param_5 = 2;\nLAB_004076bc:\n    if (bVar26) {\n      param_5 = 4;\n    }\nLAB_004076ca:\n    uVar9 = FUN_004072b0(param_1,uVar9,param_3,param_4,param_5,param_6 & 0xfffffffd,0,param_8,\n                         param_9);\n    return uVar9;\n  }\n  bVar26 = (bool)(param_5 == 2 & (local_5c ^ 1U));\n  bVar23 = (bool)(local_5c ^ 1U);\n  if ((!bVar26) || (bVar23 = bVar26, !bVar5)) {\nLAB_004083ad:\n    uVar22 = uVar15;\n    if (((local_78 != (char *)0x0) && (bVar23)) && (cVar14 = *local_78, cVar14 != '\\0')) {\n      do {\n        if (uVar22 < uVar9) {\n          param_1[uVar22] = cVar14;\n        }\n        uVar22 = uVar22 + 1;\n        cVar14 = local_78[uVar22 - uVar15];\n      } while (cVar14 != '\\0');\n    }\n    if (uVar22 < uVar9) {\n      param_1[uVar22] = 0;\n    }\n    return uVar22;\n  }\n  if (bVar2) {\n    uVar9 = FUN_004072b0(param_1,local_70,param_3,param_4,5,param_6,param_7,param_8,param_9);\n    return uVar9;\n  }\n  local_5b = uVar9 == 0 && local_70 != 0;\n  param_2 = local_70;\n  bVar23 = bVar5;\n  if (uVar9 != 0 || local_70 == 0) goto LAB_004083ad;\nLAB_00407b36:\n  *param_1 = 0x27;\n  param_5 = 2;\n  uVar15 = 1;\n  local_78 = \"\\'\";\n  local_a0 = 1;\n  local_5c = false;\n  uVar9 = param_2;\n  goto LAB_00407348;\n  while (__s1[uVar21] != 0) {\nLAB_00408307:\n    uVar21 = uVar21 + 1;\n    if (param_4 <= uVar22 + uVar21) break;\n  }\nLAB_00408317:\n  bVar23 = false;\nLAB_004081da:\n  if (1 < uVar21) {\nLAB_00407d9e:\n    bVar26 = false;\n    uVar21 = uVar21 + uVar22;\n    uVar16 = uVar22;\n    do {\n      bVar17 = (byte)uVar19;\n      if (bVar25) {\n        bVar26 = param_5 == 2;\n        if (local_5c) goto LAB_004076bc;\n        bVar26 = (bool)(bVar26 & (bVar4 ^ 1U));\n        if (bVar26) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar15 = uVar15 + 3;\n          bVar4 = bVar26;\n        }\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x5c;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = (char)(uVar19 >> 6) + '0';\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = ((byte)(uVar19 >> 3) & 7) + 0x30;\n        }\n        uVar22 = uVar16 + 1;\n        uVar15 = uVar15 + 3;\n        bVar17 = (bVar17 & 7) + 0x30;\n        bVar26 = bVar25;\n        if (uVar21 <= uVar22) goto LAB_0040753d;\n      }\n      else {\n        bVar3 = (bool)((bVar26 ^ 1U) & bVar4);\n        if (bVar20) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x5c;\n          }\n          uVar15 = uVar15 + 1;\n        }\n        uVar22 = uVar16 + 1;\n        if (uVar21 <= uVar22) goto LAB_004075c4;\n        if (bVar3) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x27;\n          }\n          uVar15 = uVar15 + 2;\n          bVar20 = false;\n          bVar4 = false;\n        }\n        else {\n          bVar20 = false;\n        }\n      }\n      uVar16 = uVar16 + 1;\n      if (uVar15 < uVar9) {\n        param_1[uVar15] = bVar17;\n      }\n      uVar19 = (ulong)(byte)param_3[uVar16];\n      uVar15 = uVar15 + 1;\n    } while( true );\n  }\nLAB_004078a4:\n  if (bVar25) {\n    bVar23 = false;\n    bVar25 = bVar6;\n    goto LAB_00407d9e;\n  }\nswitchD_004078ce_caseD_25:\n  bVar25 = param_5 == 2;\nLAB_00407498:\n  bVar17 = (byte)uVar19;\n  bVar24 = (bool)((bVar6 ^ 1U | bVar25) ^ 1 | local_5c);\n  bVar26 = bVar20;\n  if (bVar24) {\nLAB_004074af:\n    bVar24 = false;\n    bVar20 = bVar26;\nLAB_004074b1:\n    bVar17 = (byte)uVar19;\n    uVar16 = uVar15;\n    bVar4 = bVar3;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar19 >> 5) * 4) >> (bVar17 & 0x1f) & 1) == 0))\n    goto LAB_004075a8;\n    bVar25 = param_5 == 2;\n  }\n  else {\nLAB_004075a8:\n    bVar25 = param_5 == 2;\n    uVar15 = uVar16;\n    bVar3 = bVar4;\n    if (!bVar20) {\n      uVar22 = uVar22 + 1;\n      bVar3 = (bool)((bVar24 ^ 1U) & bVar4);\nLAB_004075c4:\n      if (bVar3) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x27;\n        }\n        uVar15 = uVar15 + 2;\n        bVar4 = false;\n      }\n      goto LAB_0040753d;\n    }\n  }\njoined_r0x004076a7:\n  if (local_5c) {\nLAB_004076b8:\n    bVar26 = (bool)(bVar6 & bVar25);\n    goto LAB_004076bc;\n  }\nLAB_004074f2:\n  bVar25 = (bool)((bVar3 ^ 1U) & bVar25);\n  if (bVar25) {\n    if (uVar15 < uVar9) {\n      param_1[uVar15] = 0x27;\n    }\n    if (uVar15 + 1 < uVar9) {\n      param_1[uVar15 + 1] = 0x24;\n    }\n    if (uVar15 + 2 < uVar9) {\n      param_1[uVar15 + 2] = 0x27;\n    }\n    uVar15 = uVar15 + 3;\n    bVar3 = bVar25;\n  }\nLAB_0040752b:\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = 0x5c;\n  }\n  uVar15 = uVar15 + 1;\n  uVar22 = uVar22 + 1;\n  bVar4 = bVar3;\nLAB_0040753d:\n  bVar3 = bVar4;\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = bVar17;\n  }\n  uVar15 = uVar15 + 1;\n  if (!bVar23) {\n    bVar2 = false;\n  }\n  goto LAB_00407358;\n}\n\n",
            "funcName": "FUN_004072b0"
        },
        {
            "funcStartAddr": "0x4084e0",
            "funcEndAddr": "0x40867b",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_004084e0(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_00614318;\n  if (DAT_00614330 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00409550();\n    }\n    if (PTR_DAT_00614318 == &DAT_00614320) {\n      puVar8 = (undefined4 *)FUN_00409360(0);\n      uVar6 = PTR_DAT_00614328._4_4_;\n      uVar5 = PTR_DAT_00614328._0_4_;\n      uVar3 = _UNK_00614324;\n      PTR_DAT_00614318 = (undefined *)puVar8;\n      *puVar8 = _DAT_00614320;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_00409360(PTR_DAT_00614318);\n      PTR_DAT_00614318 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_00614330 * 4,0,(long)((param_1 + 1) - DAT_00614330) << 4);\n    DAT_00614330 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_004072b0(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_006144a0) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)FUN_00409300(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_004072b0(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n",
            "funcName": "FUN_004084e0"
        },
        {
            "funcStartAddr": "0x408680",
            "funcEndAddr": "0x4086b4",
            "decompiledFuncCode": "\nvoid FUN_00408680(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_006145a0;\n  }\n  FUN_00409500(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00408680"
        },
        {
            "funcStartAddr": "0x4086c0",
            "funcEndAddr": "0x4086cf",
            "decompiledFuncCode": "\nundefined4 FUN_004086c0(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_006145a0;\n  }\n  return *param_1;\n}\n\n",
            "funcName": "FUN_004086c0"
        },
        {
            "funcStartAddr": "0x4086d0",
            "funcEndAddr": "0x4086df",
            "decompiledFuncCode": "\nvoid FUN_004086d0(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_006145a0;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_004086d0"
        },
        {
            "funcStartAddr": "0x4086e0",
            "funcEndAddr": "0x408713",
            "decompiledFuncCode": "\nuint FUN_004086e0(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_006145a0;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n",
            "funcName": "FUN_004086e0"
        },
        {
            "funcStartAddr": "0x408720",
            "funcEndAddr": "0x408733",
            "decompiledFuncCode": "\nundefined4 FUN_00408720(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_006145a0;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00408720"
        },
        {
            "funcStartAddr": "0x408740",
            "funcEndAddr": "0x40876b",
            "decompiledFuncCode": "\nvoid FUN_00408740(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_006145a0;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00408740"
        },
        {
            "funcStartAddr": "0x408770",
            "funcEndAddr": "0x4087e2",
            "decompiledFuncCode": "\nvoid FUN_00408770(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_006145a0;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_004072b0(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00408770"
        },
        {
            "funcStartAddr": "0x4087f0",
            "funcEndAddr": "0x4088d1",
            "decompiledFuncCode": "\nundefined8 FUN_004087f0(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_006145a0;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_004072b0(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = FUN_00409300(lVar3 + 1);\n  FUN_004072b0(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n",
            "funcName": "FUN_004087f0"
        },
        {
            "funcStartAddr": "0x4088e0",
            "funcEndAddr": "0x4088ea",
            "decompiledFuncCode": "\nvoid FUN_004088e0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_004087f0(param_1,param_2,0,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_004088e0"
        },
        {
            "funcStartAddr": "0x4088f0",
            "funcEndAddr": "0x408985",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_004088f0(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_00614318;\n  if (1 < DAT_00614330) {\n    ppvVar2 = (void **)(PTR_DAT_00614318 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_00614318 + (ulong)(DAT_00614330 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_006144a0) {\n    free(*(undefined **)(__ptr_00 + 8));\n    _DAT_00614320 = 0x100;\n    PTR_DAT_00614328 = &DAT_006144a0;\n  }\n  if (__ptr_00 != &DAT_00614320) {\n    free(__ptr_00);\n    PTR_DAT_00614318 = &DAT_00614320;\n  }\n  DAT_00614330 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_004088f0"
        },
        {
            "funcStartAddr": "0x408990",
            "funcEndAddr": "0x4089a1",
            "decompiledFuncCode": "\nvoid FUN_00408990(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_004084e0(param_1,param_2,0xffffffffffffffff,&DAT_006145a0);\n  return;\n}\n\n",
            "funcName": "FUN_00408990"
        },
        {
            "funcStartAddr": "0x4089b0",
            "funcEndAddr": "0x4089ba",
            "decompiledFuncCode": "\nvoid FUN_004089b0(void)\n\n{\n  FUN_004084e0();\n  return;\n}\n\n",
            "funcName": "FUN_004089b0"
        },
        {
            "funcStartAddr": "0x4089c0",
            "funcEndAddr": "0x4089d6",
            "decompiledFuncCode": "\nvoid FUN_004089c0(undefined8 param_1)\n\n{\n  FUN_004084e0(0,param_1,0xffffffffffffffff,&DAT_006145a0);\n  return;\n}\n\n",
            "funcName": "FUN_004089c0"
        },
        {
            "funcStartAddr": "0x4089e0",
            "funcEndAddr": "0x4089f2",
            "decompiledFuncCode": "\nvoid FUN_004089e0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_004084e0(0,param_1,param_2,&DAT_006145a0);\n  return;\n}\n\n",
            "funcName": "FUN_004089e0"
        },
        {
            "funcStartAddr": "0x408a00",
            "funcEndAddr": "0x408a68",
            "decompiledFuncCode": "\nvoid FUN_00408a00(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_004084e0(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00408a00"
        },
        {
            "funcStartAddr": "0x408a70",
            "funcEndAddr": "0x408ad4",
            "decompiledFuncCode": "\nvoid FUN_00408a70(undefined8 param_1,int param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_004084e0(param_1,param_3,param_4,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00408a70"
        },
        {
            "funcStartAddr": "0x408ae0",
            "funcEndAddr": "0x408aec",
            "decompiledFuncCode": "\nvoid FUN_00408ae0(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00408a00(0,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00408ae0"
        },
        {
            "funcStartAddr": "0x408af0",
            "funcEndAddr": "0x408aff",
            "decompiledFuncCode": "\nvoid FUN_00408af0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00408a70(0,param_1,param_2,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00408af0"
        },
        {
            "funcStartAddr": "0x408b00",
            "funcEndAddr": "0x408b70",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00408b00(undefined8 param_1,undefined8 param_2,byte param_3)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  \n  local_18 = DAT_006145d0;\n  local_48 = _DAT_006145a0;\n  uStack_40 = uRam00000000006145a8;\n  local_38 = _DAT_006145b0;\n  uStack_30 = uRam00000000006145b8;\n  puVar1 = (uint *)((long)&uStack_40 + (ulong)(param_3 >> 5) * 4);\n  local_28 = _DAT_006145c0;\n  uStack_20 = uRam00000000006145c8;\n  uVar2 = *puVar1;\n  *puVar1 = (~(uVar2 >> (param_3 & 0x1f)) & 1) << (param_3 & 0x1f) ^ uVar2;\n  FUN_004084e0(0,param_1,param_2,&local_48);\n  return;\n}\n\n",
            "funcName": "FUN_00408b00"
        },
        {
            "funcStartAddr": "0x408b70",
            "funcEndAddr": "0x408b7d",
            "decompiledFuncCode": "\nvoid FUN_00408b70(undefined8 param_1,char param_2)\n\n{\n  FUN_00408b00(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00408b70"
        },
        {
            "funcStartAddr": "0x408b80",
            "funcEndAddr": "0x408b91",
            "decompiledFuncCode": "\nvoid FUN_00408b80(undefined8 param_1)\n\n{\n  FUN_00408b00(param_1,0xffffffffffffffff,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00408b80"
        },
        {
            "funcStartAddr": "0x408ba0",
            "funcEndAddr": "0x408baa",
            "decompiledFuncCode": "\nvoid FUN_00408ba0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00408b00(param_1,param_2,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00408ba0"
        },
        {
            "funcStartAddr": "0x408bb0",
            "funcEndAddr": "0x408c1e",
            "decompiledFuncCode": "\nvoid FUN_00408bb0(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_40 = 0x400000000000000;\n    local_44 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_004084e0(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00408bb0"
        },
        {
            "funcStartAddr": "0x408c20",
            "funcEndAddr": "0x408c8c",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00408c20(undefined8 param_1,long param_2,long param_3,undefined8 param_4,undefined8 param_5\n                 )\n\n{\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long lStack_20;\n  long local_18;\n  \n  uStack_40 = uRam00000000006145a8;\n  local_38 = _DAT_006145b0;\n  uStack_30 = uRam00000000006145b8;\n  local_28 = _DAT_006145c0;\n  lStack_20 = uRam00000000006145c8;\n  local_18 = DAT_006145d0;\n  local_48 = CONCAT44((int)((ulong)_DAT_006145a0 >> 0x20),10);\n  if ((param_2 != 0) && (param_3 != 0)) {\n    lStack_20 = param_2;\n    local_18 = param_3;\n    FUN_004084e0(param_1,param_4,param_5,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00408c20"
        },
        {
            "funcStartAddr": "0x408c90",
            "funcEndAddr": "0x408c99",
            "decompiledFuncCode": "\nvoid FUN_00408c90(void)\n\n{\n  FUN_00408c20();\n  return;\n}\n\n",
            "funcName": "FUN_00408c90"
        },
        {
            "funcStartAddr": "0x408ca0",
            "funcEndAddr": "0x408cb7",
            "decompiledFuncCode": "\nvoid FUN_00408ca0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00408c20(0,param_1,param_2,param_3,0xffffffffffffffff);\n  return;\n}\n\n",
            "funcName": "FUN_00408ca0"
        },
        {
            "funcStartAddr": "0x408cc0",
            "funcEndAddr": "0x408cd3",
            "decompiledFuncCode": "\nvoid FUN_00408cc0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00408c20(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n",
            "funcName": "FUN_00408cc0"
        },
        {
            "funcStartAddr": "0x408ce0",
            "funcEndAddr": "0x408cea",
            "decompiledFuncCode": "\nvoid FUN_00408ce0(void)\n\n{\n  FUN_004084e0();\n  return;\n}\n\n",
            "funcName": "FUN_00408ce0"
        },
        {
            "funcStartAddr": "0x408cf0",
            "funcEndAddr": "0x408d02",
            "decompiledFuncCode": "\nvoid FUN_00408cf0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_004084e0(0,param_1,param_2,&DAT_006142e0);\n  return;\n}\n\n",
            "funcName": "FUN_00408cf0"
        },
        {
            "funcStartAddr": "0x408d10",
            "funcEndAddr": "0x408d21",
            "decompiledFuncCode": "\nvoid FUN_00408d10(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_004084e0(param_1,param_2,0xffffffffffffffff,&DAT_006142e0);\n  return;\n}\n\n",
            "funcName": "FUN_00408d10"
        },
        {
            "funcStartAddr": "0x408d30",
            "funcEndAddr": "0x408d46",
            "decompiledFuncCode": "\nvoid FUN_00408d30(undefined8 param_1)\n\n{\n  FUN_004084e0(0,param_1,0xffffffffffffffff,&DAT_006142e0);\n  return;\n}\n\n",
            "funcName": "FUN_00408d30"
        },
        {
            "funcStartAddr": "0x408d50",
            "funcEndAddr": "0x408d5e",
            "decompiledFuncCode": "\nvoid FUN_00408d50(undefined8 param_1)\n\n{\n  FUN_0040aaa0(param_1,0,3);\n  return;\n}\n\n",
            "funcName": "FUN_00408d50"
        },
        {
            "funcStartAddr": "0x408d60",
            "funcEndAddr": "0x409104",
            "decompiledFuncCode": "\nundefined8\nFUN_00408d60(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0041012b,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00408fdc;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_00408fdc:\n    __fprintf_chk(param_1,1,uVar7,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[1];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar1 = param_5[2];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_00409079;\n  case 7:\n    uVar1 = param_5[2];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    local_58 = param_5[1];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_00409079:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_58,uVar1,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00408e5a;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_00408e5a:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_50,local_58,uVar6,uVar5,uVar4,uVar1,local_48);\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00408d60"
        },
        {
            "funcStartAddr": "0x409140",
            "funcEndAddr": "0x409160",
            "decompiledFuncCode": "\nvoid FUN_00409140(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_00408d60();\n  return;\n}\n\n",
            "funcName": "FUN_00409140"
        },
        {
            "funcStartAddr": "0x409160",
            "funcEndAddr": "0x4091b9",
            "decompiledFuncCode": "\nvoid FUN_00409160(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long local_58 [11];\n  \n  lVar4 = 0;\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_58[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_58[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_00408d60();\n  return;\n}\n\n",
            "funcName": "FUN_00409160"
        },
        {
            "funcStartAddr": "0x4091c0",
            "funcEndAddr": "0x409278",
            "decompiledFuncCode": "\nvoid FUN_004091c0(void)\n\n{\n  long lVar1;\n  undefined8 in_R8;\n  ulong uVar2;\n  undefined8 in_R9;\n  long lVar3;\n  long *plVar4;\n  long local_88 [10];\n  long local_38 [4];\n  long local_18 [3];\n  \n  local_18[0] = in_R8;\n  plVar4 = (long *)&stack0x00000008;\n  uVar2 = 0x20;\n  local_18[1] = in_R9;\n  lVar3 = 0;\n  do {\n    if ((uint)uVar2 < 0x30) {\n      lVar1 = *(long *)((long)local_38 + uVar2);\n      local_88[lVar3] = lVar1;\n      uVar2 = (ulong)((uint)uVar2 + 8);\n    }\n    else {\n      lVar1 = *plVar4;\n      local_88[lVar3] = lVar1;\n      plVar4 = plVar4 + 1;\n    }\n  } while ((lVar1 != 0) && (lVar3 = lVar3 + 1, lVar3 != 10));\n  FUN_00408d60();\n  return;\n}\n\n",
            "funcName": "FUN_004091c0"
        },
        {
            "funcStartAddr": "0x409280",
            "funcEndAddr": "0x4092f4",
            "decompiledFuncCode": "\nvoid FUN_00409280(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n",
            "funcName": "FUN_00409280"
        },
        {
            "funcStartAddr": "0x409300",
            "funcEndAddr": "0x40931a",
            "decompiledFuncCode": "\nvoid FUN_00409300(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00409550();\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00409300"
        },
        {
            "funcStartAddr": "0x409320",
            "funcEndAddr": "0x409341",
            "decompiledFuncCode": "\nvoid FUN_00409320(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_00409300();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00409550();\n}\n\n",
            "funcName": "FUN_00409320"
        },
        {
            "funcStartAddr": "0x409350",
            "funcEndAddr": "0x409352",
            "decompiledFuncCode": "\nvoid thunk_FUN_00409300(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00409550();\n  }\n  return;\n}\n\n",
            "funcName": "thunk_409350"
        },
        {
            "funcStartAddr": "0x409360",
            "funcEndAddr": "0x409390",
            "decompiledFuncCode": "\nvoid * FUN_00409360(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00409550();\n  }\n  return pvVar1;\n}\n\n",
            "funcName": "FUN_00409360"
        },
        {
            "funcStartAddr": "0x4093a0",
            "funcEndAddr": "0x4093c1",
            "decompiledFuncCode": "\nvoid FUN_004093a0(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_00409360();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00409550();\n}\n\n",
            "funcName": "FUN_004093a0"
        },
        {
            "funcStartAddr": "0x4093d0",
            "funcEndAddr": "0x409448",
            "decompiledFuncCode": "\nvoid FUN_004093d0(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar2 = *param_2;\n  if (param_1 == 0) {\n    if (uVar2 == 0) {\n      uVar2 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar3 = (ulong)(SUB168(ZEXT816(uVar2) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar2) * ZEXT816(param_3),0) < 0) || (uVar3 != 0)) goto LAB_0040942b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar3 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar2) {\nLAB_0040942b:\n                    /* WARNING: Subroutine does not return */\n      FUN_00409550(param_1,param_2,uVar3);\n    }\n    uVar2 = (uVar2 >> 1) + 1 + uVar2;\n  }\n  *param_2 = uVar2;\n  FUN_00409360(param_1,uVar2 * param_3);\n  return;\n}\n\n",
            "funcName": "FUN_004093d0"
        },
        {
            "funcStartAddr": "0x409460",
            "funcEndAddr": "0x4094aa",
            "decompiledFuncCode": "\nvoid FUN_00409460(long param_1,ulong *param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = *param_2;\n  if (param_1 == 0) {\n    if (uVar1 == 0) {\n      *param_2 = 0x80;\n      FUN_00409360(0,0x80);\n      return;\n    }\n    if ((long)uVar1 < 0) goto LAB_004094aa;\n  }\n  else {\n    if (0x5555555555555553 < uVar1) {\nLAB_004094aa:\n                    /* WARNING: Subroutine does not return */\n      FUN_00409550();\n    }\n    uVar1 = (uVar1 >> 1) + 1 + uVar1;\n  }\n  *param_2 = uVar1;\n  FUN_00409360(param_1,uVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00409460"
        },
        {
            "funcStartAddr": "0x4094b0",
            "funcEndAddr": "0x4094c7",
            "decompiledFuncCode": "\nvoid FUN_004094b0(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00409300();\n  memset(__s,0,param_1);\n  return;\n}\n\n",
            "funcName": "FUN_004094b0"
        },
        {
            "funcStartAddr": "0x4094d0",
            "funcEndAddr": "0x4094fe",
            "decompiledFuncCode": "\nvoid FUN_004094d0(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00409550();\n}\n\n",
            "funcName": "FUN_004094d0"
        },
        {
            "funcStartAddr": "0x409500",
            "funcEndAddr": "0x409528",
            "decompiledFuncCode": "\nvoid FUN_00409500(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00409300(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00409500"
        },
        {
            "funcStartAddr": "0x409530",
            "funcEndAddr": "0x409543",
            "decompiledFuncCode": "\nvoid FUN_00409530(char *param_1)\n\n{\n  void *__dest;\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  __dest = (void *)FUN_00409300(sVar1 + 1);\n  memcpy(__dest,param_1,sVar1 + 1);\n  return;\n}\n\n",
            "funcName": "FUN_00409530"
        },
        {
            "funcStartAddr": "0x409550",
            "funcEndAddr": "0x40957c",
            "decompiledFuncCode": "\nvoid FUN_00409550(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n                    /* WARNING: Subroutine does not return */\n  error(DAT_006142c0,0,\"%s\",uVar1);\n}\n\n",
            "funcName": "FUN_00409550"
        },
        {
            "funcStartAddr": "0x409590",
            "funcEndAddr": "0x409665",
            "decompiledFuncCode": "\nlong FUN_00409590(undefined8 param_1,undefined4 param_2,long param_3,long param_4,undefined8 param_5\n                 ,undefined8 param_6,int param_7)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  long local_40 [2];\n  \n  iVar1 = FUN_004096b0(param_1,0,param_2,local_40);\n  if (iVar1 == 0) {\n    if ((param_3 <= local_40[0]) && (local_40[0] <= param_4)) {\n      return local_40[0];\n    }\n    piVar2 = __errno_location();\n    if (local_40[0] < 0x40000000) {\n      iVar1 = 0x22;\n      if (local_40[0] < -0x40000000) {\n        iVar1 = 0x4b;\n      }\n      *piVar2 = iVar1;\n      goto LAB_004095e7;\n    }\n  }\n  else {\n    piVar2 = __errno_location();\n    if (iVar1 != 1) {\n      if (iVar1 == 3) {\n        *piVar2 = 0;\n      }\n      goto LAB_004095e7;\n    }\n  }\n  *piVar2 = 0x4b;\nLAB_004095e7:\n  uVar3 = FUN_00408d30(param_1);\n  iVar1 = *piVar2;\n  if (iVar1 == 0x16) {\n    iVar1 = 0;\n  }\n  if (param_7 == 0) {\n    param_7 = 1;\n  }\n                    /* WARNING: Subroutine does not return */\n  error(param_7,iVar1,\"%s: %s\",param_6,uVar3);\n}\n\n",
            "funcName": "FUN_00409590"
        },
        {
            "funcStartAddr": "0x409680",
            "funcEndAddr": "0x4096a1",
            "decompiledFuncCode": "\nvoid FUN_00409680(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5,undefined8 param_6)\n\n{\n  FUN_00409590(param_1,10,param_2,param_3,param_4,param_5,param_6);\n  return;\n}\n\n",
            "funcName": "FUN_00409680"
        },
        {
            "funcStartAddr": "0x4096b0",
            "funcEndAddr": "0x409c9d",
            "decompiledFuncCode": "\nulong FUN_004096b0(byte *param_1,byte **param_2,uint param_3,long *param_4,char *param_5)\n\n{\n  byte bVar1;\n  byte bVar2;\n  byte *pbVar3;\n  int *piVar4;\n  long lVar5;\n  ulong uVar6;\n  char *pcVar7;\n  long lVar8;\n  long lVar9;\n  long lVar10;\n  byte bVar11;\n  uint uVar12;\n  int iVar13;\n  int iVar14;\n  uint uVar15;\n  byte *local_40 [2];\n  \n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoimax\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = local_40;\n  }\n  piVar4 = __errno_location();\n  *piVar4 = 0;\n  lVar5 = __strtol_internal(param_1,param_2,param_3,0);\n  pbVar3 = *param_2;\n  if (pbVar3 == param_1) {\n    if (param_5 == (char *)0x0) {\n      return 4;\n    }\n    bVar1 = *pbVar3;\n    if (bVar1 == 0) {\n      return 4;\n    }\n    lVar5 = 1;\n    uVar6 = 0;\n    pcVar7 = strchr(param_5,(int)(char)bVar1);\n    if (pcVar7 == (char *)0x0) {\n      return 4;\n    }\n  }\n  else {\n    if (*piVar4 == 0) {\n      uVar6 = 0;\n    }\n    else {\n      if (*piVar4 != 0x22) {\n        return 4;\n      }\n      uVar6 = 1;\n    }\n    uVar15 = (uint)uVar6;\n    if ((param_5 == (char *)0x0) || (bVar1 = *pbVar3, bVar1 == 0)) goto LAB_00409727;\n    pcVar7 = strchr(param_5,(int)(char)bVar1);\n    if (pcVar7 == (char *)0x0) goto switchD_004097b2_caseD_1;\n  }\n  uVar15 = (uint)uVar6;\n  uVar12 = bVar1 - 0x45;\n  bVar11 = (byte)uVar12;\n  if (((bVar11 < 0x30) && ((0x814400308945U >> ((ulong)uVar12 & 0x3f) & 1) != 0)) &&\n     (pcVar7 = strchr(param_5,0x30), pcVar7 != (char *)0x0)) {\n    bVar2 = pbVar3[1];\n    if (bVar2 != 0x44) {\n      if (bVar2 == 0x69) {\n        iVar14 = 0x400;\n        iVar13 = (pbVar3[2] == 0x42) + 1 + (uint)(pbVar3[2] == 0x42);\n        goto LAB_004097a0;\n      }\n      if (bVar2 != 0x42) {\n                    /* WARNING: Could not recover jumptable at 0x00409808. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        uVar6 = (*(code *)(&PTR_LAB_004106a8)[bVar11])();\n        return uVar6;\n      }\n    }\n    iVar13 = 2;\n    iVar14 = 1000;\n  }\n  else {\n    iVar13 = 1;\n    iVar14 = 0x400;\n  }\nLAB_004097a0:\n  switch(bVar1 - 0x42 & 0xff) {\n  case 0:\n    if (lVar5 < -0x20000000000000) goto LAB_00409948;\n    if (lVar5 < 0x20000000000000) {\n      lVar5 = lVar5 << 10;\n    }\n    else {\nLAB_00409d00:\n      lVar5 = 0x7fffffffffffffff;\n      uVar6 = 1;\n    }\n    break;\n  default:\nswitchD_004097b2_caseD_1:\n    *param_4 = lVar5;\n    return (ulong)(uVar15 | 2);\n  case 3:\n    lVar10 = (long)iVar14;\n    iVar14 = 6;\n    uVar12 = 0;\n    do {\n      if (lVar5 < SUB168((SEXT816(-0x8000000000000000) & (undefined  [16])0xffffffffffffffff |\n                         ZEXT816(0x8000000000000000)) / SEXT816(lVar10),0)) {\n        lVar5 = -0x8000000000000000;\n        uVar12 = 1;\n      }\n      else if (SUB168((SEXT816(0x7fffffffffffffff) & (undefined  [16])0xffffffffffffffff |\n                      ZEXT816(0x7fffffffffffffff)) / SEXT816(lVar10),0) < lVar5) {\n        lVar5 = 0x7fffffffffffffff;\n        uVar12 = 1;\n      }\n      else {\n        lVar5 = lVar5 * lVar10;\n      }\n      iVar14 = iVar14 + -1;\n    } while (iVar14 != 0);\n    goto LAB_00409cf0;\n  case 5:\n  case 0x25:\n    lVar10 = (long)iVar14;\n    iVar14 = 3;\n    uVar12 = 0;\n    do {\n      if (lVar5 < SUB168((SEXT816(-0x8000000000000000) & (undefined  [16])0xffffffffffffffff |\n                         ZEXT816(0x8000000000000000)) / SEXT816(lVar10),0)) {\n        lVar5 = -0x8000000000000000;\n        uVar12 = 1;\n      }\n      else if (SUB168((SEXT816(0x7fffffffffffffff) & (undefined  [16])0xffffffffffffffff |\n                      ZEXT816(0x7fffffffffffffff)) / SEXT816(lVar10),0) < lVar5) {\n        lVar5 = 0x7fffffffffffffff;\n        uVar12 = 1;\n      }\n      else {\n        lVar5 = lVar5 * lVar10;\n      }\n      iVar14 = iVar14 + -1;\n    } while (iVar14 != 0);\n    goto LAB_00409cf0;\n  case 9:\n  case 0x29:\n    if (lVar5 < SUB168((SEXT816(-0x8000000000000000) & (undefined  [16])0xffffffffffffffff |\n                       ZEXT816(0x8000000000000000)) / SEXT816((long)iVar14),0)) goto LAB_00409948;\n    lVar8 = SUB168((SEXT816(0x7fffffffffffffff) & (undefined  [16])0xffffffffffffffff |\n                   ZEXT816(0x7fffffffffffffff)) / SEXT816((long)iVar14),0);\nLAB_004098ec:\n    if (lVar8 < lVar5) goto LAB_00409d00;\n    lVar5 = lVar5 * iVar14;\n    break;\n  case 0xb:\n  case 0x2b:\n    lVar9 = (long)iVar14;\n    lVar10 = SUB168((SEXT816(-0x8000000000000000) & (undefined  [16])0xffffffffffffffff |\n                    ZEXT816(0x8000000000000000)) / SEXT816(lVar9),0);\n    if (lVar10 <= lVar5) {\n      lVar8 = SUB168((SEXT816(0x7fffffffffffffff) & (undefined  [16])0xffffffffffffffff |\n                     ZEXT816(0x7fffffffffffffff)) / SEXT816(lVar9),0);\n      if (lVar8 < lVar5) goto LAB_00409d00;\n      lVar5 = lVar5 * lVar9;\n      if (lVar10 <= lVar5) goto LAB_004098ec;\n    }\nLAB_00409948:\n    lVar5 = -0x8000000000000000;\n    uVar6 = 1;\n    break;\n  case 0xe:\n    lVar10 = (long)iVar14;\n    iVar14 = 5;\n    uVar12 = 0;\n    do {\n      if (lVar5 < SUB168((SEXT816(-0x8000000000000000) & (undefined  [16])0xffffffffffffffff |\n                         ZEXT816(0x8000000000000000)) / SEXT816(lVar10),0)) {\n        lVar5 = -0x8000000000000000;\n        uVar12 = 1;\n      }\n      else if (SUB168((SEXT816(0x7fffffffffffffff) & (undefined  [16])0xffffffffffffffff |\n                      ZEXT816(0x7fffffffffffffff)) / SEXT816(lVar10),0) < lVar5) {\n        lVar5 = 0x7fffffffffffffff;\n        uVar12 = 1;\n      }\n      else {\n        lVar5 = lVar5 * lVar10;\n      }\n      iVar14 = iVar14 + -1;\n    } while (iVar14 != 0);\n    goto LAB_00409cf0;\n  case 0x12:\n  case 0x32:\n    lVar10 = (long)iVar14;\n    iVar14 = 4;\n    uVar12 = 0;\n    do {\n      if (lVar5 < SUB168((SEXT816(-0x8000000000000000) & (undefined  [16])0xffffffffffffffff |\n                         ZEXT816(0x8000000000000000)) / SEXT816(lVar10),0)) {\n        lVar5 = -0x8000000000000000;\n        uVar12 = 1;\n      }\n      else if (SUB168((SEXT816(0x7fffffffffffffff) & (undefined  [16])0xffffffffffffffff |\n                      ZEXT816(0x7fffffffffffffff)) / SEXT816(lVar10),0) < lVar5) {\n        lVar5 = 0x7fffffffffffffff;\n        uVar12 = 1;\n      }\n      else {\n        lVar5 = lVar5 * lVar10;\n      }\n      iVar14 = iVar14 + -1;\n    } while (iVar14 != 0);\n    goto LAB_00409cf0;\n  case 0x17:\n    lVar10 = (long)iVar14;\n    iVar14 = 8;\n    uVar12 = 0;\n    do {\n      if (lVar5 < SUB168((SEXT816(-0x8000000000000000) & (undefined  [16])0xffffffffffffffff |\n                         ZEXT816(0x8000000000000000)) / SEXT816(lVar10),0)) {\n        lVar5 = -0x8000000000000000;\n        uVar12 = 1;\n      }\n      else if (SUB168((SEXT816(0x7fffffffffffffff) & (undefined  [16])0xffffffffffffffff |\n                      ZEXT816(0x7fffffffffffffff)) / SEXT816(lVar10),0) < lVar5) {\n        lVar5 = 0x7fffffffffffffff;\n        uVar12 = 1;\n      }\n      else {\n        lVar5 = lVar5 * lVar10;\n      }\n      iVar14 = iVar14 + -1;\n    } while (iVar14 != 0);\n    goto LAB_00409cf0;\n  case 0x18:\n    lVar10 = (long)iVar14;\n    iVar14 = 7;\n    uVar12 = 0;\n    do {\n      if (lVar5 < SUB168((SEXT816(-0x8000000000000000) & (undefined  [16])0xffffffffffffffff |\n                         ZEXT816(0x8000000000000000)) / SEXT816(lVar10),0)) {\n        lVar5 = -0x8000000000000000;\n        uVar12 = 1;\n      }\n      else if (SUB168((SEXT816(0x7fffffffffffffff) & (undefined  [16])0xffffffffffffffff |\n                      ZEXT816(0x7fffffffffffffff)) / SEXT816(lVar10),0) < lVar5) {\n        lVar5 = 0x7fffffffffffffff;\n        uVar12 = 1;\n      }\n      else {\n        lVar5 = lVar5 * lVar10;\n      }\n      iVar14 = iVar14 + -1;\n    } while (iVar14 != 0);\nLAB_00409cf0:\n    uVar6 = (ulong)(uVar15 | uVar12);\n    break;\n  case 0x20:\n    if (lVar5 < -0x40000000000000) goto LAB_00409948;\n    if (0x3fffffffffffff < lVar5) goto LAB_00409d00;\n    lVar5 = lVar5 << 9;\n    break;\n  case 0x21:\n    break;\n  case 0x35:\n    if (lVar5 < -0x4000000000000000) goto LAB_00409948;\n    if (0x3fffffffffffffff < lVar5) goto LAB_00409d00;\n    lVar5 = lVar5 * 2;\n  }\n  *param_2 = pbVar3 + iVar13;\n  if (pbVar3[iVar13] != 0) {\n    uVar6 = (ulong)((uint)uVar6 | 2);\n  }\nLAB_00409727:\n  *param_4 = lVar5;\n  return uVar6;\n}\n\n",
            "funcName": "FUN_004096b0"
        },
        {
            "funcStartAddr": "0x409e00",
            "funcEndAddr": "0x40a3eb",
            "decompiledFuncCode": "\nulong FUN_00409e00(byte *param_1,byte **param_2,uint param_3,long *param_4,char *param_5)\n\n{\n  byte bVar1;\n  byte bVar2;\n  byte *pbVar3;\n  int *piVar4;\n  long lVar5;\n  ulong uVar6;\n  char *pcVar7;\n  long lVar8;\n  long lVar9;\n  long lVar10;\n  byte bVar11;\n  uint uVar12;\n  int iVar13;\n  int iVar14;\n  uint uVar15;\n  byte *local_40 [2];\n  \n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtol\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = local_40;\n  }\n  piVar4 = __errno_location();\n  *piVar4 = 0;\n  lVar5 = strtol((char *)param_1,(char **)param_2,param_3);\n  pbVar3 = *param_2;\n  if (pbVar3 == param_1) {\n    if (param_5 == (char *)0x0) {\n      return 4;\n    }\n    bVar1 = *pbVar3;\n    if (bVar1 == 0) {\n      return 4;\n    }\n    lVar5 = 1;\n    uVar6 = 0;\n    pcVar7 = strchr(param_5,(int)(char)bVar1);\n    if (pcVar7 == (char *)0x0) {\n      return 4;\n    }\n  }\n  else {\n    if (*piVar4 == 0) {\n      uVar6 = 0;\n    }\n    else {\n      if (*piVar4 != 0x22) {\n        return 4;\n      }\n      uVar6 = 1;\n    }\n    uVar15 = (uint)uVar6;\n    if ((param_5 == (char *)0x0) || (bVar1 = *pbVar3, bVar1 == 0)) goto LAB_00409e75;\n    pcVar7 = strchr(param_5,(int)(char)bVar1);\n    if (pcVar7 == (char *)0x0) goto switchD_00409f02_caseD_1;\n  }\n  uVar15 = (uint)uVar6;\n  uVar12 = bVar1 - 0x45;\n  bVar11 = (byte)uVar12;\n  if (((bVar11 < 0x30) && ((0x814400308945U >> ((ulong)uVar12 & 0x3f) & 1) != 0)) &&\n     (pcVar7 = strchr(param_5,0x30), pcVar7 != (char *)0x0)) {\n    bVar2 = pbVar3[1];\n    if (bVar2 != 0x44) {\n      if (bVar2 == 0x69) {\n        iVar14 = 0x400;\n        iVar13 = (pbVar3[2] == 0x42) + 1 + (uint)(pbVar3[2] == 0x42);\n        goto LAB_00409ef0;\n      }\n      if (bVar2 != 0x42) {\n                    /* WARNING: Could not recover jumptable at 0x00409f58. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        uVar6 = (*(code *)(&PTR_LAB_004109e8)[bVar11])();\n        return uVar6;\n      }\n    }\n    iVar13 = 2;\n    iVar14 = 1000;\n  }\n  else {\n    iVar13 = 1;\n    iVar14 = 0x400;\n  }\nLAB_00409ef0:\n  switch(bVar1 - 0x42 & 0xff) {\n  case 0:\n    if (lVar5 < -0x20000000000000) goto LAB_0040a098;\n    if (lVar5 < 0x20000000000000) {\n      lVar5 = lVar5 << 10;\n    }\n    else {\nLAB_0040a450:\n      lVar5 = 0x7fffffffffffffff;\n      uVar6 = 1;\n    }\n    break;\n  default:\nswitchD_00409f02_caseD_1:\n    *param_4 = lVar5;\n    return (ulong)(uVar15 | 2);\n  case 3:\n    lVar10 = (long)iVar14;\n    iVar14 = 6;\n    uVar12 = 0;\n    do {\n      if (lVar5 < SUB168((SEXT816(-0x8000000000000000) & (undefined  [16])0xffffffffffffffff |\n                         ZEXT816(0x8000000000000000)) / SEXT816(lVar10),0)) {\n        lVar5 = -0x8000000000000000;\n        uVar12 = 1;\n      }\n      else if (SUB168((SEXT816(0x7fffffffffffffff) & (undefined  [16])0xffffffffffffffff |\n                      ZEXT816(0x7fffffffffffffff)) / SEXT816(lVar10),0) < lVar5) {\n        lVar5 = 0x7fffffffffffffff;\n        uVar12 = 1;\n      }\n      else {\n        lVar5 = lVar5 * lVar10;\n      }\n      iVar14 = iVar14 + -1;\n    } while (iVar14 != 0);\n    goto LAB_0040a440;\n  case 5:\n  case 0x25:\n    lVar10 = (long)iVar14;\n    iVar14 = 3;\n    uVar12 = 0;\n    do {\n      if (lVar5 < SUB168((SEXT816(-0x8000000000000000) & (undefined  [16])0xffffffffffffffff |\n                         ZEXT816(0x8000000000000000)) / SEXT816(lVar10),0)) {\n        lVar5 = -0x8000000000000000;\n        uVar12 = 1;\n      }\n      else if (SUB168((SEXT816(0x7fffffffffffffff) & (undefined  [16])0xffffffffffffffff |\n                      ZEXT816(0x7fffffffffffffff)) / SEXT816(lVar10),0) < lVar5) {\n        lVar5 = 0x7fffffffffffffff;\n        uVar12 = 1;\n      }\n      else {\n        lVar5 = lVar5 * lVar10;\n      }\n      iVar14 = iVar14 + -1;\n    } while (iVar14 != 0);\n    goto LAB_0040a440;\n  case 9:\n  case 0x29:\n    if (lVar5 < SUB168((SEXT816(-0x8000000000000000) & (undefined  [16])0xffffffffffffffff |\n                       ZEXT816(0x8000000000000000)) / SEXT816((long)iVar14),0)) goto LAB_0040a098;\n    lVar8 = SUB168((SEXT816(0x7fffffffffffffff) & (undefined  [16])0xffffffffffffffff |\n                   ZEXT816(0x7fffffffffffffff)) / SEXT816((long)iVar14),0);\nLAB_0040a03c:\n    if (lVar8 < lVar5) goto LAB_0040a450;\n    lVar5 = lVar5 * iVar14;\n    break;\n  case 0xb:\n  case 0x2b:\n    lVar9 = (long)iVar14;\n    lVar10 = SUB168((SEXT816(-0x8000000000000000) & (undefined  [16])0xffffffffffffffff |\n                    ZEXT816(0x8000000000000000)) / SEXT816(lVar9),0);\n    if (lVar10 <= lVar5) {\n      lVar8 = SUB168((SEXT816(0x7fffffffffffffff) & (undefined  [16])0xffffffffffffffff |\n                     ZEXT816(0x7fffffffffffffff)) / SEXT816(lVar9),0);\n      if (lVar8 < lVar5) goto LAB_0040a450;\n      lVar5 = lVar5 * lVar9;\n      if (lVar10 <= lVar5) goto LAB_0040a03c;\n    }\nLAB_0040a098:\n    lVar5 = -0x8000000000000000;\n    uVar6 = 1;\n    break;\n  case 0xe:\n    lVar10 = (long)iVar14;\n    iVar14 = 5;\n    uVar12 = 0;\n    do {\n      if (lVar5 < SUB168((SEXT816(-0x8000000000000000) & (undefined  [16])0xffffffffffffffff |\n                         ZEXT816(0x8000000000000000)) / SEXT816(lVar10),0)) {\n        lVar5 = -0x8000000000000000;\n        uVar12 = 1;\n      }\n      else if (SUB168((SEXT816(0x7fffffffffffffff) & (undefined  [16])0xffffffffffffffff |\n                      ZEXT816(0x7fffffffffffffff)) / SEXT816(lVar10),0) < lVar5) {\n        lVar5 = 0x7fffffffffffffff;\n        uVar12 = 1;\n      }\n      else {\n        lVar5 = lVar5 * lVar10;\n      }\n      iVar14 = iVar14 + -1;\n    } while (iVar14 != 0);\n    goto LAB_0040a440;\n  case 0x12:\n  case 0x32:\n    lVar10 = (long)iVar14;\n    iVar14 = 4;\n    uVar12 = 0;\n    do {\n      if (lVar5 < SUB168((SEXT816(-0x8000000000000000) & (undefined  [16])0xffffffffffffffff |\n                         ZEXT816(0x8000000000000000)) / SEXT816(lVar10),0)) {\n        lVar5 = -0x8000000000000000;\n        uVar12 = 1;\n      }\n      else if (SUB168((SEXT816(0x7fffffffffffffff) & (undefined  [16])0xffffffffffffffff |\n                      ZEXT816(0x7fffffffffffffff)) / SEXT816(lVar10),0) < lVar5) {\n        lVar5 = 0x7fffffffffffffff;\n        uVar12 = 1;\n      }\n      else {\n        lVar5 = lVar5 * lVar10;\n      }\n      iVar14 = iVar14 + -1;\n    } while (iVar14 != 0);\n    goto LAB_0040a440;\n  case 0x17:\n    lVar10 = (long)iVar14;\n    iVar14 = 8;\n    uVar12 = 0;\n    do {\n      if (lVar5 < SUB168((SEXT816(-0x8000000000000000) & (undefined  [16])0xffffffffffffffff |\n                         ZEXT816(0x8000000000000000)) / SEXT816(lVar10),0)) {\n        lVar5 = -0x8000000000000000;\n        uVar12 = 1;\n      }\n      else if (SUB168((SEXT816(0x7fffffffffffffff) & (undefined  [16])0xffffffffffffffff |\n                      ZEXT816(0x7fffffffffffffff)) / SEXT816(lVar10),0) < lVar5) {\n        lVar5 = 0x7fffffffffffffff;\n        uVar12 = 1;\n      }\n      else {\n        lVar5 = lVar5 * lVar10;\n      }\n      iVar14 = iVar14 + -1;\n    } while (iVar14 != 0);\n    goto LAB_0040a440;\n  case 0x18:\n    lVar10 = (long)iVar14;\n    iVar14 = 7;\n    uVar12 = 0;\n    do {\n      if (lVar5 < SUB168((SEXT816(-0x8000000000000000) & (undefined  [16])0xffffffffffffffff |\n                         ZEXT816(0x8000000000000000)) / SEXT816(lVar10),0)) {\n        lVar5 = -0x8000000000000000;\n        uVar12 = 1;\n      }\n      else if (SUB168((SEXT816(0x7fffffffffffffff) & (undefined  [16])0xffffffffffffffff |\n                      ZEXT816(0x7fffffffffffffff)) / SEXT816(lVar10),0) < lVar5) {\n        lVar5 = 0x7fffffffffffffff;\n        uVar12 = 1;\n      }\n      else {\n        lVar5 = lVar5 * lVar10;\n      }\n      iVar14 = iVar14 + -1;\n    } while (iVar14 != 0);\nLAB_0040a440:\n    uVar6 = (ulong)(uVar15 | uVar12);\n    break;\n  case 0x20:\n    if (lVar5 < -0x40000000000000) goto LAB_0040a098;\n    if (0x3fffffffffffff < lVar5) goto LAB_0040a450;\n    lVar5 = lVar5 << 9;\n    break;\n  case 0x21:\n    break;\n  case 0x35:\n    if (lVar5 < -0x4000000000000000) goto LAB_0040a098;\n    if (0x3fffffffffffffff < lVar5) goto LAB_0040a450;\n    lVar5 = lVar5 * 2;\n  }\n  *param_2 = pbVar3 + iVar13;\n  if (pbVar3[iVar13] != 0) {\n    uVar6 = (ulong)((uint)uVar6 | 2);\n  }\nLAB_00409e75:\n  *param_4 = lVar5;\n  return uVar6;\n}\n\n",
            "funcName": "FUN_00409e00"
        },
        {
            "funcStartAddr": "0x40a550",
            "funcEndAddr": "0x40a5cc",
            "decompiledFuncCode": "\nvoid FUN_0040a550(int param_1,int param_2,undefined param_3,long param_4,undefined8 param_5)\n\n{\n  undefined4 uVar1;\n  undefined8 uVar2;\n  undefined1 *puVar3;\n  undefined *puVar4;\n  undefined local_2a;\n  undefined local_29;\n  \n  uVar1 = DAT_006142c0;\n  if (param_1 - 1U < 4) {\n    if (param_2 < 0) {\n      puVar4 = &local_2a;\n      puVar3 = &DAT_00410b70 + -(long)param_2;\n      local_29 = 0;\n      local_2a = param_3;\n    }\n    else {\n      puVar3 = &DAT_00410b70;\n      puVar4 = *(undefined **)(param_4 + (long)param_2 * 0x20);\n    }\n    uVar2 = dcgettext(0,(&PTR_s__s_s_argument___s__too_large_00410be0)[param_1 - 1U],5);\n                    /* WARNING: Subroutine does not return */\n    error(uVar1,0,uVar2,puVar3,puVar4,param_5);\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040a550"
        },
        {
            "funcStartAddr": "0x40a5e0",
            "funcEndAddr": "0x40a98e",
            "decompiledFuncCode": "\nulong FUN_0040a5e0(byte *param_1,byte **param_2,uint param_3,ulong *param_4,char *param_5)\n\n{\n  byte bVar1;\n  undefined auVar2 [16];\n  int *piVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  ulong uVar6;\n  char *pcVar7;\n  byte bVar8;\n  uint uVar9;\n  int iVar10;\n  ulong uVar11;\n  byte bVar12;\n  uint uVar13;\n  ulong uVar14;\n  int iVar15;\n  int iVar16;\n  byte *local_40 [2];\n  \n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoumax\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = local_40;\n  }\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  bVar12 = *param_1;\n  ppuVar4 = __ctype_b_loc();\n  pbVar5 = param_1;\n  while ((*(byte *)((long)*ppuVar4 + (ulong)bVar12 * 2 + 1) & 0x20) != 0) {\n    pbVar5 = pbVar5 + 1;\n    bVar12 = *pbVar5;\n  }\n  if (bVar12 == 0x2d) {\n    return 4;\n  }\n  uVar6 = __strtoul_internal(param_1,param_2,param_3,0);\n  pbVar5 = *param_2;\n  if (pbVar5 == param_1) {\n    if ((param_5 == (char *)0x0) || (bVar12 = *param_1, bVar12 == 0)) {\n      return 4;\n    }\n    uVar14 = 0;\n    uVar6 = 1;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) {\n      return 4;\n    }\n  }\n  else {\n    if (*piVar3 == 0) {\n      uVar14 = 0;\n    }\n    else {\n      uVar14 = 1;\n      if (*piVar3 != 0x22) {\n        return 4;\n      }\n    }\n    uVar13 = (uint)uVar14;\n    if ((param_5 == (char *)0x0) || (bVar12 = *pbVar5, bVar12 == 0)) goto LAB_0040a682;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) goto switchD_0040a76c_caseD_1;\n  }\n  uVar13 = (uint)uVar14;\n  uVar9 = bVar12 - 0x45;\n  bVar8 = (byte)uVar9;\n  if (((bVar8 < 0x30) && ((0x814400308945U >> ((ulong)uVar9 & 0x3f) & 1) != 0)) &&\n     (pcVar7 = strchr(param_5,0x30), pcVar7 != (char *)0x0)) {\n    bVar1 = pbVar5[1];\n    if (bVar1 != 0x44) {\n      if (bVar1 == 0x69) {\n        uVar11 = 0x400;\n        iVar15 = (pbVar5[2] == 0x42) + 1 + (uint)(pbVar5[2] == 0x42);\n        goto LAB_0040a75a;\n      }\n      if (bVar1 != 0x42) {\n                    /* WARNING: Could not recover jumptable at 0x0040a741. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        uVar6 = (*(code *)(&PTR_LAB_00410c00)[bVar8])();\n        return uVar6;\n      }\n    }\n    iVar15 = 2;\n    uVar11 = 1000;\n  }\n  else {\n    iVar15 = 1;\n    uVar11 = 0x400;\n  }\nLAB_0040a75a:\n  iVar10 = (int)uVar11;\n  switch(bVar12 - 0x42 & 0xff) {\n  case 0:\n    if (uVar6 >> 0x36 == 0) {\n      uVar6 = uVar6 << 10;\n      break;\n    }\n    goto LAB_0040a7c7;\n  default:\nswitchD_0040a76c_caseD_1:\n    *param_4 = uVar6;\n    return (ulong)(uVar13 | 2);\n  case 3:\n    iVar16 = 6;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_0040a854;\n  case 5:\n  case 0x25:\n    uVar11 = (ulong)iVar10;\n    if (((SUB168(ZEXT816(uVar6) * ZEXT816(uVar11) >> 0x40,0) != 0) ||\n        (auVar2 = (ZEXT816(uVar6) * ZEXT816(uVar11) & (undefined  [16])0xffffffffffffffff) *\n                  ZEXT816(uVar11), SUB168(auVar2 >> 0x40,0) != 0)) ||\n       (auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816(uVar11),\n       uVar6 = SUB168(auVar2,0), SUB168(auVar2 >> 0x40,0) != 0)) {\n      uVar6 = 0xffffffffffffffff;\n      uVar14 = 1;\n    }\n    break;\n  case 9:\n  case 0x29:\n    auVar2 = ZEXT816(uVar6) * ZEXT816(uVar11);\n    goto joined_r0x0040a78c;\n  case 0xb:\n  case 0x2b:\n    auVar2 = ZEXT816(uVar6) * ZEXT816((ulong)(long)iVar10);\n    if (SUB168(auVar2 >> 0x40,0) != 0) goto LAB_0040a7c7;\n    auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816((ulong)(long)iVar10);\njoined_r0x0040a78c:\n    uVar6 = SUB168(auVar2,0);\n    if (SUB168(auVar2 >> 0x40,0) != 0) {\nLAB_0040a7c7:\n      uVar14 = 1;\n      uVar6 = 0xffffffffffffffff;\n    }\n    break;\n  case 0xe:\n    iVar16 = 5;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_0040a854;\n  case 0x12:\n  case 0x32:\n    iVar16 = 4;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_0040a854;\n  case 0x17:\n    iVar16 = 8;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_0040a854;\n  case 0x18:\n    iVar16 = 7;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\nLAB_0040a854:\n    uVar14 = (ulong)(uVar13 | uVar9);\n    break;\n  case 0x20:\n    if (uVar6 >> 0x37 != 0) goto LAB_0040a7c7;\n    uVar6 = uVar6 << 9;\n    break;\n  case 0x21:\n    break;\n  case 0x35:\n    if ((long)uVar6 < 0) goto LAB_0040a7c7;\n    uVar6 = uVar6 * 2;\n  }\n  *param_2 = pbVar5 + iVar15;\n  if (pbVar5[iVar15] != 0) {\n    uVar14 = (ulong)((uint)uVar14 | 2);\n  }\nLAB_0040a682:\n  *param_4 = uVar6;\n  return uVar14;\n}\n\n",
            "funcName": "FUN_0040a5e0"
        },
        {
            "funcStartAddr": "0x40aa20",
            "funcEndAddr": "0x40aa98",
            "decompiledFuncCode": "\nint FUN_0040aa20(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_0040aa87;\n    }\n    iVar1 = FUN_0040abe0(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_0040aa87:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n",
            "funcName": "FUN_0040aa20"
        },
        {
            "funcStartAddr": "0x40aaa0",
            "funcEndAddr": "0x40abcc",
            "decompiledFuncCode": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint FUN_0040aaa0(ulong param_1,int param_2,ulong param_3)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  int *piVar4;\n  \n  if (param_2 != 0x406) {\n    iVar1 = fcntl((int)param_1,param_2,param_3);\n    return iVar1;\n  }\n  if (DAT_006145d8 < 0) {\n    iVar1 = FUN_0040aaa0(param_1,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    if (DAT_006145d8 != -1) {\n      return iVar1;\n    }\n  }\n  else {\n    iVar1 = fcntl((int)param_1,0x406);\n    if ((-1 < iVar1) || (piVar4 = __errno_location(), *piVar4 != 0x16)) {\n      DAT_006145d8 = 1;\n      return iVar1;\n    }\n    iVar1 = FUN_0040aaa0(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    DAT_006145d8 = -1;\n  }\n  uVar2 = fcntl(iVar1,1);\n  if ((-1 < (int)uVar2) && (iVar3 = fcntl(iVar1,2,(ulong)(uVar2 | 1)), iVar3 != -1)) {\n    return iVar1;\n  }\n  piVar4 = __errno_location();\n  iVar3 = *piVar4;\n  close(iVar1);\n  *piVar4 = iVar3;\n  return -1;\n}\n\n",
            "funcName": "FUN_0040aaa0"
        },
        {
            "funcStartAddr": "0x40abe0",
            "funcEndAddr": "0x40ac1b",
            "decompiledFuncCode": "\nvoid FUN_0040abe0(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if ((iVar1 != 0) && ((param_1->_flags & 0x100U) != 0)) {\n      FUN_0040ac20(param_1,0,1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_0040abe0"
        },
        {
            "funcStartAddr": "0x40ac20",
            "funcEndAddr": "0x40ac76",
            "decompiledFuncCode": "\nulong FUN_0040ac20(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  uint uVar1;\n  int __fd;\n  ulong uVar2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    __fd = fileno(param_1);\n    uVar2 = lseek(__fd,param_2,param_3);\n    if (uVar2 != 0xffffffffffffffff) {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = uVar2;\n      uVar2 = 0;\n    }\n    return uVar2;\n  }\n  uVar1 = fseeko(param_1,param_2,param_3);\n  return (ulong)uVar1;\n}\n\n",
            "funcName": "FUN_0040ac20"
        },
        {
            "funcStartAddr": "0x40ac80",
            "funcEndAddr": "0x40ad55",
            "decompiledFuncCode": "\nvoid FUN_0040ac80(long param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 *puVar5;\n  long lVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  \n  iVar1 = param_2[0xb];\n  iVar2 = *param_2;\n  iVar3 = param_2[0xc];\n  iVar8 = iVar1;\n  iVar9 = iVar2;\n  while (iVar3 < iVar9) {\n    while( true ) {\n      if (iVar3 <= iVar8) goto LAB_0040acfc;\n      iVar10 = iVar9 - iVar3;\n      iVar7 = iVar3 - iVar8;\n      if (iVar10 <= iVar7) break;\n      lVar6 = (long)iVar8;\n      iVar9 = iVar9 - iVar7;\n      puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n      do {\n        uVar4 = *puVar5;\n        *puVar5 = puVar5[iVar9 - lVar6];\n        puVar5[iVar9 - lVar6] = uVar4;\n        puVar5 = puVar5 + 1;\n      } while ((undefined8 *)(param_1 + 8 + ((ulong)(iVar7 - 1) + lVar6) * 8) != puVar5);\n      if (iVar9 <= iVar3) goto LAB_0040acfc;\n    }\n    lVar6 = (long)iVar8;\n    puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n    do {\n      uVar4 = *puVar5;\n      *puVar5 = puVar5[iVar3 - lVar6];\n      puVar5[iVar3 - lVar6] = uVar4;\n      puVar5 = puVar5 + 1;\n    } while (puVar5 != (undefined8 *)(param_1 + 8 + ((ulong)(iVar10 - 1) + lVar6) * 8));\n    iVar8 = iVar8 + iVar10;\n  }\nLAB_0040acfc:\n  param_2[0xc] = iVar2;\n  param_2[0xb] = iVar1 + (iVar2 - iVar3);\n  return;\n}\n\n",
            "funcName": "FUN_0040ac80"
        },
        {
            "funcStartAddr": "0x40ad60",
            "funcEndAddr": "0x40b35e",
            "decompiledFuncCode": "\nint FUN_0040ad60(int param_1,undefined8 *param_2,char *param_3,char **param_4,undefined4 *param_5,\n                int param_6,int *param_7,int param_8,undefined8 param_9)\n\n{\n  char cVar1;\n  undefined8 uVar2;\n  bool bVar3;\n  bool bVar4;\n  int iVar5;\n  int iVar6;\n  size_t sVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  char **ppcVar10;\n  char *pcVar11;\n  char **ppcVar12;\n  char *pcVar13;\n  char *__s1;\n  FILE *__stream;\n  ulong uVar14;\n  size_t sVar15;\n  char *__s1_00;\n  long lVar16;\n  char *local_70;\n  uint local_44;\n  \n  pcVar13 = *(char **)(param_7 + 8);\n  cVar1 = *pcVar13;\n  pcVar11 = pcVar13;\n  if ((cVar1 == '=') || (cVar1 == '\\0')) {\n    sVar15 = 0;\n  }\n  else {\n    do {\n      pcVar11 = pcVar11 + 1;\n      if (*pcVar11 == '\\0') break;\n    } while (*pcVar11 != '=');\n    sVar15 = (long)pcVar11 - (long)pcVar13;\n  }\n  uVar14 = 0;\n  __s1 = *param_4;\n  ppcVar10 = param_4;\n  __s1_00 = __s1;\n  if (__s1 != (char *)0x0) {\n    while( true ) {\n      iVar5 = strncmp(__s1_00,pcVar13,sVar15);\n      if ((iVar5 == 0) && (sVar7 = strlen(__s1_00), sVar7 == sVar15)) goto LAB_0040af80;\n      ppcVar10 = ppcVar10 + 4;\n      __s1_00 = *ppcVar10;\n      iVar5 = (int)uVar14 + 1;\n      if (__s1_00 == (char *)0x0) break;\n      uVar14 = (ulong)iVar5;\n    }\n    lVar16 = 0;\n    ppcVar10 = (char **)0x0;\n    local_44 = 0xffffffff;\n    bVar3 = false;\n    bVar4 = false;\n    local_70 = (char *)0x0;\n    ppcVar12 = param_4;\n    do {\n      iVar6 = strncmp(__s1,pcVar13,sVar15);\n      if (iVar6 == 0) {\n        if (ppcVar10 == (char **)0x0) {\n          local_44 = (uint)lVar16;\n          ppcVar10 = ppcVar12;\n        }\n        else if (((((param_6 != 0) || (*(int *)(ppcVar10 + 1) != *(int *)(ppcVar12 + 1))) ||\n                  (ppcVar10[2] != ppcVar12[2])) ||\n                 (*(int *)(ppcVar10 + 3) != *(int *)(ppcVar12 + 3))) && (!bVar3)) {\n          if (param_8 == 0) {\n            bVar3 = true;\n            if (local_70 == (char *)0x0) goto LAB_0040aec0;\n          }\n          else if (local_70 == (char *)0x0) {\n            local_70 = (char *)calloc((long)iVar5,1);\n            if (local_70 == (char *)0x0) {\n              bVar3 = true;\n              goto LAB_0040aec0;\n            }\n            bVar4 = true;\n            local_70[(int)local_44] = '\\x01';\n          }\n          local_70[lVar16] = '\\x01';\n        }\n      }\nLAB_0040aec0:\n      ppcVar12 = ppcVar12 + 4;\n      __s1 = *ppcVar12;\n      lVar16 = lVar16 + 1;\n    } while (__s1 != (char *)0x0);\n    if ((local_70 != (char *)0x0) || (bVar3)) {\n      if (param_8 != 0) {\n        if (bVar3) {\n          uVar2 = *param_2;\n          uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous\\n\",5);\n          __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n        else {\n          flockfile(stderr);\n          uVar2 = *(undefined8 *)(param_7 + 8);\n          uVar8 = *param_2;\n          uVar9 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous; possibilities:\",5);\n          __fprintf_chk(stderr,1,uVar9,uVar8,param_9,uVar2);\n          pcVar13 = local_70;\n          __stream = stderr;\n          do {\n            if (*pcVar13 != '\\0') {\n              __fprintf_chk(__stream,1,\" \\'%s%s\\'\",param_9,*param_4);\n              __stream = stderr;\n            }\n            pcVar13 = pcVar13 + 1;\n            param_4 = param_4 + 4;\n          } while (local_70 + uVar14 + 1 != pcVar13);\n          fputc(10,__stream);\n          funlockfile(stderr);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n      }\n      if (bVar4) {\n        free(local_70);\n      }\n      sVar15 = strlen(pcVar13);\n      *(char **)(param_7 + 8) = pcVar13 + sVar15;\n      *param_7 = *param_7 + 1;\n      param_7[2] = 0;\n      return 0x3f;\n    }\n    if (ppcVar10 != (char **)0x0) {\n      uVar14 = (ulong)local_44;\nLAB_0040af80:\n      iVar6 = *param_7;\n      *(undefined8 *)(param_7 + 8) = 0;\n      iVar5 = iVar6 + 1;\n      *param_7 = iVar5;\n      if (*pcVar11 == '\\0') {\n        if (*(int *)(ppcVar10 + 1) == 1) {\n          if (param_1 <= iVar5) {\n            if (param_8 != 0) {\n              pcVar13 = *ppcVar10;\n              uVar2 = *param_2;\n              uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' requires an argument\\n\",5);\n              __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n            }\n            param_7[2] = *(int *)(ppcVar10 + 3);\n            return (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          *param_7 = iVar6 + 2;\n          *(undefined8 *)(param_7 + 4) = param_2[iVar5];\n        }\n      }\n      else {\n        if (*(int *)(ppcVar10 + 1) == 0) {\n          if (param_8 != 0) {\n            pcVar13 = *ppcVar10;\n            uVar2 = *param_2;\n            uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' doesn\\'t allow an argument\\n\",5);\n            __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          }\n          param_7[2] = *(int *)(ppcVar10 + 3);\n          return 0x3f;\n        }\n        *(char **)(param_7 + 4) = pcVar11 + 1;\n      }\n      if (param_5 != (undefined4 *)0x0) {\n        *param_5 = (int)uVar14;\n      }\n      if ((int *)ppcVar10[2] == (int *)0x0) {\n        return *(int *)(ppcVar10 + 3);\n      }\n      *(int *)ppcVar10[2] = *(int *)(ppcVar10 + 3);\n      return 0;\n    }\n  }\n  if (((param_6 != 0) && (*(char *)(param_2[*param_7] + 1) != '-')) &&\n     (pcVar11 = strchr(param_3,(int)cVar1), pcVar11 != (char *)0x0)) {\n    return -1;\n  }\n  if (param_8 != 0) {\n    uVar2 = *param_2;\n    uVar8 = dcgettext(0,\"%s: unrecognized option \\'%s%s\\'\\n\",5);\n    __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n  }\n  *(undefined8 *)(param_7 + 8) = 0;\n  *param_7 = *param_7 + 1;\n  param_7[2] = 0;\n  return 0x3f;\n}\n\n",
            "funcName": "FUN_0040ad60"
        },
        {
            "funcStartAddr": "0x40b380",
            "funcEndAddr": "0x40b8e7",
            "decompiledFuncCode": "\nuint FUN_0040b380(uint param_1,undefined8 *param_2,char *param_3,long param_4,undefined8 param_5,\n                 ulong param_6,uint *param_7,int param_8)\n\n{\n  undefined8 uVar1;\n  char cVar2;\n  uint uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  long lVar6;\n  uint uVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  uint uVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  undefined1 *puVar15;\n  \n  bVar14 = 0;\n  uVar3 = param_7[1];\n  if ((int)param_1 < 1) {\n    return 0xffffffff;\n  }\n  uVar11 = *param_7;\n  *(undefined8 *)(param_7 + 4) = 0;\n  if (uVar11 == 0) {\n    *param_7 = 1;\n    uVar11 = 1;\nLAB_0040b3ca:\n    param_7[0xc] = uVar11;\n    param_7[0xb] = uVar11;\n    *(undefined8 *)(param_7 + 8) = 0;\n    if (*param_3 == '-') {\n      param_7[10] = 2;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else if (*param_3 == '+') {\n      param_7[10] = 0;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else {\n      pbVar8 = (byte *)0x0;\n      if (param_8 == 0) {\n        pcVar4 = getenv(\"POSIXLY_CORRECT\");\n        param_6 = param_6 & 0xffffffff;\n        if (pcVar4 == (char *)0x0) {\n          param_7[10] = 1;\n          pbVar8 = *(byte **)(param_7 + 8);\n          goto LAB_0040b4cd;\n        }\n        pbVar8 = *(byte **)(param_7 + 8);\n      }\n      param_7[10] = 0;\n    }\nLAB_0040b4cd:\n    param_7[6] = 1;\n    cVar2 = *param_3;\nLAB_0040b4d8:\n    if (cVar2 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 == (byte *)0x0) goto LAB_0040b448;\nLAB_0040b4ec:\n    if (*pbVar8 == 0) goto LAB_0040b448;\n  }\n  else {\n    if (param_7[6] == 0) goto LAB_0040b3ca;\n    cVar2 = *param_3;\n    pbVar8 = *(byte **)(param_7 + 8);\n    if ((cVar2 - 0x2bU & 0xfd) != 0) goto LAB_0040b4d8;\n    pcVar4 = param_3 + 1;\n    param_3 = param_3 + 1;\n    if (*pcVar4 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 != (byte *)0x0) goto LAB_0040b4ec;\nLAB_0040b448:\n    uVar11 = *param_7;\n    if (param_7[0xc] != uVar11 && (int)uVar11 <= (int)param_7[0xc]) {\n      param_7[0xc] = uVar11;\n    }\n    if ((int)uVar11 < (int)param_7[0xb]) {\n      param_7[0xb] = uVar11;\n    }\n    if (param_7[10] == 1) {\n      uVar7 = param_7[0xc];\n      if (param_7[0xb] == uVar7) {\n        if (uVar11 != uVar7) {\n          param_7[0xb] = uVar11;\n          uVar7 = uVar11;\n        }\n      }\n      else if (uVar11 != uVar7) {\n        FUN_0040ac80(param_2,param_7);\n        param_6 = param_6 & 0xffffffff;\n        uVar7 = *param_7;\n      }\n      uVar11 = uVar7;\n      uVar7 = uVar11;\n      if ((int)uVar11 < (int)param_1) {\n        lVar6 = (long)(int)uVar11;\n        do {\n          if ((*(char *)param_2[lVar6] == '-') && (((char *)param_2[lVar6])[1] != '\\0')) {\n            uVar11 = *param_7;\n            uVar7 = (uint)lVar6;\n            break;\n          }\n          uVar11 = (uint)lVar6 + 1;\n          lVar6 = lVar6 + 1;\n          *param_7 = uVar11;\n          uVar7 = uVar11;\n        } while ((int)lVar6 < (int)param_1);\n      }\n      param_7[0xc] = uVar7;\n    }\n    bVar12 = param_1 < uVar11;\n    bVar13 = param_1 == uVar11;\n    if (bVar13) {\n      param_1 = param_7[0xc];\n      uVar11 = param_7[0xb];\nLAB_0040b5b6:\n      if (uVar11 != param_1) {\n        *param_7 = uVar11;\n      }\n      return 0xffffffff;\n    }\n    lVar6 = 3;\n    pbVar8 = (byte *)param_2[(int)uVar11];\n    pbVar9 = pbVar8;\n    pbVar10 = &DAT_00410b70;\n    do {\n      if (lVar6 == 0) break;\n      lVar6 = lVar6 + -1;\n      bVar12 = *pbVar9 < *pbVar10;\n      bVar13 = *pbVar9 == *pbVar10;\n      pbVar9 = pbVar9 + (ulong)bVar14 * -2 + 1;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n    if ((!bVar12 && !bVar13) == bVar12) {\n      uVar11 = uVar11 + 1;\n      *param_7 = uVar11;\n      if (param_7[0xb] == param_7[0xc]) {\n        param_7[0xb] = uVar11;\n      }\n      else {\n        bVar12 = uVar11 != param_7[0xc];\n        uVar11 = param_7[0xb];\n        if (bVar12) {\n          FUN_0040ac80(param_2,param_7);\n          uVar11 = param_7[0xb];\n        }\n      }\n      param_7[0xc] = param_1;\n      *param_7 = param_1;\n      goto LAB_0040b5b6;\n    }\n    if ((*pbVar8 != 0x2d) || (bVar14 = pbVar8[1], bVar14 == 0)) {\n      if (param_7[10] == 0) {\n        return 0xffffffff;\n      }\n      *(byte **)(param_7 + 4) = pbVar8;\n      *param_7 = uVar11 + 1;\n      return 1;\n    }\n    if (param_4 != 0) {\n      if (bVar14 == 0x2d) {\n        *(byte **)(param_7 + 8) = pbVar8 + 2;\n        puVar15 = &DAT_00410b70;\n        goto LAB_0040b715;\n      }\n      if ((int)param_6 != 0) {\n        if (pbVar8[2] == 0) {\n          pcVar4 = strchr(param_3,(int)(char)bVar14);\n          param_6 = param_6 & 0xffffffff;\n          if (pcVar4 != (char *)0x0) goto LAB_0040b6c0;\n        }\n        *(byte **)(param_7 + 8) = pbVar8 + 1;\n        uVar11 = FUN_0040ad60(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,\n                              &DAT_00410b71);\n        if (uVar11 != 0xffffffff) {\n          return uVar11;\n        }\n        pbVar8 = (byte *)param_2[(int)*param_7];\n      }\n    }\nLAB_0040b6c0:\n    pbVar8 = pbVar8 + 1;\n  }\n  pbVar9 = pbVar8 + 1;\n  *(byte **)(param_7 + 8) = pbVar9;\n  bVar14 = *pbVar8;\n  uVar11 = (uint)(char)bVar14;\n  pcVar4 = strchr(param_3,uVar11);\n  if (pbVar8[1] == 0) {\n    *param_7 = *param_7 + 1;\n  }\n  if (((byte)(bVar14 - 0x3a) < 2) || (pcVar4 == (char *)0x0)) {\n    if (uVar3 != 0) {\n      uVar1 = *param_2;\n      uVar5 = dcgettext(0,\"%s: invalid option -- \\'%c\\'\\n\",5);\n      __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n    }\n    param_7[2] = uVar11;\n    return 0x3f;\n  }\n  if (((*pcVar4 != 'W') || (param_4 == 0)) || (pcVar4[1] != ';')) {\n    if (pcVar4[1] == ':') {\n      if (pcVar4[2] == ':') {\n        if (pbVar8[1] == 0) {\n          *(undefined8 *)(param_7 + 4) = 0;\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = *param_7 + 1;\n        }\n      }\n      else {\n        uVar7 = *param_7;\n        if (pbVar8[1] == 0) {\n          if (param_1 == uVar7) {\n            if (uVar3 != 0) {\n              uVar1 = *param_2;\n              uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n              __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n            }\n            param_7[2] = uVar11;\n            uVar11 = (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          else {\n            uVar1 = param_2[(int)uVar7];\n            *param_7 = uVar7 + 1;\n            *(undefined8 *)(param_7 + 4) = uVar1;\n          }\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = uVar7 + 1;\n        }\n      }\n      *(undefined8 *)(param_7 + 8) = 0;\n      return uVar11;\n    }\n    return uVar11;\n  }\n  if (pbVar8[1] == 0) {\n    if (*param_7 == param_1) {\n      if (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n        __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n      }\n      param_7[2] = uVar11;\n      return (uint)(*param_3 != ':') * 5 + 0x3a;\n    }\n    pbVar9 = (byte *)param_2[(int)*param_7];\n  }\n  *(byte **)(param_7 + 8) = pbVar9;\n  param_6 = 0;\n  *(undefined8 *)(param_7 + 4) = 0;\n  puVar15 = &DAT_00411055;\nLAB_0040b715:\n  uVar3 = FUN_0040ad60(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,puVar15);\n  return uVar3;\n}\n\n",
            "funcName": "FUN_0040b380"
        },
        {
            "funcStartAddr": "0x40b950",
            "funcEndAddr": "0x40b9a6",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0040b950(void)\n\n{\n  DAT_006145e0 = DAT_00614338._4_4_;\n  _DAT_006145e4 = (undefined4)DAT_00614338;\n  FUN_0040b380();\n  DAT_00614338._4_4_ = DAT_006145e0;\n  DAT_00614630 = DAT_006145f0;\n  _DAT_00614334 = DAT_006145e8;\n  return;\n}\n\n",
            "funcName": "FUN_0040b950"
        },
        {
            "funcStartAddr": "0x40b9b0",
            "funcEndAddr": "0x40b9c8",
            "decompiledFuncCode": "\nvoid FUN_0040b9b0(void)\n\n{\n  FUN_0040b950();\n  return;\n}\n\n",
            "funcName": "FUN_0040b9b0"
        },
        {
            "funcStartAddr": "0x40b9d0",
            "funcEndAddr": "0x40b9e3",
            "decompiledFuncCode": "\nvoid FUN_0040b9d0(void)\n\n{\n  FUN_0040b950();\n  return;\n}\n\n",
            "funcName": "FUN_0040b9d0"
        },
        {
            "funcStartAddr": "0x40b9f0",
            "funcEndAddr": "0x40ba05",
            "decompiledFuncCode": "\nvoid FUN_0040b9f0(void)\n\n{\n  FUN_0040b380();\n  return;\n}\n\n",
            "funcName": "FUN_0040b9f0"
        },
        {
            "funcStartAddr": "0x40ba10",
            "funcEndAddr": "0x40ba26",
            "decompiledFuncCode": "\nvoid FUN_0040ba10(void)\n\n{\n  FUN_0040b950();\n  return;\n}\n\n",
            "funcName": "FUN_0040ba10"
        },
        {
            "funcStartAddr": "0x40ba30",
            "funcEndAddr": "0x40ba48",
            "decompiledFuncCode": "\nvoid FUN_0040ba30(void)\n\n{\n  FUN_0040b380();\n  return;\n}\n\n",
            "funcName": "FUN_0040ba30"
        },
        {
            "funcStartAddr": "0x40ba50",
            "funcEndAddr": "0x40babf",
            "decompiledFuncCode": "\nsize_t FUN_0040ba50(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  wchar_t local_1c;\n  \n  if (param_2 == (byte *)0x0) {\n    param_3 = 1;\n    param_2 = &DAT_0040ce63;\n  }\n  else {\n    if (param_3 == 0) {\n      return 0xfffffffffffffffe;\n    }\n    if (param_1 != (wchar_t *)0x0) goto LAB_0040ba74;\n  }\n  param_1 = &local_1c;\nLAB_0040ba74:\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (cVar1 = FUN_00405590(0), cVar1 == '\\0')) {\n    sVar2 = 1;\n    *param_1 = (uint)*param_2;\n  }\n  return sVar2;\n}\n\n",
            "funcName": "FUN_0040ba50"
        },
        {
            "funcStartAddr": "0x40bad0",
            "funcEndAddr": "0x40bb10",
            "decompiledFuncCode": "\nbool FUN_0040bad0(long param_1)\n\n{\n  int iVar1;\n  \n  if (*(char *)(param_1 + 8) == '\\0') {\n    iVar1 = unsetenv(\"TZ\");\n  }\n  else {\n    iVar1 = setenv(\"TZ\",(char *)(param_1 + 9),1);\n  }\n  if (iVar1 == 0) {\n    tzset();\n  }\n  return iVar1 == 0;\n}\n\n",
            "funcName": "FUN_0040bad0"
        },
        {
            "funcStartAddr": "0x40bb20",
            "funcEndAddr": "0x40bb43",
            "decompiledFuncCode": "\nvoid FUN_0040bb20(long *param_1)\n\n{\n  long *plVar1;\n  \n  if (param_1 == (long *)0x0) {\n    return;\n  }\n  do {\n    plVar1 = (long *)*param_1;\n    free(param_1);\n    param_1 = plVar1;\n  } while (plVar1 != (long *)0x0);\n  return;\n}\n\n",
            "funcName": "FUN_0040bb20"
        },
        {
            "funcStartAddr": "0x40bb50",
            "funcEndAddr": "0x40bb91",
            "decompiledFuncCode": "\nundefined4 FUN_0040bb50(undefined8 param_1)\n\n{\n  undefined4 uVar1;\n  int *piVar2;\n  int iVar3;\n  \n  piVar2 = __errno_location();\n  iVar3 = *piVar2;\n  uVar1 = FUN_0040bad0(param_1);\n  if ((char)uVar1 == '\\0') {\n    iVar3 = *piVar2;\n  }\n  FUN_0040bb20(param_1);\n  *piVar2 = iVar3;\n  return uVar1;\n}\n\n",
            "funcName": "FUN_0040bb50"
        },
        {
            "funcStartAddr": "0x40bba0",
            "funcEndAddr": "0x40bc2a",
            "decompiledFuncCode": "\nundefined8 * FUN_0040bba0(char *param_1)\n\n{\n  ulong __n;\n  size_t sVar1;\n  undefined8 *puVar2;\n  ulong uVar3;\n  \n  if (param_1 == (char *)0x0) {\n    puVar2 = (undefined8 *)malloc(0x80);\n    if (puVar2 != (undefined8 *)0x0) {\n      *puVar2 = 0;\n      *(undefined2 *)(puVar2 + 1) = 0;\n      return puVar2;\n    }\n  }\n  else {\n    sVar1 = strlen(param_1);\n    __n = sVar1 + 1;\n    uVar3 = 0x76;\n    if (0x75 < __n) {\n      uVar3 = __n;\n    }\n    puVar2 = (undefined8 *)malloc(uVar3 + 0x11 & 0xfffffffffffffff8);\n    if (puVar2 != (undefined8 *)0x0) {\n      *puVar2 = 0;\n      *(undefined2 *)(puVar2 + 1) = 1;\n      memcpy((void *)((long)puVar2 + 9),param_1,__n);\n      *(undefined *)((long)puVar2 + sVar1 + 10) = 0;\n    }\n  }\n  return puVar2;\n}\n\n",
            "funcName": "FUN_0040bba0"
        },
        {
            "funcStartAddr": "0x40bc30",
            "funcEndAddr": "0x40bd8b",
            "decompiledFuncCode": "\nundefined8 FUN_0040bc30(long *param_1,char *param_2)\n\n{\n  char *__s2;\n  long *plVar1;\n  int iVar2;\n  size_t sVar3;\n  ulong uVar4;\n  int *piVar5;\n  long lVar6;\n  char *__s1;\n  \n  __s2 = *(char **)(param_2 + 0x30);\n  if (__s2 == (char *)0x0) {\n    return 1;\n  }\n  if ((__s2 < param_2) || (param_2 + 0x38 <= __s2)) {\n    __s1 = (char *)((long)param_1 + 9);\n    if (*__s2 == '\\0') {\n      __s1 = \"\";\n    }\n    else {\nLAB_0040bc78:\n      iVar2 = strcmp(__s1,__s2);\n      if (iVar2 != 0) {\n        do {\n          if (*__s1 == '\\0') {\n            if ((char *)((long)param_1 + 9) == __s1) {\n              if (*(char *)(param_1 + 1) != '\\0') goto LAB_0040bca3;\n              sVar3 = strlen(__s2);\n              sVar3 = sVar3 + 1;\n              uVar4 = 0;\n            }\n            else {\n              sVar3 = strlen(__s2);\n              sVar3 = sVar3 + 1;\n              uVar4 = (long)__s1 - (long)(char *)((long)param_1 + 9);\n              if (~uVar4 < sVar3) {\n                piVar5 = __errno_location();\n                *piVar5 = 0xc;\n                return 0;\n              }\n            }\n            if (uVar4 + sVar3 < 0x77) {\n              memcpy(__s1,__s2,sVar3);\n              __s1[sVar3] = '\\0';\n            }\n            else {\n              lVar6 = FUN_0040bba0(__s2);\n              *param_1 = lVar6;\n              if (lVar6 == 0) {\n                return 0;\n              }\n              *(undefined *)(lVar6 + 8) = 0;\n              __s1 = (char *)(lVar6 + 9);\n            }\n            break;\n          }\nLAB_0040bca3:\n          sVar3 = strlen(__s1);\n          __s1 = __s1 + sVar3 + 1;\n          if ((*__s1 != '\\0') || (plVar1 = (long *)*param_1, plVar1 == (long *)0x0))\n          goto LAB_0040bc78;\n          __s1 = (char *)((long)plVar1 + 9);\n          iVar2 = strcmp(__s1,__s2);\n          param_1 = plVar1;\n          if (iVar2 == 0) break;\n        } while( true );\n      }\n    }\n    *(char **)(param_2 + 0x30) = __s1;\n  }\n  return 1;\n}\n\n",
            "funcName": "FUN_0040bc30"
        },
        {
            "funcStartAddr": "0x40bdb0",
            "funcEndAddr": "0x40be4f",
            "decompiledFuncCode": "\nlong FUN_0040bdb0(long param_1)\n\n{\n  char cVar1;\n  int iVar2;\n  char *__s2;\n  long lVar3;\n  int *piVar4;\n  \n  __s2 = getenv(\"TZ\");\n  if (__s2 == (char *)0x0) {\n    if (*(char *)(param_1 + 8) == '\\0') {\n      return 1;\n    }\n  }\n  else if (*(char *)(param_1 + 8) != '\\0') {\n    iVar2 = strcmp((char *)(param_1 + 9),__s2);\n    if (iVar2 == 0) {\n      return 1;\n    }\n  }\n  lVar3 = FUN_0040bba0(__s2);\n  if (lVar3 != 0) {\n    cVar1 = FUN_0040bad0(param_1);\n    if (cVar1 == '\\0') {\n      piVar4 = __errno_location();\n      iVar2 = *piVar4;\n      if (lVar3 != 1) {\n        FUN_0040bb20(lVar3);\n      }\n      *piVar4 = iVar2;\n      return 0;\n    }\n  }\n  return lVar3;\n}\n\n",
            "funcName": "FUN_0040bdb0"
        },
        {
            "funcStartAddr": "0x40be60",
            "funcEndAddr": "0x40be6c",
            "decompiledFuncCode": "\nvoid FUN_0040be60(long param_1)\n\n{\n  if (param_1 != 1) {\n    FUN_0040bb20();\n    return;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_0040be60"
        },
        {
            "funcStartAddr": "0x40be80",
            "funcEndAddr": "0x40bf16",
            "decompiledFuncCode": "\ntm * FUN_0040be80(long param_1,time_t *param_2,tm *param_3)\n\n{\n  char cVar1;\n  long lVar2;\n  tm *ptVar3;\n  \n  if (param_1 == 0) {\n    ptVar3 = gmtime_r(param_2,param_3);\n    return ptVar3;\n  }\n  lVar2 = FUN_0040bdb0();\n  if (lVar2 != 0) {\n    ptVar3 = localtime_r(param_2,param_3);\n    if ((ptVar3 == (tm *)0x0) || (cVar1 = FUN_0040bc30(param_1,param_3), cVar1 == '\\0')) {\n      if (lVar2 != 1) {\n        FUN_0040bb50(lVar2);\n      }\n    }\n    else if ((lVar2 == 1) || (cVar1 = FUN_0040bb50(lVar2), cVar1 != '\\0')) {\n      return param_3;\n    }\n  }\n  return (tm *)0x0;\n}\n\n",
            "funcName": "FUN_0040be80"
        },
        {
            "funcStartAddr": "0x40bf30",
            "funcEndAddr": "0x40c035",
            "decompiledFuncCode": "\nlong FUN_0040bf30(long param_1,uint *param_2)\n\n{\n  char cVar1;\n  long lVar2;\n  tm *ptVar3;\n  long local_60;\n  tm local_58;\n  \n  if (param_1 == 0) {\n    lVar2 = FUN_0040c050(param_2);\n    return lVar2;\n  }\n  lVar2 = FUN_0040bdb0();\n  if (lVar2 != 0) {\n    local_60 = FUN_0040cd00(param_2);\n    if (((local_60 != -1) ||\n        (((ptVar3 = localtime_r(&local_60,&local_58), ptVar3 != (tm *)0x0 &&\n          ((((param_2[8] == 0) == (local_58.tm_isdst == 0) || ((int)param_2[8] < 0)) ||\n           (local_58.tm_isdst < 0)))) &&\n         ((param_2[4] ^ local_58.tm_mon | param_2[5] ^ local_58.tm_year |\n           param_2[3] ^ local_58.tm_mday | param_2[2] ^ local_58.tm_hour |\n           param_2[1] ^ local_58.tm_min | *param_2 ^ local_58.tm_sec) == 0)))) &&\n       (cVar1 = FUN_0040bc30(param_1,param_2), cVar1 == '\\0')) {\n      local_60 = -1;\n    }\n    if (lVar2 == 1) {\n      return local_60;\n    }\n    cVar1 = FUN_0040bb50(lVar2);\n    if (cVar1 != '\\0') {\n      return local_60;\n    }\n  }\n  return -1;\n}\n\n",
            "funcName": "FUN_0040bf30"
        },
        {
            "funcStartAddr": "0x40c050",
            "funcEndAddr": "0x40c066",
            "decompiledFuncCode": "\nvoid FUN_0040c050(long param_1)\n\n{\n  *(undefined4 *)(param_1 + 0x20) = 0;\n  FUN_0040c8c0(param_1,gmtime_r,&DAT_00614618);\n  return;\n}\n\n",
            "funcName": "FUN_0040c050"
        },
        {
            "funcStartAddr": "0x40c070",
            "funcEndAddr": "0x40c0cc",
            "decompiledFuncCode": "\nulong FUN_0040c070(uint *param_1)\n\n{\n  uint uVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  uVar1 = *param_1;\n  uVar3 = FUN_0040aa20(param_1);\n  if ((uVar1 & 0x20) == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_0040c070"
        },
        {
            "funcStartAddr": "0x40c0d0",
            "funcEndAddr": "0x40c624",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nchar * FUN_0040c0d0(void)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  char *__s1;\n  size_t sVar5;\n  size_t sVar6;\n  char *pcVar7;\n  size_t __n;\n  char *__file;\n  FILE *__stream;\n  byte *pbVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  long lVar11;\n  ulong uVar12;\n  undefined8 *puVar13;\n  char *__ptr;\n  bool bVar14;\n  long local_d0;\n  undefined8 local_c0;\n  undefined8 local_b8;\n  undefined auStack_80 [8];\n  undefined8 local_78;\n  \n  __s1 = nl_langinfo(0xe);\n  if (__s1 == (char *)0x0) {\n    __s1 = \"\";\n  }\n  if (DAT_00614620 != (char *)0x0) goto LAB_0040c10a;\n  pcVar7 = getenv(\"CHARSETALIASDIR\");\n  if ((pcVar7 == (char *)0x0) || (*pcVar7 == '\\0')) {\n    sVar6 = 0x73;\n    sVar5 = 0x65;\n    __n = 100;\n    pcVar7 = \n    \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\"\n    ;\nLAB_0040c1f5:\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      __file[__n] = '/';\n      goto LAB_0040c216;\n    }\n  }\n  else {\n    __n = strlen(pcVar7);\n    if (__n == 0) {\n      sVar6 = 0xe;\n    }\n    else {\n      if (pcVar7[__n - 1] != '/') {\n        sVar6 = __n + 0xf;\n        sVar5 = __n + 1;\n        goto LAB_0040c1f5;\n      }\n      sVar6 = __n + 0xe;\n    }\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      sVar5 = __n;\nLAB_0040c216:\n      puVar13 = (undefined8 *)(__file + sVar5);\n      *puVar13 = 0x2e74657372616863;\n      *(undefined2 *)((long)puVar13 + 0xc) = 0x73;\n      *(undefined4 *)(puVar13 + 1) = 0x61696c61;\n      iVar2 = open(__file,0);\n      if (-1 < iVar2) {\n        __stream = fdopen(iVar2,\"r\");\n        local_d0 = 0;\n        if (__stream != (FILE *)0x0) {\n          pcVar7 = (char *)0x0;\nLAB_0040c2b0:\n          pbVar8 = (byte *)__stream->_IO_read_ptr;\n          if (__stream->_IO_read_end <= pbVar8) goto LAB_0040c43c;\n          do {\n            __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n            uVar4 = (uint)*pbVar8;\n            __ptr = pcVar7;\n            while( true ) {\n              pcVar7 = __ptr;\n              if ((uVar4 - 9 < 2) || (uVar4 == 0x20)) goto LAB_0040c2b0;\n              if (uVar4 == 0x23) goto LAB_0040c4a1;\n              ungetc(uVar4,__stream);\n              iVar2 = fscanf(__stream,\"%50s %50s\",&local_b8,&local_78);\n              puVar13 = &local_b8;\n              if (iVar2 < 2) goto LAB_0040c44f;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              lVar11 = (long)puVar13 +\n                       ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_b8);\n              puVar13 = &local_78;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              local_c0 = (long)puVar13 +\n                         ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_78);\n              lVar9 = lVar11 + local_c0;\n              if (local_d0 == 0) {\n                pcVar7 = (char *)malloc(lVar9 + 3);\n              }\n              else {\n                lVar9 = lVar9 + local_d0;\n                pcVar7 = (char *)realloc(__ptr,lVar9 + 3);\n              }\n              local_d0 = lVar9 + 2;\n              if (pcVar7 == (char *)0x0) {\n                pcVar7 = \"\";\n                free(__ptr);\n                FUN_0040aa20(__stream);\n                goto LAB_0040c254;\n              }\n              uVar12 = lVar11 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (-2 - lVar11) + (local_d0 - local_c0));\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_b8;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 2));\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_b8;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 4));\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_b8._4_4_,(undefined4)local_b8);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 8));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_b8 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              uVar12 = local_c0 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (local_d0 - local_c0) + -1);\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_78;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 6);\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_78;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 4);\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_78._4_4_,(undefined4)local_78);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)auStack_80 + (uVar12 & 0xffffffff));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_78 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              pbVar8 = (byte *)__stream->_IO_read_ptr;\n              if (pbVar8 < __stream->_IO_read_end) break;\nLAB_0040c43c:\n              uVar4 = __uflow(__stream);\n              __ptr = pcVar7;\n              if (uVar4 == 0xffffffff) goto LAB_0040c44f;\n            }\n          } while( true );\n        }\n        close(iVar2);\n      }\n      goto LAB_0040c24e;\n    }\n  }\n  DAT_00614620 = \"\";\nLAB_0040c10a:\n  cVar1 = *DAT_00614620;\n  pcVar7 = DAT_00614620;\n  do {\n    if (cVar1 == '\\0') {\nLAB_0040c164:\n      if (*__s1 == '\\0') {\n        __s1 = \"ASCII\";\n      }\n      return __s1;\n    }\n    iVar2 = strcmp(__s1,pcVar7);\n    if ((iVar2 == 0) || ((cVar1 == '*' && (pcVar7[1] == '\\0')))) {\n      sVar6 = strlen(pcVar7);\n      __s1 = pcVar7 + sVar6 + 1;\n      goto LAB_0040c164;\n    }\n    sVar6 = strlen(pcVar7);\n    sVar5 = strlen(pcVar7 + sVar6 + 1);\n    pcVar7 = pcVar7 + sVar6 + 1 + sVar5 + 1;\n    cVar1 = *pcVar7;\n  } while( true );\nLAB_0040c4a1:\n  do {\n    pbVar8 = (byte *)__stream->_IO_read_ptr;\n    if (pbVar8 < __stream->_IO_read_end) {\n      __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n      uVar4 = (uint)*pbVar8;\n      bVar14 = true;\n    }\n    else {\n      uVar4 = __uflow(__stream);\n      bVar14 = uVar4 != 0xffffffff;\n    }\n  } while ((uVar4 != 10) && (bVar14));\n  if (uVar4 == 0xffffffff) goto LAB_0040c44f;\n  goto LAB_0040c2b0;\nLAB_0040c44f:\n  FUN_0040aa20(__stream);\n  if (local_d0 == 0) {\nLAB_0040c24e:\n    pcVar7 = \"\";\n  }\n  else {\n    pcVar7[local_d0] = '\\0';\n  }\nLAB_0040c254:\n  free(__file);\n  DAT_00614620 = pcVar7;\n  goto LAB_0040c10a;\n}\n\n",
            "funcName": "FUN_0040c0d0"
        },
        {
            "funcStartAddr": "0x40c640",
            "funcEndAddr": "0x40c757",
            "decompiledFuncCode": "\nlong FUN_0040c640(ulong param_1,long param_2,int param_3,int param_4,int param_5,uint param_6,\n                 int param_7,int param_8,int param_9,int param_10)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  \n  iVar3 = ((int)((long)param_1 >> 2) + 0x1db) - (uint)((param_1 & 3) == 0);\n  iVar4 = ((int)((long)(int)param_6 >> 2) + 0x1db) - (uint)((param_6 & 3) == 0);\n  iVar2 = iVar3 / 0x19 + (iVar3 % 0x19 >> 0x1f);\n  iVar1 = iVar4 / 0x19 + (iVar4 % 0x19 >> 0x1f);\n  return ((long)param_5 +\n         (((long)param_4 +\n          (((long)param_3 +\n           (((param_2 + (param_1 - (long)(int)param_6) * 0x16d) - (long)param_7) +\n           (long)(((iVar2 >> 2) - (iVar1 >> 2)) + ((iVar3 - iVar4) - (iVar2 - iVar1)))) * 0x18) -\n          (long)param_8) * 0x3c) - (long)param_9) * 0x3c) - (long)param_10;\n}\n\n",
            "funcName": "FUN_0040c640"
        },
        {
            "funcStartAddr": "0x40c760",
            "funcEndAddr": "0x40c7e0",
            "decompiledFuncCode": "\nlong FUN_0040c760(void)\n\n{\n  long lVar1;\n  long in_R9;\n  long param_7;\n  \n  if (param_7 != 0) {\n    lVar1 = FUN_0040c640();\n    if (!SCARRY8(lVar1,in_R9)) {\n      return lVar1 + in_R9;\n    }\n  }\n  if (-1 < in_R9) {\n    lVar1 = 0x7fffffffffffffff;\n    if (0x7ffffffffffffffd < in_R9) {\n      lVar1 = in_R9 + -1;\n    }\n    return lVar1;\n  }\n  if (in_R9 < -0x7ffffffffffffffe) {\n    return in_R9 + 1;\n  }\n  return -0x8000000000000000;\n}\n\n",
            "funcName": "FUN_0040c760"
        },
        {
            "funcStartAddr": "0x40c800",
            "funcEndAddr": "0x40c8b2",
            "decompiledFuncCode": "\nvoid FUN_0040c800(code *param_1,long *param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  long lVar2;\n  long lVar3;\n  long lVar4;\n  long lVar5;\n  long local_30;\n  \n  local_30 = *param_2;\n  lVar2 = (*param_1)(&local_30,param_3);\n  if (lVar2 == 0) {\n    lVar1 = 0;\n    lVar5 = *param_2;\n    if (*param_2 != 0) {\n      while ((lVar4 = lVar1,\n             lVar3 = (ulong)(((uint)lVar4 | (uint)lVar5) & 1) + (lVar5 >> 1) + (lVar4 >> 1),\n             lVar4 == lVar3 || (lVar5 == lVar3))) {\n        local_30 = lVar3;\n        lVar2 = (*param_1)(&local_30,param_3);\n        lVar1 = lVar3;\n        if (lVar2 == 0) {\n          lVar1 = lVar4;\n          lVar5 = lVar3;\n        }\n      }\n      if ((lVar2 == 0) && (lVar4 != 0)) {\n        local_30 = lVar4;\n        (*param_1)(&local_30,param_3);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "funcName": "FUN_0040c800"
        },
        {
            "funcStartAddr": "0x40c8c0",
            "funcEndAddr": "0x40ccd2",
            "decompiledFuncCode": "\nlong FUN_0040c8c0(int *param_1,code *param_2,long *param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  int iVar6;\n  long lVar7;\n  undefined8 uVar8;\n  long lVar9;\n  long lVar10;\n  uint uVar11;\n  ulong uVar12;\n  int iVar13;\n  long lVar14;\n  int iVar15;\n  int iVar16;\n  long lVar17;\n  long lVar18;\n  bool bVar19;\n  int local_e0;\n  long local_c8;\n  long local_c0;\n  int local_b8;\n  int iStack_b4;\n  int iStack_b0;\n  int iStack_ac;\n  int local_a8;\n  int iStack_a4;\n  int iStack_a0;\n  int iStack_9c;\n  int local_98;\n  int iStack_94;\n  int iStack_90;\n  int iStack_8c;\n  undefined8 local_88;\n  long local_78 [4];\n  int local_58;\n  \n  iVar1 = *param_1;\n  iVar2 = param_1[1];\n  iVar3 = param_1[2];\n  iVar4 = param_1[8];\n  uVar11 = 0;\n  iVar15 = param_1[4] % 0xc;\n  uVar5 = iVar15 >> 0x1f;\n  uVar12 = (long)(int)(param_1[4] / 0xc + uVar5) + (long)param_1[5];\n  if ((uVar12 & 3) == 0) {\n    uVar11 = 1;\n    if (uVar12 == ((long)uVar12 / 100) * 100) {\n      uVar11 = (uint)(((uint)((long)uVar12 / 100) & 3) == 1);\n    }\n  }\n  iVar13 = 6;\n  lVar14 = (long)param_1[3] +\n           (long)(int)(*(ushort *)\n                        (&DAT_00411100 +\n                        ((long)(int)(iVar15 + (uVar5 & 0xc)) + (long)(int)uVar11 * 0xd) * 2) - 1);\n  iVar15 = 0x3b;\n  if (iVar1 < 0x3c) {\n    iVar15 = iVar1;\n  }\n  iVar6 = 0;\n  if (-1 < iVar15) {\n    iVar6 = iVar15;\n  }\n  local_e0 = (int)*param_3;\n  lVar7 = FUN_0040c640(uVar12,lVar14,iVar3,iVar2,iVar6,0x46,0,0,0,-local_e0);\n  bVar19 = false;\n  lVar17 = lVar7;\n  lVar18 = lVar7;\n  local_c8 = lVar7;\n  while( true ) {\n    uVar8 = FUN_0040c800(param_2,&local_c8,&local_b8);\n    lVar10 = local_c8;\n    lVar9 = FUN_0040c760(uVar12,lVar14,iVar3,iVar2,iVar6,local_c8,uVar8);\n    if (lVar10 == lVar9) break;\n    if ((lVar10 == lVar17) && (lVar10 != lVar18)) {\n      if (local_98 < 0) goto LAB_0040cad0;\n      if (iVar4 < 0) {\n        if (bVar19 <= (local_98 != 0)) goto LAB_0040cad0;\n      }\n      else if ((iVar4 != 0) != (local_98 != 0)) goto LAB_0040cad0;\n    }\n    iVar13 = iVar13 + -1;\n    if (iVar13 == 0) goto LAB_0040cb80;\n    bVar19 = local_98 != 0;\n    lVar17 = lVar18;\n    lVar18 = lVar10;\n    local_c8 = lVar9;\n  }\n  lVar10 = lVar9;\n  if ((((iVar4 == 0) != (local_98 == 0)) && (-1 < iVar4)) && (-1 < local_98)) {\n    iVar15 = 0x92c70;\n    do {\n      iVar16 = 2;\n      iVar13 = -iVar15;\n      bVar19 = SCARRY8((long)iVar13,lVar10);\n      local_c0 = iVar13 + lVar10;\n      while( true ) {\n        if (!bVar19) {\n          uVar8 = 0x40cc85;\n          FUN_0040c800(param_2,&local_c0,local_78);\n          if (((iVar4 == 0) == (local_58 == 0)) || (lVar10 = local_c8, local_58 < 0)) {\n            local_c8 = FUN_0040c760(uVar12,lVar14,iVar3,iVar2,iVar6,local_c0,local_78);\n            FUN_0040c800(param_2,&local_c8,&local_b8,uVar8);\n            lVar10 = local_c8;\n            goto LAB_0040cad0;\n          }\n        }\n        iVar13 = iVar13 + iVar15 * 2;\n        if (iVar16 == 1) break;\n        iVar16 = 1;\n        bVar19 = SCARRY8((long)iVar13,lVar10);\n        local_c0 = iVar13 + lVar10;\n      }\n      iVar15 = iVar15 + 0x92c70;\n    } while (iVar15 != 0x100dc400);\n  }\nLAB_0040cad0:\n  *param_3 = lVar10 - (-local_e0 + lVar7);\n  local_c8 = lVar10;\n  if ((local_b8 == iVar1) ||\n     ((lVar14 = (long)iVar1 + ((ulong)(iVar1 < 1 && local_b8 == 0x3c) - (long)iVar6),\n      local_c8 = lVar10 + lVar14, !SCARRY8(lVar10,lVar14) &&\n      (local_78[0] = local_c8, lVar14 = (*param_2)(local_78,&local_b8), lVar14 != 0)))) {\n    *param_1 = local_b8;\n    param_1[1] = iStack_b4;\n    param_1[2] = iStack_b0;\n    param_1[3] = iStack_ac;\n    param_1[4] = local_a8;\n    param_1[5] = iStack_a4;\n    param_1[6] = iStack_a0;\n    param_1[7] = iStack_9c;\n    param_1[8] = local_98;\n    param_1[9] = iStack_94;\n    param_1[10] = iStack_90;\n    param_1[0xb] = iStack_8c;\n    *(undefined8 *)(param_1 + 0xc) = local_88;\n  }\n  else {\nLAB_0040cb80:\n    local_c8 = -1;\n  }\n  return local_c8;\n}\n\n",
            "funcName": "FUN_0040c8c0"
        },
        {
            "funcStartAddr": "0x40cd00",
            "funcEndAddr": "0x40cd1c",
            "decompiledFuncCode": "\nvoid FUN_0040cd00(undefined8 param_1)\n\n{\n  tzset();\n  FUN_0040c8c0(param_1,localtime_r,&DAT_00614628);\n  return;\n}\n\n",
            "funcName": "FUN_0040cd00"
        },
        {
            "funcStartAddr": "0x40cd20",
            "funcEndAddr": "0x40cd7d",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x0040cd53) */\n/* WARNING: Removing unreachable block (ram,0x0040cd58) */\n\nvoid FUN_0040cd20(void)\n\n{\n  __DT_INIT();\n  return;\n}\n\n",
            "funcName": "FUN_0040cd20"
        },
        {
            "funcStartAddr": "0x40cd80",
            "funcEndAddr": "0x40cd81",
            "decompiledFuncCode": "\nvoid FUN_0040cd80(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_0040cd80"
        },
        {
            "funcStartAddr": "0x40cd90",
            "funcEndAddr": "0x40cda8",
            "decompiledFuncCode": "\nvoid FUN_0040cd90(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,DAT_00614268);\n  return;\n}\n\n",
            "funcName": "FUN_0040cd90"
        },
        {
            "funcStartAddr": "0x40cda8",
            "funcEndAddr": "0x40cdc8",
            "decompiledFuncCode": "\nundefined8 FUN_0040cda8(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  code **ppcVar1;\n  \n  for (ppcVar1 = (code **)&DAT_00613e30; *ppcVar1 != (code *)0xffffffffffffffff;\n      ppcVar1 = ppcVar1 + -1) {\n    (**ppcVar1)();\n  }\n  return param_3;\n}\n\n",
            "funcName": "FUN_0040cda8"
        }
    ],
    "decompilerName": "Ghidra",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_pr.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O"
}