{
    "funcCount": 179,
    "funcInfo": [
        {
            "funcStartAddr": "0x401d75",
            "funcEndAddr": "0x401d7a",
            "decompiledFuncCode": "\nvoid FUN_00401d75(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401d75"
        },
        {
            "funcStartAddr": "0x401d7a",
            "funcEndAddr": "0x401d7f",
            "decompiledFuncCode": "\nvoid FUN_00401d7a(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401d7a"
        },
        {
            "funcStartAddr": "0x401d7f",
            "funcEndAddr": "0x401d84",
            "decompiledFuncCode": "\nvoid FUN_00401d7f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401d7f"
        },
        {
            "funcStartAddr": "0x401d84",
            "funcEndAddr": "0x401d89",
            "decompiledFuncCode": "\nvoid FUN_00401d84(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401d84"
        },
        {
            "funcStartAddr": "0x401d8e",
            "funcEndAddr": "0x401d93",
            "decompiledFuncCode": "\nvoid FUN_00401d8e(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401d8e"
        },
        {
            "funcStartAddr": "0x401d93",
            "funcEndAddr": "0x401d98",
            "decompiledFuncCode": "\nvoid FUN_00401d93(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401d93"
        },
        {
            "funcStartAddr": "0x401d98",
            "funcEndAddr": "0x401d9d",
            "decompiledFuncCode": "\nvoid FUN_00401d98(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401d98"
        },
        {
            "funcStartAddr": "0x401d9d",
            "funcEndAddr": "0x401da2",
            "decompiledFuncCode": "\nvoid FUN_00401d9d(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401d9d"
        },
        {
            "funcStartAddr": "0x401da2",
            "funcEndAddr": "0x401da7",
            "decompiledFuncCode": "\nvoid FUN_00401da2(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401da2"
        },
        {
            "funcStartAddr": "0x401da7",
            "funcEndAddr": "0x401dac",
            "decompiledFuncCode": "\nvoid FUN_00401da7(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401da7"
        },
        {
            "funcStartAddr": "0x401dac",
            "funcEndAddr": "0x401db1",
            "decompiledFuncCode": "\nvoid FUN_00401dac(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401dac"
        },
        {
            "funcStartAddr": "0x401db1",
            "funcEndAddr": "0x401db6",
            "decompiledFuncCode": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "thunk_401db1"
        },
        {
            "funcStartAddr": "0x401dc0",
            "funcEndAddr": "0x4027cb",
            "decompiledFuncCode": "\nuint FUN_00401dc0(int param_1,undefined8 *param_2)\n\n{\n  long lVar1;\n  byte bVar2;\n  byte bVar3;\n  char cVar4;\n  int iVar5;\n  long lVar6;\n  int *piVar7;\n  undefined8 uVar8;\n  uint uVar9;\n  undefined8 uVar10;\n  char *pcVar11;\n  int *piVar12;\n  uint uVar13;\n  undefined8 uVar14;\n  ulong uVar15;\n  long local_58;\n  long local_40 [2];\n  \n  uVar15 = 0xffffffff;\n  uVar14 = 0;\n  piVar12 = (int *)(long)param_1;\n  uVar10 = 0x10;\n  uVar8 = 0;\n  FUN_00402db0(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\n                 \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\"\n                );\n  textdomain(\"coreutils\");\n  FUN_0040adc0(FUN_00402d10);\n  local_58 = 0;\nLAB_00401e30:\n  iVar5 = FUN_00408310((ulong)piVar12 & 0xffffffff,param_2,\"HLPRhvu:r:t:l:\",\n                       &PTR_s_recursive_0040bb80,0);\n  bVar2 = DAT_00610341;\n  if (iVar5 == -1) {\n    iVar5 = (int)uVar15;\n    if (DAT_00610341 == 0) {\n      DAT_00610342 = iVar5 != 0;\n      uVar10 = 0x10;\nLAB_00401fd6:\n      uVar9 = (uint)uVar10;\n      uVar15 = (ulong)DAT_006102dc;\n      iVar5 = (int)piVar12 - DAT_006102dc;\n      bVar3 = local_58 != 0 | (byte)uVar8;\n      if (bVar3 == 0) {\n        if (1 < iVar5) goto LAB_00402771;\n      }\n      else if (0 < iVar5) {\n        piVar7 = __errno_location();\n        piVar12 = piVar7;\n        if (local_58 != 0) goto LAB_00402711;\n        DAT_00610330 = 0;\n        if ((bVar2 == 0) || ((char)uVar14 == '\\0')) {\n          DAT_00610338 = (long *)0x0;\n        }\n        else {\n          DAT_00610338 = (long *)FUN_004049f0(&DAT_00610320);\n          uVar15 = (ulong)DAT_006102dc;\n          if (DAT_00610338 == (long *)0x0) {\n            lVar6 = FUN_00404780(4,\"/\");\n            uVar10 = dcgettext(0,\"failed to get attributes of %s\",5);\n            error(1,*piVar7,uVar10,lVar6);\n            goto LAB_00402608;\n          }\n        }\n        param_2 = (undefined8 *)FUN_00405270(param_2 + uVar15,uVar9 | 8,0);\n        uVar9 = (uint)bVar3;\n        lVar6 = fts_read(param_2);\n        goto joined_r0x00402064;\n      }\n      if ((int)piVar12 <= DAT_006102dc) {\n        uVar14 = dcgettext(0,\"missing operand\",5);\n        error(0,0,uVar14);\n        goto LAB_00401f37;\n      }\n    }\n    else {\n      if ((int)uVar10 == 0x10) {\n        uVar15 = (ulong)(iVar5 - 1U);\n        if (iVar5 - 1U != 0) {\n          DAT_00610342 = false;\n          goto LAB_00401fd6;\n        }\nLAB_004026ef:\n        uVar14 = dcgettext(0,\"-R --dereference requires either -H or -L\",5);\n        piVar7 = (int *)error(1,0,uVar14);\nLAB_00402711:\n        *piVar7 = 0x5f;\n        uVar14 = FUN_00404780(4,local_58);\n        uVar10 = dcgettext(0,\"failed to get security context of %s\",5);\n        error(1,*piVar12,uVar10,uVar14);\n      }\n      else if (iVar5 != 0) {\n        DAT_00610342 = true;\n        goto LAB_00401fd6;\n      }\n      uVar14 = dcgettext(0,\"-R -h requires -P\",5);\n      error(1,0,uVar14);\nLAB_00402771:\n      uVar14 = param_2[uVar15];\n      DAT_006102dc = (int)uVar15 + 1;\n      DAT_00610330 = uVar14;\n      piVar7 = __errno_location();\n      *piVar7 = 0x5f;\n      uVar10 = FUN_004049d0(uVar14);\n      uVar14 = dcgettext(0,\"invalid context: %s\",5);\n      error(1,*piVar7,uVar14,uVar10);\n    }\n    uVar8 = FUN_004049d0(param_2[(long)piVar12 + -1]);\n    uVar14 = dcgettext(0,\"missing operand after %s\",5);\n    error(0,0,uVar14,uVar8);\n    goto LAB_00401f37;\n  }\n  if (iVar5 == 0x6c) {\nLAB_00401e98:\n    uVar8 = 1;\n    goto LAB_00401e30;\n  }\n  if (iVar5 < 0x6d) {\n    if (iVar5 == 0x4c) {\n      uVar10 = 2;\n      goto LAB_00401e30;\n    }\n    if (iVar5 < 0x4d) {\n      if (iVar5 == -0x82) {\n        FUN_004028e0(0);\n        goto LAB_004026ef;\n      }\n      if (iVar5 == 0x48) {\n        uVar10 = 0x11;\n        goto LAB_00401e30;\n      }\n      if (iVar5 == -0x83) {\n        FUN_00404ea0(stdout,\"chcon\",\"GNU coreutils\",PTR_DAT_00610270,\"Russell Coker\",\"Jim Meyering\",\n                     0);\n                    /* WARNING: Subroutine does not return */\n        exit(0);\n      }\n    }\n    else {\n      if (iVar5 == 0x52) {\n        DAT_00610341 = 1;\n        goto LAB_00401e30;\n      }\n      if (iVar5 < 0x53) {\n        if (iVar5 != 0x50) goto LAB_00401f37;\n        uVar10 = 0x10;\n        goto LAB_00401e30;\n      }\n      if (iVar5 == 0x66) goto LAB_00401e30;\n      if (iVar5 == 0x68) {\n        uVar15 = 0;\n        goto LAB_00401e30;\n      }\n    }\n  }\n  else {\n    if (iVar5 == 0x76) {\n      DAT_00610340 = '\\x01';\n      goto LAB_00401e30;\n    }\n    if (iVar5 < 0x77) {\n      if (((iVar5 == 0x74) || (0x74 < iVar5)) || (iVar5 == 0x72)) goto LAB_00401e98;\n    }\n    else {\n      if (iVar5 == 0x81) goto LAB_00401f48;\n      if (iVar5 < 0x82) {\n        if (iVar5 != 0x80) goto LAB_00401f37;\n        uVar15 = 1;\n        goto LAB_00401e30;\n      }\n      if (iVar5 == 0x82) {\n        uVar14 = 1;\n        goto LAB_00401e30;\n      }\n      if (iVar5 == 0x83) {\n        local_58 = DAT_006104e8;\n        goto LAB_00401e30;\n      }\n    }\n  }\nLAB_00401f37:\n  FUN_004028e0(1);\nLAB_00401f48:\n  uVar14 = 0;\n  goto LAB_00401e30;\njoined_r0x00402064:\n  if (lVar6 == 0) {\n    if (*piVar7 != 0) {\n      uVar9 = 0;\n      uVar14 = dcgettext(0,\"fts_read failed\",5);\n      error(0,*piVar7,uVar14);\n    }\n    iVar5 = fts_close(param_2);\n    if (iVar5 != 0) {\n      uVar9 = 0;\n      uVar14 = dcgettext(0,\"fts_close failed\",5);\n      error(0,*piVar7,uVar14);\n    }\n    return uVar9 ^ 1;\n  }\n  pcVar11 = *(char **)(lVar6 + 0x38);\n  switch(*(undefined2 *)(lVar6 + 0x70)) {\n  default:\n    goto switchD_00402083_caseD_0;\n  case 1:\n    uVar13 = (uint)DAT_00610341;\n    if (DAT_00610341 == 0) goto switchD_00402083_caseD_0;\n    if (((DAT_00610338 != (long *)0x0) && (*(long *)(lVar6 + 0x80) == *DAT_00610338)) &&\n       (*(long *)(lVar6 + 0x78) == DAT_00610338[1])) {\n      iVar5 = strcmp(pcVar11,\"/\");\n      if (iVar5 == 0) {\n        uVar14 = FUN_00404780(4,pcVar11);\n        uVar10 = dcgettext(0,\"it is dangerous to operate recursively on %s\",5);\n        error(0,0,uVar10,uVar14);\n      }\n      else {\n        uVar14 = FUN_004046a0(1,4,\"/\");\n        uVar10 = FUN_004046a0(0,4,pcVar11);\n        uVar8 = dcgettext(0,\"it is dangerous to operate recursively on %s (same as %s)\",5);\n        error(0,0,uVar8,uVar10,uVar14);\n      }\n      uVar13 = 0;\n      uVar14 = dcgettext(0,\"use --no-preserve-root to override this failsafe\",5);\n      error(0,0,uVar14);\n      fts_set(param_2,lVar6,4);\n      fts_read(param_2);\n    }\n    goto LAB_004020df;\n  case 2:\n    cVar4 = FUN_004052c0(param_2,lVar6);\n    if (cVar4 != '\\0') {\n      uVar14 = FUN_00404850(0,3,pcVar11);\n      uVar10 = dcgettext(0,\n                         \"WARNING: Circular directory structure.\\nThis almost certainly means that you have a corrupted file system.\\nNOTIFY YOUR SYSTEM MANAGER.\\nThe following directory is part of the cycle:\\n  %s\\n\"\n                         ,5);\n      uVar13 = 0;\n      error(0,0,uVar10,uVar14);\n      goto LAB_004020df;\n    }\nswitchD_00402083_caseD_0:\n    uVar14 = *(undefined8 *)(lVar6 + 0x30);\n    if (DAT_00610340 != '\\0') {\n      uVar10 = FUN_00404780(4,pcVar11);\n      uVar8 = dcgettext(0,\"changing security context of %s\\n\",5);\n      __printf_chk(1,uVar8,uVar10);\n    }\n    lVar1 = DAT_00610330;\n    local_40[0] = 0;\n    if (DAT_00610330 == 0) {\n      if (DAT_00610342 == '\\0') {\n        iVar5 = thunk_FUN_00408410(*(undefined4 *)((long)param_2 + 0x2c),uVar14,local_40);\n      }\n      else {\n        iVar5 = FUN_00408410();\n      }\n      if ((iVar5 < 0) && (*piVar7 != 0x3d)) {\n        uVar14 = FUN_00404780(4,uVar14);\n        pcVar11 = \"failed to get security context of %s\";\n      }\n      else {\n        if (local_40[0] == 0) {\nLAB_00402608:\n          uVar14 = FUN_00404780(4,uVar14);\n          uVar10 = dcgettext(0,\"can\\'t apply partial context to unlabeled file %s\",5);\n          uVar13 = 0;\n          error(0,0,uVar10,uVar14);\n          break;\n        }\n        *piVar7 = 0x5f;\n        uVar14 = FUN_004049d0();\n        pcVar11 = \"failed to create security context: %s\";\n      }\n      uVar10 = dcgettext(0,pcVar11,5);\n      uVar13 = 0;\n      error(0,*piVar7,uVar10,uVar14);\n    }\n    else {\n      if (DAT_00610342 == '\\0') {\n        iVar5 = thunk_FUN_00408410(*(undefined4 *)((long)param_2 + 0x2c),uVar14,DAT_00610330);\n      }\n      else {\n        iVar5 = thunk_FUN_00408410();\n      }\n      if (iVar5 == 0) {\n        uVar13 = (uint)bVar3;\n      }\n      else {\n        uVar10 = FUN_004049b0(1,lVar1);\n        uVar14 = FUN_004046a0(0,4,uVar14);\n        uVar8 = dcgettext(0,\"failed to change context of %s to %s\",5);\n        uVar13 = 0;\n        error(0,*piVar7,uVar8,uVar14,uVar10);\n      }\n    }\n    break;\n  case 4:\n    uVar14 = FUN_00404780(4,pcVar11);\n    pcVar11 = \"cannot read directory %s\";\n    goto LAB_004020b6;\n  case 6:\n    if (DAT_00610341 == 0) {\nLAB_00402457:\n      uVar13 = (uint)bVar3;\n      goto LAB_004020df;\n    }\n    if (((DAT_00610338 == (long *)0x0) || (*(long *)(lVar6 + 0x80) != *DAT_00610338)) ||\n       (*(long *)(lVar6 + 0x78) != DAT_00610338[1])) goto switchD_00402083_caseD_0;\n    iVar5 = strcmp(pcVar11,\"/\");\n    if (iVar5 == 0) {\n      uVar14 = FUN_00404780(4,pcVar11);\n      uVar10 = dcgettext(0,\"it is dangerous to operate recursively on %s\",5);\n      error(0,0,uVar10,uVar14);\n    }\n    else {\n      uVar14 = FUN_004046a0(1,4,\"/\");\n      uVar10 = FUN_004046a0(0,4,pcVar11);\n      uVar8 = dcgettext(0,\"it is dangerous to operate recursively on %s (same as %s)\",5);\n      error(0,0,uVar8,uVar10,uVar14);\n    }\n    uVar13 = 0;\n    uVar14 = dcgettext(0,\"use --no-preserve-root to override this failsafe\",5);\n    error(0,0,uVar14);\n    break;\n  case 7:\n    uVar13 = 0;\n    uVar14 = FUN_00404850(0,3,pcVar11);\n    error(0,*(undefined4 *)(lVar6 + 0x40),\"%s\",uVar14);\n    break;\n  case 10:\n    if ((*(long *)(lVar6 + 0x58) == 0) && (*(long *)(lVar6 + 0x20) == 0)) {\n      *(undefined8 *)(lVar6 + 0x20) = 1;\n      fts_set(param_2,lVar6,1);\n      goto LAB_00402457;\n    }\n    uVar14 = FUN_00404780(4,pcVar11);\n    pcVar11 = \"cannot access %s\";\nLAB_004020b6:\n    uVar10 = dcgettext(0,pcVar11,5);\n    uVar13 = 0;\n    error(0,*(undefined4 *)(lVar6 + 0x40),uVar10,uVar14);\n  }\n  if (DAT_00610341 == 0) {\n    fts_set(param_2,lVar6,4);\n  }\nLAB_004020df:\n  uVar9 = uVar9 & uVar13;\n  lVar6 = fts_read();\n  goto joined_r0x00402064;\n}\n\n",
            "funcName": "FUN_00401dc0"
        },
        {
            "funcStartAddr": "0x402800",
            "funcEndAddr": "0x40282b",
            "decompiledFuncCode": "\nvoid FUN_00402800(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_0060fff0)\n            (FUN_00401dc0,unaff_retaddr,&stack0x00000008,FUN_0040ad50,FUN_0040adb0,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "funcName": "FUN_00402800"
        },
        {
            "funcStartAddr": "0x40282b",
            "funcEndAddr": "0x40284a",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402838) */\n/* WARNING: Removing unreachable block (ram,0x00402842) */\n\nvoid FUN_0040282b(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_0040282b"
        },
        {
            "funcStartAddr": "0x40284a",
            "funcEndAddr": "0x402881",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402879) */\n\nvoid FUN_0040284a(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_0040284a"
        },
        {
            "funcStartAddr": "0x402881",
            "funcEndAddr": "0x4028d8",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004028b6) */\n\nvoid FUN_00402881(void)\n\n{\n  if (DAT_00610308 != '\\0') {\n    return;\n  }\n  FUN_0040282b();\n  DAT_00610308 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00402881"
        },
        {
            "funcStartAddr": "0x4028d8",
            "funcEndAddr": "0x4028dd",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402879) */\n\nvoid thunk_FUN_0040284a(void)\n\n{\n  return;\n}\n\n",
            "funcName": "thunk_4028d8"
        },
        {
            "funcStartAddr": "0x4028e0",
            "funcEndAddr": "0x402ced",
            "decompiledFuncCode": "\nvoid FUN_004028e0(int param_1)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  byte **ppbVar5;\n  undefined8 uVar7;\n  char *pcVar8;\n  long lVar9;\n  byte *pbVar10;\n  byte *pbVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  byte *local_88;\n  char *local_80;\n  byte *local_78 [5];\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  char *local_38;\n  char *local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  byte **ppbVar6;\n  \n  uVar7 = DAT_00610358;\n  bVar14 = 0;\n  if (param_1 != 0) {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar7);\n    goto LAB_0040291f;\n  }\n  uVar3 = dcgettext(0,\n                    \"Usage: %s [OPTION]... CONTEXT FILE...\\n  or:  %s [OPTION]... [-u USER] [-r ROLE] [-l RANGE] [-t TYPE] FILE...\\n  or:  %s [OPTION]... --reference=RFILE FILE...\\n\"\n                    ,5);\n  __printf_chk(1,uVar3,uVar7,uVar7,uVar7);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"Change the SELinux security context of each FILE to CONTEXT.\\nWith --reference, change the security context of each FILE to that of RFILE.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --dereference      affect the referent of each symbolic link (this is\\n                         the default), rather than the symbolic link itself\\n  -h, --no-dereference   affect symbolic links instead of any referenced file\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -u, --user=USER        set user USER in the target security context\\n  -r, --role=ROLE        set role ROLE in the target security context\\n  -t, --type=TYPE        set type TYPE in the target security context\\n  -l, --range=RANGE      set range RANGE in the target security context\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --no-preserve-root  do not treat \\'/\\' specially (the default)\\n      --preserve-root    fail to operate recursively on \\'/\\'\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --reference=RFILE  use RFILE\\'s security context rather than specifying\\n                         a CONTEXT value\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -R, --recursive        operate on files and directories recursively\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -v, --verbose          output a diagnostic for every file processed\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nThe following options modify how a hierarchy is traversed when the -R\\noption is also specified.  If more than one is specified, only the final\\none takes effect.\\n\\n  -H                     if a command line argument is a symbolic link\\n                         to a directory, traverse it\\n  -L                     traverse every symbolic link to a directory\\n                         encountered\\n  -P                     do not traverse any symbolic links (default)\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  local_88 = &DAT_0040ae2a;\n  local_80 = \"test invocation\";\n  local_78[0] = (byte *)0x40aea4;\n  local_78[1] = (byte *)0x40ae3c;\n  local_78[2] = (byte *)0x40ae52;\n  local_78[3] = (byte *)0x40ae5c;\n  local_78[4] = (byte *)0x40ae6b;\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha384sum\";\n  local_40 = \"sha2 utilities\";\n  local_38 = \"sha512sum\";\n  local_30 = \"sha2 utilities\";\n  local_28 = 0;\n  local_20 = 0;\n  ppbVar5 = &local_88;\n  do {\n    ppbVar6 = ppbVar5;\n    ppbVar5 = ppbVar6 + 2;\n    pbVar11 = *ppbVar5;\n    bVar12 = false;\n    bVar13 = pbVar11 == (byte *)0x0;\n    if (bVar13) break;\n    lVar9 = 6;\n    pbVar10 = (byte *)\"chcon\";\n    do {\n      if (lVar9 == 0) break;\n      lVar9 = lVar9 + -1;\n      bVar12 = *pbVar10 < *pbVar11;\n      bVar13 = *pbVar10 == *pbVar11;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n      pbVar11 = pbVar11 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n  } while ((!bVar12 && !bVar13) != bVar12);\n  pcVar4 = (char *)ppbVar6[3];\n  if ((byte *)pcVar4 == (byte *)0x0) {\n    uVar7 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar7,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\n        pcVar4 = \"chcon\";\n        goto LAB_00402cc3;\n      }\n    }\n    pcVar4 = \"chcon\";\n    uVar7 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar8 = \" invocation\";\n    __printf_chk(1,uVar7,\"https://www.gnu.org/software/coreutils/\",\"chcon\");\n  }\n  else {\n    uVar7 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar7,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar8 = setlocale(5,(char *)0x0);\n    if (pcVar8 != (char *)0x0) {\n      iVar2 = strncmp(pcVar8,\"en_\",3);\n      if (iVar2 != 0) {\nLAB_00402cc3:\n        uVar7 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar7,\"chcon\");\n      }\n    }\n    pcVar8 = \" invocation\";\n    uVar7 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar7,\"https://www.gnu.org/software/coreutils/\",\"chcon\");\n    if (pcVar4 != \"chcon\") {\n      pcVar8 = \"\";\n    }\n  }\n  uVar7 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  __printf_chk(1,uVar7,pcVar4,pcVar8);\nLAB_0040291f:\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n",
            "funcName": "FUN_004028e0"
        },
        {
            "funcStartAddr": "0x402cf0",
            "funcEndAddr": "0x402cf8",
            "decompiledFuncCode": "\nvoid FUN_00402cf0(undefined8 param_1)\n\n{\n  DAT_00610350 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00402cf0"
        },
        {
            "funcStartAddr": "0x402d00",
            "funcEndAddr": "0x402d08",
            "decompiledFuncCode": "\nvoid FUN_00402d00(undefined param_1)\n\n{\n  DAT_00610348 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00402d00"
        },
        {
            "funcStartAddr": "0x402d10",
            "funcEndAddr": "0x402dae",
            "decompiledFuncCode": "\nvoid FUN_00402d10(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_00408530(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_00610348 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_00610350 == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = FUN_00404820();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_00402d8e;\n    }\n  }\n  iVar1 = FUN_00408530(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_00402d8e:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_00610278);\n}\n\n",
            "funcName": "FUN_00402d10"
        },
        {
            "funcStartAddr": "0x402db0",
            "funcEndAddr": "0x402e49",
            "decompiledFuncCode": "\nvoid FUN_00402db0(byte *param_1)\n\n{\n  byte *pbVar1;\n  char *pcVar2;\n  long lVar3;\n  ulong uVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  byte bVar10;\n  \n  bVar10 = 0;\n  if (param_1 == (byte *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar2 = strrchr((char *)param_1,0x2f);\n  if (pcVar2 != (char *)0x0) {\n    pbVar1 = (byte *)(pcVar2 + 1);\n    uVar4 = (long)pbVar1 - (long)param_1;\n    bVar7 = uVar4 < 6;\n    bVar9 = uVar4 == 6;\n    if (6 < (long)uVar4) {\n      lVar3 = 7;\n      pbVar5 = (byte *)(pcVar2 + -6);\n      pbVar6 = (byte *)\"/.libs/\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar5 < *pbVar6;\n        bVar9 = *pbVar5 == *pbVar6;\n        pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      bVar8 = false;\n      bVar7 = (!bVar7 && !bVar9) == bVar7;\n      if (bVar7) {\n        lVar3 = 3;\n        pbVar5 = pbVar1;\n        pbVar6 = &DAT_0040bd98;\n        do {\n          if (lVar3 == 0) break;\n          lVar3 = lVar3 + -1;\n          bVar8 = *pbVar5 < *pbVar6;\n          bVar7 = *pbVar5 == *pbVar6;\n          pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n          pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        } while (bVar7);\n        param_1 = pbVar1;\n        if ((!bVar8 && !bVar7) == bVar8) {\n          param_1 = (byte *)(pcVar2 + 4);\n          program_invocation_short_name = param_1;\n        }\n      }\n    }\n  }\n  DAT_00610358 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00402db0"
        },
        {
            "funcStartAddr": "0x402e50",
            "funcEndAddr": "0x402f2f",
            "decompiledFuncCode": "\nchar * FUN_00402e50(char *param_1,int param_2)\n\n{\n  char cVar1;\n  char *pcVar2;\n  byte *pbVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    pbVar3 = (byte *)FUN_004099e0();\n    if ((*pbVar3 & 0xdf) == 0x55) {\n      if (((((pbVar3[1] & 0xdf) != 0x54) || ((pbVar3[2] & 0xdf) != 0x46)) || (pbVar3[3] != 0x2d)) ||\n         ((pbVar3[4] != 0x38 || (pbVar3[5] != 0)))) {\nLAB_00402f28:\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_0040bda9;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0040bd9e;\n      }\n    }\n    else {\n      if (((((*pbVar3 & 0xdf) != 0x47) || ((pbVar3[1] & 0xdf) != 0x42)) || (pbVar3[2] != 0x31)) ||\n         (((pbVar3[3] != 0x38 || (pbVar3[4] != 0x30)) ||\n          ((pbVar3[5] != 0x33 || ((pbVar3[6] != 0x30 || (pbVar3[7] != 0)))))))) goto LAB_00402f28;\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_0040bda5;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0040bda2;\n      }\n    }\n  }\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_00402e50"
        },
        {
            "funcStartAddr": "0x402f50",
            "funcEndAddr": "0x404083",
            "decompiledFuncCode": "\nulong FUN_00402f50(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  ulong uVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ulong uVar9;\n  ushort **ppuVar10;\n  long lVar11;\n  char *pcVar12;\n  byte bVar13;\n  char cVar14;\n  ulong uVar15;\n  ulong uVar16;\n  byte bVar17;\n  uint uVar18;\n  ulong uVar19;\n  bool bVar20;\n  ulong uVar21;\n  ulong uVar22;\n  bool bVar23;\n  bool bVar24;\n  bool bVar25;\n  bool bVar26;\n  size_t local_a0;\n  char *local_78;\n  ulong local_70;\n  bool local_5c;\n  bool local_5b;\n  wint_t local_44;\n  mbstate_t local_40 [2];\n  \n  sVar8 = __ctype_get_mb_cur_max();\n  uVar18 = param_6 & 2;\n  local_5c = uVar18 != 0;\n  uVar9 = param_2;\n  switch(param_5) {\n  case 0:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = false;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar18 != 0) {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = false;\n      local_a0 = 1;\n      local_78 = \"\\'\";\n      break;\n    }\n    bVar6 = false;\nLAB_00403ba1:\n    if (param_2 != 0) {\n      bVar3 = false;\n      local_5b = false;\n      bVar2 = true;\n      local_70 = 0;\n      goto LAB_004037d6;\n    }\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 1;\n    param_5 = 2;\n    local_70 = 0;\n    local_5b = false;\n    local_5c = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 3:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 4:\n    if (uVar18 == 0) {\n      bVar6 = true;\n      goto LAB_00403ba1;\n    }\n  case 1:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 5:\n    if (uVar18 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      local_5b = false;\n      local_70 = 0;\n      bVar2 = true;\n      bVar3 = false;\n      local_5c = false;\n      uVar15 = 1;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    else {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 5;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\\"\";\n    break;\n  case 7:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = true;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      param_8 = (char *)FUN_00402e50(&DAT_0040bdad,param_5);\n      param_9 = (char *)FUN_00402e50(&DAT_0040d234);\n    }\n    uVar15 = 0;\n    if (uVar18 == 0) {\n      cVar14 = *param_8;\n      while (cVar14 != '\\0') {\n        if (uVar15 < param_2) {\n          param_1[uVar15] = cVar14;\n        }\n        uVar15 = uVar15 + 1;\n        cVar14 = param_8[uVar15];\n      }\n    }\n    local_a0 = strlen(param_9);\n    bVar2 = true;\n    bVar3 = false;\n    local_78 = param_9;\n    local_5b = false;\n    local_70 = 0;\n    bVar6 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\nLAB_00402fe8:\n  uVar22 = 0;\n  bVar5 = local_5b;\nLAB_00402ff8:\n  bVar23 = param_4 != uVar22;\n  if (param_4 == 0xffffffffffffffff) {\n    bVar23 = param_3[uVar22] != '\\0';\n  }\n  bVar26 = bVar6;\n  if (!bVar23) goto LAB_00403778;\n  bVar20 = (bool)(param_5 != 2 & bVar6);\n  __s1 = (byte *)(param_3 + uVar22);\n  uVar16 = uVar15;\n  bVar4 = bVar3;\n  if (bVar20) {\n    if (local_a0 == 0) {\nLAB_004036f0:\n      uVar19 = (ulong)*__s1;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00403702_caseD_0;\n      default:\n        bVar20 = false;\n        goto switchD_0040356e_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00403405;\n      case 8:\n        bVar17 = 0x62;\n        break;\n      case 9:\nswitchD_00403702_caseD_9:\n        bVar17 = 0x74;\n        break;\n      case 10:\nswitchD_00403702_caseD_a:\n        bVar17 = 0x6e;\n        break;\n      case 0xb:\nswitchD_00403702_caseD_b:\n        bVar17 = 0x76;\n        goto LAB_00403405;\n      case 0xc:\nswitchD_00403702_caseD_c:\n        bVar17 = 0x66;\nLAB_00403405:\n        if (local_5c) {\n          bVar25 = false;\n          goto LAB_00403358;\n        }\nLAB_00403410:\n        bVar23 = false;\n        goto LAB_004031cb;\n      case 0xd:\n        bVar20 = false;\nswitchD_004030e8_caseD_d:\n        bVar25 = param_5 == 2;\n        uVar19 = 0xd;\n        bVar13 = 0x72;\n        goto LAB_00403320;\n      case 0x20:\n        bVar25 = false;\nLAB_0040374a:\n        uVar19 = 0x20;\n        goto LAB_00403712;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar20 = false;\nswitchD_004030e8_caseD_21:\n        bVar25 = false;\n        goto LAB_0040332b;\n      case 0x23:\n      case 0x7e:\n        bVar26 = false;\nLAB_0040372a:\n        if (uVar22 == 0) {\n          bVar25 = false;\n          bVar23 = bVar20;\n          bVar20 = bVar26;\n          goto LAB_00403138;\n        }\n        bVar23 = false;\n        goto LAB_0040314f;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar25 = false;\nLAB_00403712:\n        bVar24 = false;\n        bVar23 = bVar20;\n        bVar20 = bVar25;\n        goto LAB_00403151;\n      case 0x27:\n        bVar20 = false;\n        goto switchD_0040356e_caseD_27;\n      case 0x3f:\n        bVar20 = false;\n        goto switchD_0040356e_caseD_3f;\n      case 0x5c:\n        bVar20 = false;\n        goto switchD_004030e8_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        bVar20 = false;\n        goto switchD_0040356e_caseD_7b;\n      }\n      bVar25 = false;\n      bVar23 = false;\n      goto joined_r0x00403347;\n    }\n    if ((param_4 == 0xffffffffffffffff) && (1 < local_a0)) {\n      param_4 = strlen(param_3);\n    }\n    if ((param_4 < uVar22 + local_a0) || (iVar7 = memcmp(__s1,local_78,local_a0), iVar7 != 0))\n    goto LAB_004036f0;\n    if (!local_5c) {\n      uVar19 = (ulong)*__s1;\n      bVar25 = bVar20;\n      switch(uVar19) {\n      case 0:\n        goto switchD_004030e8_caseD_0;\n      default:\n        goto switchD_0040356e_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00403410;\n      case 8:\n        bVar25 = false;\n        bVar23 = false;\n        bVar17 = 0x62;\n        break;\n      case 9:\n        goto switchD_00403702_caseD_9;\n      case 10:\n        goto switchD_00403702_caseD_a;\n      case 0xb:\n        goto switchD_00403702_caseD_b;\n      case 0xc:\n        goto switchD_00403702_caseD_c;\n      case 0xd:\n        goto switchD_004030e8_caseD_d;\n      case 0x20:\n        goto LAB_0040374a;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        goto switchD_004030e8_caseD_21;\n      case 0x23:\n      case 0x7e:\n        bVar26 = bVar20;\n        goto LAB_0040372a;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        goto LAB_00403712;\n      case 0x27:\n        goto switchD_0040356e_caseD_27;\n      case 0x3f:\n        goto switchD_0040356e_caseD_3f;\n      case 0x5c:\n        goto switchD_004030e8_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        goto switchD_0040356e_caseD_7b;\n      }\n      goto LAB_00403192;\n    }\n    goto LAB_0040336a;\n  }\n  uVar19 = (ulong)*__s1;\n  switch(uVar19) {\n  case 0:\n    if (bVar6) {\nswitchD_00403702_caseD_0:\n      if (!local_5c) {\n        bVar20 = false;\nswitchD_004030e8_caseD_0:\n        bVar26 = param_5 == 2;\n        bVar24 = (bool)((bVar3 ^ 1U) & bVar26);\n        if (bVar24) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar16 = uVar15 + 3;\n          bVar3 = bVar24;\n          if (uVar9 <= uVar15 + 3) {\n            uVar16 = uVar15 + 4;\n            bVar23 = false;\n            bVar17 = 0x30;\n            bVar4 = bVar24;\n            goto LAB_00403248;\n          }\nLAB_0040348a:\n          param_1[uVar16] = 0x5c;\n          uVar15 = uVar16;\n        }\n        else if (uVar15 < uVar9) goto LAB_0040348a;\n        uVar16 = uVar15 + 1;\n        bVar24 = bVar23;\n        if (param_5 == 2) {\n          bVar17 = 0x30;\n          bVar23 = false;\n          bVar4 = bVar3;\n          goto LAB_00403248;\n        }\n        uVar19 = 0x30;\n        if ((uVar22 + 1 < param_4) && ((byte)(param_3[uVar22 + 1] - 0x30U) < 10)) {\n          if (uVar16 < uVar9) {\n            param_1[uVar16] = 0x30;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x30;\n          }\n          uVar16 = uVar15 + 3;\n          uVar19 = 0x30;\n        }\nLAB_004034c9:\n        bVar17 = (byte)uVar19;\n        bVar23 = false;\n        uVar15 = uVar16;\n        bVar4 = bVar3;\n        if ((bool)(bVar6 ^ 1U | bVar26)) goto LAB_00403248;\n        goto LAB_00403151;\n      }\n      bVar26 = param_5 == 2;\n      goto LAB_0040335c;\n    }\n    if ((param_6 & 1) == 0) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0;\n      bVar23 = false;\n      bVar20 = false;\n      goto LAB_00403138;\n    }\n    uVar22 = uVar22 + 1;\n    goto LAB_00402ff8;\n  default:\nswitchD_0040356e_caseD_1:\n    bVar25 = bVar6;\n    if (sVar8 != 1) {\n      local_40[0] = (mbstate_t)0x0;\n      if (param_4 == 0xffffffffffffffff) {\n        param_4 = strlen(param_3);\n      }\n      uVar21 = 0;\n      do {\n        uVar1 = uVar22 + uVar21;\n        lVar11 = FUN_00408390(&local_44,param_3 + uVar1,param_4 - uVar1,local_40);\n        if (lVar11 == 0) break;\n        if (lVar11 == -1) {\n          bVar23 = false;\n          goto LAB_00403e7a;\n        }\n        if (lVar11 == -2) {\n          if ((param_4 <= uVar1) || (param_3[uVar1] == '\\0')) goto LAB_00403fb7;\n          goto LAB_00403fa7;\n        }\n        if (((param_5 == 2) && (local_5c)) && (lVar11 != 1)) {\n          pcVar12 = param_3 + uVar1 + 1;\n          do {\n            if (((byte)(*pcVar12 + 0xa5U) < 0x22) &&\n               ((1L << (*pcVar12 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n              param_5 = 2;\n              goto LAB_0040335c;\n            }\n            pcVar12 = pcVar12 + 1;\n          } while (param_3 + uVar1 + lVar11 != pcVar12);\n        }\n        iVar7 = iswprint(local_44);\n        if (iVar7 == 0) {\n          bVar23 = false;\n        }\n        uVar21 = uVar21 + lVar11;\n        iVar7 = mbsinit(local_40);\n      } while (iVar7 == 0);\n      bVar25 = (bool)((bVar23 ^ 1U) & bVar6);\n      goto LAB_00403e7a;\n    }\n    ppuVar10 = __ctype_b_loc();\n    uVar21 = 1;\n    bVar25 = ((*ppuVar10)[uVar19] & 0x4000) == 0;\n    bVar23 = !bVar25;\n    bVar25 = (bool)(bVar25 & bVar6);\n    goto LAB_00403544;\n  case 7:\n    bVar25 = param_5 == 2;\n    uVar19 = 7;\n    bVar13 = 0x61;\n    break;\n  case 8:\n    bVar25 = param_5 == 2;\n    uVar19 = 8;\n    bVar13 = 0x62;\n    break;\n  case 9:\n    uVar19 = 9;\n    bVar13 = 0x74;\n    goto LAB_00403582;\n  case 10:\n    uVar19 = 10;\n    bVar13 = 0x6e;\n    goto LAB_00403582;\n  case 0xb:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xb;\n    bVar13 = 0x76;\n    break;\n  case 0xc:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xc;\n    bVar13 = 0x66;\n    break;\n  case 0xd:\n    uVar19 = 0xd;\n    bVar13 = 0x72;\nLAB_00403582:\n    bVar25 = param_5 == 2;\n    bVar20 = (bool)(local_5c & bVar25);\n    if (bVar20) {\nLAB_0040359a:\n      param_5 = 2;\n      goto LAB_0040335c;\n    }\n    break;\n  case 0x20:\n    uVar19 = 0x20;\n    goto LAB_00403126;\n  case 0x21:\n  case 0x22:\n  case 0x24:\n  case 0x26:\n  case 0x28:\n  case 0x29:\n  case 0x2a:\n  case 0x3b:\n  case 0x3c:\n  case 0x3d:\n  case 0x3e:\n  case 0x5b:\n  case 0x5e:\n  case 0x60:\n  case 0x7c:\n    bVar23 = false;\nLAB_00403126:\n    bVar25 = param_5 == 2;\n    if ((local_5c) && (bVar25)) goto LAB_0040359a;\n    goto LAB_00403138;\n  case 0x23:\n  case 0x7e:\nLAB_0040311d:\n    bVar25 = param_5 == 2;\n    if (uVar22 == 0) goto LAB_00403126;\n    goto LAB_0040332b;\n  case 0x25:\n  case 0x2b:\n  case 0x2c:\n  case 0x2d:\n  case 0x2e:\n  case 0x2f:\n  case 0x30:\n  case 0x31:\n  case 0x32:\n  case 0x33:\n  case 0x34:\n  case 0x35:\n  case 0x36:\n  case 0x37:\n  case 0x38:\n  case 0x39:\n  case 0x3a:\n  case 0x41:\n  case 0x42:\n  case 0x43:\n  case 0x44:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x48:\n  case 0x49:\n  case 0x4a:\n  case 0x4b:\n  case 0x4c:\n  case 0x4d:\n  case 0x4e:\n  case 0x4f:\n  case 0x50:\n  case 0x51:\n  case 0x52:\n  case 0x53:\n  case 0x54:\n  case 0x55:\n  case 0x56:\n  case 0x57:\n  case 0x58:\n  case 0x59:\n  case 0x5a:\n  case 0x5d:\n  case 0x5f:\n  case 0x61:\n  case 0x62:\n  case 99:\n  case 100:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n  case 0x68:\n  case 0x69:\n  case 0x6a:\n  case 0x6b:\n  case 0x6c:\n  case 0x6d:\n  case 0x6e:\n  case 0x6f:\n  case 0x70:\n  case 0x71:\n  case 0x72:\n  case 0x73:\n  case 0x74:\n  case 0x75:\n  case 0x76:\n  case 0x77:\n  case 0x78:\n  case 0x79:\n  case 0x7a:\n    goto switchD_0040356e_caseD_25;\n  case 0x27:\nswitchD_0040356e_caseD_27:\n    bVar5 = bVar23;\n    if (param_5 != 2) {\n      bVar25 = false;\n      uVar19 = 0x27;\n      goto LAB_00403138;\n    }\n    if (!local_5c) {\n      if ((uVar9 == 0) || (uVar19 = 0, uVar21 = uVar9, local_70 != 0)) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x5c;\n        }\n        uVar19 = uVar9;\n        uVar21 = local_70;\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x27;\n        }\n      }\n      uVar16 = uVar15 + 3;\n      bVar17 = 0x27;\n      uVar9 = uVar19;\n      local_70 = uVar21;\n      bVar24 = false;\n      bVar4 = false;\n      goto LAB_00403248;\n    }\n    goto LAB_0040335c;\n  case 0x3f:\nswitchD_0040356e_caseD_3f:\n    if (param_5 == 2) {\n      if (!local_5c) {\n        bVar17 = 0x3f;\n        bVar24 = false;\n        bVar23 = false;\n        goto LAB_00403248;\n      }\n      goto LAB_0040335c;\n    }\n    if (param_5 != 5) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0x3f;\n      bVar23 = false;\n      goto LAB_00403138;\n    }\n    if (((((param_6 & 4) != 0) && (uVar21 = uVar22 + 2, uVar21 < param_4)) &&\n        (param_3[uVar22 + 1] == '?')) &&\n       ((uVar19 = (ulong)(byte)param_3[uVar21], (byte)param_3[uVar21] < 0x3f &&\n        ((0x7000a38200000000U >> (uVar19 & 0x3f) & 1) != 0)))) {\n      if (!local_5c) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x3f;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x22;\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x22;\n        }\n        if (uVar15 + 3 < uVar9) {\n          param_1[uVar15 + 3] = 0x3f;\n        }\n        uVar16 = uVar15 + 4;\n        bVar26 = false;\n        uVar22 = uVar21;\n        bVar24 = false;\n        goto LAB_004034c9;\n      }\n      goto LAB_0040336a;\n    }\n    bVar25 = false;\n    uVar19 = 0x3f;\n    bVar23 = false;\n    goto LAB_00403138;\n  case 0x5c:\n    if (param_5 != 2) {\nswitchD_004030e8_caseD_5c:\n      uVar19 = 0x5c;\n      bVar17 = 0x5c;\n      bVar13 = 0x5c;\n      bVar25 = (bool)(bVar6 & local_5c & local_a0 != 0);\n      if (!bVar25) break;\n      uVar22 = uVar22 + 1;\n      bVar23 = false;\n      goto LAB_00403264;\n    }\n    if (local_5c) goto LAB_0040335c;\n    uVar22 = uVar22 + 1;\n    bVar23 = false;\n    bVar17 = 0x5c;\n    goto LAB_00403264;\n  case 0x7b:\n  case 0x7d:\nswitchD_0040356e_caseD_7b:\n    bVar24 = param_4 != 1;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar24 = param_3[1] != '\\0';\n    }\n    bVar25 = param_5 == 2;\n    if (!bVar24) goto LAB_0040311d;\n    goto LAB_0040332b;\n  }\nLAB_00403320:\n  if (!bVar6) {\nLAB_0040332b:\n    bVar23 = false;\n    goto LAB_00403138;\n  }\n  bVar23 = false;\n  bVar17 = bVar13;\n  goto joined_r0x00403347;\nLAB_00403778:\n  if ((uVar15 == 0) && ((bool)(local_5c & param_5 == 2))) {\n    param_5 = 2;\nLAB_0040335c:\n    if (bVar26) {\n      param_5 = 4;\n    }\nLAB_0040336a:\n    uVar9 = FUN_00402f50(param_1,uVar9,param_3,param_4,param_5,param_6 & 0xfffffffd,0,param_8,\n                         param_9);\n    return uVar9;\n  }\n  bVar26 = (bool)(param_5 == 2 & (local_5c ^ 1U));\n  bVar23 = (bool)(local_5c ^ 1U);\n  if ((!bVar26) || (bVar23 = bVar26, !bVar5)) {\nLAB_0040404d:\n    uVar22 = uVar15;\n    if (((local_78 != (char *)0x0) && (bVar23)) && (cVar14 = *local_78, cVar14 != '\\0')) {\n      do {\n        if (uVar22 < uVar9) {\n          param_1[uVar22] = cVar14;\n        }\n        uVar22 = uVar22 + 1;\n        cVar14 = local_78[uVar22 - uVar15];\n      } while (cVar14 != '\\0');\n    }\n    if (uVar22 < uVar9) {\n      param_1[uVar22] = 0;\n    }\n    return uVar22;\n  }\n  if (bVar2) {\n    uVar9 = FUN_00402f50(param_1,local_70,param_3,param_4,5,param_6,param_7,param_8,param_9);\n    return uVar9;\n  }\n  local_5b = uVar9 == 0 && local_70 != 0;\n  param_2 = local_70;\n  bVar23 = bVar5;\n  if (uVar9 != 0 || local_70 == 0) goto LAB_0040404d;\nLAB_004037d6:\n  *param_1 = 0x27;\n  param_5 = 2;\n  uVar15 = 1;\n  local_78 = \"\\'\";\n  local_a0 = 1;\n  local_5c = false;\n  uVar9 = param_2;\n  goto LAB_00402fe8;\n  while (__s1[uVar21] != 0) {\nLAB_00403fa7:\n    uVar21 = uVar21 + 1;\n    if (param_4 <= uVar22 + uVar21) break;\n  }\nLAB_00403fb7:\n  bVar23 = false;\nLAB_00403e7a:\n  if (1 < uVar21) {\nLAB_00403a3e:\n    bVar26 = false;\n    uVar21 = uVar21 + uVar22;\n    uVar16 = uVar22;\n    do {\n      bVar17 = (byte)uVar19;\n      if (bVar25) {\n        bVar26 = param_5 == 2;\n        if (local_5c) goto LAB_0040335c;\n        bVar26 = (bool)(bVar26 & (bVar4 ^ 1U));\n        if (bVar26) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar15 = uVar15 + 3;\n          bVar4 = bVar26;\n        }\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x5c;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = (char)(uVar19 >> 6) + '0';\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = ((byte)(uVar19 >> 3) & 7) + 0x30;\n        }\n        uVar22 = uVar16 + 1;\n        uVar15 = uVar15 + 3;\n        bVar17 = (bVar17 & 7) + 0x30;\n        bVar26 = bVar25;\n        if (uVar21 <= uVar22) goto LAB_004031dd;\n      }\n      else {\n        bVar3 = (bool)((bVar26 ^ 1U) & bVar4);\n        if (bVar20) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x5c;\n          }\n          uVar15 = uVar15 + 1;\n        }\n        uVar22 = uVar16 + 1;\n        if (uVar21 <= uVar22) goto LAB_00403264;\n        if (bVar3) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x27;\n          }\n          uVar15 = uVar15 + 2;\n          bVar20 = false;\n          bVar4 = false;\n        }\n        else {\n          bVar20 = false;\n        }\n      }\n      uVar16 = uVar16 + 1;\n      if (uVar15 < uVar9) {\n        param_1[uVar15] = bVar17;\n      }\n      uVar19 = (ulong)(byte)param_3[uVar16];\n      uVar15 = uVar15 + 1;\n    } while( true );\n  }\nLAB_00403544:\n  if (bVar25) {\n    bVar23 = false;\n    bVar25 = bVar6;\n    goto LAB_00403a3e;\n  }\nswitchD_0040356e_caseD_25:\n  bVar25 = param_5 == 2;\nLAB_00403138:\n  bVar17 = (byte)uVar19;\n  bVar24 = (bool)((bVar6 ^ 1U | bVar25) ^ 1 | local_5c);\n  bVar26 = bVar20;\n  if (bVar24) {\nLAB_0040314f:\n    bVar24 = false;\n    bVar20 = bVar26;\nLAB_00403151:\n    bVar17 = (byte)uVar19;\n    uVar16 = uVar15;\n    bVar4 = bVar3;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar19 >> 5) * 4) >> (bVar17 & 0x1f) & 1) == 0))\n    goto LAB_00403248;\n    bVar25 = param_5 == 2;\n  }\n  else {\nLAB_00403248:\n    bVar25 = param_5 == 2;\n    uVar15 = uVar16;\n    bVar3 = bVar4;\n    if (!bVar20) {\n      uVar22 = uVar22 + 1;\n      bVar3 = (bool)((bVar24 ^ 1U) & bVar4);\nLAB_00403264:\n      if (bVar3) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x27;\n        }\n        uVar15 = uVar15 + 2;\n        bVar4 = false;\n      }\n      goto LAB_004031dd;\n    }\n  }\njoined_r0x00403347:\n  if (local_5c) {\nLAB_00403358:\n    bVar26 = (bool)(bVar6 & bVar25);\n    goto LAB_0040335c;\n  }\nLAB_00403192:\n  bVar25 = (bool)((bVar3 ^ 1U) & bVar25);\n  if (bVar25) {\n    if (uVar15 < uVar9) {\n      param_1[uVar15] = 0x27;\n    }\n    if (uVar15 + 1 < uVar9) {\n      param_1[uVar15 + 1] = 0x24;\n    }\n    if (uVar15 + 2 < uVar9) {\n      param_1[uVar15 + 2] = 0x27;\n    }\n    uVar15 = uVar15 + 3;\n    bVar3 = bVar25;\n  }\nLAB_004031cb:\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = 0x5c;\n  }\n  uVar15 = uVar15 + 1;\n  uVar22 = uVar22 + 1;\n  bVar4 = bVar3;\nLAB_004031dd:\n  bVar3 = bVar4;\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = bVar17;\n  }\n  uVar15 = uVar15 + 1;\n  if (!bVar23) {\n    bVar2 = false;\n  }\n  goto LAB_00402ff8;\n}\n\n",
            "funcName": "FUN_00402f50"
        },
        {
            "funcStartAddr": "0x404180",
            "funcEndAddr": "0x40431b",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_00404180(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_006102b8;\n  if (DAT_006102d0 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00405230();\n    }\n    if (PTR_DAT_006102b8 == &DAT_006102c0) {\n      puVar8 = (undefined4 *)FUN_00405040(0);\n      uVar6 = PTR_DAT_006102c8._4_4_;\n      uVar5 = PTR_DAT_006102c8._0_4_;\n      uVar3 = _UNK_006102c4;\n      PTR_DAT_006102b8 = (undefined *)puVar8;\n      *puVar8 = _DAT_006102c0;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_00405040(PTR_DAT_006102b8);\n      PTR_DAT_006102b8 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_006102d0 * 4,0,(long)((param_1 + 1) - DAT_006102d0) << 4);\n    DAT_006102d0 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_00402f50(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_00610360) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)FUN_00404fe0(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_00402f50(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n",
            "funcName": "FUN_00404180"
        },
        {
            "funcStartAddr": "0x404320",
            "funcEndAddr": "0x404354",
            "decompiledFuncCode": "\nvoid FUN_00404320(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00610460;\n  }\n  FUN_004051e0(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00404320"
        },
        {
            "funcStartAddr": "0x404360",
            "funcEndAddr": "0x40436f",
            "decompiledFuncCode": "\nundefined4 FUN_00404360(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00610460;\n  }\n  return *param_1;\n}\n\n",
            "funcName": "FUN_00404360"
        },
        {
            "funcStartAddr": "0x404370",
            "funcEndAddr": "0x40437f",
            "decompiledFuncCode": "\nvoid FUN_00404370(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00610460;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_00404370"
        },
        {
            "funcStartAddr": "0x404380",
            "funcEndAddr": "0x4043b3",
            "decompiledFuncCode": "\nuint FUN_00404380(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00610460;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n",
            "funcName": "FUN_00404380"
        },
        {
            "funcStartAddr": "0x4043c0",
            "funcEndAddr": "0x4043d3",
            "decompiledFuncCode": "\nundefined4 FUN_004043c0(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00610460;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n",
            "funcName": "FUN_004043c0"
        },
        {
            "funcStartAddr": "0x4043e0",
            "funcEndAddr": "0x40440b",
            "decompiledFuncCode": "\nvoid FUN_004043e0(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00610460;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004043e0"
        },
        {
            "funcStartAddr": "0x404410",
            "funcEndAddr": "0x404482",
            "decompiledFuncCode": "\nvoid FUN_00404410(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_00610460;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00402f50(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00404410"
        },
        {
            "funcStartAddr": "0x404490",
            "funcEndAddr": "0x404571",
            "decompiledFuncCode": "\nundefined8 FUN_00404490(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_00610460;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00402f50(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = FUN_00404fe0(lVar3 + 1);\n  FUN_00402f50(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n",
            "funcName": "FUN_00404490"
        },
        {
            "funcStartAddr": "0x404580",
            "funcEndAddr": "0x40458a",
            "decompiledFuncCode": "\nvoid FUN_00404580(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00404490(param_1,param_2,0,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00404580"
        },
        {
            "funcStartAddr": "0x404590",
            "funcEndAddr": "0x404625",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00404590(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_006102b8;\n  if (1 < DAT_006102d0) {\n    ppvVar2 = (void **)(PTR_DAT_006102b8 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_006102b8 + (ulong)(DAT_006102d0 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_00610360) {\n    free(*(undefined **)(__ptr_00 + 8));\n    _DAT_006102c0 = 0x100;\n    PTR_DAT_006102c8 = &DAT_00610360;\n  }\n  if (__ptr_00 != &DAT_006102c0) {\n    free(__ptr_00);\n    PTR_DAT_006102b8 = &DAT_006102c0;\n  }\n  DAT_006102d0 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00404590"
        },
        {
            "funcStartAddr": "0x404630",
            "funcEndAddr": "0x404641",
            "decompiledFuncCode": "\nvoid FUN_00404630(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00404180(param_1,param_2,0xffffffffffffffff,&DAT_00610460);\n  return;\n}\n\n",
            "funcName": "FUN_00404630"
        },
        {
            "funcStartAddr": "0x404650",
            "funcEndAddr": "0x40465a",
            "decompiledFuncCode": "\nvoid FUN_00404650(void)\n\n{\n  FUN_00404180();\n  return;\n}\n\n",
            "funcName": "FUN_00404650"
        },
        {
            "funcStartAddr": "0x404660",
            "funcEndAddr": "0x404676",
            "decompiledFuncCode": "\nvoid FUN_00404660(undefined8 param_1)\n\n{\n  FUN_00404180(0,param_1,0xffffffffffffffff,&DAT_00610460);\n  return;\n}\n\n",
            "funcName": "FUN_00404660"
        },
        {
            "funcStartAddr": "0x404680",
            "funcEndAddr": "0x404692",
            "decompiledFuncCode": "\nvoid FUN_00404680(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00404180(0,param_1,param_2,&DAT_00610460);\n  return;\n}\n\n",
            "funcName": "FUN_00404680"
        },
        {
            "funcStartAddr": "0x4046a0",
            "funcEndAddr": "0x404708",
            "decompiledFuncCode": "\nvoid FUN_004046a0(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00404180(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004046a0"
        },
        {
            "funcStartAddr": "0x404710",
            "funcEndAddr": "0x404774",
            "decompiledFuncCode": "\nvoid FUN_00404710(undefined8 param_1,int param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00404180(param_1,param_3,param_4,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00404710"
        },
        {
            "funcStartAddr": "0x404780",
            "funcEndAddr": "0x40478c",
            "decompiledFuncCode": "\nvoid FUN_00404780(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_004046a0(0,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00404780"
        },
        {
            "funcStartAddr": "0x404790",
            "funcEndAddr": "0x40479f",
            "decompiledFuncCode": "\nvoid FUN_00404790(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00404710(0,param_1,param_2,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00404790"
        },
        {
            "funcStartAddr": "0x4047a0",
            "funcEndAddr": "0x404810",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_004047a0(undefined8 param_1,undefined8 param_2,byte param_3)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  \n  local_18 = DAT_00610490;\n  local_48 = _DAT_00610460;\n  uStack_40 = uRam0000000000610468;\n  local_38 = _DAT_00610470;\n  uStack_30 = uRam0000000000610478;\n  puVar1 = (uint *)((long)&uStack_40 + (ulong)(param_3 >> 5) * 4);\n  local_28 = _DAT_00610480;\n  uStack_20 = uRam0000000000610488;\n  uVar2 = *puVar1;\n  *puVar1 = (~(uVar2 >> (param_3 & 0x1f)) & 1) << (param_3 & 0x1f) ^ uVar2;\n  FUN_00404180(0,param_1,param_2,&local_48);\n  return;\n}\n\n",
            "funcName": "FUN_004047a0"
        },
        {
            "funcStartAddr": "0x404810",
            "funcEndAddr": "0x40481d",
            "decompiledFuncCode": "\nvoid FUN_00404810(undefined8 param_1,char param_2)\n\n{\n  FUN_004047a0(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00404810"
        },
        {
            "funcStartAddr": "0x404820",
            "funcEndAddr": "0x404831",
            "decompiledFuncCode": "\nvoid FUN_00404820(undefined8 param_1)\n\n{\n  FUN_004047a0(param_1,0xffffffffffffffff,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00404820"
        },
        {
            "funcStartAddr": "0x404840",
            "funcEndAddr": "0x40484a",
            "decompiledFuncCode": "\nvoid FUN_00404840(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_004047a0(param_1,param_2,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00404840"
        },
        {
            "funcStartAddr": "0x404850",
            "funcEndAddr": "0x4048be",
            "decompiledFuncCode": "\nvoid FUN_00404850(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_40 = 0x400000000000000;\n    local_44 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00404180(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00404850"
        },
        {
            "funcStartAddr": "0x4048c0",
            "funcEndAddr": "0x40492c",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_004048c0(undefined8 param_1,long param_2,long param_3,undefined8 param_4,undefined8 param_5\n                 )\n\n{\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long lStack_20;\n  long local_18;\n  \n  uStack_40 = uRam0000000000610468;\n  local_38 = _DAT_00610470;\n  uStack_30 = uRam0000000000610478;\n  local_28 = _DAT_00610480;\n  lStack_20 = uRam0000000000610488;\n  local_18 = DAT_00610490;\n  local_48 = CONCAT44((int)((ulong)_DAT_00610460 >> 0x20),10);\n  if ((param_2 != 0) && (param_3 != 0)) {\n    lStack_20 = param_2;\n    local_18 = param_3;\n    FUN_00404180(param_1,param_4,param_5,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004048c0"
        },
        {
            "funcStartAddr": "0x404930",
            "funcEndAddr": "0x404939",
            "decompiledFuncCode": "\nvoid FUN_00404930(void)\n\n{\n  FUN_004048c0();\n  return;\n}\n\n",
            "funcName": "FUN_00404930"
        },
        {
            "funcStartAddr": "0x404940",
            "funcEndAddr": "0x404957",
            "decompiledFuncCode": "\nvoid FUN_00404940(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_004048c0(0,param_1,param_2,param_3,0xffffffffffffffff);\n  return;\n}\n\n",
            "funcName": "FUN_00404940"
        },
        {
            "funcStartAddr": "0x404960",
            "funcEndAddr": "0x404973",
            "decompiledFuncCode": "\nvoid FUN_00404960(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_004048c0(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n",
            "funcName": "FUN_00404960"
        },
        {
            "funcStartAddr": "0x404980",
            "funcEndAddr": "0x40498a",
            "decompiledFuncCode": "\nvoid FUN_00404980(void)\n\n{\n  FUN_00404180();\n  return;\n}\n\n",
            "funcName": "FUN_00404980"
        },
        {
            "funcStartAddr": "0x404990",
            "funcEndAddr": "0x4049a2",
            "decompiledFuncCode": "\nvoid FUN_00404990(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00404180(0,param_1,param_2,&DAT_00610280);\n  return;\n}\n\n",
            "funcName": "FUN_00404990"
        },
        {
            "funcStartAddr": "0x4049b0",
            "funcEndAddr": "0x4049c1",
            "decompiledFuncCode": "\nvoid FUN_004049b0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00404180(param_1,param_2,0xffffffffffffffff,&DAT_00610280);\n  return;\n}\n\n",
            "funcName": "FUN_004049b0"
        },
        {
            "funcStartAddr": "0x4049d0",
            "funcEndAddr": "0x4049e6",
            "decompiledFuncCode": "\nvoid FUN_004049d0(undefined8 param_1)\n\n{\n  FUN_00404180(0,param_1,0xffffffffffffffff,&DAT_00610280);\n  return;\n}\n\n",
            "funcName": "FUN_004049d0"
        },
        {
            "funcStartAddr": "0x4049f0",
            "funcEndAddr": "0x404a38",
            "decompiledFuncCode": "\n__ino_t * FUN_004049f0(__ino_t *param_1)\n\n{\n  int iVar1;\n  stat local_98;\n  \n  iVar1 = __lxstat(1,\"/\",&local_98);\n  if (iVar1 == 0) {\n    *param_1 = local_98.st_ino;\n    param_1[1] = local_98.st_dev;\n    return param_1;\n  }\n  return (undefined8 *)0x0;\n}\n\n",
            "funcName": "FUN_004049f0"
        },
        {
            "funcStartAddr": "0x404a40",
            "funcEndAddr": "0x404de4",
            "decompiledFuncCode": "\nundefined8\nFUN_00404a40(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0040caeb,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00404cbc;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_00404cbc:\n    __fprintf_chk(param_1,1,uVar7,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[1];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar1 = param_5[2];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_00404d59;\n  case 7:\n    uVar1 = param_5[2];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    local_58 = param_5[1];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_00404d59:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_58,uVar1,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00404b3a;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_00404b3a:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_50,local_58,uVar6,uVar5,uVar4,uVar1,local_48);\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00404a40"
        },
        {
            "funcStartAddr": "0x404e20",
            "funcEndAddr": "0x404e40",
            "decompiledFuncCode": "\nvoid FUN_00404e20(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_00404a40();\n  return;\n}\n\n",
            "funcName": "FUN_00404e20"
        },
        {
            "funcStartAddr": "0x404e40",
            "funcEndAddr": "0x404e99",
            "decompiledFuncCode": "\nvoid FUN_00404e40(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long local_58 [11];\n  \n  lVar4 = 0;\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_58[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_58[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_00404a40();\n  return;\n}\n\n",
            "funcName": "FUN_00404e40"
        },
        {
            "funcStartAddr": "0x404ea0",
            "funcEndAddr": "0x404f58",
            "decompiledFuncCode": "\nvoid FUN_00404ea0(void)\n\n{\n  long lVar1;\n  undefined8 in_R8;\n  ulong uVar2;\n  undefined8 in_R9;\n  long lVar3;\n  long *plVar4;\n  long local_88 [10];\n  long local_38 [4];\n  long local_18 [3];\n  \n  local_18[0] = in_R8;\n  plVar4 = (long *)&stack0x00000008;\n  uVar2 = 0x20;\n  local_18[1] = in_R9;\n  lVar3 = 0;\n  do {\n    if ((uint)uVar2 < 0x30) {\n      lVar1 = *(long *)((long)local_38 + uVar2);\n      local_88[lVar3] = lVar1;\n      uVar2 = (ulong)((uint)uVar2 + 8);\n    }\n    else {\n      lVar1 = *plVar4;\n      local_88[lVar3] = lVar1;\n      plVar4 = plVar4 + 1;\n    }\n  } while ((lVar1 != 0) && (lVar3 = lVar3 + 1, lVar3 != 10));\n  FUN_00404a40();\n  return;\n}\n\n",
            "funcName": "FUN_00404ea0"
        },
        {
            "funcStartAddr": "0x404f60",
            "funcEndAddr": "0x404fd4",
            "decompiledFuncCode": "\nvoid FUN_00404f60(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n",
            "funcName": "FUN_00404f60"
        },
        {
            "funcStartAddr": "0x404fe0",
            "funcEndAddr": "0x404ffa",
            "decompiledFuncCode": "\nvoid FUN_00404fe0(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00405230();\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00404fe0"
        },
        {
            "funcStartAddr": "0x405000",
            "funcEndAddr": "0x405021",
            "decompiledFuncCode": "\nvoid FUN_00405000(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_00404fe0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00405230();\n}\n\n",
            "funcName": "FUN_00405000"
        },
        {
            "funcStartAddr": "0x405030",
            "funcEndAddr": "0x405032",
            "decompiledFuncCode": "\nvoid thunk_FUN_00404fe0(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00405230();\n  }\n  return;\n}\n\n",
            "funcName": "thunk_405030"
        },
        {
            "funcStartAddr": "0x405040",
            "funcEndAddr": "0x405070",
            "decompiledFuncCode": "\nvoid * FUN_00405040(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00405230();\n  }\n  return pvVar1;\n}\n\n",
            "funcName": "FUN_00405040"
        },
        {
            "funcStartAddr": "0x405080",
            "funcEndAddr": "0x4050a1",
            "decompiledFuncCode": "\nvoid FUN_00405080(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_00405040();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00405230();\n}\n\n",
            "funcName": "FUN_00405080"
        },
        {
            "funcStartAddr": "0x4050b0",
            "funcEndAddr": "0x405128",
            "decompiledFuncCode": "\nvoid FUN_004050b0(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar2 = *param_2;\n  if (param_1 == 0) {\n    if (uVar2 == 0) {\n      uVar2 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar3 = (ulong)(SUB168(ZEXT816(uVar2) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar2) * ZEXT816(param_3),0) < 0) || (uVar3 != 0)) goto LAB_0040510b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar3 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar2) {\nLAB_0040510b:\n                    /* WARNING: Subroutine does not return */\n      FUN_00405230(param_1,param_2,uVar3);\n    }\n    uVar2 = (uVar2 >> 1) + 1 + uVar2;\n  }\n  *param_2 = uVar2;\n  FUN_00405040(param_1,uVar2 * param_3);\n  return;\n}\n\n",
            "funcName": "FUN_004050b0"
        },
        {
            "funcStartAddr": "0x405140",
            "funcEndAddr": "0x40518a",
            "decompiledFuncCode": "\nvoid FUN_00405140(long param_1,ulong *param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = *param_2;\n  if (param_1 == 0) {\n    if (uVar1 == 0) {\n      *param_2 = 0x80;\n      FUN_00405040(0,0x80);\n      return;\n    }\n    if ((long)uVar1 < 0) goto LAB_0040518a;\n  }\n  else {\n    if (0x5555555555555553 < uVar1) {\nLAB_0040518a:\n                    /* WARNING: Subroutine does not return */\n      FUN_00405230();\n    }\n    uVar1 = (uVar1 >> 1) + 1 + uVar1;\n  }\n  *param_2 = uVar1;\n  FUN_00405040(param_1,uVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00405140"
        },
        {
            "funcStartAddr": "0x405190",
            "funcEndAddr": "0x4051a7",
            "decompiledFuncCode": "\nvoid FUN_00405190(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00404fe0();\n  memset(__s,0,param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00405190"
        },
        {
            "funcStartAddr": "0x4051b0",
            "funcEndAddr": "0x4051de",
            "decompiledFuncCode": "\nvoid FUN_004051b0(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00405230();\n}\n\n",
            "funcName": "FUN_004051b0"
        },
        {
            "funcStartAddr": "0x4051e0",
            "funcEndAddr": "0x405208",
            "decompiledFuncCode": "\nvoid FUN_004051e0(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00404fe0(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_004051e0"
        },
        {
            "funcStartAddr": "0x405210",
            "funcEndAddr": "0x405223",
            "decompiledFuncCode": "\nvoid FUN_00405210(char *param_1)\n\n{\n  void *__dest;\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  __dest = (void *)FUN_00404fe0(sVar1 + 1);\n  memcpy(__dest,param_1,sVar1 + 1);\n  return;\n}\n\n",
            "funcName": "FUN_00405210"
        },
        {
            "funcStartAddr": "0x405230",
            "funcEndAddr": "0x405261",
            "decompiledFuncCode": "\nvoid FUN_00405230(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_00610278,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405230"
        },
        {
            "funcStartAddr": "0x405270",
            "funcEndAddr": "0x4052b1",
            "decompiledFuncCode": "\nvoid FUN_00405270(undefined8 param_1,uint param_2)\n\n{\n  long lVar1;\n  int *piVar2;\n  \n  lVar1 = fts_open(param_1,param_2 | 0x200);\n  if (lVar1 != 0) {\n    return;\n  }\n  piVar2 = __errno_location();\n  if (*piVar2 != 0x16) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00405230();\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"errno != EINVAL\",\"lib/xfts.c\",0x29,\"xfts_open\");\n}\n\n",
            "funcName": "FUN_00405270"
        },
        {
            "funcStartAddr": "0x4052c0",
            "funcEndAddr": "0x4052e1",
            "decompiledFuncCode": "\nbool FUN_004052c0(long param_1,long param_2)\n\n{\n  bool bVar1;\n  uint uVar2;\n  \n  bVar1 = true;\n  uVar2 = *(uint *)(param_1 + 0x48) & 0x11;\n  if ((uVar2 != 0x10) && (bVar1 = false, uVar2 == 0x11)) {\n    return *(long *)(param_2 + 0x58) != 0;\n  }\n  return bVar1;\n}\n\n",
            "funcName": "FUN_004052c0"
        },
        {
            "funcStartAddr": "0x4052f0",
            "funcEndAddr": "0x405307",
            "decompiledFuncCode": "\nulong FUN_004052f0(ulong *param_1,ulong *param_2)\n\n{\n  if (param_1[1] != param_2[1]) {\n    return 0;\n  }\n  return *param_2 & 0xffffffffffffff00 | (ulong)(*param_1 == *param_2);\n}\n\n",
            "funcName": "FUN_004052f0"
        },
        {
            "funcStartAddr": "0x405310",
            "funcEndAddr": "0x40531d",
            "decompiledFuncCode": "\nulong FUN_00405310(long param_1,ulong param_2)\n\n{\n  return *(ulong *)(param_1 + 8) % param_2;\n}\n\n",
            "funcName": "FUN_00405310"
        },
        {
            "funcStartAddr": "0x405320",
            "funcEndAddr": "0x40532c",
            "decompiledFuncCode": "\nulong FUN_00405320(ulong *param_1,ulong param_2)\n\n{\n  return *param_1 % param_2;\n}\n\n",
            "funcName": "FUN_00405320"
        },
        {
            "funcStartAddr": "0x405330",
            "funcEndAddr": "0x40533a",
            "decompiledFuncCode": "\nulong FUN_00405330(ulong *param_1,ulong *param_2)\n\n{\n  return *param_2 & 0xffffffffffffff00 | (ulong)(*param_1 == *param_2);\n}\n\n",
            "funcName": "FUN_00405330"
        },
        {
            "funcStartAddr": "0x405340",
            "funcEndAddr": "0x405362",
            "decompiledFuncCode": "\nulong FUN_00405340(long *param_1,long *param_2)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  bool bVar3;\n  \n  uVar2 = 0xffffffff;\n  uVar1 = *(ulong *)(*param_2 + 0x80);\n  bVar3 = uVar1 <= *(ulong *)(*param_1 + 0x80);\n  if (bVar3) {\n    uVar2 = (ulong)(bVar3 && *(ulong *)(*param_1 + 0x80) != uVar1);\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00405340"
        },
        {
            "funcStartAddr": "0x405370",
            "funcEndAddr": "0x4054fe",
            "decompiledFuncCode": "\nint FUN_00405370(long param_1,long param_2,char param_3)\n\n{\n  stat *__stat_buf;\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  ulong uVar4;\n  undefined8 *puVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  __stat_buf = (stat *)(param_2 + 0x78);\n  if ((((*(long *)(param_2 + 0x58) == 0) && ((*(uint *)(param_1 + 0x48) & 1) != 0)) ||\n      ((*(uint *)(param_1 + 0x48) & 2) != 0)) || (param_3 != '\\0')) {\n    iVar1 = __xstat(1,*(char **)(param_2 + 0x30),__stat_buf);\n    if (iVar1 == 0) {\nLAB_00405407:\n      uVar2 = *(uint *)(param_2 + 0x90) & 0xf000;\n      if (uVar2 == 0x4000) {\n        uVar4 = *(ulong *)(param_2 + 0x88);\n        if ((uVar4 < 2) || (*(long *)(param_2 + 0x58) < 1)) {\n          uVar4 = 0xffffffffffffffff;\n        }\n        else if ((*(byte *)(param_1 + 0x48) & 0x20) == 0) {\n          uVar4 = uVar4 - 2;\n        }\n        *(ulong *)(param_2 + 0x68) = uVar4;\n        iVar1 = 1;\n        if ((*(char *)(param_2 + 0x108) == '.') &&\n           ((*(char *)(param_2 + 0x109) == '\\0' ||\n            ((*(uint *)(param_2 + 0x108) & 0xffff00) == 0x2e00)))) {\n          iVar1 = (-(uint)(*(long *)(param_2 + 0x58) == 0) & 0xfffffffc) + 5;\n        }\n      }\n      else if (uVar2 == 0xa000) {\n        iVar1 = 0xc;\n      }\n      else {\n        iVar1 = (uint)(uVar2 == 0x8000) * 5 + 3;\n      }\n      return iVar1;\n    }\n    piVar3 = __errno_location();\n    iVar1 = *piVar3;\n    if (iVar1 == 2) {\n      iVar1 = __lxstat(1,*(char **)(param_2 + 0x30),__stat_buf);\n      if (iVar1 == 0) {\n        *piVar3 = 0;\n        return 0xd;\n      }\n      iVar1 = *piVar3;\n    }\n  }\n  else {\n    iVar1 = __fxstatat(1,*(int *)(param_1 + 0x2c),*(char **)(param_2 + 0x30),__stat_buf,0x100);\n    if (iVar1 == 0) goto LAB_00405407;\n    piVar3 = __errno_location();\n    iVar1 = *piVar3;\n  }\n  *(int *)(param_2 + 0x40) = iVar1;\n  puVar5 = (undefined8 *)(param_2 + 0x80U & 0xfffffffffffffff8);\n  *(undefined8 *)(param_2 + 0x78) = 0;\n  *(undefined8 *)(param_2 + 0x100) = 0;\n  uVar4 = (ulong)(((int)__stat_buf - (int)puVar5) + 0x90U >> 3);\n  for (; uVar4 != 0; uVar4 = uVar4 - 1) {\n    *puVar5 = 0;\n    puVar5 = puVar5 + (ulong)bVar6 * -2 + 1;\n  }\n  return 10;\n}\n\n",
            "funcName": "FUN_00405370"
        },
        {
            "funcStartAddr": "0x405520",
            "funcEndAddr": "0x405612",
            "decompiledFuncCode": "\nlong FUN_00405520(long param_1,long param_2,ulong param_3)\n\n{\n  ulong uVar1;\n  long *plVar2;\n  __compar_fn_t __compar;\n  long *plVar3;\n  long lVar4;\n  long lVar5;\n  long *plVar6;\n  long lVar7;\n  \n  __compar = *(__compar_fn_t *)(param_1 + 0x40);\n  plVar3 = *(long **)(param_1 + 0x10);\n  if (param_3 <= *(ulong *)(param_1 + 0x38)) {\nLAB_00405575:\n    plVar6 = plVar3;\n    if (param_2 != 0) {\n      do {\n        *plVar6 = param_2;\n        param_2 = *(long *)(param_2 + 0x10);\n        plVar6 = plVar6 + 1;\n      } while (param_2 != 0);\n    }\n    qsort(plVar3,param_3,8,__compar);\n    plVar3 = *(long **)(param_1 + 0x10);\n    lVar7 = *plVar3;\n    lVar4 = lVar7;\n    lVar5 = param_3 - 1;\n    plVar6 = plVar3;\n    if (lVar5 != 0) {\n      while( true ) {\n        plVar2 = plVar6 + 1;\n        plVar6 = plVar6 + 1;\n        *(long *)(lVar7 + 0x10) = *plVar2;\n        lVar5 = lVar5 + -1;\n        if (lVar5 == 0) break;\n        lVar7 = *plVar6;\n      }\n      lVar7 = plVar3[param_3 - 1];\n    }\n    *(undefined8 *)(lVar7 + 0x10) = 0;\n    return lVar4;\n  }\n  uVar1 = param_3 + 0x28;\n  *(ulong *)(param_1 + 0x38) = uVar1;\n  if (uVar1 < 0x2000000000000000) {\n    plVar3 = (long *)realloc(plVar3,uVar1 * 8);\n    if (plVar3 != (long *)0x0) {\n      *(long **)(param_1 + 0x10) = plVar3;\n      goto LAB_00405575;\n    }\n    plVar3 = *(long **)(param_1 + 0x10);\n  }\n  free(plVar3);\n  *(undefined8 *)(param_1 + 0x10) = 0;\n  *(undefined8 *)(param_1 + 0x38) = 0;\n  return param_2;\n}\n\n",
            "funcName": "FUN_00405520"
        },
        {
            "funcStartAddr": "0x405620",
            "funcEndAddr": "0x4056aa",
            "decompiledFuncCode": "\nvoid * FUN_00405620(long param_1,void *param_2,size_t param_3)\n\n{\n  undefined8 uVar1;\n  void *pvVar2;\n  \n  pvVar2 = malloc(param_3 + 0x110 & 0xfffffffffffffff8);\n  if (pvVar2 != (void *)0x0) {\n    memcpy((void *)((long)pvVar2 + 0x108),param_2,param_3);\n    uVar1 = *(undefined8 *)(param_1 + 0x20);\n    *(undefined *)((long)pvVar2 + param_3 + 0x108) = 0;\n    *(size_t *)((long)pvVar2 + 0x60) = param_3;\n    *(long *)((long)pvVar2 + 0x50) = param_1;\n    *(undefined8 *)((long)pvVar2 + 0x38) = uVar1;\n    *(undefined4 *)((long)pvVar2 + 0x40) = 0;\n    *(undefined8 *)((long)pvVar2 + 0x18) = 0;\n    *(undefined4 *)((long)pvVar2 + 0x72) = 0x30000;\n    *(undefined8 *)((long)pvVar2 + 0x20) = 0;\n    *(undefined8 *)((long)pvVar2 + 0x28) = 0;\n  }\n  return pvVar2;\n}\n\n",
            "funcName": "FUN_00405620"
        },
        {
            "funcStartAddr": "0x4056b0",
            "funcEndAddr": "0x4056ea",
            "decompiledFuncCode": "\nvoid FUN_004056b0(void *param_1)\n\n{\n  void *pvVar1;\n  \n  if (param_1 == (void *)0x0) {\n    return;\n  }\n  do {\n    pvVar1 = *(void **)((long)param_1 + 0x10);\n    if (*(DIR **)((long)param_1 + 0x18) != (DIR *)0x0) {\n      closedir(*(DIR **)((long)param_1 + 0x18));\n    }\n    free(param_1);\n    param_1 = pvVar1;\n  } while (pvVar1 != (void *)0x0);\n  return;\n}\n\n",
            "funcName": "FUN_004056b0"
        },
        {
            "funcStartAddr": "0x405700",
            "funcEndAddr": "0x405729",
            "decompiledFuncCode": "\nvoid FUN_00405700(undefined8 param_1)\n\n{\n  char cVar1;\n  int __fd;\n  \n  while( true ) {\n    cVar1 = FUN_00409940(param_1);\n    if (cVar1 != '\\0') break;\n    __fd = FUN_00409990(param_1);\n    if (-1 < __fd) {\n      close(__fd);\n    }\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00405700"
        },
        {
            "funcStartAddr": "0x405740",
            "funcEndAddr": "0x405844",
            "decompiledFuncCode": "\nlong FUN_00405740(long param_1)\n\n{\n  undefined8 uVar1;\n  int iVar2;\n  long lVar3;\n  undefined8 *__ptr;\n  undefined8 *puVar4;\n  long lVar5;\n  statfs local_98;\n  \n  lVar3 = *(long *)(param_1 + 0x50);\n  if ((*(byte *)(lVar3 + 0x49) & 2) == 0) {\n    return 0;\n  }\n  lVar5 = *(long *)(lVar3 + 0x50);\n  if (lVar5 == 0) {\n    lVar5 = FUN_00408f60(0xd,0,FUN_00405320,FUN_00405330,free);\n    *(long *)(lVar3 + 0x50) = lVar5;\n    if (lVar5 == 0) {\n      iVar2 = fstatfs(*(int *)(*(long *)(param_1 + 0x50) + 0x2c),&local_98);\n      if (iVar2 == 0) {\n        return local_98.f_type;\n      }\n      return 0;\n    }\n  }\n  local_98.f_type = *(long *)(param_1 + 0x78);\n  lVar3 = FUN_00408cf0(lVar5,&local_98);\n  if (lVar3 == 0) {\n    iVar2 = fstatfs(*(int *)(*(long *)(param_1 + 0x50) + 0x2c),&local_98);\n    if (iVar2 != 0) {\n      return 0;\n    }\n    __ptr = (undefined8 *)malloc(0x10);\n    if (__ptr != (undefined8 *)0x0) {\n      uVar1 = *(undefined8 *)(param_1 + 0x78);\n      __ptr[1] = local_98.f_type;\n      *__ptr = uVar1;\n      puVar4 = (undefined8 *)FUN_00409700(lVar5,__ptr);\n      if (puVar4 != (undefined8 *)0x0) {\n        if (__ptr == puVar4) {\n          return local_98.f_type;\n        }\n                    /* WARNING: Subroutine does not return */\n        abort();\n      }\n      free(__ptr);\n    }\n  }\n  else {\n    local_98.f_type = *(long *)(lVar3 + 8);\n  }\n  return local_98.f_type;\n}\n\n",
            "funcName": "FUN_00405740"
        },
        {
            "funcStartAddr": "0x405860",
            "funcEndAddr": "0x4058ba",
            "decompiledFuncCode": "\nbool FUN_00405860(void)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_00405740();\n  if (lVar1 != 0x9fa0) {\n    if (lVar1 < 0x9fa1) {\n      if (lVar1 == 0) {\n        return false;\n      }\n      return lVar1 != 0x6969;\n    }\n    if (lVar1 != 0x5346414f) {\n      if (lVar1 == 0x58465342) {\n        return (bool)2;\n      }\n      return (bool)((lVar1 == 0x52654973) + '\\x01');\n    }\n  }\n  return false;\n}\n\n",
            "funcName": "FUN_00405860"
        },
        {
            "funcStartAddr": "0x4058d0",
            "funcEndAddr": "0x405933",
            "decompiledFuncCode": "\nvoid FUN_004058d0(long param_1,int param_2,char param_3)\n\n{\n  int iVar1;\n  \n  iVar1 = *(int *)(param_1 + 0x2c);\n  if ((iVar1 == param_2) && (iVar1 != -100)) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  if (param_3 == '\\0') {\n    if (((*(byte *)(param_1 + 0x48) & 4) == 0) && (-1 < iVar1)) {\n      close(iVar1);\n      *(int *)(param_1 + 0x2c) = param_2;\n      return;\n    }\n  }\n  else {\n    iVar1 = FUN_00409950(param_1 + 0x60);\n    if (-1 < iVar1) {\n      close(iVar1);\n      *(int *)(param_1 + 0x2c) = param_2;\n      return;\n    }\n  }\n  *(int *)(param_1 + 0x2c) = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_004058d0"
        },
        {
            "funcStartAddr": "0x405940",
            "funcEndAddr": "0x40598f",
            "decompiledFuncCode": "\nuint FUN_00405940(long param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  uVar2 = *(uint *)(param_1 + 0x48) & 4;\n  if (uVar2 == 0) {\n    if ((*(uint *)(param_1 + 0x48) & 0x200) == 0) {\n      iVar1 = fchdir(*(int *)(param_1 + 0x28));\n      uVar2 = (uint)(iVar1 != 0);\n    }\n    else {\n      FUN_004058d0(param_1,0xffffff9c,1);\n    }\n  }\n  else {\n    uVar2 = 0;\n  }\n  FUN_00405700(param_1 + 0x60);\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00405940"
        },
        {
            "funcStartAddr": "0x4059a0",
            "funcEndAddr": "0x4059ff",
            "decompiledFuncCode": "\nundefined8 FUN_004059a0(void **param_1,size_t *param_2,long param_3)\n\n{\n  size_t __size;\n  void *pvVar1;\n  int *piVar2;\n  \n  pvVar1 = *param_1;\n  __size = *param_2 + 0x100 + param_3;\n  if (__size < *param_2) {\n    free(pvVar1);\n    *param_1 = (void *)0x0;\n    piVar2 = __errno_location();\n    *piVar2 = 0x24;\n    return 0;\n  }\n  *param_2 = __size;\n  pvVar1 = realloc(pvVar1,__size);\n  if (pvVar1 != (void *)0x0) {\n    *param_1 = pvVar1;\n    return 1;\n  }\n  free(*param_1);\n  *param_1 = (void *)0x0;\n  return 0;\n}\n\n",
            "funcName": "FUN_004059a0"
        },
        {
            "funcStartAddr": "0x405a10",
            "funcEndAddr": "0x405a66",
            "decompiledFuncCode": "\nulong FUN_00405a10(uint param_1,void **param_2)\n\n{\n  void *pvVar1;\n  ulong uVar2;\n  \n  if ((param_1 & 0x102) == 0) {\n    pvVar1 = malloc(0x20);\n    *param_2 = pvVar1;\n    uVar2 = 0;\n    if (pvVar1 != (void *)0x0) {\n      FUN_00408590();\n      return 1;\n    }\n  }\n  else {\n    pvVar1 = (void *)FUN_00408f60(0x1f,0,FUN_00405310,FUN_004052f0,free);\n    *param_2 = pvVar1;\n    uVar2 = (ulong)pvVar1 & 0xffffffffffffff00 | (ulong)(pvVar1 != (void *)0x0);\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00405a10"
        },
        {
            "funcStartAddr": "0x405a70",
            "funcEndAddr": "0x405aae",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00408648) */\n/* WARNING: Removing unreachable block (ram,0x00409fd8) */\n\nvoid FUN_00405a70(int param_1,uint param_2,char *param_3)\n\n{\n  int iVar1;\n  uint __oflag;\n  \n  __oflag = (param_2 & 0x10) << 0xd | (param_2 & 0x800) << 7 | 0x90900;\n  if ((param_2 & 0x200) != 0) {\n    iVar1 = openat(param_1,param_3,__oflag,0);\n    FUN_0040a090(iVar1);\n    return;\n  }\n  iVar1 = open(param_3,__oflag,0);\n  FUN_0040a090(iVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00405a70"
        },
        {
            "funcStartAddr": "0x405ac0",
            "funcEndAddr": "0x405c70",
            "decompiledFuncCode": "\nint FUN_00405ac0(long param_1,long param_2,int param_3,byte *param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  int iVar3;\n  int iVar4;\n  int *piVar5;\n  long lVar6;\n  byte *pbVar7;\n  byte *pbVar8;\n  uint uVar9;\n  bool bVar10;\n  bool bVar11;\n  stat local_c8;\n  \n  uVar9 = *(uint *)(param_1 + 0x48);\n  bVar10 = false;\n  bVar11 = param_4 == (byte *)0x0;\n  iVar3 = param_3;\n  if (bVar11) {\nLAB_00405b60:\n    if ((uVar9 & 4) != 0) {\nLAB_00405bd0:\n      if (((uVar9 & 0x200) != 0) && (-1 < param_3)) {\n        close(param_3);\n        return 0;\n      }\n      return 0;\n    }\n    if (param_3 < 0) {\n      bVar2 = 0;\nLAB_00405bfe:\n      iVar3 = FUN_00405a70(*(undefined4 *)(param_1 + 0x2c),uVar9,param_4);\n      if (iVar3 < 0) {\n        return -1;\n      }\n    }\n    else {\n      bVar2 = 0;\n    }\n  }\n  else {\n    lVar6 = 3;\n    pbVar7 = param_4;\n    pbVar8 = &DAT_0040ceaa;\n    do {\n      if (lVar6 == 0) break;\n      lVar6 = lVar6 + -1;\n      bVar10 = *pbVar7 < *pbVar8;\n      bVar11 = *pbVar7 == *pbVar8;\n      pbVar7 = pbVar7 + 1;\n      pbVar8 = pbVar8 + 1;\n    } while (bVar11);\n    if ((!bVar10 && !bVar11) != bVar10) goto LAB_00405b60;\n    if ((uVar9 & 4) != 0) goto LAB_00405bd0;\n    if (param_3 < 0) {\n      if ((uVar9 & 0x200) == 0) {\n        bVar2 = 1;\n      }\n      else {\n        bVar2 = FUN_00409940(param_1 + 0x60);\n        if (bVar2 == 0) {\n          iVar3 = FUN_00409990(param_1 + 0x60);\n          if (-1 < iVar3) {\n            bVar2 = 1;\n            param_3 = iVar3;\n            goto LAB_00405b72;\n          }\n          uVar9 = *(uint *)(param_1 + 0x48);\n          bVar2 = 1;\n        }\n      }\n      goto LAB_00405bfe;\n    }\n    bVar2 = 1;\n  }\nLAB_00405b72:\n  iVar4 = __fxstat(1,iVar3,&local_c8);\n  if (iVar4 == 0) {\n    if ((*(__dev_t *)(param_2 + 0x78) == local_c8.st_dev) &&\n       (*(__ino_t *)(param_2 + 0x80) == local_c8.st_ino)) {\n      if ((*(byte *)(param_1 + 0x49) & 2) != 0) {\n        FUN_004058d0(param_1,iVar3,bVar2 ^ 1);\n        return 0;\n      }\n      iVar4 = fchdir(iVar3);\n      goto LAB_00405bb3;\n    }\n    piVar5 = __errno_location();\n    *piVar5 = 2;\n  }\n  iVar4 = -1;\nLAB_00405bb3:\n  if (param_3 < 0) {\n    piVar5 = __errno_location();\n    iVar1 = *piVar5;\n    close(iVar3);\n    *piVar5 = iVar1;\n  }\n  return iVar4;\n}\n\n",
            "funcName": "FUN_00405ac0"
        },
        {
            "funcStartAddr": "0x405c90",
            "funcEndAddr": "0x405d34",
            "decompiledFuncCode": "\nundefined8 FUN_00405c90(uint param_1,undefined8 *param_2,undefined8 *param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 *__ptr;\n  undefined8 *puVar2;\n  undefined8 uVar3;\n  \n  if ((param_1 & 0x102) == 0) {\n    uVar3 = FUN_004085a0(*param_2,param_3 + 0xf);\n    if ((char)uVar3 != '\\0') {\n      *param_3 = param_3;\n      *(undefined2 *)(param_3 + 0xe) = 2;\n      return uVar3;\n    }\n  }\n  else {\n    __ptr = (undefined8 *)malloc(0x18);\n    if (__ptr == (undefined8 *)0x0) {\n      return 0;\n    }\n    uVar3 = param_3[0xf];\n    uVar1 = *param_2;\n    __ptr[2] = param_3;\n    *__ptr = uVar3;\n    __ptr[1] = param_3[0x10];\n    puVar2 = (undefined8 *)FUN_00409700(uVar1,__ptr);\n    if (__ptr != puVar2) {\n      free(__ptr);\n      if (puVar2 == (undefined8 *)0x0) {\n        return 0;\n      }\n      uVar3 = puVar2[2];\n      *(undefined2 *)(param_3 + 0xe) = 2;\n      *param_3 = uVar3;\n    }\n  }\n  return 1;\n}\n\n",
            "funcName": "FUN_00405c90"
        },
        {
            "funcStartAddr": "0x405d40",
            "funcEndAddr": "0x405dd1",
            "decompiledFuncCode": "\nvoid FUN_00405d40(uint param_1,long **param_2,long param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  long lVar3;\n  void *__ptr;\n  undefined8 local_28;\n  undefined8 local_20;\n  \n  if ((param_1 & 0x102) == 0) {\n    lVar1 = *(long *)(param_3 + 8);\n    if ((lVar1 != 0) && (-1 < *(long *)(lVar1 + 0x58))) {\n      plVar2 = *param_2;\n      if (plVar2[2] == 0) goto FUN_00401d93;\n      if ((*plVar2 == *(long *)(param_3 + 0x80)) && (plVar2[1] == *(long *)(param_3 + 0x78))) {\n        lVar3 = *(long *)(lVar1 + 0x80);\n        plVar2[1] = *(long *)(lVar1 + 0x78);\n        *plVar2 = lVar3;\n      }\n    }\n    return;\n  }\n  local_28 = *(undefined8 *)(param_3 + 0x78);\n  local_20 = *(undefined8 *)(param_3 + 0x80);\n  __ptr = (void *)FUN_00409740(*param_2,&local_28);\n  if (__ptr != (void *)0x0) {\n    free(__ptr);\n    return;\n  }\nFUN_00401d93:\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405d40"
        },
        {
            "funcStartAddr": "0x405de0",
            "funcEndAddr": "0x40674a",
            "decompiledFuncCode": "\nvoid * FUN_00405de0(long *param_1,int param_2)\n\n{\n  DIR *__dirp;\n  ulong uVar1;\n  long lVar2;\n  bool bVar3;\n  undefined *puVar4;\n  char cVar5;\n  undefined2 uVar6;\n  int iVar7;\n  int iVar8;\n  int *piVar9;\n  dirent *pdVar10;\n  size_t sVar11;\n  void *pvVar12;\n  undefined8 uVar13;\n  void *pvVar14;\n  DIR *pDVar15;\n  long lVar16;\n  long lVar17;\n  uint uVar18;\n  ushort uVar19;\n  ulong uVar20;\n  uint uVar21;\n  undefined4 uVar22;\n  bool bVar23;\n  void *local_90;\n  ulong local_88;\n  void *local_80;\n  ulong local_78;\n  ulong local_60;\n  undefined *local_58;\n  ulong local_50;\n  char local_3a;\n  \n  lVar17 = *param_1;\n  __dirp = *(DIR **)(lVar17 + 0x18);\n  if (__dirp == (DIR *)0x0) {\n    uVar21 = *(uint *)(param_1 + 9);\n    uVar18 = uVar21 & 0x10;\n    if ((uVar18 != 0) && (uVar18 = 0x20000, (uVar21 & 1) != 0)) {\n      uVar18 = (uint)(*(long *)(lVar17 + 0x58) != 0) << 0x11;\n    }\n    uVar22 = 0xffffff9c;\n    if ((uVar21 & 0x204) == 0x200) {\n      uVar22 = *(undefined4 *)((long)param_1 + 0x2c);\n    }\n    iVar7 = FUN_00409fb0(uVar22,*(undefined8 *)(lVar17 + 0x30),\n                         (uVar21 & 0x800) << 7 | uVar18 | 0x90900);\n    if (-1 < iVar7) {\n      pDVar15 = fdopendir(iVar7);\n      if (pDVar15 != (DIR *)0x0) {\n        *(DIR **)(lVar17 + 0x18) = pDVar15;\n        if (*(short *)(lVar17 + 0x70) == 0xb) {\n          uVar6 = FUN_00405370(param_1,lVar17,0);\n          *(undefined2 *)(lVar17 + 0x70) = uVar6;\n        }\n        else if ((*(uint *)(param_1 + 9) & 0x100) != 0) {\n          FUN_00405d40(*(uint *)(param_1 + 9),param_1 + 0xb,lVar17);\n          FUN_00405370(param_1,lVar17,0);\n          cVar5 = FUN_00405c90(*(undefined4 *)(param_1 + 9),param_1 + 0xb,lVar17);\n          if (cVar5 == '\\0') {\n            piVar9 = __errno_location();\n            *piVar9 = 0xc;\n            return (void *)0x0;\n          }\n        }\n        local_60 = (ulong)(-(uint)(param_1[8] == 0) & 0x186a1) - 1;\n        if (param_2 == 2) {\nLAB_00406590:\n          bVar23 = false;\n          uVar21 = *(uint *)(param_1 + 9);\n          goto LAB_00405e34;\n        }\n        if ((((*(uint *)(param_1 + 9) & 0x38) == 0x18) && (*(long *)(lVar17 + 0x88) == 2)) &&\n           (iVar8 = FUN_00405860(lVar17), iVar8 != 0)) {\n          if (param_2 != 3) goto LAB_00406590;\n          bVar3 = false;\n          bVar23 = true;\n        }\n        else {\n          bVar23 = param_2 == 3;\n          bVar3 = true;\n        }\n        if (((*(byte *)((long)param_1 + 0x49) & 2) == 0) ||\n           (iVar7 = FUN_0040a450(iVar7,0x406,3), -1 < iVar7)) {\n          iVar8 = FUN_00405ac0(param_1,lVar17,iVar7,0);\n          if (iVar8 == 0) goto LAB_00405e2b;\n          pDVar15 = *(DIR **)(lVar17 + 0x18);\n          uVar19 = *(ushort *)(lVar17 + 0x72) | 1;\n          if ((bVar23) && (bVar3)) goto LAB_004062cd;\nLAB_004062e2:\n          *(ushort *)(lVar17 + 0x72) = uVar19;\n          closedir(pDVar15);\n          uVar21 = *(uint *)(param_1 + 9);\n          *(undefined8 *)(lVar17 + 0x18) = 0;\n          if (((uVar21 & 0x200) != 0) && (-1 < iVar7)) {\n            close(iVar7);\n            uVar21 = *(uint *)(param_1 + 9);\n          }\n        }\n        else {\n          pDVar15 = *(DIR **)(lVar17 + 0x18);\n          uVar19 = *(ushort *)(lVar17 + 0x72) | 1;\n          if ((bVar23) && (bVar3)) {\nLAB_004062cd:\n            piVar9 = __errno_location();\n            *(int *)(lVar17 + 0x40) = *piVar9;\n            goto LAB_004062e2;\n          }\n          *(ushort *)(lVar17 + 0x72) = uVar19;\n          closedir(pDVar15);\n          uVar21 = *(uint *)(param_1 + 9);\n        }\n        *(undefined8 *)(lVar17 + 0x18) = 0;\n        bVar23 = false;\n        goto LAB_00405e34;\n      }\n      piVar9 = __errno_location();\n      iVar8 = *piVar9;\n      close(iVar7);\n      *piVar9 = iVar8;\n    }\n    *(undefined8 *)(lVar17 + 0x18) = 0;\njoined_r0x0040655f:\n    if (param_2 == 3) {\n      *(undefined2 *)(lVar17 + 0x70) = 4;\n      piVar9 = __errno_location();\n      *(int *)(lVar17 + 0x40) = *piVar9;\n    }\n    return (void *)0x0;\n  }\n  iVar7 = dirfd(__dirp);\n  if (iVar7 < 0) {\n    closedir(*(DIR **)(lVar17 + 0x18));\n    *(undefined8 *)(lVar17 + 0x18) = 0;\n    goto joined_r0x0040655f;\n  }\n  if (param_1[8] == 0) {\n    local_60 = 100000;\n    uVar21 = *(uint *)(param_1 + 9);\n    bVar23 = true;\n  }\n  else {\n    local_60 = 0xffffffffffffffff;\nLAB_00405e2b:\n    bVar23 = true;\n    uVar21 = *(uint *)(param_1 + 9);\n  }\nLAB_00405e34:\n  uVar1 = *(ulong *)(lVar17 + 0x48);\n  local_88 = uVar1;\n  local_50 = uVar1 - 1;\n  if (*(char *)(*(long *)(lVar17 + 0x38) + -1 + uVar1) != '/') {\n    local_88 = uVar1 + 1;\n    local_50 = uVar1;\n  }\n  local_58 = (undefined *)0x0;\n  if ((uVar21 & 4) != 0) {\n    local_58 = (undefined *)(local_50 + param_1[4]) + 1;\n    *(undefined *)(local_50 + param_1[4]) = 0x2f;\n  }\n  local_78 = param_1[6] - local_88;\n  local_3a = '\\0';\n  lVar16 = *(long *)(lVar17 + 0x58);\n  local_90 = (void *)0x0;\n  local_80 = (void *)0x0;\n  uVar1 = 0;\n  do {\n    do {\n      uVar20 = uVar1;\n      pDVar15 = *(DIR **)(lVar17 + 0x18);\n      if (pDVar15 == (DIR *)0x0) goto joined_r0x0040640b;\n      piVar9 = __errno_location();\n      *piVar9 = 0;\n      pdVar10 = readdir(pDVar15);\n      if (pdVar10 == (dirent *)0x0) {\n        if (*piVar9 != 0) {\n          *(int *)(lVar17 + 0x40) = *piVar9;\n          *(ushort *)(lVar17 + 0x70) = (-(ushort)(((ulong)__dirp | uVar20) == 0) & 0xfffd) + 7;\n        }\n        if (*(DIR **)(lVar17 + 0x18) != (DIR *)0x0) {\n          closedir(*(DIR **)(lVar17 + 0x18));\n          *(undefined8 *)(lVar17 + 0x18) = 0;\n        }\n        goto joined_r0x0040640b;\n      }\n    } while ((((*(byte *)(param_1 + 9) & 0x20) == 0) && (pdVar10->d_name[0] == '.')) &&\n            ((uVar1 = uVar20, pdVar10->d_name[1] == '\\0' ||\n             (*(short *)(pdVar10->d_name + 1) == 0x2e))));\n    sVar11 = strlen(pdVar10->d_name);\n    pvVar12 = (void *)FUN_00405620(param_1,pdVar10->d_name,sVar11);\n    if (pvVar12 == (void *)0x0) {\nLAB_00406340:\n      iVar7 = *piVar9;\n      free(pvVar12);\n      FUN_004056b0(local_80);\n      closedir(*(DIR **)(lVar17 + 0x18));\n      *(undefined8 *)(lVar17 + 0x18) = 0;\n      *(undefined2 *)(lVar17 + 0x70) = 7;\n      *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n      *piVar9 = iVar7;\n      return (void *)0x0;\n    }\n    if (local_78 <= sVar11) {\n      lVar2 = param_1[4];\n      cVar5 = FUN_004059a0(param_1 + 4,param_1 + 6,local_50 + 2 + sVar11);\n      if (cVar5 == '\\0') goto LAB_00406340;\n      puVar4 = local_58;\n      if ((param_1[4] != lVar2) &&\n         (local_3a = cVar5, puVar4 = (undefined *)(param_1[4] + local_88),\n         (*(byte *)(param_1 + 9) & 4) == 0)) {\n        puVar4 = local_58;\n      }\n      local_58 = puVar4;\n      local_78 = param_1[6] - local_88;\n    }\n    if (CARRY8(sVar11,local_88)) {\n      free(pvVar12);\n      FUN_004056b0(local_80);\n      closedir(*(DIR **)(lVar17 + 0x18));\n      *(undefined8 *)(lVar17 + 0x18) = 0;\n      *(undefined2 *)(lVar17 + 0x70) = 7;\n      *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n      *piVar9 = 0x24;\n      return (void *)0x0;\n    }\n    *(long *)((long)pvVar12 + 0x58) = lVar16 + 1;\n    lVar2 = *param_1;\n    *(size_t *)((long)pvVar12 + 0x48) = sVar11 + local_88;\n    *(long *)((long)pvVar12 + 8) = lVar2;\n    *(__ino_t *)((long)pvVar12 + 0x80) = pdVar10->d_ino;\n    uVar21 = *(uint *)(param_1 + 9);\n    if ((uVar21 & 4) == 0) {\n      *(void **)((long)pvVar12 + 0x30) = (void *)((long)pvVar12 + 0x108);\n    }\n    else {\n      *(undefined8 *)((long)pvVar12 + 0x30) = *(undefined8 *)((long)pvVar12 + 0x38);\n      memmove(local_58,(void *)((long)pvVar12 + 0x108),*(long *)((long)pvVar12 + 0x60) + 1);\n      uVar21 = *(uint *)(param_1 + 9);\n    }\n    if ((param_1[8] == 0) || ((uVar21 & 0x400) != 0)) {\n      uVar18 = pdVar10->d_type - 1;\n      if (((uVar21 & 0x18) == 0x18) && ((pdVar10->d_type & 0xfb) != 0)) {\n        *(undefined2 *)((long)pvVar12 + 0x70) = 0xb;\n        if (uVar18 < 0xc) {\n          *(undefined4 *)((long)pvVar12 + 0x90) = *(undefined4 *)(&DAT_0040cec0 + (ulong)uVar18 * 4)\n          ;\n          uVar13 = 1;\n        }\n        else {\n          *(undefined4 *)((long)pvVar12 + 0x90) = 0;\n          uVar13 = 1;\n        }\n      }\n      else {\n        *(undefined2 *)((long)pvVar12 + 0x70) = 0xb;\n        if (uVar18 < 0xc) {\n          *(undefined4 *)((long)pvVar12 + 0x90) = *(undefined4 *)(&DAT_0040cec0 + (ulong)uVar18 * 4)\n          ;\n          uVar13 = 2;\n        }\n        else {\n          *(undefined4 *)((long)pvVar12 + 0x90) = 0;\n          uVar13 = 2;\n        }\n      }\n      *(undefined8 *)((long)pvVar12 + 0xa8) = uVar13;\n    }\n    else {\n      uVar6 = FUN_00405370(param_1,pvVar12,0);\n      *(undefined2 *)((long)pvVar12 + 0x70) = uVar6;\n    }\n    *(undefined8 *)((long)pvVar12 + 0x10) = 0;\n    pvVar14 = pvVar12;\n    if (local_80 != (void *)0x0) {\n      *(void **)((long)local_90 + 0x10) = pvVar12;\n      pvVar14 = local_80;\n    }\n    local_80 = pvVar14;\n    uVar1 = uVar20 + 1;\n    local_90 = pvVar12;\n  } while (uVar20 + 1 < local_60);\n  uVar20 = uVar20 + 1;\njoined_r0x0040640b:\n  if (local_3a != '\\0') {\n    lVar2 = param_1[4];\n    for (lVar16 = param_1[1]; pvVar12 = local_80, lVar16 != 0; lVar16 = *(long *)(lVar16 + 0x10)) {\n      if (*(long *)(lVar16 + 0x30) != lVar16 + 0x108) {\n        *(long *)(lVar16 + 0x30) = (*(long *)(lVar16 + 0x30) - *(long *)(lVar16 + 0x38)) + lVar2;\n      }\n      *(long *)(lVar16 + 0x38) = lVar2;\n    }\n    while (pvVar14 = pvVar12, -1 < *(long *)((long)pvVar14 + 0x58)) {\n      if (*(long *)((long)pvVar14 + 0x30) != (long)pvVar14 + 0x108) {\n        *(long *)((long)pvVar14 + 0x30) =\n             (*(long *)((long)pvVar14 + 0x30) - *(long *)((long)pvVar14 + 0x38)) + lVar2;\n      }\n      *(long *)((long)pvVar14 + 0x38) = lVar2;\n      pvVar12 = *(void **)((long)pvVar14 + 0x10);\n      if (*(void **)((long)pvVar14 + 0x10) == (void *)0x0) {\n        pvVar12 = *(void **)((long)pvVar14 + 8);\n      }\n    }\n  }\n  if ((*(byte *)(param_1 + 9) & 4) != 0) {\n    if ((param_1[6] == local_88) || (uVar20 == 0)) {\n      local_58 = local_58 + -1;\n    }\n    *local_58 = 0;\n  }\n  if ((__dirp == (DIR *)0x0) && (bVar23)) {\n    if ((param_2 == 1) || (uVar20 == 0)) {\n      if (*(long *)(lVar17 + 0x58) == 0) {\n        iVar7 = FUN_00405940(param_1);\n      }\n      else {\n        iVar7 = FUN_00405ac0(param_1,*(undefined8 *)(lVar17 + 8),0xffffffff,&DAT_0040ceaa);\n      }\n      if (iVar7 != 0) {\n        *(undefined2 *)(lVar17 + 0x70) = 7;\n        *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n        FUN_004056b0(local_80);\n        return (void *)0x0;\n      }\n      goto LAB_004064a8;\n    }\n  }\n  else {\nLAB_004064a8:\n    if (uVar20 == 0) {\n      if (((param_2 == 3) && (*(short *)(lVar17 + 0x70) != 4)) && (*(short *)(lVar17 + 0x70) != 7))\n      {\n        *(undefined2 *)(lVar17 + 0x70) = 6;\n      }\n      FUN_004056b0(local_80);\n      return (void *)0x0;\n    }\n  }\n  lVar16 = param_1[8];\n  if (10000 < uVar20) {\n    if (lVar16 != 0) goto LAB_00406467;\n    lVar17 = FUN_00405740(lVar17);\n    if ((lVar17 != 0x6969) && (lVar17 != 0x1021994)) {\n      param_1[8] = (long)FUN_00405340;\n      pvVar12 = (void *)FUN_00405520(param_1,local_80,uVar20);\n      param_1[8] = 0;\n      return pvVar12;\n    }\n    lVar16 = param_1[8];\n  }\n  if (lVar16 == 0) {\n    return local_80;\n  }\n  if (uVar20 == 1) {\n    return local_80;\n  }\nLAB_00406467:\n  pvVar12 = (void *)FUN_00405520(param_1,local_80,uVar20);\n  return pvVar12;\n}\n\n",
            "funcName": "FUN_00405de0"
        },
        {
            "funcStartAddr": "0x4067a0",
            "funcEndAddr": "0x406b10",
            "decompiledFuncCode": "\nlong * fts_open(char **param_1,uint param_2,long param_3)\n\n{\n  undefined4 uVar1;\n  char cVar2;\n  undefined2 uVar3;\n  int iVar4;\n  long *__ptr;\n  size_t sVar5;\n  long lVar6;\n  long lVar7;\n  long lVar8;\n  int *piVar9;\n  ulong uVar10;\n  char *pcVar11;\n  char **ppcVar12;\n  void *local_50;\n  byte local_42;\n  long local_40;\n  \n  if ((((param_2 & 0xffffe000) != 0) || ((param_2 & 0x204) == 0x204)) || ((param_2 & 0x12) == 0)) {\n    piVar9 = __errno_location();\n    *piVar9 = 0x16;\n    return (long *)0x0;\n  }\n  __ptr = (long *)calloc(0x80,1);\n  if (__ptr == (long *)0x0) {\n    return (long *)0x0;\n  }\n  __ptr[8] = param_3;\n  if ((param_2 & 2) == 0) {\n    *(uint *)(__ptr + 9) = param_2;\n  }\n  else {\n    *(uint *)(__ptr + 9) = param_2 & 0xfffffdff | 4;\n  }\n  pcVar11 = *param_1;\n  *(undefined4 *)((long)__ptr + 0x2c) = 0xffffff9c;\n  if (pcVar11 == (char *)0x0) {\n    uVar10 = 0x1000;\n  }\n  else {\n    uVar10 = 0;\n    ppcVar12 = param_1;\n    do {\n      sVar5 = strlen(pcVar11);\n      if (uVar10 < sVar5) {\n        uVar10 = sVar5;\n      }\n      ppcVar12 = ppcVar12 + 1;\n      pcVar11 = *ppcVar12;\n    } while (pcVar11 != (char *)0x0);\n    uVar10 = uVar10 + 1;\n    if (uVar10 < 0x1000) {\n      uVar10 = 0x1000;\n    }\n  }\n  local_42 = FUN_004059a0(__ptr + 4,__ptr + 6,uVar10);\n  if (local_42 == 0) goto LAB_00406a6b;\n  pcVar11 = *param_1;\n  if (pcVar11 == (char *)0x0) {\n    local_50 = (void *)0x0;\n    if (param_3 != 0) {\nLAB_004068b3:\n      local_42 = (byte)(*(uint *)(__ptr + 9) >> 10) & 1;\n      goto LAB_004068c0;\n    }\nLAB_00406aa2:\n    lVar7 = 0;\nLAB_004069dc:\n    lVar8 = FUN_00405620(__ptr,\"\",0);\n    *__ptr = lVar8;\n    if (lVar8 != 0) {\n      *(long *)(lVar8 + 0x10) = lVar7;\n      uVar1 = *(undefined4 *)(__ptr + 9);\n      *(undefined2 *)(lVar8 + 0x70) = 9;\n      cVar2 = FUN_00405a10(uVar1,__ptr + 0xb);\n      if (cVar2 != '\\0') {\n        if ((*(uint *)(__ptr + 9) & 0x204) == 0) {\n          iVar4 = FUN_00405a70(*(undefined4 *)((long)__ptr + 0x2c),*(uint *)(__ptr + 9),\n                               &DAT_0040ceab);\n          *(int *)(__ptr + 5) = iVar4;\n          if (iVar4 < 0) {\n            *(uint *)(__ptr + 9) = *(uint *)(__ptr + 9) | 4;\n          }\n        }\n        FUN_00409920(__ptr + 0xc,0xffffffff);\n        return __ptr;\n      }\n    }\nLAB_00406a50:\n    FUN_004056b0(lVar7);\n    free(local_50);\n  }\n  else {\n    local_50 = (void *)FUN_00405620(__ptr,\"\",0);\n    if (local_50 != (void *)0x0) {\n      pcVar11 = *param_1;\n      *(undefined8 *)((long)local_50 + 0x58) = 0xffffffffffffffff;\n      *(undefined8 *)((long)local_50 + 0x68) = 0xffffffffffffffff;\n      if (param_3 != 0) goto LAB_004068b3;\nLAB_004068c0:\n      if (pcVar11 == (char *)0x0) goto LAB_00406aa2;\n      local_40 = 0;\n      uVar10 = 0;\n      lVar8 = 0;\n      do {\n        sVar5 = strlen(pcVar11);\n        if (((2 < sVar5) && ((((byte)(param_2 >> 0xc) ^ 1) & 1) != 0)) &&\n           (pcVar11[sVar5 - 1] == '/')) {\n          do {\n            if (pcVar11[sVar5 - 2] != '/') break;\n            sVar5 = sVar5 - 1;\n          } while (sVar5 != 1);\n        }\n        lVar6 = FUN_00405620(__ptr,pcVar11,sVar5);\n        lVar7 = lVar8;\n        if (lVar6 == 0) goto LAB_00406a50;\n        *(undefined8 *)(lVar6 + 0x58) = 0;\n        *(void **)(lVar6 + 8) = local_50;\n        *(long *)(lVar6 + 0x30) = lVar6 + 0x108;\n        lVar7 = lVar6;\n        if ((lVar8 == 0) || (local_42 == 0)) {\n          uVar3 = FUN_00405370(__ptr,lVar6,0);\n          *(undefined2 *)(lVar6 + 0x70) = uVar3;\n          if (param_3 != 0) goto LAB_00406958;\n          *(undefined8 *)(lVar6 + 0x10) = 0;\n          if (lVar8 != 0) goto LAB_00406af0;\n        }\n        else {\n          *(undefined8 *)(lVar6 + 0xa8) = 2;\n          *(undefined2 *)(lVar6 + 0x70) = 0xb;\n          if (param_3 == 0) {\n            *(undefined8 *)(lVar6 + 0x10) = 0;\nLAB_00406af0:\n            *(long *)(local_40 + 0x10) = lVar6;\n            lVar7 = lVar8;\n          }\n          else {\nLAB_00406958:\n            *(long *)(lVar6 + 0x10) = lVar8;\n            lVar6 = local_40;\n          }\n        }\n        local_40 = lVar6;\n        uVar10 = uVar10 + 1;\n        pcVar11 = param_1[uVar10];\n        lVar8 = lVar7;\n      } while (pcVar11 != (char *)0x0);\n      if ((param_3 != 0) && (1 < uVar10)) {\n        lVar7 = FUN_00405520(__ptr,lVar7,uVar10);\n      }\n      goto LAB_004069dc;\n    }\n  }\n  free((void *)__ptr[4]);\nLAB_00406a6b:\n  free(__ptr);\n  return (long *)0x0;\n}\n\n",
            "funcName": "fts_open"
        },
        {
            "funcStartAddr": "0x406b40",
            "funcEndAddr": "0x406c8e",
            "decompiledFuncCode": "\nint fts_close(void **param_1)\n\n{\n  long lVar1;\n  int iVar2;\n  int iVar3;\n  int *piVar4;\n  void *__ptr;\n  void *__ptr_00;\n  \n  __ptr = *param_1;\n  if (__ptr != (void *)0x0) {\n    lVar1 = *(long *)((long)__ptr + 0x58);\n    while (__ptr_00 = __ptr, -1 < lVar1) {\n      while (__ptr = *(void **)((long)__ptr_00 + 0x10), __ptr != (void *)0x0) {\n        free(__ptr_00);\n        __ptr_00 = __ptr;\n        if (*(long *)((long)__ptr + 0x58) < 0) goto LAB_00406b8b;\n      }\n      __ptr = *(void **)((long)__ptr_00 + 8);\n      free(__ptr_00);\n      lVar1 = *(long *)((long)__ptr + 0x58);\n    }\nLAB_00406b8b:\n    free(__ptr);\n  }\n  if (param_1[1] != (void *)0x0) {\n    FUN_004056b0();\n  }\n  free(param_1[2]);\n  free(param_1[4]);\n  if ((*(uint *)(param_1 + 9) & 0x200) == 0) {\n    if ((*(uint *)(param_1 + 9) & 4) == 0) {\n      iVar2 = fchdir(*(int *)(param_1 + 5));\n      if (iVar2 == 0) {\n        iVar2 = close(*(int *)(param_1 + 5));\n        if (iVar2 == 0) goto LAB_00406bc2;\n        piVar4 = __errno_location();\n      }\n      else {\n        piVar4 = __errno_location();\n        iVar2 = *piVar4;\n        iVar3 = close(*(int *)(param_1 + 5));\n        if ((iVar3 == 0) || (iVar2 != 0)) goto LAB_00406bc4;\n      }\n      iVar2 = *piVar4;\n      goto LAB_00406bc4;\n    }\n  }\n  else if ((-1 < *(int *)((long)param_1 + 0x2c)) &&\n          (iVar2 = close(*(int *)((long)param_1 + 0x2c)), iVar2 != 0)) {\n    piVar4 = __errno_location();\n    iVar2 = *piVar4;\n    goto LAB_00406bc4;\n  }\nLAB_00406bc2:\n  iVar2 = 0;\nLAB_00406bc4:\n  FUN_00405700(param_1 + 0xc);\n  if (param_1[10] != (void *)0x0) {\n    FUN_004091a0();\n  }\n  if ((*(uint *)(param_1 + 9) & 0x102) == 0) {\n    free(param_1[0xb]);\n  }\n  else if (param_1[0xb] != (void *)0x0) {\n    FUN_004091a0();\n  }\n  free(param_1);\n  if (iVar2 != 0) {\n    piVar4 = __errno_location();\n    *piVar4 = iVar2;\n    iVar2 = -1;\n  }\n  return iVar2;\n}\n\n",
            "funcName": "fts_close"
        },
        {
            "funcStartAddr": "0x406cc0",
            "funcEndAddr": "0x4073ea",
            "decompiledFuncCode": "\nvoid * fts_read(void **param_1)\n\n{\n  ulong uVar1;\n  char *__s;\n  short sVar2;\n  undefined4 uVar3;\n  long lVar4;\n  char cVar5;\n  undefined2 uVar6;\n  short sVar7;\n  int iVar8;\n  int *piVar9;\n  char *pcVar10;\n  size_t sVar11;\n  long lVar12;\n  void *pvVar13;\n  void *pvVar14;\n  uint uVar15;\n  \n  pvVar14 = *param_1;\n  if (pvVar14 == (void *)0x0) {\n    return (void *)0x0;\n  }\n  uVar15 = *(uint *)(param_1 + 9);\n  if ((uVar15 & 0x4000) != 0) {\n    return (void *)0x0;\n  }\n  sVar7 = *(short *)((long)pvVar14 + 0x74);\n  *(undefined2 *)((long)pvVar14 + 0x74) = 3;\n  if (sVar7 == 1) {\n    uVar6 = FUN_00405370(param_1,pvVar14,0);\n    *(undefined2 *)((long)pvVar14 + 0x70) = uVar6;\n    return pvVar14;\n  }\n  sVar2 = *(short *)((long)pvVar14 + 0x70);\n  pvVar13 = pvVar14;\n  if (sVar7 == 2) {\n    if (1 < (ushort)(sVar2 - 0xcU)) {\n      if (sVar2 == 1) goto LAB_00406e17;\n      goto LAB_00406d40;\n    }\n    sVar7 = FUN_00405370(param_1,pvVar14,1);\n    *(short *)((long)pvVar14 + 0x70) = sVar7;\n    if (sVar7 != 1) {\n      *param_1 = pvVar14;\n      if (sVar7 != 0xb) {\n        return pvVar14;\n      }\n      goto LAB_00407080;\n    }\n    if ((*(uint *)(param_1 + 9) & 4) == 0) {\n      iVar8 = FUN_00405a70(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                           &DAT_0040ceab);\n      *(int *)((long)pvVar14 + 0x44) = iVar8;\n      if (iVar8 < 0) {\n        piVar9 = __errno_location();\n        iVar8 = *piVar9;\n        *(undefined2 *)((long)pvVar14 + 0x70) = 7;\n        *(int *)((long)pvVar14 + 0x40) = iVar8;\n        *param_1 = pvVar14;\n        return pvVar14;\n      }\n      *(ushort *)((long)pvVar14 + 0x72) = *(ushort *)((long)pvVar14 + 0x72) | 2;\n      sVar7 = *(short *)((long)pvVar14 + 0x70);\n      goto LAB_00406ff7;\n    }\n    *param_1 = pvVar14;\nLAB_0040700e:\n    if (*(long *)((long)pvVar14 + 0x58) != 0) goto LAB_0040701e;\n  }\n  else {\n    if (sVar2 == 1) {\n      if (sVar7 == 4) goto LAB_00406eb2;\nLAB_00406e17:\n      if (((uVar15 & 0x40) != 0) && (*(void **)((long)pvVar14 + 0x78) != param_1[3])) {\nLAB_00406eb2:\n        if ((*(byte *)((long)pvVar14 + 0x72) & 2) != 0) {\n          close(*(int *)((long)pvVar14 + 0x44));\n        }\n        if (param_1[1] != (void *)0x0) {\n          FUN_004056b0();\n          param_1[1] = (void *)0x0;\n        }\n        uVar3 = *(undefined4 *)(param_1 + 9);\n        *(undefined2 *)((long)pvVar14 + 0x70) = 6;\n        FUN_00405d40(uVar3,param_1 + 0xb,pvVar14);\n        return pvVar14;\n      }\n      if (param_1[1] == (void *)0x0) {\nLAB_004070d9:\n        pvVar13 = (void *)FUN_00405de0(param_1,3);\n        param_1[1] = pvVar13;\n        if (pvVar13 == (void *)0x0) {\n          uVar15 = *(uint *)(param_1 + 9);\n          if ((uVar15 & 0x4000) != 0) {\n            return (void *)0x0;\n          }\n          if ((*(int *)((long)pvVar14 + 0x40) != 0) && (*(short *)((long)pvVar14 + 0x70) != 4)) {\n            *(undefined2 *)((long)pvVar14 + 0x70) = 7;\n          }\n          FUN_00405d40(uVar15,param_1 + 0xb,pvVar14);\n          return pvVar14;\n        }\n      }\n      else {\n        if ((uVar15 & 0x2000) != 0) {\n          *(uint *)(param_1 + 9) = uVar15 & 0xffffdfff;\n          FUN_004056b0();\n          param_1[1] = (void *)0x0;\n          goto LAB_004070d9;\n        }\n        iVar8 = FUN_00405ac0(param_1,pvVar14,0xffffffff,*(undefined8 *)((long)pvVar14 + 0x30));\n        if (iVar8 == 0) {\n          pvVar13 = param_1[1];\n        }\n        else {\n          piVar9 = __errno_location();\n          pvVar13 = param_1[1];\n          iVar8 = *piVar9;\n          *(ushort *)((long)pvVar14 + 0x72) = *(ushort *)((long)pvVar14 + 0x72) | 1;\n          *(int *)((long)pvVar14 + 0x40) = iVar8;\n          for (pvVar14 = pvVar13; pvVar14 != (void *)0x0; pvVar14 = *(void **)((long)pvVar14 + 0x10)\n              ) {\n            *(undefined8 *)((long)pvVar14 + 0x30) =\n                 *(undefined8 *)(*(long *)((long)pvVar14 + 8) + 0x30);\n          }\n        }\n      }\n      param_1[1] = (void *)0x0;\n      pvVar14 = pvVar13;\n    }\n    else {\nLAB_00406d40:\n      do {\n        pvVar14 = *(void **)((long)pvVar13 + 0x10);\n        if (pvVar14 == (void *)0x0) {\n          pvVar14 = *(void **)((long)pvVar13 + 8);\n          if (*(long *)((long)pvVar14 + 0x18) != 0) {\n            lVar4 = *(long *)((long)pvVar14 + 0x48);\n            *param_1 = pvVar14;\n            *(undefined *)((long)param_1[4] + lVar4) = 0;\n            pvVar14 = (void *)FUN_00405de0(param_1,3);\n            if (pvVar14 != (void *)0x0) {\n              free(pvVar13);\n              goto LAB_00406fba;\n            }\n            if ((*(byte *)((long)param_1 + 0x49) & 0x40) != 0) {\n              return (void *)0x0;\n            }\n            pvVar14 = *(void **)((long)pvVar13 + 8);\n          }\n          *param_1 = pvVar14;\n          free(pvVar13);\n          if (*(long *)((long)pvVar14 + 0x58) == -1) {\n            free(pvVar14);\n            piVar9 = __errno_location();\n            *piVar9 = 0;\n            *param_1 = (void *)0x0;\n            return (void *)0x0;\n          }\n          if (*(short *)((long)pvVar14 + 0x70) != 0xb) {\n            *(undefined *)((long)param_1[4] + *(long *)((long)pvVar14 + 0x48)) = 0;\n            if (*(long *)((long)pvVar14 + 0x58) == 0) {\n              iVar8 = FUN_00405940(param_1);\n              if (iVar8 == 0) goto LAB_00406da6;\nLAB_004071bf:\n              piVar9 = __errno_location();\n              *(int *)((long)pvVar14 + 0x40) = *piVar9;\n              *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n              if (*(short *)((long)pvVar14 + 0x70) == 2) {\n                return (void *)0x0;\n              }\n              uVar15 = *(uint *)(param_1 + 9);\n            }\n            else {\n              if ((*(ushort *)((long)pvVar14 + 0x72) & 2) == 0) {\n                if (((*(ushort *)((long)pvVar14 + 0x72) & 1) == 0) &&\n                   (iVar8 = FUN_00405ac0(param_1,*(undefined8 *)((long)pvVar14 + 8),0xffffffff,\n                                         &DAT_0040ceaa), iVar8 != 0)) goto LAB_004071bf;\n              }\n              else {\n                iVar8 = *(int *)((long)pvVar14 + 0x44);\n                if ((*(uint *)(param_1 + 9) & 4) == 0) {\n                  if ((*(uint *)(param_1 + 9) & 0x200) == 0) {\n                    iVar8 = fchdir(iVar8);\n                    if (iVar8 != 0) {\n                      piVar9 = __errno_location();\n                      *(int *)((long)pvVar14 + 0x40) = *piVar9;\n                      *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n                    }\n                    iVar8 = *(int *)((long)pvVar14 + 0x44);\n                  }\n                  else {\n                    FUN_004058d0(param_1,iVar8,1);\n                    iVar8 = *(int *)((long)pvVar14 + 0x44);\n                  }\n                }\n                close(iVar8);\n              }\nLAB_00406da6:\n              uVar15 = *(uint *)(param_1 + 9);\n              if (*(short *)((long)pvVar14 + 0x70) == 2) goto LAB_00406dd8;\n            }\n            if (*(int *)((long)pvVar14 + 0x40) == 0) {\n              *(undefined2 *)((long)pvVar14 + 0x70) = 6;\n              FUN_00405d40(uVar15,param_1 + 0xb,pvVar14);\n              uVar15 = *(uint *)(param_1 + 9);\n            }\n            else {\n              *(undefined2 *)((long)pvVar14 + 0x70) = 7;\n            }\nLAB_00406dd8:\n            if ((uVar15 & 0x4000) != 0) {\n              return (void *)0x0;\n            }\n            return pvVar14;\n          }\n          goto FUN_00401d98;\n        }\n        *param_1 = pvVar14;\n        free(pvVar13);\n        if (*(long *)((long)pvVar14 + 0x58) == 0) {\n          iVar8 = FUN_00405940(param_1);\n          if (iVar8 != 0) {\n            *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n            return (void *)0x0;\n          }\n          if ((*(uint *)(param_1 + 9) & 0x102) == 0) {\n            free(param_1[0xb]);\n          }\n          else if (param_1[0xb] != (void *)0x0) {\n            FUN_004091a0();\n          }\n          __s = (char *)((long)pvVar14 + 0x108);\n          pvVar13 = param_1[4];\n          *(long *)((long)pvVar14 + 0x48) = *(long *)((long)pvVar14 + 0x60);\n          memmove(pvVar13,__s,*(long *)((long)pvVar14 + 0x60) + 1);\n          pcVar10 = strrchr(__s,0x2f);\n          if ((pcVar10 != (char *)0x0) &&\n             ((__s != pcVar10 || (*(char *)((long)pvVar14 + 0x109) != '\\0')))) {\n            sVar11 = strlen(pcVar10 + 1);\n            memmove(__s,pcVar10 + 1,sVar11 + 1);\n            *(size_t *)((long)pvVar14 + 0x60) = sVar11;\n          }\n          pvVar13 = param_1[4];\n          uVar3 = *(undefined4 *)(param_1 + 9);\n          *(void **)((long)pvVar14 + 0x38) = pvVar13;\n          *(void **)((long)pvVar14 + 0x30) = pvVar13;\n          FUN_00405a10(uVar3,param_1 + 0xb);\n          sVar7 = *(short *)((long)pvVar14 + 0x70);\n          goto LAB_00406ff7;\n        }\n        pvVar13 = pvVar14;\n      } while (*(short *)((long)pvVar14 + 0x74) == 4);\n      if (*(short *)((long)pvVar14 + 0x74) == 2) {\n        sVar7 = FUN_00405370(param_1,pvVar14,1);\n        *(short *)((long)pvVar14 + 0x70) = sVar7;\n        if ((sVar7 == 1) && ((*(uint *)(param_1 + 9) & 4) == 0)) {\n          iVar8 = FUN_00405a70(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                               &DAT_0040ceab);\n          *(int *)((long)pvVar14 + 0x44) = iVar8;\n          if (iVar8 < 0) {\n            piVar9 = __errno_location();\n            iVar8 = *piVar9;\n            *(undefined2 *)((long)pvVar14 + 0x70) = 7;\n            *(int *)((long)pvVar14 + 0x40) = iVar8;\n          }\n          else {\n            *(ushort *)((long)pvVar14 + 0x72) = *(ushort *)((long)pvVar14 + 0x72) | 2;\n          }\n        }\n        *(undefined2 *)((long)pvVar14 + 0x74) = 3;\n      }\n    }\nLAB_00406fba:\n    lVar4 = *(long *)(*(long *)((long)pvVar14 + 8) + 0x48);\n    lVar12 = lVar4 + -1;\n    if (*(char *)(*(long *)(*(long *)((long)pvVar14 + 8) + 0x38) + -1 + lVar4) != '/') {\n      lVar12 = lVar4;\n    }\n    pvVar13 = param_1[4];\n    *(undefined *)(lVar12 + (long)pvVar13) = 0x2f;\n    memmove((undefined *)(lVar12 + (long)pvVar13) + 1,(void *)((long)pvVar14 + 0x108),\n            *(long *)((long)pvVar14 + 0x60) + 1);\n    sVar7 = *(short *)((long)pvVar14 + 0x70);\nLAB_00406ff7:\n    *param_1 = pvVar14;\n    if (sVar7 != 0xb) {\nLAB_00407001:\n      if (sVar7 != 1) {\n        return pvVar14;\n      }\n      goto LAB_0040700e;\n    }\nLAB_00407080:\n    if (*(long *)((long)pvVar14 + 0xa8) != 2) {\n      if (*(long *)((long)pvVar14 + 0xa8) == 1) {\n        return pvVar14;\n      }\nFUN_00401d98:\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n    lVar4 = *(long *)((long)pvVar14 + 8);\n    if (((*(long *)(lVar4 + 0x68) == 0) && ((*(uint *)(param_1 + 9) & 0x18) == 0x18)) &&\n       (iVar8 = FUN_00405860(lVar4), iVar8 == 2)) {\n      sVar7 = *(short *)((long)pvVar14 + 0x70);\n      goto LAB_00407001;\n    }\n    sVar7 = FUN_00405370(param_1,pvVar14,0);\n    *(short *)((long)pvVar14 + 0x70) = sVar7;\n    if ((*(uint *)((long)pvVar14 + 0x90) & 0xf000) != 0x4000) goto LAB_00407001;\n    if (*(long *)((long)pvVar14 + 0x58) != 0) {\n      uVar1 = *(long *)(lVar4 + 0x68) - 1;\n      if (uVar1 < 0xfffffffffffffffe) {\n        *(ulong *)(lVar4 + 0x68) = uVar1;\n      }\n      if (sVar7 != 1) {\n        return pvVar14;\n      }\n      goto LAB_0040701e;\n    }\n    if (sVar7 != 1) {\n      return pvVar14;\n    }\n  }\n  param_1[3] = *(void **)((long)pvVar14 + 0x78);\nLAB_0040701e:\n  cVar5 = FUN_00405c90(*(undefined4 *)(param_1 + 9),param_1 + 0xb,pvVar14);\n  if (cVar5 == '\\0') {\n    piVar9 = __errno_location();\n    pvVar14 = (void *)0x0;\n    *piVar9 = 0xc;\n  }\n  return pvVar14;\n}\n\n",
            "funcName": "fts_read"
        },
        {
            "funcStartAddr": "0x407420",
            "funcEndAddr": "0x407445",
            "decompiledFuncCode": "\nundefined8 fts_set(undefined8 param_1,long param_2,uint param_3)\n\n{\n  int *piVar1;\n  \n  if (param_3 < 5) {\n    *(short *)(param_2 + 0x74) = (short)param_3;\n    return 0;\n  }\n  piVar1 = __errno_location();\n  *piVar1 = 0x16;\n  return 1;\n}\n\n",
            "funcName": "fts_set"
        },
        {
            "funcStartAddr": "0x407450",
            "funcEndAddr": "0x40759c",
            "decompiledFuncCode": "\nlong fts_children(long *param_1,uint param_2)\n\n{\n  int __fd;\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  long lVar4;\n  undefined8 uVar5;\n  \n  piVar2 = __errno_location();\n  if ((param_2 & 0xffffdfff) != 0) {\n    *piVar2 = 0x16;\n    return 0;\n  }\n  lVar4 = *param_1;\n  *piVar2 = 0;\n  if ((*(byte *)((long)param_1 + 0x49) & 0x40) == 0) {\n    if (*(short *)(lVar4 + 0x70) == 9) {\n      return *(long *)(lVar4 + 0x10);\n    }\n    lVar3 = 0;\n    if (*(short *)(lVar4 + 0x70) == 1) {\n      if (param_1[1] != 0) {\n        FUN_004056b0();\n      }\n      uVar5 = 1;\n      if (param_2 == 0x2000) {\n        *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x2000;\n        uVar5 = 2;\n      }\n      if (((*(long *)(lVar4 + 0x58) == 0) && (**(char **)(lVar4 + 0x30) != '/')) &&\n         ((*(uint *)(param_1 + 9) & 4) == 0)) {\n        __fd = FUN_00405a70(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                            &DAT_0040ceab);\n        if (__fd < 0) {\n          param_1[1] = 0;\n          lVar3 = 0;\n        }\n        else {\n          lVar4 = FUN_00405de0(param_1,uVar5);\n          param_1[1] = lVar4;\n          if ((*(byte *)((long)param_1 + 0x49) & 2) == 0) {\n            iVar1 = fchdir(__fd);\n            if (iVar1 != 0) {\n              iVar1 = *piVar2;\n              close(__fd);\n              *piVar2 = iVar1;\n              return 0;\n            }\n            close(__fd);\n          }\n          else {\n            FUN_004058d0(param_1,__fd,1);\n          }\n          lVar3 = param_1[1];\n        }\n      }\n      else {\n        lVar3 = FUN_00405de0(param_1,uVar5);\n        param_1[1] = lVar3;\n      }\n    }\n    return lVar3;\n  }\n  return 0;\n}\n\n",
            "funcName": "fts_children"
        },
        {
            "funcStartAddr": "0x4075c0",
            "funcEndAddr": "0x407695",
            "decompiledFuncCode": "\nvoid FUN_004075c0(long param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 *puVar5;\n  long lVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  \n  iVar1 = param_2[0xb];\n  iVar2 = *param_2;\n  iVar3 = param_2[0xc];\n  iVar8 = iVar1;\n  iVar9 = iVar2;\n  while (iVar3 < iVar9) {\n    while( true ) {\n      if (iVar3 <= iVar8) goto LAB_0040763c;\n      iVar10 = iVar9 - iVar3;\n      iVar7 = iVar3 - iVar8;\n      if (iVar10 <= iVar7) break;\n      lVar6 = (long)iVar8;\n      iVar9 = iVar9 - iVar7;\n      puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n      do {\n        uVar4 = *puVar5;\n        *puVar5 = puVar5[iVar9 - lVar6];\n        puVar5[iVar9 - lVar6] = uVar4;\n        puVar5 = puVar5 + 1;\n      } while ((undefined8 *)(param_1 + 8 + ((ulong)(iVar7 - 1) + lVar6) * 8) != puVar5);\n      if (iVar9 <= iVar3) goto LAB_0040763c;\n    }\n    lVar6 = (long)iVar8;\n    puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n    do {\n      uVar4 = *puVar5;\n      *puVar5 = puVar5[iVar3 - lVar6];\n      puVar5[iVar3 - lVar6] = uVar4;\n      puVar5 = puVar5 + 1;\n    } while (puVar5 != (undefined8 *)(param_1 + 8 + ((ulong)(iVar10 - 1) + lVar6) * 8));\n    iVar8 = iVar8 + iVar10;\n  }\nLAB_0040763c:\n  param_2[0xc] = iVar2;\n  param_2[0xb] = iVar1 + (iVar2 - iVar3);\n  return;\n}\n\n",
            "funcName": "FUN_004075c0"
        },
        {
            "funcStartAddr": "0x4076a0",
            "funcEndAddr": "0x407c9e",
            "decompiledFuncCode": "\nint FUN_004076a0(int param_1,undefined8 *param_2,char *param_3,char **param_4,undefined4 *param_5,\n                int param_6,int *param_7,int param_8,undefined8 param_9)\n\n{\n  char cVar1;\n  undefined8 uVar2;\n  bool bVar3;\n  bool bVar4;\n  int iVar5;\n  int iVar6;\n  size_t sVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  char **ppcVar10;\n  char *pcVar11;\n  char **ppcVar12;\n  char *pcVar13;\n  char *__s1;\n  FILE *__stream;\n  ulong uVar14;\n  size_t sVar15;\n  char *__s1_00;\n  long lVar16;\n  char *local_70;\n  uint local_44;\n  \n  pcVar13 = *(char **)(param_7 + 8);\n  cVar1 = *pcVar13;\n  pcVar11 = pcVar13;\n  if ((cVar1 == '=') || (cVar1 == '\\0')) {\n    sVar15 = 0;\n  }\n  else {\n    do {\n      pcVar11 = pcVar11 + 1;\n      if (*pcVar11 == '\\0') break;\n    } while (*pcVar11 != '=');\n    sVar15 = (long)pcVar11 - (long)pcVar13;\n  }\n  uVar14 = 0;\n  __s1 = *param_4;\n  ppcVar10 = param_4;\n  __s1_00 = __s1;\n  if (__s1 != (char *)0x0) {\n    while( true ) {\n      iVar5 = strncmp(__s1_00,pcVar13,sVar15);\n      if ((iVar5 == 0) && (sVar7 = strlen(__s1_00), sVar7 == sVar15)) goto LAB_004078c0;\n      ppcVar10 = ppcVar10 + 4;\n      __s1_00 = *ppcVar10;\n      iVar5 = (int)uVar14 + 1;\n      if (__s1_00 == (char *)0x0) break;\n      uVar14 = (ulong)iVar5;\n    }\n    lVar16 = 0;\n    ppcVar10 = (char **)0x0;\n    local_44 = 0xffffffff;\n    bVar3 = false;\n    bVar4 = false;\n    local_70 = (char *)0x0;\n    ppcVar12 = param_4;\n    do {\n      iVar6 = strncmp(__s1,pcVar13,sVar15);\n      if (iVar6 == 0) {\n        if (ppcVar10 == (char **)0x0) {\n          local_44 = (uint)lVar16;\n          ppcVar10 = ppcVar12;\n        }\n        else if (((((param_6 != 0) || (*(int *)(ppcVar10 + 1) != *(int *)(ppcVar12 + 1))) ||\n                  (ppcVar10[2] != ppcVar12[2])) ||\n                 (*(int *)(ppcVar10 + 3) != *(int *)(ppcVar12 + 3))) && (!bVar3)) {\n          if (param_8 == 0) {\n            bVar3 = true;\n            if (local_70 == (char *)0x0) goto LAB_00407800;\n          }\n          else if (local_70 == (char *)0x0) {\n            local_70 = (char *)calloc((long)iVar5,1);\n            if (local_70 == (char *)0x0) {\n              bVar3 = true;\n              goto LAB_00407800;\n            }\n            bVar4 = true;\n            local_70[(int)local_44] = '\\x01';\n          }\n          local_70[lVar16] = '\\x01';\n        }\n      }\nLAB_00407800:\n      ppcVar12 = ppcVar12 + 4;\n      __s1 = *ppcVar12;\n      lVar16 = lVar16 + 1;\n    } while (__s1 != (char *)0x0);\n    if ((local_70 != (char *)0x0) || (bVar3)) {\n      if (param_8 != 0) {\n        if (bVar3) {\n          uVar2 = *param_2;\n          uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous\\n\",5);\n          __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n        else {\n          flockfile(stderr);\n          uVar2 = *(undefined8 *)(param_7 + 8);\n          uVar8 = *param_2;\n          uVar9 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous; possibilities:\",5);\n          __fprintf_chk(stderr,1,uVar9,uVar8,param_9,uVar2);\n          pcVar13 = local_70;\n          __stream = stderr;\n          do {\n            if (*pcVar13 != '\\0') {\n              __fprintf_chk(__stream,1,\" \\'%s%s\\'\",param_9,*param_4);\n              __stream = stderr;\n            }\n            pcVar13 = pcVar13 + 1;\n            param_4 = param_4 + 4;\n          } while (local_70 + uVar14 + 1 != pcVar13);\n          fputc(10,__stream);\n          funlockfile(stderr);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n      }\n      if (bVar4) {\n        free(local_70);\n      }\n      sVar15 = strlen(pcVar13);\n      *(char **)(param_7 + 8) = pcVar13 + sVar15;\n      *param_7 = *param_7 + 1;\n      param_7[2] = 0;\n      return 0x3f;\n    }\n    if (ppcVar10 != (char **)0x0) {\n      uVar14 = (ulong)local_44;\nLAB_004078c0:\n      iVar6 = *param_7;\n      *(undefined8 *)(param_7 + 8) = 0;\n      iVar5 = iVar6 + 1;\n      *param_7 = iVar5;\n      if (*pcVar11 == '\\0') {\n        if (*(int *)(ppcVar10 + 1) == 1) {\n          if (param_1 <= iVar5) {\n            if (param_8 != 0) {\n              pcVar13 = *ppcVar10;\n              uVar2 = *param_2;\n              uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' requires an argument\\n\",5);\n              __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n            }\n            param_7[2] = *(int *)(ppcVar10 + 3);\n            return (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          *param_7 = iVar6 + 2;\n          *(undefined8 *)(param_7 + 4) = param_2[iVar5];\n        }\n      }\n      else {\n        if (*(int *)(ppcVar10 + 1) == 0) {\n          if (param_8 != 0) {\n            pcVar13 = *ppcVar10;\n            uVar2 = *param_2;\n            uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' doesn\\'t allow an argument\\n\",5);\n            __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          }\n          param_7[2] = *(int *)(ppcVar10 + 3);\n          return 0x3f;\n        }\n        *(char **)(param_7 + 4) = pcVar11 + 1;\n      }\n      if (param_5 != (undefined4 *)0x0) {\n        *param_5 = (int)uVar14;\n      }\n      if ((int *)ppcVar10[2] == (int *)0x0) {\n        return *(int *)(ppcVar10 + 3);\n      }\n      *(int *)ppcVar10[2] = *(int *)(ppcVar10 + 3);\n      return 0;\n    }\n  }\n  if (((param_6 != 0) && (*(char *)(param_2[*param_7] + 1) != '-')) &&\n     (pcVar11 = strchr(param_3,(int)cVar1), pcVar11 != (char *)0x0)) {\n    return -1;\n  }\n  if (param_8 != 0) {\n    uVar2 = *param_2;\n    uVar8 = dcgettext(0,\"%s: unrecognized option \\'%s%s\\'\\n\",5);\n    __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n  }\n  *(undefined8 *)(param_7 + 8) = 0;\n  *param_7 = *param_7 + 1;\n  param_7[2] = 0;\n  return 0x3f;\n}\n\n",
            "funcName": "FUN_004076a0"
        },
        {
            "funcStartAddr": "0x407cc0",
            "funcEndAddr": "0x408227",
            "decompiledFuncCode": "\nuint FUN_00407cc0(uint param_1,undefined8 *param_2,char *param_3,long param_4,undefined8 param_5,\n                 ulong param_6,uint *param_7,int param_8)\n\n{\n  undefined8 uVar1;\n  char cVar2;\n  uint uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  long lVar6;\n  uint uVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  uint uVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  undefined1 *puVar15;\n  \n  bVar14 = 0;\n  uVar3 = param_7[1];\n  if ((int)param_1 < 1) {\n    return 0xffffffff;\n  }\n  uVar11 = *param_7;\n  *(undefined8 *)(param_7 + 4) = 0;\n  if (uVar11 == 0) {\n    *param_7 = 1;\n    uVar11 = 1;\nLAB_00407d0a:\n    param_7[0xc] = uVar11;\n    param_7[0xb] = uVar11;\n    *(undefined8 *)(param_7 + 8) = 0;\n    if (*param_3 == '-') {\n      param_7[10] = 2;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else if (*param_3 == '+') {\n      param_7[10] = 0;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else {\n      pbVar8 = (byte *)0x0;\n      if (param_8 == 0) {\n        pcVar4 = getenv(\"POSIXLY_CORRECT\");\n        param_6 = param_6 & 0xffffffff;\n        if (pcVar4 == (char *)0x0) {\n          param_7[10] = 1;\n          pbVar8 = *(byte **)(param_7 + 8);\n          goto LAB_00407e0d;\n        }\n        pbVar8 = *(byte **)(param_7 + 8);\n      }\n      param_7[10] = 0;\n    }\nLAB_00407e0d:\n    param_7[6] = 1;\n    cVar2 = *param_3;\nLAB_00407e18:\n    if (cVar2 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 == (byte *)0x0) goto LAB_00407d88;\nLAB_00407e2c:\n    if (*pbVar8 == 0) goto LAB_00407d88;\n  }\n  else {\n    if (param_7[6] == 0) goto LAB_00407d0a;\n    cVar2 = *param_3;\n    pbVar8 = *(byte **)(param_7 + 8);\n    if ((cVar2 - 0x2bU & 0xfd) != 0) goto LAB_00407e18;\n    pcVar4 = param_3 + 1;\n    param_3 = param_3 + 1;\n    if (*pcVar4 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 != (byte *)0x0) goto LAB_00407e2c;\nLAB_00407d88:\n    uVar11 = *param_7;\n    if (param_7[0xc] != uVar11 && (int)uVar11 <= (int)param_7[0xc]) {\n      param_7[0xc] = uVar11;\n    }\n    if ((int)uVar11 < (int)param_7[0xb]) {\n      param_7[0xb] = uVar11;\n    }\n    if (param_7[10] == 1) {\n      uVar7 = param_7[0xc];\n      if (param_7[0xb] == uVar7) {\n        if (uVar11 != uVar7) {\n          param_7[0xb] = uVar11;\n          uVar7 = uVar11;\n        }\n      }\n      else if (uVar11 != uVar7) {\n        FUN_004075c0(param_2,param_7);\n        param_6 = param_6 & 0xffffffff;\n        uVar7 = *param_7;\n      }\n      uVar11 = uVar7;\n      uVar7 = uVar11;\n      if ((int)uVar11 < (int)param_1) {\n        lVar6 = (long)(int)uVar11;\n        do {\n          if ((*(char *)param_2[lVar6] == '-') && (((char *)param_2[lVar6])[1] != '\\0')) {\n            uVar11 = *param_7;\n            uVar7 = (uint)lVar6;\n            break;\n          }\n          uVar11 = (uint)lVar6 + 1;\n          lVar6 = lVar6 + 1;\n          *param_7 = uVar11;\n          uVar7 = uVar11;\n        } while ((int)lVar6 < (int)param_1);\n      }\n      param_7[0xc] = uVar7;\n    }\n    bVar12 = param_1 < uVar11;\n    bVar13 = param_1 == uVar11;\n    if (bVar13) {\n      param_1 = param_7[0xc];\n      uVar11 = param_7[0xb];\nLAB_00407ef6:\n      if (uVar11 != param_1) {\n        *param_7 = uVar11;\n      }\n      return 0xffffffff;\n    }\n    lVar6 = 3;\n    pbVar8 = (byte *)param_2[(int)uVar11];\n    pbVar9 = pbVar8;\n    pbVar10 = &DAT_0040cff9;\n    do {\n      if (lVar6 == 0) break;\n      lVar6 = lVar6 + -1;\n      bVar12 = *pbVar9 < *pbVar10;\n      bVar13 = *pbVar9 == *pbVar10;\n      pbVar9 = pbVar9 + (ulong)bVar14 * -2 + 1;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n    if ((!bVar12 && !bVar13) == bVar12) {\n      uVar11 = uVar11 + 1;\n      *param_7 = uVar11;\n      if (param_7[0xb] == param_7[0xc]) {\n        param_7[0xb] = uVar11;\n      }\n      else {\n        bVar12 = uVar11 != param_7[0xc];\n        uVar11 = param_7[0xb];\n        if (bVar12) {\n          FUN_004075c0(param_2,param_7);\n          uVar11 = param_7[0xb];\n        }\n      }\n      param_7[0xc] = param_1;\n      *param_7 = param_1;\n      goto LAB_00407ef6;\n    }\n    if ((*pbVar8 != 0x2d) || (bVar14 = pbVar8[1], bVar14 == 0)) {\n      if (param_7[10] == 0) {\n        return 0xffffffff;\n      }\n      *(byte **)(param_7 + 4) = pbVar8;\n      *param_7 = uVar11 + 1;\n      return 1;\n    }\n    if (param_4 != 0) {\n      if (bVar14 == 0x2d) {\n        *(byte **)(param_7 + 8) = pbVar8 + 2;\n        puVar15 = &DAT_0040cff9;\n        goto LAB_00408055;\n      }\n      if ((int)param_6 != 0) {\n        if (pbVar8[2] == 0) {\n          pcVar4 = strchr(param_3,(int)(char)bVar14);\n          param_6 = param_6 & 0xffffffff;\n          if (pcVar4 != (char *)0x0) goto LAB_00408000;\n        }\n        *(byte **)(param_7 + 8) = pbVar8 + 1;\n        uVar11 = FUN_004076a0(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,\n                              &DAT_0040cffa);\n        if (uVar11 != 0xffffffff) {\n          return uVar11;\n        }\n        pbVar8 = (byte *)param_2[(int)*param_7];\n      }\n    }\nLAB_00408000:\n    pbVar8 = pbVar8 + 1;\n  }\n  pbVar9 = pbVar8 + 1;\n  *(byte **)(param_7 + 8) = pbVar9;\n  bVar14 = *pbVar8;\n  uVar11 = (uint)(char)bVar14;\n  pcVar4 = strchr(param_3,uVar11);\n  if (pbVar8[1] == 0) {\n    *param_7 = *param_7 + 1;\n  }\n  if (((byte)(bVar14 - 0x3a) < 2) || (pcVar4 == (char *)0x0)) {\n    if (uVar3 != 0) {\n      uVar1 = *param_2;\n      uVar5 = dcgettext(0,\"%s: invalid option -- \\'%c\\'\\n\",5);\n      __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n    }\n    param_7[2] = uVar11;\n    return 0x3f;\n  }\n  if (((*pcVar4 != 'W') || (param_4 == 0)) || (pcVar4[1] != ';')) {\n    if (pcVar4[1] == ':') {\n      if (pcVar4[2] == ':') {\n        if (pbVar8[1] == 0) {\n          *(undefined8 *)(param_7 + 4) = 0;\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = *param_7 + 1;\n        }\n      }\n      else {\n        uVar7 = *param_7;\n        if (pbVar8[1] == 0) {\n          if (param_1 == uVar7) {\n            if (uVar3 != 0) {\n              uVar1 = *param_2;\n              uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n              __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n            }\n            param_7[2] = uVar11;\n            uVar11 = (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          else {\n            uVar1 = param_2[(int)uVar7];\n            *param_7 = uVar7 + 1;\n            *(undefined8 *)(param_7 + 4) = uVar1;\n          }\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = uVar7 + 1;\n        }\n      }\n      *(undefined8 *)(param_7 + 8) = 0;\n      return uVar11;\n    }\n    return uVar11;\n  }\n  if (pbVar8[1] == 0) {\n    if (*param_7 == param_1) {\n      if (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n        __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n      }\n      param_7[2] = uVar11;\n      return (uint)(*param_3 != ':') * 5 + 0x3a;\n    }\n    pbVar9 = (byte *)param_2[(int)*param_7];\n  }\n  *(byte **)(param_7 + 8) = pbVar9;\n  param_6 = 0;\n  *(undefined8 *)(param_7 + 4) = 0;\n  puVar15 = &DAT_0040d018;\nLAB_00408055:\n  uVar3 = FUN_004076a0(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,puVar15);\n  return uVar3;\n}\n\n",
            "funcName": "FUN_00407cc0"
        },
        {
            "funcStartAddr": "0x408290",
            "funcEndAddr": "0x4082e6",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00408290(void)\n\n{\n  DAT_006104a0 = DAT_006102dc;\n  _DAT_006104a4 = DAT_006102d8;\n  FUN_00407cc0();\n  DAT_006102dc = DAT_006104a0;\n  DAT_006104e8 = DAT_006104b0;\n  _DAT_006102d4 = DAT_006104a8;\n  return;\n}\n\n",
            "funcName": "FUN_00408290"
        },
        {
            "funcStartAddr": "0x4082f0",
            "funcEndAddr": "0x408308",
            "decompiledFuncCode": "\nvoid FUN_004082f0(void)\n\n{\n  FUN_00408290();\n  return;\n}\n\n",
            "funcName": "FUN_004082f0"
        },
        {
            "funcStartAddr": "0x408310",
            "funcEndAddr": "0x408323",
            "decompiledFuncCode": "\nvoid FUN_00408310(void)\n\n{\n  FUN_00408290();\n  return;\n}\n\n",
            "funcName": "FUN_00408310"
        },
        {
            "funcStartAddr": "0x408330",
            "funcEndAddr": "0x408345",
            "decompiledFuncCode": "\nvoid FUN_00408330(void)\n\n{\n  FUN_00407cc0();\n  return;\n}\n\n",
            "funcName": "FUN_00408330"
        },
        {
            "funcStartAddr": "0x408350",
            "funcEndAddr": "0x408366",
            "decompiledFuncCode": "\nvoid FUN_00408350(void)\n\n{\n  FUN_00408290();\n  return;\n}\n\n",
            "funcName": "FUN_00408350"
        },
        {
            "funcStartAddr": "0x408370",
            "funcEndAddr": "0x408388",
            "decompiledFuncCode": "\nvoid FUN_00408370(void)\n\n{\n  FUN_00407cc0();\n  return;\n}\n\n",
            "funcName": "FUN_00408370"
        },
        {
            "funcStartAddr": "0x408390",
            "funcEndAddr": "0x4083ff",
            "decompiledFuncCode": "\nsize_t FUN_00408390(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  wchar_t local_1c;\n  \n  if (param_2 == (byte *)0x0) {\n    param_3 = 1;\n    param_2 = (byte *)0x40d017;\n  }\n  else {\n    if (param_3 == 0) {\n      return 0xfffffffffffffffe;\n    }\n    if (param_1 != (wchar_t *)0x0) goto LAB_004083b4;\n  }\n  param_1 = &local_1c;\nLAB_004083b4:\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (cVar1 = FUN_00408670(0), cVar1 == '\\0')) {\n    sVar2 = 1;\n    *param_1 = (uint)*param_2;\n  }\n  return sVar2;\n}\n\n",
            "funcName": "FUN_00408390"
        },
        {
            "funcStartAddr": "0x408410",
            "funcEndAddr": "0x4084f4",
            "decompiledFuncCode": "\nundefined8 FUN_00408410(ulong param_1,char *param_2)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  undefined *__ptr;\n  char *unaff_RBX;\n  uint *unaff_RBP;\n  char *pcVar4;\n  undefined *unaff_R12;\n  char *unaff_R13;\n  \n  do {\n    pcVar4 = param_2;\n    *(char **)((long)register0x00000020 + -8) = unaff_R13;\n    *(undefined **)((long)register0x00000020 + -0x10) = unaff_R12;\n    *(uint **)((long)register0x00000020 + -0x18) = unaff_RBP;\n    *(char **)((long)register0x00000020 + -0x20) = unaff_RBX;\n    unaff_RBX = (char *)(param_1 & 0xffffffff);\n    unaff_R12 = (undefined *)((long)register0x00000020 + -0xfe8);\n    *(undefined8 *)((long)register0x00000020 + -0xff0) = 0x408427;\n    unaff_RBP = (uint *)__errno_location();\n    iVar3 = (int)unaff_RBX;\n    if ((iVar3 == -100) || (*pcVar4 == '/')) goto LAB_0040849a;\n    *(undefined8 *)((long)register0x00000020 + -0xff0) = 0x408446;\n    param_2 = unaff_RBX;\n    __ptr = (undefined *)\n            FUN_0040ac10((undefined *)((long)register0x00000020 + -0xfe8),unaff_RBX,pcVar4);\n    if ((__ptr != (undefined *)0x0) &&\n       (*unaff_RBP = 0x5f, __ptr != (undefined *)((long)register0x00000020 + -0xfe8))) {\n      *(undefined8 *)((long)register0x00000020 + -0xff0) = 0x40845f;\n      free(__ptr);\n    }\n    *(undefined8 *)((long)register0x00000020 + -0xff0) = 0x408467;\n    iVar2 = FUN_0040a000((undefined *)((long)register0x00000020 + -0xfe8));\n    if (iVar2 == 0) {\n      if ((-1 < iVar3) && (*(int *)((long)register0x00000020 + -0xfe8) == iVar3)) {\n        *(undefined8 *)((long)register0x00000020 + -0xff0) = 0x4084d8;\n        FUN_0040a070((undefined *)((long)register0x00000020 + -0xfe8));\n        *unaff_RBP = 9;\n        return 0xffffffff;\n      }\n      *(undefined8 *)((long)register0x00000020 + -0xff0) = 0x40847b;\n      iVar3 = fchdir(iVar3);\n      if (iVar3 != 0) {\n        uVar1 = *unaff_RBP;\n        *(undefined8 *)((long)register0x00000020 + -0xff0) = 0x4084c3;\n        FUN_0040a070((undefined *)((long)register0x00000020 + -0xfe8));\n        *unaff_RBP = uVar1;\n        return 0xffffffff;\n      }\n      *unaff_RBP = 0x5f;\n      *(undefined8 *)((long)register0x00000020 + -0xff0) = 0x40848e;\n      iVar3 = FUN_0040a050((undefined *)((long)register0x00000020 + -0xfe8));\n      if (iVar3 == 0) {\n        *(undefined8 *)((long)register0x00000020 + -0xff0) = 0x40849a;\n        FUN_0040a070((undefined *)((long)register0x00000020 + -0xfe8));\nLAB_0040849a:\n        *unaff_RBP = 0x5f;\n        return 0xffffffff;\n      }\n    }\n    else {\n      uVar1 = *unaff_RBP;\n      *(undefined8 *)((long)register0x00000020 + -0xff0) = 0x4084e9;\n      FUN_00409f50(uVar1);\n    }\n    param_1 = (ulong)*unaff_RBP;\n    *(undefined8 *)((long)register0x00000020 + -0xff0) = 0x4084f1;\n    FUN_00409f80();\n    register0x00000020 = (BADSPACEBASE *)((long)register0x00000020 + -0xfe8);\n    unaff_R13 = pcVar4;\n  } while( true );\n}\n\n",
            "funcName": "FUN_00408410"
        },
        {
            "funcStartAddr": "0x408500",
            "funcEndAddr": "0x408505",
            "decompiledFuncCode": "\nundefined8 thunk_FUN_00408410(ulong param_1,char *param_2)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  undefined *__ptr;\n  char *unaff_RBX;\n  uint *unaff_RBP;\n  char *pcVar4;\n  undefined *unaff_R12;\n  char *unaff_R13;\n  \n  do {\n    pcVar4 = param_2;\n    *(char **)((long)register0x00000020 + -8) = unaff_R13;\n    *(undefined **)((long)register0x00000020 + -0x10) = unaff_R12;\n    *(uint **)((long)register0x00000020 + -0x18) = unaff_RBP;\n    *(char **)((long)register0x00000020 + -0x20) = unaff_RBX;\n    unaff_RBX = (char *)(param_1 & 0xffffffff);\n    unaff_R12 = (undefined *)((long)register0x00000020 + -0xfe8);\n    *(undefined8 *)((long)register0x00000020 + -0xff0) = 0x408427;\n    unaff_RBP = (uint *)__errno_location();\n    iVar3 = (int)unaff_RBX;\n    if ((iVar3 == -100) || (*pcVar4 == '/')) goto LAB_0040849a;\n    *(undefined8 *)((long)register0x00000020 + -0xff0) = 0x408446;\n    param_2 = unaff_RBX;\n    __ptr = (undefined *)\n            FUN_0040ac10((undefined *)((long)register0x00000020 + -0xfe8),unaff_RBX,pcVar4);\n    if ((__ptr != (undefined *)0x0) &&\n       (*unaff_RBP = 0x5f, __ptr != (undefined *)((long)register0x00000020 + -0xfe8))) {\n      *(undefined8 *)((long)register0x00000020 + -0xff0) = 0x40845f;\n      free(__ptr);\n    }\n    *(undefined8 *)((long)register0x00000020 + -0xff0) = 0x408467;\n    iVar2 = FUN_0040a000((undefined *)((long)register0x00000020 + -0xfe8));\n    if (iVar2 == 0) {\n      if ((-1 < iVar3) && (*(int *)((long)register0x00000020 + -0xfe8) == iVar3)) {\n        *(undefined8 *)((long)register0x00000020 + -0xff0) = 0x4084d8;\n        FUN_0040a070((undefined *)((long)register0x00000020 + -0xfe8));\n        *unaff_RBP = 9;\n        return 0xffffffff;\n      }\n      *(undefined8 *)((long)register0x00000020 + -0xff0) = 0x40847b;\n      iVar3 = fchdir(iVar3);\n      if (iVar3 != 0) {\n        uVar1 = *unaff_RBP;\n        *(undefined8 *)((long)register0x00000020 + -0xff0) = 0x4084c3;\n        FUN_0040a070((undefined *)((long)register0x00000020 + -0xfe8));\n        *unaff_RBP = uVar1;\n        return 0xffffffff;\n      }\n      *unaff_RBP = 0x5f;\n      *(undefined8 *)((long)register0x00000020 + -0xff0) = 0x40848e;\n      iVar3 = FUN_0040a050((undefined *)((long)register0x00000020 + -0xfe8));\n      if (iVar3 == 0) {\n        *(undefined8 *)((long)register0x00000020 + -0xff0) = 0x40849a;\n        FUN_0040a070((undefined *)((long)register0x00000020 + -0xfe8));\nLAB_0040849a:\n        *unaff_RBP = 0x5f;\n        return 0xffffffff;\n      }\n    }\n    else {\n      uVar1 = *unaff_RBP;\n      *(undefined8 *)((long)register0x00000020 + -0xff0) = 0x4084e9;\n      FUN_00409f50(uVar1);\n    }\n    param_1 = (ulong)*unaff_RBP;\n    *(undefined8 *)((long)register0x00000020 + -0xff0) = 0x4084f1;\n    FUN_00409f80();\n    register0x00000020 = (BADSPACEBASE *)((long)register0x00000020 + -0xfe8);\n    unaff_R13 = pcVar4;\n  } while( true );\n}\n\n",
            "funcName": "thunk_408500"
        },
        {
            "funcStartAddr": "0x408510",
            "funcEndAddr": "0x408515",
            "decompiledFuncCode": "\nundefined8 thunk_FUN_00408410(ulong param_1,char *param_2)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  undefined *__ptr;\n  char *unaff_RBX;\n  undefined *puVar4;\n  uint *unaff_RBP;\n  char *pcVar5;\n  undefined *unaff_R12;\n  char *unaff_R13;\n  \n  puVar4 = (undefined *)register0x00000020;\n  do {\n    pcVar5 = param_2;\n    *(char **)(puVar4 + -8) = unaff_R13;\n    *(undefined **)(puVar4 + -0x10) = unaff_R12;\n    *(uint **)(puVar4 + -0x18) = unaff_RBP;\n    *(char **)(puVar4 + -0x20) = unaff_RBX;\n    unaff_RBX = (char *)(param_1 & 0xffffffff);\n    unaff_R12 = puVar4 + -0xfe8;\n    *(undefined8 *)(puVar4 + -0xff0) = 0x408427;\n    unaff_RBP = (uint *)__errno_location();\n    iVar3 = (int)unaff_RBX;\n    if ((iVar3 == -100) || (*pcVar5 == '/')) goto LAB_0040849a;\n    *(undefined8 *)(puVar4 + -0xff0) = 0x408446;\n    param_2 = unaff_RBX;\n    __ptr = (undefined *)FUN_0040ac10(puVar4 + -0xfe8,unaff_RBX,pcVar5);\n    if ((__ptr != (undefined *)0x0) && (*unaff_RBP = 0x5f, __ptr != puVar4 + -0xfe8)) {\n      *(undefined8 *)(puVar4 + -0xff0) = 0x40845f;\n      free(__ptr);\n    }\n    *(undefined8 *)(puVar4 + -0xff0) = 0x408467;\n    iVar2 = FUN_0040a000(puVar4 + -0xfe8);\n    if (iVar2 == 0) {\n      if ((-1 < iVar3) && (*(int *)(puVar4 + -0xfe8) == iVar3)) {\n        *(undefined8 *)(puVar4 + -0xff0) = 0x4084d8;\n        FUN_0040a070(puVar4 + -0xfe8);\n        *unaff_RBP = 9;\n        return 0xffffffff;\n      }\n      *(undefined8 *)(puVar4 + -0xff0) = 0x40847b;\n      iVar3 = fchdir(iVar3);\n      if (iVar3 != 0) {\n        uVar1 = *unaff_RBP;\n        *(undefined8 *)(puVar4 + -0xff0) = 0x4084c3;\n        FUN_0040a070(puVar4 + -0xfe8);\n        *unaff_RBP = uVar1;\n        return 0xffffffff;\n      }\n      *unaff_RBP = 0x5f;\n      *(undefined8 *)(puVar4 + -0xff0) = 0x40848e;\n      iVar3 = FUN_0040a050(puVar4 + -0xfe8);\n      if (iVar3 == 0) {\n        *(undefined8 *)(puVar4 + -0xff0) = 0x40849a;\n        FUN_0040a070(puVar4 + -0xfe8);\nLAB_0040849a:\n        *unaff_RBP = 0x5f;\n        return 0xffffffff;\n      }\n    }\n    else {\n      uVar1 = *unaff_RBP;\n      *(undefined8 *)(puVar4 + -0xff0) = 0x4084e9;\n      FUN_00409f50(uVar1);\n    }\n    param_1 = (ulong)*unaff_RBP;\n    *(undefined8 *)(puVar4 + -0xff0) = 0x4084f1;\n    FUN_00409f80();\n    puVar4 = puVar4 + -0xfe8;\n    unaff_R13 = pcVar5;\n  } while( true );\n}\n\n",
            "funcName": "thunk_408510"
        },
        {
            "funcStartAddr": "0x408520",
            "funcEndAddr": "0x408525",
            "decompiledFuncCode": "\nundefined8 thunk_FUN_00408410(ulong param_1,char *param_2)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  undefined *__ptr;\n  char *unaff_RBX;\n  undefined *puVar4;\n  uint *unaff_RBP;\n  char *pcVar5;\n  undefined *unaff_R12;\n  char *unaff_R13;\n  \n  puVar4 = (undefined *)register0x00000020;\n  do {\n    pcVar5 = param_2;\n    *(char **)(puVar4 + -8) = unaff_R13;\n    *(undefined **)(puVar4 + -0x10) = unaff_R12;\n    *(uint **)(puVar4 + -0x18) = unaff_RBP;\n    *(char **)(puVar4 + -0x20) = unaff_RBX;\n    unaff_RBX = (char *)(param_1 & 0xffffffff);\n    unaff_R12 = puVar4 + -0xfe8;\n    *(undefined8 *)(puVar4 + -0xff0) = 0x408427;\n    unaff_RBP = (uint *)__errno_location();\n    iVar3 = (int)unaff_RBX;\n    if ((iVar3 == -100) || (*pcVar5 == '/')) goto LAB_0040849a;\n    *(undefined8 *)(puVar4 + -0xff0) = 0x408446;\n    param_2 = unaff_RBX;\n    __ptr = (undefined *)FUN_0040ac10(puVar4 + -0xfe8,unaff_RBX,pcVar5);\n    if ((__ptr != (undefined *)0x0) && (*unaff_RBP = 0x5f, __ptr != puVar4 + -0xfe8)) {\n      *(undefined8 *)(puVar4 + -0xff0) = 0x40845f;\n      free(__ptr);\n    }\n    *(undefined8 *)(puVar4 + -0xff0) = 0x408467;\n    iVar2 = FUN_0040a000(puVar4 + -0xfe8);\n    if (iVar2 == 0) {\n      if ((-1 < iVar3) && (*(int *)(puVar4 + -0xfe8) == iVar3)) {\n        *(undefined8 *)(puVar4 + -0xff0) = 0x4084d8;\n        FUN_0040a070(puVar4 + -0xfe8);\n        *unaff_RBP = 9;\n        return 0xffffffff;\n      }\n      *(undefined8 *)(puVar4 + -0xff0) = 0x40847b;\n      iVar3 = fchdir(iVar3);\n      if (iVar3 != 0) {\n        uVar1 = *unaff_RBP;\n        *(undefined8 *)(puVar4 + -0xff0) = 0x4084c3;\n        FUN_0040a070(puVar4 + -0xfe8);\n        *unaff_RBP = uVar1;\n        return 0xffffffff;\n      }\n      *unaff_RBP = 0x5f;\n      *(undefined8 *)(puVar4 + -0xff0) = 0x40848e;\n      iVar3 = FUN_0040a050(puVar4 + -0xfe8);\n      if (iVar3 == 0) {\n        *(undefined8 *)(puVar4 + -0xff0) = 0x40849a;\n        FUN_0040a070(puVar4 + -0xfe8);\nLAB_0040849a:\n        *unaff_RBP = 0x5f;\n        return 0xffffffff;\n      }\n    }\n    else {\n      uVar1 = *unaff_RBP;\n      *(undefined8 *)(puVar4 + -0xff0) = 0x4084e9;\n      FUN_00409f50(uVar1);\n    }\n    param_1 = (ulong)*unaff_RBP;\n    *(undefined8 *)(puVar4 + -0xff0) = 0x4084f1;\n    FUN_00409f80();\n    puVar4 = puVar4 + -0xfe8;\n    unaff_R13 = pcVar5;\n  } while( true );\n}\n\n",
            "funcName": "thunk_408520"
        },
        {
            "funcStartAddr": "0x408530",
            "funcEndAddr": "0x40858c",
            "decompiledFuncCode": "\nulong FUN_00408530(uint *param_1)\n\n{\n  uint uVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  uVar1 = *param_1;\n  uVar3 = FUN_0040a3d0(param_1);\n  if ((uVar1 & 0x20) == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_00408530"
        },
        {
            "funcStartAddr": "0x408590",
            "funcEndAddr": "0x4085a0",
            "decompiledFuncCode": "\nvoid FUN_00408590(long param_1)\n\n{\n  *(undefined8 *)(param_1 + 0x10) = 0;\n  *(undefined4 *)(param_1 + 0x18) = 0x95f616;\n  return;\n}\n\n",
            "funcName": "FUN_00408590"
        },
        {
            "funcStartAddr": "0x4085a0",
            "funcEndAddr": "0x408614",
            "decompiledFuncCode": "\nundefined8 FUN_004085a0(long *param_1,long *param_2)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  long lVar3;\n  long lVar4;\n  \n  if (*(int *)(param_1 + 3) != 0x95f616) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"state->magic == 9827862\",\"lib/cycle-check.c\",0x3c,\"cycle_check\");\n  }\n  uVar2 = param_1[2];\n  lVar3 = param_2[1];\n  if (uVar2 == 0) {\n    param_1[2] = 1;\n  }\n  else {\n    if ((*param_1 == lVar3) && (*param_2 == param_1[1])) {\n      return 1;\n    }\n    uVar1 = uVar2 + 1;\n    param_1[2] = uVar1;\n    if ((uVar2 & uVar1) != 0) {\n      return 0;\n    }\n    if (uVar1 == 0) {\n      return 1;\n    }\n  }\n  lVar4 = *param_2;\n  *param_1 = lVar3;\n  param_1[1] = lVar4;\n  return 0;\n}\n\n",
            "funcName": "FUN_004085a0"
        },
        {
            "funcStartAddr": "0x408620",
            "funcEndAddr": "0x408666",
            "decompiledFuncCode": "\nvoid FUN_00408620(char *param_1,uint param_2,ulong param_3)\n\n{\n  int iVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  if ((param_2 & 0x40) != 0) {\n    uVar2 = param_3 & 0xffffffff;\n  }\n  iVar1 = open(param_1,param_2,uVar2);\n  FUN_0040a090(iVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00408620"
        },
        {
            "funcStartAddr": "0x408670",
            "funcEndAddr": "0x4086c6",
            "decompiledFuncCode": "\nbool FUN_00408670(int param_1)\n\n{\n  bool bVar1;\n  byte *pbVar2;\n  long lVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  bool bVar8;\n  byte bVar9;\n  \n  bVar9 = 0;\n  pbVar2 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar1 = true;\n  bVar6 = false;\n  bVar8 = pbVar2 == (byte *)0x0;\n  if (!bVar8) {\n    lVar3 = 2;\n    pbVar4 = pbVar2;\n    pbVar5 = &DAT_0040d054;\n    do {\n      if (lVar3 == 0) break;\n      lVar3 = lVar3 + -1;\n      bVar6 = *pbVar4 < *pbVar5;\n      bVar8 = *pbVar4 == *pbVar5;\n      pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      pbVar5 = pbVar5 + (ulong)bVar9 * -2 + 1;\n    } while (bVar8);\n    bVar1 = false;\n    bVar7 = false;\n    bVar6 = (!bVar6 && !bVar8) == bVar6;\n    if (!bVar6) {\n      lVar3 = 6;\n      pbVar4 = (byte *)\"POSIX\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar2 < *pbVar4;\n        bVar6 = *pbVar2 == *pbVar4;\n        pbVar2 = pbVar2 + (ulong)bVar9 * -2 + 1;\n        pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      } while (bVar6);\n      return (!bVar7 && !bVar6) != bVar7;\n    }\n  }\n  return bVar1;\n}\n\n",
            "funcName": "FUN_00408670"
        },
        {
            "funcStartAddr": "0x4086d0",
            "funcEndAddr": "0x408761",
            "decompiledFuncCode": "\nulong FUN_004086d0(ulong param_1)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long lVar5;\n  \n  uVar3 = 10;\n  if (9 < param_1) {\n    uVar3 = param_1;\n  }\n  uVar3 = uVar3 | 1;\n  do {\n    if (uVar3 == 0xffffffffffffffff) {\n      return 0xffffffffffffffff;\n    }\n    uVar1 = uVar3 % 3;\n    if (uVar3 < 10) {\nLAB_00408750:\n      if (uVar1 != 0) {\n        return uVar3;\n      }\n    }\n    else if (uVar1 != 0) {\n      lVar5 = 0x10;\n      uVar4 = 9;\n      uVar2 = 3;\n      do {\n        uVar2 = uVar2 + 2;\n        uVar4 = uVar4 + lVar5;\n        uVar1 = uVar3 % uVar2;\n        if (uVar3 <= uVar4) goto LAB_00408750;\n        lVar5 = lVar5 + 8;\n      } while (uVar1 != 0);\n    }\n    uVar3 = uVar3 + 2;\n  } while( true );\n}\n\n",
            "funcName": "FUN_004086d0"
        },
        {
            "funcStartAddr": "0x408770",
            "funcEndAddr": "0x408780",
            "decompiledFuncCode": "\nulong FUN_00408770(ulong param_1,ulong param_2)\n\n{\n  return (param_1 >> 3 | param_1 << 0x3d) % param_2;\n}\n\n",
            "funcName": "FUN_00408770"
        },
        {
            "funcStartAddr": "0x408780",
            "funcEndAddr": "0x408787",
            "decompiledFuncCode": "\nbool FUN_00408780(long param_1,long param_2)\n\n{\n  return param_1 == param_2;\n}\n\n",
            "funcName": "FUN_00408780"
        },
        {
            "funcStartAddr": "0x408790",
            "funcEndAddr": "0x4087b1",
            "decompiledFuncCode": "\nlong FUN_00408790(long *param_1,undefined8 param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = (*(code *)param_1[6])(param_2,param_1[2]);\n  if (uVar1 <= (ulong)param_1[2] && param_1[2] != uVar1) {\n    return uVar1 * 0x10 + *param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00408790"
        },
        {
            "funcStartAddr": "0x4087c0",
            "funcEndAddr": "0x4088c5",
            "decompiledFuncCode": "\nlong FUN_004087c0(long param_1,long param_2,long **param_3,char param_4)\n\n{\n  undefined8 *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  char cVar5;\n  long *plVar6;\n  long *plVar7;\n  long lVar8;\n  \n  plVar6 = (long *)FUN_00408790();\n  *param_3 = plVar6;\n  lVar8 = *plVar6;\n  if (lVar8 == 0) {\n    return 0;\n  }\n  if (lVar8 != param_2) {\n    cVar5 = (**(code **)(param_1 + 0x38))(param_2);\n    if (cVar5 == '\\0') {\n      plVar7 = (long *)plVar6[1];\n      if (plVar7 == (long *)0x0) {\n        return 0;\n      }\n      lVar8 = *plVar7;\n      do {\n        if (param_2 == lVar8) {\nLAB_0040884c:\n          if (param_4 == '\\0') {\n            return lVar8;\n          }\n          plVar6[1] = plVar7[1];\n          *plVar7 = 0;\n          plVar7[1] = *(long *)(param_1 + 0x48);\n          *(long **)(param_1 + 0x48) = plVar7;\n          return lVar8;\n        }\n        cVar5 = (**(code **)(param_1 + 0x38))(param_2);\n        if (cVar5 != '\\0') {\n          plVar7 = (long *)plVar6[1];\n          lVar8 = *plVar7;\n          goto LAB_0040884c;\n        }\n        plVar6 = (long *)plVar6[1];\n        plVar7 = (long *)plVar6[1];\n        if (plVar7 == (long *)0x0) {\n          return 0;\n        }\n        lVar8 = *plVar7;\n      } while( true );\n    }\n    lVar8 = *plVar6;\n  }\n  if (param_4 != '\\0') {\n    puVar1 = (undefined8 *)plVar6[1];\n    if (puVar1 != (undefined8 *)0x0) {\n      uVar2 = *(undefined4 *)((long)puVar1 + 4);\n      uVar3 = *(undefined4 *)(puVar1 + 1);\n      uVar4 = *(undefined4 *)((long)puVar1 + 0xc);\n      *(undefined4 *)plVar6 = *(undefined4 *)puVar1;\n      *(undefined4 *)((long)plVar6 + 4) = uVar2;\n      *(undefined4 *)(plVar6 + 1) = uVar3;\n      *(undefined4 *)((long)plVar6 + 0xc) = uVar4;\n      *puVar1 = 0;\n      puVar1[1] = *(undefined8 *)(param_1 + 0x48);\n      *(undefined8 **)(param_1 + 0x48) = puVar1;\n      return lVar8;\n    }\n    *plVar6 = 0;\n  }\n  return lVar8;\n}\n\n",
            "funcName": "FUN_004087c0"
        },
        {
            "funcStartAddr": "0x4088e0",
            "funcEndAddr": "0x40895a",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_004088e0(float **param_1)\n\n{\n  float fVar1;\n  float *pfVar2;\n  float fVar3;\n  \n  pfVar2 = *param_1;\n  if (pfVar2 == (float *)&DAT_0040d0d0) {\n    return 1;\n  }\n  fVar1 = pfVar2[2];\n  if ((((_DAT_0040d0e4 < fVar1) && (fVar1 < DAT_0040d0e8)) && (_DAT_0040d0ec < pfVar2[3])) &&\n     (_DAT_0040d0f0 <= *pfVar2)) {\n    fVar3 = *pfVar2 + _DAT_0040d0e4;\n    if (((fVar3 < pfVar2[1]) && (pfVar2[1] <= DAT_0040d0f4)) && (fVar3 < fVar1)) {\n      return 1;\n    }\n  }\n  *param_1 = (float *)&DAT_0040d0d0;\n  return 0;\n}\n\n",
            "funcName": "FUN_004088e0"
        },
        {
            "funcStartAddr": "0x408960",
            "funcEndAddr": "0x408a9a",
            "decompiledFuncCode": "\nundefined8 FUN_00408960(long param_1,long **param_2,char param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  long lVar6;\n  \n  plVar5 = *param_2;\n  if (param_2[1] <= plVar5) {\n    return 1;\n  }\n  do {\n    while (lVar6 = *plVar5, lVar6 == 0) {\nLAB_00408988:\n      plVar5 = plVar5 + 2;\n      if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n        return 1;\n      }\n    }\n    plVar3 = (long *)plVar5[1];\n    if ((long *)plVar5[1] != (long *)0x0) {\n      do {\n        while( true ) {\n          lVar6 = *plVar3;\n          plVar2 = (long *)FUN_00408790(param_1,lVar6);\n          plVar4 = (long *)plVar3[1];\n          if (*plVar2 != 0) break;\n          *plVar2 = lVar6;\n          *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n          *plVar3 = 0;\n          plVar3[1] = *(long *)(param_1 + 0x48);\n          *(long **)(param_1 + 0x48) = plVar3;\n          plVar3 = plVar4;\n          if (plVar4 == (long *)0x0) goto LAB_004089ff;\n        }\n        plVar3[1] = plVar2[1];\n        plVar2[1] = (long)plVar3;\n        plVar3 = plVar4;\n      } while (plVar4 != (long *)0x0);\nLAB_004089ff:\n      lVar6 = *plVar5;\n    }\n    plVar5[1] = 0;\n    if (param_3 != '\\0') goto LAB_00408988;\n    plVar3 = (long *)FUN_00408790(param_1,lVar6);\n    if (*plVar3 == 0) {\n      *plVar3 = lVar6;\n      *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n    }\n    else {\n      plVar4 = *(long **)(param_1 + 0x48);\n      if (plVar4 == (long *)0x0) {\n        plVar4 = (long *)malloc(0x10);\n        if (plVar4 == (long *)0x0) {\n          return 0;\n        }\n      }\n      else {\n        *(long *)(param_1 + 0x48) = plVar4[1];\n      }\n      lVar1 = plVar3[1];\n      *plVar4 = lVar6;\n      plVar4[1] = lVar1;\n      plVar3[1] = (long)plVar4;\n    }\n    *plVar5 = 0;\n    plVar5 = plVar5 + 2;\n    param_2[3] = (long *)((long)param_2[3] + -1);\n    if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n      return 1;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_00408960"
        },
        {
            "funcStartAddr": "0x408ab0",
            "funcEndAddr": "0x408ab5",
            "decompiledFuncCode": "\nundefined8 FUN_00408ab0(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x10);\n}\n\n",
            "funcName": "FUN_00408ab0"
        },
        {
            "funcStartAddr": "0x408ac0",
            "funcEndAddr": "0x408ac5",
            "decompiledFuncCode": "\nundefined8 FUN_00408ac0(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x18);\n}\n\n",
            "funcName": "FUN_00408ac0"
        },
        {
            "funcStartAddr": "0x408ad0",
            "funcEndAddr": "0x408ad5",
            "decompiledFuncCode": "\nundefined8 FUN_00408ad0(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x20);\n}\n\n",
            "funcName": "FUN_00408ad0"
        },
        {
            "funcStartAddr": "0x408ae0",
            "funcEndAddr": "0x408b2f",
            "decompiledFuncCode": "\nvoid FUN_00408ae0(long **param_1)\n\n{\n  long *plVar1;\n  long lVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  plVar1 = param_1[1];\n  uVar3 = 0;\n  if (plVar1 <= plVar5) {\n    return;\n  }\n  do {\n    while (*plVar5 == 0) {\n      plVar5 = plVar5 + 2;\n      if (plVar1 <= plVar5) {\n        return;\n      }\n    }\n    uVar4 = 1;\n    for (lVar2 = plVar5[1]; lVar2 != 0; lVar2 = *(long *)(lVar2 + 8)) {\n      uVar4 = uVar4 + 1;\n    }\n    if (uVar3 < uVar4) {\n      uVar3 = uVar4;\n    }\n    plVar5 = plVar5 + 2;\n  } while (plVar5 < plVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00408ae0"
        },
        {
            "funcStartAddr": "0x408b30",
            "funcEndAddr": "0x408b92",
            "decompiledFuncCode": "\nbool FUN_00408b30(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  \n  plVar2 = *param_1;\n  plVar3 = (long *)0x0;\n  plVar4 = (long *)0x0;\n  do {\n    while( true ) {\n      if (param_1[1] <= plVar2) {\n        if (param_1[3] != plVar4) {\n          return false;\n        }\n        return param_1[4] == plVar3;\n      }\n      if (*plVar2 != 0) break;\nLAB_00408b48:\n      plVar2 = plVar2 + 2;\n    }\n    lVar1 = plVar2[1];\n    plVar4 = (long *)((long)plVar4 + 1);\n    plVar3 = (long *)((long)plVar3 + 1);\n    if (lVar1 == 0) goto LAB_00408b48;\n    do {\n      lVar1 = *(long *)(lVar1 + 8);\n      plVar3 = (long *)((long)plVar3 + 1);\n    } while (lVar1 != 0);\n    plVar2 = plVar2 + 2;\n  } while( true );\n}\n\n",
            "funcName": "FUN_00408b30"
        },
        {
            "funcStartAddr": "0x408ba0",
            "funcEndAddr": "0x408cdc",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00408ba0(long **param_1,undefined8 param_2)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long lVar3;\n  ulong uVar4;\n  ulong uVar5;\n  long *plVar6;\n  double dVar7;\n  double dVar8;\n  \n  uVar5 = 0;\n  plVar1 = param_1[2];\n  plVar2 = param_1[3];\n  for (plVar6 = *param_1; plVar6 < param_1[1]; plVar6 = plVar6 + 2) {\n    while (*plVar6 != 0) {\n      uVar4 = 1;\n      for (lVar3 = plVar6[1]; lVar3 != 0; lVar3 = *(long *)(lVar3 + 8)) {\n        uVar4 = uVar4 + 1;\n      }\n      if (uVar5 < uVar4) {\n        uVar5 = uVar4;\n      }\n      plVar6 = plVar6 + 2;\n      if (param_1[1] <= plVar6) goto LAB_00408c0d;\n    }\n  }\nLAB_00408c0d:\n  __fprintf_chk(param_2,1,\"# entries:         %lu\\n\",param_1[4]);\n  __fprintf_chk(param_2,1,\"# buckets:         %lu\\n\",plVar1);\n  if ((long)plVar2 < 0) {\n    dVar7 = (double)((ulong)plVar2 >> 1 | (ulong)((uint)plVar2 & 1));\n    dVar7 = dVar7 + dVar7;\n  }\n  else {\n    dVar7 = (double)(long)plVar2;\n  }\n  if ((long)plVar1 < 0) {\n    dVar8 = (double)((ulong)plVar1 >> 1 | (ulong)((uint)plVar1 & 1));\n    dVar8 = dVar8 + dVar8;\n  }\n  else {\n    dVar8 = (double)(long)plVar1;\n  }\n  __fprintf_chk((dVar7 * _DAT_0040d108) / dVar8,param_2,1,\"# buckets used:    %lu (%.2f%%)\\n\",plVar2\n               );\n  __fprintf_chk(param_2,1,\"max bucket length: %lu\\n\",uVar5);\n  return;\n}\n\n",
            "funcName": "FUN_00408ba0"
        },
        {
            "funcStartAddr": "0x408cf0",
            "funcEndAddr": "0x408d3b",
            "decompiledFuncCode": "\nlong FUN_00408cf0(long param_1,long param_2)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  \n  plVar2 = (long *)FUN_00408790();\n  lVar3 = *plVar2;\n  if (lVar3 == 0) {\n    return 0;\n  }\n  while( true ) {\n    if (lVar3 == param_2) {\n      return param_2;\n    }\n    cVar1 = (**(code **)(param_1 + 0x38))(param_2);\n    if (cVar1 != '\\0') break;\n    plVar2 = (long *)plVar2[1];\n    if (plVar2 == (long *)0x0) {\n      return 0;\n    }\n    lVar3 = *plVar2;\n  }\n  return *plVar2;\n}\n\n",
            "funcName": "FUN_00408cf0"
        },
        {
            "funcStartAddr": "0x408d50",
            "funcEndAddr": "0x408d8a",
            "decompiledFuncCode": "\nlong FUN_00408d50(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  \n  if (param_1[4] == (long *)0x0) {\n    return 0;\n  }\n  plVar2 = *param_1;\n  if (param_1[1] <= plVar2) {\n    lVar1 = FUN_00401da2();\n    return lVar1;\n  }\n  do {\n    if (*plVar2 != 0) {\n      return *plVar2;\n    }\n    plVar2 = plVar2 + 2;\n  } while (plVar2 < param_1[1]);\n  lVar1 = FUN_00401da2();\n  return lVar1;\n}\n\n",
            "funcName": "FUN_00408d50"
        },
        {
            "funcStartAddr": "0x408da0",
            "funcEndAddr": "0x408df9",
            "decompiledFuncCode": "\nlong FUN_00408da0(long param_1,long param_2)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  \n  plVar2 = (long *)FUN_00408790();\n  plVar3 = plVar2;\n  do {\n    lVar1 = *plVar3;\n    plVar3 = (long *)plVar3[1];\n    if (lVar1 == param_2) {\n      if (plVar3 != (long *)0x0) {\n        return *plVar3;\n      }\n      break;\n    }\n  } while (plVar3 != (long *)0x0);\n  do {\n    plVar2 = plVar2 + 2;\n    if (*(long **)(param_1 + 8) <= plVar2) {\n      return 0;\n    }\n  } while (*plVar2 == 0);\n  return *plVar2;\n}\n\n",
            "funcName": "FUN_00408da0"
        },
        {
            "funcStartAddr": "0x408e10",
            "funcEndAddr": "0x408e70",
            "decompiledFuncCode": "\nulong FUN_00408e10(long **param_1,long param_2,ulong param_3)\n\n{\n  undefined8 *puVar1;\n  ulong uVar2;\n  long *plVar3;\n  \n  plVar3 = *param_1;\n  if (param_1[1] < plVar3 || param_1[1] == plVar3) {\n    return 0;\n  }\n  uVar2 = 0;\n  do {\n    if (*plVar3 != 0) {\n      if (param_3 <= uVar2) {\n        return uVar2;\n      }\n      *(long *)(param_2 + uVar2 * 8) = *plVar3;\n      uVar2 = uVar2 + 1;\n      for (puVar1 = (undefined8 *)plVar3[1]; puVar1 != (undefined8 *)0x0;\n          puVar1 = (undefined8 *)puVar1[1]) {\n        if (param_3 == uVar2) {\n          return param_3;\n        }\n        uVar2 = uVar2 + 1;\n        *(undefined8 *)(param_2 + -8 + uVar2 * 8) = *puVar1;\n      }\n    }\n    plVar3 = plVar3 + 2;\n  } while (plVar3 <= param_1[1] && param_1[1] != plVar3);\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00408e10"
        },
        {
            "funcStartAddr": "0x408e80",
            "funcEndAddr": "0x408eeb",
            "decompiledFuncCode": "\nlong FUN_00408e80(long **param_1,code *param_2,undefined8 param_3)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  long lVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (param_1[1] < plVar5 || param_1[1] == plVar5) {\n    lVar3 = 0;\n  }\n  else {\n    lVar3 = 0;\n    do {\n      lVar4 = *plVar5;\n      plVar2 = plVar5;\n      if (lVar4 != 0) {\n        while( true ) {\n          cVar1 = (*param_2)(lVar4,param_3);\n          if (cVar1 == '\\0') {\n            return lVar3;\n          }\n          plVar2 = (long *)plVar2[1];\n          lVar3 = lVar3 + 1;\n          if (plVar2 == (long *)0x0) break;\n          lVar4 = *plVar2;\n        }\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\n  return lVar3;\n}\n\n",
            "funcName": "FUN_00408e80"
        },
        {
            "funcStartAddr": "0x408f00",
            "funcEndAddr": "0x408f31",
            "decompiledFuncCode": "\nulong FUN_00408f00(byte *param_1,ulong param_2)\n\n{\n  byte bVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  bVar1 = *param_1;\n  while (bVar1 != 0) {\n    param_1 = param_1 + 1;\n    uVar2 = (uVar2 * 0x1f + (ulong)bVar1) % param_2;\n    bVar1 = *param_1;\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00408f00"
        },
        {
            "funcStartAddr": "0x408f40",
            "funcEndAddr": "0x408f60",
            "decompiledFuncCode": "\nvoid FUN_00408f40(undefined8 *param_1)\n\n{\n  *(undefined *)(param_1 + 2) = 0;\n  *param_1 = 0x3f80000000000000;\n  param_1[1] = 0x3fb4fdf43f4ccccd;\n  return;\n}\n\n",
            "funcName": "FUN_00408f40"
        },
        {
            "funcStartAddr": "0x408f60",
            "funcEndAddr": "0x4090e0",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid ** FUN_00408f60(ulong param_1,void *param_2,code *param_3,code *param_4,void *param_5)\n\n{\n  char cVar1;\n  void **__ptr;\n  void *__nmemb;\n  void *pvVar2;\n  float fVar3;\n  float fVar4;\n  \n  if (param_3 == (code *)0x0) {\n    param_3 = FUN_00408770;\n  }\n  if (param_4 == (code *)0x0) {\n    param_4 = FUN_00408780;\n  }\n  __ptr = (void **)malloc(0x50);\n  if (__ptr == (void **)0x0) {\n    return (void **)0x0;\n  }\n  if (param_2 == (void *)0x0) {\n    __ptr[5] = &DAT_0040d0d0;\n    cVar1 = FUN_004088e0(__ptr + 5);\n    if (cVar1 == '\\0') goto LAB_00409040;\n    fVar4 = DAT_0040d0f8;\n    if ((long)param_1 < 0) goto LAB_004090c3;\nLAB_0040907e:\n    fVar3 = (float)param_1;\nLAB_00409087:\n    fVar3 = fVar3 / fVar4;\n    if (_DAT_0040d0fc <= fVar3) goto LAB_00409040;\n    if (fVar3 < _DAT_0040d100) {\n      param_1 = (ulong)fVar3;\n    }\n    else {\n      param_1 = (long)(fVar3 - _DAT_0040d100) ^ 0x8000000000000000;\n    }\n  }\n  else {\n    __ptr[5] = param_2;\n    cVar1 = FUN_004088e0(__ptr + 5);\n    if (cVar1 == '\\0') goto LAB_00409040;\n    if (*(char *)((long)param_2 + 0x10) == '\\0') {\n      fVar4 = *(float *)((long)param_2 + 8);\n      if (-1 < (long)param_1) goto LAB_0040907e;\nLAB_004090c3:\n      fVar3 = (float)(param_1 >> 1 | (ulong)((uint)param_1 & 1));\n      fVar3 = fVar3 + fVar3;\n      goto LAB_00409087;\n    }\n  }\n  __nmemb = (void *)FUN_004086d0(param_1);\n  if (((((ulong)__nmemb >> 0x3c & 1) == 0) && ((ulong)__nmemb >> 0x3d == 0)) &&\n     (__ptr[2] = __nmemb, __nmemb != (void *)0x0)) {\n    pvVar2 = calloc((size_t)__nmemb,0x10);\n    *__ptr = pvVar2;\n    if (pvVar2 != (void *)0x0) {\n      __ptr[3] = (void *)0x0;\n      __ptr[4] = (void *)0x0;\n      __ptr[1] = (void *)((long)__nmemb * 0x10 + (long)pvVar2);\n      __ptr[6] = param_3;\n      __ptr[7] = param_4;\n      __ptr[8] = param_5;\n      __ptr[9] = (void *)0x0;\n      return __ptr;\n    }\n  }\nLAB_00409040:\n  free(__ptr);\n  return (void **)0x0;\n}\n\n",
            "funcName": "FUN_00408f60"
        },
        {
            "funcStartAddr": "0x4090f0",
            "funcEndAddr": "0x409195",
            "decompiledFuncCode": "\nvoid FUN_004090f0(long **param_1)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (*param_1 < param_1[1]) {\n    do {\n      while (*plVar5 != 0) {\n        plVar4 = param_1[8];\n        plVar3 = (long *)plVar5[1];\n        while (plVar3 != (long *)0x0) {\n          if (plVar4 != (long *)0x0) {\n            (*(code *)plVar4)(*plVar3);\n            plVar4 = param_1[8];\n          }\n          plVar1 = (long *)plVar3[1];\n          plVar2 = param_1[9];\n          *plVar3 = 0;\n          plVar3[1] = (long)plVar2;\n          param_1[9] = plVar3;\n          plVar3 = plVar1;\n        }\n        if (plVar4 != (long *)0x0) {\n          (*(code *)plVar4)(*plVar5);\n        }\n        *plVar5 = 0;\n        plVar4 = plVar5 + 2;\n        plVar5[1] = 0;\n        plVar5 = plVar4;\n        if (param_1[1] < plVar4 || param_1[1] == plVar4) goto LAB_00409183;\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\nLAB_00409183:\n  param_1[3] = (long *)0x0;\n  param_1[4] = (long *)0x0;\n  return;\n}\n\n",
            "funcName": "FUN_004090f0"
        },
        {
            "funcStartAddr": "0x4091a0",
            "funcEndAddr": "0x409270",
            "decompiledFuncCode": "\nvoid FUN_004091a0(long **param_1)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long lVar5;\n  \n  plVar4 = *param_1;\n  plVar2 = param_1[1];\n  if ((param_1[8] != (long *)0x0) && (param_1[4] != (long *)0x0)) {\n    if (plVar2 <= plVar4) goto LAB_0040923c;\n    do {\n      while (lVar5 = *plVar4, plVar3 = plVar4, lVar5 == 0) {\n        plVar4 = plVar4 + 2;\n        if (plVar2 <= plVar4) goto LAB_004091ff;\n      }\n      while( true ) {\n        (*(code *)param_1[8])(lVar5);\n        plVar3 = (long *)plVar3[1];\n        if (plVar3 == (long *)0x0) break;\n        lVar5 = *plVar3;\n      }\n      plVar2 = param_1[1];\n      plVar4 = plVar4 + 2;\n    } while (plVar4 < plVar2);\nLAB_004091ff:\n    plVar4 = *param_1;\n  }\n  if (plVar4 < plVar2) {\n    do {\n      __ptr = (void *)plVar4[1];\n      while (__ptr != (void *)0x0) {\n        pvVar1 = *(void **)((long)__ptr + 8);\n        free(__ptr);\n        __ptr = pvVar1;\n      }\n      plVar4 = plVar4 + 2;\n    } while (plVar4 <= param_1[1] && param_1[1] != plVar4);\n  }\nLAB_0040923c:\n  plVar4 = param_1[9];\n  while (plVar4 != (long *)0x0) {\n    plVar2 = (long *)plVar4[1];\n    free(plVar4);\n    plVar4 = plVar2;\n  }\n  free(*param_1);\n  free(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_004091a0"
        },
        {
            "funcStartAddr": "0x409280",
            "funcEndAddr": "0x40946b",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined4 FUN_00409280(void **param_1,ulong param_2)\n\n{\n  char cVar1;\n  undefined4 uVar2;\n  float fVar3;\n  void *local_68;\n  void *local_60;\n  void *local_58;\n  void *local_50;\n  undefined8 local_48;\n  void *local_40;\n  void *local_38;\n  void *local_30;\n  void *local_28;\n  void *local_20;\n  \n  local_40 = param_1[5];\n  if (*(char *)((long)local_40 + 0x10) == '\\0') {\n    if ((long)param_2 < 0) {\n      fVar3 = (float)(param_2 >> 1 | (ulong)((uint)param_2 & 1));\n      fVar3 = fVar3 + fVar3;\n    }\n    else {\n      fVar3 = (float)param_2;\n    }\n    fVar3 = fVar3 / *(float *)((long)local_40 + 8);\n    if (_DAT_0040d0fc <= fVar3) {\n      return 0;\n    }\n    if (fVar3 < _DAT_0040d100) {\n      param_2 = (ulong)fVar3;\n    }\n    else {\n      param_2 = (long)(fVar3 - _DAT_0040d100) ^ 0x8000000000000000;\n    }\n  }\n  local_58 = (void *)FUN_004086d0(param_2);\n  if ((local_58 != (void *)0x0) && (-1 < (long)local_58 * 8 && (ulong)local_58 >> 0x3d == 0)) {\n    if (param_1[2] == local_58) {\n      return 1;\n    }\n    local_68 = calloc((size_t)local_58,0x10);\n    if (local_68 != (void *)0x0) {\n      local_60 = (void *)((long)local_58 * 0x10 + (long)local_68);\n      local_38 = param_1[6];\n      local_50 = (void *)0x0;\n      local_30 = param_1[7];\n      local_48 = 0;\n      local_28 = param_1[8];\n      local_20 = param_1[9];\n      uVar2 = FUN_00408960(&local_68,param_1,0);\n      if ((char)uVar2 != '\\0') {\n        free(*param_1);\n        *param_1 = local_68;\n        param_1[1] = local_60;\n        param_1[2] = local_58;\n        param_1[3] = local_50;\n        param_1[9] = local_20;\n        return uVar2;\n      }\n      param_1[9] = local_20;\n      cVar1 = FUN_00408960(param_1,&local_68,1);\n      if ((cVar1 != '\\0') && (cVar1 = FUN_00408960(param_1,&local_68,0), cVar1 != '\\0')) {\n        free(local_68);\n        return uVar2;\n      }\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_00409280"
        },
        {
            "funcStartAddr": "0x409480",
            "funcEndAddr": "0x4096d1",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_00409480(long param_1,long param_2,long *param_3)\n\n{\n  char cVar1;\n  long lVar2;\n  ulong uVar3;\n  long *plVar4;\n  undefined8 uVar5;\n  ulong uVar6;\n  float fVar7;\n  float fVar8;\n  long *local_20;\n  \n  if (param_2 == 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  lVar2 = FUN_004087c0(param_1,param_2,&local_20,0);\n  if (lVar2 != 0) {\n    if (param_3 != (long *)0x0) {\n      *param_3 = lVar2;\n    }\n    return 0;\n  }\n  uVar6 = *(ulong *)(param_1 + 0x18);\n  if ((long)uVar6 < 0) {\n    uVar3 = *(ulong *)(param_1 + 0x10);\n    fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n    lVar2 = *(long *)(param_1 + 0x28);\n    fVar7 = fVar7 + fVar7;\n    if ((long)uVar3 < 0) goto LAB_0040957a;\nLAB_004094eb:\n    if (fVar7 <= (float)uVar3 * *(float *)(lVar2 + 8)) goto LAB_00409502;\n  }\n  else {\n    lVar2 = *(long *)(param_1 + 0x28);\n    fVar7 = (float)uVar6;\n    uVar3 = *(ulong *)(param_1 + 0x10);\n    if (-1 < (long)uVar3) goto LAB_004094eb;\nLAB_0040957a:\n    fVar8 = (float)(uVar3 >> 1 | (ulong)((uint)uVar3 & 1));\n    if (fVar7 <= (fVar8 + fVar8) * *(float *)(lVar2 + 8)) goto LAB_00409502;\n  }\n  FUN_004088e0(param_1 + 0x28);\n  lVar2 = *(long *)(param_1 + 0x28);\n  uVar6 = *(ulong *)(param_1 + 0x10);\n  if ((long)uVar6 < 0) {\n    fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n    fVar7 = fVar7 + fVar7;\n  }\n  else {\n    fVar7 = (float)uVar6;\n  }\n  uVar6 = *(ulong *)(param_1 + 0x18);\n  if ((long)uVar6 < 0) {\n    fVar8 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n    fVar8 = fVar8 + fVar8;\n  }\n  else {\n    fVar8 = (float)uVar6;\n  }\n  if (*(float *)(lVar2 + 8) * fVar7 < fVar8) {\n    fVar7 = fVar7 * *(float *)(lVar2 + 0xc);\n    if (*(char *)(lVar2 + 0x10) == '\\0') {\n      fVar7 = fVar7 * *(float *)(lVar2 + 8);\n    }\n    if (_DAT_0040d0fc <= fVar7) {\n      return 0xffffffff;\n    }\n    if (_DAT_0040d100 <= fVar7) {\n      uVar6 = (long)(fVar7 - _DAT_0040d100) ^ 0x8000000000000000;\n    }\n    else {\n      uVar6 = (ulong)fVar7;\n    }\n    cVar1 = FUN_00409280(param_1,uVar6);\n    if (cVar1 == '\\0') {\n      return 0xffffffff;\n    }\n    lVar2 = FUN_004087c0(param_1,param_2,&local_20,0);\n    if (lVar2 != 0) {\n      uVar5 = FUN_00401dac();\n      return uVar5;\n    }\n  }\nLAB_00409502:\n  if (*local_20 == 0) {\n    *local_20 = param_2;\n    *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n    *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n    return 1;\n  }\n  plVar4 = *(long **)(param_1 + 0x48);\n  if (plVar4 == (long *)0x0) {\n    plVar4 = (long *)malloc(0x10);\n    if (plVar4 == (long *)0x0) {\n      return 0xffffffff;\n    }\n  }\n  else {\n    *(long *)(param_1 + 0x48) = plVar4[1];\n  }\n  lVar2 = local_20[1];\n  *plVar4 = param_2;\n  plVar4[1] = lVar2;\n  local_20[1] = (long)plVar4;\n  *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n  return 1;\n}\n\n",
            "funcName": "FUN_00409480"
        },
        {
            "funcStartAddr": "0x409700",
            "funcEndAddr": "0x409734",
            "decompiledFuncCode": "\nundefined8 FUN_00409700(undefined8 param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  undefined8 local_10;\n  \n  iVar1 = FUN_00409480(param_1,param_2,&local_10);\n  if (iVar1 != -1) {\n    if (iVar1 == 0) {\n      param_2 = local_10;\n    }\n    return param_2;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_00409700"
        },
        {
            "funcStartAddr": "0x409740",
            "funcEndAddr": "0x4098ff",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nlong FUN_00409740(long param_1,undefined8 param_2)\n\n{\n  float *pfVar1;\n  ulong uVar2;\n  void *pvVar3;\n  void *__ptr;\n  char cVar4;\n  long lVar5;\n  ulong uVar6;\n  float fVar7;\n  float fVar8;\n  long *local_20;\n  \n  lVar5 = FUN_004087c0(param_1,param_2,&local_20,1);\n  if (lVar5 == 0) {\n    return 0;\n  }\n  *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + -1;\n  if (*local_20 == 0) {\n    uVar6 = *(long *)(param_1 + 0x18) - 1;\n    *(ulong *)(param_1 + 0x18) = uVar6;\n    if ((long)uVar6 < 0) {\n      uVar2 = *(ulong *)(param_1 + 0x10);\n      fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n      pfVar1 = *(float **)(param_1 + 0x28);\n      fVar7 = fVar7 + fVar7;\n    }\n    else {\n      pfVar1 = *(float **)(param_1 + 0x28);\n      fVar7 = (float)uVar6;\n      uVar2 = *(ulong *)(param_1 + 0x10);\n    }\n    if ((long)uVar2 < 0) {\n      fVar8 = (float)(uVar2 >> 1 | (ulong)((uint)uVar2 & 1));\n      fVar8 = fVar8 + fVar8;\n    }\n    else {\n      fVar8 = (float)uVar2;\n    }\n    if (fVar7 < fVar8 * *pfVar1) {\n      FUN_004088e0(param_1 + 0x28);\n      uVar6 = *(ulong *)(param_1 + 0x10);\n      pfVar1 = *(float **)(param_1 + 0x28);\n      if ((long)uVar6 < 0) {\n        fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n        fVar7 = fVar7 + fVar7;\n      }\n      else {\n        fVar7 = (float)uVar6;\n      }\n      uVar6 = *(ulong *)(param_1 + 0x18);\n      if ((long)uVar6 < 0) {\n        fVar8 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n        fVar8 = fVar8 + fVar8;\n      }\n      else {\n        fVar8 = (float)uVar6;\n      }\n      if (fVar8 < *pfVar1 * fVar7) {\n        fVar7 = fVar7 * pfVar1[1];\n        if (*(char *)(pfVar1 + 4) == '\\0') {\n          fVar7 = fVar7 * pfVar1[2];\n        }\n        if (_DAT_0040d100 <= fVar7) {\n          uVar6 = (long)(fVar7 - _DAT_0040d100) ^ 0x8000000000000000;\n        }\n        else {\n          uVar6 = (ulong)fVar7;\n        }\n        cVar4 = FUN_00409280(param_1,uVar6);\n        if (cVar4 == '\\0') {\n          __ptr = *(void **)(param_1 + 0x48);\n          while (__ptr != (void *)0x0) {\n            pvVar3 = *(void **)((long)__ptr + 8);\n            free(__ptr);\n            __ptr = pvVar3;\n          }\n          *(undefined8 *)(param_1 + 0x48) = 0;\n        }\n      }\n    }\n    return lVar5;\n  }\n  return lVar5;\n}\n\n",
            "funcName": "FUN_00409740"
        },
        {
            "funcStartAddr": "0x409920",
            "funcEndAddr": "0x40993b",
            "decompiledFuncCode": "\nvoid FUN_00409920(undefined4 *param_1,undefined4 param_2)\n\n{\n  *(undefined8 *)(param_1 + 5) = 0;\n  *(undefined *)(param_1 + 7) = 1;\n  *param_1 = param_2;\n  param_1[1] = param_2;\n  param_1[2] = param_2;\n  param_1[3] = param_2;\n  param_1[4] = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_00409920"
        },
        {
            "funcStartAddr": "0x409940",
            "funcEndAddr": "0x409945",
            "decompiledFuncCode": "\nundefined FUN_00409940(long param_1)\n\n{\n  return *(undefined *)(param_1 + 0x1c);\n}\n\n",
            "funcName": "FUN_00409940"
        },
        {
            "funcStartAddr": "0x409950",
            "funcEndAddr": "0x409985",
            "decompiledFuncCode": "\nundefined4 FUN_00409950(long param_1,undefined4 param_2)\n\n{\n  undefined4 *puVar1;\n  undefined4 uVar2;\n  uint uVar3;\n  uint uVar4;\n  \n  uVar4 = (uint)(*(byte *)(param_1 + 0x1c) ^ 1);\n  uVar3 = *(int *)(param_1 + 0x14) + uVar4 & 3;\n  puVar1 = (undefined4 *)(param_1 + (ulong)uVar3 * 4);\n  uVar2 = *puVar1;\n  *puVar1 = param_2;\n  *(uint *)(param_1 + 0x14) = uVar3;\n  if (*(uint *)(param_1 + 0x18) == uVar3) {\n    *(uint *)(param_1 + 0x18) = uVar4 + *(uint *)(param_1 + 0x18) & 3;\n  }\n  *(undefined *)(param_1 + 0x1c) = 0;\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00409950"
        },
        {
            "funcStartAddr": "0x409990",
            "funcEndAddr": "0x4099cb",
            "decompiledFuncCode": "\nundefined4 FUN_00409990(long param_1)\n\n{\n  undefined4 *puVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  \n  if (*(char *)(param_1 + 0x1c) != '\\0') {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  uVar2 = *(uint *)(param_1 + 0x14);\n  puVar1 = (undefined4 *)(param_1 + (ulong)uVar2 * 4);\n  uVar3 = *puVar1;\n  *puVar1 = *(undefined4 *)(param_1 + 0x10);\n  if (uVar2 != *(uint *)(param_1 + 0x18)) {\n    *(uint *)(param_1 + 0x14) = uVar2 + 3 & 3;\n    return uVar3;\n  }\n  *(undefined *)(param_1 + 0x1c) = 1;\n  return uVar3;\n}\n\n",
            "funcName": "FUN_00409990"
        },
        {
            "funcStartAddr": "0x4099e0",
            "funcEndAddr": "0x409f34",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nchar * FUN_004099e0(void)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  char *__s1;\n  size_t sVar5;\n  size_t sVar6;\n  char *pcVar7;\n  size_t __n;\n  char *__file;\n  FILE *__stream;\n  byte *pbVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  long lVar11;\n  ulong uVar12;\n  undefined8 *puVar13;\n  char *__ptr;\n  bool bVar14;\n  long local_d0;\n  undefined8 local_c0;\n  undefined8 local_b8;\n  undefined auStack_80 [8];\n  undefined8 local_78;\n  \n  __s1 = nl_langinfo(0xe);\n  if (__s1 == (char *)0x0) {\n    __s1 = \"\";\n  }\n  if (DAT_006104d8 != (char *)0x0) goto LAB_00409a1a;\n  pcVar7 = getenv(\"CHARSETALIASDIR\");\n  if ((pcVar7 == (char *)0x0) || (*pcVar7 == '\\0')) {\n    sVar6 = 0x73;\n    sVar5 = 0x65;\n    __n = 100;\n    pcVar7 = \n    \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\"\n    ;\nLAB_00409b05:\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      __file[__n] = '/';\n      goto LAB_00409b26;\n    }\n  }\n  else {\n    __n = strlen(pcVar7);\n    if (__n == 0) {\n      sVar6 = 0xe;\n    }\n    else {\n      if (pcVar7[__n - 1] != '/') {\n        sVar6 = __n + 0xf;\n        sVar5 = __n + 1;\n        goto LAB_00409b05;\n      }\n      sVar6 = __n + 0xe;\n    }\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      sVar5 = __n;\nLAB_00409b26:\n      puVar13 = (undefined8 *)(__file + sVar5);\n      *puVar13 = 0x2e74657372616863;\n      *(undefined2 *)((long)puVar13 + 0xc) = 0x73;\n      *(undefined4 *)(puVar13 + 1) = 0x61696c61;\n      iVar2 = open(__file,0);\n      if (-1 < iVar2) {\n        __stream = fdopen(iVar2,\"r\");\n        local_d0 = 0;\n        if (__stream != (FILE *)0x0) {\n          pcVar7 = (char *)0x0;\nLAB_00409bc0:\n          pbVar8 = (byte *)__stream->_IO_read_ptr;\n          if (__stream->_IO_read_end <= pbVar8) goto LAB_00409d4c;\n          do {\n            __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n            uVar4 = (uint)*pbVar8;\n            __ptr = pcVar7;\n            while( true ) {\n              pcVar7 = __ptr;\n              if ((uVar4 - 9 < 2) || (uVar4 == 0x20)) goto LAB_00409bc0;\n              if (uVar4 == 0x23) goto LAB_00409db1;\n              ungetc(uVar4,__stream);\n              iVar2 = fscanf(__stream,\"%50s %50s\",&local_b8,&local_78);\n              puVar13 = &local_b8;\n              if (iVar2 < 2) goto LAB_00409d5f;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              lVar11 = (long)puVar13 +\n                       ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_b8);\n              puVar13 = &local_78;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              local_c0 = (long)puVar13 +\n                         ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_78);\n              lVar9 = lVar11 + local_c0;\n              if (local_d0 == 0) {\n                pcVar7 = (char *)malloc(lVar9 + 3);\n              }\n              else {\n                lVar9 = lVar9 + local_d0;\n                pcVar7 = (char *)realloc(__ptr,lVar9 + 3);\n              }\n              local_d0 = lVar9 + 2;\n              if (pcVar7 == (char *)0x0) {\n                pcVar7 = \"\";\n                free(__ptr);\n                FUN_0040a3d0(__stream);\n                goto LAB_00409b64;\n              }\n              uVar12 = lVar11 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (-2 - lVar11) + (local_d0 - local_c0));\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_b8;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 2));\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_b8;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 4));\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_b8._4_4_,(undefined4)local_b8);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 8));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_b8 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              uVar12 = local_c0 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (local_d0 - local_c0) + -1);\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_78;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 6);\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_78;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 4);\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_78._4_4_,(undefined4)local_78);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)auStack_80 + (uVar12 & 0xffffffff));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_78 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              pbVar8 = (byte *)__stream->_IO_read_ptr;\n              if (pbVar8 < __stream->_IO_read_end) break;\nLAB_00409d4c:\n              uVar4 = __uflow(__stream);\n              __ptr = pcVar7;\n              if (uVar4 == 0xffffffff) goto LAB_00409d5f;\n            }\n          } while( true );\n        }\n        close(iVar2);\n      }\n      goto LAB_00409b5e;\n    }\n  }\n  DAT_006104d8 = \"\";\nLAB_00409a1a:\n  cVar1 = *DAT_006104d8;\n  pcVar7 = DAT_006104d8;\n  do {\n    if (cVar1 == '\\0') {\nLAB_00409a74:\n      if (*__s1 == '\\0') {\n        __s1 = \"ASCII\";\n      }\n      return __s1;\n    }\n    iVar2 = strcmp(__s1,pcVar7);\n    if ((iVar2 == 0) || ((cVar1 == '*' && (pcVar7[1] == '\\0')))) {\n      sVar6 = strlen(pcVar7);\n      __s1 = pcVar7 + sVar6 + 1;\n      goto LAB_00409a74;\n    }\n    sVar6 = strlen(pcVar7);\n    sVar5 = strlen(pcVar7 + sVar6 + 1);\n    pcVar7 = pcVar7 + sVar6 + 1 + sVar5 + 1;\n    cVar1 = *pcVar7;\n  } while( true );\nLAB_00409db1:\n  do {\n    pbVar8 = (byte *)__stream->_IO_read_ptr;\n    if (pbVar8 < __stream->_IO_read_end) {\n      __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n      uVar4 = (uint)*pbVar8;\n      bVar14 = true;\n    }\n    else {\n      uVar4 = __uflow(__stream);\n      bVar14 = uVar4 != 0xffffffff;\n    }\n  } while ((uVar4 != 10) && (bVar14));\n  if (uVar4 == 0xffffffff) goto LAB_00409d5f;\n  goto LAB_00409bc0;\nLAB_00409d5f:\n  FUN_0040a3d0(__stream);\n  if (local_d0 == 0) {\nLAB_00409b5e:\n    pcVar7 = \"\";\n  }\n  else {\n    pcVar7[local_d0] = '\\0';\n  }\nLAB_00409b64:\n  free(__file);\n  DAT_006104d8 = pcVar7;\n  goto LAB_00409a1a;\n}\n\n",
            "funcName": "FUN_004099e0"
        },
        {
            "funcStartAddr": "0x409f50",
            "funcEndAddr": "0x409f7b",
            "decompiledFuncCode": "\nvoid FUN_00409f50(undefined4 param_1)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"unable to record current working directory\",5);\n  error(DAT_00610278,param_1,uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00409f50"
        },
        {
            "funcStartAddr": "0x409f80",
            "funcEndAddr": "0x409fab",
            "decompiledFuncCode": "\nvoid FUN_00409f80(undefined4 param_1)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"failed to return to initial working directory\",5);\n  error(DAT_00610278,param_1,uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00409f80"
        },
        {
            "funcStartAddr": "0x409fb0",
            "funcEndAddr": "0x409ff5",
            "decompiledFuncCode": "\nvoid FUN_00409fb0(int param_1,char *param_2,uint param_3,ulong param_4)\n\n{\n  int iVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  if ((param_3 & 0x40) != 0) {\n    uVar2 = param_4 & 0xffffffff;\n  }\n  iVar1 = openat(param_1,param_2,param_3,uVar2);\n  FUN_0040a090(iVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00409fb0"
        },
        {
            "funcStartAddr": "0x40a000",
            "funcEndAddr": "0x40a043",
            "decompiledFuncCode": "\nint FUN_0040a000(int *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  \n  *(undefined8 *)(param_1 + 2) = 0;\n  iVar1 = FUN_00408620(&DAT_0040ceab,0x80000);\n  *param_1 = iVar1;\n  if (-1 < iVar1) {\n    return 0;\n  }\n  lVar2 = FUN_0040a630(0,0);\n  *(long *)(param_1 + 2) = lVar2;\n  return -(uint)(lVar2 == 0);\n}\n\n",
            "funcName": "FUN_0040a000"
        },
        {
            "funcStartAddr": "0x40a050",
            "funcEndAddr": "0x40a066",
            "decompiledFuncCode": "\nvoid FUN_0040a050(int *param_1)\n\n{\n  if (-1 < *param_1) {\n    fchdir(*param_1);\n    return;\n  }\n  FUN_0040a160(*(undefined8 *)(param_1 + 2));\n  return;\n}\n\n",
            "funcName": "FUN_0040a050"
        },
        {
            "funcStartAddr": "0x40a070",
            "funcEndAddr": "0x40a089",
            "decompiledFuncCode": "\nvoid FUN_0040a070(int *param_1)\n\n{\n  if (-1 < *param_1) {\n    close(*param_1);\n  }\n  free(*(void **)(param_1 + 2));\n  return;\n}\n\n",
            "funcName": "FUN_0040a070"
        },
        {
            "funcStartAddr": "0x40a090",
            "funcEndAddr": "0x40a0dc",
            "decompiledFuncCode": "\nuint FUN_0040a090(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  \n  if (2 < param_1) {\n    return param_1;\n  }\n  uVar2 = FUN_0040ad40();\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  close(param_1);\n  *piVar3 = iVar1;\n  return uVar2;\n}\n\n",
            "funcName": "FUN_0040a090"
        },
        {
            "funcStartAddr": "0x40a0e0",
            "funcEndAddr": "0x40a110",
            "decompiledFuncCode": "\nvoid FUN_0040a0e0(int param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 < 0) {\n    return;\n  }\n  iVar1 = close(param_1);\n  if (iVar1 == 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"! close_fail\",\"lib/chdir-long.c\",0x40,\"cdb_free\");\n}\n\n",
            "funcName": "FUN_0040a0e0"
        },
        {
            "funcStartAddr": "0x40a120",
            "funcEndAddr": "0x40a156",
            "decompiledFuncCode": "\nundefined8 FUN_0040a120(int *param_1,char *param_2)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  \n  iVar1 = openat(*param_1,param_2,0x10900);\n  if (iVar1 < 0) {\n    uVar2 = 0xffffffff;\n  }\n  else {\n    FUN_0040a0e0(*param_1);\n    *param_1 = iVar1;\n    uVar2 = 0;\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_0040a120"
        },
        {
            "funcStartAddr": "0x40a160",
            "funcEndAddr": "0x40a3b6",
            "decompiledFuncCode": "\nint FUN_0040a160(char *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  size_t sVar3;\n  size_t sVar4;\n  undefined *puVar5;\n  char *__s;\n  int local_2c;\n  \n  iVar1 = chdir(param_1);\n  if (iVar1 == 0) {\n    return 0;\n  }\n  piVar2 = __errno_location();\n  if (*piVar2 != 0x24) {\n    return iVar1;\n  }\n  sVar3 = strlen(param_1);\n  local_2c = -100;\n  if (sVar3 == 0) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 < len\",\"lib/chdir-long.c\",0x7e,\"chdir_long\");\n  }\n  if (sVar3 < 0x1000) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"4096 <= len\",\"lib/chdir-long.c\",0x7f,\"chdir_long\");\n  }\n  sVar4 = strspn(param_1,\"/\");\n  if (sVar4 == 2) {\n    puVar5 = (undefined *)FUN_0040ab00(param_1 + 3,0x2f,sVar3 - 3);\n    if (puVar5 == (undefined *)0x0) {\n      return -1;\n    }\n    *puVar5 = 0;\n    iVar1 = FUN_0040a120(&local_2c,param_1);\n    *puVar5 = 0x2f;\n    if (iVar1 != 0) goto LAB_0040a290;\n    sVar4 = strspn(puVar5 + 1,\"/\");\n    __s = puVar5 + 1 + sVar4;\n  }\n  else {\n    __s = param_1;\n    if (sVar4 != 0) {\n      iVar1 = FUN_0040a120(&local_2c,\"/\");\n      if (iVar1 != 0) goto LAB_0040a290;\n      __s = param_1 + sVar4;\n    }\n  }\n  if (*__s == '/') {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"*dir != \\'/\\'\",\"lib/chdir-long.c\",0xa2,\"chdir_long\");\n  }\n  param_1 = param_1 + sVar3;\n  if (param_1 < __s) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"dir <= dir_end\",\"lib/chdir-long.c\",0xa3,\"chdir_long\");\n  }\n  while (0xfff < (long)param_1 - (long)__s) {\n    puVar5 = (undefined *)memrchr(__s,0x2f,0x1000);\n    if (puVar5 == (undefined *)0x0) {\n      *piVar2 = 0x24;\n      return -1;\n    }\n    *puVar5 = 0;\n    if (0xfff < (long)puVar5 - (long)__s) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"slash - dir < 4096\",\"lib/chdir-long.c\",0xb3,\"chdir_long\");\n    }\n    iVar1 = FUN_0040a120(&local_2c,__s);\n    *puVar5 = 0x2f;\n    if (iVar1 != 0) goto LAB_0040a290;\n    sVar3 = strspn(puVar5 + 1,\"/\");\n    __s = puVar5 + 1 + sVar3;\n  }\n  if (((param_1 <= __s) || (iVar1 = FUN_0040a120(&local_2c,__s), iVar1 == 0)) &&\n     (iVar1 = fchdir(local_2c), iVar1 == 0)) {\n    FUN_0040a0e0(local_2c);\n    return 0;\n  }\nLAB_0040a290:\n  iVar1 = *piVar2;\n  FUN_0040a0e0(local_2c);\n  *piVar2 = iVar1;\n  return -1;\n}\n\n",
            "funcName": "FUN_0040a160"
        },
        {
            "funcStartAddr": "0x40a3d0",
            "funcEndAddr": "0x40a448",
            "decompiledFuncCode": "\nint FUN_0040a3d0(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_0040a437;\n    }\n    iVar1 = FUN_0040a590(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_0040a437:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n",
            "funcName": "FUN_0040a3d0"
        },
        {
            "funcStartAddr": "0x40a450",
            "funcEndAddr": "0x40a57c",
            "decompiledFuncCode": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint FUN_0040a450(ulong param_1,int param_2,ulong param_3)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  int *piVar4;\n  \n  if (param_2 != 0x406) {\n    iVar1 = fcntl((int)param_1,param_2,param_3);\n    return iVar1;\n  }\n  if (DAT_006104e0 < 0) {\n    iVar1 = FUN_0040a450(param_1,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    if (DAT_006104e0 != -1) {\n      return iVar1;\n    }\n  }\n  else {\n    iVar1 = fcntl((int)param_1,0x406);\n    if ((-1 < iVar1) || (piVar4 = __errno_location(), *piVar4 != 0x16)) {\n      DAT_006104e0 = 1;\n      return iVar1;\n    }\n    iVar1 = FUN_0040a450(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    DAT_006104e0 = -1;\n  }\n  uVar2 = fcntl(iVar1,1);\n  if ((-1 < (int)uVar2) && (iVar3 = fcntl(iVar1,2,(ulong)(uVar2 | 1)), iVar3 != -1)) {\n    return iVar1;\n  }\n  piVar4 = __errno_location();\n  iVar3 = *piVar4;\n  close(iVar1);\n  *piVar4 = iVar3;\n  return -1;\n}\n\n",
            "funcName": "FUN_0040a450"
        },
        {
            "funcStartAddr": "0x40a590",
            "funcEndAddr": "0x40a5cb",
            "decompiledFuncCode": "\nvoid FUN_0040a590(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if ((iVar1 != 0) && ((param_1->_flags & 0x100U) != 0)) {\n      FUN_0040a5d0(param_1,0,1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_0040a590"
        },
        {
            "funcStartAddr": "0x40a5d0",
            "funcEndAddr": "0x40a626",
            "decompiledFuncCode": "\nulong FUN_0040a5d0(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  uint uVar1;\n  int __fd;\n  ulong uVar2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    __fd = fileno(param_1);\n    uVar2 = lseek(__fd,param_2,param_3);\n    if (uVar2 != 0xffffffffffffffff) {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = uVar2;\n      uVar2 = 0;\n    }\n    return uVar2;\n  }\n  uVar1 = fseeko(param_1,param_2,param_3);\n  return (ulong)uVar1;\n}\n\n",
            "funcName": "FUN_0040a5d0"
        },
        {
            "funcStartAddr": "0x40a630",
            "funcEndAddr": "0x40aad5",
            "decompiledFuncCode": "\nvoid * FUN_0040a630(void *param_1,size_t param_2)\n\n{\n  char *__filename;\n  bool bVar1;\n  __dev_t _Var2;\n  __dev_t _Var3;\n  __ino_t _Var4;\n  __ino_t _Var5;\n  int iVar6;\n  int iVar7;\n  int *piVar8;\n  DIR *__dirp;\n  dirent *pdVar9;\n  size_t __n;\n  void *pvVar10;\n  bool bVar11;\n  ulong uVar12;\n  long lVar13;\n  ulong uVar14;\n  __ino_t _Var15;\n  bool bVar16;\n  bool bVar17;\n  bool bVar18;\n  __dev_t local_120;\n  void *local_110;\n  void *local_108;\n  ulong local_100;\n  void *local_e8;\n  stat local_c8;\n  \n  if (param_2 == 0) {\n    local_100 = 0x1000;\n    if (param_1 != (void *)0x0) {\n      piVar8 = __errno_location();\n      *piVar8 = 0x16;\n      return (void *)0x0;\n    }\nLAB_0040a662:\n    local_110 = malloc(local_100);\n    if (local_110 == (void *)0x0) {\n      return (void *)0x0;\n    }\n  }\n  else {\n    local_110 = param_1;\n    local_100 = param_2;\n    if (param_1 == (void *)0x0) goto LAB_0040a662;\n  }\n  lVar13 = (long)local_110 + local_100;\n  *(undefined *)(lVar13 + -1) = 0;\n  iVar6 = __lxstat(1,\".\",&local_c8);\n  _Var15 = local_c8.st_ino;\n  _Var2 = local_c8.st_dev;\n  if (-1 < iVar6) {\n    local_120 = local_c8.st_dev;\n    iVar6 = __lxstat(1,\"/\",&local_c8);\n    _Var4 = local_c8.st_ino;\n    _Var3 = local_c8.st_dev;\n    if (-1 < iVar6) {\n      local_e8 = (void *)(lVar13 + -1);\n      bVar16 = _Var2 != local_c8.st_dev;\n      bVar17 = _Var15 != local_c8.st_ino;\n      if (!bVar16 && !bVar17) {\nLAB_0040a948:\n        if (local_e8 == (void *)((long)local_110 + (local_100 - 1))) {\n          *(undefined *)((long)local_e8 + -1) = 0x2f;\n          local_e8 = (void *)((long)local_e8 + -1);\n        }\n        memmove(local_110,local_e8,lVar13 - (long)local_e8);\n        local_108 = param_1;\n        if (param_2 == 0) {\n          local_108 = realloc(local_110,lVar13 - (long)local_e8);\n        }\n        if (local_108 != (void *)0x0) {\n          return local_108;\n        }\n        return local_110;\n      }\n      piVar8 = __errno_location();\n      __dirp = (DIR *)0x0;\n      iVar6 = -100;\n      do {\n        iVar6 = openat(iVar6,\"..\",0);\n        if (iVar6 < 0) {\n          iVar7 = *piVar8;\n          if (__dirp != (DIR *)0x0) goto LAB_0040aa01;\n          goto joined_r0x0040aa0f;\n        }\n        iVar7 = __fxstat(1,iVar6,&local_c8);\n        if (iVar7 != 0) {\n          iVar7 = *piVar8;\n          if (__dirp != (DIR *)0x0) {\n            closedir(__dirp);\n          }\nLAB_0040aa6d:\n          close(iVar6);\n          goto joined_r0x0040aa0f;\n        }\n        if (((__dirp != (DIR *)0x0) && (iVar7 = closedir(__dirp), iVar7 != 0)) ||\n           (_Var5 = local_c8.st_ino, _Var2 = local_c8.st_dev, __dirp = fdopendir(iVar6),\n           bVar1 = bVar16 || bVar17, __dirp == (DIR *)0x0)) {\n          iVar7 = *piVar8;\n          goto LAB_0040aa6d;\n        }\nLAB_0040a7c0:\n        do {\n          do {\n            *piVar8 = 0;\n            pdVar9 = readdir(__dirp);\n            if (pdVar9 == (dirent *)0x0) {\n              iVar7 = *piVar8;\n              if ((iVar7 == 0) && (bVar1)) {\n                rewinddir(__dirp);\n                pdVar9 = readdir(__dirp);\n                if (pdVar9 != (dirent *)0x0) {\n                  bVar11 = false;\n                  bVar1 = bVar11;\n                  if (pdVar9->d_name[0] == '.') goto LAB_0040a9d0;\n                  break;\n                }\n                iVar7 = *piVar8;\n              }\n              if (iVar7 == 0) {\n                *piVar8 = 2;\n                iVar7 = 2;\n              }\n              goto LAB_0040aa01;\n            }\n            if (pdVar9->d_name[0] == '.') {\nLAB_0040a9d0:\n              if ((pdVar9->d_name[1] == '\\0') || (*(short *)(pdVar9->d_name + 1) == 0x2e))\n              goto LAB_0040a7c0;\n            }\n            bVar11 = bVar1;\n          } while ((bVar1) &&\n                  (bVar18 = pdVar9->d_ino == _Var15, bVar11 = bVar18 || _Var2 != local_120,\n                  !bVar18 && _Var2 == local_120));\n          __filename = pdVar9->d_name;\n          iVar7 = __fxstatat(1,iVar6,__filename,&local_c8,0x100);\n          bVar1 = bVar11;\n        } while ((((iVar7 != 0) || ((local_c8.st_mode & 0xf000) != 0x4000)) ||\n                 (local_c8.st_dev != local_120)) || (local_c8.st_ino != _Var15));\n        uVar14 = (long)local_e8 - (long)local_110;\n        __n = strlen(__filename);\n        if (uVar14 <= __n) {\n          if (param_2 == 0) {\n            uVar12 = local_100;\n            if (local_100 <= __n) {\n              uVar12 = __n;\n            }\n            if ((!CARRY8(local_100,uVar12)) &&\n               (pvVar10 = realloc(local_110,local_100 + uVar12), pvVar10 != (void *)0x0)) {\n              local_e8 = memcpy((void *)((long)pvVar10 + uVar12 + uVar14),\n                                (void *)((long)pvVar10 + uVar14),local_100 - uVar14);\n              local_110 = pvVar10;\n              local_100 = local_100 + uVar12;\n              goto LAB_0040a8df;\n            }\n            *piVar8 = 0xc;\n            iVar7 = 0xc;\n          }\n          else {\n            *piVar8 = 0x22;\n            iVar7 = 0x22;\n          }\nLAB_0040aa01:\n          closedir(__dirp);\n          goto joined_r0x0040aa0f;\n        }\nLAB_0040a8df:\n        pvVar10 = memcpy((void *)((long)local_e8 - __n),__filename,__n);\n        local_e8 = (void *)((long)pvVar10 + -1);\n        local_120 = _Var2;\n        *(undefined *)((long)pvVar10 + -1) = 0x2f;\n        _Var15 = _Var5;\n      } while ((_Var3 != _Var2) || (_Var4 != _Var5));\n      iVar6 = closedir(__dirp);\n      if (iVar6 == 0) {\n        lVar13 = (long)local_110 + local_100;\n        goto LAB_0040a948;\n      }\n      goto LAB_0040aa30;\n    }\n  }\n  piVar8 = __errno_location();\nLAB_0040aa30:\n  iVar7 = *piVar8;\njoined_r0x0040aa0f:\n  if (param_1 == (void *)0x0) {\n    free(local_110);\n  }\n  *piVar8 = iVar7;\n  return (void *)0x0;\n}\n\n",
            "funcName": "FUN_0040a630"
        },
        {
            "funcStartAddr": "0x40ab00",
            "funcEndAddr": "0x40abe3",
            "decompiledFuncCode": "\nulong * FUN_0040ab00(ulong *param_1,char param_2,ulong param_3)\n\n{\n  char cVar1;\n  ulong uVar2;\n  ulong *puVar3;\n  ulong uVar4;\n  \n  if (param_3 == 0) {\n    return (ulong *)0x0;\n  }\n  if (((ulong)param_1 & 7) == 0) {\nLAB_0040ab40:\n    uVar4 = (long)(int)(uint)CONCAT11(param_2,param_2) |\n            (long)(int)(uint)CONCAT11(param_2,param_2) << 0x10;\n    uVar4 = uVar4 | uVar4 << 0x20;\n    if (7 < param_3) {\n      uVar2 = *param_1 ^ uVar4;\n      for (uVar2 = ~uVar2 & uVar2 + 0xfefefefefefefeff; (uVar2 & 0x8080808080808080) == 0;\n          uVar2 = ~uVar2 & uVar2 + 0xfefefefefefefeff) {\n        param_3 = param_3 - 8;\n        param_1 = param_1 + 1;\n        if (param_3 < 8) {\n          if (param_3 == 0) {\n            return (ulong *)0x0;\n          }\n          break;\n        }\n        uVar2 = *param_1 ^ uVar4;\n      }\n    }\n    if (param_2 != *(char *)param_1) {\n      puVar3 = (ulong *)((long)param_1 + param_3);\n      do {\n        param_1 = (ulong *)((long)param_1 + 1);\n        if (param_1 == puVar3) {\n          return (ulong *)0x0;\n        }\n      } while (*(char *)param_1 != param_2);\n    }\n  }\n  else {\n    cVar1 = *(char *)param_1;\n    while (param_2 != cVar1) {\n      param_1 = (ulong *)((long)param_1 + 1);\n      param_3 = param_3 - 1;\n      if (param_3 == 0) {\n        return (ulong *)0x0;\n      }\n      if (((ulong)param_1 & 7) == 0) goto LAB_0040ab40;\n      cVar1 = *(char *)param_1;\n    }\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_0040ab00"
        },
        {
            "funcStartAddr": "0x40ac10",
            "funcEndAddr": "0x40ad22",
            "decompiledFuncCode": "\nundefined * FUN_0040ac10(undefined *param_1,undefined4 param_2,char *param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  size_t sVar3;\n  char acStack_48 [40];\n  \n  if (*param_3 == '\\0') {\n    *param_1 = 0;\n    return param_1;\n  }\n  if (DAT_006104e4 == 0) {\n    iVar1 = open(\"/proc/self/fd\",0x10900);\n    if (iVar1 < 0) {\n      DAT_006104e4 = 0xffffffff;\n      return (undefined *)0x0;\n    }\n    __sprintf_chk(acStack_48,1,0x20,\"/proc/self/fd/%d/../fd\",iVar1);\n    iVar2 = access(acStack_48,0);\n    DAT_006104e4 = (-(uint)(iVar2 == 0) & 2) - 1;\n    close(iVar1);\n  }\n  if (DAT_006104e4 < 0) {\nLAB_0040ac9d:\n    param_1 = (undefined *)0x0;\n  }\n  else {\n    sVar3 = strlen(param_3);\n    if (0xfc0 < sVar3 + 0x1b) {\n      param_1 = (undefined *)malloc(sVar3 + 0x1b);\n      if (param_1 == (undefined *)0x0) goto LAB_0040ac9d;\n    }\n    iVar1 = __sprintf_chk(param_1,1,0xffffffffffffffff,\"/proc/self/fd/%d/\",param_2);\n    strcpy(param_1 + iVar1,param_3);\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_0040ac10"
        },
        {
            "funcStartAddr": "0x40ad40",
            "funcEndAddr": "0x40ad4e",
            "decompiledFuncCode": "\nvoid FUN_0040ad40(undefined8 param_1)\n\n{\n  FUN_0040a450(param_1,0,3);\n  return;\n}\n\n",
            "funcName": "FUN_0040ad40"
        },
        {
            "funcStartAddr": "0x40ad50",
            "funcEndAddr": "0x40adad",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x0040ad83) */\n/* WARNING: Removing unreachable block (ram,0x0040ad88) */\n\nvoid FUN_0040ad50(void)\n\n{\n  __DT_INIT();\n  return;\n}\n\n",
            "funcName": "FUN_0040ad50"
        },
        {
            "funcStartAddr": "0x40adb0",
            "funcEndAddr": "0x40adb1",
            "decompiledFuncCode": "\nvoid FUN_0040adb0(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_0040adb0"
        },
        {
            "funcStartAddr": "0x40adc0",
            "funcEndAddr": "0x40add8",
            "decompiledFuncCode": "\nvoid FUN_0040adc0(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,DAT_00610268);\n  return;\n}\n\n",
            "funcName": "FUN_0040adc0"
        },
        {
            "funcStartAddr": "0x40add8",
            "funcEndAddr": "0x40adf8",
            "decompiledFuncCode": "\nundefined8 FUN_0040add8(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  code **ppcVar1;\n  \n  for (ppcVar1 = (code **)&DAT_0060fe30; *ppcVar1 != (code *)0xffffffffffffffff;\n      ppcVar1 = ppcVar1 + -1) {\n    (**ppcVar1)();\n  }\n  return param_3;\n}\n\n",
            "funcName": "FUN_0040add8"
        }
    ],
    "decompilerName": "Ghidra",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chcon.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O"
}