{
    "funcCount": 185,
    "funcInfo": [
        {
            "funcStartAddr": "0x402095",
            "funcEndAddr": "0x40209a",
            "decompiledFuncCode": "\nvoid FUN_00402095(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00402095"
        },
        {
            "funcStartAddr": "0x40209a",
            "funcEndAddr": "0x40209f",
            "decompiledFuncCode": "\nvoid FUN_0040209a(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040209a"
        },
        {
            "funcStartAddr": "0x40209f",
            "funcEndAddr": "0x4020a4",
            "decompiledFuncCode": "\nvoid FUN_0040209f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040209f"
        },
        {
            "funcStartAddr": "0x4020a4",
            "funcEndAddr": "0x4020a9",
            "decompiledFuncCode": "\nvoid FUN_004020a4(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004020a4"
        },
        {
            "funcStartAddr": "0x4020ae",
            "funcEndAddr": "0x4020b3",
            "decompiledFuncCode": "\nvoid FUN_004020ae(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004020ae"
        },
        {
            "funcStartAddr": "0x4020b3",
            "funcEndAddr": "0x4020b8",
            "decompiledFuncCode": "\nvoid FUN_004020b3(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004020b3"
        },
        {
            "funcStartAddr": "0x4020b8",
            "funcEndAddr": "0x4020bd",
            "decompiledFuncCode": "\nvoid FUN_004020b8(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004020b8"
        },
        {
            "funcStartAddr": "0x4020bd",
            "funcEndAddr": "0x4020c2",
            "decompiledFuncCode": "\nvoid FUN_004020bd(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004020bd"
        },
        {
            "funcStartAddr": "0x4020c2",
            "funcEndAddr": "0x4020c7",
            "decompiledFuncCode": "\nvoid FUN_004020c2(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004020c2"
        },
        {
            "funcStartAddr": "0x4020c7",
            "funcEndAddr": "0x4020cc",
            "decompiledFuncCode": "\nvoid FUN_004020c7(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004020c7"
        },
        {
            "funcStartAddr": "0x4020cc",
            "funcEndAddr": "0x4020d1",
            "decompiledFuncCode": "\nvoid FUN_004020cc(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004020cc"
        },
        {
            "funcStartAddr": "0x4020d1",
            "funcEndAddr": "0x4020d6",
            "decompiledFuncCode": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "thunk_4020d1"
        },
        {
            "funcStartAddr": "0x4020e0",
            "funcEndAddr": "0x40254d",
            "decompiledFuncCode": "\nbyte FUN_004020e0(int param_1,undefined8 *param_2)\n\n{\n  bool bVar1;\n  char cVar2;\n  char cVar3;\n  byte bVar4;\n  int iVar5;\n  group *pgVar6;\n  int *piVar7;\n  undefined8 uVar8;\n  int iVar9;\n  undefined8 uVar10;\n  ulong uVar11;\n  char *pcVar12;\n  char *pcVar13;\n  char *__name;\n  undefined4 local_f8;\n  char local_f4;\n  long local_f0;\n  undefined local_e8;\n  char local_e7;\n  char *local_d8;\n  stat local_c8;\n  \n  __name = (char *)0x1;\n  pcVar12 = (char *)0xffffffff;\n  bVar1 = false;\n  uVar11 = (ulong)param_1;\n  uVar10 = 0x10;\n  FUN_00403b60(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\n                 \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\"\n                );\n  textdomain(\"coreutils\");\n  FUN_0040c0f0(FUN_00403a70);\n  FUN_00402b00(&local_f8);\n  cVar2 = local_f4;\n  cVar3 = local_e7;\nLAB_00402150:\n  local_e7 = cVar3;\n  local_f4 = cVar2;\n  iVar9 = (int)pcVar12;\n  iVar5 = FUN_00409760(uVar11 & 0xffffffff,param_2,\"HLPRcfhv\",&PTR_s_recursive_0040cb40,0);\n  pcVar13 = DAT_00611370;\n  if (iVar5 == -1) {\n    if (local_f4 == '\\0') {\n      uVar10 = 0x10;\nLAB_004022ea:\n      local_e8 = iVar9 != 0;\n      iVar9 = (int)uVar11 - DAT_0061131c;\n      pcVar12 = DAT_00611370;\n      iVar5 = DAT_0061131c;\n      if (DAT_00611370 == (char *)0x0) {\n        if (1 < iVar9) {\n          __name = (char *)param_2[DAT_0061131c];\n          DAT_0061131c = DAT_0061131c + 1;\n          if (*__name != '\\0') {\n            pcVar13 = __name;\n          }\n          uVar11 = 0xffffffff;\n          local_d8 = pcVar13;\n          if (*__name != '\\0') {\n            pgVar6 = getgrnam(__name);\n            if (pgVar6 == (group *)0x0) goto LAB_00402454;\n            uVar11 = (ulong)pgVar6->gr_gid;\n            goto LAB_004023f3;\n          }\nLAB_00402342:\n          while( true ) {\n            if (((local_f4 == '\\0') || (!bVar1)) ||\n               (local_f0 = FUN_004057a0(&DAT_00611360), local_f0 != 0)) {\n              bVar4 = FUN_00403930(param_2 + DAT_0061131c,(uint)uVar10 | 0x400,0xffffffff,uVar11,\n                                   0xffffffff,0xffffffff,&local_f8,(long)DAT_0061131c);\n              return bVar4 ^ 1;\n            }\n            uVar10 = FUN_00405530(4,\"/\");\n            param_2 = (undefined8 *)dcgettext(0,\"failed to get attributes of %s\",5);\n            piVar7 = __errno_location();\n            error(1,*piVar7,param_2,uVar10);\nLAB_00402454:\n            iVar5 = FUN_004060a0(__name,0,10,&local_c8);\n            if ((iVar5 != 0) ||\n               (uVar11 = local_c8.st_dev & 0xffffffff, 0xffffffff < local_c8.st_dev)) break;\nLAB_004023f3:\n            endgrent();\n          }\n          uVar10 = FUN_00405780(__name);\n          uVar8 = dcgettext(0,\"invalid group: %s\",5);\n          error(1,0,uVar8,uVar10);\nLAB_004024b8:\n          uVar10 = FUN_00405530(4,pcVar13);\n          param_2 = (undefined8 *)dcgettext(0,\"failed to get attributes of %s\",5);\n          piVar7 = __errno_location();\n          iVar5 = error(1,*piVar7,param_2,uVar10);\n          pcVar12 = pcVar13;\n        }\n      }\n      else if (0 < iVar9) {\n        iVar5 = __xstat(1,DAT_00611370,&local_c8);\n        if (iVar5 == 0) {\n          uVar11 = (ulong)local_c8.st_gid;\n          local_d8 = (char *)FUN_00402b40(uVar11);\n          goto LAB_00402342;\n        }\n        goto LAB_004024b8;\n      }\n      if ((int)uVar11 <= iVar5) {\n        uVar8 = dcgettext(0,\"missing operand\",5);\n        error(0,0,uVar8);\n        goto LAB_004021c9;\n      }\n    }\n    else {\n      if ((int)uVar10 != 0x10) goto LAB_004022ea;\n      pcVar12 = (char *)(ulong)(iVar9 - 1U);\n      if (iVar9 - 1U != 0) {\n        iVar9 = 0;\n        goto LAB_004022ea;\n      }\n      uVar8 = dcgettext(0,\"-R --dereference requires either -H or -L\",5);\n      error(1,0,uVar8);\n    }\n    param_2 = (undefined8 *)FUN_00405780(param_2[uVar11 - 1]);\n    uVar8 = dcgettext(0,\"missing operand after %s\",5);\n    error(0,0,uVar8,param_2);\n  }\n  else {\n    cVar2 = local_f4;\n    cVar3 = local_e7;\n    if (iVar5 == 99) {\n      local_f8 = 1;\n      goto LAB_00402150;\n    }\n    if (iVar5 < 100) {\n      if (iVar5 == 0x48) {\n        uVar10 = 0x11;\n        goto LAB_00402150;\n      }\n      if (0x48 < iVar5) {\n        if (iVar5 == 0x50) {\n          uVar10 = 0x10;\n        }\n        else {\n          cVar2 = (char)__name;\n          if (iVar5 != 0x52) {\n            if (iVar5 != 0x4c) goto LAB_004021c9;\n            uVar10 = 2;\n            cVar2 = local_f4;\n          }\n        }\n        goto LAB_00402150;\n      }\n      if (iVar5 == -0x83) {\n        FUN_00405c50(stdout,\"chgrp\",\"GNU coreutils\",PTR_DAT_006112b0,\"David MacKenzie\",\n                     \"Jim Meyering\",0);\n                    /* WARNING: Subroutine does not return */\n        exit(0);\n      }\n      if (iVar5 == -0x82) {\n        FUN_00402660(0);\nLAB_00402270:\n        bVar1 = true;\n        cVar2 = local_f4;\n        cVar3 = local_e7;\n        goto LAB_00402150;\n      }\n    }\n    else {\n      if (iVar5 == 0x80) {\n        pcVar12 = (char *)0x1;\n        goto LAB_00402150;\n      }\n      if (0x80 < iVar5) goto LAB_004021d8;\n      if (iVar5 == 0x68) {\n        pcVar12 = (char *)0x0;\n        goto LAB_00402150;\n      }\n      if (iVar5 == 0x76) {\n        local_f8 = 0;\n        goto LAB_00402150;\n      }\n      cVar3 = (char)__name;\n      if (iVar5 == 0x66) goto LAB_00402150;\n    }\n  }\nLAB_004021c9:\n  do {\n    iVar5 = FUN_00402660(1);\nLAB_004021d8:\n    if (iVar5 == 0x82) goto LAB_00402270;\n    cVar2 = local_f4;\n    cVar3 = local_e7;\n    if (iVar5 < 0x82) {\n      bVar1 = false;\n      goto LAB_00402150;\n    }\n  } while (iVar5 != 0x83);\n  DAT_00611370 = DAT_00611530;\n  goto LAB_00402150;\n}\n\n",
            "funcName": "FUN_004020e0"
        },
        {
            "funcStartAddr": "0x402580",
            "funcEndAddr": "0x4025ab",
            "decompiledFuncCode": "\nvoid FUN_00402580(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00610ff0)\n            (FUN_004020e0,unaff_retaddr,&stack0x00000008,FUN_0040c080,FUN_0040c0e0,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "funcName": "FUN_00402580"
        },
        {
            "funcStartAddr": "0x4025ab",
            "funcEndAddr": "0x4025ca",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004025b8) */\n/* WARNING: Removing unreachable block (ram,0x004025c2) */\n\nvoid FUN_004025ab(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_004025ab"
        },
        {
            "funcStartAddr": "0x4025ca",
            "funcEndAddr": "0x402601",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004025f9) */\n\nvoid FUN_004025ca(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_004025ca"
        },
        {
            "funcStartAddr": "0x402601",
            "funcEndAddr": "0x402658",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402636) */\n\nvoid FUN_00402601(void)\n\n{\n  if (DAT_00611348 != '\\0') {\n    return;\n  }\n  FUN_004025ab();\n  DAT_00611348 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00402601"
        },
        {
            "funcStartAddr": "0x402658",
            "funcEndAddr": "0x40265d",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004025f9) */\n\nvoid thunk_FUN_004025ca(void)\n\n{\n  return;\n}\n\n",
            "funcName": "thunk_402658"
        },
        {
            "funcStartAddr": "0x402660",
            "funcEndAddr": "0x402a75",
            "decompiledFuncCode": "\nvoid FUN_00402660(int param_1)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  byte **ppbVar5;\n  undefined8 uVar7;\n  char *pcVar8;\n  long lVar9;\n  byte *pbVar10;\n  byte *pbVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  byte *local_88;\n  char *local_80;\n  byte *local_78 [5];\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  char *local_38;\n  char *local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  byte **ppbVar6;\n  \n  uVar7 = DAT_00611388;\n  bVar14 = 0;\n  if (param_1 != 0) {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar7);\n    goto LAB_0040269f;\n  }\n  uVar3 = dcgettext(0,\n                    \"Usage: %s [OPTION]... GROUP FILE...\\n  or:  %s [OPTION]... --reference=RFILE FILE...\\n\"\n                    ,5);\n  __printf_chk(1,uVar3,uVar7,uVar7);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"Change the group of each FILE to GROUP.\\nWith --reference, change the group of each FILE to that of RFILE.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -c, --changes          like verbose but report only when a change is made\\n  -f, --silent, --quiet  suppress most error messages\\n  -v, --verbose          output a diagnostic for every file processed\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --dereference      affect the referent of each symbolic link (this is\\n                         the default), rather than the symbolic link itself\\n  -h, --no-dereference   affect symbolic links instead of any referenced file\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"                         (useful only on systems that can change the\\n                         ownership of a symlink)\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --no-preserve-root  do not treat \\'/\\' specially (the default)\\n      --preserve-root    fail to operate recursively on \\'/\\'\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --reference=RFILE  use RFILE\\'s group rather than specifying a\\n                         GROUP value\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -R, --recursive        operate on files and directories recursively\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nThe following options modify how a hierarchy is traversed when the -R\\noption is also specified.  If more than one is specified, only the final\\none takes effect.\\n\\n  -H                     if a command line argument is a symbolic link\\n                         to a directory, traverse it\\n  -L                     traverse every symbolic link to a directory\\n                         encountered\\n  -P                     do not traverse any symbolic links (default)\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  uVar7 = DAT_00611388;\n  uVar3 = dcgettext(0,\n                    \"\\nExamples:\\n  %s staff /u      Change the group of /u to \\\"staff\\\".\\n  %s -hR staff /u  Change the group of /u and subfiles to \\\"staff\\\".\\n\"\n                    ,5);\n  __printf_chk(1,uVar3,uVar7,uVar7);\n  local_88 = &DAT_0040c14a;\n  local_80 = \"test invocation\";\n  local_78[0] = (byte *)0x40c1c4;\n  local_78[1] = (byte *)0x40c15c;\n  local_78[2] = (byte *)0x40c172;\n  local_78[3] = (byte *)0x40c17c;\n  local_78[4] = (byte *)0x40c18b;\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha384sum\";\n  local_40 = \"sha2 utilities\";\n  local_38 = \"sha512sum\";\n  local_30 = \"sha2 utilities\";\n  local_28 = 0;\n  local_20 = 0;\n  ppbVar5 = &local_88;\n  do {\n    ppbVar6 = ppbVar5;\n    ppbVar5 = ppbVar6 + 2;\n    pbVar11 = *ppbVar5;\n    bVar12 = false;\n    bVar13 = pbVar11 == (byte *)0x0;\n    if (bVar13) break;\n    lVar9 = 6;\n    pbVar10 = (byte *)\"chgrp\";\n    do {\n      if (lVar9 == 0) break;\n      lVar9 = lVar9 + -1;\n      bVar12 = *pbVar10 < *pbVar11;\n      bVar13 = *pbVar10 == *pbVar11;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n      pbVar11 = pbVar11 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n  } while ((!bVar12 && !bVar13) != bVar12);\n  pcVar4 = (char *)ppbVar6[3];\n  if ((byte *)pcVar4 == (byte *)0x0) {\n    uVar7 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar7,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\n        pcVar4 = \"chgrp\";\n        goto LAB_00402a4b;\n      }\n    }\n    pcVar4 = \"chgrp\";\n    uVar7 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar8 = \" invocation\";\n    __printf_chk(1,uVar7,\"https://www.gnu.org/software/coreutils/\",\"chgrp\");\n  }\n  else {\n    uVar7 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar7,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar8 = setlocale(5,(char *)0x0);\n    if (pcVar8 != (char *)0x0) {\n      iVar2 = strncmp(pcVar8,\"en_\",3);\n      if (iVar2 != 0) {\nLAB_00402a4b:\n        uVar7 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar7,\"chgrp\");\n      }\n    }\n    pcVar8 = \" invocation\";\n    uVar7 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar7,\"https://www.gnu.org/software/coreutils/\",\"chgrp\");\n    if (pcVar4 != \"chgrp\") {\n      pcVar8 = \"\";\n    }\n  }\n  uVar7 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  __printf_chk(1,uVar7,pcVar4,pcVar8);\nLAB_0040269f:\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n",
            "funcName": "FUN_00402660"
        },
        {
            "funcStartAddr": "0x402a80",
            "funcEndAddr": "0x402ae9",
            "decompiledFuncCode": "\nchar * FUN_00402a80(char *param_1,char *param_2)\n\n{\n  size_t sVar1;\n  size_t sVar2;\n  char *pcVar3;\n  char *pcVar4;\n  \n  if (param_1 == (char *)0x0) {\n    param_1 = param_2;\n    if (param_2 != (char *)0x0) goto LAB_00402ae0;\n    pcVar3 = (char *)0x0;\n  }\n  else {\n    if (param_2 == (char *)0x0) {\nLAB_00402ae0:\n      pcVar3 = (char *)FUN_00405fc0(param_1);\n      return pcVar3;\n    }\n    sVar1 = strlen(param_1);\n    sVar2 = strlen(param_2);\n    pcVar3 = (char *)FUN_00405d90(sVar1 + 2 + sVar2);\n    pcVar4 = stpcpy(pcVar3,param_1);\n    *pcVar4 = ':';\n    strcpy(pcVar4 + 1,param_2);\n  }\n  return pcVar3;\n}\n\n",
            "funcName": "FUN_00402a80"
        },
        {
            "funcStartAddr": "0x402b00",
            "funcEndAddr": "0x402b2c",
            "decompiledFuncCode": "\nvoid FUN_00402b00(undefined4 *param_1)\n\n{\n  *param_1 = 2;\n  *(undefined *)(param_1 + 1) = 0;\n  *(undefined8 *)(param_1 + 2) = 0;\n  *(undefined2 *)(param_1 + 4) = 1;\n  *(undefined8 *)(param_1 + 6) = 0;\n  *(undefined8 *)(param_1 + 8) = 0;\n  return;\n}\n\n",
            "funcName": "FUN_00402b00"
        },
        {
            "funcStartAddr": "0x402b30",
            "funcEndAddr": "0x402b31",
            "decompiledFuncCode": "\nvoid FUN_00402b30(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00402b30"
        },
        {
            "funcStartAddr": "0x402b40",
            "funcEndAddr": "0x402b77",
            "decompiledFuncCode": "\nvoid FUN_00402b40(__gid_t param_1)\n\n{\n  group *pgVar1;\n  undefined8 uVar2;\n  undefined auStack_28 [32];\n  \n  pgVar1 = getgrgid(param_1);\n  if (pgVar1 != (group *)0x0) {\n    FUN_00405fc0(pgVar1->gr_name);\n    return;\n  }\n  uVar2 = FUN_00403b10(param_1,auStack_28);\n  FUN_00405fc0(uVar2);\n  return;\n}\n\n",
            "funcName": "FUN_00402b40"
        },
        {
            "funcStartAddr": "0x402b80",
            "funcEndAddr": "0x402bb7",
            "decompiledFuncCode": "\nvoid FUN_00402b80(__uid_t param_1)\n\n{\n  passwd *ppVar1;\n  undefined8 uVar2;\n  undefined auStack_28 [32];\n  \n  ppVar1 = getpwuid(param_1);\n  if (ppVar1 != (passwd *)0x0) {\n    FUN_00405fc0(ppVar1->pw_name);\n    return;\n  }\n  uVar2 = FUN_00403b10(param_1,auStack_28);\n  FUN_00405fc0(uVar2);\n  return;\n}\n\n",
            "funcName": "FUN_00402b80"
        },
        {
            "funcStartAddr": "0x402bc0",
            "funcEndAddr": "0x403867",
            "decompiledFuncCode": "\nuint FUN_00402bc0(long param_1,long param_2,__uid_t param_3,__gid_t param_4,uint param_5,\n                 uint param_6,int *param_7)\n\n{\n  ushort uVar1;\n  byte *pbVar2;\n  __ino_t *p_Var3;\n  long *plVar4;\n  uint uVar5;\n  char cVar6;\n  int iVar7;\n  int iVar8;\n  int *piVar9;\n  void *pvVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  undefined8 uVar13;\n  long lVar14;\n  uint unaff_EBP;\n  uint uVar15;\n  undefined4 uVar16;\n  void *pvVar17;\n  byte *pbVar18;\n  char *pcVar19;\n  __uid_t _Var20;\n  byte *pbVar21;\n  long lVar22;\n  stat *psVar23;\n  __gid_t _Var24;\n  bool bVar25;\n  bool bVar26;\n  byte bVar27;\n  void *local_180;\n  void *local_178;\n  void *local_170;\n  void *local_168;\n  int local_160;\n  stat local_158;\n  stat local_c8;\n  \n  bVar27 = 0;\n  pbVar2 = *(byte **)(param_2 + 0x38);\n  uVar1 = *(ushort *)(param_2 + 0x70);\n  switch(uVar1) {\n  case 1:\n    unaff_EBP = (uint)*(byte *)(param_7 + 1);\n    if (*(byte *)(param_7 + 1) != 0) {\n      plVar4 = *(long **)(param_7 + 2);\n      if (plVar4 == (long *)0x0) {\n        return unaff_EBP;\n      }\n      if (*(long *)(param_2 + 0x80) != *plVar4) {\n        return unaff_EBP;\n      }\n      bVar25 = *(ulong *)(param_2 + 0x78) < (ulong)plVar4[1];\n      bVar26 = *(ulong *)(param_2 + 0x78) == plVar4[1];\n      if (!bVar26) {\n        return unaff_EBP;\n      }\n      lVar14 = 2;\n      pbVar18 = pbVar2;\n      pbVar21 = (byte *)0x40e791;\n      do {\n        if (lVar14 == 0) break;\n        lVar14 = lVar14 + -1;\n        bVar25 = *pbVar18 < *pbVar21;\n        bVar26 = *pbVar18 == *pbVar21;\n        pbVar18 = pbVar18 + 1;\n        pbVar21 = pbVar21 + 1;\n      } while (bVar26);\n      if ((!bVar25 && !bVar26) == bVar25) {\n        uVar11 = FUN_00405530(4,pbVar2);\n        uVar12 = dcgettext(0,\"it is dangerous to operate recursively on %s\",5);\n        error(0,0,uVar12,uVar11);\n      }\n      else {\n        uVar11 = FUN_00405450(1,4,\"/\");\n        uVar12 = FUN_00405450(0,4,pbVar2);\n        uVar13 = dcgettext(0,\"it is dangerous to operate recursively on %s (same as %s)\",5);\n        error(0,0,uVar13,uVar12,uVar11);\n      }\n      uVar11 = dcgettext(0,\"use --no-preserve-root to override this failsafe\",5);\n      error(0,0,uVar11);\n      fts_set(param_1,param_2,4);\n      fts_read(param_1);\n      return 0;\n    }\n    break;\n  case 2:\n    cVar6 = FUN_00406070();\n    if (cVar6 != '\\0') {\n      uVar11 = FUN_00405600(0,3,pbVar2);\n      uVar12 = dcgettext(0,\n                         \"WARNING: Circular directory structure.\\nThis almost certainly means that you have a corrupted file system.\\nNOTIFY YOUR SYSTEM MANAGER.\\nThe following directory is part of the cycle:\\n  %s\\n\"\n                         ,5);\n      error(0,0,uVar12,uVar11);\n      return 0;\n    }\n    break;\n  case 4:\n    bVar27 = *(byte *)((long)param_7 + 0x11);\n    if (bVar27 != 0) goto LAB_00402f45;\n    uVar11 = FUN_00405530(4,pbVar2);\n    pcVar19 = \"cannot read directory %s\";\nLAB_00402fe8:\n    pcVar19 = (char *)dcgettext(0,pcVar19,5);\n    uVar16 = *(undefined4 *)(param_2 + 0x40);\nLAB_00402ffa:\n    uVar15 = (uint)bVar27;\n    error(0,uVar16,pcVar19,uVar11);\n    iVar7 = *param_7;\n    goto joined_r0x00402f4c;\n  case 6:\n    if (*(char *)(param_7 + 1) == '\\0') {\n      return 1;\n    }\n    break;\n  case 7:\n    bVar27 = *(byte *)((long)param_7 + 0x11);\n    if (bVar27 == 0) {\n      uVar11 = FUN_00405600(0,3,pbVar2);\n      uVar16 = *(undefined4 *)(param_2 + 0x40);\n      pcVar19 = \"%s\";\n      goto LAB_00402ffa;\n    }\n    goto LAB_00402f45;\n  case 10:\n    if ((*(long *)(param_2 + 0x58) == 0) && (*(long *)(param_2 + 0x20) == 0)) {\n      *(undefined8 *)(param_2 + 0x20) = 1;\n      fts_set(param_1,param_2,1);\n      return 1;\n    }\n    bVar27 = *(byte *)((long)param_7 + 0x11);\n    if (bVar27 == 0) {\n      uVar11 = FUN_00405530(4,pbVar2);\n      pcVar19 = \"cannot access %s\";\n      goto LAB_00402fe8;\n    }\nLAB_00402f45:\n    iVar7 = *param_7;\n    uVar15 = 0;\njoined_r0x00402f4c:\n    if ((iVar7 == 2) || (iVar7 != 0)) goto LAB_00402e53;\n    lVar14 = *(long *)(param_7 + 8);\n    lVar22 = *(long *)(param_7 + 6);\n    uVar15 = 0;\n    local_178 = (void *)0x0;\n    local_180 = (void *)0x0;\n    local_160 = 3;\n    goto LAB_00402d9b;\n  }\n  uVar15 = (uint)uVar1;\n  pcVar19 = *(char **)(param_2 + 0x30);\n  psVar23 = (stat *)(param_2 + 0x78);\n  cVar6 = *(char *)(param_7 + 4);\n  if ((((param_5 & param_6) != 0xffffffff) || (*param_7 != 2)) || (*(long *)(param_7 + 2) != 0)) {\n    if (cVar6 != '\\0') goto LAB_00402c58;\n    goto LAB_00402c70;\n  }\n  if (cVar6 == '\\0') {\n    if (((uVar1 & 0xfffd) != 4) && (1 < (ushort)(uVar1 - 1))) {\nLAB_00402d05:\n      uVar16 = *(undefined4 *)(param_1 + 0x2c);\n      if (cVar6 == '\\0') goto LAB_00402d11;\n      if ((param_5 & param_6) == 0xffffffff) {\nLAB_004033e2:\n        iVar7 = FUN_004064d0(uVar16,pcVar19,param_3,param_4,0);\n        bVar25 = iVar7 == 0;\n        goto LAB_00402d40;\n      }\n      uVar15 = psVar23->st_mode & 0xf000;\n      if (uVar15 == 0x8000) {\n        uVar5 = 0x900;\n      }\n      else {\n        uVar5 = 0x10900;\n        if (uVar15 != 0x4000) goto LAB_004033e2;\n      }\n      iVar7 = __openat_2(uVar16,pcVar19,uVar5);\n      if (iVar7 < 0) {\n        piVar9 = __errno_location();\n        if (*piVar9 == 0xd) {\n          if ((psVar23->st_mode & 0xf000) == 0x8000) {\n            iVar7 = __openat_2(uVar16,pcVar19,uVar5 | 1);\n            if (-1 < iVar7) goto LAB_00403280;\n            if (*piVar9 != 0xd) goto LAB_00403170;\n          }\n          uVar16 = *(undefined4 *)(param_1 + 0x2c);\n          goto LAB_004033e2;\n        }\n        goto LAB_00403170;\n      }\nLAB_00403280:\n      iVar8 = __fxstat(1,iVar7,&local_c8);\n      if (iVar8 != 0) {\nLAB_004034e0:\n        piVar9 = __errno_location();\n        iVar8 = *piVar9;\n        close(iVar7);\n        *piVar9 = iVar8;\n        goto LAB_00403170;\n      }\n      if ((psVar23->st_ino == local_c8.st_ino) && (psVar23->st_dev == local_c8.st_dev)) {\n        if (((param_5 == 0xffffffff) || (param_5 == local_c8.st_uid)) &&\n           ((param_6 == 0xffffffff || (param_6 == local_c8.st_gid)))) {\n          iVar8 = fchown(iVar7,param_3,param_4);\n          if (iVar8 != 0) goto LAB_004034e0;\n          iVar7 = close(iVar7);\n          if (iVar7 != 0) goto LAB_00403170;\n        }\n        else {\n          piVar9 = __errno_location();\n          iVar8 = *piVar9;\n          close(iVar7);\n          *piVar9 = iVar8;\n        }\n        goto LAB_00402d49;\n      }\n      piVar9 = __errno_location();\n      iVar8 = *piVar9;\n      close(iVar7);\n      iVar7 = *param_7;\n      *piVar9 = iVar8;\n      if ((iVar7 == 2) || (iVar7 != 0)) {\n        uVar15 = 0;\n        goto LAB_00402e53;\n      }\n      uVar15 = 0;\nLAB_00403300:\n      local_160 = 3;\n      goto LAB_00403308;\n    }\n    uVar16 = *(undefined4 *)(param_1 + 0x2c);\nLAB_00402d11:\n    iVar7 = FUN_004064d0(uVar16,pcVar19,param_3,param_4,0x100);\n    bVar25 = iVar7 == 0;\n    if ((bVar25) || (piVar9 = __errno_location(), *piVar9 != 0x5f)) {\nLAB_00402d40:\n      if (!bVar25) {\nLAB_00403170:\n        uVar15 = (uint)*(byte *)((long)param_7 + 0x11);\n        if (*(byte *)((long)param_7 + 0x11) == 0) {\n          uVar11 = FUN_00405530(4,pbVar2);\n          if (param_3 == 0xffffffff) {\n            uVar12 = dcgettext(0,\"changing group of %s\",5);\n          }\n          else {\n            uVar12 = dcgettext(0,\"changing ownership of %s\",5);\n          }\n          piVar9 = __errno_location();\n          error(0,*piVar9,uVar12,uVar11);\n          iVar7 = *param_7;\n        }\n        else {\n          iVar7 = *param_7;\n          uVar15 = 0;\n        }\n        if ((iVar7 == 2) || (iVar7 != 0)) goto LAB_00402e53;\n        goto LAB_00403300;\n      }\nLAB_00402d49:\n      if (*param_7 == 2) {\nLAB_00403383:\n        uVar15 = 1;\n        goto LAB_00402e53;\n      }\n      if ((param_3 == 0xffffffff) || (_Var20 = psVar23->st_uid, _Var20 == param_3)) {\n        if ((param_4 == 0xffffffff) || (_Var24 = psVar23->st_gid, _Var24 == param_4)) {\n          if (*param_7 == 0) {\n            local_160 = 4;\n            uVar15 = 1;\n            goto LAB_00403308;\n          }\n          goto LAB_00403383;\n        }\n        _Var20 = psVar23->st_uid;\n        local_160 = 2;\n        uVar15 = 1;\n      }\n      else {\n        local_160 = 2;\n        _Var24 = psVar23->st_gid;\n        uVar15 = 1;\n      }\n      goto LAB_00402d7c;\n    }\n    uVar15 = 1;\n    if ((*param_7 == 2) || (*param_7 != 0)) goto LAB_00402e53;\n    local_178 = (void *)FUN_00402b80(psVar23->st_uid);\n    local_180 = (void *)FUN_00402b40(psVar23->st_gid);\n    uVar11 = FUN_00405530(4,pbVar2);\n    uVar12 = dcgettext(0,\"neither symbolic link %s nor referent has been changed\\n\",5);\n    __printf_chk(1,uVar12,uVar11);\n  }\n  else {\nLAB_00402c58:\n    if ((*(uint *)(param_2 + 0x90) & 0xf000) == 0xa000) {\n      iVar7 = __fxstatat(1,*(int *)(param_1 + 0x2c),pcVar19,&local_158,0);\n      if (iVar7 == 0) {\n        uVar15 = (uint)*(ushort *)(param_2 + 0x70);\n        psVar23 = &local_158;\n        goto LAB_00402c70;\n      }\n      uVar15 = (uint)*(byte *)((long)param_7 + 0x11);\n      if (*(byte *)((long)param_7 + 0x11) == 0) {\n        uVar11 = FUN_00405530(4,pbVar2);\n        uVar12 = dcgettext(0,\"cannot dereference %s\",5);\n        piVar9 = __errno_location();\n        error(0,*piVar9,uVar12,uVar11);\n        iVar7 = *param_7;\n      }\n      else {\n        iVar7 = *param_7;\n        uVar15 = 0;\n      }\n      if ((iVar7 == 2) || (iVar7 != 0)) goto LAB_00402e53;\n      psVar23 = &local_158;\n      local_160 = 3;\n      goto LAB_00403308;\n    }\nLAB_00402c70:\n    uVar15 = unaff_EBP & 0xffffff00 | (uint)(((ushort)uVar15 & 0xfffd) == 4) |\n             uVar15 & 0xffffff00 | (uint)((ushort)((ushort)uVar15 - 1) < 2);\n    cVar6 = (char)uVar15;\n    if ((param_5 == 0xffffffff) || (psVar23->st_uid == param_5)) {\n      if (param_6 == 0xffffffff) {\n        if (((cVar6 != '\\0') && (p_Var3 = *(__ino_t **)(param_7 + 2), p_Var3 != (__ino_t *)0x0)) &&\n           (psVar23->st_ino == *p_Var3)) {\n          bVar25 = psVar23->st_dev < p_Var3[1];\n          bVar26 = psVar23->st_dev == p_Var3[1];\n          if (bVar26) goto LAB_00403060;\n        }\n      }\n      else {\n        if (((cVar6 != '\\0') && (p_Var3 = *(__ino_t **)(param_7 + 2), p_Var3 != (__ino_t *)0x0)) &&\n           (psVar23->st_ino == *p_Var3)) {\n          bVar25 = psVar23->st_dev < p_Var3[1];\n          bVar26 = psVar23->st_dev == p_Var3[1];\n          if (bVar26) {\nLAB_00403060:\n            lVar14 = 2;\n            pbVar18 = pbVar2;\n            pbVar21 = (byte *)0x40e791;\n            do {\n              if (lVar14 == 0) break;\n              lVar14 = lVar14 + -1;\n              bVar25 = *pbVar18 < *pbVar21;\n              bVar26 = *pbVar18 == *pbVar21;\n              pbVar18 = pbVar18 + (ulong)bVar27 * -2 + 1;\n              pbVar21 = pbVar21 + (ulong)bVar27 * -2 + 1;\n            } while (bVar26);\n            if ((!bVar25 && !bVar26) == bVar25) {\n              uVar11 = FUN_00405530(4,pbVar2);\n              uVar12 = dcgettext(0,\"it is dangerous to operate recursively on %s\",5);\n              error(0,0,uVar12,uVar11);\n            }\n            else {\n              uVar11 = FUN_00405450(1,4,\"/\");\n              uVar12 = FUN_00405450(0,4,pbVar2);\n              uVar13 = dcgettext(0,\"it is dangerous to operate recursively on %s (same as %s)\",5);\n              error(0,0,uVar13,uVar12,uVar11);\n            }\n            uVar11 = dcgettext(0,\"use --no-preserve-root to override this failsafe\",5);\n            error(0,0,uVar11);\n            return 0;\n          }\n        }\n        if (psVar23->st_gid != param_6) goto LAB_004035dd;\n      }\n      cVar6 = *(char *)(param_7 + 4);\n      goto LAB_00402d05;\n    }\n    if (cVar6 == '\\0') {\n      if ((*param_7 != 2) && (*param_7 == 0)) {\n        uVar15 = 1;\n        local_160 = 4;\n        goto LAB_00403308;\n      }\n      goto LAB_00403383;\n    }\n    p_Var3 = *(__ino_t **)(param_7 + 2);\n    if ((p_Var3 == (__ino_t *)0x0) || (*p_Var3 != psVar23->st_ino)) {\n      iVar7 = *param_7;\n    }\n    else {\n      bVar25 = psVar23->st_dev < p_Var3[1];\n      bVar26 = psVar23->st_dev == p_Var3[1];\n      if (bVar26) goto LAB_00403060;\nLAB_004035dd:\n      iVar7 = *param_7;\n      uVar15 = 1;\n    }\n    if ((iVar7 == 2) || (iVar7 != 0)) goto LAB_00402e53;\n    local_160 = 4;\nLAB_00403308:\n    _Var20 = psVar23->st_uid;\n    _Var24 = psVar23->st_gid;\nLAB_00402d7c:\n    local_178 = (void *)FUN_00402b80(_Var20);\n    local_180 = (void *)FUN_00402b40(_Var24);\n    lVar14 = *(long *)(param_7 + 8);\n    lVar22 = *(long *)(param_7 + 6);\nLAB_00402d9b:\n    pvVar10 = (void *)FUN_00402a80(lVar22,lVar14);\n    pvVar17 = (void *)0x0;\n    if (lVar14 != 0) {\n      pvVar17 = local_180;\n    }\n    local_170 = pvVar10;\n    if (lVar22 == 0) {\n      local_168 = (void *)FUN_00402a80(0,pvVar17);\n      if (local_160 == 3) goto LAB_004031e0;\n      if (local_160 == 4) {\n        if (lVar14 == 0) {\n          uVar11 = dcgettext(0,\"ownership of %s retained\\n\",5);\n        }\n        else {\n          uVar11 = dcgettext(0,\"group of %s retained as %s\\n\",5);\n        }\n      }\n      else if (lVar14 == 0) {\n        uVar11 = dcgettext(0,\"no change to ownership of %s\\n\",5);\n      }\n      else {\n        uVar11 = dcgettext(0,\"changed group of %s from %s to %s\\n\",5);\n      }\n    }\n    else {\n      local_168 = (void *)FUN_00402a80(local_178,pvVar17);\n      if (local_160 == 3) {\nLAB_004031e0:\n        if (local_168 == (void *)0x0) {\n          pcVar19 = \"failed to change ownership of %s to %s\\n\";\n          if ((lVar22 == 0) && (pcVar19 = \"failed to change group of %s to %s\\n\", lVar14 == 0)) {\n            pcVar19 = \"failed to change ownership of %s\\n\";\n          }\n          uVar11 = dcgettext(0,pcVar19,5);\n          local_170 = (void *)0x0;\n          local_168 = pvVar10;\n        }\n        else if (lVar22 == 0) {\n          if (lVar14 == 0) {\n            uVar11 = dcgettext(0,\"failed to change ownership of %s\\n\",5);\n          }\n          else {\n            uVar11 = dcgettext(0,\"failed to change group of %s from %s to %s\\n\",5);\n          }\n        }\n        else {\n          uVar11 = dcgettext(0,\"failed to change ownership of %s from %s to %s\\n\",5);\n        }\n      }\n      else if (local_160 == 4) {\n        uVar11 = dcgettext(0,\"ownership of %s retained as %s\\n\",5);\n      }\n      else {\n        uVar11 = dcgettext(0,\"changed ownership of %s from %s to %s\\n\",5);\n      }\n    }\n    uVar12 = FUN_00405530(4,pbVar2);\n    __printf_chk(1,uVar11,uVar12,local_168,local_170);\n    free(local_168);\n    free(local_170);\n  }\n  free(local_178);\n  free(local_180);\nLAB_00402e53:\n  if (*(char *)(param_7 + 1) == '\\0') {\n    fts_set(param_1,param_2,4);\n  }\n  return uVar15;\n}\n\n",
            "funcName": "FUN_00402bc0"
        },
        {
            "funcStartAddr": "0x403930",
            "funcEndAddr": "0x403a3f",
            "decompiledFuncCode": "\nbyte FUN_00403930(undefined8 param_1,ulong param_2,undefined4 param_3,undefined4 param_4,\n                 uint param_5,uint param_6,int *param_7)\n\n{\n  uint uVar1;\n  byte bVar2;\n  int iVar3;\n  undefined8 uVar4;\n  long lVar5;\n  int *piVar6;\n  undefined8 uVar7;\n  byte bVar8;\n  \n  if (((param_5 & param_6) == 0xffffffff) && (*(char *)(param_7 + 4) == '\\0')) {\n    uVar1 = (uint)param_2;\n    param_2 = param_2 & 0xffffffff;\n    if (*param_7 == 2) {\n      param_2 = (ulong)(uVar1 | 8);\n    }\n  }\n  bVar8 = 1;\n  uVar4 = FUN_00406020(param_1,param_2,0);\n  while (lVar5 = fts_read(uVar4), lVar5 != 0) {\n    bVar2 = FUN_00402bc0(uVar4,lVar5,param_3,param_4,param_5,param_6,param_7);\n    bVar8 = bVar8 & bVar2;\n  }\n  piVar6 = __errno_location();\n  if (*piVar6 != 0) {\n    bVar8 = *(byte *)((long)param_7 + 0x11);\n    if (bVar8 == 0) {\n      uVar7 = dcgettext(0,\"fts_read failed\",5);\n      error(0,*piVar6,uVar7);\n    }\n    else {\n      bVar8 = 0;\n    }\n  }\n  iVar3 = fts_close(uVar4);\n  if (iVar3 != 0) {\n    bVar8 = 0;\n    uVar4 = dcgettext(0,\"fts_close failed\",5);\n    error(0,*piVar6,uVar4);\n  }\n  return bVar8;\n}\n\n",
            "funcName": "FUN_00403930"
        },
        {
            "funcStartAddr": "0x403a50",
            "funcEndAddr": "0x403a58",
            "decompiledFuncCode": "\nvoid FUN_00403a50(undefined8 param_1)\n\n{\n  DAT_00611380 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00403a50"
        },
        {
            "funcStartAddr": "0x403a60",
            "funcEndAddr": "0x403a68",
            "decompiledFuncCode": "\nvoid FUN_00403a60(undefined param_1)\n\n{\n  DAT_00611378 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00403a60"
        },
        {
            "funcStartAddr": "0x403a70",
            "funcEndAddr": "0x403b0e",
            "decompiledFuncCode": "\nvoid FUN_00403a70(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_00409990(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_00611378 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_00611380 == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = FUN_004055d0();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_00403aee;\n    }\n  }\n  iVar1 = FUN_00409990(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_00403aee:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_006112b8);\n}\n\n",
            "funcName": "FUN_00403a70"
        },
        {
            "funcStartAddr": "0x403b10",
            "funcEndAddr": "0x403b54",
            "decompiledFuncCode": "\nchar * FUN_00403b10(ulong param_1,long param_2)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  \n  pcVar2 = (char *)(param_2 + 0x14);\n  *(undefined *)(param_2 + 0x14) = 0;\n  do {\n    pcVar2 = pcVar2 + -1;\n    *pcVar2 = (char)param_1 + (char)(param_1 / 10) * -10 + '0';\n    bVar1 = 9 < param_1;\n    param_1 = param_1 / 10;\n  } while (bVar1);\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_00403b10"
        },
        {
            "funcStartAddr": "0x403b60",
            "funcEndAddr": "0x403bf9",
            "decompiledFuncCode": "\nvoid FUN_00403b60(byte *param_1)\n\n{\n  byte *pbVar1;\n  char *pcVar2;\n  long lVar3;\n  ulong uVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  byte bVar10;\n  \n  bVar10 = 0;\n  if (param_1 == (byte *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar2 = strrchr((char *)param_1,0x2f);\n  if (pcVar2 != (char *)0x0) {\n    pbVar1 = (byte *)(pcVar2 + 1);\n    uVar4 = (long)pbVar1 - (long)param_1;\n    bVar7 = uVar4 < 6;\n    bVar9 = uVar4 == 6;\n    if (6 < (long)uVar4) {\n      lVar3 = 7;\n      pbVar5 = (byte *)(pcVar2 + -6);\n      pbVar6 = (byte *)\"/.libs/\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar5 < *pbVar6;\n        bVar9 = *pbVar5 == *pbVar6;\n        pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      bVar8 = false;\n      bVar7 = (!bVar7 && !bVar9) == bVar7;\n      if (bVar7) {\n        lVar3 = 3;\n        pbVar5 = pbVar1;\n        pbVar6 = &DAT_0040d160;\n        do {\n          if (lVar3 == 0) break;\n          lVar3 = lVar3 + -1;\n          bVar8 = *pbVar5 < *pbVar6;\n          bVar7 = *pbVar5 == *pbVar6;\n          pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n          pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        } while (bVar7);\n        param_1 = pbVar1;\n        if ((!bVar8 && !bVar7) == bVar8) {\n          param_1 = (byte *)(pcVar2 + 4);\n          program_invocation_short_name = param_1;\n        }\n      }\n    }\n  }\n  DAT_00611388 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00403b60"
        },
        {
            "funcStartAddr": "0x403c00",
            "funcEndAddr": "0x403cdf",
            "decompiledFuncCode": "\nchar * FUN_00403c00(char *param_1,int param_2)\n\n{\n  char cVar1;\n  char *pcVar2;\n  byte *pbVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    pbVar3 = (byte *)FUN_0040ae40();\n    if ((*pbVar3 & 0xdf) == 0x55) {\n      if (((((pbVar3[1] & 0xdf) != 0x54) || ((pbVar3[2] & 0xdf) != 0x46)) || (pbVar3[3] != 0x2d)) ||\n         ((pbVar3[4] != 0x38 || (pbVar3[5] != 0)))) {\nLAB_00403cd8:\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_0040d171;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0040d166;\n      }\n    }\n    else {\n      if (((((*pbVar3 & 0xdf) != 0x47) || ((pbVar3[1] & 0xdf) != 0x42)) || (pbVar3[2] != 0x31)) ||\n         (((pbVar3[3] != 0x38 || (pbVar3[4] != 0x30)) ||\n          ((pbVar3[5] != 0x33 || ((pbVar3[6] != 0x30 || (pbVar3[7] != 0)))))))) goto LAB_00403cd8;\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_0040d16d;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0040d16a;\n      }\n    }\n  }\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_00403c00"
        },
        {
            "funcStartAddr": "0x403d00",
            "funcEndAddr": "0x404e33",
            "decompiledFuncCode": "\nulong FUN_00403d00(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  ulong uVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ulong uVar9;\n  ushort **ppuVar10;\n  long lVar11;\n  char *pcVar12;\n  byte bVar13;\n  char cVar14;\n  ulong uVar15;\n  ulong uVar16;\n  byte bVar17;\n  uint uVar18;\n  ulong uVar19;\n  bool bVar20;\n  ulong uVar21;\n  ulong uVar22;\n  bool bVar23;\n  bool bVar24;\n  bool bVar25;\n  bool bVar26;\n  size_t local_a0;\n  char *local_78;\n  ulong local_70;\n  bool local_5c;\n  bool local_5b;\n  wint_t local_44;\n  mbstate_t local_40 [2];\n  \n  sVar8 = __ctype_get_mb_cur_max();\n  uVar18 = param_6 & 2;\n  local_5c = uVar18 != 0;\n  uVar9 = param_2;\n  switch(param_5) {\n  case 0:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = false;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar18 != 0) {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = false;\n      local_a0 = 1;\n      local_78 = \"\\'\";\n      break;\n    }\n    bVar6 = false;\nLAB_00404951:\n    if (param_2 != 0) {\n      bVar3 = false;\n      local_5b = false;\n      bVar2 = true;\n      local_70 = 0;\n      goto LAB_00404586;\n    }\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 1;\n    param_5 = 2;\n    local_70 = 0;\n    local_5b = false;\n    local_5c = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 3:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 4:\n    if (uVar18 == 0) {\n      bVar6 = true;\n      goto LAB_00404951;\n    }\n  case 1:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 5:\n    if (uVar18 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      local_5b = false;\n      local_70 = 0;\n      bVar2 = true;\n      bVar3 = false;\n      local_5c = false;\n      uVar15 = 1;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    else {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 5;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\\"\";\n    break;\n  case 7:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = true;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      param_8 = (char *)FUN_00403c00(&DAT_0040d175,param_5);\n      param_9 = (char *)FUN_00403c00(&DAT_0040e9b4);\n    }\n    uVar15 = 0;\n    if (uVar18 == 0) {\n      cVar14 = *param_8;\n      while (cVar14 != '\\0') {\n        if (uVar15 < param_2) {\n          param_1[uVar15] = cVar14;\n        }\n        uVar15 = uVar15 + 1;\n        cVar14 = param_8[uVar15];\n      }\n    }\n    local_a0 = strlen(param_9);\n    bVar2 = true;\n    bVar3 = false;\n    local_78 = param_9;\n    local_5b = false;\n    local_70 = 0;\n    bVar6 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\nLAB_00403d98:\n  uVar22 = 0;\n  bVar5 = local_5b;\nLAB_00403da8:\n  bVar23 = param_4 != uVar22;\n  if (param_4 == 0xffffffffffffffff) {\n    bVar23 = param_3[uVar22] != '\\0';\n  }\n  bVar26 = bVar6;\n  if (!bVar23) goto LAB_00404528;\n  bVar20 = (bool)(param_5 != 2 & bVar6);\n  __s1 = (byte *)(param_3 + uVar22);\n  uVar16 = uVar15;\n  bVar4 = bVar3;\n  if (bVar20) {\n    if (local_a0 == 0) {\nLAB_004044a0:\n      uVar19 = (ulong)*__s1;\n      switch(uVar19) {\n      case 0:\n        goto switchD_004044b2_caseD_0;\n      default:\n        bVar20 = false;\n        goto switchD_0040431e_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_004041b5;\n      case 8:\n        bVar17 = 0x62;\n        break;\n      case 9:\nswitchD_004044b2_caseD_9:\n        bVar17 = 0x74;\n        break;\n      case 10:\nswitchD_004044b2_caseD_a:\n        bVar17 = 0x6e;\n        break;\n      case 0xb:\nswitchD_004044b2_caseD_b:\n        bVar17 = 0x76;\n        goto LAB_004041b5;\n      case 0xc:\nswitchD_004044b2_caseD_c:\n        bVar17 = 0x66;\nLAB_004041b5:\n        if (local_5c) {\n          bVar25 = false;\n          goto LAB_00404108;\n        }\nLAB_004041c0:\n        bVar23 = false;\n        goto LAB_00403f7b;\n      case 0xd:\n        bVar20 = false;\nswitchD_00403e98_caseD_d:\n        bVar25 = param_5 == 2;\n        uVar19 = 0xd;\n        bVar13 = 0x72;\n        goto LAB_004040d0;\n      case 0x20:\n        bVar25 = false;\nLAB_004044fa:\n        uVar19 = 0x20;\n        goto LAB_004044c2;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar20 = false;\nswitchD_00403e98_caseD_21:\n        bVar25 = false;\n        goto LAB_004040db;\n      case 0x23:\n      case 0x7e:\n        bVar26 = false;\nLAB_004044da:\n        if (uVar22 == 0) {\n          bVar25 = false;\n          bVar23 = bVar20;\n          bVar20 = bVar26;\n          goto LAB_00403ee8;\n        }\n        bVar23 = false;\n        goto LAB_00403eff;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar25 = false;\nLAB_004044c2:\n        bVar24 = false;\n        bVar23 = bVar20;\n        bVar20 = bVar25;\n        goto LAB_00403f01;\n      case 0x27:\n        bVar20 = false;\n        goto switchD_0040431e_caseD_27;\n      case 0x3f:\n        bVar20 = false;\n        goto switchD_0040431e_caseD_3f;\n      case 0x5c:\n        bVar20 = false;\n        goto switchD_00403e98_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        bVar20 = false;\n        goto switchD_0040431e_caseD_7b;\n      }\n      bVar25 = false;\n      bVar23 = false;\n      goto joined_r0x004040f7;\n    }\n    if ((param_4 == 0xffffffffffffffff) && (1 < local_a0)) {\n      param_4 = strlen(param_3);\n    }\n    if ((param_4 < uVar22 + local_a0) || (iVar7 = memcmp(__s1,local_78,local_a0), iVar7 != 0))\n    goto LAB_004044a0;\n    if (!local_5c) {\n      uVar19 = (ulong)*__s1;\n      bVar25 = bVar20;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00403e98_caseD_0;\n      default:\n        goto switchD_0040431e_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_004041c0;\n      case 8:\n        bVar25 = false;\n        bVar23 = false;\n        bVar17 = 0x62;\n        break;\n      case 9:\n        goto switchD_004044b2_caseD_9;\n      case 10:\n        goto switchD_004044b2_caseD_a;\n      case 0xb:\n        goto switchD_004044b2_caseD_b;\n      case 0xc:\n        goto switchD_004044b2_caseD_c;\n      case 0xd:\n        goto switchD_00403e98_caseD_d;\n      case 0x20:\n        goto LAB_004044fa;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        goto switchD_00403e98_caseD_21;\n      case 0x23:\n      case 0x7e:\n        bVar26 = bVar20;\n        goto LAB_004044da;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        goto LAB_004044c2;\n      case 0x27:\n        goto switchD_0040431e_caseD_27;\n      case 0x3f:\n        goto switchD_0040431e_caseD_3f;\n      case 0x5c:\n        goto switchD_00403e98_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        goto switchD_0040431e_caseD_7b;\n      }\n      goto LAB_00403f42;\n    }\n    goto LAB_0040411a;\n  }\n  uVar19 = (ulong)*__s1;\n  switch(uVar19) {\n  case 0:\n    if (bVar6) {\nswitchD_004044b2_caseD_0:\n      if (!local_5c) {\n        bVar20 = false;\nswitchD_00403e98_caseD_0:\n        bVar26 = param_5 == 2;\n        bVar24 = (bool)((bVar3 ^ 1U) & bVar26);\n        if (bVar24) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar16 = uVar15 + 3;\n          bVar3 = bVar24;\n          if (uVar9 <= uVar15 + 3) {\n            uVar16 = uVar15 + 4;\n            bVar23 = false;\n            bVar17 = 0x30;\n            bVar4 = bVar24;\n            goto LAB_00403ff8;\n          }\nLAB_0040423a:\n          param_1[uVar16] = 0x5c;\n          uVar15 = uVar16;\n        }\n        else if (uVar15 < uVar9) goto LAB_0040423a;\n        uVar16 = uVar15 + 1;\n        bVar24 = bVar23;\n        if (param_5 == 2) {\n          bVar17 = 0x30;\n          bVar23 = false;\n          bVar4 = bVar3;\n          goto LAB_00403ff8;\n        }\n        uVar19 = 0x30;\n        if ((uVar22 + 1 < param_4) && ((byte)(param_3[uVar22 + 1] - 0x30U) < 10)) {\n          if (uVar16 < uVar9) {\n            param_1[uVar16] = 0x30;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x30;\n          }\n          uVar16 = uVar15 + 3;\n          uVar19 = 0x30;\n        }\nLAB_00404279:\n        bVar17 = (byte)uVar19;\n        bVar23 = false;\n        uVar15 = uVar16;\n        bVar4 = bVar3;\n        if ((bool)(bVar6 ^ 1U | bVar26)) goto LAB_00403ff8;\n        goto LAB_00403f01;\n      }\n      bVar26 = param_5 == 2;\n      goto LAB_0040410c;\n    }\n    if ((param_6 & 1) == 0) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0;\n      bVar23 = false;\n      bVar20 = false;\n      goto LAB_00403ee8;\n    }\n    uVar22 = uVar22 + 1;\n    goto LAB_00403da8;\n  default:\nswitchD_0040431e_caseD_1:\n    bVar25 = bVar6;\n    if (sVar8 != 1) {\n      local_40[0] = (mbstate_t)0x0;\n      if (param_4 == 0xffffffffffffffff) {\n        param_4 = strlen(param_3);\n      }\n      uVar21 = 0;\n      do {\n        uVar1 = uVar22 + uVar21;\n        lVar11 = FUN_004097e0(&local_44,param_3 + uVar1,param_4 - uVar1,local_40);\n        if (lVar11 == 0) break;\n        if (lVar11 == -1) {\n          bVar23 = false;\n          goto LAB_00404c2a;\n        }\n        if (lVar11 == -2) {\n          if ((param_4 <= uVar1) || (param_3[uVar1] == '\\0')) goto LAB_00404d67;\n          goto LAB_00404d57;\n        }\n        if (((param_5 == 2) && (local_5c)) && (lVar11 != 1)) {\n          pcVar12 = param_3 + uVar1 + 1;\n          do {\n            if (((byte)(*pcVar12 + 0xa5U) < 0x22) &&\n               ((1L << (*pcVar12 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n              param_5 = 2;\n              goto LAB_0040410c;\n            }\n            pcVar12 = pcVar12 + 1;\n          } while (param_3 + uVar1 + lVar11 != pcVar12);\n        }\n        iVar7 = iswprint(local_44);\n        if (iVar7 == 0) {\n          bVar23 = false;\n        }\n        uVar21 = uVar21 + lVar11;\n        iVar7 = mbsinit(local_40);\n      } while (iVar7 == 0);\n      bVar25 = (bool)((bVar23 ^ 1U) & bVar6);\n      goto LAB_00404c2a;\n    }\n    ppuVar10 = __ctype_b_loc();\n    uVar21 = 1;\n    bVar25 = ((*ppuVar10)[uVar19] & 0x4000) == 0;\n    bVar23 = !bVar25;\n    bVar25 = (bool)(bVar25 & bVar6);\n    goto LAB_004042f4;\n  case 7:\n    bVar25 = param_5 == 2;\n    uVar19 = 7;\n    bVar13 = 0x61;\n    break;\n  case 8:\n    bVar25 = param_5 == 2;\n    uVar19 = 8;\n    bVar13 = 0x62;\n    break;\n  case 9:\n    uVar19 = 9;\n    bVar13 = 0x74;\n    goto LAB_00404332;\n  case 10:\n    uVar19 = 10;\n    bVar13 = 0x6e;\n    goto LAB_00404332;\n  case 0xb:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xb;\n    bVar13 = 0x76;\n    break;\n  case 0xc:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xc;\n    bVar13 = 0x66;\n    break;\n  case 0xd:\n    uVar19 = 0xd;\n    bVar13 = 0x72;\nLAB_00404332:\n    bVar25 = param_5 == 2;\n    bVar20 = (bool)(local_5c & bVar25);\n    if (bVar20) {\nLAB_0040434a:\n      param_5 = 2;\n      goto LAB_0040410c;\n    }\n    break;\n  case 0x20:\n    uVar19 = 0x20;\n    goto LAB_00403ed6;\n  case 0x21:\n  case 0x22:\n  case 0x24:\n  case 0x26:\n  case 0x28:\n  case 0x29:\n  case 0x2a:\n  case 0x3b:\n  case 0x3c:\n  case 0x3d:\n  case 0x3e:\n  case 0x5b:\n  case 0x5e:\n  case 0x60:\n  case 0x7c:\n    bVar23 = false;\nLAB_00403ed6:\n    bVar25 = param_5 == 2;\n    if ((local_5c) && (bVar25)) goto LAB_0040434a;\n    goto LAB_00403ee8;\n  case 0x23:\n  case 0x7e:\nLAB_00403ecd:\n    bVar25 = param_5 == 2;\n    if (uVar22 == 0) goto LAB_00403ed6;\n    goto LAB_004040db;\n  case 0x25:\n  case 0x2b:\n  case 0x2c:\n  case 0x2d:\n  case 0x2e:\n  case 0x2f:\n  case 0x30:\n  case 0x31:\n  case 0x32:\n  case 0x33:\n  case 0x34:\n  case 0x35:\n  case 0x36:\n  case 0x37:\n  case 0x38:\n  case 0x39:\n  case 0x3a:\n  case 0x41:\n  case 0x42:\n  case 0x43:\n  case 0x44:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x48:\n  case 0x49:\n  case 0x4a:\n  case 0x4b:\n  case 0x4c:\n  case 0x4d:\n  case 0x4e:\n  case 0x4f:\n  case 0x50:\n  case 0x51:\n  case 0x52:\n  case 0x53:\n  case 0x54:\n  case 0x55:\n  case 0x56:\n  case 0x57:\n  case 0x58:\n  case 0x59:\n  case 0x5a:\n  case 0x5d:\n  case 0x5f:\n  case 0x61:\n  case 0x62:\n  case 99:\n  case 100:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n  case 0x68:\n  case 0x69:\n  case 0x6a:\n  case 0x6b:\n  case 0x6c:\n  case 0x6d:\n  case 0x6e:\n  case 0x6f:\n  case 0x70:\n  case 0x71:\n  case 0x72:\n  case 0x73:\n  case 0x74:\n  case 0x75:\n  case 0x76:\n  case 0x77:\n  case 0x78:\n  case 0x79:\n  case 0x7a:\n    goto switchD_0040431e_caseD_25;\n  case 0x27:\nswitchD_0040431e_caseD_27:\n    bVar5 = bVar23;\n    if (param_5 != 2) {\n      bVar25 = false;\n      uVar19 = 0x27;\n      goto LAB_00403ee8;\n    }\n    if (!local_5c) {\n      if ((uVar9 == 0) || (uVar19 = 0, uVar21 = uVar9, local_70 != 0)) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x5c;\n        }\n        uVar19 = uVar9;\n        uVar21 = local_70;\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x27;\n        }\n      }\n      uVar16 = uVar15 + 3;\n      bVar17 = 0x27;\n      uVar9 = uVar19;\n      local_70 = uVar21;\n      bVar24 = false;\n      bVar4 = false;\n      goto LAB_00403ff8;\n    }\n    goto LAB_0040410c;\n  case 0x3f:\nswitchD_0040431e_caseD_3f:\n    if (param_5 == 2) {\n      if (!local_5c) {\n        bVar17 = 0x3f;\n        bVar24 = false;\n        bVar23 = false;\n        goto LAB_00403ff8;\n      }\n      goto LAB_0040410c;\n    }\n    if (param_5 != 5) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0x3f;\n      bVar23 = false;\n      goto LAB_00403ee8;\n    }\n    if (((((param_6 & 4) != 0) && (uVar21 = uVar22 + 2, uVar21 < param_4)) &&\n        (param_3[uVar22 + 1] == '?')) &&\n       ((uVar19 = (ulong)(byte)param_3[uVar21], (byte)param_3[uVar21] < 0x3f &&\n        ((0x7000a38200000000U >> (uVar19 & 0x3f) & 1) != 0)))) {\n      if (!local_5c) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x3f;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x22;\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x22;\n        }\n        if (uVar15 + 3 < uVar9) {\n          param_1[uVar15 + 3] = 0x3f;\n        }\n        uVar16 = uVar15 + 4;\n        bVar26 = false;\n        uVar22 = uVar21;\n        bVar24 = false;\n        goto LAB_00404279;\n      }\n      goto LAB_0040411a;\n    }\n    bVar25 = false;\n    uVar19 = 0x3f;\n    bVar23 = false;\n    goto LAB_00403ee8;\n  case 0x5c:\n    if (param_5 != 2) {\nswitchD_00403e98_caseD_5c:\n      uVar19 = 0x5c;\n      bVar17 = 0x5c;\n      bVar13 = 0x5c;\n      bVar25 = (bool)(bVar6 & local_5c & local_a0 != 0);\n      if (!bVar25) break;\n      uVar22 = uVar22 + 1;\n      bVar23 = false;\n      goto LAB_00404014;\n    }\n    if (local_5c) goto LAB_0040410c;\n    uVar22 = uVar22 + 1;\n    bVar23 = false;\n    bVar17 = 0x5c;\n    goto LAB_00404014;\n  case 0x7b:\n  case 0x7d:\nswitchD_0040431e_caseD_7b:\n    bVar24 = param_4 != 1;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar24 = param_3[1] != '\\0';\n    }\n    bVar25 = param_5 == 2;\n    if (!bVar24) goto LAB_00403ecd;\n    goto LAB_004040db;\n  }\nLAB_004040d0:\n  if (!bVar6) {\nLAB_004040db:\n    bVar23 = false;\n    goto LAB_00403ee8;\n  }\n  bVar23 = false;\n  bVar17 = bVar13;\n  goto joined_r0x004040f7;\nLAB_00404528:\n  if ((uVar15 == 0) && ((bool)(local_5c & param_5 == 2))) {\n    param_5 = 2;\nLAB_0040410c:\n    if (bVar26) {\n      param_5 = 4;\n    }\nLAB_0040411a:\n    uVar9 = FUN_00403d00(param_1,uVar9,param_3,param_4,param_5,param_6 & 0xfffffffd,0,param_8,\n                         param_9);\n    return uVar9;\n  }\n  bVar26 = (bool)(param_5 == 2 & (local_5c ^ 1U));\n  bVar23 = (bool)(local_5c ^ 1U);\n  if ((!bVar26) || (bVar23 = bVar26, !bVar5)) {\nLAB_00404dfd:\n    uVar22 = uVar15;\n    if (((local_78 != (char *)0x0) && (bVar23)) && (cVar14 = *local_78, cVar14 != '\\0')) {\n      do {\n        if (uVar22 < uVar9) {\n          param_1[uVar22] = cVar14;\n        }\n        uVar22 = uVar22 + 1;\n        cVar14 = local_78[uVar22 - uVar15];\n      } while (cVar14 != '\\0');\n    }\n    if (uVar22 < uVar9) {\n      param_1[uVar22] = 0;\n    }\n    return uVar22;\n  }\n  if (bVar2) {\n    uVar9 = FUN_00403d00(param_1,local_70,param_3,param_4,5,param_6,param_7,param_8,param_9);\n    return uVar9;\n  }\n  local_5b = uVar9 == 0 && local_70 != 0;\n  param_2 = local_70;\n  bVar23 = bVar5;\n  if (uVar9 != 0 || local_70 == 0) goto LAB_00404dfd;\nLAB_00404586:\n  *param_1 = 0x27;\n  param_5 = 2;\n  uVar15 = 1;\n  local_78 = \"\\'\";\n  local_a0 = 1;\n  local_5c = false;\n  uVar9 = param_2;\n  goto LAB_00403d98;\n  while (__s1[uVar21] != 0) {\nLAB_00404d57:\n    uVar21 = uVar21 + 1;\n    if (param_4 <= uVar22 + uVar21) break;\n  }\nLAB_00404d67:\n  bVar23 = false;\nLAB_00404c2a:\n  if (1 < uVar21) {\nLAB_004047ee:\n    bVar26 = false;\n    uVar21 = uVar21 + uVar22;\n    uVar16 = uVar22;\n    do {\n      bVar17 = (byte)uVar19;\n      if (bVar25) {\n        bVar26 = param_5 == 2;\n        if (local_5c) goto LAB_0040410c;\n        bVar26 = (bool)(bVar26 & (bVar4 ^ 1U));\n        if (bVar26) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar15 = uVar15 + 3;\n          bVar4 = bVar26;\n        }\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x5c;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = (char)(uVar19 >> 6) + '0';\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = ((byte)(uVar19 >> 3) & 7) + 0x30;\n        }\n        uVar22 = uVar16 + 1;\n        uVar15 = uVar15 + 3;\n        bVar17 = (bVar17 & 7) + 0x30;\n        bVar26 = bVar25;\n        if (uVar21 <= uVar22) goto LAB_00403f8d;\n      }\n      else {\n        bVar3 = (bool)((bVar26 ^ 1U) & bVar4);\n        if (bVar20) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x5c;\n          }\n          uVar15 = uVar15 + 1;\n        }\n        uVar22 = uVar16 + 1;\n        if (uVar21 <= uVar22) goto LAB_00404014;\n        if (bVar3) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x27;\n          }\n          uVar15 = uVar15 + 2;\n          bVar20 = false;\n          bVar4 = false;\n        }\n        else {\n          bVar20 = false;\n        }\n      }\n      uVar16 = uVar16 + 1;\n      if (uVar15 < uVar9) {\n        param_1[uVar15] = bVar17;\n      }\n      uVar19 = (ulong)(byte)param_3[uVar16];\n      uVar15 = uVar15 + 1;\n    } while( true );\n  }\nLAB_004042f4:\n  if (bVar25) {\n    bVar23 = false;\n    bVar25 = bVar6;\n    goto LAB_004047ee;\n  }\nswitchD_0040431e_caseD_25:\n  bVar25 = param_5 == 2;\nLAB_00403ee8:\n  bVar17 = (byte)uVar19;\n  bVar24 = (bool)((bVar6 ^ 1U | bVar25) ^ 1 | local_5c);\n  bVar26 = bVar20;\n  if (bVar24) {\nLAB_00403eff:\n    bVar24 = false;\n    bVar20 = bVar26;\nLAB_00403f01:\n    bVar17 = (byte)uVar19;\n    uVar16 = uVar15;\n    bVar4 = bVar3;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar19 >> 5) * 4) >> (bVar17 & 0x1f) & 1) == 0))\n    goto LAB_00403ff8;\n    bVar25 = param_5 == 2;\n  }\n  else {\nLAB_00403ff8:\n    bVar25 = param_5 == 2;\n    uVar15 = uVar16;\n    bVar3 = bVar4;\n    if (!bVar20) {\n      uVar22 = uVar22 + 1;\n      bVar3 = (bool)((bVar24 ^ 1U) & bVar4);\nLAB_00404014:\n      if (bVar3) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x27;\n        }\n        uVar15 = uVar15 + 2;\n        bVar4 = false;\n      }\n      goto LAB_00403f8d;\n    }\n  }\njoined_r0x004040f7:\n  if (local_5c) {\nLAB_00404108:\n    bVar26 = (bool)(bVar6 & bVar25);\n    goto LAB_0040410c;\n  }\nLAB_00403f42:\n  bVar25 = (bool)((bVar3 ^ 1U) & bVar25);\n  if (bVar25) {\n    if (uVar15 < uVar9) {\n      param_1[uVar15] = 0x27;\n    }\n    if (uVar15 + 1 < uVar9) {\n      param_1[uVar15 + 1] = 0x24;\n    }\n    if (uVar15 + 2 < uVar9) {\n      param_1[uVar15 + 2] = 0x27;\n    }\n    uVar15 = uVar15 + 3;\n    bVar3 = bVar25;\n  }\nLAB_00403f7b:\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = 0x5c;\n  }\n  uVar15 = uVar15 + 1;\n  uVar22 = uVar22 + 1;\n  bVar4 = bVar3;\nLAB_00403f8d:\n  bVar3 = bVar4;\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = bVar17;\n  }\n  uVar15 = uVar15 + 1;\n  if (!bVar23) {\n    bVar2 = false;\n  }\n  goto LAB_00403da8;\n}\n\n",
            "funcName": "FUN_00403d00"
        },
        {
            "funcStartAddr": "0x404f30",
            "funcEndAddr": "0x4050cb",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_00404f30(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_006112f8;\n  if (DAT_00611310 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00405fe0();\n    }\n    if (PTR_DAT_006112f8 == &DAT_00611300) {\n      puVar8 = (undefined4 *)FUN_00405df0(0);\n      uVar6 = PTR_DAT_00611308._4_4_;\n      uVar5 = PTR_DAT_00611308._0_4_;\n      uVar3 = _UNK_00611304;\n      PTR_DAT_006112f8 = (undefined *)puVar8;\n      *puVar8 = _DAT_00611300;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_00405df0(PTR_DAT_006112f8);\n      PTR_DAT_006112f8 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_00611310 * 4,0,(long)((param_1 + 1) - DAT_00611310) << 4);\n    DAT_00611310 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_00403d00(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_006113a0) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)FUN_00405d90(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_00403d00(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n",
            "funcName": "FUN_00404f30"
        },
        {
            "funcStartAddr": "0x4050d0",
            "funcEndAddr": "0x405104",
            "decompiledFuncCode": "\nvoid FUN_004050d0(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_006114a0;\n  }\n  FUN_00405f90(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_004050d0"
        },
        {
            "funcStartAddr": "0x405110",
            "funcEndAddr": "0x40511f",
            "decompiledFuncCode": "\nundefined4 FUN_00405110(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_006114a0;\n  }\n  return *param_1;\n}\n\n",
            "funcName": "FUN_00405110"
        },
        {
            "funcStartAddr": "0x405120",
            "funcEndAddr": "0x40512f",
            "decompiledFuncCode": "\nvoid FUN_00405120(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_006114a0;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_00405120"
        },
        {
            "funcStartAddr": "0x405130",
            "funcEndAddr": "0x405163",
            "decompiledFuncCode": "\nuint FUN_00405130(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_006114a0;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n",
            "funcName": "FUN_00405130"
        },
        {
            "funcStartAddr": "0x405170",
            "funcEndAddr": "0x405183",
            "decompiledFuncCode": "\nundefined4 FUN_00405170(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_006114a0;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00405170"
        },
        {
            "funcStartAddr": "0x405190",
            "funcEndAddr": "0x4051bb",
            "decompiledFuncCode": "\nvoid FUN_00405190(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_006114a0;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405190"
        },
        {
            "funcStartAddr": "0x4051c0",
            "funcEndAddr": "0x405232",
            "decompiledFuncCode": "\nvoid FUN_004051c0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_006114a0;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00403d00(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_004051c0"
        },
        {
            "funcStartAddr": "0x405240",
            "funcEndAddr": "0x405321",
            "decompiledFuncCode": "\nundefined8 FUN_00405240(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_006114a0;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00403d00(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = FUN_00405d90(lVar3 + 1);\n  FUN_00403d00(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n",
            "funcName": "FUN_00405240"
        },
        {
            "funcStartAddr": "0x405330",
            "funcEndAddr": "0x40533a",
            "decompiledFuncCode": "\nvoid FUN_00405330(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00405240(param_1,param_2,0,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00405330"
        },
        {
            "funcStartAddr": "0x405340",
            "funcEndAddr": "0x4053d5",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00405340(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_006112f8;\n  if (1 < DAT_00611310) {\n    ppvVar2 = (void **)(PTR_DAT_006112f8 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_006112f8 + (ulong)(DAT_00611310 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_006113a0) {\n    free(*(undefined **)(__ptr_00 + 8));\n    _DAT_00611300 = 0x100;\n    PTR_DAT_00611308 = &DAT_006113a0;\n  }\n  if (__ptr_00 != &DAT_00611300) {\n    free(__ptr_00);\n    PTR_DAT_006112f8 = &DAT_00611300;\n  }\n  DAT_00611310 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00405340"
        },
        {
            "funcStartAddr": "0x4053e0",
            "funcEndAddr": "0x4053f1",
            "decompiledFuncCode": "\nvoid FUN_004053e0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00404f30(param_1,param_2,0xffffffffffffffff,&DAT_006114a0);\n  return;\n}\n\n",
            "funcName": "FUN_004053e0"
        },
        {
            "funcStartAddr": "0x405400",
            "funcEndAddr": "0x40540a",
            "decompiledFuncCode": "\nvoid FUN_00405400(void)\n\n{\n  FUN_00404f30();\n  return;\n}\n\n",
            "funcName": "FUN_00405400"
        },
        {
            "funcStartAddr": "0x405410",
            "funcEndAddr": "0x405426",
            "decompiledFuncCode": "\nvoid FUN_00405410(undefined8 param_1)\n\n{\n  FUN_00404f30(0,param_1,0xffffffffffffffff,&DAT_006114a0);\n  return;\n}\n\n",
            "funcName": "FUN_00405410"
        },
        {
            "funcStartAddr": "0x405430",
            "funcEndAddr": "0x405442",
            "decompiledFuncCode": "\nvoid FUN_00405430(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00404f30(0,param_1,param_2,&DAT_006114a0);\n  return;\n}\n\n",
            "funcName": "FUN_00405430"
        },
        {
            "funcStartAddr": "0x405450",
            "funcEndAddr": "0x4054b8",
            "decompiledFuncCode": "\nvoid FUN_00405450(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00404f30(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405450"
        },
        {
            "funcStartAddr": "0x4054c0",
            "funcEndAddr": "0x405524",
            "decompiledFuncCode": "\nvoid FUN_004054c0(undefined8 param_1,int param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00404f30(param_1,param_3,param_4,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004054c0"
        },
        {
            "funcStartAddr": "0x405530",
            "funcEndAddr": "0x40553c",
            "decompiledFuncCode": "\nvoid FUN_00405530(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00405450(0,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00405530"
        },
        {
            "funcStartAddr": "0x405540",
            "funcEndAddr": "0x40554f",
            "decompiledFuncCode": "\nvoid FUN_00405540(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_004054c0(0,param_1,param_2,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00405540"
        },
        {
            "funcStartAddr": "0x405550",
            "funcEndAddr": "0x4055c0",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00405550(undefined8 param_1,undefined8 param_2,byte param_3)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  \n  local_18 = DAT_006114d0;\n  local_48 = _DAT_006114a0;\n  uStack_40 = uRam00000000006114a8;\n  local_38 = _DAT_006114b0;\n  uStack_30 = uRam00000000006114b8;\n  puVar1 = (uint *)((long)&uStack_40 + (ulong)(param_3 >> 5) * 4);\n  local_28 = _DAT_006114c0;\n  uStack_20 = uRam00000000006114c8;\n  uVar2 = *puVar1;\n  *puVar1 = (~(uVar2 >> (param_3 & 0x1f)) & 1) << (param_3 & 0x1f) ^ uVar2;\n  FUN_00404f30(0,param_1,param_2,&local_48);\n  return;\n}\n\n",
            "funcName": "FUN_00405550"
        },
        {
            "funcStartAddr": "0x4055c0",
            "funcEndAddr": "0x4055cd",
            "decompiledFuncCode": "\nvoid FUN_004055c0(undefined8 param_1,char param_2)\n\n{\n  FUN_00405550(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n",
            "funcName": "FUN_004055c0"
        },
        {
            "funcStartAddr": "0x4055d0",
            "funcEndAddr": "0x4055e1",
            "decompiledFuncCode": "\nvoid FUN_004055d0(undefined8 param_1)\n\n{\n  FUN_00405550(param_1,0xffffffffffffffff,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_004055d0"
        },
        {
            "funcStartAddr": "0x4055f0",
            "funcEndAddr": "0x4055fa",
            "decompiledFuncCode": "\nvoid FUN_004055f0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00405550(param_1,param_2,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_004055f0"
        },
        {
            "funcStartAddr": "0x405600",
            "funcEndAddr": "0x40566e",
            "decompiledFuncCode": "\nvoid FUN_00405600(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_40 = 0x400000000000000;\n    local_44 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00404f30(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405600"
        },
        {
            "funcStartAddr": "0x405670",
            "funcEndAddr": "0x4056dc",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00405670(undefined8 param_1,long param_2,long param_3,undefined8 param_4,undefined8 param_5\n                 )\n\n{\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long lStack_20;\n  long local_18;\n  \n  uStack_40 = uRam00000000006114a8;\n  local_38 = _DAT_006114b0;\n  uStack_30 = uRam00000000006114b8;\n  local_28 = _DAT_006114c0;\n  lStack_20 = uRam00000000006114c8;\n  local_18 = DAT_006114d0;\n  local_48 = CONCAT44((int)((ulong)_DAT_006114a0 >> 0x20),10);\n  if ((param_2 != 0) && (param_3 != 0)) {\n    lStack_20 = param_2;\n    local_18 = param_3;\n    FUN_00404f30(param_1,param_4,param_5,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405670"
        },
        {
            "funcStartAddr": "0x4056e0",
            "funcEndAddr": "0x4056e9",
            "decompiledFuncCode": "\nvoid FUN_004056e0(void)\n\n{\n  FUN_00405670();\n  return;\n}\n\n",
            "funcName": "FUN_004056e0"
        },
        {
            "funcStartAddr": "0x4056f0",
            "funcEndAddr": "0x405707",
            "decompiledFuncCode": "\nvoid FUN_004056f0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00405670(0,param_1,param_2,param_3,0xffffffffffffffff);\n  return;\n}\n\n",
            "funcName": "FUN_004056f0"
        },
        {
            "funcStartAddr": "0x405710",
            "funcEndAddr": "0x405723",
            "decompiledFuncCode": "\nvoid FUN_00405710(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00405670(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n",
            "funcName": "FUN_00405710"
        },
        {
            "funcStartAddr": "0x405730",
            "funcEndAddr": "0x40573a",
            "decompiledFuncCode": "\nvoid FUN_00405730(void)\n\n{\n  FUN_00404f30();\n  return;\n}\n\n",
            "funcName": "FUN_00405730"
        },
        {
            "funcStartAddr": "0x405740",
            "funcEndAddr": "0x405752",
            "decompiledFuncCode": "\nvoid FUN_00405740(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00404f30(0,param_1,param_2,&DAT_006112c0);\n  return;\n}\n\n",
            "funcName": "FUN_00405740"
        },
        {
            "funcStartAddr": "0x405760",
            "funcEndAddr": "0x405771",
            "decompiledFuncCode": "\nvoid FUN_00405760(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00404f30(param_1,param_2,0xffffffffffffffff,&DAT_006112c0);\n  return;\n}\n\n",
            "funcName": "FUN_00405760"
        },
        {
            "funcStartAddr": "0x405780",
            "funcEndAddr": "0x405796",
            "decompiledFuncCode": "\nvoid FUN_00405780(undefined8 param_1)\n\n{\n  FUN_00404f30(0,param_1,0xffffffffffffffff,&DAT_006112c0);\n  return;\n}\n\n",
            "funcName": "FUN_00405780"
        },
        {
            "funcStartAddr": "0x4057a0",
            "funcEndAddr": "0x4057e8",
            "decompiledFuncCode": "\n__ino_t * FUN_004057a0(__ino_t *param_1)\n\n{\n  int iVar1;\n  stat local_98;\n  \n  iVar1 = __lxstat(1,\"/\",&local_98);\n  if (iVar1 == 0) {\n    *param_1 = local_98.st_ino;\n    param_1[1] = local_98.st_dev;\n    return param_1;\n  }\n  return (undefined8 *)0x0;\n}\n\n",
            "funcName": "FUN_004057a0"
        },
        {
            "funcStartAddr": "0x4057f0",
            "funcEndAddr": "0x405b94",
            "decompiledFuncCode": "\nundefined8\nFUN_004057f0(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0040decb,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00405a6c;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_00405a6c:\n    __fprintf_chk(param_1,1,uVar7,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[1];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar1 = param_5[2];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_00405b09;\n  case 7:\n    uVar1 = param_5[2];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    local_58 = param_5[1];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_00405b09:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_58,uVar1,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_004058ea;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_004058ea:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_50,local_58,uVar6,uVar5,uVar4,uVar1,local_48);\n  return uVar1;\n}\n\n",
            "funcName": "FUN_004057f0"
        },
        {
            "funcStartAddr": "0x405bd0",
            "funcEndAddr": "0x405bf0",
            "decompiledFuncCode": "\nvoid FUN_00405bd0(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_004057f0();\n  return;\n}\n\n",
            "funcName": "FUN_00405bd0"
        },
        {
            "funcStartAddr": "0x405bf0",
            "funcEndAddr": "0x405c49",
            "decompiledFuncCode": "\nvoid FUN_00405bf0(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long local_58 [11];\n  \n  lVar4 = 0;\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_58[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_58[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_004057f0();\n  return;\n}\n\n",
            "funcName": "FUN_00405bf0"
        },
        {
            "funcStartAddr": "0x405c50",
            "funcEndAddr": "0x405d08",
            "decompiledFuncCode": "\nvoid FUN_00405c50(void)\n\n{\n  long lVar1;\n  undefined8 in_R8;\n  ulong uVar2;\n  undefined8 in_R9;\n  long lVar3;\n  long *plVar4;\n  long local_88 [10];\n  long local_38 [4];\n  long local_18 [3];\n  \n  local_18[0] = in_R8;\n  plVar4 = (long *)&stack0x00000008;\n  uVar2 = 0x20;\n  local_18[1] = in_R9;\n  lVar3 = 0;\n  do {\n    if ((uint)uVar2 < 0x30) {\n      lVar1 = *(long *)((long)local_38 + uVar2);\n      local_88[lVar3] = lVar1;\n      uVar2 = (ulong)((uint)uVar2 + 8);\n    }\n    else {\n      lVar1 = *plVar4;\n      local_88[lVar3] = lVar1;\n      plVar4 = plVar4 + 1;\n    }\n  } while ((lVar1 != 0) && (lVar3 = lVar3 + 1, lVar3 != 10));\n  FUN_004057f0();\n  return;\n}\n\n",
            "funcName": "FUN_00405c50"
        },
        {
            "funcStartAddr": "0x405d10",
            "funcEndAddr": "0x405d84",
            "decompiledFuncCode": "\nvoid FUN_00405d10(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n",
            "funcName": "FUN_00405d10"
        },
        {
            "funcStartAddr": "0x405d90",
            "funcEndAddr": "0x405daa",
            "decompiledFuncCode": "\nvoid FUN_00405d90(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00405fe0();\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00405d90"
        },
        {
            "funcStartAddr": "0x405db0",
            "funcEndAddr": "0x405dd1",
            "decompiledFuncCode": "\nvoid FUN_00405db0(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_00405d90();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00405fe0();\n}\n\n",
            "funcName": "FUN_00405db0"
        },
        {
            "funcStartAddr": "0x405de0",
            "funcEndAddr": "0x405de2",
            "decompiledFuncCode": "\nvoid thunk_FUN_00405d90(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00405fe0();\n  }\n  return;\n}\n\n",
            "funcName": "thunk_405de0"
        },
        {
            "funcStartAddr": "0x405df0",
            "funcEndAddr": "0x405e20",
            "decompiledFuncCode": "\nvoid * FUN_00405df0(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00405fe0();\n  }\n  return pvVar1;\n}\n\n",
            "funcName": "FUN_00405df0"
        },
        {
            "funcStartAddr": "0x405e30",
            "funcEndAddr": "0x405e51",
            "decompiledFuncCode": "\nvoid FUN_00405e30(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_00405df0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00405fe0();\n}\n\n",
            "funcName": "FUN_00405e30"
        },
        {
            "funcStartAddr": "0x405e60",
            "funcEndAddr": "0x405ed8",
            "decompiledFuncCode": "\nvoid FUN_00405e60(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar2 = *param_2;\n  if (param_1 == 0) {\n    if (uVar2 == 0) {\n      uVar2 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar3 = (ulong)(SUB168(ZEXT816(uVar2) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar2) * ZEXT816(param_3),0) < 0) || (uVar3 != 0)) goto LAB_00405ebb;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar3 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar2) {\nLAB_00405ebb:\n                    /* WARNING: Subroutine does not return */\n      FUN_00405fe0(param_1,param_2,uVar3);\n    }\n    uVar2 = (uVar2 >> 1) + 1 + uVar2;\n  }\n  *param_2 = uVar2;\n  FUN_00405df0(param_1,uVar2 * param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00405e60"
        },
        {
            "funcStartAddr": "0x405ef0",
            "funcEndAddr": "0x405f3a",
            "decompiledFuncCode": "\nvoid FUN_00405ef0(long param_1,ulong *param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = *param_2;\n  if (param_1 == 0) {\n    if (uVar1 == 0) {\n      *param_2 = 0x80;\n      FUN_00405df0(0,0x80);\n      return;\n    }\n    if ((long)uVar1 < 0) goto LAB_00405f3a;\n  }\n  else {\n    if (0x5555555555555553 < uVar1) {\nLAB_00405f3a:\n                    /* WARNING: Subroutine does not return */\n      FUN_00405fe0();\n    }\n    uVar1 = (uVar1 >> 1) + 1 + uVar1;\n  }\n  *param_2 = uVar1;\n  FUN_00405df0(param_1,uVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00405ef0"
        },
        {
            "funcStartAddr": "0x405f40",
            "funcEndAddr": "0x405f57",
            "decompiledFuncCode": "\nvoid FUN_00405f40(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00405d90();\n  memset(__s,0,param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00405f40"
        },
        {
            "funcStartAddr": "0x405f60",
            "funcEndAddr": "0x405f8e",
            "decompiledFuncCode": "\nvoid FUN_00405f60(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00405fe0();\n}\n\n",
            "funcName": "FUN_00405f60"
        },
        {
            "funcStartAddr": "0x405f90",
            "funcEndAddr": "0x405fb8",
            "decompiledFuncCode": "\nvoid FUN_00405f90(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00405d90(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00405f90"
        },
        {
            "funcStartAddr": "0x405fc0",
            "funcEndAddr": "0x405fd3",
            "decompiledFuncCode": "\nvoid FUN_00405fc0(char *param_1)\n\n{\n  void *__dest;\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  __dest = (void *)FUN_00405d90(sVar1 + 1);\n  memcpy(__dest,param_1,sVar1 + 1);\n  return;\n}\n\n",
            "funcName": "FUN_00405fc0"
        },
        {
            "funcStartAddr": "0x405fe0",
            "funcEndAddr": "0x406011",
            "decompiledFuncCode": "\nvoid FUN_00405fe0(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_006112b8,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405fe0"
        },
        {
            "funcStartAddr": "0x406020",
            "funcEndAddr": "0x406061",
            "decompiledFuncCode": "\nvoid FUN_00406020(undefined8 param_1,uint param_2)\n\n{\n  long lVar1;\n  int *piVar2;\n  \n  lVar1 = fts_open(param_1,param_2 | 0x200);\n  if (lVar1 != 0) {\n    return;\n  }\n  piVar2 = __errno_location();\n  if (*piVar2 != 0x16) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00405fe0();\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"errno != EINVAL\",\"lib/xfts.c\",0x29,\"xfts_open\");\n}\n\n",
            "funcName": "FUN_00406020"
        },
        {
            "funcStartAddr": "0x406070",
            "funcEndAddr": "0x406091",
            "decompiledFuncCode": "\nbool FUN_00406070(long param_1,long param_2)\n\n{\n  bool bVar1;\n  uint uVar2;\n  \n  bVar1 = true;\n  uVar2 = *(uint *)(param_1 + 0x48) & 0x11;\n  if ((uVar2 != 0x10) && (bVar1 = false, uVar2 == 0x11)) {\n    return *(long *)(param_2 + 0x58) != 0;\n  }\n  return bVar1;\n}\n\n",
            "funcName": "FUN_00406070"
        },
        {
            "funcStartAddr": "0x4060a0",
            "funcEndAddr": "0x40644c",
            "decompiledFuncCode": "\nulong FUN_004060a0(byte *param_1,byte **param_2,uint param_3,ulong *param_4,char *param_5)\n\n{\n  byte bVar1;\n  undefined auVar2 [16];\n  int *piVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  ulong uVar6;\n  char *pcVar7;\n  byte bVar8;\n  uint uVar9;\n  int iVar10;\n  ulong uVar11;\n  byte bVar12;\n  uint uVar13;\n  ulong uVar14;\n  int iVar15;\n  int iVar16;\n  byte *local_40 [2];\n  \n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoul\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = local_40;\n  }\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  bVar12 = *param_1;\n  ppuVar4 = __ctype_b_loc();\n  pbVar5 = param_1;\n  while ((*(byte *)((long)*ppuVar4 + (ulong)bVar12 * 2 + 1) & 0x20) != 0) {\n    pbVar5 = pbVar5 + 1;\n    bVar12 = *pbVar5;\n  }\n  if (bVar12 == 0x2d) {\n    return 4;\n  }\n  uVar6 = strtoul((char *)param_1,(char **)param_2,param_3);\n  pbVar5 = *param_2;\n  if (pbVar5 == param_1) {\n    if ((param_5 == (char *)0x0) || (bVar12 = *param_1, bVar12 == 0)) {\n      return 4;\n    }\n    uVar14 = 0;\n    uVar6 = 1;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) {\n      return 4;\n    }\n  }\n  else {\n    if (*piVar3 == 0) {\n      uVar14 = 0;\n    }\n    else {\n      uVar14 = 1;\n      if (*piVar3 != 0x22) {\n        return 4;\n      }\n    }\n    uVar13 = (uint)uVar14;\n    if ((param_5 == (char *)0x0) || (bVar12 = *pbVar5, bVar12 == 0)) goto LAB_00406140;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) goto switchD_0040621c_caseD_1;\n  }\n  uVar13 = (uint)uVar14;\n  uVar9 = bVar12 - 0x45;\n  bVar8 = (byte)uVar9;\n  if (((bVar8 < 0x30) && ((0x814400308945U >> ((ulong)uVar9 & 0x3f) & 1) != 0)) &&\n     (pcVar7 = strchr(param_5,0x30), pcVar7 != (char *)0x0)) {\n    bVar1 = pbVar5[1];\n    if (bVar1 != 0x44) {\n      if (bVar1 == 0x69) {\n        uVar11 = 0x400;\n        iVar15 = (pbVar5[2] == 0x42) + 1 + (uint)(pbVar5[2] == 0x42);\n        goto LAB_0040620a;\n      }\n      if (bVar1 != 0x42) {\n                    /* WARNING: Could not recover jumptable at 0x004061f9. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        uVar6 = (*(code *)(&PTR_LAB_0040e2c0)[bVar8])();\n        return uVar6;\n      }\n    }\n    iVar15 = 2;\n    uVar11 = 1000;\n  }\n  else {\n    iVar15 = 1;\n    uVar11 = 0x400;\n  }\nLAB_0040620a:\n  iVar10 = (int)uVar11;\n  switch(bVar12 - 0x42 & 0xff) {\n  case 0:\n    if (uVar6 >> 0x36 == 0) {\n      uVar6 = uVar6 << 10;\n      break;\n    }\n    goto LAB_00406277;\n  default:\nswitchD_0040621c_caseD_1:\n    *param_4 = uVar6;\n    return (ulong)(uVar13 | 2);\n  case 3:\n    iVar16 = 6;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00406304;\n  case 5:\n  case 0x25:\n    uVar11 = (ulong)iVar10;\n    if (((SUB168(ZEXT816(uVar6) * ZEXT816(uVar11) >> 0x40,0) != 0) ||\n        (auVar2 = (ZEXT816(uVar6) * ZEXT816(uVar11) & (undefined  [16])0xffffffffffffffff) *\n                  ZEXT816(uVar11), SUB168(auVar2 >> 0x40,0) != 0)) ||\n       (auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816(uVar11),\n       uVar6 = SUB168(auVar2,0), SUB168(auVar2 >> 0x40,0) != 0)) {\n      uVar6 = 0xffffffffffffffff;\n      uVar14 = 1;\n    }\n    break;\n  case 9:\n  case 0x29:\n    auVar2 = ZEXT816(uVar6) * ZEXT816(uVar11);\n    goto joined_r0x0040623c;\n  case 0xb:\n  case 0x2b:\n    auVar2 = ZEXT816(uVar6) * ZEXT816((ulong)(long)iVar10);\n    if (SUB168(auVar2 >> 0x40,0) != 0) goto LAB_00406277;\n    auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816((ulong)(long)iVar10);\njoined_r0x0040623c:\n    uVar6 = SUB168(auVar2,0);\n    if (SUB168(auVar2 >> 0x40,0) != 0) {\nLAB_00406277:\n      uVar14 = 1;\n      uVar6 = 0xffffffffffffffff;\n    }\n    break;\n  case 0xe:\n    iVar16 = 5;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00406304;\n  case 0x12:\n  case 0x32:\n    iVar16 = 4;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00406304;\n  case 0x17:\n    iVar16 = 8;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00406304;\n  case 0x18:\n    iVar16 = 7;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\nLAB_00406304:\n    uVar14 = (ulong)(uVar13 | uVar9);\n    break;\n  case 0x20:\n    if (uVar6 >> 0x37 != 0) goto LAB_00406277;\n    uVar6 = uVar6 << 9;\n    break;\n  case 0x21:\n    break;\n  case 0x35:\n    if ((long)uVar6 < 0) goto LAB_00406277;\n    uVar6 = uVar6 * 2;\n  }\n  *param_2 = pbVar5 + iVar15;\n  if (pbVar5[iVar15] != 0) {\n    uVar14 = (ulong)((uint)uVar14 | 2);\n  }\nLAB_00406140:\n  *param_4 = uVar6;\n  return uVar14;\n}\n\n",
            "funcName": "FUN_004060a0"
        },
        {
            "funcStartAddr": "0x4064d0",
            "funcEndAddr": "0x406712",
            "decompiledFuncCode": "\nulong FUN_004064d0(uint param_1,char *param_2,uint param_3,__gid_t param_4,uint param_5)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  int iVar4;\n  uint *puVar5;\n  uint *puVar6;\n  int *piVar7;\n  ulong *puVar8;\n  ulong *puVar9;\n  uint local_ff8 [1010];\n  \n  if ((param_5 & 0xfffffeff) != 0) {\n    piVar7 = __errno_location();\n    uVar2 = 0xffffffff;\n    *piVar7 = 0x16;\n    goto LAB_0040660e;\n  }\n  puVar9 = (ulong *)(ulong)param_3;\n  if ((param_1 == 0xffffff9c) || (*param_2 == '/')) {\n    if (param_5 == 0x100) {\n      uVar2 = lchown(param_2,param_3,param_4);\n    }\n    else {\n      uVar2 = chown(param_2,param_3,param_4);\n    }\n    goto LAB_0040660e;\n  }\n  puVar8 = (ulong *)(ulong)param_1;\n  puVar5 = (uint *)FUN_00409860(local_ff8,puVar8,param_2);\n  if (puVar5 == (uint *)0x0) goto LAB_004065a0;\n  if (param_5 == 0x100) {\n    uVar2 = lchown((char *)puVar5,param_3,param_4);\n  }\n  else {\n    uVar2 = chown((char *)puVar5,param_3,param_4);\n  }\n  puVar6 = (uint *)__errno_location();\n  uVar1 = *puVar6;\n  if (puVar5 != local_ff8) {\n    free(puVar5);\n  }\n  puVar8 = (ulong *)(ulong)uVar1;\n  if (uVar2 != 0xffffffff) goto LAB_0040660e;\n  if (uVar1 < 0x27) {\n    if ((0x4000102006U >> ((ulong)puVar8 & 0x3f) & 1) == 0) {\nLAB_00406651:\n      *puVar6 = uVar1;\n      goto LAB_0040660e;\n    }\n  }\n  else if (uVar1 != 0x5f) goto LAB_00406651;\nLAB_004065a0:\n  iVar3 = FUN_0040b460(local_ff8);\n  if (iVar3 == 0) {\n    if (((int)param_1 < 0) || (local_ff8[0] != param_1)) {\n      iVar3 = fchdir(param_1);\n      if (iVar3 == 0) {\n        if (param_5 == 0x100) {\n          uVar2 = lchown(param_2,param_3,param_4);\n          puVar8 = puVar9;\n        }\n        else {\n          uVar2 = chown(param_2,param_3,param_4);\n          puVar8 = puVar9;\n        }\n        if (uVar2 == 0xffffffff) {\n          piVar7 = __errno_location();\n          iVar3 = *piVar7;\n          iVar4 = FUN_0040b4b0(local_ff8);\n          if (iVar4 == 0) {\n            FUN_0040b4d0(local_ff8);\n            if (iVar3 != 0) {\n              *piVar7 = iVar3;\n            }\n            goto LAB_0040660e;\n          }\n        }\n        else {\n          iVar3 = FUN_0040b4b0(local_ff8);\n          if (iVar3 == 0) {\n            FUN_0040b4d0(local_ff8);\n            goto LAB_0040660e;\n          }\n        }\n        piVar7 = __errno_location();\n        FUN_0040b3e0(*piVar7);\n        goto LAB_00406732;\n      }\n      piVar7 = __errno_location();\n      uVar2 = 0xffffffff;\n      iVar3 = *piVar7;\n      FUN_0040b4d0(local_ff8);\n      *piVar7 = iVar3;\n    }\n    else {\n      uVar2 = 0xffffffff;\n      FUN_0040b4d0(local_ff8);\n      piVar7 = __errno_location();\n      *piVar7 = 9;\n    }\nLAB_0040660e:\n    return (ulong)uVar2;\n  }\nLAB_00406732:\n  puVar5 = (uint *)__errno_location();\n  puVar9 = (ulong *)(ulong)*puVar5;\n  FUN_0040b3b0();\n  if (puVar9[1] != puVar8[1]) {\n    return 0;\n  }\n  return *puVar8 & 0xffffffffffffff00 | (ulong)(*puVar9 == *puVar8);\n}\n\n",
            "funcName": "FUN_004064d0"
        },
        {
            "funcStartAddr": "0x406740",
            "funcEndAddr": "0x406757",
            "decompiledFuncCode": "\nulong FUN_00406740(ulong *param_1,ulong *param_2)\n\n{\n  if (param_1[1] != param_2[1]) {\n    return 0;\n  }\n  return *param_2 & 0xffffffffffffff00 | (ulong)(*param_1 == *param_2);\n}\n\n",
            "funcName": "FUN_00406740"
        },
        {
            "funcStartAddr": "0x406760",
            "funcEndAddr": "0x40676d",
            "decompiledFuncCode": "\nulong FUN_00406760(long param_1,ulong param_2)\n\n{\n  return *(ulong *)(param_1 + 8) % param_2;\n}\n\n",
            "funcName": "FUN_00406760"
        },
        {
            "funcStartAddr": "0x406770",
            "funcEndAddr": "0x40677c",
            "decompiledFuncCode": "\nulong FUN_00406770(ulong *param_1,ulong param_2)\n\n{\n  return *param_1 % param_2;\n}\n\n",
            "funcName": "FUN_00406770"
        },
        {
            "funcStartAddr": "0x406780",
            "funcEndAddr": "0x40678a",
            "decompiledFuncCode": "\nulong FUN_00406780(ulong *param_1,ulong *param_2)\n\n{\n  return *param_2 & 0xffffffffffffff00 | (ulong)(*param_1 == *param_2);\n}\n\n",
            "funcName": "FUN_00406780"
        },
        {
            "funcStartAddr": "0x406790",
            "funcEndAddr": "0x4067b2",
            "decompiledFuncCode": "\nulong FUN_00406790(long *param_1,long *param_2)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  bool bVar3;\n  \n  uVar2 = 0xffffffff;\n  uVar1 = *(ulong *)(*param_2 + 0x80);\n  bVar3 = uVar1 <= *(ulong *)(*param_1 + 0x80);\n  if (bVar3) {\n    uVar2 = (ulong)(bVar3 && *(ulong *)(*param_1 + 0x80) != uVar1);\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00406790"
        },
        {
            "funcStartAddr": "0x4067c0",
            "funcEndAddr": "0x40694e",
            "decompiledFuncCode": "\nint FUN_004067c0(long param_1,long param_2,char param_3)\n\n{\n  stat *__stat_buf;\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  ulong uVar4;\n  undefined8 *puVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  __stat_buf = (stat *)(param_2 + 0x78);\n  if ((((*(long *)(param_2 + 0x58) == 0) && ((*(uint *)(param_1 + 0x48) & 1) != 0)) ||\n      ((*(uint *)(param_1 + 0x48) & 2) != 0)) || (param_3 != '\\0')) {\n    iVar1 = __xstat(1,*(char **)(param_2 + 0x30),__stat_buf);\n    if (iVar1 == 0) {\nLAB_00406857:\n      uVar2 = *(uint *)(param_2 + 0x90) & 0xf000;\n      if (uVar2 == 0x4000) {\n        uVar4 = *(ulong *)(param_2 + 0x88);\n        if ((uVar4 < 2) || (*(long *)(param_2 + 0x58) < 1)) {\n          uVar4 = 0xffffffffffffffff;\n        }\n        else if ((*(byte *)(param_1 + 0x48) & 0x20) == 0) {\n          uVar4 = uVar4 - 2;\n        }\n        *(ulong *)(param_2 + 0x68) = uVar4;\n        iVar1 = 1;\n        if ((*(char *)(param_2 + 0x108) == '.') &&\n           ((*(char *)(param_2 + 0x109) == '\\0' ||\n            ((*(uint *)(param_2 + 0x108) & 0xffff00) == 0x2e00)))) {\n          iVar1 = (-(uint)(*(long *)(param_2 + 0x58) == 0) & 0xfffffffc) + 5;\n        }\n      }\n      else if (uVar2 == 0xa000) {\n        iVar1 = 0xc;\n      }\n      else {\n        iVar1 = (uint)(uVar2 == 0x8000) * 5 + 3;\n      }\n      return iVar1;\n    }\n    piVar3 = __errno_location();\n    iVar1 = *piVar3;\n    if (iVar1 == 2) {\n      iVar1 = __lxstat(1,*(char **)(param_2 + 0x30),__stat_buf);\n      if (iVar1 == 0) {\n        *piVar3 = 0;\n        return 0xd;\n      }\n      iVar1 = *piVar3;\n    }\n  }\n  else {\n    iVar1 = __fxstatat(1,*(int *)(param_1 + 0x2c),*(char **)(param_2 + 0x30),__stat_buf,0x100);\n    if (iVar1 == 0) goto LAB_00406857;\n    piVar3 = __errno_location();\n    iVar1 = *piVar3;\n  }\n  *(int *)(param_2 + 0x40) = iVar1;\n  puVar5 = (undefined8 *)(param_2 + 0x80U & 0xfffffffffffffff8);\n  *(undefined8 *)(param_2 + 0x78) = 0;\n  *(undefined8 *)(param_2 + 0x100) = 0;\n  uVar4 = (ulong)(((int)__stat_buf - (int)puVar5) + 0x90U >> 3);\n  for (; uVar4 != 0; uVar4 = uVar4 - 1) {\n    *puVar5 = 0;\n    puVar5 = puVar5 + (ulong)bVar6 * -2 + 1;\n  }\n  return 10;\n}\n\n",
            "funcName": "FUN_004067c0"
        },
        {
            "funcStartAddr": "0x406970",
            "funcEndAddr": "0x406a62",
            "decompiledFuncCode": "\nlong FUN_00406970(long param_1,long param_2,ulong param_3)\n\n{\n  ulong uVar1;\n  long *plVar2;\n  __compar_fn_t __compar;\n  long *plVar3;\n  long lVar4;\n  long lVar5;\n  long *plVar6;\n  long lVar7;\n  \n  __compar = *(__compar_fn_t *)(param_1 + 0x40);\n  plVar3 = *(long **)(param_1 + 0x10);\n  if (param_3 <= *(ulong *)(param_1 + 0x38)) {\nLAB_004069c5:\n    plVar6 = plVar3;\n    if (param_2 != 0) {\n      do {\n        *plVar6 = param_2;\n        param_2 = *(long *)(param_2 + 0x10);\n        plVar6 = plVar6 + 1;\n      } while (param_2 != 0);\n    }\n    qsort(plVar3,param_3,8,__compar);\n    plVar3 = *(long **)(param_1 + 0x10);\n    lVar7 = *plVar3;\n    lVar4 = lVar7;\n    lVar5 = param_3 - 1;\n    plVar6 = plVar3;\n    if (lVar5 != 0) {\n      while( true ) {\n        plVar2 = plVar6 + 1;\n        plVar6 = plVar6 + 1;\n        *(long *)(lVar7 + 0x10) = *plVar2;\n        lVar5 = lVar5 + -1;\n        if (lVar5 == 0) break;\n        lVar7 = *plVar6;\n      }\n      lVar7 = plVar3[param_3 - 1];\n    }\n    *(undefined8 *)(lVar7 + 0x10) = 0;\n    return lVar4;\n  }\n  uVar1 = param_3 + 0x28;\n  *(ulong *)(param_1 + 0x38) = uVar1;\n  if (uVar1 < 0x2000000000000000) {\n    plVar3 = (long *)realloc(plVar3,uVar1 * 8);\n    if (plVar3 != (long *)0x0) {\n      *(long **)(param_1 + 0x10) = plVar3;\n      goto LAB_004069c5;\n    }\n    plVar3 = *(long **)(param_1 + 0x10);\n  }\n  free(plVar3);\n  *(undefined8 *)(param_1 + 0x10) = 0;\n  *(undefined8 *)(param_1 + 0x38) = 0;\n  return param_2;\n}\n\n",
            "funcName": "FUN_00406970"
        },
        {
            "funcStartAddr": "0x406a70",
            "funcEndAddr": "0x406afa",
            "decompiledFuncCode": "\nvoid * FUN_00406a70(long param_1,void *param_2,size_t param_3)\n\n{\n  undefined8 uVar1;\n  void *pvVar2;\n  \n  pvVar2 = malloc(param_3 + 0x110 & 0xfffffffffffffff8);\n  if (pvVar2 != (void *)0x0) {\n    memcpy((void *)((long)pvVar2 + 0x108),param_2,param_3);\n    uVar1 = *(undefined8 *)(param_1 + 0x20);\n    *(undefined *)((long)pvVar2 + param_3 + 0x108) = 0;\n    *(size_t *)((long)pvVar2 + 0x60) = param_3;\n    *(long *)((long)pvVar2 + 0x50) = param_1;\n    *(undefined8 *)((long)pvVar2 + 0x38) = uVar1;\n    *(undefined4 *)((long)pvVar2 + 0x40) = 0;\n    *(undefined8 *)((long)pvVar2 + 0x18) = 0;\n    *(undefined4 *)((long)pvVar2 + 0x72) = 0x30000;\n    *(undefined8 *)((long)pvVar2 + 0x20) = 0;\n    *(undefined8 *)((long)pvVar2 + 0x28) = 0;\n  }\n  return pvVar2;\n}\n\n",
            "funcName": "FUN_00406a70"
        },
        {
            "funcStartAddr": "0x406b00",
            "funcEndAddr": "0x406b3a",
            "decompiledFuncCode": "\nvoid FUN_00406b00(void *param_1)\n\n{\n  void *pvVar1;\n  \n  if (param_1 == (void *)0x0) {\n    return;\n  }\n  do {\n    pvVar1 = *(void **)((long)param_1 + 0x10);\n    if (*(DIR **)((long)param_1 + 0x18) != (DIR *)0x0) {\n      closedir(*(DIR **)((long)param_1 + 0x18));\n    }\n    free(param_1);\n    param_1 = pvVar1;\n  } while (pvVar1 != (void *)0x0);\n  return;\n}\n\n",
            "funcName": "FUN_00406b00"
        },
        {
            "funcStartAddr": "0x406b50",
            "funcEndAddr": "0x406b79",
            "decompiledFuncCode": "\nvoid FUN_00406b50(undefined8 param_1)\n\n{\n  char cVar1;\n  int __fd;\n  \n  while( true ) {\n    cVar1 = FUN_0040ada0(param_1);\n    if (cVar1 != '\\0') break;\n    __fd = FUN_0040adf0(param_1);\n    if (-1 < __fd) {\n      close(__fd);\n    }\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00406b50"
        },
        {
            "funcStartAddr": "0x406b90",
            "funcEndAddr": "0x406c94",
            "decompiledFuncCode": "\nlong FUN_00406b90(long param_1)\n\n{\n  undefined8 uVar1;\n  int iVar2;\n  long lVar3;\n  undefined8 *__ptr;\n  undefined8 *puVar4;\n  long lVar5;\n  statfs local_98;\n  \n  lVar3 = *(long *)(param_1 + 0x50);\n  if ((*(byte *)(lVar3 + 0x49) & 2) == 0) {\n    return 0;\n  }\n  lVar5 = *(long *)(lVar3 + 0x50);\n  if (lVar5 == 0) {\n    lVar5 = FUN_0040a3c0(0xd,0,FUN_00406770,FUN_00406780,free);\n    *(long *)(lVar3 + 0x50) = lVar5;\n    if (lVar5 == 0) {\n      iVar2 = fstatfs(*(int *)(*(long *)(param_1 + 0x50) + 0x2c),&local_98);\n      if (iVar2 == 0) {\n        return local_98.f_type;\n      }\n      return 0;\n    }\n  }\n  local_98.f_type = *(long *)(param_1 + 0x78);\n  lVar3 = FUN_0040a150(lVar5,&local_98);\n  if (lVar3 == 0) {\n    iVar2 = fstatfs(*(int *)(*(long *)(param_1 + 0x50) + 0x2c),&local_98);\n    if (iVar2 != 0) {\n      return 0;\n    }\n    __ptr = (undefined8 *)malloc(0x10);\n    if (__ptr != (undefined8 *)0x0) {\n      uVar1 = *(undefined8 *)(param_1 + 0x78);\n      __ptr[1] = local_98.f_type;\n      *__ptr = uVar1;\n      puVar4 = (undefined8 *)FUN_0040ab60(lVar5,__ptr);\n      if (puVar4 != (undefined8 *)0x0) {\n        if (__ptr == puVar4) {\n          return local_98.f_type;\n        }\n                    /* WARNING: Subroutine does not return */\n        abort();\n      }\n      free(__ptr);\n    }\n  }\n  else {\n    local_98.f_type = *(long *)(lVar3 + 8);\n  }\n  return local_98.f_type;\n}\n\n",
            "funcName": "FUN_00406b90"
        },
        {
            "funcStartAddr": "0x406cb0",
            "funcEndAddr": "0x406d0a",
            "decompiledFuncCode": "\nbool FUN_00406cb0(void)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_00406b90();\n  if (lVar1 != 0x9fa0) {\n    if (lVar1 < 0x9fa1) {\n      if (lVar1 == 0) {\n        return false;\n      }\n      return lVar1 != 0x6969;\n    }\n    if (lVar1 != 0x5346414f) {\n      if (lVar1 == 0x58465342) {\n        return (bool)2;\n      }\n      return (bool)((lVar1 == 0x52654973) + '\\x01');\n    }\n  }\n  return false;\n}\n\n",
            "funcName": "FUN_00406cb0"
        },
        {
            "funcStartAddr": "0x406d20",
            "funcEndAddr": "0x406d83",
            "decompiledFuncCode": "\nvoid FUN_00406d20(long param_1,int param_2,char param_3)\n\n{\n  int iVar1;\n  \n  iVar1 = *(int *)(param_1 + 0x2c);\n  if ((iVar1 == param_2) && (iVar1 != -100)) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  if (param_3 == '\\0') {\n    if (((*(byte *)(param_1 + 0x48) & 4) == 0) && (-1 < iVar1)) {\n      close(iVar1);\n      *(int *)(param_1 + 0x2c) = param_2;\n      return;\n    }\n  }\n  else {\n    iVar1 = FUN_0040adb0(param_1 + 0x60);\n    if (-1 < iVar1) {\n      close(iVar1);\n      *(int *)(param_1 + 0x2c) = param_2;\n      return;\n    }\n  }\n  *(int *)(param_1 + 0x2c) = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_00406d20"
        },
        {
            "funcStartAddr": "0x406d90",
            "funcEndAddr": "0x406ddf",
            "decompiledFuncCode": "\nuint FUN_00406d90(long param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  uVar2 = *(uint *)(param_1 + 0x48) & 4;\n  if (uVar2 == 0) {\n    if ((*(uint *)(param_1 + 0x48) & 0x200) == 0) {\n      iVar1 = fchdir(*(int *)(param_1 + 0x28));\n      uVar2 = (uint)(iVar1 != 0);\n    }\n    else {\n      FUN_00406d20(param_1,0xffffff9c,1);\n    }\n  }\n  else {\n    uVar2 = 0;\n  }\n  FUN_00406b50(param_1 + 0x60);\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00406d90"
        },
        {
            "funcStartAddr": "0x406df0",
            "funcEndAddr": "0x406e4f",
            "decompiledFuncCode": "\nundefined8 FUN_00406df0(void **param_1,size_t *param_2,long param_3)\n\n{\n  size_t __size;\n  void *pvVar1;\n  int *piVar2;\n  \n  pvVar1 = *param_1;\n  __size = *param_2 + 0x100 + param_3;\n  if (__size < *param_2) {\n    free(pvVar1);\n    *param_1 = (void *)0x0;\n    piVar2 = __errno_location();\n    *piVar2 = 0x24;\n    return 0;\n  }\n  *param_2 = __size;\n  pvVar1 = realloc(pvVar1,__size);\n  if (pvVar1 != (void *)0x0) {\n    *param_1 = pvVar1;\n    return 1;\n  }\n  free(*param_1);\n  *param_1 = (void *)0x0;\n  return 0;\n}\n\n",
            "funcName": "FUN_00406df0"
        },
        {
            "funcStartAddr": "0x406e60",
            "funcEndAddr": "0x406eb6",
            "decompiledFuncCode": "\nulong FUN_00406e60(uint param_1,void **param_2)\n\n{\n  void *pvVar1;\n  ulong uVar2;\n  \n  if ((param_1 & 0x102) == 0) {\n    pvVar1 = malloc(0x20);\n    *param_2 = pvVar1;\n    uVar2 = 0;\n    if (pvVar1 != (void *)0x0) {\n      FUN_004099f0();\n      return 1;\n    }\n  }\n  else {\n    pvVar1 = (void *)FUN_0040a3c0(0x1f,0,FUN_00406760,FUN_00406740,free);\n    *param_2 = pvVar1;\n    uVar2 = (ulong)pvVar1 & 0xffffffffffffff00 | (ulong)(pvVar1 != (void *)0x0);\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00406e60"
        },
        {
            "funcStartAddr": "0x406ec0",
            "funcEndAddr": "0x406efe",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00409aa8) */\n/* WARNING: Removing unreachable block (ram,0x0040b438) */\n\nvoid FUN_00406ec0(int param_1,uint param_2,char *param_3)\n\n{\n  int iVar1;\n  uint __oflag;\n  \n  __oflag = (param_2 & 0x10) << 0xd | (param_2 & 0x800) << 7 | 0x90900;\n  if ((param_2 & 0x200) != 0) {\n    iVar1 = openat(param_1,param_3,__oflag,0);\n    FUN_0040b4f0(iVar1);\n    return;\n  }\n  iVar1 = open(param_3,__oflag,0);\n  FUN_0040b4f0(iVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00406ec0"
        },
        {
            "funcStartAddr": "0x406f10",
            "funcEndAddr": "0x4070c0",
            "decompiledFuncCode": "\nint FUN_00406f10(long param_1,long param_2,int param_3,byte *param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  int iVar3;\n  int iVar4;\n  int *piVar5;\n  long lVar6;\n  byte *pbVar7;\n  byte *pbVar8;\n  uint uVar9;\n  bool bVar10;\n  bool bVar11;\n  stat local_c8;\n  \n  uVar9 = *(uint *)(param_1 + 0x48);\n  bVar10 = false;\n  bVar11 = param_4 == (byte *)0x0;\n  iVar3 = param_3;\n  if (bVar11) {\nLAB_00406fb0:\n    if ((uVar9 & 4) != 0) {\nLAB_00407020:\n      if (((uVar9 & 0x200) != 0) && (-1 < param_3)) {\n        close(param_3);\n        return 0;\n      }\n      return 0;\n    }\n    if (param_3 < 0) {\n      bVar2 = 0;\nLAB_0040704e:\n      iVar3 = FUN_00406ec0(*(undefined4 *)(param_1 + 0x2c),uVar9,param_4);\n      if (iVar3 < 0) {\n        return -1;\n      }\n    }\n    else {\n      bVar2 = 0;\n    }\n  }\n  else {\n    lVar6 = 3;\n    pbVar7 = param_4;\n    pbVar8 = &DAT_0040e5f9;\n    do {\n      if (lVar6 == 0) break;\n      lVar6 = lVar6 + -1;\n      bVar10 = *pbVar7 < *pbVar8;\n      bVar11 = *pbVar7 == *pbVar8;\n      pbVar7 = pbVar7 + 1;\n      pbVar8 = pbVar8 + 1;\n    } while (bVar11);\n    if ((!bVar10 && !bVar11) != bVar10) goto LAB_00406fb0;\n    if ((uVar9 & 4) != 0) goto LAB_00407020;\n    if (param_3 < 0) {\n      if ((uVar9 & 0x200) == 0) {\n        bVar2 = 1;\n      }\n      else {\n        bVar2 = FUN_0040ada0(param_1 + 0x60);\n        if (bVar2 == 0) {\n          iVar3 = FUN_0040adf0(param_1 + 0x60);\n          if (-1 < iVar3) {\n            bVar2 = 1;\n            param_3 = iVar3;\n            goto LAB_00406fc2;\n          }\n          uVar9 = *(uint *)(param_1 + 0x48);\n          bVar2 = 1;\n        }\n      }\n      goto LAB_0040704e;\n    }\n    bVar2 = 1;\n  }\nLAB_00406fc2:\n  iVar4 = __fxstat(1,iVar3,&local_c8);\n  if (iVar4 == 0) {\n    if ((*(__dev_t *)(param_2 + 0x78) == local_c8.st_dev) &&\n       (*(__ino_t *)(param_2 + 0x80) == local_c8.st_ino)) {\n      if ((*(byte *)(param_1 + 0x49) & 2) != 0) {\n        FUN_00406d20(param_1,iVar3,bVar2 ^ 1);\n        return 0;\n      }\n      iVar4 = fchdir(iVar3);\n      goto LAB_00407003;\n    }\n    piVar5 = __errno_location();\n    *piVar5 = 2;\n  }\n  iVar4 = -1;\nLAB_00407003:\n  if (param_3 < 0) {\n    piVar5 = __errno_location();\n    iVar1 = *piVar5;\n    close(iVar3);\n    *piVar5 = iVar1;\n  }\n  return iVar4;\n}\n\n",
            "funcName": "FUN_00406f10"
        },
        {
            "funcStartAddr": "0x4070e0",
            "funcEndAddr": "0x407184",
            "decompiledFuncCode": "\nundefined8 FUN_004070e0(uint param_1,undefined8 *param_2,undefined8 *param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 *__ptr;\n  undefined8 *puVar2;\n  undefined8 uVar3;\n  \n  if ((param_1 & 0x102) == 0) {\n    uVar3 = FUN_00409a00(*param_2,param_3 + 0xf);\n    if ((char)uVar3 != '\\0') {\n      *param_3 = param_3;\n      *(undefined2 *)(param_3 + 0xe) = 2;\n      return uVar3;\n    }\n  }\n  else {\n    __ptr = (undefined8 *)malloc(0x18);\n    if (__ptr == (undefined8 *)0x0) {\n      return 0;\n    }\n    uVar3 = param_3[0xf];\n    uVar1 = *param_2;\n    __ptr[2] = param_3;\n    *__ptr = uVar3;\n    __ptr[1] = param_3[0x10];\n    puVar2 = (undefined8 *)FUN_0040ab60(uVar1,__ptr);\n    if (__ptr != puVar2) {\n      free(__ptr);\n      if (puVar2 == (undefined8 *)0x0) {\n        return 0;\n      }\n      uVar3 = puVar2[2];\n      *(undefined2 *)(param_3 + 0xe) = 2;\n      *param_3 = uVar3;\n    }\n  }\n  return 1;\n}\n\n",
            "funcName": "FUN_004070e0"
        },
        {
            "funcStartAddr": "0x407190",
            "funcEndAddr": "0x407221",
            "decompiledFuncCode": "\nvoid FUN_00407190(uint param_1,long **param_2,long param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  long lVar3;\n  void *__ptr;\n  undefined8 local_28;\n  undefined8 local_20;\n  \n  if ((param_1 & 0x102) == 0) {\n    lVar1 = *(long *)(param_3 + 8);\n    if ((lVar1 != 0) && (-1 < *(long *)(lVar1 + 0x58))) {\n      plVar2 = *param_2;\n      if (plVar2[2] == 0) goto FUN_004020b3;\n      if ((*plVar2 == *(long *)(param_3 + 0x80)) && (plVar2[1] == *(long *)(param_3 + 0x78))) {\n        lVar3 = *(long *)(lVar1 + 0x80);\n        plVar2[1] = *(long *)(lVar1 + 0x78);\n        *plVar2 = lVar3;\n      }\n    }\n    return;\n  }\n  local_28 = *(undefined8 *)(param_3 + 0x78);\n  local_20 = *(undefined8 *)(param_3 + 0x80);\n  __ptr = (void *)FUN_0040aba0(*param_2,&local_28);\n  if (__ptr != (void *)0x0) {\n    free(__ptr);\n    return;\n  }\nFUN_004020b3:\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00407190"
        },
        {
            "funcStartAddr": "0x407230",
            "funcEndAddr": "0x407b9a",
            "decompiledFuncCode": "\nvoid * FUN_00407230(long *param_1,int param_2)\n\n{\n  DIR *__dirp;\n  ulong uVar1;\n  long lVar2;\n  bool bVar3;\n  undefined *puVar4;\n  char cVar5;\n  undefined2 uVar6;\n  int iVar7;\n  int iVar8;\n  int *piVar9;\n  dirent *pdVar10;\n  size_t sVar11;\n  void *pvVar12;\n  undefined8 uVar13;\n  void *pvVar14;\n  DIR *pDVar15;\n  long lVar16;\n  long lVar17;\n  uint uVar18;\n  ushort uVar19;\n  ulong uVar20;\n  uint uVar21;\n  undefined4 uVar22;\n  bool bVar23;\n  void *local_90;\n  ulong local_88;\n  void *local_80;\n  ulong local_78;\n  ulong local_60;\n  undefined *local_58;\n  ulong local_50;\n  char local_3a;\n  \n  lVar17 = *param_1;\n  __dirp = *(DIR **)(lVar17 + 0x18);\n  if (__dirp == (DIR *)0x0) {\n    uVar21 = *(uint *)(param_1 + 9);\n    uVar18 = uVar21 & 0x10;\n    if ((uVar18 != 0) && (uVar18 = 0x20000, (uVar21 & 1) != 0)) {\n      uVar18 = (uint)(*(long *)(lVar17 + 0x58) != 0) << 0x11;\n    }\n    uVar22 = 0xffffff9c;\n    if ((uVar21 & 0x204) == 0x200) {\n      uVar22 = *(undefined4 *)((long)param_1 + 0x2c);\n    }\n    iVar7 = FUN_0040b410(uVar22,*(undefined8 *)(lVar17 + 0x30),\n                         (uVar21 & 0x800) << 7 | uVar18 | 0x90900);\n    if (-1 < iVar7) {\n      pDVar15 = fdopendir(iVar7);\n      if (pDVar15 != (DIR *)0x0) {\n        *(DIR **)(lVar17 + 0x18) = pDVar15;\n        if (*(short *)(lVar17 + 0x70) == 0xb) {\n          uVar6 = FUN_004067c0(param_1,lVar17,0);\n          *(undefined2 *)(lVar17 + 0x70) = uVar6;\n        }\n        else if ((*(uint *)(param_1 + 9) & 0x100) != 0) {\n          FUN_00407190(*(uint *)(param_1 + 9),param_1 + 0xb,lVar17);\n          FUN_004067c0(param_1,lVar17,0);\n          cVar5 = FUN_004070e0(*(undefined4 *)(param_1 + 9),param_1 + 0xb,lVar17);\n          if (cVar5 == '\\0') {\n            piVar9 = __errno_location();\n            *piVar9 = 0xc;\n            return (void *)0x0;\n          }\n        }\n        local_60 = (ulong)(-(uint)(param_1[8] == 0) & 0x186a1) - 1;\n        if (param_2 == 2) {\nLAB_004079e0:\n          bVar23 = false;\n          uVar21 = *(uint *)(param_1 + 9);\n          goto LAB_00407284;\n        }\n        if ((((*(uint *)(param_1 + 9) & 0x38) == 0x18) && (*(long *)(lVar17 + 0x88) == 2)) &&\n           (iVar8 = FUN_00406cb0(lVar17), iVar8 != 0)) {\n          if (param_2 != 3) goto LAB_004079e0;\n          bVar3 = false;\n          bVar23 = true;\n        }\n        else {\n          bVar23 = param_2 == 3;\n          bVar3 = true;\n        }\n        if (((*(byte *)((long)param_1 + 0x49) & 2) == 0) ||\n           (iVar7 = FUN_0040b8b0(iVar7,0x406,3), -1 < iVar7)) {\n          iVar8 = FUN_00406f10(param_1,lVar17,iVar7,0);\n          if (iVar8 == 0) goto LAB_0040727b;\n          pDVar15 = *(DIR **)(lVar17 + 0x18);\n          uVar19 = *(ushort *)(lVar17 + 0x72) | 1;\n          if ((bVar23) && (bVar3)) goto LAB_0040771d;\nLAB_00407732:\n          *(ushort *)(lVar17 + 0x72) = uVar19;\n          closedir(pDVar15);\n          uVar21 = *(uint *)(param_1 + 9);\n          *(undefined8 *)(lVar17 + 0x18) = 0;\n          if (((uVar21 & 0x200) != 0) && (-1 < iVar7)) {\n            close(iVar7);\n            uVar21 = *(uint *)(param_1 + 9);\n          }\n        }\n        else {\n          pDVar15 = *(DIR **)(lVar17 + 0x18);\n          uVar19 = *(ushort *)(lVar17 + 0x72) | 1;\n          if ((bVar23) && (bVar3)) {\nLAB_0040771d:\n            piVar9 = __errno_location();\n            *(int *)(lVar17 + 0x40) = *piVar9;\n            goto LAB_00407732;\n          }\n          *(ushort *)(lVar17 + 0x72) = uVar19;\n          closedir(pDVar15);\n          uVar21 = *(uint *)(param_1 + 9);\n        }\n        *(undefined8 *)(lVar17 + 0x18) = 0;\n        bVar23 = false;\n        goto LAB_00407284;\n      }\n      piVar9 = __errno_location();\n      iVar8 = *piVar9;\n      close(iVar7);\n      *piVar9 = iVar8;\n    }\n    *(undefined8 *)(lVar17 + 0x18) = 0;\njoined_r0x004079af:\n    if (param_2 == 3) {\n      *(undefined2 *)(lVar17 + 0x70) = 4;\n      piVar9 = __errno_location();\n      *(int *)(lVar17 + 0x40) = *piVar9;\n    }\n    return (void *)0x0;\n  }\n  iVar7 = dirfd(__dirp);\n  if (iVar7 < 0) {\n    closedir(*(DIR **)(lVar17 + 0x18));\n    *(undefined8 *)(lVar17 + 0x18) = 0;\n    goto joined_r0x004079af;\n  }\n  if (param_1[8] == 0) {\n    local_60 = 100000;\n    uVar21 = *(uint *)(param_1 + 9);\n    bVar23 = true;\n  }\n  else {\n    local_60 = 0xffffffffffffffff;\nLAB_0040727b:\n    bVar23 = true;\n    uVar21 = *(uint *)(param_1 + 9);\n  }\nLAB_00407284:\n  uVar1 = *(ulong *)(lVar17 + 0x48);\n  local_88 = uVar1;\n  local_50 = uVar1 - 1;\n  if (*(char *)(*(long *)(lVar17 + 0x38) + -1 + uVar1) != '/') {\n    local_88 = uVar1 + 1;\n    local_50 = uVar1;\n  }\n  local_58 = (undefined *)0x0;\n  if ((uVar21 & 4) != 0) {\n    local_58 = (undefined *)(local_50 + param_1[4]) + 1;\n    *(undefined *)(local_50 + param_1[4]) = 0x2f;\n  }\n  local_78 = param_1[6] - local_88;\n  local_3a = '\\0';\n  lVar16 = *(long *)(lVar17 + 0x58);\n  local_90 = (void *)0x0;\n  local_80 = (void *)0x0;\n  uVar1 = 0;\n  do {\n    do {\n      uVar20 = uVar1;\n      pDVar15 = *(DIR **)(lVar17 + 0x18);\n      if (pDVar15 == (DIR *)0x0) goto joined_r0x0040785b;\n      piVar9 = __errno_location();\n      *piVar9 = 0;\n      pdVar10 = readdir(pDVar15);\n      if (pdVar10 == (dirent *)0x0) {\n        if (*piVar9 != 0) {\n          *(int *)(lVar17 + 0x40) = *piVar9;\n          *(ushort *)(lVar17 + 0x70) = (-(ushort)(((ulong)__dirp | uVar20) == 0) & 0xfffd) + 7;\n        }\n        if (*(DIR **)(lVar17 + 0x18) != (DIR *)0x0) {\n          closedir(*(DIR **)(lVar17 + 0x18));\n          *(undefined8 *)(lVar17 + 0x18) = 0;\n        }\n        goto joined_r0x0040785b;\n      }\n    } while ((((*(byte *)(param_1 + 9) & 0x20) == 0) && (pdVar10->d_name[0] == '.')) &&\n            ((uVar1 = uVar20, pdVar10->d_name[1] == '\\0' ||\n             (*(short *)(pdVar10->d_name + 1) == 0x2e))));\n    sVar11 = strlen(pdVar10->d_name);\n    pvVar12 = (void *)FUN_00406a70(param_1,pdVar10->d_name,sVar11);\n    if (pvVar12 == (void *)0x0) {\nLAB_00407790:\n      iVar7 = *piVar9;\n      free(pvVar12);\n      FUN_00406b00(local_80);\n      closedir(*(DIR **)(lVar17 + 0x18));\n      *(undefined8 *)(lVar17 + 0x18) = 0;\n      *(undefined2 *)(lVar17 + 0x70) = 7;\n      *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n      *piVar9 = iVar7;\n      return (void *)0x0;\n    }\n    if (local_78 <= sVar11) {\n      lVar2 = param_1[4];\n      cVar5 = FUN_00406df0(param_1 + 4,param_1 + 6,local_50 + 2 + sVar11);\n      if (cVar5 == '\\0') goto LAB_00407790;\n      puVar4 = local_58;\n      if ((param_1[4] != lVar2) &&\n         (local_3a = cVar5, puVar4 = (undefined *)(param_1[4] + local_88),\n         (*(byte *)(param_1 + 9) & 4) == 0)) {\n        puVar4 = local_58;\n      }\n      local_58 = puVar4;\n      local_78 = param_1[6] - local_88;\n    }\n    if (CARRY8(sVar11,local_88)) {\n      free(pvVar12);\n      FUN_00406b00(local_80);\n      closedir(*(DIR **)(lVar17 + 0x18));\n      *(undefined8 *)(lVar17 + 0x18) = 0;\n      *(undefined2 *)(lVar17 + 0x70) = 7;\n      *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n      *piVar9 = 0x24;\n      return (void *)0x0;\n    }\n    *(long *)((long)pvVar12 + 0x58) = lVar16 + 1;\n    lVar2 = *param_1;\n    *(size_t *)((long)pvVar12 + 0x48) = sVar11 + local_88;\n    *(long *)((long)pvVar12 + 8) = lVar2;\n    *(__ino_t *)((long)pvVar12 + 0x80) = pdVar10->d_ino;\n    uVar21 = *(uint *)(param_1 + 9);\n    if ((uVar21 & 4) == 0) {\n      *(void **)((long)pvVar12 + 0x30) = (void *)((long)pvVar12 + 0x108);\n    }\n    else {\n      *(undefined8 *)((long)pvVar12 + 0x30) = *(undefined8 *)((long)pvVar12 + 0x38);\n      memmove(local_58,(void *)((long)pvVar12 + 0x108),*(long *)((long)pvVar12 + 0x60) + 1);\n      uVar21 = *(uint *)(param_1 + 9);\n    }\n    if ((param_1[8] == 0) || ((uVar21 & 0x400) != 0)) {\n      uVar18 = pdVar10->d_type - 1;\n      if (((uVar21 & 0x18) == 0x18) && ((pdVar10->d_type & 0xfb) != 0)) {\n        *(undefined2 *)((long)pvVar12 + 0x70) = 0xb;\n        if (uVar18 < 0xc) {\n          *(undefined4 *)((long)pvVar12 + 0x90) = *(undefined4 *)(&DAT_0040e600 + (ulong)uVar18 * 4)\n          ;\n          uVar13 = 1;\n        }\n        else {\n          *(undefined4 *)((long)pvVar12 + 0x90) = 0;\n          uVar13 = 1;\n        }\n      }\n      else {\n        *(undefined2 *)((long)pvVar12 + 0x70) = 0xb;\n        if (uVar18 < 0xc) {\n          *(undefined4 *)((long)pvVar12 + 0x90) = *(undefined4 *)(&DAT_0040e600 + (ulong)uVar18 * 4)\n          ;\n          uVar13 = 2;\n        }\n        else {\n          *(undefined4 *)((long)pvVar12 + 0x90) = 0;\n          uVar13 = 2;\n        }\n      }\n      *(undefined8 *)((long)pvVar12 + 0xa8) = uVar13;\n    }\n    else {\n      uVar6 = FUN_004067c0(param_1,pvVar12,0);\n      *(undefined2 *)((long)pvVar12 + 0x70) = uVar6;\n    }\n    *(undefined8 *)((long)pvVar12 + 0x10) = 0;\n    pvVar14 = pvVar12;\n    if (local_80 != (void *)0x0) {\n      *(void **)((long)local_90 + 0x10) = pvVar12;\n      pvVar14 = local_80;\n    }\n    local_80 = pvVar14;\n    uVar1 = uVar20 + 1;\n    local_90 = pvVar12;\n  } while (uVar20 + 1 < local_60);\n  uVar20 = uVar20 + 1;\njoined_r0x0040785b:\n  if (local_3a != '\\0') {\n    lVar2 = param_1[4];\n    for (lVar16 = param_1[1]; pvVar12 = local_80, lVar16 != 0; lVar16 = *(long *)(lVar16 + 0x10)) {\n      if (*(long *)(lVar16 + 0x30) != lVar16 + 0x108) {\n        *(long *)(lVar16 + 0x30) = (*(long *)(lVar16 + 0x30) - *(long *)(lVar16 + 0x38)) + lVar2;\n      }\n      *(long *)(lVar16 + 0x38) = lVar2;\n    }\n    while (pvVar14 = pvVar12, -1 < *(long *)((long)pvVar14 + 0x58)) {\n      if (*(long *)((long)pvVar14 + 0x30) != (long)pvVar14 + 0x108) {\n        *(long *)((long)pvVar14 + 0x30) =\n             (*(long *)((long)pvVar14 + 0x30) - *(long *)((long)pvVar14 + 0x38)) + lVar2;\n      }\n      *(long *)((long)pvVar14 + 0x38) = lVar2;\n      pvVar12 = *(void **)((long)pvVar14 + 0x10);\n      if (*(void **)((long)pvVar14 + 0x10) == (void *)0x0) {\n        pvVar12 = *(void **)((long)pvVar14 + 8);\n      }\n    }\n  }\n  if ((*(byte *)(param_1 + 9) & 4) != 0) {\n    if ((param_1[6] == local_88) || (uVar20 == 0)) {\n      local_58 = local_58 + -1;\n    }\n    *local_58 = 0;\n  }\n  if ((__dirp == (DIR *)0x0) && (bVar23)) {\n    if ((param_2 == 1) || (uVar20 == 0)) {\n      if (*(long *)(lVar17 + 0x58) == 0) {\n        iVar7 = FUN_00406d90(param_1);\n      }\n      else {\n        iVar7 = FUN_00406f10(param_1,*(undefined8 *)(lVar17 + 8),0xffffffff,&DAT_0040e5f9);\n      }\n      if (iVar7 != 0) {\n        *(undefined2 *)(lVar17 + 0x70) = 7;\n        *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n        FUN_00406b00(local_80);\n        return (void *)0x0;\n      }\n      goto LAB_004078f8;\n    }\n  }\n  else {\nLAB_004078f8:\n    if (uVar20 == 0) {\n      if (((param_2 == 3) && (*(short *)(lVar17 + 0x70) != 4)) && (*(short *)(lVar17 + 0x70) != 7))\n      {\n        *(undefined2 *)(lVar17 + 0x70) = 6;\n      }\n      FUN_00406b00(local_80);\n      return (void *)0x0;\n    }\n  }\n  lVar16 = param_1[8];\n  if (10000 < uVar20) {\n    if (lVar16 != 0) goto LAB_004078b7;\n    lVar17 = FUN_00406b90(lVar17);\n    if ((lVar17 != 0x6969) && (lVar17 != 0x1021994)) {\n      param_1[8] = (long)FUN_00406790;\n      pvVar12 = (void *)FUN_00406970(param_1,local_80,uVar20);\n      param_1[8] = 0;\n      return pvVar12;\n    }\n    lVar16 = param_1[8];\n  }\n  if (lVar16 == 0) {\n    return local_80;\n  }\n  if (uVar20 == 1) {\n    return local_80;\n  }\nLAB_004078b7:\n  pvVar12 = (void *)FUN_00406970(param_1,local_80,uVar20);\n  return pvVar12;\n}\n\n",
            "funcName": "FUN_00407230"
        },
        {
            "funcStartAddr": "0x407bf0",
            "funcEndAddr": "0x407f60",
            "decompiledFuncCode": "\nlong * fts_open(char **param_1,uint param_2,long param_3)\n\n{\n  undefined4 uVar1;\n  char cVar2;\n  undefined2 uVar3;\n  int iVar4;\n  long *__ptr;\n  size_t sVar5;\n  long lVar6;\n  long lVar7;\n  long lVar8;\n  int *piVar9;\n  ulong uVar10;\n  char *pcVar11;\n  char **ppcVar12;\n  void *local_50;\n  byte local_42;\n  long local_40;\n  \n  if ((((param_2 & 0xffffe000) != 0) || ((param_2 & 0x204) == 0x204)) || ((param_2 & 0x12) == 0)) {\n    piVar9 = __errno_location();\n    *piVar9 = 0x16;\n    return (long *)0x0;\n  }\n  __ptr = (long *)calloc(0x80,1);\n  if (__ptr == (long *)0x0) {\n    return (long *)0x0;\n  }\n  __ptr[8] = param_3;\n  if ((param_2 & 2) == 0) {\n    *(uint *)(__ptr + 9) = param_2;\n  }\n  else {\n    *(uint *)(__ptr + 9) = param_2 & 0xfffffdff | 4;\n  }\n  pcVar11 = *param_1;\n  *(undefined4 *)((long)__ptr + 0x2c) = 0xffffff9c;\n  if (pcVar11 == (char *)0x0) {\n    uVar10 = 0x1000;\n  }\n  else {\n    uVar10 = 0;\n    ppcVar12 = param_1;\n    do {\n      sVar5 = strlen(pcVar11);\n      if (uVar10 < sVar5) {\n        uVar10 = sVar5;\n      }\n      ppcVar12 = ppcVar12 + 1;\n      pcVar11 = *ppcVar12;\n    } while (pcVar11 != (char *)0x0);\n    uVar10 = uVar10 + 1;\n    if (uVar10 < 0x1000) {\n      uVar10 = 0x1000;\n    }\n  }\n  local_42 = FUN_00406df0(__ptr + 4,__ptr + 6,uVar10);\n  if (local_42 == 0) goto LAB_00407ebb;\n  pcVar11 = *param_1;\n  if (pcVar11 == (char *)0x0) {\n    local_50 = (void *)0x0;\n    if (param_3 != 0) {\nLAB_00407d03:\n      local_42 = (byte)(*(uint *)(__ptr + 9) >> 10) & 1;\n      goto LAB_00407d10;\n    }\nLAB_00407ef2:\n    lVar7 = 0;\nLAB_00407e2c:\n    lVar8 = FUN_00406a70(__ptr,\"\",0);\n    *__ptr = lVar8;\n    if (lVar8 != 0) {\n      *(long *)(lVar8 + 0x10) = lVar7;\n      uVar1 = *(undefined4 *)(__ptr + 9);\n      *(undefined2 *)(lVar8 + 0x70) = 9;\n      cVar2 = FUN_00406e60(uVar1,__ptr + 0xb);\n      if (cVar2 != '\\0') {\n        if ((*(uint *)(__ptr + 9) & 0x204) == 0) {\n          iVar4 = FUN_00406ec0(*(undefined4 *)((long)__ptr + 0x2c),*(uint *)(__ptr + 9),\n                               &DAT_0040e5fa);\n          *(int *)(__ptr + 5) = iVar4;\n          if (iVar4 < 0) {\n            *(uint *)(__ptr + 9) = *(uint *)(__ptr + 9) | 4;\n          }\n        }\n        FUN_0040ad80(__ptr + 0xc,0xffffffff);\n        return __ptr;\n      }\n    }\nLAB_00407ea0:\n    FUN_00406b00(lVar7);\n    free(local_50);\n  }\n  else {\n    local_50 = (void *)FUN_00406a70(__ptr,\"\",0);\n    if (local_50 != (void *)0x0) {\n      pcVar11 = *param_1;\n      *(undefined8 *)((long)local_50 + 0x58) = 0xffffffffffffffff;\n      *(undefined8 *)((long)local_50 + 0x68) = 0xffffffffffffffff;\n      if (param_3 != 0) goto LAB_00407d03;\nLAB_00407d10:\n      if (pcVar11 == (char *)0x0) goto LAB_00407ef2;\n      local_40 = 0;\n      uVar10 = 0;\n      lVar8 = 0;\n      do {\n        sVar5 = strlen(pcVar11);\n        if (((2 < sVar5) && ((((byte)(param_2 >> 0xc) ^ 1) & 1) != 0)) &&\n           (pcVar11[sVar5 - 1] == '/')) {\n          do {\n            if (pcVar11[sVar5 - 2] != '/') break;\n            sVar5 = sVar5 - 1;\n          } while (sVar5 != 1);\n        }\n        lVar6 = FUN_00406a70(__ptr,pcVar11,sVar5);\n        lVar7 = lVar8;\n        if (lVar6 == 0) goto LAB_00407ea0;\n        *(undefined8 *)(lVar6 + 0x58) = 0;\n        *(void **)(lVar6 + 8) = local_50;\n        *(long *)(lVar6 + 0x30) = lVar6 + 0x108;\n        lVar7 = lVar6;\n        if ((lVar8 == 0) || (local_42 == 0)) {\n          uVar3 = FUN_004067c0(__ptr,lVar6,0);\n          *(undefined2 *)(lVar6 + 0x70) = uVar3;\n          if (param_3 != 0) goto LAB_00407da8;\n          *(undefined8 *)(lVar6 + 0x10) = 0;\n          if (lVar8 != 0) goto LAB_00407f40;\n        }\n        else {\n          *(undefined8 *)(lVar6 + 0xa8) = 2;\n          *(undefined2 *)(lVar6 + 0x70) = 0xb;\n          if (param_3 == 0) {\n            *(undefined8 *)(lVar6 + 0x10) = 0;\nLAB_00407f40:\n            *(long *)(local_40 + 0x10) = lVar6;\n            lVar7 = lVar8;\n          }\n          else {\nLAB_00407da8:\n            *(long *)(lVar6 + 0x10) = lVar8;\n            lVar6 = local_40;\n          }\n        }\n        local_40 = lVar6;\n        uVar10 = uVar10 + 1;\n        pcVar11 = param_1[uVar10];\n        lVar8 = lVar7;\n      } while (pcVar11 != (char *)0x0);\n      if ((param_3 != 0) && (1 < uVar10)) {\n        lVar7 = FUN_00406970(__ptr,lVar7,uVar10);\n      }\n      goto LAB_00407e2c;\n    }\n  }\n  free((void *)__ptr[4]);\nLAB_00407ebb:\n  free(__ptr);\n  return (long *)0x0;\n}\n\n",
            "funcName": "fts_open"
        },
        {
            "funcStartAddr": "0x407f90",
            "funcEndAddr": "0x4080de",
            "decompiledFuncCode": "\nint fts_close(void **param_1)\n\n{\n  long lVar1;\n  int iVar2;\n  int iVar3;\n  int *piVar4;\n  void *__ptr;\n  void *__ptr_00;\n  \n  __ptr = *param_1;\n  if (__ptr != (void *)0x0) {\n    lVar1 = *(long *)((long)__ptr + 0x58);\n    while (__ptr_00 = __ptr, -1 < lVar1) {\n      while (__ptr = *(void **)((long)__ptr_00 + 0x10), __ptr != (void *)0x0) {\n        free(__ptr_00);\n        __ptr_00 = __ptr;\n        if (*(long *)((long)__ptr + 0x58) < 0) goto LAB_00407fdb;\n      }\n      __ptr = *(void **)((long)__ptr_00 + 8);\n      free(__ptr_00);\n      lVar1 = *(long *)((long)__ptr + 0x58);\n    }\nLAB_00407fdb:\n    free(__ptr);\n  }\n  if (param_1[1] != (void *)0x0) {\n    FUN_00406b00();\n  }\n  free(param_1[2]);\n  free(param_1[4]);\n  if ((*(uint *)(param_1 + 9) & 0x200) == 0) {\n    if ((*(uint *)(param_1 + 9) & 4) == 0) {\n      iVar2 = fchdir(*(int *)(param_1 + 5));\n      if (iVar2 == 0) {\n        iVar2 = close(*(int *)(param_1 + 5));\n        if (iVar2 == 0) goto LAB_00408012;\n        piVar4 = __errno_location();\n      }\n      else {\n        piVar4 = __errno_location();\n        iVar2 = *piVar4;\n        iVar3 = close(*(int *)(param_1 + 5));\n        if ((iVar3 == 0) || (iVar2 != 0)) goto LAB_00408014;\n      }\n      iVar2 = *piVar4;\n      goto LAB_00408014;\n    }\n  }\n  else if ((-1 < *(int *)((long)param_1 + 0x2c)) &&\n          (iVar2 = close(*(int *)((long)param_1 + 0x2c)), iVar2 != 0)) {\n    piVar4 = __errno_location();\n    iVar2 = *piVar4;\n    goto LAB_00408014;\n  }\nLAB_00408012:\n  iVar2 = 0;\nLAB_00408014:\n  FUN_00406b50(param_1 + 0xc);\n  if (param_1[10] != (void *)0x0) {\n    FUN_0040a600();\n  }\n  if ((*(uint *)(param_1 + 9) & 0x102) == 0) {\n    free(param_1[0xb]);\n  }\n  else if (param_1[0xb] != (void *)0x0) {\n    FUN_0040a600();\n  }\n  free(param_1);\n  if (iVar2 != 0) {\n    piVar4 = __errno_location();\n    *piVar4 = iVar2;\n    iVar2 = -1;\n  }\n  return iVar2;\n}\n\n",
            "funcName": "fts_close"
        },
        {
            "funcStartAddr": "0x408110",
            "funcEndAddr": "0x40883a",
            "decompiledFuncCode": "\nvoid * fts_read(void **param_1)\n\n{\n  ulong uVar1;\n  char *__s;\n  short sVar2;\n  undefined4 uVar3;\n  long lVar4;\n  char cVar5;\n  undefined2 uVar6;\n  short sVar7;\n  int iVar8;\n  int *piVar9;\n  char *pcVar10;\n  size_t sVar11;\n  long lVar12;\n  void *pvVar13;\n  void *pvVar14;\n  uint uVar15;\n  \n  pvVar14 = *param_1;\n  if (pvVar14 == (void *)0x0) {\n    return (void *)0x0;\n  }\n  uVar15 = *(uint *)(param_1 + 9);\n  if ((uVar15 & 0x4000) != 0) {\n    return (void *)0x0;\n  }\n  sVar7 = *(short *)((long)pvVar14 + 0x74);\n  *(undefined2 *)((long)pvVar14 + 0x74) = 3;\n  if (sVar7 == 1) {\n    uVar6 = FUN_004067c0(param_1,pvVar14,0);\n    *(undefined2 *)((long)pvVar14 + 0x70) = uVar6;\n    return pvVar14;\n  }\n  sVar2 = *(short *)((long)pvVar14 + 0x70);\n  pvVar13 = pvVar14;\n  if (sVar7 == 2) {\n    if (1 < (ushort)(sVar2 - 0xcU)) {\n      if (sVar2 == 1) goto LAB_00408267;\n      goto LAB_00408190;\n    }\n    sVar7 = FUN_004067c0(param_1,pvVar14,1);\n    *(short *)((long)pvVar14 + 0x70) = sVar7;\n    if (sVar7 != 1) {\n      *param_1 = pvVar14;\n      if (sVar7 != 0xb) {\n        return pvVar14;\n      }\n      goto LAB_004084d0;\n    }\n    if ((*(uint *)(param_1 + 9) & 4) == 0) {\n      iVar8 = FUN_00406ec0(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                           &DAT_0040e5fa);\n      *(int *)((long)pvVar14 + 0x44) = iVar8;\n      if (iVar8 < 0) {\n        piVar9 = __errno_location();\n        iVar8 = *piVar9;\n        *(undefined2 *)((long)pvVar14 + 0x70) = 7;\n        *(int *)((long)pvVar14 + 0x40) = iVar8;\n        *param_1 = pvVar14;\n        return pvVar14;\n      }\n      *(ushort *)((long)pvVar14 + 0x72) = *(ushort *)((long)pvVar14 + 0x72) | 2;\n      sVar7 = *(short *)((long)pvVar14 + 0x70);\n      goto LAB_00408447;\n    }\n    *param_1 = pvVar14;\nLAB_0040845e:\n    if (*(long *)((long)pvVar14 + 0x58) != 0) goto LAB_0040846e;\n  }\n  else {\n    if (sVar2 == 1) {\n      if (sVar7 == 4) goto LAB_00408302;\nLAB_00408267:\n      if (((uVar15 & 0x40) != 0) && (*(void **)((long)pvVar14 + 0x78) != param_1[3])) {\nLAB_00408302:\n        if ((*(byte *)((long)pvVar14 + 0x72) & 2) != 0) {\n          close(*(int *)((long)pvVar14 + 0x44));\n        }\n        if (param_1[1] != (void *)0x0) {\n          FUN_00406b00();\n          param_1[1] = (void *)0x0;\n        }\n        uVar3 = *(undefined4 *)(param_1 + 9);\n        *(undefined2 *)((long)pvVar14 + 0x70) = 6;\n        FUN_00407190(uVar3,param_1 + 0xb,pvVar14);\n        return pvVar14;\n      }\n      if (param_1[1] == (void *)0x0) {\nLAB_00408529:\n        pvVar13 = (void *)FUN_00407230(param_1,3);\n        param_1[1] = pvVar13;\n        if (pvVar13 == (void *)0x0) {\n          uVar15 = *(uint *)(param_1 + 9);\n          if ((uVar15 & 0x4000) != 0) {\n            return (void *)0x0;\n          }\n          if ((*(int *)((long)pvVar14 + 0x40) != 0) && (*(short *)((long)pvVar14 + 0x70) != 4)) {\n            *(undefined2 *)((long)pvVar14 + 0x70) = 7;\n          }\n          FUN_00407190(uVar15,param_1 + 0xb,pvVar14);\n          return pvVar14;\n        }\n      }\n      else {\n        if ((uVar15 & 0x2000) != 0) {\n          *(uint *)(param_1 + 9) = uVar15 & 0xffffdfff;\n          FUN_00406b00();\n          param_1[1] = (void *)0x0;\n          goto LAB_00408529;\n        }\n        iVar8 = FUN_00406f10(param_1,pvVar14,0xffffffff,*(undefined8 *)((long)pvVar14 + 0x30));\n        if (iVar8 == 0) {\n          pvVar13 = param_1[1];\n        }\n        else {\n          piVar9 = __errno_location();\n          pvVar13 = param_1[1];\n          iVar8 = *piVar9;\n          *(ushort *)((long)pvVar14 + 0x72) = *(ushort *)((long)pvVar14 + 0x72) | 1;\n          *(int *)((long)pvVar14 + 0x40) = iVar8;\n          for (pvVar14 = pvVar13; pvVar14 != (void *)0x0; pvVar14 = *(void **)((long)pvVar14 + 0x10)\n              ) {\n            *(undefined8 *)((long)pvVar14 + 0x30) =\n                 *(undefined8 *)(*(long *)((long)pvVar14 + 8) + 0x30);\n          }\n        }\n      }\n      param_1[1] = (void *)0x0;\n      pvVar14 = pvVar13;\n    }\n    else {\nLAB_00408190:\n      do {\n        pvVar14 = *(void **)((long)pvVar13 + 0x10);\n        if (pvVar14 == (void *)0x0) {\n          pvVar14 = *(void **)((long)pvVar13 + 8);\n          if (*(long *)((long)pvVar14 + 0x18) != 0) {\n            lVar4 = *(long *)((long)pvVar14 + 0x48);\n            *param_1 = pvVar14;\n            *(undefined *)((long)param_1[4] + lVar4) = 0;\n            pvVar14 = (void *)FUN_00407230(param_1,3);\n            if (pvVar14 != (void *)0x0) {\n              free(pvVar13);\n              goto LAB_0040840a;\n            }\n            if ((*(byte *)((long)param_1 + 0x49) & 0x40) != 0) {\n              return (void *)0x0;\n            }\n            pvVar14 = *(void **)((long)pvVar13 + 8);\n          }\n          *param_1 = pvVar14;\n          free(pvVar13);\n          if (*(long *)((long)pvVar14 + 0x58) == -1) {\n            free(pvVar14);\n            piVar9 = __errno_location();\n            *piVar9 = 0;\n            *param_1 = (void *)0x0;\n            return (void *)0x0;\n          }\n          if (*(short *)((long)pvVar14 + 0x70) != 0xb) {\n            *(undefined *)((long)param_1[4] + *(long *)((long)pvVar14 + 0x48)) = 0;\n            if (*(long *)((long)pvVar14 + 0x58) == 0) {\n              iVar8 = FUN_00406d90(param_1);\n              if (iVar8 == 0) goto LAB_004081f6;\nLAB_0040860f:\n              piVar9 = __errno_location();\n              *(int *)((long)pvVar14 + 0x40) = *piVar9;\n              *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n              if (*(short *)((long)pvVar14 + 0x70) == 2) {\n                return (void *)0x0;\n              }\n              uVar15 = *(uint *)(param_1 + 9);\n            }\n            else {\n              if ((*(ushort *)((long)pvVar14 + 0x72) & 2) == 0) {\n                if (((*(ushort *)((long)pvVar14 + 0x72) & 1) == 0) &&\n                   (iVar8 = FUN_00406f10(param_1,*(undefined8 *)((long)pvVar14 + 8),0xffffffff,\n                                         &DAT_0040e5f9), iVar8 != 0)) goto LAB_0040860f;\n              }\n              else {\n                iVar8 = *(int *)((long)pvVar14 + 0x44);\n                if ((*(uint *)(param_1 + 9) & 4) == 0) {\n                  if ((*(uint *)(param_1 + 9) & 0x200) == 0) {\n                    iVar8 = fchdir(iVar8);\n                    if (iVar8 != 0) {\n                      piVar9 = __errno_location();\n                      *(int *)((long)pvVar14 + 0x40) = *piVar9;\n                      *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n                    }\n                    iVar8 = *(int *)((long)pvVar14 + 0x44);\n                  }\n                  else {\n                    FUN_00406d20(param_1,iVar8,1);\n                    iVar8 = *(int *)((long)pvVar14 + 0x44);\n                  }\n                }\n                close(iVar8);\n              }\nLAB_004081f6:\n              uVar15 = *(uint *)(param_1 + 9);\n              if (*(short *)((long)pvVar14 + 0x70) == 2) goto LAB_00408228;\n            }\n            if (*(int *)((long)pvVar14 + 0x40) == 0) {\n              *(undefined2 *)((long)pvVar14 + 0x70) = 6;\n              FUN_00407190(uVar15,param_1 + 0xb,pvVar14);\n              uVar15 = *(uint *)(param_1 + 9);\n            }\n            else {\n              *(undefined2 *)((long)pvVar14 + 0x70) = 7;\n            }\nLAB_00408228:\n            if ((uVar15 & 0x4000) != 0) {\n              return (void *)0x0;\n            }\n            return pvVar14;\n          }\n          goto FUN_004020b8;\n        }\n        *param_1 = pvVar14;\n        free(pvVar13);\n        if (*(long *)((long)pvVar14 + 0x58) == 0) {\n          iVar8 = FUN_00406d90(param_1);\n          if (iVar8 != 0) {\n            *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n            return (void *)0x0;\n          }\n          if ((*(uint *)(param_1 + 9) & 0x102) == 0) {\n            free(param_1[0xb]);\n          }\n          else if (param_1[0xb] != (void *)0x0) {\n            FUN_0040a600();\n          }\n          __s = (char *)((long)pvVar14 + 0x108);\n          pvVar13 = param_1[4];\n          *(long *)((long)pvVar14 + 0x48) = *(long *)((long)pvVar14 + 0x60);\n          memmove(pvVar13,__s,*(long *)((long)pvVar14 + 0x60) + 1);\n          pcVar10 = strrchr(__s,0x2f);\n          if ((pcVar10 != (char *)0x0) &&\n             ((__s != pcVar10 || (*(char *)((long)pvVar14 + 0x109) != '\\0')))) {\n            sVar11 = strlen(pcVar10 + 1);\n            memmove(__s,pcVar10 + 1,sVar11 + 1);\n            *(size_t *)((long)pvVar14 + 0x60) = sVar11;\n          }\n          pvVar13 = param_1[4];\n          uVar3 = *(undefined4 *)(param_1 + 9);\n          *(void **)((long)pvVar14 + 0x38) = pvVar13;\n          *(void **)((long)pvVar14 + 0x30) = pvVar13;\n          FUN_00406e60(uVar3,param_1 + 0xb);\n          sVar7 = *(short *)((long)pvVar14 + 0x70);\n          goto LAB_00408447;\n        }\n        pvVar13 = pvVar14;\n      } while (*(short *)((long)pvVar14 + 0x74) == 4);\n      if (*(short *)((long)pvVar14 + 0x74) == 2) {\n        sVar7 = FUN_004067c0(param_1,pvVar14,1);\n        *(short *)((long)pvVar14 + 0x70) = sVar7;\n        if ((sVar7 == 1) && ((*(uint *)(param_1 + 9) & 4) == 0)) {\n          iVar8 = FUN_00406ec0(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                               &DAT_0040e5fa);\n          *(int *)((long)pvVar14 + 0x44) = iVar8;\n          if (iVar8 < 0) {\n            piVar9 = __errno_location();\n            iVar8 = *piVar9;\n            *(undefined2 *)((long)pvVar14 + 0x70) = 7;\n            *(int *)((long)pvVar14 + 0x40) = iVar8;\n          }\n          else {\n            *(ushort *)((long)pvVar14 + 0x72) = *(ushort *)((long)pvVar14 + 0x72) | 2;\n          }\n        }\n        *(undefined2 *)((long)pvVar14 + 0x74) = 3;\n      }\n    }\nLAB_0040840a:\n    lVar4 = *(long *)(*(long *)((long)pvVar14 + 8) + 0x48);\n    lVar12 = lVar4 + -1;\n    if (*(char *)(*(long *)(*(long *)((long)pvVar14 + 8) + 0x38) + -1 + lVar4) != '/') {\n      lVar12 = lVar4;\n    }\n    pvVar13 = param_1[4];\n    *(undefined *)(lVar12 + (long)pvVar13) = 0x2f;\n    memmove((undefined *)(lVar12 + (long)pvVar13) + 1,(void *)((long)pvVar14 + 0x108),\n            *(long *)((long)pvVar14 + 0x60) + 1);\n    sVar7 = *(short *)((long)pvVar14 + 0x70);\nLAB_00408447:\n    *param_1 = pvVar14;\n    if (sVar7 != 0xb) {\nLAB_00408451:\n      if (sVar7 != 1) {\n        return pvVar14;\n      }\n      goto LAB_0040845e;\n    }\nLAB_004084d0:\n    if (*(long *)((long)pvVar14 + 0xa8) != 2) {\n      if (*(long *)((long)pvVar14 + 0xa8) == 1) {\n        return pvVar14;\n      }\nFUN_004020b8:\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n    lVar4 = *(long *)((long)pvVar14 + 8);\n    if (((*(long *)(lVar4 + 0x68) == 0) && ((*(uint *)(param_1 + 9) & 0x18) == 0x18)) &&\n       (iVar8 = FUN_00406cb0(lVar4), iVar8 == 2)) {\n      sVar7 = *(short *)((long)pvVar14 + 0x70);\n      goto LAB_00408451;\n    }\n    sVar7 = FUN_004067c0(param_1,pvVar14,0);\n    *(short *)((long)pvVar14 + 0x70) = sVar7;\n    if ((*(uint *)((long)pvVar14 + 0x90) & 0xf000) != 0x4000) goto LAB_00408451;\n    if (*(long *)((long)pvVar14 + 0x58) != 0) {\n      uVar1 = *(long *)(lVar4 + 0x68) - 1;\n      if (uVar1 < 0xfffffffffffffffe) {\n        *(ulong *)(lVar4 + 0x68) = uVar1;\n      }\n      if (sVar7 != 1) {\n        return pvVar14;\n      }\n      goto LAB_0040846e;\n    }\n    if (sVar7 != 1) {\n      return pvVar14;\n    }\n  }\n  param_1[3] = *(void **)((long)pvVar14 + 0x78);\nLAB_0040846e:\n  cVar5 = FUN_004070e0(*(undefined4 *)(param_1 + 9),param_1 + 0xb,pvVar14);\n  if (cVar5 == '\\0') {\n    piVar9 = __errno_location();\n    pvVar14 = (void *)0x0;\n    *piVar9 = 0xc;\n  }\n  return pvVar14;\n}\n\n",
            "funcName": "fts_read"
        },
        {
            "funcStartAddr": "0x408870",
            "funcEndAddr": "0x408895",
            "decompiledFuncCode": "\nundefined8 fts_set(undefined8 param_1,long param_2,uint param_3)\n\n{\n  int *piVar1;\n  \n  if (param_3 < 5) {\n    *(short *)(param_2 + 0x74) = (short)param_3;\n    return 0;\n  }\n  piVar1 = __errno_location();\n  *piVar1 = 0x16;\n  return 1;\n}\n\n",
            "funcName": "fts_set"
        },
        {
            "funcStartAddr": "0x4088a0",
            "funcEndAddr": "0x4089ec",
            "decompiledFuncCode": "\nlong fts_children(long *param_1,uint param_2)\n\n{\n  int __fd;\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  long lVar4;\n  undefined8 uVar5;\n  \n  piVar2 = __errno_location();\n  if ((param_2 & 0xffffdfff) != 0) {\n    *piVar2 = 0x16;\n    return 0;\n  }\n  lVar4 = *param_1;\n  *piVar2 = 0;\n  if ((*(byte *)((long)param_1 + 0x49) & 0x40) == 0) {\n    if (*(short *)(lVar4 + 0x70) == 9) {\n      return *(long *)(lVar4 + 0x10);\n    }\n    lVar3 = 0;\n    if (*(short *)(lVar4 + 0x70) == 1) {\n      if (param_1[1] != 0) {\n        FUN_00406b00();\n      }\n      uVar5 = 1;\n      if (param_2 == 0x2000) {\n        *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x2000;\n        uVar5 = 2;\n      }\n      if (((*(long *)(lVar4 + 0x58) == 0) && (**(char **)(lVar4 + 0x30) != '/')) &&\n         ((*(uint *)(param_1 + 9) & 4) == 0)) {\n        __fd = FUN_00406ec0(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                            &DAT_0040e5fa);\n        if (__fd < 0) {\n          param_1[1] = 0;\n          lVar3 = 0;\n        }\n        else {\n          lVar4 = FUN_00407230(param_1,uVar5);\n          param_1[1] = lVar4;\n          if ((*(byte *)((long)param_1 + 0x49) & 2) == 0) {\n            iVar1 = fchdir(__fd);\n            if (iVar1 != 0) {\n              iVar1 = *piVar2;\n              close(__fd);\n              *piVar2 = iVar1;\n              return 0;\n            }\n            close(__fd);\n          }\n          else {\n            FUN_00406d20(param_1,__fd,1);\n          }\n          lVar3 = param_1[1];\n        }\n      }\n      else {\n        lVar3 = FUN_00407230(param_1,uVar5);\n        param_1[1] = lVar3;\n      }\n    }\n    return lVar3;\n  }\n  return 0;\n}\n\n",
            "funcName": "fts_children"
        },
        {
            "funcStartAddr": "0x408a10",
            "funcEndAddr": "0x408ae5",
            "decompiledFuncCode": "\nvoid FUN_00408a10(long param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 *puVar5;\n  long lVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  \n  iVar1 = param_2[0xb];\n  iVar2 = *param_2;\n  iVar3 = param_2[0xc];\n  iVar8 = iVar1;\n  iVar9 = iVar2;\n  while (iVar3 < iVar9) {\n    while( true ) {\n      if (iVar3 <= iVar8) goto LAB_00408a8c;\n      iVar10 = iVar9 - iVar3;\n      iVar7 = iVar3 - iVar8;\n      if (iVar10 <= iVar7) break;\n      lVar6 = (long)iVar8;\n      iVar9 = iVar9 - iVar7;\n      puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n      do {\n        uVar4 = *puVar5;\n        *puVar5 = puVar5[iVar9 - lVar6];\n        puVar5[iVar9 - lVar6] = uVar4;\n        puVar5 = puVar5 + 1;\n      } while ((undefined8 *)(param_1 + 8 + ((ulong)(iVar7 - 1) + lVar6) * 8) != puVar5);\n      if (iVar9 <= iVar3) goto LAB_00408a8c;\n    }\n    lVar6 = (long)iVar8;\n    puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n    do {\n      uVar4 = *puVar5;\n      *puVar5 = puVar5[iVar3 - lVar6];\n      puVar5[iVar3 - lVar6] = uVar4;\n      puVar5 = puVar5 + 1;\n    } while (puVar5 != (undefined8 *)(param_1 + 8 + ((ulong)(iVar10 - 1) + lVar6) * 8));\n    iVar8 = iVar8 + iVar10;\n  }\nLAB_00408a8c:\n  param_2[0xc] = iVar2;\n  param_2[0xb] = iVar1 + (iVar2 - iVar3);\n  return;\n}\n\n",
            "funcName": "FUN_00408a10"
        },
        {
            "funcStartAddr": "0x408af0",
            "funcEndAddr": "0x4090ee",
            "decompiledFuncCode": "\nint FUN_00408af0(int param_1,undefined8 *param_2,char *param_3,char **param_4,undefined4 *param_5,\n                int param_6,int *param_7,int param_8,undefined8 param_9)\n\n{\n  char cVar1;\n  undefined8 uVar2;\n  bool bVar3;\n  bool bVar4;\n  int iVar5;\n  int iVar6;\n  size_t sVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  char **ppcVar10;\n  char *pcVar11;\n  char **ppcVar12;\n  char *pcVar13;\n  char *__s1;\n  FILE *__stream;\n  ulong uVar14;\n  size_t sVar15;\n  char *__s1_00;\n  long lVar16;\n  char *local_70;\n  uint local_44;\n  \n  pcVar13 = *(char **)(param_7 + 8);\n  cVar1 = *pcVar13;\n  pcVar11 = pcVar13;\n  if ((cVar1 == '=') || (cVar1 == '\\0')) {\n    sVar15 = 0;\n  }\n  else {\n    do {\n      pcVar11 = pcVar11 + 1;\n      if (*pcVar11 == '\\0') break;\n    } while (*pcVar11 != '=');\n    sVar15 = (long)pcVar11 - (long)pcVar13;\n  }\n  uVar14 = 0;\n  __s1 = *param_4;\n  ppcVar10 = param_4;\n  __s1_00 = __s1;\n  if (__s1 != (char *)0x0) {\n    while( true ) {\n      iVar5 = strncmp(__s1_00,pcVar13,sVar15);\n      if ((iVar5 == 0) && (sVar7 = strlen(__s1_00), sVar7 == sVar15)) goto LAB_00408d10;\n      ppcVar10 = ppcVar10 + 4;\n      __s1_00 = *ppcVar10;\n      iVar5 = (int)uVar14 + 1;\n      if (__s1_00 == (char *)0x0) break;\n      uVar14 = (ulong)iVar5;\n    }\n    lVar16 = 0;\n    ppcVar10 = (char **)0x0;\n    local_44 = 0xffffffff;\n    bVar3 = false;\n    bVar4 = false;\n    local_70 = (char *)0x0;\n    ppcVar12 = param_4;\n    do {\n      iVar6 = strncmp(__s1,pcVar13,sVar15);\n      if (iVar6 == 0) {\n        if (ppcVar10 == (char **)0x0) {\n          local_44 = (uint)lVar16;\n          ppcVar10 = ppcVar12;\n        }\n        else if (((((param_6 != 0) || (*(int *)(ppcVar10 + 1) != *(int *)(ppcVar12 + 1))) ||\n                  (ppcVar10[2] != ppcVar12[2])) ||\n                 (*(int *)(ppcVar10 + 3) != *(int *)(ppcVar12 + 3))) && (!bVar3)) {\n          if (param_8 == 0) {\n            bVar3 = true;\n            if (local_70 == (char *)0x0) goto LAB_00408c50;\n          }\n          else if (local_70 == (char *)0x0) {\n            local_70 = (char *)calloc((long)iVar5,1);\n            if (local_70 == (char *)0x0) {\n              bVar3 = true;\n              goto LAB_00408c50;\n            }\n            bVar4 = true;\n            local_70[(int)local_44] = '\\x01';\n          }\n          local_70[lVar16] = '\\x01';\n        }\n      }\nLAB_00408c50:\n      ppcVar12 = ppcVar12 + 4;\n      __s1 = *ppcVar12;\n      lVar16 = lVar16 + 1;\n    } while (__s1 != (char *)0x0);\n    if ((local_70 != (char *)0x0) || (bVar3)) {\n      if (param_8 != 0) {\n        if (bVar3) {\n          uVar2 = *param_2;\n          uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous\\n\",5);\n          __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n        else {\n          flockfile(stderr);\n          uVar2 = *(undefined8 *)(param_7 + 8);\n          uVar8 = *param_2;\n          uVar9 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous; possibilities:\",5);\n          __fprintf_chk(stderr,1,uVar9,uVar8,param_9,uVar2);\n          pcVar13 = local_70;\n          __stream = stderr;\n          do {\n            if (*pcVar13 != '\\0') {\n              __fprintf_chk(__stream,1,\" \\'%s%s\\'\",param_9,*param_4);\n              __stream = stderr;\n            }\n            pcVar13 = pcVar13 + 1;\n            param_4 = param_4 + 4;\n          } while (local_70 + uVar14 + 1 != pcVar13);\n          fputc(10,__stream);\n          funlockfile(stderr);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n      }\n      if (bVar4) {\n        free(local_70);\n      }\n      sVar15 = strlen(pcVar13);\n      *(char **)(param_7 + 8) = pcVar13 + sVar15;\n      *param_7 = *param_7 + 1;\n      param_7[2] = 0;\n      return 0x3f;\n    }\n    if (ppcVar10 != (char **)0x0) {\n      uVar14 = (ulong)local_44;\nLAB_00408d10:\n      iVar6 = *param_7;\n      *(undefined8 *)(param_7 + 8) = 0;\n      iVar5 = iVar6 + 1;\n      *param_7 = iVar5;\n      if (*pcVar11 == '\\0') {\n        if (*(int *)(ppcVar10 + 1) == 1) {\n          if (param_1 <= iVar5) {\n            if (param_8 != 0) {\n              pcVar13 = *ppcVar10;\n              uVar2 = *param_2;\n              uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' requires an argument\\n\",5);\n              __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n            }\n            param_7[2] = *(int *)(ppcVar10 + 3);\n            return (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          *param_7 = iVar6 + 2;\n          *(undefined8 *)(param_7 + 4) = param_2[iVar5];\n        }\n      }\n      else {\n        if (*(int *)(ppcVar10 + 1) == 0) {\n          if (param_8 != 0) {\n            pcVar13 = *ppcVar10;\n            uVar2 = *param_2;\n            uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' doesn\\'t allow an argument\\n\",5);\n            __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          }\n          param_7[2] = *(int *)(ppcVar10 + 3);\n          return 0x3f;\n        }\n        *(char **)(param_7 + 4) = pcVar11 + 1;\n      }\n      if (param_5 != (undefined4 *)0x0) {\n        *param_5 = (int)uVar14;\n      }\n      if ((int *)ppcVar10[2] == (int *)0x0) {\n        return *(int *)(ppcVar10 + 3);\n      }\n      *(int *)ppcVar10[2] = *(int *)(ppcVar10 + 3);\n      return 0;\n    }\n  }\n  if (((param_6 != 0) && (*(char *)(param_2[*param_7] + 1) != '-')) &&\n     (pcVar11 = strchr(param_3,(int)cVar1), pcVar11 != (char *)0x0)) {\n    return -1;\n  }\n  if (param_8 != 0) {\n    uVar2 = *param_2;\n    uVar8 = dcgettext(0,\"%s: unrecognized option \\'%s%s\\'\\n\",5);\n    __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n  }\n  *(undefined8 *)(param_7 + 8) = 0;\n  *param_7 = *param_7 + 1;\n  param_7[2] = 0;\n  return 0x3f;\n}\n\n",
            "funcName": "FUN_00408af0"
        },
        {
            "funcStartAddr": "0x409110",
            "funcEndAddr": "0x409677",
            "decompiledFuncCode": "\nuint FUN_00409110(uint param_1,undefined8 *param_2,char *param_3,long param_4,undefined8 param_5,\n                 ulong param_6,uint *param_7,int param_8)\n\n{\n  undefined8 uVar1;\n  char cVar2;\n  uint uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  long lVar6;\n  uint uVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  uint uVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  undefined1 *puVar15;\n  \n  bVar14 = 0;\n  uVar3 = param_7[1];\n  if ((int)param_1 < 1) {\n    return 0xffffffff;\n  }\n  uVar11 = *param_7;\n  *(undefined8 *)(param_7 + 4) = 0;\n  if (uVar11 == 0) {\n    *param_7 = 1;\n    uVar11 = 1;\nLAB_0040915a:\n    param_7[0xc] = uVar11;\n    param_7[0xb] = uVar11;\n    *(undefined8 *)(param_7 + 8) = 0;\n    if (*param_3 == '-') {\n      param_7[10] = 2;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else if (*param_3 == '+') {\n      param_7[10] = 0;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else {\n      pbVar8 = (byte *)0x0;\n      if (param_8 == 0) {\n        pcVar4 = getenv(\"POSIXLY_CORRECT\");\n        param_6 = param_6 & 0xffffffff;\n        if (pcVar4 == (char *)0x0) {\n          param_7[10] = 1;\n          pbVar8 = *(byte **)(param_7 + 8);\n          goto LAB_0040925d;\n        }\n        pbVar8 = *(byte **)(param_7 + 8);\n      }\n      param_7[10] = 0;\n    }\nLAB_0040925d:\n    param_7[6] = 1;\n    cVar2 = *param_3;\nLAB_00409268:\n    if (cVar2 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 == (byte *)0x0) goto LAB_004091d8;\nLAB_0040927c:\n    if (*pbVar8 == 0) goto LAB_004091d8;\n  }\n  else {\n    if (param_7[6] == 0) goto LAB_0040915a;\n    cVar2 = *param_3;\n    pbVar8 = *(byte **)(param_7 + 8);\n    if ((cVar2 - 0x2bU & 0xfd) != 0) goto LAB_00409268;\n    pcVar4 = param_3 + 1;\n    param_3 = param_3 + 1;\n    if (*pcVar4 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 != (byte *)0x0) goto LAB_0040927c;\nLAB_004091d8:\n    uVar11 = *param_7;\n    if (param_7[0xc] != uVar11 && (int)uVar11 <= (int)param_7[0xc]) {\n      param_7[0xc] = uVar11;\n    }\n    if ((int)uVar11 < (int)param_7[0xb]) {\n      param_7[0xb] = uVar11;\n    }\n    if (param_7[10] == 1) {\n      uVar7 = param_7[0xc];\n      if (param_7[0xb] == uVar7) {\n        if (uVar11 != uVar7) {\n          param_7[0xb] = uVar11;\n          uVar7 = uVar11;\n        }\n      }\n      else if (uVar11 != uVar7) {\n        FUN_00408a10(param_2,param_7);\n        param_6 = param_6 & 0xffffffff;\n        uVar7 = *param_7;\n      }\n      uVar11 = uVar7;\n      uVar7 = uVar11;\n      if ((int)uVar11 < (int)param_1) {\n        lVar6 = (long)(int)uVar11;\n        do {\n          if ((*(char *)param_2[lVar6] == '-') && (((char *)param_2[lVar6])[1] != '\\0')) {\n            uVar11 = *param_7;\n            uVar7 = (uint)lVar6;\n            break;\n          }\n          uVar11 = (uint)lVar6 + 1;\n          lVar6 = lVar6 + 1;\n          *param_7 = uVar11;\n          uVar7 = uVar11;\n        } while ((int)lVar6 < (int)param_1);\n      }\n      param_7[0xc] = uVar7;\n    }\n    bVar12 = param_1 < uVar11;\n    bVar13 = param_1 == uVar11;\n    if (bVar13) {\n      param_1 = param_7[0xc];\n      uVar11 = param_7[0xb];\nLAB_00409346:\n      if (uVar11 != param_1) {\n        *param_7 = uVar11;\n      }\n      return 0xffffffff;\n    }\n    lVar6 = 3;\n    pbVar8 = (byte *)param_2[(int)uVar11];\n    pbVar9 = pbVar8;\n    pbVar10 = &DAT_0040e739;\n    do {\n      if (lVar6 == 0) break;\n      lVar6 = lVar6 + -1;\n      bVar12 = *pbVar9 < *pbVar10;\n      bVar13 = *pbVar9 == *pbVar10;\n      pbVar9 = pbVar9 + (ulong)bVar14 * -2 + 1;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n    if ((!bVar12 && !bVar13) == bVar12) {\n      uVar11 = uVar11 + 1;\n      *param_7 = uVar11;\n      if (param_7[0xb] == param_7[0xc]) {\n        param_7[0xb] = uVar11;\n      }\n      else {\n        bVar12 = uVar11 != param_7[0xc];\n        uVar11 = param_7[0xb];\n        if (bVar12) {\n          FUN_00408a10(param_2,param_7);\n          uVar11 = param_7[0xb];\n        }\n      }\n      param_7[0xc] = param_1;\n      *param_7 = param_1;\n      goto LAB_00409346;\n    }\n    if ((*pbVar8 != 0x2d) || (bVar14 = pbVar8[1], bVar14 == 0)) {\n      if (param_7[10] == 0) {\n        return 0xffffffff;\n      }\n      *(byte **)(param_7 + 4) = pbVar8;\n      *param_7 = uVar11 + 1;\n      return 1;\n    }\n    if (param_4 != 0) {\n      if (bVar14 == 0x2d) {\n        *(byte **)(param_7 + 8) = pbVar8 + 2;\n        puVar15 = &DAT_0040e739;\n        goto LAB_004094a5;\n      }\n      if ((int)param_6 != 0) {\n        if (pbVar8[2] == 0) {\n          pcVar4 = strchr(param_3,(int)(char)bVar14);\n          param_6 = param_6 & 0xffffffff;\n          if (pcVar4 != (char *)0x0) goto LAB_00409450;\n        }\n        *(byte **)(param_7 + 8) = pbVar8 + 1;\n        uVar11 = FUN_00408af0(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,\n                              &DAT_0040e73a);\n        if (uVar11 != 0xffffffff) {\n          return uVar11;\n        }\n        pbVar8 = (byte *)param_2[(int)*param_7];\n      }\n    }\nLAB_00409450:\n    pbVar8 = pbVar8 + 1;\n  }\n  pbVar9 = pbVar8 + 1;\n  *(byte **)(param_7 + 8) = pbVar9;\n  bVar14 = *pbVar8;\n  uVar11 = (uint)(char)bVar14;\n  pcVar4 = strchr(param_3,uVar11);\n  if (pbVar8[1] == 0) {\n    *param_7 = *param_7 + 1;\n  }\n  if (((byte)(bVar14 - 0x3a) < 2) || (pcVar4 == (char *)0x0)) {\n    if (uVar3 != 0) {\n      uVar1 = *param_2;\n      uVar5 = dcgettext(0,\"%s: invalid option -- \\'%c\\'\\n\",5);\n      __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n    }\n    param_7[2] = uVar11;\n    return 0x3f;\n  }\n  if (((*pcVar4 != 'W') || (param_4 == 0)) || (pcVar4[1] != ';')) {\n    if (pcVar4[1] == ':') {\n      if (pcVar4[2] == ':') {\n        if (pbVar8[1] == 0) {\n          *(undefined8 *)(param_7 + 4) = 0;\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = *param_7 + 1;\n        }\n      }\n      else {\n        uVar7 = *param_7;\n        if (pbVar8[1] == 0) {\n          if (param_1 == uVar7) {\n            if (uVar3 != 0) {\n              uVar1 = *param_2;\n              uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n              __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n            }\n            param_7[2] = uVar11;\n            uVar11 = (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          else {\n            uVar1 = param_2[(int)uVar7];\n            *param_7 = uVar7 + 1;\n            *(undefined8 *)(param_7 + 4) = uVar1;\n          }\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = uVar7 + 1;\n        }\n      }\n      *(undefined8 *)(param_7 + 8) = 0;\n      return uVar11;\n    }\n    return uVar11;\n  }\n  if (pbVar8[1] == 0) {\n    if (*param_7 == param_1) {\n      if (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n        __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n      }\n      param_7[2] = uVar11;\n      return (uint)(*param_3 != ':') * 5 + 0x3a;\n    }\n    pbVar9 = (byte *)param_2[(int)*param_7];\n  }\n  *(byte **)(param_7 + 8) = pbVar9;\n  param_6 = 0;\n  *(undefined8 *)(param_7 + 4) = 0;\n  puVar15 = &DAT_0040e758;\nLAB_004094a5:\n  uVar3 = FUN_00408af0(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,puVar15);\n  return uVar3;\n}\n\n",
            "funcName": "FUN_00409110"
        },
        {
            "funcStartAddr": "0x4096e0",
            "funcEndAddr": "0x409736",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_004096e0(void)\n\n{\n  DAT_006114e0 = DAT_0061131c;\n  _DAT_006114e4 = DAT_00611318;\n  FUN_00409110();\n  DAT_0061131c = DAT_006114e0;\n  DAT_00611530 = DAT_006114f0;\n  _DAT_00611314 = DAT_006114e8;\n  return;\n}\n\n",
            "funcName": "FUN_004096e0"
        },
        {
            "funcStartAddr": "0x409740",
            "funcEndAddr": "0x409758",
            "decompiledFuncCode": "\nvoid FUN_00409740(void)\n\n{\n  FUN_004096e0();\n  return;\n}\n\n",
            "funcName": "FUN_00409740"
        },
        {
            "funcStartAddr": "0x409760",
            "funcEndAddr": "0x409773",
            "decompiledFuncCode": "\nvoid FUN_00409760(void)\n\n{\n  FUN_004096e0();\n  return;\n}\n\n",
            "funcName": "FUN_00409760"
        },
        {
            "funcStartAddr": "0x409780",
            "funcEndAddr": "0x409795",
            "decompiledFuncCode": "\nvoid FUN_00409780(void)\n\n{\n  FUN_00409110();\n  return;\n}\n\n",
            "funcName": "FUN_00409780"
        },
        {
            "funcStartAddr": "0x4097a0",
            "funcEndAddr": "0x4097b6",
            "decompiledFuncCode": "\nvoid FUN_004097a0(void)\n\n{\n  FUN_004096e0();\n  return;\n}\n\n",
            "funcName": "FUN_004097a0"
        },
        {
            "funcStartAddr": "0x4097c0",
            "funcEndAddr": "0x4097d8",
            "decompiledFuncCode": "\nvoid FUN_004097c0(void)\n\n{\n  FUN_00409110();\n  return;\n}\n\n",
            "funcName": "FUN_004097c0"
        },
        {
            "funcStartAddr": "0x4097e0",
            "funcEndAddr": "0x40984f",
            "decompiledFuncCode": "\nsize_t FUN_004097e0(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  wchar_t local_1c;\n  \n  if (param_2 == (byte *)0x0) {\n    param_3 = 1;\n    param_2 = (byte *)0x40e757;\n  }\n  else {\n    if (param_3 == 0) {\n      return 0xfffffffffffffffe;\n    }\n    if (param_1 != (wchar_t *)0x0) goto LAB_00409804;\n  }\n  param_1 = &local_1c;\nLAB_00409804:\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (cVar1 = FUN_00409ad0(0), cVar1 == '\\0')) {\n    sVar2 = 1;\n    *param_1 = (uint)*param_2;\n  }\n  return sVar2;\n}\n\n",
            "funcName": "FUN_004097e0"
        },
        {
            "funcStartAddr": "0x409860",
            "funcEndAddr": "0x409972",
            "decompiledFuncCode": "\nundefined * FUN_00409860(undefined *param_1,undefined4 param_2,char *param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  size_t sVar3;\n  char acStack_48 [40];\n  \n  if (*param_3 == '\\0') {\n    *param_1 = 0;\n    return param_1;\n  }\n  if (DAT_00611518 == 0) {\n    iVar1 = open(\"/proc/self/fd\",0x10900);\n    if (iVar1 < 0) {\n      DAT_00611518 = 0xffffffff;\n      return (undefined *)0x0;\n    }\n    __sprintf_chk(acStack_48,1,0x20,\"/proc/self/fd/%d/../fd\",iVar1);\n    iVar2 = access(acStack_48,0);\n    DAT_00611518 = (-(uint)(iVar2 == 0) & 2) - 1;\n    close(iVar1);\n  }\n  if (DAT_00611518 < 0) {\nLAB_004098ed:\n    param_1 = (undefined *)0x0;\n  }\n  else {\n    sVar3 = strlen(param_3);\n    if (0xfc0 < sVar3 + 0x1b) {\n      param_1 = (undefined *)malloc(sVar3 + 0x1b);\n      if (param_1 == (undefined *)0x0) goto LAB_004098ed;\n    }\n    iVar1 = __sprintf_chk(param_1,1,0xffffffffffffffff,\"/proc/self/fd/%d/\",param_2);\n    strcpy(param_1 + iVar1,param_3);\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_00409860"
        },
        {
            "funcStartAddr": "0x409990",
            "funcEndAddr": "0x4099ec",
            "decompiledFuncCode": "\nulong FUN_00409990(uint *param_1)\n\n{\n  uint uVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  uVar1 = *param_1;\n  uVar3 = FUN_0040b830(param_1);\n  if ((uVar1 & 0x20) == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_00409990"
        },
        {
            "funcStartAddr": "0x4099f0",
            "funcEndAddr": "0x409a00",
            "decompiledFuncCode": "\nvoid FUN_004099f0(long param_1)\n\n{\n  *(undefined8 *)(param_1 + 0x10) = 0;\n  *(undefined4 *)(param_1 + 0x18) = 0x95f616;\n  return;\n}\n\n",
            "funcName": "FUN_004099f0"
        },
        {
            "funcStartAddr": "0x409a00",
            "funcEndAddr": "0x409a74",
            "decompiledFuncCode": "\nundefined8 FUN_00409a00(long *param_1,long *param_2)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  long lVar3;\n  long lVar4;\n  \n  if (*(int *)(param_1 + 3) != 0x95f616) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"state->magic == 9827862\",\"lib/cycle-check.c\",0x3c,\"cycle_check\");\n  }\n  uVar2 = param_1[2];\n  lVar3 = param_2[1];\n  if (uVar2 == 0) {\n    param_1[2] = 1;\n  }\n  else {\n    if ((*param_1 == lVar3) && (*param_2 == param_1[1])) {\n      return 1;\n    }\n    uVar1 = uVar2 + 1;\n    param_1[2] = uVar1;\n    if ((uVar2 & uVar1) != 0) {\n      return 0;\n    }\n    if (uVar1 == 0) {\n      return 1;\n    }\n  }\n  lVar4 = *param_2;\n  *param_1 = lVar3;\n  param_1[1] = lVar4;\n  return 0;\n}\n\n",
            "funcName": "FUN_00409a00"
        },
        {
            "funcStartAddr": "0x409a80",
            "funcEndAddr": "0x409ac6",
            "decompiledFuncCode": "\nvoid FUN_00409a80(char *param_1,uint param_2,ulong param_3)\n\n{\n  int iVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  if ((param_2 & 0x40) != 0) {\n    uVar2 = param_3 & 0xffffffff;\n  }\n  iVar1 = open(param_1,param_2,uVar2);\n  FUN_0040b4f0(iVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00409a80"
        },
        {
            "funcStartAddr": "0x409ad0",
            "funcEndAddr": "0x409b26",
            "decompiledFuncCode": "\nbool FUN_00409ad0(int param_1)\n\n{\n  bool bVar1;\n  byte *pbVar2;\n  long lVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  bool bVar8;\n  byte bVar9;\n  \n  bVar9 = 0;\n  pbVar2 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar1 = true;\n  bVar6 = false;\n  bVar8 = pbVar2 == (byte *)0x0;\n  if (!bVar8) {\n    lVar3 = 2;\n    pbVar4 = pbVar2;\n    pbVar5 = &DAT_0040e7cc;\n    do {\n      if (lVar3 == 0) break;\n      lVar3 = lVar3 + -1;\n      bVar6 = *pbVar4 < *pbVar5;\n      bVar8 = *pbVar4 == *pbVar5;\n      pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      pbVar5 = pbVar5 + (ulong)bVar9 * -2 + 1;\n    } while (bVar8);\n    bVar1 = false;\n    bVar7 = false;\n    bVar6 = (!bVar6 && !bVar8) == bVar6;\n    if (!bVar6) {\n      lVar3 = 6;\n      pbVar4 = (byte *)\"POSIX\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar2 < *pbVar4;\n        bVar6 = *pbVar2 == *pbVar4;\n        pbVar2 = pbVar2 + (ulong)bVar9 * -2 + 1;\n        pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      } while (bVar6);\n      return (!bVar7 && !bVar6) != bVar7;\n    }\n  }\n  return bVar1;\n}\n\n",
            "funcName": "FUN_00409ad0"
        },
        {
            "funcStartAddr": "0x409b30",
            "funcEndAddr": "0x409bc1",
            "decompiledFuncCode": "\nulong FUN_00409b30(ulong param_1)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long lVar5;\n  \n  uVar3 = 10;\n  if (9 < param_1) {\n    uVar3 = param_1;\n  }\n  uVar3 = uVar3 | 1;\n  do {\n    if (uVar3 == 0xffffffffffffffff) {\n      return 0xffffffffffffffff;\n    }\n    uVar1 = uVar3 % 3;\n    if (uVar3 < 10) {\nLAB_00409bb0:\n      if (uVar1 != 0) {\n        return uVar3;\n      }\n    }\n    else if (uVar1 != 0) {\n      lVar5 = 0x10;\n      uVar4 = 9;\n      uVar2 = 3;\n      do {\n        uVar2 = uVar2 + 2;\n        uVar4 = uVar4 + lVar5;\n        uVar1 = uVar3 % uVar2;\n        if (uVar3 <= uVar4) goto LAB_00409bb0;\n        lVar5 = lVar5 + 8;\n      } while (uVar1 != 0);\n    }\n    uVar3 = uVar3 + 2;\n  } while( true );\n}\n\n",
            "funcName": "FUN_00409b30"
        },
        {
            "funcStartAddr": "0x409bd0",
            "funcEndAddr": "0x409be0",
            "decompiledFuncCode": "\nulong FUN_00409bd0(ulong param_1,ulong param_2)\n\n{\n  return (param_1 >> 3 | param_1 << 0x3d) % param_2;\n}\n\n",
            "funcName": "FUN_00409bd0"
        },
        {
            "funcStartAddr": "0x409be0",
            "funcEndAddr": "0x409be7",
            "decompiledFuncCode": "\nbool FUN_00409be0(long param_1,long param_2)\n\n{\n  return param_1 == param_2;\n}\n\n",
            "funcName": "FUN_00409be0"
        },
        {
            "funcStartAddr": "0x409bf0",
            "funcEndAddr": "0x409c11",
            "decompiledFuncCode": "\nlong FUN_00409bf0(long *param_1,undefined8 param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = (*(code *)param_1[6])(param_2,param_1[2]);\n  if (uVar1 <= (ulong)param_1[2] && param_1[2] != uVar1) {\n    return uVar1 * 0x10 + *param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00409bf0"
        },
        {
            "funcStartAddr": "0x409c20",
            "funcEndAddr": "0x409d25",
            "decompiledFuncCode": "\nlong FUN_00409c20(long param_1,long param_2,long **param_3,char param_4)\n\n{\n  undefined8 *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  char cVar5;\n  long *plVar6;\n  long *plVar7;\n  long lVar8;\n  \n  plVar6 = (long *)FUN_00409bf0();\n  *param_3 = plVar6;\n  lVar8 = *plVar6;\n  if (lVar8 == 0) {\n    return 0;\n  }\n  if (lVar8 != param_2) {\n    cVar5 = (**(code **)(param_1 + 0x38))(param_2);\n    if (cVar5 == '\\0') {\n      plVar7 = (long *)plVar6[1];\n      if (plVar7 == (long *)0x0) {\n        return 0;\n      }\n      lVar8 = *plVar7;\n      do {\n        if (param_2 == lVar8) {\nLAB_00409cac:\n          if (param_4 == '\\0') {\n            return lVar8;\n          }\n          plVar6[1] = plVar7[1];\n          *plVar7 = 0;\n          plVar7[1] = *(long *)(param_1 + 0x48);\n          *(long **)(param_1 + 0x48) = plVar7;\n          return lVar8;\n        }\n        cVar5 = (**(code **)(param_1 + 0x38))(param_2);\n        if (cVar5 != '\\0') {\n          plVar7 = (long *)plVar6[1];\n          lVar8 = *plVar7;\n          goto LAB_00409cac;\n        }\n        plVar6 = (long *)plVar6[1];\n        plVar7 = (long *)plVar6[1];\n        if (plVar7 == (long *)0x0) {\n          return 0;\n        }\n        lVar8 = *plVar7;\n      } while( true );\n    }\n    lVar8 = *plVar6;\n  }\n  if (param_4 != '\\0') {\n    puVar1 = (undefined8 *)plVar6[1];\n    if (puVar1 != (undefined8 *)0x0) {\n      uVar2 = *(undefined4 *)((long)puVar1 + 4);\n      uVar3 = *(undefined4 *)(puVar1 + 1);\n      uVar4 = *(undefined4 *)((long)puVar1 + 0xc);\n      *(undefined4 *)plVar6 = *(undefined4 *)puVar1;\n      *(undefined4 *)((long)plVar6 + 4) = uVar2;\n      *(undefined4 *)(plVar6 + 1) = uVar3;\n      *(undefined4 *)((long)plVar6 + 0xc) = uVar4;\n      *puVar1 = 0;\n      puVar1[1] = *(undefined8 *)(param_1 + 0x48);\n      *(undefined8 **)(param_1 + 0x48) = puVar1;\n      return lVar8;\n    }\n    *plVar6 = 0;\n  }\n  return lVar8;\n}\n\n",
            "funcName": "FUN_00409c20"
        },
        {
            "funcStartAddr": "0x409d40",
            "funcEndAddr": "0x409dba",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_00409d40(float **param_1)\n\n{\n  float fVar1;\n  float *pfVar2;\n  float fVar3;\n  \n  pfVar2 = *param_1;\n  if (pfVar2 == (float *)&DAT_0040e850) {\n    return 1;\n  }\n  fVar1 = pfVar2[2];\n  if ((((_DAT_0040e864 < fVar1) && (fVar1 < DAT_0040e868)) && (_DAT_0040e86c < pfVar2[3])) &&\n     (_DAT_0040e870 <= *pfVar2)) {\n    fVar3 = *pfVar2 + _DAT_0040e864;\n    if (((fVar3 < pfVar2[1]) && (pfVar2[1] <= DAT_0040e874)) && (fVar3 < fVar1)) {\n      return 1;\n    }\n  }\n  *param_1 = (float *)&DAT_0040e850;\n  return 0;\n}\n\n",
            "funcName": "FUN_00409d40"
        },
        {
            "funcStartAddr": "0x409dc0",
            "funcEndAddr": "0x409efa",
            "decompiledFuncCode": "\nundefined8 FUN_00409dc0(long param_1,long **param_2,char param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  long lVar6;\n  \n  plVar5 = *param_2;\n  if (param_2[1] <= plVar5) {\n    return 1;\n  }\n  do {\n    while (lVar6 = *plVar5, lVar6 == 0) {\nLAB_00409de8:\n      plVar5 = plVar5 + 2;\n      if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n        return 1;\n      }\n    }\n    plVar3 = (long *)plVar5[1];\n    if ((long *)plVar5[1] != (long *)0x0) {\n      do {\n        while( true ) {\n          lVar6 = *plVar3;\n          plVar2 = (long *)FUN_00409bf0(param_1,lVar6);\n          plVar4 = (long *)plVar3[1];\n          if (*plVar2 != 0) break;\n          *plVar2 = lVar6;\n          *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n          *plVar3 = 0;\n          plVar3[1] = *(long *)(param_1 + 0x48);\n          *(long **)(param_1 + 0x48) = plVar3;\n          plVar3 = plVar4;\n          if (plVar4 == (long *)0x0) goto LAB_00409e5f;\n        }\n        plVar3[1] = plVar2[1];\n        plVar2[1] = (long)plVar3;\n        plVar3 = plVar4;\n      } while (plVar4 != (long *)0x0);\nLAB_00409e5f:\n      lVar6 = *plVar5;\n    }\n    plVar5[1] = 0;\n    if (param_3 != '\\0') goto LAB_00409de8;\n    plVar3 = (long *)FUN_00409bf0(param_1,lVar6);\n    if (*plVar3 == 0) {\n      *plVar3 = lVar6;\n      *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n    }\n    else {\n      plVar4 = *(long **)(param_1 + 0x48);\n      if (plVar4 == (long *)0x0) {\n        plVar4 = (long *)malloc(0x10);\n        if (plVar4 == (long *)0x0) {\n          return 0;\n        }\n      }\n      else {\n        *(long *)(param_1 + 0x48) = plVar4[1];\n      }\n      lVar1 = plVar3[1];\n      *plVar4 = lVar6;\n      plVar4[1] = lVar1;\n      plVar3[1] = (long)plVar4;\n    }\n    *plVar5 = 0;\n    plVar5 = plVar5 + 2;\n    param_2[3] = (long *)((long)param_2[3] + -1);\n    if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n      return 1;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_00409dc0"
        },
        {
            "funcStartAddr": "0x409f10",
            "funcEndAddr": "0x409f15",
            "decompiledFuncCode": "\nundefined8 FUN_00409f10(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x10);\n}\n\n",
            "funcName": "FUN_00409f10"
        },
        {
            "funcStartAddr": "0x409f20",
            "funcEndAddr": "0x409f25",
            "decompiledFuncCode": "\nundefined8 FUN_00409f20(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x18);\n}\n\n",
            "funcName": "FUN_00409f20"
        },
        {
            "funcStartAddr": "0x409f30",
            "funcEndAddr": "0x409f35",
            "decompiledFuncCode": "\nundefined8 FUN_00409f30(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x20);\n}\n\n",
            "funcName": "FUN_00409f30"
        },
        {
            "funcStartAddr": "0x409f40",
            "funcEndAddr": "0x409f8f",
            "decompiledFuncCode": "\nvoid FUN_00409f40(long **param_1)\n\n{\n  long *plVar1;\n  long lVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  plVar1 = param_1[1];\n  uVar3 = 0;\n  if (plVar1 <= plVar5) {\n    return;\n  }\n  do {\n    while (*plVar5 == 0) {\n      plVar5 = plVar5 + 2;\n      if (plVar1 <= plVar5) {\n        return;\n      }\n    }\n    uVar4 = 1;\n    for (lVar2 = plVar5[1]; lVar2 != 0; lVar2 = *(long *)(lVar2 + 8)) {\n      uVar4 = uVar4 + 1;\n    }\n    if (uVar3 < uVar4) {\n      uVar3 = uVar4;\n    }\n    plVar5 = plVar5 + 2;\n  } while (plVar5 < plVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00409f40"
        },
        {
            "funcStartAddr": "0x409f90",
            "funcEndAddr": "0x409ff2",
            "decompiledFuncCode": "\nbool FUN_00409f90(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  \n  plVar2 = *param_1;\n  plVar3 = (long *)0x0;\n  plVar4 = (long *)0x0;\n  do {\n    while( true ) {\n      if (param_1[1] <= plVar2) {\n        if (param_1[3] != plVar4) {\n          return false;\n        }\n        return param_1[4] == plVar3;\n      }\n      if (*plVar2 != 0) break;\nLAB_00409fa8:\n      plVar2 = plVar2 + 2;\n    }\n    lVar1 = plVar2[1];\n    plVar4 = (long *)((long)plVar4 + 1);\n    plVar3 = (long *)((long)plVar3 + 1);\n    if (lVar1 == 0) goto LAB_00409fa8;\n    do {\n      lVar1 = *(long *)(lVar1 + 8);\n      plVar3 = (long *)((long)plVar3 + 1);\n    } while (lVar1 != 0);\n    plVar2 = plVar2 + 2;\n  } while( true );\n}\n\n",
            "funcName": "FUN_00409f90"
        },
        {
            "funcStartAddr": "0x40a000",
            "funcEndAddr": "0x40a13c",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0040a000(long **param_1,undefined8 param_2)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long lVar3;\n  ulong uVar4;\n  ulong uVar5;\n  long *plVar6;\n  double dVar7;\n  double dVar8;\n  \n  uVar5 = 0;\n  plVar1 = param_1[2];\n  plVar2 = param_1[3];\n  for (plVar6 = *param_1; plVar6 < param_1[1]; plVar6 = plVar6 + 2) {\n    while (*plVar6 != 0) {\n      uVar4 = 1;\n      for (lVar3 = plVar6[1]; lVar3 != 0; lVar3 = *(long *)(lVar3 + 8)) {\n        uVar4 = uVar4 + 1;\n      }\n      if (uVar5 < uVar4) {\n        uVar5 = uVar4;\n      }\n      plVar6 = plVar6 + 2;\n      if (param_1[1] <= plVar6) goto LAB_0040a06d;\n    }\n  }\nLAB_0040a06d:\n  __fprintf_chk(param_2,1,\"# entries:         %lu\\n\",param_1[4]);\n  __fprintf_chk(param_2,1,\"# buckets:         %lu\\n\",plVar1);\n  if ((long)plVar2 < 0) {\n    dVar7 = (double)((ulong)plVar2 >> 1 | (ulong)((uint)plVar2 & 1));\n    dVar7 = dVar7 + dVar7;\n  }\n  else {\n    dVar7 = (double)(long)plVar2;\n  }\n  if ((long)plVar1 < 0) {\n    dVar8 = (double)((ulong)plVar1 >> 1 | (ulong)((uint)plVar1 & 1));\n    dVar8 = dVar8 + dVar8;\n  }\n  else {\n    dVar8 = (double)(long)plVar1;\n  }\n  __fprintf_chk((dVar7 * _DAT_0040e888) / dVar8,param_2,1,\"# buckets used:    %lu (%.2f%%)\\n\",plVar2\n               );\n  __fprintf_chk(param_2,1,\"max bucket length: %lu\\n\",uVar5);\n  return;\n}\n\n",
            "funcName": "FUN_0040a000"
        },
        {
            "funcStartAddr": "0x40a150",
            "funcEndAddr": "0x40a19b",
            "decompiledFuncCode": "\nlong FUN_0040a150(long param_1,long param_2)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  \n  plVar2 = (long *)FUN_00409bf0();\n  lVar3 = *plVar2;\n  if (lVar3 == 0) {\n    return 0;\n  }\n  while( true ) {\n    if (lVar3 == param_2) {\n      return param_2;\n    }\n    cVar1 = (**(code **)(param_1 + 0x38))(param_2);\n    if (cVar1 != '\\0') break;\n    plVar2 = (long *)plVar2[1];\n    if (plVar2 == (long *)0x0) {\n      return 0;\n    }\n    lVar3 = *plVar2;\n  }\n  return *plVar2;\n}\n\n",
            "funcName": "FUN_0040a150"
        },
        {
            "funcStartAddr": "0x40a1b0",
            "funcEndAddr": "0x40a1ea",
            "decompiledFuncCode": "\nlong FUN_0040a1b0(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  \n  if (param_1[4] == (long *)0x0) {\n    return 0;\n  }\n  plVar2 = *param_1;\n  if (param_1[1] <= plVar2) {\n    lVar1 = FUN_004020c2();\n    return lVar1;\n  }\n  do {\n    if (*plVar2 != 0) {\n      return *plVar2;\n    }\n    plVar2 = plVar2 + 2;\n  } while (plVar2 < param_1[1]);\n  lVar1 = FUN_004020c2();\n  return lVar1;\n}\n\n",
            "funcName": "FUN_0040a1b0"
        },
        {
            "funcStartAddr": "0x40a200",
            "funcEndAddr": "0x40a259",
            "decompiledFuncCode": "\nlong FUN_0040a200(long param_1,long param_2)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  \n  plVar2 = (long *)FUN_00409bf0();\n  plVar3 = plVar2;\n  do {\n    lVar1 = *plVar3;\n    plVar3 = (long *)plVar3[1];\n    if (lVar1 == param_2) {\n      if (plVar3 != (long *)0x0) {\n        return *plVar3;\n      }\n      break;\n    }\n  } while (plVar3 != (long *)0x0);\n  do {\n    plVar2 = plVar2 + 2;\n    if (*(long **)(param_1 + 8) <= plVar2) {\n      return 0;\n    }\n  } while (*plVar2 == 0);\n  return *plVar2;\n}\n\n",
            "funcName": "FUN_0040a200"
        },
        {
            "funcStartAddr": "0x40a270",
            "funcEndAddr": "0x40a2d0",
            "decompiledFuncCode": "\nulong FUN_0040a270(long **param_1,long param_2,ulong param_3)\n\n{\n  undefined8 *puVar1;\n  ulong uVar2;\n  long *plVar3;\n  \n  plVar3 = *param_1;\n  if (param_1[1] < plVar3 || param_1[1] == plVar3) {\n    return 0;\n  }\n  uVar2 = 0;\n  do {\n    if (*plVar3 != 0) {\n      if (param_3 <= uVar2) {\n        return uVar2;\n      }\n      *(long *)(param_2 + uVar2 * 8) = *plVar3;\n      uVar2 = uVar2 + 1;\n      for (puVar1 = (undefined8 *)plVar3[1]; puVar1 != (undefined8 *)0x0;\n          puVar1 = (undefined8 *)puVar1[1]) {\n        if (param_3 == uVar2) {\n          return param_3;\n        }\n        uVar2 = uVar2 + 1;\n        *(undefined8 *)(param_2 + -8 + uVar2 * 8) = *puVar1;\n      }\n    }\n    plVar3 = plVar3 + 2;\n  } while (plVar3 <= param_1[1] && param_1[1] != plVar3);\n  return uVar2;\n}\n\n",
            "funcName": "FUN_0040a270"
        },
        {
            "funcStartAddr": "0x40a2e0",
            "funcEndAddr": "0x40a34b",
            "decompiledFuncCode": "\nlong FUN_0040a2e0(long **param_1,code *param_2,undefined8 param_3)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  long lVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (param_1[1] < plVar5 || param_1[1] == plVar5) {\n    lVar3 = 0;\n  }\n  else {\n    lVar3 = 0;\n    do {\n      lVar4 = *plVar5;\n      plVar2 = plVar5;\n      if (lVar4 != 0) {\n        while( true ) {\n          cVar1 = (*param_2)(lVar4,param_3);\n          if (cVar1 == '\\0') {\n            return lVar3;\n          }\n          plVar2 = (long *)plVar2[1];\n          lVar3 = lVar3 + 1;\n          if (plVar2 == (long *)0x0) break;\n          lVar4 = *plVar2;\n        }\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\n  return lVar3;\n}\n\n",
            "funcName": "FUN_0040a2e0"
        },
        {
            "funcStartAddr": "0x40a360",
            "funcEndAddr": "0x40a391",
            "decompiledFuncCode": "\nulong FUN_0040a360(byte *param_1,ulong param_2)\n\n{\n  byte bVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  bVar1 = *param_1;\n  while (bVar1 != 0) {\n    param_1 = param_1 + 1;\n    uVar2 = (uVar2 * 0x1f + (ulong)bVar1) % param_2;\n    bVar1 = *param_1;\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_0040a360"
        },
        {
            "funcStartAddr": "0x40a3a0",
            "funcEndAddr": "0x40a3c0",
            "decompiledFuncCode": "\nvoid FUN_0040a3a0(undefined8 *param_1)\n\n{\n  *(undefined *)(param_1 + 2) = 0;\n  *param_1 = 0x3f80000000000000;\n  param_1[1] = 0x3fb4fdf43f4ccccd;\n  return;\n}\n\n",
            "funcName": "FUN_0040a3a0"
        },
        {
            "funcStartAddr": "0x40a3c0",
            "funcEndAddr": "0x40a540",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid ** FUN_0040a3c0(ulong param_1,void *param_2,code *param_3,code *param_4,void *param_5)\n\n{\n  char cVar1;\n  void **__ptr;\n  void *__nmemb;\n  void *pvVar2;\n  float fVar3;\n  float fVar4;\n  \n  if (param_3 == (code *)0x0) {\n    param_3 = FUN_00409bd0;\n  }\n  if (param_4 == (code *)0x0) {\n    param_4 = FUN_00409be0;\n  }\n  __ptr = (void **)malloc(0x50);\n  if (__ptr == (void **)0x0) {\n    return (void **)0x0;\n  }\n  if (param_2 == (void *)0x0) {\n    __ptr[5] = &DAT_0040e850;\n    cVar1 = FUN_00409d40(__ptr + 5);\n    if (cVar1 == '\\0') goto LAB_0040a4a0;\n    fVar4 = DAT_0040e878;\n    if ((long)param_1 < 0) goto LAB_0040a523;\nLAB_0040a4de:\n    fVar3 = (float)param_1;\nLAB_0040a4e7:\n    fVar3 = fVar3 / fVar4;\n    if (_DAT_0040e87c <= fVar3) goto LAB_0040a4a0;\n    if (fVar3 < _DAT_0040e880) {\n      param_1 = (ulong)fVar3;\n    }\n    else {\n      param_1 = (long)(fVar3 - _DAT_0040e880) ^ 0x8000000000000000;\n    }\n  }\n  else {\n    __ptr[5] = param_2;\n    cVar1 = FUN_00409d40(__ptr + 5);\n    if (cVar1 == '\\0') goto LAB_0040a4a0;\n    if (*(char *)((long)param_2 + 0x10) == '\\0') {\n      fVar4 = *(float *)((long)param_2 + 8);\n      if (-1 < (long)param_1) goto LAB_0040a4de;\nLAB_0040a523:\n      fVar3 = (float)(param_1 >> 1 | (ulong)((uint)param_1 & 1));\n      fVar3 = fVar3 + fVar3;\n      goto LAB_0040a4e7;\n    }\n  }\n  __nmemb = (void *)FUN_00409b30(param_1);\n  if (((((ulong)__nmemb >> 0x3c & 1) == 0) && ((ulong)__nmemb >> 0x3d == 0)) &&\n     (__ptr[2] = __nmemb, __nmemb != (void *)0x0)) {\n    pvVar2 = calloc((size_t)__nmemb,0x10);\n    *__ptr = pvVar2;\n    if (pvVar2 != (void *)0x0) {\n      __ptr[3] = (void *)0x0;\n      __ptr[4] = (void *)0x0;\n      __ptr[1] = (void *)((long)__nmemb * 0x10 + (long)pvVar2);\n      __ptr[6] = param_3;\n      __ptr[7] = param_4;\n      __ptr[8] = param_5;\n      __ptr[9] = (void *)0x0;\n      return __ptr;\n    }\n  }\nLAB_0040a4a0:\n  free(__ptr);\n  return (void **)0x0;\n}\n\n",
            "funcName": "FUN_0040a3c0"
        },
        {
            "funcStartAddr": "0x40a550",
            "funcEndAddr": "0x40a5f5",
            "decompiledFuncCode": "\nvoid FUN_0040a550(long **param_1)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (*param_1 < param_1[1]) {\n    do {\n      while (*plVar5 != 0) {\n        plVar4 = param_1[8];\n        plVar3 = (long *)plVar5[1];\n        while (plVar3 != (long *)0x0) {\n          if (plVar4 != (long *)0x0) {\n            (*(code *)plVar4)(*plVar3);\n            plVar4 = param_1[8];\n          }\n          plVar1 = (long *)plVar3[1];\n          plVar2 = param_1[9];\n          *plVar3 = 0;\n          plVar3[1] = (long)plVar2;\n          param_1[9] = plVar3;\n          plVar3 = plVar1;\n        }\n        if (plVar4 != (long *)0x0) {\n          (*(code *)plVar4)(*plVar5);\n        }\n        *plVar5 = 0;\n        plVar4 = plVar5 + 2;\n        plVar5[1] = 0;\n        plVar5 = plVar4;\n        if (param_1[1] < plVar4 || param_1[1] == plVar4) goto LAB_0040a5e3;\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\nLAB_0040a5e3:\n  param_1[3] = (long *)0x0;\n  param_1[4] = (long *)0x0;\n  return;\n}\n\n",
            "funcName": "FUN_0040a550"
        },
        {
            "funcStartAddr": "0x40a600",
            "funcEndAddr": "0x40a6d0",
            "decompiledFuncCode": "\nvoid FUN_0040a600(long **param_1)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long lVar5;\n  \n  plVar4 = *param_1;\n  plVar2 = param_1[1];\n  if ((param_1[8] != (long *)0x0) && (param_1[4] != (long *)0x0)) {\n    if (plVar2 <= plVar4) goto LAB_0040a69c;\n    do {\n      while (lVar5 = *plVar4, plVar3 = plVar4, lVar5 == 0) {\n        plVar4 = plVar4 + 2;\n        if (plVar2 <= plVar4) goto LAB_0040a65f;\n      }\n      while( true ) {\n        (*(code *)param_1[8])(lVar5);\n        plVar3 = (long *)plVar3[1];\n        if (plVar3 == (long *)0x0) break;\n        lVar5 = *plVar3;\n      }\n      plVar2 = param_1[1];\n      plVar4 = plVar4 + 2;\n    } while (plVar4 < plVar2);\nLAB_0040a65f:\n    plVar4 = *param_1;\n  }\n  if (plVar4 < plVar2) {\n    do {\n      __ptr = (void *)plVar4[1];\n      while (__ptr != (void *)0x0) {\n        pvVar1 = *(void **)((long)__ptr + 8);\n        free(__ptr);\n        __ptr = pvVar1;\n      }\n      plVar4 = plVar4 + 2;\n    } while (plVar4 <= param_1[1] && param_1[1] != plVar4);\n  }\nLAB_0040a69c:\n  plVar4 = param_1[9];\n  while (plVar4 != (long *)0x0) {\n    plVar2 = (long *)plVar4[1];\n    free(plVar4);\n    plVar4 = plVar2;\n  }\n  free(*param_1);\n  free(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_0040a600"
        },
        {
            "funcStartAddr": "0x40a6e0",
            "funcEndAddr": "0x40a8cb",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined4 FUN_0040a6e0(void **param_1,ulong param_2)\n\n{\n  char cVar1;\n  undefined4 uVar2;\n  float fVar3;\n  void *local_68;\n  void *local_60;\n  void *local_58;\n  void *local_50;\n  undefined8 local_48;\n  void *local_40;\n  void *local_38;\n  void *local_30;\n  void *local_28;\n  void *local_20;\n  \n  local_40 = param_1[5];\n  if (*(char *)((long)local_40 + 0x10) == '\\0') {\n    if ((long)param_2 < 0) {\n      fVar3 = (float)(param_2 >> 1 | (ulong)((uint)param_2 & 1));\n      fVar3 = fVar3 + fVar3;\n    }\n    else {\n      fVar3 = (float)param_2;\n    }\n    fVar3 = fVar3 / *(float *)((long)local_40 + 8);\n    if (_DAT_0040e87c <= fVar3) {\n      return 0;\n    }\n    if (fVar3 < _DAT_0040e880) {\n      param_2 = (ulong)fVar3;\n    }\n    else {\n      param_2 = (long)(fVar3 - _DAT_0040e880) ^ 0x8000000000000000;\n    }\n  }\n  local_58 = (void *)FUN_00409b30(param_2);\n  if ((local_58 != (void *)0x0) && (-1 < (long)local_58 * 8 && (ulong)local_58 >> 0x3d == 0)) {\n    if (param_1[2] == local_58) {\n      return 1;\n    }\n    local_68 = calloc((size_t)local_58,0x10);\n    if (local_68 != (void *)0x0) {\n      local_60 = (void *)((long)local_58 * 0x10 + (long)local_68);\n      local_38 = param_1[6];\n      local_50 = (void *)0x0;\n      local_30 = param_1[7];\n      local_48 = 0;\n      local_28 = param_1[8];\n      local_20 = param_1[9];\n      uVar2 = FUN_00409dc0(&local_68,param_1,0);\n      if ((char)uVar2 != '\\0') {\n        free(*param_1);\n        *param_1 = local_68;\n        param_1[1] = local_60;\n        param_1[2] = local_58;\n        param_1[3] = local_50;\n        param_1[9] = local_20;\n        return uVar2;\n      }\n      param_1[9] = local_20;\n      cVar1 = FUN_00409dc0(param_1,&local_68,1);\n      if ((cVar1 != '\\0') && (cVar1 = FUN_00409dc0(param_1,&local_68,0), cVar1 != '\\0')) {\n        free(local_68);\n        return uVar2;\n      }\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040a6e0"
        },
        {
            "funcStartAddr": "0x40a8e0",
            "funcEndAddr": "0x40ab31",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_0040a8e0(long param_1,long param_2,long *param_3)\n\n{\n  char cVar1;\n  long lVar2;\n  ulong uVar3;\n  long *plVar4;\n  undefined8 uVar5;\n  ulong uVar6;\n  float fVar7;\n  float fVar8;\n  long *local_20;\n  \n  if (param_2 == 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  lVar2 = FUN_00409c20(param_1,param_2,&local_20,0);\n  if (lVar2 != 0) {\n    if (param_3 != (long *)0x0) {\n      *param_3 = lVar2;\n    }\n    return 0;\n  }\n  uVar6 = *(ulong *)(param_1 + 0x18);\n  if ((long)uVar6 < 0) {\n    uVar3 = *(ulong *)(param_1 + 0x10);\n    fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n    lVar2 = *(long *)(param_1 + 0x28);\n    fVar7 = fVar7 + fVar7;\n    if ((long)uVar3 < 0) goto LAB_0040a9da;\nLAB_0040a94b:\n    if (fVar7 <= (float)uVar3 * *(float *)(lVar2 + 8)) goto LAB_0040a962;\n  }\n  else {\n    lVar2 = *(long *)(param_1 + 0x28);\n    fVar7 = (float)uVar6;\n    uVar3 = *(ulong *)(param_1 + 0x10);\n    if (-1 < (long)uVar3) goto LAB_0040a94b;\nLAB_0040a9da:\n    fVar8 = (float)(uVar3 >> 1 | (ulong)((uint)uVar3 & 1));\n    if (fVar7 <= (fVar8 + fVar8) * *(float *)(lVar2 + 8)) goto LAB_0040a962;\n  }\n  FUN_00409d40(param_1 + 0x28);\n  lVar2 = *(long *)(param_1 + 0x28);\n  uVar6 = *(ulong *)(param_1 + 0x10);\n  if ((long)uVar6 < 0) {\n    fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n    fVar7 = fVar7 + fVar7;\n  }\n  else {\n    fVar7 = (float)uVar6;\n  }\n  uVar6 = *(ulong *)(param_1 + 0x18);\n  if ((long)uVar6 < 0) {\n    fVar8 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n    fVar8 = fVar8 + fVar8;\n  }\n  else {\n    fVar8 = (float)uVar6;\n  }\n  if (*(float *)(lVar2 + 8) * fVar7 < fVar8) {\n    fVar7 = fVar7 * *(float *)(lVar2 + 0xc);\n    if (*(char *)(lVar2 + 0x10) == '\\0') {\n      fVar7 = fVar7 * *(float *)(lVar2 + 8);\n    }\n    if (_DAT_0040e87c <= fVar7) {\n      return 0xffffffff;\n    }\n    if (_DAT_0040e880 <= fVar7) {\n      uVar6 = (long)(fVar7 - _DAT_0040e880) ^ 0x8000000000000000;\n    }\n    else {\n      uVar6 = (ulong)fVar7;\n    }\n    cVar1 = FUN_0040a6e0(param_1,uVar6);\n    if (cVar1 == '\\0') {\n      return 0xffffffff;\n    }\n    lVar2 = FUN_00409c20(param_1,param_2,&local_20,0);\n    if (lVar2 != 0) {\n      uVar5 = FUN_004020cc();\n      return uVar5;\n    }\n  }\nLAB_0040a962:\n  if (*local_20 == 0) {\n    *local_20 = param_2;\n    *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n    *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n    return 1;\n  }\n  plVar4 = *(long **)(param_1 + 0x48);\n  if (plVar4 == (long *)0x0) {\n    plVar4 = (long *)malloc(0x10);\n    if (plVar4 == (long *)0x0) {\n      return 0xffffffff;\n    }\n  }\n  else {\n    *(long *)(param_1 + 0x48) = plVar4[1];\n  }\n  lVar2 = local_20[1];\n  *plVar4 = param_2;\n  plVar4[1] = lVar2;\n  local_20[1] = (long)plVar4;\n  *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n  return 1;\n}\n\n",
            "funcName": "FUN_0040a8e0"
        },
        {
            "funcStartAddr": "0x40ab60",
            "funcEndAddr": "0x40ab94",
            "decompiledFuncCode": "\nundefined8 FUN_0040ab60(undefined8 param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  undefined8 local_10;\n  \n  iVar1 = FUN_0040a8e0(param_1,param_2,&local_10);\n  if (iVar1 != -1) {\n    if (iVar1 == 0) {\n      param_2 = local_10;\n    }\n    return param_2;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040ab60"
        },
        {
            "funcStartAddr": "0x40aba0",
            "funcEndAddr": "0x40ad5f",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nlong FUN_0040aba0(long param_1,undefined8 param_2)\n\n{\n  float *pfVar1;\n  ulong uVar2;\n  void *pvVar3;\n  void *__ptr;\n  char cVar4;\n  long lVar5;\n  ulong uVar6;\n  float fVar7;\n  float fVar8;\n  long *local_20;\n  \n  lVar5 = FUN_00409c20(param_1,param_2,&local_20,1);\n  if (lVar5 == 0) {\n    return 0;\n  }\n  *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + -1;\n  if (*local_20 == 0) {\n    uVar6 = *(long *)(param_1 + 0x18) - 1;\n    *(ulong *)(param_1 + 0x18) = uVar6;\n    if ((long)uVar6 < 0) {\n      uVar2 = *(ulong *)(param_1 + 0x10);\n      fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n      pfVar1 = *(float **)(param_1 + 0x28);\n      fVar7 = fVar7 + fVar7;\n    }\n    else {\n      pfVar1 = *(float **)(param_1 + 0x28);\n      fVar7 = (float)uVar6;\n      uVar2 = *(ulong *)(param_1 + 0x10);\n    }\n    if ((long)uVar2 < 0) {\n      fVar8 = (float)(uVar2 >> 1 | (ulong)((uint)uVar2 & 1));\n      fVar8 = fVar8 + fVar8;\n    }\n    else {\n      fVar8 = (float)uVar2;\n    }\n    if (fVar7 < fVar8 * *pfVar1) {\n      FUN_00409d40(param_1 + 0x28);\n      uVar6 = *(ulong *)(param_1 + 0x10);\n      pfVar1 = *(float **)(param_1 + 0x28);\n      if ((long)uVar6 < 0) {\n        fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n        fVar7 = fVar7 + fVar7;\n      }\n      else {\n        fVar7 = (float)uVar6;\n      }\n      uVar6 = *(ulong *)(param_1 + 0x18);\n      if ((long)uVar6 < 0) {\n        fVar8 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n        fVar8 = fVar8 + fVar8;\n      }\n      else {\n        fVar8 = (float)uVar6;\n      }\n      if (fVar8 < *pfVar1 * fVar7) {\n        fVar7 = fVar7 * pfVar1[1];\n        if (*(char *)(pfVar1 + 4) == '\\0') {\n          fVar7 = fVar7 * pfVar1[2];\n        }\n        if (_DAT_0040e880 <= fVar7) {\n          uVar6 = (long)(fVar7 - _DAT_0040e880) ^ 0x8000000000000000;\n        }\n        else {\n          uVar6 = (ulong)fVar7;\n        }\n        cVar4 = FUN_0040a6e0(param_1,uVar6);\n        if (cVar4 == '\\0') {\n          __ptr = *(void **)(param_1 + 0x48);\n          while (__ptr != (void *)0x0) {\n            pvVar3 = *(void **)((long)__ptr + 8);\n            free(__ptr);\n            __ptr = pvVar3;\n          }\n          *(undefined8 *)(param_1 + 0x48) = 0;\n        }\n      }\n    }\n    return lVar5;\n  }\n  return lVar5;\n}\n\n",
            "funcName": "FUN_0040aba0"
        },
        {
            "funcStartAddr": "0x40ad80",
            "funcEndAddr": "0x40ad9b",
            "decompiledFuncCode": "\nvoid FUN_0040ad80(undefined4 *param_1,undefined4 param_2)\n\n{\n  *(undefined8 *)(param_1 + 5) = 0;\n  *(undefined *)(param_1 + 7) = 1;\n  *param_1 = param_2;\n  param_1[1] = param_2;\n  param_1[2] = param_2;\n  param_1[3] = param_2;\n  param_1[4] = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_0040ad80"
        },
        {
            "funcStartAddr": "0x40ada0",
            "funcEndAddr": "0x40ada5",
            "decompiledFuncCode": "\nundefined FUN_0040ada0(long param_1)\n\n{\n  return *(undefined *)(param_1 + 0x1c);\n}\n\n",
            "funcName": "FUN_0040ada0"
        },
        {
            "funcStartAddr": "0x40adb0",
            "funcEndAddr": "0x40ade5",
            "decompiledFuncCode": "\nundefined4 FUN_0040adb0(long param_1,undefined4 param_2)\n\n{\n  undefined4 *puVar1;\n  undefined4 uVar2;\n  uint uVar3;\n  uint uVar4;\n  \n  uVar4 = (uint)(*(byte *)(param_1 + 0x1c) ^ 1);\n  uVar3 = *(int *)(param_1 + 0x14) + uVar4 & 3;\n  puVar1 = (undefined4 *)(param_1 + (ulong)uVar3 * 4);\n  uVar2 = *puVar1;\n  *puVar1 = param_2;\n  *(uint *)(param_1 + 0x14) = uVar3;\n  if (*(uint *)(param_1 + 0x18) == uVar3) {\n    *(uint *)(param_1 + 0x18) = uVar4 + *(uint *)(param_1 + 0x18) & 3;\n  }\n  *(undefined *)(param_1 + 0x1c) = 0;\n  return uVar2;\n}\n\n",
            "funcName": "FUN_0040adb0"
        },
        {
            "funcStartAddr": "0x40adf0",
            "funcEndAddr": "0x40ae2b",
            "decompiledFuncCode": "\nundefined4 FUN_0040adf0(long param_1)\n\n{\n  undefined4 *puVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  \n  if (*(char *)(param_1 + 0x1c) != '\\0') {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  uVar2 = *(uint *)(param_1 + 0x14);\n  puVar1 = (undefined4 *)(param_1 + (ulong)uVar2 * 4);\n  uVar3 = *puVar1;\n  *puVar1 = *(undefined4 *)(param_1 + 0x10);\n  if (uVar2 != *(uint *)(param_1 + 0x18)) {\n    *(uint *)(param_1 + 0x14) = uVar2 + 3 & 3;\n    return uVar3;\n  }\n  *(undefined *)(param_1 + 0x1c) = 1;\n  return uVar3;\n}\n\n",
            "funcName": "FUN_0040adf0"
        },
        {
            "funcStartAddr": "0x40ae40",
            "funcEndAddr": "0x40b394",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nchar * FUN_0040ae40(void)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  char *__s1;\n  size_t sVar5;\n  size_t sVar6;\n  char *pcVar7;\n  size_t __n;\n  char *__file;\n  FILE *__stream;\n  byte *pbVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  long lVar11;\n  ulong uVar12;\n  undefined8 *puVar13;\n  char *__ptr;\n  bool bVar14;\n  long local_d0;\n  undefined8 local_c0;\n  undefined8 local_b8;\n  undefined auStack_80 [8];\n  undefined8 local_78;\n  \n  __s1 = nl_langinfo(0xe);\n  if (__s1 == (char *)0x0) {\n    __s1 = \"\";\n  }\n  if (DAT_00611520 != (char *)0x0) goto LAB_0040ae7a;\n  pcVar7 = getenv(\"CHARSETALIASDIR\");\n  if ((pcVar7 == (char *)0x0) || (*pcVar7 == '\\0')) {\n    sVar6 = 0x73;\n    sVar5 = 0x65;\n    __n = 100;\n    pcVar7 = \n    \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\"\n    ;\nLAB_0040af65:\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      __file[__n] = '/';\n      goto LAB_0040af86;\n    }\n  }\n  else {\n    __n = strlen(pcVar7);\n    if (__n == 0) {\n      sVar6 = 0xe;\n    }\n    else {\n      if (pcVar7[__n - 1] != '/') {\n        sVar6 = __n + 0xf;\n        sVar5 = __n + 1;\n        goto LAB_0040af65;\n      }\n      sVar6 = __n + 0xe;\n    }\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      sVar5 = __n;\nLAB_0040af86:\n      puVar13 = (undefined8 *)(__file + sVar5);\n      *puVar13 = 0x2e74657372616863;\n      *(undefined2 *)((long)puVar13 + 0xc) = 0x73;\n      *(undefined4 *)(puVar13 + 1) = 0x61696c61;\n      iVar2 = open(__file,0);\n      if (-1 < iVar2) {\n        __stream = fdopen(iVar2,\"r\");\n        local_d0 = 0;\n        if (__stream != (FILE *)0x0) {\n          pcVar7 = (char *)0x0;\nLAB_0040b020:\n          pbVar8 = (byte *)__stream->_IO_read_ptr;\n          if (__stream->_IO_read_end <= pbVar8) goto LAB_0040b1ac;\n          do {\n            __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n            uVar4 = (uint)*pbVar8;\n            __ptr = pcVar7;\n            while( true ) {\n              pcVar7 = __ptr;\n              if ((uVar4 - 9 < 2) || (uVar4 == 0x20)) goto LAB_0040b020;\n              if (uVar4 == 0x23) goto LAB_0040b211;\n              ungetc(uVar4,__stream);\n              iVar2 = fscanf(__stream,\"%50s %50s\",&local_b8,&local_78);\n              puVar13 = &local_b8;\n              if (iVar2 < 2) goto LAB_0040b1bf;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              lVar11 = (long)puVar13 +\n                       ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_b8);\n              puVar13 = &local_78;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              local_c0 = (long)puVar13 +\n                         ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_78);\n              lVar9 = lVar11 + local_c0;\n              if (local_d0 == 0) {\n                pcVar7 = (char *)malloc(lVar9 + 3);\n              }\n              else {\n                lVar9 = lVar9 + local_d0;\n                pcVar7 = (char *)realloc(__ptr,lVar9 + 3);\n              }\n              local_d0 = lVar9 + 2;\n              if (pcVar7 == (char *)0x0) {\n                pcVar7 = \"\";\n                free(__ptr);\n                FUN_0040b830(__stream);\n                goto LAB_0040afc4;\n              }\n              uVar12 = lVar11 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (-2 - lVar11) + (local_d0 - local_c0));\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_b8;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 2));\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_b8;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 4));\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_b8._4_4_,(undefined4)local_b8);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 8));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_b8 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              uVar12 = local_c0 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (local_d0 - local_c0) + -1);\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_78;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 6);\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_78;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 4);\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_78._4_4_,(undefined4)local_78);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)auStack_80 + (uVar12 & 0xffffffff));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_78 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              pbVar8 = (byte *)__stream->_IO_read_ptr;\n              if (pbVar8 < __stream->_IO_read_end) break;\nLAB_0040b1ac:\n              uVar4 = __uflow(__stream);\n              __ptr = pcVar7;\n              if (uVar4 == 0xffffffff) goto LAB_0040b1bf;\n            }\n          } while( true );\n        }\n        close(iVar2);\n      }\n      goto LAB_0040afbe;\n    }\n  }\n  DAT_00611520 = \"\";\nLAB_0040ae7a:\n  cVar1 = *DAT_00611520;\n  pcVar7 = DAT_00611520;\n  do {\n    if (cVar1 == '\\0') {\nLAB_0040aed4:\n      if (*__s1 == '\\0') {\n        __s1 = \"ASCII\";\n      }\n      return __s1;\n    }\n    iVar2 = strcmp(__s1,pcVar7);\n    if ((iVar2 == 0) || ((cVar1 == '*' && (pcVar7[1] == '\\0')))) {\n      sVar6 = strlen(pcVar7);\n      __s1 = pcVar7 + sVar6 + 1;\n      goto LAB_0040aed4;\n    }\n    sVar6 = strlen(pcVar7);\n    sVar5 = strlen(pcVar7 + sVar6 + 1);\n    pcVar7 = pcVar7 + sVar6 + 1 + sVar5 + 1;\n    cVar1 = *pcVar7;\n  } while( true );\nLAB_0040b211:\n  do {\n    pbVar8 = (byte *)__stream->_IO_read_ptr;\n    if (pbVar8 < __stream->_IO_read_end) {\n      __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n      uVar4 = (uint)*pbVar8;\n      bVar14 = true;\n    }\n    else {\n      uVar4 = __uflow(__stream);\n      bVar14 = uVar4 != 0xffffffff;\n    }\n  } while ((uVar4 != 10) && (bVar14));\n  if (uVar4 == 0xffffffff) goto LAB_0040b1bf;\n  goto LAB_0040b020;\nLAB_0040b1bf:\n  FUN_0040b830(__stream);\n  if (local_d0 == 0) {\nLAB_0040afbe:\n    pcVar7 = \"\";\n  }\n  else {\n    pcVar7[local_d0] = '\\0';\n  }\nLAB_0040afc4:\n  free(__file);\n  DAT_00611520 = pcVar7;\n  goto LAB_0040ae7a;\n}\n\n",
            "funcName": "FUN_0040ae40"
        },
        {
            "funcStartAddr": "0x40b3b0",
            "funcEndAddr": "0x40b3db",
            "decompiledFuncCode": "\nvoid FUN_0040b3b0(undefined4 param_1)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"unable to record current working directory\",5);\n  error(DAT_006112b8,param_1,uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040b3b0"
        },
        {
            "funcStartAddr": "0x40b3e0",
            "funcEndAddr": "0x40b40b",
            "decompiledFuncCode": "\nvoid FUN_0040b3e0(undefined4 param_1)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"failed to return to initial working directory\",5);\n  error(DAT_006112b8,param_1,uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040b3e0"
        },
        {
            "funcStartAddr": "0x40b410",
            "funcEndAddr": "0x40b455",
            "decompiledFuncCode": "\nvoid FUN_0040b410(int param_1,char *param_2,uint param_3,ulong param_4)\n\n{\n  int iVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  if ((param_3 & 0x40) != 0) {\n    uVar2 = param_4 & 0xffffffff;\n  }\n  iVar1 = openat(param_1,param_2,param_3,uVar2);\n  FUN_0040b4f0(iVar1);\n  return;\n}\n\n",
            "funcName": "FUN_0040b410"
        },
        {
            "funcStartAddr": "0x40b460",
            "funcEndAddr": "0x40b4a3",
            "decompiledFuncCode": "\nint FUN_0040b460(int *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  \n  *(undefined8 *)(param_1 + 2) = 0;\n  iVar1 = FUN_00409a80(&DAT_0040e5fa,0x80000);\n  *param_1 = iVar1;\n  if (-1 < iVar1) {\n    return 0;\n  }\n  lVar2 = FUN_0040ba90(0,0);\n  *(long *)(param_1 + 2) = lVar2;\n  return -(uint)(lVar2 == 0);\n}\n\n",
            "funcName": "FUN_0040b460"
        },
        {
            "funcStartAddr": "0x40b4b0",
            "funcEndAddr": "0x40b4c6",
            "decompiledFuncCode": "\nvoid FUN_0040b4b0(int *param_1)\n\n{\n  if (-1 < *param_1) {\n    fchdir(*param_1);\n    return;\n  }\n  FUN_0040b5c0(*(undefined8 *)(param_1 + 2));\n  return;\n}\n\n",
            "funcName": "FUN_0040b4b0"
        },
        {
            "funcStartAddr": "0x40b4d0",
            "funcEndAddr": "0x40b4e9",
            "decompiledFuncCode": "\nvoid FUN_0040b4d0(int *param_1)\n\n{\n  if (-1 < *param_1) {\n    close(*param_1);\n  }\n  free(*(void **)(param_1 + 2));\n  return;\n}\n\n",
            "funcName": "FUN_0040b4d0"
        },
        {
            "funcStartAddr": "0x40b4f0",
            "funcEndAddr": "0x40b53c",
            "decompiledFuncCode": "\nuint FUN_0040b4f0(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  \n  if (2 < param_1) {\n    return param_1;\n  }\n  uVar2 = FUN_0040c070();\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  close(param_1);\n  *piVar3 = iVar1;\n  return uVar2;\n}\n\n",
            "funcName": "FUN_0040b4f0"
        },
        {
            "funcStartAddr": "0x40b540",
            "funcEndAddr": "0x40b570",
            "decompiledFuncCode": "\nvoid FUN_0040b540(int param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 < 0) {\n    return;\n  }\n  iVar1 = close(param_1);\n  if (iVar1 == 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"! close_fail\",\"lib/chdir-long.c\",0x40,\"cdb_free\");\n}\n\n",
            "funcName": "FUN_0040b540"
        },
        {
            "funcStartAddr": "0x40b580",
            "funcEndAddr": "0x40b5b6",
            "decompiledFuncCode": "\nundefined8 FUN_0040b580(int *param_1,char *param_2)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  \n  iVar1 = openat(*param_1,param_2,0x10900);\n  if (iVar1 < 0) {\n    uVar2 = 0xffffffff;\n  }\n  else {\n    FUN_0040b540(*param_1);\n    *param_1 = iVar1;\n    uVar2 = 0;\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_0040b580"
        },
        {
            "funcStartAddr": "0x40b5c0",
            "funcEndAddr": "0x40b816",
            "decompiledFuncCode": "\nint FUN_0040b5c0(char *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  size_t sVar3;\n  size_t sVar4;\n  undefined *puVar5;\n  char *__s;\n  int local_2c;\n  \n  iVar1 = chdir(param_1);\n  if (iVar1 == 0) {\n    return 0;\n  }\n  piVar2 = __errno_location();\n  if (*piVar2 != 0x24) {\n    return iVar1;\n  }\n  sVar3 = strlen(param_1);\n  local_2c = -100;\n  if (sVar3 == 0) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 < len\",\"lib/chdir-long.c\",0x7e,\"chdir_long\");\n  }\n  if (sVar3 < 0x1000) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"4096 <= len\",\"lib/chdir-long.c\",0x7f,\"chdir_long\");\n  }\n  sVar4 = strspn(param_1,\"/\");\n  if (sVar4 == 2) {\n    puVar5 = (undefined *)FUN_0040bf60(param_1 + 3,0x2f,sVar3 - 3);\n    if (puVar5 == (undefined *)0x0) {\n      return -1;\n    }\n    *puVar5 = 0;\n    iVar1 = FUN_0040b580(&local_2c,param_1);\n    *puVar5 = 0x2f;\n    if (iVar1 != 0) goto LAB_0040b6f0;\n    sVar4 = strspn(puVar5 + 1,\"/\");\n    __s = puVar5 + 1 + sVar4;\n  }\n  else {\n    __s = param_1;\n    if (sVar4 != 0) {\n      iVar1 = FUN_0040b580(&local_2c,\"/\");\n      if (iVar1 != 0) goto LAB_0040b6f0;\n      __s = param_1 + sVar4;\n    }\n  }\n  if (*__s == '/') {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"*dir != \\'/\\'\",\"lib/chdir-long.c\",0xa2,\"chdir_long\");\n  }\n  param_1 = param_1 + sVar3;\n  if (param_1 < __s) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"dir <= dir_end\",\"lib/chdir-long.c\",0xa3,\"chdir_long\");\n  }\n  while (0xfff < (long)param_1 - (long)__s) {\n    puVar5 = (undefined *)memrchr(__s,0x2f,0x1000);\n    if (puVar5 == (undefined *)0x0) {\n      *piVar2 = 0x24;\n      return -1;\n    }\n    *puVar5 = 0;\n    if (0xfff < (long)puVar5 - (long)__s) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"slash - dir < 4096\",\"lib/chdir-long.c\",0xb3,\"chdir_long\");\n    }\n    iVar1 = FUN_0040b580(&local_2c,__s);\n    *puVar5 = 0x2f;\n    if (iVar1 != 0) goto LAB_0040b6f0;\n    sVar3 = strspn(puVar5 + 1,\"/\");\n    __s = puVar5 + 1 + sVar3;\n  }\n  if (((param_1 <= __s) || (iVar1 = FUN_0040b580(&local_2c,__s), iVar1 == 0)) &&\n     (iVar1 = fchdir(local_2c), iVar1 == 0)) {\n    FUN_0040b540(local_2c);\n    return 0;\n  }\nLAB_0040b6f0:\n  iVar1 = *piVar2;\n  FUN_0040b540(local_2c);\n  *piVar2 = iVar1;\n  return -1;\n}\n\n",
            "funcName": "FUN_0040b5c0"
        },
        {
            "funcStartAddr": "0x40b830",
            "funcEndAddr": "0x40b8a8",
            "decompiledFuncCode": "\nint FUN_0040b830(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_0040b897;\n    }\n    iVar1 = FUN_0040b9f0(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_0040b897:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n",
            "funcName": "FUN_0040b830"
        },
        {
            "funcStartAddr": "0x40b8b0",
            "funcEndAddr": "0x40b9dc",
            "decompiledFuncCode": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint FUN_0040b8b0(ulong param_1,int param_2,ulong param_3)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  int *piVar4;\n  \n  if (param_2 != 0x406) {\n    iVar1 = fcntl((int)param_1,param_2,param_3);\n    return iVar1;\n  }\n  if (DAT_00611528 < 0) {\n    iVar1 = FUN_0040b8b0(param_1,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    if (DAT_00611528 != -1) {\n      return iVar1;\n    }\n  }\n  else {\n    iVar1 = fcntl((int)param_1,0x406);\n    if ((-1 < iVar1) || (piVar4 = __errno_location(), *piVar4 != 0x16)) {\n      DAT_00611528 = 1;\n      return iVar1;\n    }\n    iVar1 = FUN_0040b8b0(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    DAT_00611528 = -1;\n  }\n  uVar2 = fcntl(iVar1,1);\n  if ((-1 < (int)uVar2) && (iVar3 = fcntl(iVar1,2,(ulong)(uVar2 | 1)), iVar3 != -1)) {\n    return iVar1;\n  }\n  piVar4 = __errno_location();\n  iVar3 = *piVar4;\n  close(iVar1);\n  *piVar4 = iVar3;\n  return -1;\n}\n\n",
            "funcName": "FUN_0040b8b0"
        },
        {
            "funcStartAddr": "0x40b9f0",
            "funcEndAddr": "0x40ba2b",
            "decompiledFuncCode": "\nvoid FUN_0040b9f0(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if ((iVar1 != 0) && ((param_1->_flags & 0x100U) != 0)) {\n      FUN_0040ba30(param_1,0,1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_0040b9f0"
        },
        {
            "funcStartAddr": "0x40ba30",
            "funcEndAddr": "0x40ba86",
            "decompiledFuncCode": "\nulong FUN_0040ba30(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  uint uVar1;\n  int __fd;\n  ulong uVar2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    __fd = fileno(param_1);\n    uVar2 = lseek(__fd,param_2,param_3);\n    if (uVar2 != 0xffffffffffffffff) {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = uVar2;\n      uVar2 = 0;\n    }\n    return uVar2;\n  }\n  uVar1 = fseeko(param_1,param_2,param_3);\n  return (ulong)uVar1;\n}\n\n",
            "funcName": "FUN_0040ba30"
        },
        {
            "funcStartAddr": "0x40ba90",
            "funcEndAddr": "0x40bf35",
            "decompiledFuncCode": "\nvoid * FUN_0040ba90(void *param_1,size_t param_2)\n\n{\n  char *__filename;\n  bool bVar1;\n  __dev_t _Var2;\n  __dev_t _Var3;\n  __ino_t _Var4;\n  __ino_t _Var5;\n  int iVar6;\n  int iVar7;\n  int *piVar8;\n  DIR *__dirp;\n  dirent *pdVar9;\n  size_t __n;\n  void *pvVar10;\n  bool bVar11;\n  ulong uVar12;\n  long lVar13;\n  ulong uVar14;\n  __ino_t _Var15;\n  bool bVar16;\n  bool bVar17;\n  bool bVar18;\n  __dev_t local_120;\n  void *local_110;\n  void *local_108;\n  ulong local_100;\n  void *local_e8;\n  stat local_c8;\n  \n  if (param_2 == 0) {\n    local_100 = 0x1000;\n    if (param_1 != (void *)0x0) {\n      piVar8 = __errno_location();\n      *piVar8 = 0x16;\n      return (void *)0x0;\n    }\nLAB_0040bac2:\n    local_110 = malloc(local_100);\n    if (local_110 == (void *)0x0) {\n      return (void *)0x0;\n    }\n  }\n  else {\n    local_110 = param_1;\n    local_100 = param_2;\n    if (param_1 == (void *)0x0) goto LAB_0040bac2;\n  }\n  lVar13 = (long)local_110 + local_100;\n  *(undefined *)(lVar13 + -1) = 0;\n  iVar6 = __lxstat(1,\".\",&local_c8);\n  _Var15 = local_c8.st_ino;\n  _Var2 = local_c8.st_dev;\n  if (-1 < iVar6) {\n    local_120 = local_c8.st_dev;\n    iVar6 = __lxstat(1,\"/\",&local_c8);\n    _Var4 = local_c8.st_ino;\n    _Var3 = local_c8.st_dev;\n    if (-1 < iVar6) {\n      local_e8 = (void *)(lVar13 + -1);\n      bVar16 = _Var2 != local_c8.st_dev;\n      bVar17 = _Var15 != local_c8.st_ino;\n      if (!bVar16 && !bVar17) {\nLAB_0040bda8:\n        if (local_e8 == (void *)((long)local_110 + (local_100 - 1))) {\n          *(undefined *)((long)local_e8 + -1) = 0x2f;\n          local_e8 = (void *)((long)local_e8 + -1);\n        }\n        memmove(local_110,local_e8,lVar13 - (long)local_e8);\n        local_108 = param_1;\n        if (param_2 == 0) {\n          local_108 = realloc(local_110,lVar13 - (long)local_e8);\n        }\n        if (local_108 != (void *)0x0) {\n          return local_108;\n        }\n        return local_110;\n      }\n      piVar8 = __errno_location();\n      __dirp = (DIR *)0x0;\n      iVar6 = -100;\n      do {\n        iVar6 = openat(iVar6,\"..\",0);\n        if (iVar6 < 0) {\n          iVar7 = *piVar8;\n          if (__dirp != (DIR *)0x0) goto LAB_0040be61;\n          goto joined_r0x0040be6f;\n        }\n        iVar7 = __fxstat(1,iVar6,&local_c8);\n        if (iVar7 != 0) {\n          iVar7 = *piVar8;\n          if (__dirp != (DIR *)0x0) {\n            closedir(__dirp);\n          }\nLAB_0040becd:\n          close(iVar6);\n          goto joined_r0x0040be6f;\n        }\n        if (((__dirp != (DIR *)0x0) && (iVar7 = closedir(__dirp), iVar7 != 0)) ||\n           (_Var5 = local_c8.st_ino, _Var2 = local_c8.st_dev, __dirp = fdopendir(iVar6),\n           bVar1 = bVar16 || bVar17, __dirp == (DIR *)0x0)) {\n          iVar7 = *piVar8;\n          goto LAB_0040becd;\n        }\nLAB_0040bc20:\n        do {\n          do {\n            *piVar8 = 0;\n            pdVar9 = readdir(__dirp);\n            if (pdVar9 == (dirent *)0x0) {\n              iVar7 = *piVar8;\n              if ((iVar7 == 0) && (bVar1)) {\n                rewinddir(__dirp);\n                pdVar9 = readdir(__dirp);\n                if (pdVar9 != (dirent *)0x0) {\n                  bVar11 = false;\n                  bVar1 = bVar11;\n                  if (pdVar9->d_name[0] == '.') goto LAB_0040be30;\n                  break;\n                }\n                iVar7 = *piVar8;\n              }\n              if (iVar7 == 0) {\n                *piVar8 = 2;\n                iVar7 = 2;\n              }\n              goto LAB_0040be61;\n            }\n            if (pdVar9->d_name[0] == '.') {\nLAB_0040be30:\n              if ((pdVar9->d_name[1] == '\\0') || (*(short *)(pdVar9->d_name + 1) == 0x2e))\n              goto LAB_0040bc20;\n            }\n            bVar11 = bVar1;\n          } while ((bVar1) &&\n                  (bVar18 = pdVar9->d_ino == _Var15, bVar11 = bVar18 || _Var2 != local_120,\n                  !bVar18 && _Var2 == local_120));\n          __filename = pdVar9->d_name;\n          iVar7 = __fxstatat(1,iVar6,__filename,&local_c8,0x100);\n          bVar1 = bVar11;\n        } while ((((iVar7 != 0) || ((local_c8.st_mode & 0xf000) != 0x4000)) ||\n                 (local_c8.st_dev != local_120)) || (local_c8.st_ino != _Var15));\n        uVar14 = (long)local_e8 - (long)local_110;\n        __n = strlen(__filename);\n        if (uVar14 <= __n) {\n          if (param_2 == 0) {\n            uVar12 = local_100;\n            if (local_100 <= __n) {\n              uVar12 = __n;\n            }\n            if ((!CARRY8(local_100,uVar12)) &&\n               (pvVar10 = realloc(local_110,local_100 + uVar12), pvVar10 != (void *)0x0)) {\n              local_e8 = memcpy((void *)((long)pvVar10 + uVar12 + uVar14),\n                                (void *)((long)pvVar10 + uVar14),local_100 - uVar14);\n              local_110 = pvVar10;\n              local_100 = local_100 + uVar12;\n              goto LAB_0040bd3f;\n            }\n            *piVar8 = 0xc;\n            iVar7 = 0xc;\n          }\n          else {\n            *piVar8 = 0x22;\n            iVar7 = 0x22;\n          }\nLAB_0040be61:\n          closedir(__dirp);\n          goto joined_r0x0040be6f;\n        }\nLAB_0040bd3f:\n        pvVar10 = memcpy((void *)((long)local_e8 - __n),__filename,__n);\n        local_e8 = (void *)((long)pvVar10 + -1);\n        local_120 = _Var2;\n        *(undefined *)((long)pvVar10 + -1) = 0x2f;\n        _Var15 = _Var5;\n      } while ((_Var3 != _Var2) || (_Var4 != _Var5));\n      iVar6 = closedir(__dirp);\n      if (iVar6 == 0) {\n        lVar13 = (long)local_110 + local_100;\n        goto LAB_0040bda8;\n      }\n      goto LAB_0040be90;\n    }\n  }\n  piVar8 = __errno_location();\nLAB_0040be90:\n  iVar7 = *piVar8;\njoined_r0x0040be6f:\n  if (param_1 == (void *)0x0) {\n    free(local_110);\n  }\n  *piVar8 = iVar7;\n  return (void *)0x0;\n}\n\n",
            "funcName": "FUN_0040ba90"
        },
        {
            "funcStartAddr": "0x40bf60",
            "funcEndAddr": "0x40c043",
            "decompiledFuncCode": "\nulong * FUN_0040bf60(ulong *param_1,char param_2,ulong param_3)\n\n{\n  char cVar1;\n  ulong uVar2;\n  ulong *puVar3;\n  ulong uVar4;\n  \n  if (param_3 == 0) {\n    return (ulong *)0x0;\n  }\n  if (((ulong)param_1 & 7) == 0) {\nLAB_0040bfa0:\n    uVar4 = (long)(int)(uint)CONCAT11(param_2,param_2) |\n            (long)(int)(uint)CONCAT11(param_2,param_2) << 0x10;\n    uVar4 = uVar4 | uVar4 << 0x20;\n    if (7 < param_3) {\n      uVar2 = *param_1 ^ uVar4;\n      for (uVar2 = ~uVar2 & uVar2 + 0xfefefefefefefeff; (uVar2 & 0x8080808080808080) == 0;\n          uVar2 = ~uVar2 & uVar2 + 0xfefefefefefefeff) {\n        param_3 = param_3 - 8;\n        param_1 = param_1 + 1;\n        if (param_3 < 8) {\n          if (param_3 == 0) {\n            return (ulong *)0x0;\n          }\n          break;\n        }\n        uVar2 = *param_1 ^ uVar4;\n      }\n    }\n    if (param_2 != *(char *)param_1) {\n      puVar3 = (ulong *)((long)param_1 + param_3);\n      do {\n        param_1 = (ulong *)((long)param_1 + 1);\n        if (param_1 == puVar3) {\n          return (ulong *)0x0;\n        }\n      } while (*(char *)param_1 != param_2);\n    }\n  }\n  else {\n    cVar1 = *(char *)param_1;\n    while (param_2 != cVar1) {\n      param_1 = (ulong *)((long)param_1 + 1);\n      param_3 = param_3 - 1;\n      if (param_3 == 0) {\n        return (ulong *)0x0;\n      }\n      if (((ulong)param_1 & 7) == 0) goto LAB_0040bfa0;\n      cVar1 = *(char *)param_1;\n    }\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_0040bf60"
        },
        {
            "funcStartAddr": "0x40c070",
            "funcEndAddr": "0x40c07e",
            "decompiledFuncCode": "\nvoid FUN_0040c070(undefined8 param_1)\n\n{\n  FUN_0040b8b0(param_1,0,3);\n  return;\n}\n\n",
            "funcName": "FUN_0040c070"
        },
        {
            "funcStartAddr": "0x40c080",
            "funcEndAddr": "0x40c0dd",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x0040c0b3) */\n/* WARNING: Removing unreachable block (ram,0x0040c0b8) */\n\nvoid FUN_0040c080(void)\n\n{\n  __DT_INIT();\n  return;\n}\n\n",
            "funcName": "FUN_0040c080"
        },
        {
            "funcStartAddr": "0x40c0e0",
            "funcEndAddr": "0x40c0e1",
            "decompiledFuncCode": "\nvoid FUN_0040c0e0(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_0040c0e0"
        },
        {
            "funcStartAddr": "0x40c0f0",
            "funcEndAddr": "0x40c108",
            "decompiledFuncCode": "\nvoid FUN_0040c0f0(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,DAT_006112a8);\n  return;\n}\n\n",
            "funcName": "FUN_0040c0f0"
        },
        {
            "funcStartAddr": "0x40c108",
            "funcEndAddr": "0x40c128",
            "decompiledFuncCode": "\nundefined8 FUN_0040c108(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  code **ppcVar1;\n  \n  for (ppcVar1 = (code **)&DAT_00610e30; *ppcVar1 != (code *)0xffffffffffffffff;\n      ppcVar1 = ppcVar1 + -1) {\n    (**ppcVar1)();\n  }\n  return param_3;\n}\n\n",
            "funcName": "FUN_0040c108"
        }
    ],
    "decompilerName": "Ghidra",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_chgrp.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O"
}