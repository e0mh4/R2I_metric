{
    "funcCount": 121,
    "funcInfo": [
        {
            "funcStartAddr": "0x401d55",
            "funcEndAddr": "0x401d5a",
            "decompiledFuncCode": "\nvoid FUN_00401d55(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401d55"
        },
        {
            "funcStartAddr": "0x401d5a",
            "funcEndAddr": "0x401d5f",
            "decompiledFuncCode": "\nvoid FUN_00401d5a(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401d5a"
        },
        {
            "funcStartAddr": "0x401d5f",
            "funcEndAddr": "0x401d64",
            "decompiledFuncCode": "\nvoid FUN_00401d5f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401d5f"
        },
        {
            "funcStartAddr": "0x401d64",
            "funcEndAddr": "0x401d69",
            "decompiledFuncCode": "\nvoid FUN_00401d64(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401d64"
        },
        {
            "funcStartAddr": "0x401d6e",
            "funcEndAddr": "0x401d73",
            "decompiledFuncCode": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "thunk_401d6e"
        },
        {
            "funcStartAddr": "0x401d80",
            "funcEndAddr": "0x40275f",
            "decompiledFuncCode": "\nuint FUN_00401d80(ulong param_1,undefined8 *param_2)\n\n{\n  byte bVar1;\n  int iVar2;\n  uint uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  byte *__s1;\n  ulong uVar7;\n  int *piVar8;\n  FILE *__stream;\n  long lVar9;\n  undefined8 uVar10;\n  ulong uVar11;\n  undefined8 *puVar12;\n  byte *pbVar13;\n  byte *pbVar14;\n  ulong uVar15;\n  uint uVar16;\n  stat *psVar17;\n  long unaff_R14;\n  bool bVar18;\n  bool bVar19;\n  byte bVar20;\n  double dVar21;\n  double dVar22;\n  undefined auVar23 [16];\n  stat *local_208;\n  undefined8 *local_200;\n  undefined8 *local_1f8;\n  char local_1ed;\n  int local_1ec;\n  int local_1e8;\n  uint local_1d0;\n  long local_1b8;\n  ulong local_158;\n  undefined8 *local_150;\n  \n  bVar20 = 0;\n  param_1 = param_1 & 0xffffffff;\n  FUN_00403bb0(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\");\n  textdomain(\"coreutils\");\n  FUN_00407e80(FUN_00403810);\n  iVar2 = getpagesize();\n  DAT_0060c320 = (long)iVar2;\n  setvbuf(stdout,(char *)0x0,1,0);\n  DAT_0060c331 = 0;\n  DAT_0060c332 = 0;\n  DAT_0060c333 = 0;\n  DAT_0060c334 = 0;\n  DAT_0060c330 = 0;\n  DAT_0060c338 = 0;\n  DAT_0060c340 = 0;\n  DAT_0060c348 = 0;\n  DAT_0060c350 = 0;\n  DAT_0060c358 = 0;\n  pbVar13 = (byte *)0x0;\nLAB_00401e50:\n  __s1 = pbVar13;\n  iVar2 = FUN_004072a0(param_1 & 0xffffffff,param_2,\"clLmw\",&PTR_s_bytes_00408200,0);\n  if (iVar2 == -1) {\n    if ((DAT_0060c334 == 0) && (DAT_0060c333 == 0)) goto LAB_0040239b;\nLAB_00401f56:\n    lVar9 = (long)DAT_0060c2bc;\n    iVar2 = (int)param_1;\n    if (__s1 == (byte *)0x0) {\n      if (DAT_0060c2bc < iVar2) {\n        local_1f8 = param_2 + DAT_0060c2bc;\n        uVar7 = (ulong)(iVar2 - DAT_0060c2bc);\n        unaff_R14 = FUN_004036b0();\n        if (unaff_R14 == 0) goto LAB_00402696;\n        local_208 = (stat *)&local_1e8;\n        local_1ed = '\\0';\nLAB_00402414:\n        local_200 = (undefined8 *)FUN_004061a0(uVar7 * 0x98);\n        if (uVar7 == 1) goto LAB_00402596;\n      }\n      else {\n        unaff_R14 = FUN_004036b0(&DAT_0060c318);\n        if (unaff_R14 == 0) goto LAB_00402696;\n        local_200 = (undefined8 *)FUN_004061a0(0x98);\n        local_1ed = '\\0';\n        local_208 = (stat *)&local_1e8;\n        local_1f8 = (undefined8 *)&DAT_0060c318;\nLAB_00402596:\n        iVar2 = (uint)DAT_0060c334 + (uint)DAT_0060c333 + (uint)DAT_0060c332 + (uint)DAT_0060c331 +\n                (uint)DAT_0060c330;\n        if (iVar2 == 1) {\n          uVar7 = 1;\n          *(int *)local_200 = 1;\n          DAT_0060c32c = iVar2;\n          goto LAB_00401ff4;\n        }\n        uVar7 = 1;\n      }\n      uVar15 = 0;\n      psVar17 = (stat *)(local_200 + 1);\n      do {\n        pcVar4 = (char *)local_1f8[uVar15];\n        if ((pcVar4 == (char *)0x0) || (iVar2 = strcmp(pcVar4,\"-\"), iVar2 == 0)) {\n          iVar2 = __fxstat(1,0,psVar17);\n        }\n        else {\n          iVar2 = __xstat(1,pcVar4,psVar17);\n        }\n        uVar15 = uVar15 + 1;\n        *(int *)(psVar17[-1].__unused + 2) = iVar2;\n        psVar17 = (stat *)&psVar17[1].st_ino;\n      } while (uVar7 != uVar15);\n      DAT_0060c32c = 1;\n      if (*(int *)local_200 < 1) {\n        iVar2 = 1;\n        uVar15 = 0;\n        uVar11 = 0;\n        puVar12 = local_200;\n        do {\n          if (*(int *)puVar12 == 0) {\n            if ((*(uint *)(puVar12 + 4) & 0xf000) == 0x8000) {\n              uVar15 = uVar15 + puVar12[7];\n            }\n            else {\n              iVar2 = 7;\n            }\n          }\n          uVar11 = uVar11 + 1;\n          puVar12 = puVar12 + 0x13;\n        } while (uVar7 != uVar11);\nLAB_00402536:\n        DAT_0060c32c = 1;\n        for (; 9 < uVar15; uVar15 = uVar15 / 10) {\n          DAT_0060c32c = DAT_0060c32c + 1;\n        }\n        if (DAT_0060c32c < iVar2) {\n          DAT_0060c32c = iVar2;\n        }\n      }\n    }\n    else {\n      if (DAT_0060c2bc < iVar2) goto LAB_004026cd;\n      iVar2 = strcmp((char *)__s1,\"-\");\n      __stream = stdin;\n      if ((iVar2 != 0) && (__stream = fopen((char *)__s1,\"r\"), __stream == (FILE *)0x0)) {\n        __s1 = (byte *)FUN_00405580(4,__s1);\n        uVar7 = dcgettext(0,\"cannot open %s for reading\",5);\n        piVar8 = __errno_location();\n        iVar2 = 1;\n        uVar15 = error(1,*piVar8,uVar7,__s1);\n        goto LAB_00402536;\n      }\n      iVar2 = fileno(__stream);\n      local_208 = (stat *)&local_1e8;\n      iVar2 = __fxstat(1,iVar2,local_208);\n      if ((iVar2 == 0) && ((local_1d0 & 0xf000) == 0x8000)) {\n        local_200 = (undefined8 *)(double)local_1b8;\n        dVar21 = (double)FUN_00403ab0();\n        dVar22 = DAT_00408940;\n        if (dVar21 * DAT_00408948 <= DAT_00408940) {\n          dVar22 = (double)FUN_00403ab0();\n          dVar22 = DAT_00408948 * dVar22;\n        }\n        if (dVar22 < (double)local_200) goto LAB_00401fbf;\n        FUN_004058e0(&local_158);\n        local_1ed = FUN_00405980(__stream);\n        if ((local_1ed == '\\0') || (iVar2 = FUN_00406430(__stream), uVar7 = local_158, iVar2 != 0))\n        {\n          uVar10 = FUN_00405580(4,__s1);\n          uVar5 = dcgettext(0,\"cannot read file names from %s\",5);\n          auVar23 = error(1,0,uVar5,uVar10);\n          psVar17 = local_208;\n          local_208 = SUB168(auVar23,0);\n          (*(code *)PTR___libc_start_main_0060bff0)\n                    (FUN_00401d80,psVar17,&local_200,FUN_00407e10,FUN_00407e70,\n                     SUB168(auVar23 >> 0x40,0),&local_208);\n          do {\n                    /* WARNING: Do nothing block with infinite loop */\n          } while( true );\n        }\n        local_1f8 = local_150;\n        unaff_R14 = FUN_004036b0(local_150);\n        if (unaff_R14 == 0) goto LAB_00402696;\n        if (uVar7 != 0) {\n          if ((SUB168(ZEXT816(0x98) * ZEXT816(uVar7),0) < 0) ||\n             (SUB168(ZEXT816(0x98) * ZEXT816(uVar7) >> 0x40,0) != 0)) goto LAB_00402696;\n          goto LAB_00402414;\n        }\n      }\n      else {\nLAB_00401fbf:\n        unaff_R14 = FUN_004036e0(__stream);\n        if (unaff_R14 == 0) goto LAB_00402696;\n        local_1ed = '\\0';\n      }\n      uVar7 = 0;\n      local_200 = (undefined8 *)FUN_004061a0(0x98);\n      *(int *)local_200 = 1;\n      DAT_0060c32c = 1;\n    }\nLAB_00401ff4:\n    param_2 = (undefined8 *)0x0;\n    uVar16 = 1;\n    while (pcVar4 = (char *)FUN_00403720(unaff_R14,local_208), pcVar4 != (char *)0x0) {\n      bVar18 = false;\n      bVar19 = __s1 == (byte *)0x0;\n      if (bVar19) {\n        if (*pcVar4 == '\\0') {\n          dcgettext(0,\"invalid zero-length file name\",5);\n          error(0,0,\"%s\");\nLAB_004021e2:\n          uVar16 = 0;\n        }\n        else {\nLAB_004020e0:\n          lVar9 = 0;\n          if (uVar7 != 0) {\nLAB_004020e7:\n            lVar9 = (long)param_2 * 0x98;\n          }\n          local_1f8 = (undefined8 *)(lVar9 + (long)local_200);\n          iVar2 = strcmp(pcVar4,\"-\");\n          if (iVar2 == 0) {\n            DAT_0060c328 = '\\x01';\n            uVar3 = FUN_00402a20(0,pcVar4,local_1f8,0xffffffffffffffff);\n          }\n          else {\nLAB_0040203a:\n            iVar2 = open(pcVar4,0);\n            if (iVar2 != -1) {\n              local_1ec = iVar2;\n              bVar1 = FUN_00402a20(iVar2,pcVar4,local_1f8,0);\n              local_1f8 = (undefined8 *)((ulong)local_1f8 & 0xffffffffffffff00 | (ulong)bVar1);\n              iVar2 = close(local_1ec);\n              uVar3 = (uint)local_1f8 & 0xff;\n              if (iVar2 == 0) goto LAB_00402082;\n            }\n            FUN_00405650(0,3,pcVar4);\n            piVar8 = __errno_location();\n            error(0,*piVar8,\"%s\");\n            uVar3 = 0;\n          }\nLAB_00402082:\n          uVar16 = uVar16 & uVar3;\n        }\n      }\n      else {\n        lVar9 = 2;\n        pbVar13 = __s1;\n        pbVar14 = &DAT_00409bea;\n        do {\n          if (lVar9 == 0) break;\n          lVar9 = lVar9 + -1;\n          bVar18 = *pbVar13 < *pbVar14;\n          bVar19 = *pbVar13 == *pbVar14;\n          pbVar13 = pbVar13 + (ulong)bVar20 * -2 + 1;\n          pbVar14 = pbVar14 + (ulong)bVar20 * -2 + 1;\n        } while (bVar19);\n        if ((!bVar18 && !bVar19) == bVar18) {\n          iVar2 = strcmp(pcVar4,\"-\");\n          if (iVar2 == 0) {\n            FUN_00405580(4,pcVar4);\n            uVar10 = dcgettext(0,\"when reading file names from stdin, no file name of %s allowed\",5)\n            ;\n            error(0,0,uVar10);\n            if (*pcVar4 != '\\0') goto LAB_004021e2;\n          }\n          else if (*pcVar4 != '\\0') {\n            if (uVar7 != 0) goto LAB_004020e7;\n            local_1f8 = local_200;\n            goto LAB_0040203a;\n          }\n        }\n        else if (*pcVar4 != '\\0') goto LAB_004020e0;\n        uVar10 = FUN_004037b0(unaff_R14);\n        uVar5 = dcgettext(0,\"invalid zero-length file name\",5);\n        uVar6 = FUN_00405650(0,3,__s1);\n        error(0,0,\"%s:%lu: %s\",uVar6,uVar10,uVar5);\n        uVar16 = 0;\n      }\n      if (uVar7 == 0) {\n        *(int *)local_200 = 1;\n      }\n      param_2 = (undefined8 *)((long)param_2 + 1);\n    }\n    if (local_1e8 == 3) {\nLAB_00402696:\n                    /* WARNING: Subroutine does not return */\n      FUN_004063f0();\n    }\n    if (local_1e8 == 4) {\n      __s1 = (byte *)FUN_00405650(0,3,__s1);\n      param_1 = dcgettext(0,\"%s: read error\",5);\n      piVar8 = __errno_location();\n      error(0,*piVar8,param_1,__s1);\n      uVar16 = 0;\n    }\n    else {\n      if (local_1e8 != 2) {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"!\\\"unexpected error code from argv_iter\\\"\",\"src/wc.c\",0x31a,\"main\");\n      }\n      bVar1 = __s1 == (byte *)0x0 & (byte)uVar16;\n      param_1 = (ulong)(uint)bVar1;\n      if ((bVar1 != 0) && (lVar9 = FUN_004037b0(unaff_R14), uVar16 = (uint)bVar1, lVar9 == 0)) {\n        DAT_0060c328 = '\\x01';\n        uVar16 = FUN_00402a20(0,0,local_200,0xffffffffffffffff);\n      }\n    }\n    if (local_1ed != '\\0') {\n      FUN_00405950(&local_158);\n    }\n    uVar7 = FUN_004037b0(unaff_R14);\n    if (1 < uVar7) {\n      uVar10 = dcgettext(0,\"total\",5);\n      FUN_00402850(DAT_0060c358,DAT_0060c350,DAT_0060c348,DAT_0060c340,DAT_0060c338,uVar10);\n    }\n    FUN_004037d0(unaff_R14);\n    free(local_200);\n    if ((DAT_0060c328 == '\\0') || (iVar2 = close(0), iVar2 == 0)) {\n      return (uVar16 ^ 1) & 0xff;\n    }\n    piVar8 = __errno_location();\n    error(1,*piVar8,&DAT_00409bea);\nLAB_0040239b:\n    if (((DAT_0060c332 == 0) && (DAT_0060c331 == 0)) && (DAT_0060c330 == 0)) {\n      DAT_0060c331 = 1;\n      DAT_0060c333 = 1;\n      DAT_0060c334 = 1;\n    }\n    goto LAB_00401f56;\n  }\n  pbVar13 = __s1;\n  if (iVar2 == 99) {\n    DAT_0060c331 = 1;\n    goto LAB_00401e50;\n  }\n  if (iVar2 < 100) {\n    if (iVar2 == -0x82) {\n      lVar9 = FUN_00403350(0);\nLAB_004026cd:\n      param_1 = FUN_00405580(4,param_2[lVar9]);\n      uVar10 = dcgettext(0,\"extra operand %s\",5);\n      error(0,0,uVar10,param_1);\n      uVar10 = dcgettext(0,\"file operands cannot be combined with --files0-from\",5);\n      __fprintf_chk(stderr,1,\"%s\\n\",uVar10);\n    }\n    else {\n      if (iVar2 == 0x4c) {\n        DAT_0060c330 = 1;\n        goto LAB_00401e50;\n      }\n      if (iVar2 == -0x83) {\n        FUN_00406060(stdout,&DAT_00407ef3,\"GNU coreutils\",PTR_DAT_0060c250,\"Paul Rubin\",\n                     \"David MacKenzie\",0);\n                    /* WARNING: Subroutine does not return */\n        exit(0);\n      }\n    }\n  }\n  else {\n    if (iVar2 == 0x6d) goto LAB_00401ee8;\n    if (iVar2 < 0x6e) {\n      if (iVar2 != 0x6c) goto LAB_00401ed7;\n      DAT_0060c334 = 1;\n      goto LAB_00401e50;\n    }\n    if (iVar2 == 0x77) {\n      DAT_0060c333 = 1;\n      goto LAB_00401e50;\n    }\n    pbVar13 = DAT_0060c500;\n    if (iVar2 == 0x80) goto LAB_00401e50;\n  }\nLAB_00401ed7:\n  FUN_00403350(1);\nLAB_00401ee8:\n  DAT_0060c332 = 1;\n  pbVar13 = __s1;\n  goto LAB_00401e50;\n}\n\n",
            "funcName": "FUN_00401d80"
        },
        {
            "funcStartAddr": "0x402770",
            "funcEndAddr": "0x40279b",
            "decompiledFuncCode": "\nvoid FUN_00402770(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_0060bff0)\n            (FUN_00401d80,unaff_retaddr,&stack0x00000008,FUN_00407e10,FUN_00407e70,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "funcName": "FUN_00402770"
        },
        {
            "funcStartAddr": "0x40279b",
            "funcEndAddr": "0x4027ba",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004027a8) */\n/* WARNING: Removing unreachable block (ram,0x004027b2) */\n\nvoid FUN_0040279b(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_0040279b"
        },
        {
            "funcStartAddr": "0x4027ba",
            "funcEndAddr": "0x4027f1",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004027e9) */\n\nvoid FUN_004027ba(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_004027ba"
        },
        {
            "funcStartAddr": "0x4027f1",
            "funcEndAddr": "0x402848",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402826) */\n\nvoid FUN_004027f1(void)\n\n{\n  if (DAT_0060c308 != '\\0') {\n    return;\n  }\n  FUN_0040279b();\n  DAT_0060c308 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_004027f1"
        },
        {
            "funcStartAddr": "0x402848",
            "funcEndAddr": "0x40284d",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004027e9) */\n\nvoid thunk_FUN_004027ba(void)\n\n{\n  return;\n}\n\n",
            "funcName": "thunk_402848"
        },
        {
            "funcStartAddr": "0x402850",
            "funcEndAddr": "0x402a03",
            "decompiledFuncCode": "\nvoid FUN_00402850(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5,char *param_6)\n\n{\n  char *pcVar1;\n  undefined8 uVar2;\n  undefined *puVar3;\n  undefined *puVar4;\n  undefined auStack_58 [40];\n  \n  puVar3 = &DAT_004081e1;\n  if (DAT_0060c334 != '\\0') {\n    uVar2 = FUN_004038f0(param_1,auStack_58);\n    puVar3 = &DAT_004081e0;\n    __printf_chk(1,&DAT_004081e1,DAT_0060c32c,uVar2);\n  }\n  puVar4 = puVar3;\n  if (DAT_0060c333 != '\\0') {\n    uVar2 = FUN_004038f0(param_2,auStack_58);\n    puVar4 = &DAT_004081e0;\n    __printf_chk(1,puVar3,DAT_0060c32c,uVar2);\n  }\n  puVar3 = puVar4;\n  if (DAT_0060c332 != '\\0') {\n    uVar2 = FUN_004038f0(param_3,auStack_58);\n    puVar3 = &DAT_004081e0;\n    __printf_chk(1,puVar4,DAT_0060c32c,uVar2);\n  }\n  puVar4 = puVar3;\n  if (DAT_0060c331 != '\\0') {\n    uVar2 = FUN_004038f0(param_4,auStack_58);\n    puVar4 = &DAT_004081e0;\n    __printf_chk(1,puVar3,DAT_0060c32c,uVar2);\n  }\n  if (DAT_0060c330 != '\\0') {\n    uVar2 = FUN_004038f0(param_5,auStack_58);\n    __printf_chk(1,puVar4,DAT_0060c32c,uVar2);\n  }\n  if (param_6 != (char *)0x0) {\n    pcVar1 = strchr(param_6,10);\n    if (pcVar1 != (char *)0x0) {\n      param_6 = (char *)FUN_00405650(0,3,param_6);\n    }\n    __printf_chk(1,\" %s\",param_6);\n  }\n  pcVar1 = stdout->_IO_write_ptr;\n  if (pcVar1 < stdout->_IO_write_end) {\n    stdout->_IO_write_ptr = pcVar1 + 1;\n    *pcVar1 = '\\n';\n  }\n  else {\n    __overflow(stdout,10);\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00402850"
        },
        {
            "funcStartAddr": "0x402a20",
            "funcEndAddr": "0x4032dd",
            "decompiledFuncCode": "\nchar FUN_00402a20(int param_1,long param_2,int *param_3,long param_4)\n\n{\n  wchar_t __c;\n  mbstate_t mVar1;\n  int iVar2;\n  size_t sVar3;\n  long lVar4;\n  ushort **ppuVar5;\n  long lVar6;\n  __off_t _Var7;\n  undefined8 uVar8;\n  int *piVar9;\n  ulong uVar10;\n  ulong uVar11;\n  byte *pbVar12;\n  long lVar13;\n  ulong uVar14;\n  byte bVar15;\n  byte *pbVar16;\n  byte *pbVar17;\n  char cVar18;\n  bool bVar19;\n  long local_40a0;\n  long local_4090;\n  ulong local_4088;\n  ulong local_4080;\n  byte local_4069;\n  long local_4060;\n  wchar_t local_4054;\n  mbstate_t local_4050;\n  byte local_4048 [16408];\n  \n  local_4060 = param_2;\n  if (param_2 == 0) {\n    local_4060 = dcgettext(0,\"standard input\",5);\n  }\n  sVar3 = __ctype_get_mb_cur_max();\n  cVar18 = DAT_0060c330;\n  bVar15 = DAT_0060c331;\n  if (sVar3 < 2) {\n    local_4069 = 0;\n    if (DAT_0060c331 == 0) {\n      bVar15 = DAT_0060c332;\n    }\n  }\n  else {\n    local_4069 = DAT_0060c332;\n  }\n  if ((DAT_0060c333 == '\\0') && (DAT_0060c330 == '\\0')) {\n    if ((bVar15 == 1) && (local_4069 == 0)) {\n      if (DAT_0060c334 != '\\0') {\n        FUN_004038b0(param_1,0,0,2);\nLAB_0040319a:\n        if (DAT_0060c334 != '\\0') {\nLAB_004031b0:\n          local_4080 = 0;\n          bVar19 = false;\n          local_40a0 = 0;\n          while (uVar11 = FUN_00405ba0(param_1,local_4048,0x4000), uVar11 != 0) {\n            if (uVar11 == 0xffffffffffffffff) {\n              uVar11 = 0;\n              cVar18 = '\\0';\n              uVar10 = 0;\n              local_4090 = 0;\n              uVar8 = FUN_00405650(0,3,local_4060);\n              piVar9 = __errno_location();\n              error(0,*piVar9,\"%s\",uVar8);\n              goto LAB_00402f98;\n            }\n            local_4080 = local_4080 + uVar11;\n            pbVar17 = local_4048 + uVar11;\n            pbVar16 = local_4048;\n            lVar6 = local_40a0;\n            if (bVar19) {\n              while (lVar13 = FUN_004073a0(pbVar16,10,(long)pbVar17 - (long)pbVar16), lVar13 != 0) {\n                pbVar16 = (byte *)(lVar13 + 1);\n                lVar6 = lVar6 + 1;\n              }\n              bVar19 = (ulong)(lVar6 - local_40a0) <= uVar11 / 0xf;\n              local_40a0 = lVar6;\n            }\n            else if (pbVar17 == local_4048) {\n              bVar19 = true;\n            }\n            else {\n              do {\n                pbVar12 = pbVar16 + 1;\n                lVar6 = lVar6 + (ulong)(*pbVar16 == 10);\n                pbVar16 = pbVar12;\n              } while (pbVar17 != pbVar12);\n              bVar19 = (ulong)(lVar6 - local_40a0) <= uVar11 / 0xf;\n              local_40a0 = lVar6;\n            }\n          }\n          uVar11 = 0;\n          uVar10 = 0;\n          local_4090 = 0;\n          cVar18 = '\\x01';\n          goto LAB_00402f98;\n        }\n      }\n      iVar2 = *param_3;\n      if (0 < iVar2) {\n        iVar2 = __fxstat(1,param_1,(stat *)(param_3 + 2));\n        *param_3 = iVar2;\n      }\n      uVar11 = DAT_0060c320;\n      if (((iVar2 == 0) && ((param_3[8] & 0xd000U) == 0x8000)) &&\n         (local_4080 = *(ulong *)(param_3 + 0xe), -1 < (long)local_4080)) {\n        if (param_4 == -1) {\n          uVar10 = lseek(param_1,0,1);\n          if (local_4080 % uVar11 == 0) {\n            bVar15 = (byte)~(byte)(uVar10 >> 0x38) >> 7;\n            goto LAB_00402e8c;\n          }\n          if (local_4080 < uVar10) {\n            uVar11 = 0;\n            uVar10 = 0;\n            local_4090 = 0;\n            cVar18 = '\\x01';\n            local_4080 = 0;\n            local_40a0 = 0;\n            goto LAB_00402f98;\n          }\n          local_4080 = local_4080 - uVar10;\n        }\n        else if (local_4080 % DAT_0060c320 == 0) {\n          bVar15 = 1;\n          uVar10 = 0;\nLAB_00402e8c:\n          uVar11 = 0x201;\n          if (*(long *)(param_3 + 0x10) - 1U < 0x2000000000000000) {\n            uVar11 = *(long *)(param_3 + 0x10) + 1;\n          }\n          lVar6 = local_4080 - local_4080 % uVar11;\n          if (((lVar6 <= (long)uVar10) || (bVar15 == 0)) ||\n             (_Var7 = lseek(param_1,lVar6,1), _Var7 < 0)) goto LAB_00402aba;\n          local_4080 = lVar6 - uVar10;\n          goto LAB_00402ac3;\n        }\n      }\n      else {\nLAB_00402aba:\n        local_4080 = 0;\nLAB_00402ac3:\n        FUN_004038b0(param_1,0,0,2);\n        while (lVar6 = FUN_00405ba0(param_1,local_4048,0x4000), lVar6 != 0) {\n          if (lVar6 == -1) {\n            uVar11 = 0;\n            uVar10 = 0;\n            local_4090 = 0;\n            uVar8 = FUN_00405650(0,3,local_4060);\n            piVar9 = __errno_location();\n            error(0,*piVar9,\"%s\",uVar8);\n            local_40a0 = 0;\n            goto LAB_00402f98;\n          }\n          local_4080 = local_4080 + lVar6;\n        }\n      }\n      uVar11 = 0;\n      uVar10 = 0;\n      local_4090 = 0;\n      cVar18 = '\\x01';\n      local_40a0 = 0;\n      goto LAB_00402f98;\n    }\n    FUN_004038b0(param_1,0,0,2);\n    if (local_4069 != 1) {\n      if (bVar15 != 0) goto LAB_0040319a;\n      if (local_4069 == 0) goto LAB_004031b0;\n    }\n  }\n  else {\n    FUN_004038b0(param_1,0,0,2);\n  }\n  sVar3 = __ctype_get_mb_cur_max();\n  if (sVar3 < 2) {\n    uVar10 = 0;\n    uVar14 = 0;\n    local_4080 = 0;\n    local_40a0 = 0;\n    local_4090 = 0;\n    uVar11 = uVar14;\n    while (lVar6 = FUN_00405ba0(param_1,local_4048,0x4000), lVar6 != 0) {\n      if (lVar6 == -1) {\n        uVar8 = FUN_00405650(0,3,local_4060);\n        cVar18 = '\\0';\n        piVar9 = __errno_location();\n        error(0,*piVar9,\"%s\",uVar8);\n        goto LAB_00403053;\n      }\n      local_4080 = local_4080 + lVar6;\n      pbVar17 = local_4048;\n      do {\n        pbVar16 = pbVar17 + 1;\n        bVar15 = *pbVar17;\n        switch(bVar15) {\n        case 9:\n          uVar11 = (uVar11 & 0xfffffffffffffff8) + 8;\n          break;\n        case 10:\n          local_40a0 = local_40a0 + 1;\n        case 0xc:\n        case 0xd:\n          if (uVar10 < uVar11) {\n            uVar10 = uVar11;\n          }\n          uVar11 = 0;\n          break;\n        case 0xb:\n          break;\n        default:\n          ppuVar5 = __ctype_b_loc();\n          if (((*ppuVar5)[bVar15] & 0x4000) != 0) {\n            uVar11 = uVar11 + 1;\n            if (((*ppuVar5)[bVar15] & 0x2000) != 0) break;\n            local_4090 = 1;\n          }\n          goto LAB_00402dae;\n        case 0x20:\n          uVar11 = uVar11 + 1;\n        }\n        uVar14 = uVar14 + local_4090;\n        local_4090 = 0;\nLAB_00402dae:\n        pbVar17 = pbVar16;\n      } while (pbVar16 != local_4048 + lVar6);\n    }\n    cVar18 = '\\x01';\nLAB_00403053:\n    if (uVar11 <= uVar10) {\n      uVar11 = uVar10;\n    }\n    local_4090 = local_4090 + uVar14;\n    uVar10 = 0;\n  }\n  else {\n    lVar13 = 0;\n    uVar11 = 0;\n    local_4050 = (mbstate_t)0x0;\n    lVar6 = 0;\n    uVar10 = 0;\n    local_4088 = 0;\n    local_4080 = 0;\n    local_4090 = 0;\n    local_40a0 = 0;\n    bVar19 = false;\nLAB_00402b60:\n    lVar4 = FUN_00405ba0(param_1,local_4048 + lVar13,0x4000 - lVar13);\n    if (lVar4 == 0) {\n      cVar18 = '\\x01';\n    }\n    else {\n      if (lVar4 != -1) {\n        local_4080 = local_4080 + lVar4;\n        lVar13 = lVar13 + lVar4;\n        pbVar17 = local_4048;\n        if (bVar19) goto LAB_00402c42;\nLAB_00402ba8:\n        bVar15 = *pbVar17;\n        if ((*(uint *)(&DAT_00408980 + (ulong)(bVar15 >> 5) * 4) >> (bVar15 & 0x1f) & 1) == 0)\n        goto LAB_00402c42;\n        uVar10 = uVar10 + 1;\n        lVar4 = 1;\n        local_4054 = (int)(char)bVar15;\nLAB_00402bd2:\n        pbVar17 = pbVar17 + lVar4;\n        lVar13 = lVar13 - lVar4;\n        switch(local_4054) {\n        case L'\\t':\n          uVar11 = (uVar11 & 0xfffffffffffffff8) + 8;\n          break;\n        case L'\\n':\n          local_40a0 = local_40a0 + 1;\n        case L'\\f':\n        case L'\\r':\n          uVar14 = uVar11;\n          if (uVar11 <= local_4088) {\n            uVar14 = local_4088;\n          }\n          uVar11 = 0;\n          local_4088 = uVar14;\n          break;\n        case L'\\v':\n          break;\n        default:\n          goto LAB_00402cab;\n        case L' ':\n          uVar11 = uVar11 + 1;\n        }\n        do {\n          local_4090 = local_4090 + lVar6;\n          lVar6 = 0;\n          while( true ) {\n            do {\n              while( true ) {\n                if (lVar13 == 0) goto LAB_00402b60;\n                if (!bVar19) goto LAB_00402ba8;\nLAB_00402c42:\n                mVar1 = local_4050;\n                lVar4 = FUN_00407320(&local_4054,pbVar17,lVar13);\n                if (lVar4 == -2) {\n                  local_4050 = mVar1;\n                  if (lVar13 != 0) {\n                    if (lVar13 == 0x4000) {\n                      pbVar17 = pbVar17 + 1;\n                      lVar13 = 0x3fff;\n                    }\n                    __memmove_chk(local_4048,pbVar17,lVar13,0x4001);\n                  }\n                  bVar19 = true;\n                  goto LAB_00402b60;\n                }\n                if (lVar4 != -1) break;\n                pbVar17 = pbVar17 + 1;\n                lVar13 = lVar13 + -1;\n                bVar19 = true;\n              }\n              iVar2 = mbsinit(&local_4050);\n              bVar19 = iVar2 == 0;\n              uVar10 = uVar10 + 1;\n              if (lVar4 != 0) goto LAB_00402bd2;\n              local_4054 = L'\\0';\n              pbVar17 = pbVar17 + 1;\n              lVar13 = lVar13 + -1;\nLAB_00402cab:\n              __c = local_4054;\n              iVar2 = iswprint(local_4054);\n            } while (iVar2 == 0);\n            iVar2 = wcwidth(__c);\n            if (0 < iVar2) {\n              uVar11 = (long)iVar2 + uVar11;\n            }\n            iVar2 = iswspace(local_4054);\n            if (iVar2 != 0) break;\n            lVar6 = 1;\n          }\n        } while( true );\n      }\n      cVar18 = '\\0';\n      uVar8 = FUN_00405650(0,3,local_4060);\n      piVar9 = __errno_location();\n      error(0,*piVar9,\"%s\",uVar8);\n    }\n    if (uVar11 <= local_4088) {\n      uVar11 = local_4088;\n    }\n    local_4090 = local_4090 + lVar6;\n  }\nLAB_00402f98:\n  if (local_4069 < DAT_0060c332) {\n    uVar10 = local_4080;\n  }\n  FUN_00402850(local_40a0,local_4090,uVar10,local_4080,uVar11,param_2);\n  DAT_0060c358 = DAT_0060c358 + local_40a0;\n  DAT_0060c350 = DAT_0060c350 + local_4090;\n  DAT_0060c348 = DAT_0060c348 + uVar10;\n  DAT_0060c340 = DAT_0060c340 + local_4080;\n  if (DAT_0060c338 < uVar11) {\n    DAT_0060c338 = uVar11;\n  }\n  return cVar18;\n}\n\n",
            "funcName": "FUN_00402a20"
        },
        {
            "funcStartAddr": "0x403350",
            "funcEndAddr": "0x4036ad",
            "decompiledFuncCode": "\nvoid FUN_00403350(int param_1)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  byte **ppbVar5;\n  undefined8 uVar7;\n  long lVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  bool bVar11;\n  bool bVar12;\n  byte bVar13;\n  byte *local_88;\n  char *local_80;\n  byte *local_78 [5];\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  char *local_38;\n  char *local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  byte **ppbVar6;\n  \n  uVar7 = DAT_0060c370;\n  bVar13 = 0;\n  if (param_1 != 0) {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar7);\n    goto LAB_0040338f;\n  }\n  uVar3 = dcgettext(0,\"Usage: %s [OPTION]... [FILE]...\\n  or:  %s [OPTION]... --files0-from=F\\n\",5);\n  __printf_chk(1,uVar3,uVar7,uVar7);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"Print newline, word, and byte counts for each FILE, and a total line if\\nmore than one FILE is specified.  A word is a non-zero-length sequence of\\ncharacters delimited by white space.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"\\nWith no FILE, or when FILE is -, read standard input.\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nThe options below may be used to select which counts are printed, always in\\nthe following order: newline, word, character, byte, maximum line length.\\n  -c, --bytes            print the byte counts\\n  -m, --chars            print the character counts\\n  -l, --lines            print the newline counts\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --files0-from=F    read input from the files specified by\\n                           NUL-terminated names in file F;\\n                           If F is - then read names from standard input\\n  -L, --max-line-length  print the maximum display width\\n  -w, --words            print the word counts\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  local_88 = &DAT_00407ef6;\n  local_80 = \"test invocation\";\n  local_78[0] = (byte *)0x407f70;\n  local_78[1] = (byte *)0x407f08;\n  local_78[2] = (byte *)0x407f1e;\n  local_78[3] = (byte *)0x407f28;\n  local_78[4] = (byte *)0x407f37;\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha384sum\";\n  local_40 = \"sha2 utilities\";\n  local_38 = \"sha512sum\";\n  local_30 = \"sha2 utilities\";\n  local_28 = 0;\n  local_20 = 0;\n  ppbVar5 = &local_88;\n  do {\n    ppbVar6 = ppbVar5;\n    ppbVar5 = ppbVar6 + 2;\n    pbVar9 = *ppbVar5;\n    bVar11 = false;\n    bVar12 = pbVar9 == (byte *)0x0;\n    if (bVar12) break;\n    lVar8 = 3;\n    pbVar10 = &DAT_00407ef3;\n    do {\n      if (lVar8 == 0) break;\n      lVar8 = lVar8 + -1;\n      bVar11 = *pbVar10 < *pbVar9;\n      bVar12 = *pbVar10 == *pbVar9;\n      pbVar10 = pbVar10 + (ulong)bVar13 * -2 + 1;\n      pbVar9 = pbVar9 + (ulong)bVar13 * -2 + 1;\n    } while (bVar12);\n  } while ((!bVar11 && !bVar12) != bVar11);\n  pbVar9 = ppbVar6[3];\n  if (pbVar9 == (byte *)0x0) {\n    uVar7 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar7,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\n        pbVar9 = &DAT_00407ef3;\n        goto LAB_00403683;\n      }\n    }\n    pbVar9 = &DAT_00407ef3;\n    uVar7 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar4 = \" invocation\";\n    __printf_chk(1,uVar7,\"https://www.gnu.org/software/coreutils/\",&DAT_00407ef3);\n  }\n  else {\n    uVar7 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar7,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\nLAB_00403683:\n        uVar7 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar7,&DAT_00407ef3);\n      }\n    }\n    pcVar4 = \" invocation\";\n    uVar7 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar7,\"https://www.gnu.org/software/coreutils/\",&DAT_00407ef3);\n    if (pbVar9 != &DAT_00407ef3) {\n      pcVar4 = \"\";\n    }\n  }\n  uVar7 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  __printf_chk(1,uVar7,pbVar9,pcVar4);\nLAB_0040338f:\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n",
            "funcName": "FUN_00403350"
        },
        {
            "funcStartAddr": "0x4036b0",
            "funcEndAddr": "0x4036d4",
            "decompiledFuncCode": "\nvoid FUN_004036b0(undefined8 param_1)\n\n{\n  undefined8 *puVar1;\n  \n  puVar1 = (undefined8 *)malloc(0x30);\n  if (puVar1 != (undefined8 *)0x0) {\n    *puVar1 = 0;\n    puVar1[4] = param_1;\n    puVar1[5] = param_1;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_004036b0"
        },
        {
            "funcStartAddr": "0x4036e0",
            "funcEndAddr": "0x403718",
            "decompiledFuncCode": "\nvoid FUN_004036e0(undefined8 param_1)\n\n{\n  undefined8 *puVar1;\n  \n  puVar1 = (undefined8 *)malloc(0x30);\n  if (puVar1 != (undefined8 *)0x0) {\n    *puVar1 = param_1;\n    puVar1[2] = 0;\n    puVar1[3] = 0;\n    puVar1[1] = 0;\n    puVar1[4] = 0;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_004036e0"
        },
        {
            "funcStartAddr": "0x403720",
            "funcEndAddr": "0x40379b",
            "decompiledFuncCode": "\nFILE * FUN_00403720(FILE **param_1,int *param_2)\n\n{\n  int iVar1;\n  __ssize_t _Var2;\n  FILE *pFVar3;\n  FILE *pFVar4;\n  \n  if (*param_1 != (FILE *)0x0) {\n    _Var2 = getdelim((char **)(param_1 + 2),(size_t *)(param_1 + 3),0,*param_1);\n    if (_Var2 < 0) {\n      iVar1 = feof(*param_1);\n      *param_2 = (-(uint)(iVar1 == 0) & 2) + 2;\n      pFVar4 = (FILE *)0x0;\n    }\n    else {\n      *param_2 = 1;\n      pFVar4 = param_1[2];\n      param_1[1] = (FILE *)((long)&param_1[1]->_flags + 1);\n    }\n    return pFVar4;\n  }\n  pFVar4 = param_1[5];\n  pFVar3 = *(FILE **)pFVar4;\n  if (pFVar3 != (FILE *)0x0) {\n    *param_2 = 1;\n    param_1[5] = (FILE *)&pFVar4->_IO_read_ptr;\n    return pFVar3;\n  }\n  *param_2 = 2;\n  return pFVar3;\n}\n\n",
            "funcName": "FUN_00403720"
        },
        {
            "funcStartAddr": "0x4037b0",
            "funcEndAddr": "0x4037c8",
            "decompiledFuncCode": "\nlong FUN_004037b0(long *param_1)\n\n{\n  if (*param_1 != 0) {\n    return param_1[1];\n  }\n  return param_1[5] - param_1[4] >> 3;\n}\n\n",
            "funcName": "FUN_004037b0"
        },
        {
            "funcStartAddr": "0x4037d0",
            "funcEndAddr": "0x4037ec",
            "decompiledFuncCode": "\nvoid FUN_004037d0(long *param_1)\n\n{\n  if (*param_1 != 0) {\n    free((void *)param_1[2]);\n  }\n  free(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_004037d0"
        },
        {
            "funcStartAddr": "0x4037f0",
            "funcEndAddr": "0x4037f8",
            "decompiledFuncCode": "\nvoid FUN_004037f0(undefined8 param_1)\n\n{\n  DAT_0060c368 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_004037f0"
        },
        {
            "funcStartAddr": "0x403800",
            "funcEndAddr": "0x403808",
            "decompiledFuncCode": "\nvoid FUN_00403800(undefined param_1)\n\n{\n  DAT_0060c360 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00403800"
        },
        {
            "funcStartAddr": "0x403810",
            "funcEndAddr": "0x4038ae",
            "decompiledFuncCode": "\nvoid FUN_00403810(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_004077e0(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_0060c360 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_0060c368 == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = FUN_00405620();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_0040388e;\n    }\n  }\n  iVar1 = FUN_004077e0(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_0040388e:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_0060c258);\n}\n\n",
            "funcName": "FUN_00403810"
        },
        {
            "funcStartAddr": "0x4038b0",
            "funcEndAddr": "0x4038b5",
            "decompiledFuncCode": "\nvoid FUN_004038b0(void)\n\n{\n  (*(code *)PTR_posix_fadvise_0060c0f8)();\n  return;\n}\n\n",
            "funcName": "FUN_004038b0"
        },
        {
            "funcStartAddr": "0x4038c0",
            "funcEndAddr": "0x4038dc",
            "decompiledFuncCode": "\nvoid FUN_004038c0(FILE *param_1,int param_2)\n\n{\n  int __fd;\n  \n  if (param_1 != (FILE *)0x0) {\n    __fd = fileno(param_1);\n    posix_fadvise(__fd,0,0,param_2);\n    return;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_004038c0"
        },
        {
            "funcStartAddr": "0x4038f0",
            "funcEndAddr": "0x403934",
            "decompiledFuncCode": "\nchar * FUN_004038f0(ulong param_1,long param_2)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  \n  pcVar2 = (char *)(param_2 + 0x14);\n  *(undefined *)(param_2 + 0x14) = 0;\n  do {\n    pcVar2 = pcVar2 + -1;\n    *pcVar2 = (char)param_1 + (char)(param_1 / 10) * -10 + '0';\n    bVar1 = 9 < param_1;\n    param_1 = param_1 / 10;\n  } while (bVar1);\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_004038f0"
        },
        {
            "funcStartAddr": "0x403940",
            "funcEndAddr": "0x40395f",
            "decompiledFuncCode": "\nuint FUN_00403940(wchar_t param_1)\n\n{\n  uint uVar1;\n  int iVar2;\n  \n  uVar1 = wcwidth(param_1);\n  if (-1 < (int)uVar1) {\n    return uVar1;\n  }\n  iVar2 = iswcntrl(param_1);\n  return (uint)(iVar2 == 0);\n}\n\n",
            "funcName": "FUN_00403940"
        },
        {
            "funcStartAddr": "0x403970",
            "funcEndAddr": "0x4039c1",
            "decompiledFuncCode": "\nvoid FUN_00403970(void **param_1,void **param_2)\n\n{\n  char cVar1;\n  void **__src;\n  void *pvVar2;\n  void *__n;\n  \n  __src = (void **)*param_2;\n  __n = param_2[1];\n  if (__src == param_2 + 3) {\n    pvVar2 = memcpy(param_1 + 3,__src,(size_t)__n);\n    __n = param_2[1];\n    *param_1 = pvVar2;\n  }\n  else {\n    *param_1 = __src;\n  }\n  cVar1 = *(char *)(param_2 + 2);\n  param_1[1] = __n;\n  *(char *)(param_1 + 2) = cVar1;\n  if (cVar1 != '\\0') {\n    *(undefined4 *)((long)param_1 + 0x14) = *(undefined4 *)((long)param_2 + 0x14);\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00403970"
        },
        {
            "funcStartAddr": "0x4039d0",
            "funcEndAddr": "0x4039e7",
            "decompiledFuncCode": "\nuint FUN_004039d0(byte param_1)\n\n{\n  return *(uint *)(&DAT_00408980 + (ulong)(param_1 >> 5) * 4) >> (param_1 & 0x1f) & 1;\n}\n\n",
            "funcName": "FUN_004039d0"
        },
        {
            "funcStartAddr": "0x4039f0",
            "funcEndAddr": "0x403a9e",
            "decompiledFuncCode": "\ndouble FUN_004039f0(void)\n\n{\n  int iVar1;\n  long lVar2;\n  double dVar3;\n  double dVar4;\n  sysinfo local_78;\n  \n  lVar2 = sysconf(0x55);\n  dVar3 = (double)lVar2;\n  lVar2 = sysconf(0x1e);\n  if ((dVar3 < 0.0) || (dVar4 = (double)lVar2, dVar4 < 0.0)) {\n    iVar1 = sysinfo(&local_78);\n    if (iVar1 != 0) {\n      return DAT_004089a0;\n    }\n    if ((long)local_78.totalram < 0) {\n      dVar3 = (double)(local_78.totalram >> 1 | (ulong)((uint)local_78.totalram & 1));\n      dVar3 = dVar3 + dVar3;\n    }\n    else {\n      dVar3 = (double)local_78.totalram;\n    }\n    dVar4 = (double)(ulong)local_78.mem_unit;\n  }\n  return dVar3 * dVar4;\n}\n\n",
            "funcName": "FUN_004039f0"
        },
        {
            "funcStartAddr": "0x403ab0",
            "funcEndAddr": "0x403b9d",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\ndouble FUN_00403ab0(void)\n\n{\n  int iVar1;\n  long lVar2;\n  double dVar3;\n  double dVar4;\n  sysinfo local_78;\n  \n  lVar2 = sysconf(0x56);\n  dVar3 = (double)lVar2;\n  lVar2 = sysconf(0x1e);\n  if ((0.0 <= dVar3) && (dVar4 = (double)lVar2, 0.0 <= dVar4)) goto LAB_00403b3e;\n  iVar1 = sysinfo(&local_78);\n  if (iVar1 != 0) {\n    dVar3 = (double)FUN_004039f0();\n    return dVar3 * _DAT_004089a8;\n  }\n  if ((long)local_78.freeram < 0) {\n    dVar3 = (double)(local_78.freeram >> 1 | (ulong)((uint)local_78.freeram & 1));\n    dVar3 = dVar3 + dVar3;\n    if ((long)local_78.bufferram < 0) goto LAB_00403b8b;\nLAB_00403b24:\n    dVar4 = (double)local_78.bufferram;\n  }\n  else {\n    dVar3 = (double)local_78.freeram;\n    if (-1 < (long)local_78.bufferram) goto LAB_00403b24;\nLAB_00403b8b:\n    dVar4 = (double)(local_78.bufferram >> 1 | (ulong)((uint)local_78.bufferram & 1));\n    dVar4 = dVar4 + dVar4;\n  }\n  dVar3 = dVar3 + dVar4;\n  dVar4 = (double)(ulong)local_78.mem_unit;\nLAB_00403b3e:\n  return dVar3 * dVar4;\n}\n\n",
            "funcName": "FUN_00403ab0"
        },
        {
            "funcStartAddr": "0x403bb0",
            "funcEndAddr": "0x403c49",
            "decompiledFuncCode": "\nvoid FUN_00403bb0(byte *param_1)\n\n{\n  byte *pbVar1;\n  char *pcVar2;\n  long lVar3;\n  ulong uVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  byte bVar10;\n  \n  bVar10 = 0;\n  if (param_1 == (byte *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar2 = strrchr((char *)param_1,0x2f);\n  if (pcVar2 != (char *)0x0) {\n    pbVar1 = (byte *)(pcVar2 + 1);\n    uVar4 = (long)pbVar1 - (long)param_1;\n    bVar7 = uVar4 < 6;\n    bVar9 = uVar4 == 6;\n    if (6 < (long)uVar4) {\n      lVar3 = 7;\n      pbVar5 = (byte *)(pcVar2 + -6);\n      pbVar6 = (byte *)\"/.libs/\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar5 < *pbVar6;\n        bVar9 = *pbVar5 == *pbVar6;\n        pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      bVar8 = false;\n      bVar7 = (!bVar7 && !bVar9) == bVar7;\n      if (bVar7) {\n        lVar3 = 3;\n        pbVar5 = pbVar1;\n        pbVar6 = &DAT_004089f0;\n        do {\n          if (lVar3 == 0) break;\n          lVar3 = lVar3 + -1;\n          bVar8 = *pbVar5 < *pbVar6;\n          bVar7 = *pbVar5 == *pbVar6;\n          pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n          pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        } while (bVar7);\n        param_1 = pbVar1;\n        if ((!bVar8 && !bVar7) == bVar8) {\n          param_1 = (byte *)(pcVar2 + 4);\n          program_invocation_short_name = param_1;\n        }\n      }\n    }\n  }\n  DAT_0060c370 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00403bb0"
        },
        {
            "funcStartAddr": "0x403c50",
            "funcEndAddr": "0x403d2f",
            "decompiledFuncCode": "\nchar * FUN_00403c50(char *param_1,int param_2)\n\n{\n  char cVar1;\n  char *pcVar2;\n  byte *pbVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    pbVar3 = (byte *)FUN_004078a0();\n    if ((*pbVar3 & 0xdf) == 0x55) {\n      if (((((pbVar3[1] & 0xdf) != 0x54) || ((pbVar3[2] & 0xdf) != 0x46)) || (pbVar3[3] != 0x2d)) ||\n         ((pbVar3[4] != 0x38 || (pbVar3[5] != 0)))) {\nLAB_00403d28:\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_00408a01;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_004089f6;\n      }\n    }\n    else {\n      if (((((*pbVar3 & 0xdf) != 0x47) || ((pbVar3[1] & 0xdf) != 0x42)) || (pbVar3[2] != 0x31)) ||\n         (((pbVar3[3] != 0x38 || (pbVar3[4] != 0x30)) ||\n          ((pbVar3[5] != 0x33 || ((pbVar3[6] != 0x30 || (pbVar3[7] != 0)))))))) goto LAB_00403d28;\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_004089fd;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_004089fa;\n      }\n    }\n  }\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_00403c50"
        },
        {
            "funcStartAddr": "0x403d50",
            "funcEndAddr": "0x404e83",
            "decompiledFuncCode": "\nulong FUN_00403d50(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  ulong uVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ulong uVar9;\n  ushort **ppuVar10;\n  long lVar11;\n  char *pcVar12;\n  byte bVar13;\n  char cVar14;\n  ulong uVar15;\n  ulong uVar16;\n  byte bVar17;\n  uint uVar18;\n  ulong uVar19;\n  bool bVar20;\n  ulong uVar21;\n  ulong uVar22;\n  bool bVar23;\n  bool bVar24;\n  bool bVar25;\n  bool bVar26;\n  size_t local_a0;\n  char *local_78;\n  ulong local_70;\n  bool local_5c;\n  bool local_5b;\n  wint_t local_44;\n  mbstate_t local_40 [2];\n  \n  sVar8 = __ctype_get_mb_cur_max();\n  uVar18 = param_6 & 2;\n  local_5c = uVar18 != 0;\n  uVar9 = param_2;\n  switch(param_5) {\n  case 0:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = false;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar18 != 0) {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = false;\n      local_a0 = 1;\n      local_78 = \"\\'\";\n      break;\n    }\n    bVar6 = false;\nLAB_004049a1:\n    if (param_2 != 0) {\n      bVar3 = false;\n      local_5b = false;\n      bVar2 = true;\n      local_70 = 0;\n      goto LAB_004045d6;\n    }\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 1;\n    param_5 = 2;\n    local_70 = 0;\n    local_5b = false;\n    local_5c = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 3:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 4:\n    if (uVar18 == 0) {\n      bVar6 = true;\n      goto LAB_004049a1;\n    }\n  case 1:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 5:\n    if (uVar18 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      local_5b = false;\n      local_70 = 0;\n      bVar2 = true;\n      bVar3 = false;\n      local_5c = false;\n      uVar15 = 1;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    else {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 5;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\\"\";\n    break;\n  case 7:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = true;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      param_8 = (char *)FUN_00403c50(&DAT_00408a05,param_5);\n      param_9 = (char *)FUN_00403c50(&DAT_00409bd7);\n    }\n    uVar15 = 0;\n    if (uVar18 == 0) {\n      cVar14 = *param_8;\n      while (cVar14 != '\\0') {\n        if (uVar15 < param_2) {\n          param_1[uVar15] = cVar14;\n        }\n        uVar15 = uVar15 + 1;\n        cVar14 = param_8[uVar15];\n      }\n    }\n    local_a0 = strlen(param_9);\n    bVar2 = true;\n    bVar3 = false;\n    local_78 = param_9;\n    local_5b = false;\n    local_70 = 0;\n    bVar6 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\nLAB_00403de8:\n  uVar22 = 0;\n  bVar5 = local_5b;\nLAB_00403df8:\n  bVar23 = param_4 != uVar22;\n  if (param_4 == 0xffffffffffffffff) {\n    bVar23 = param_3[uVar22] != '\\0';\n  }\n  bVar26 = bVar6;\n  if (!bVar23) goto LAB_00404578;\n  bVar20 = (bool)(param_5 != 2 & bVar6);\n  __s1 = (byte *)(param_3 + uVar22);\n  uVar16 = uVar15;\n  bVar4 = bVar3;\n  if (bVar20) {\n    if (local_a0 == 0) {\nLAB_004044f0:\n      uVar19 = (ulong)*__s1;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00404502_caseD_0;\n      default:\n        bVar20 = false;\n        goto switchD_0040436e_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00404205;\n      case 8:\n        bVar17 = 0x62;\n        break;\n      case 9:\nswitchD_00404502_caseD_9:\n        bVar17 = 0x74;\n        break;\n      case 10:\nswitchD_00404502_caseD_a:\n        bVar17 = 0x6e;\n        break;\n      case 0xb:\nswitchD_00404502_caseD_b:\n        bVar17 = 0x76;\n        goto LAB_00404205;\n      case 0xc:\nswitchD_00404502_caseD_c:\n        bVar17 = 0x66;\nLAB_00404205:\n        if (local_5c) {\n          bVar25 = false;\n          goto LAB_00404158;\n        }\nLAB_00404210:\n        bVar23 = false;\n        goto LAB_00403fcb;\n      case 0xd:\n        bVar20 = false;\nswitchD_00403ee8_caseD_d:\n        bVar25 = param_5 == 2;\n        uVar19 = 0xd;\n        bVar13 = 0x72;\n        goto LAB_00404120;\n      case 0x20:\n        bVar25 = false;\nLAB_0040454a:\n        uVar19 = 0x20;\n        goto LAB_00404512;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar20 = false;\nswitchD_00403ee8_caseD_21:\n        bVar25 = false;\n        goto LAB_0040412b;\n      case 0x23:\n      case 0x7e:\n        bVar26 = false;\nLAB_0040452a:\n        if (uVar22 == 0) {\n          bVar25 = false;\n          bVar23 = bVar20;\n          bVar20 = bVar26;\n          goto LAB_00403f38;\n        }\n        bVar23 = false;\n        goto LAB_00403f4f;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar25 = false;\nLAB_00404512:\n        bVar24 = false;\n        bVar23 = bVar20;\n        bVar20 = bVar25;\n        goto LAB_00403f51;\n      case 0x27:\n        bVar20 = false;\n        goto switchD_0040436e_caseD_27;\n      case 0x3f:\n        bVar20 = false;\n        goto switchD_0040436e_caseD_3f;\n      case 0x5c:\n        bVar20 = false;\n        goto switchD_00403ee8_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        bVar20 = false;\n        goto switchD_0040436e_caseD_7b;\n      }\n      bVar25 = false;\n      bVar23 = false;\n      goto joined_r0x00404147;\n    }\n    if ((param_4 == 0xffffffffffffffff) && (1 < local_a0)) {\n      param_4 = strlen(param_3);\n    }\n    if ((param_4 < uVar22 + local_a0) || (iVar7 = memcmp(__s1,local_78,local_a0), iVar7 != 0))\n    goto LAB_004044f0;\n    if (!local_5c) {\n      uVar19 = (ulong)*__s1;\n      bVar25 = bVar20;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00403ee8_caseD_0;\n      default:\n        goto switchD_0040436e_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00404210;\n      case 8:\n        bVar25 = false;\n        bVar23 = false;\n        bVar17 = 0x62;\n        break;\n      case 9:\n        goto switchD_00404502_caseD_9;\n      case 10:\n        goto switchD_00404502_caseD_a;\n      case 0xb:\n        goto switchD_00404502_caseD_b;\n      case 0xc:\n        goto switchD_00404502_caseD_c;\n      case 0xd:\n        goto switchD_00403ee8_caseD_d;\n      case 0x20:\n        goto LAB_0040454a;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        goto switchD_00403ee8_caseD_21;\n      case 0x23:\n      case 0x7e:\n        bVar26 = bVar20;\n        goto LAB_0040452a;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        goto LAB_00404512;\n      case 0x27:\n        goto switchD_0040436e_caseD_27;\n      case 0x3f:\n        goto switchD_0040436e_caseD_3f;\n      case 0x5c:\n        goto switchD_00403ee8_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        goto switchD_0040436e_caseD_7b;\n      }\n      goto LAB_00403f92;\n    }\n    goto LAB_0040416a;\n  }\n  uVar19 = (ulong)*__s1;\n  switch(uVar19) {\n  case 0:\n    if (bVar6) {\nswitchD_00404502_caseD_0:\n      if (!local_5c) {\n        bVar20 = false;\nswitchD_00403ee8_caseD_0:\n        bVar26 = param_5 == 2;\n        bVar24 = (bool)((bVar3 ^ 1U) & bVar26);\n        if (bVar24) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar16 = uVar15 + 3;\n          bVar3 = bVar24;\n          if (uVar9 <= uVar15 + 3) {\n            uVar16 = uVar15 + 4;\n            bVar23 = false;\n            bVar17 = 0x30;\n            bVar4 = bVar24;\n            goto LAB_00404048;\n          }\nLAB_0040428a:\n          param_1[uVar16] = 0x5c;\n          uVar15 = uVar16;\n        }\n        else if (uVar15 < uVar9) goto LAB_0040428a;\n        uVar16 = uVar15 + 1;\n        bVar24 = bVar23;\n        if (param_5 == 2) {\n          bVar17 = 0x30;\n          bVar23 = false;\n          bVar4 = bVar3;\n          goto LAB_00404048;\n        }\n        uVar19 = 0x30;\n        if ((uVar22 + 1 < param_4) && ((byte)(param_3[uVar22 + 1] - 0x30U) < 10)) {\n          if (uVar16 < uVar9) {\n            param_1[uVar16] = 0x30;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x30;\n          }\n          uVar16 = uVar15 + 3;\n          uVar19 = 0x30;\n        }\nLAB_004042c9:\n        bVar17 = (byte)uVar19;\n        bVar23 = false;\n        uVar15 = uVar16;\n        bVar4 = bVar3;\n        if ((bool)(bVar6 ^ 1U | bVar26)) goto LAB_00404048;\n        goto LAB_00403f51;\n      }\n      bVar26 = param_5 == 2;\n      goto LAB_0040415c;\n    }\n    if ((param_6 & 1) == 0) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0;\n      bVar23 = false;\n      bVar20 = false;\n      goto LAB_00403f38;\n    }\n    uVar22 = uVar22 + 1;\n    goto LAB_00403df8;\n  default:\nswitchD_0040436e_caseD_1:\n    bVar25 = bVar6;\n    if (sVar8 != 1) {\n      local_40[0] = (mbstate_t)0x0;\n      if (param_4 == 0xffffffffffffffff) {\n        param_4 = strlen(param_3);\n      }\n      uVar21 = 0;\n      do {\n        uVar1 = uVar22 + uVar21;\n        lVar11 = FUN_00407320(&local_44,param_3 + uVar1,param_4 - uVar1,local_40);\n        if (lVar11 == 0) break;\n        if (lVar11 == -1) {\n          bVar23 = false;\n          goto LAB_00404c7a;\n        }\n        if (lVar11 == -2) {\n          if ((param_4 <= uVar1) || (param_3[uVar1] == '\\0')) goto LAB_00404db7;\n          goto LAB_00404da7;\n        }\n        if (((param_5 == 2) && (local_5c)) && (lVar11 != 1)) {\n          pcVar12 = param_3 + uVar1 + 1;\n          do {\n            if (((byte)(*pcVar12 + 0xa5U) < 0x22) &&\n               ((1L << (*pcVar12 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n              param_5 = 2;\n              goto LAB_0040415c;\n            }\n            pcVar12 = pcVar12 + 1;\n          } while (param_3 + uVar1 + lVar11 != pcVar12);\n        }\n        iVar7 = iswprint(local_44);\n        if (iVar7 == 0) {\n          bVar23 = false;\n        }\n        uVar21 = uVar21 + lVar11;\n        iVar7 = mbsinit(local_40);\n      } while (iVar7 == 0);\n      bVar25 = (bool)((bVar23 ^ 1U) & bVar6);\n      goto LAB_00404c7a;\n    }\n    ppuVar10 = __ctype_b_loc();\n    uVar21 = 1;\n    bVar25 = ((*ppuVar10)[uVar19] & 0x4000) == 0;\n    bVar23 = !bVar25;\n    bVar25 = (bool)(bVar25 & bVar6);\n    goto LAB_00404344;\n  case 7:\n    bVar25 = param_5 == 2;\n    uVar19 = 7;\n    bVar13 = 0x61;\n    break;\n  case 8:\n    bVar25 = param_5 == 2;\n    uVar19 = 8;\n    bVar13 = 0x62;\n    break;\n  case 9:\n    uVar19 = 9;\n    bVar13 = 0x74;\n    goto LAB_00404382;\n  case 10:\n    uVar19 = 10;\n    bVar13 = 0x6e;\n    goto LAB_00404382;\n  case 0xb:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xb;\n    bVar13 = 0x76;\n    break;\n  case 0xc:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xc;\n    bVar13 = 0x66;\n    break;\n  case 0xd:\n    uVar19 = 0xd;\n    bVar13 = 0x72;\nLAB_00404382:\n    bVar25 = param_5 == 2;\n    bVar20 = (bool)(local_5c & bVar25);\n    if (bVar20) {\nLAB_0040439a:\n      param_5 = 2;\n      goto LAB_0040415c;\n    }\n    break;\n  case 0x20:\n    uVar19 = 0x20;\n    goto LAB_00403f26;\n  case 0x21:\n  case 0x22:\n  case 0x24:\n  case 0x26:\n  case 0x28:\n  case 0x29:\n  case 0x2a:\n  case 0x3b:\n  case 0x3c:\n  case 0x3d:\n  case 0x3e:\n  case 0x5b:\n  case 0x5e:\n  case 0x60:\n  case 0x7c:\n    bVar23 = false;\nLAB_00403f26:\n    bVar25 = param_5 == 2;\n    if ((local_5c) && (bVar25)) goto LAB_0040439a;\n    goto LAB_00403f38;\n  case 0x23:\n  case 0x7e:\nLAB_00403f1d:\n    bVar25 = param_5 == 2;\n    if (uVar22 == 0) goto LAB_00403f26;\n    goto LAB_0040412b;\n  case 0x25:\n  case 0x2b:\n  case 0x2c:\n  case 0x2d:\n  case 0x2e:\n  case 0x2f:\n  case 0x30:\n  case 0x31:\n  case 0x32:\n  case 0x33:\n  case 0x34:\n  case 0x35:\n  case 0x36:\n  case 0x37:\n  case 0x38:\n  case 0x39:\n  case 0x3a:\n  case 0x41:\n  case 0x42:\n  case 0x43:\n  case 0x44:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x48:\n  case 0x49:\n  case 0x4a:\n  case 0x4b:\n  case 0x4c:\n  case 0x4d:\n  case 0x4e:\n  case 0x4f:\n  case 0x50:\n  case 0x51:\n  case 0x52:\n  case 0x53:\n  case 0x54:\n  case 0x55:\n  case 0x56:\n  case 0x57:\n  case 0x58:\n  case 0x59:\n  case 0x5a:\n  case 0x5d:\n  case 0x5f:\n  case 0x61:\n  case 0x62:\n  case 99:\n  case 100:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n  case 0x68:\n  case 0x69:\n  case 0x6a:\n  case 0x6b:\n  case 0x6c:\n  case 0x6d:\n  case 0x6e:\n  case 0x6f:\n  case 0x70:\n  case 0x71:\n  case 0x72:\n  case 0x73:\n  case 0x74:\n  case 0x75:\n  case 0x76:\n  case 0x77:\n  case 0x78:\n  case 0x79:\n  case 0x7a:\n    goto switchD_0040436e_caseD_25;\n  case 0x27:\nswitchD_0040436e_caseD_27:\n    bVar5 = bVar23;\n    if (param_5 != 2) {\n      bVar25 = false;\n      uVar19 = 0x27;\n      goto LAB_00403f38;\n    }\n    if (!local_5c) {\n      if ((uVar9 == 0) || (uVar19 = 0, uVar21 = uVar9, local_70 != 0)) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x5c;\n        }\n        uVar19 = uVar9;\n        uVar21 = local_70;\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x27;\n        }\n      }\n      uVar16 = uVar15 + 3;\n      bVar17 = 0x27;\n      uVar9 = uVar19;\n      local_70 = uVar21;\n      bVar24 = false;\n      bVar4 = false;\n      goto LAB_00404048;\n    }\n    goto LAB_0040415c;\n  case 0x3f:\nswitchD_0040436e_caseD_3f:\n    if (param_5 == 2) {\n      if (!local_5c) {\n        bVar17 = 0x3f;\n        bVar24 = false;\n        bVar23 = false;\n        goto LAB_00404048;\n      }\n      goto LAB_0040415c;\n    }\n    if (param_5 != 5) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0x3f;\n      bVar23 = false;\n      goto LAB_00403f38;\n    }\n    if (((((param_6 & 4) != 0) && (uVar21 = uVar22 + 2, uVar21 < param_4)) &&\n        (param_3[uVar22 + 1] == '?')) &&\n       ((uVar19 = (ulong)(byte)param_3[uVar21], (byte)param_3[uVar21] < 0x3f &&\n        ((0x7000a38200000000U >> (uVar19 & 0x3f) & 1) != 0)))) {\n      if (!local_5c) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x3f;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x22;\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x22;\n        }\n        if (uVar15 + 3 < uVar9) {\n          param_1[uVar15 + 3] = 0x3f;\n        }\n        uVar16 = uVar15 + 4;\n        bVar26 = false;\n        uVar22 = uVar21;\n        bVar24 = false;\n        goto LAB_004042c9;\n      }\n      goto LAB_0040416a;\n    }\n    bVar25 = false;\n    uVar19 = 0x3f;\n    bVar23 = false;\n    goto LAB_00403f38;\n  case 0x5c:\n    if (param_5 != 2) {\nswitchD_00403ee8_caseD_5c:\n      uVar19 = 0x5c;\n      bVar17 = 0x5c;\n      bVar13 = 0x5c;\n      bVar25 = (bool)(bVar6 & local_5c & local_a0 != 0);\n      if (!bVar25) break;\n      uVar22 = uVar22 + 1;\n      bVar23 = false;\n      goto LAB_00404064;\n    }\n    if (local_5c) goto LAB_0040415c;\n    uVar22 = uVar22 + 1;\n    bVar23 = false;\n    bVar17 = 0x5c;\n    goto LAB_00404064;\n  case 0x7b:\n  case 0x7d:\nswitchD_0040436e_caseD_7b:\n    bVar24 = param_4 != 1;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar24 = param_3[1] != '\\0';\n    }\n    bVar25 = param_5 == 2;\n    if (!bVar24) goto LAB_00403f1d;\n    goto LAB_0040412b;\n  }\nLAB_00404120:\n  if (!bVar6) {\nLAB_0040412b:\n    bVar23 = false;\n    goto LAB_00403f38;\n  }\n  bVar23 = false;\n  bVar17 = bVar13;\n  goto joined_r0x00404147;\nLAB_00404578:\n  if ((uVar15 == 0) && ((bool)(local_5c & param_5 == 2))) {\n    param_5 = 2;\nLAB_0040415c:\n    if (bVar26) {\n      param_5 = 4;\n    }\nLAB_0040416a:\n    uVar9 = FUN_00403d50(param_1,uVar9,param_3,param_4,param_5,param_6 & 0xfffffffd,0,param_8,\n                         param_9);\n    return uVar9;\n  }\n  bVar26 = (bool)(param_5 == 2 & (local_5c ^ 1U));\n  bVar23 = (bool)(local_5c ^ 1U);\n  if ((!bVar26) || (bVar23 = bVar26, !bVar5)) {\nLAB_00404e4d:\n    uVar22 = uVar15;\n    if (((local_78 != (char *)0x0) && (bVar23)) && (cVar14 = *local_78, cVar14 != '\\0')) {\n      do {\n        if (uVar22 < uVar9) {\n          param_1[uVar22] = cVar14;\n        }\n        uVar22 = uVar22 + 1;\n        cVar14 = local_78[uVar22 - uVar15];\n      } while (cVar14 != '\\0');\n    }\n    if (uVar22 < uVar9) {\n      param_1[uVar22] = 0;\n    }\n    return uVar22;\n  }\n  if (bVar2) {\n    uVar9 = FUN_00403d50(param_1,local_70,param_3,param_4,5,param_6,param_7,param_8,param_9);\n    return uVar9;\n  }\n  local_5b = uVar9 == 0 && local_70 != 0;\n  param_2 = local_70;\n  bVar23 = bVar5;\n  if (uVar9 != 0 || local_70 == 0) goto LAB_00404e4d;\nLAB_004045d6:\n  *param_1 = 0x27;\n  param_5 = 2;\n  uVar15 = 1;\n  local_78 = \"\\'\";\n  local_a0 = 1;\n  local_5c = false;\n  uVar9 = param_2;\n  goto LAB_00403de8;\n  while (__s1[uVar21] != 0) {\nLAB_00404da7:\n    uVar21 = uVar21 + 1;\n    if (param_4 <= uVar22 + uVar21) break;\n  }\nLAB_00404db7:\n  bVar23 = false;\nLAB_00404c7a:\n  if (1 < uVar21) {\nLAB_0040483e:\n    bVar26 = false;\n    uVar21 = uVar21 + uVar22;\n    uVar16 = uVar22;\n    do {\n      bVar17 = (byte)uVar19;\n      if (bVar25) {\n        bVar26 = param_5 == 2;\n        if (local_5c) goto LAB_0040415c;\n        bVar26 = (bool)(bVar26 & (bVar4 ^ 1U));\n        if (bVar26) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar15 = uVar15 + 3;\n          bVar4 = bVar26;\n        }\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x5c;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = (char)(uVar19 >> 6) + '0';\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = ((byte)(uVar19 >> 3) & 7) + 0x30;\n        }\n        uVar22 = uVar16 + 1;\n        uVar15 = uVar15 + 3;\n        bVar17 = (bVar17 & 7) + 0x30;\n        bVar26 = bVar25;\n        if (uVar21 <= uVar22) goto LAB_00403fdd;\n      }\n      else {\n        bVar3 = (bool)((bVar26 ^ 1U) & bVar4);\n        if (bVar20) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x5c;\n          }\n          uVar15 = uVar15 + 1;\n        }\n        uVar22 = uVar16 + 1;\n        if (uVar21 <= uVar22) goto LAB_00404064;\n        if (bVar3) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x27;\n          }\n          uVar15 = uVar15 + 2;\n          bVar20 = false;\n          bVar4 = false;\n        }\n        else {\n          bVar20 = false;\n        }\n      }\n      uVar16 = uVar16 + 1;\n      if (uVar15 < uVar9) {\n        param_1[uVar15] = bVar17;\n      }\n      uVar19 = (ulong)(byte)param_3[uVar16];\n      uVar15 = uVar15 + 1;\n    } while( true );\n  }\nLAB_00404344:\n  if (bVar25) {\n    bVar23 = false;\n    bVar25 = bVar6;\n    goto LAB_0040483e;\n  }\nswitchD_0040436e_caseD_25:\n  bVar25 = param_5 == 2;\nLAB_00403f38:\n  bVar17 = (byte)uVar19;\n  bVar24 = (bool)((bVar6 ^ 1U | bVar25) ^ 1 | local_5c);\n  bVar26 = bVar20;\n  if (bVar24) {\nLAB_00403f4f:\n    bVar24 = false;\n    bVar20 = bVar26;\nLAB_00403f51:\n    bVar17 = (byte)uVar19;\n    uVar16 = uVar15;\n    bVar4 = bVar3;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar19 >> 5) * 4) >> (bVar17 & 0x1f) & 1) == 0))\n    goto LAB_00404048;\n    bVar25 = param_5 == 2;\n  }\n  else {\nLAB_00404048:\n    bVar25 = param_5 == 2;\n    uVar15 = uVar16;\n    bVar3 = bVar4;\n    if (!bVar20) {\n      uVar22 = uVar22 + 1;\n      bVar3 = (bool)((bVar24 ^ 1U) & bVar4);\nLAB_00404064:\n      if (bVar3) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x27;\n        }\n        uVar15 = uVar15 + 2;\n        bVar4 = false;\n      }\n      goto LAB_00403fdd;\n    }\n  }\njoined_r0x00404147:\n  if (local_5c) {\nLAB_00404158:\n    bVar26 = (bool)(bVar6 & bVar25);\n    goto LAB_0040415c;\n  }\nLAB_00403f92:\n  bVar25 = (bool)((bVar3 ^ 1U) & bVar25);\n  if (bVar25) {\n    if (uVar15 < uVar9) {\n      param_1[uVar15] = 0x27;\n    }\n    if (uVar15 + 1 < uVar9) {\n      param_1[uVar15 + 1] = 0x24;\n    }\n    if (uVar15 + 2 < uVar9) {\n      param_1[uVar15 + 2] = 0x27;\n    }\n    uVar15 = uVar15 + 3;\n    bVar3 = bVar25;\n  }\nLAB_00403fcb:\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = 0x5c;\n  }\n  uVar15 = uVar15 + 1;\n  uVar22 = uVar22 + 1;\n  bVar4 = bVar3;\nLAB_00403fdd:\n  bVar3 = bVar4;\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = bVar17;\n  }\n  uVar15 = uVar15 + 1;\n  if (!bVar23) {\n    bVar2 = false;\n  }\n  goto LAB_00403df8;\n}\n\n",
            "funcName": "FUN_00403d50"
        },
        {
            "funcStartAddr": "0x404f80",
            "funcEndAddr": "0x40511b",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_00404f80(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_0060c298;\n  if (DAT_0060c2b0 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_004063f0();\n    }\n    if (PTR_DAT_0060c298 == &DAT_0060c2a0) {\n      puVar8 = (undefined4 *)FUN_00406200(0);\n      uVar6 = PTR_DAT_0060c2a8._4_4_;\n      uVar5 = PTR_DAT_0060c2a8._0_4_;\n      uVar3 = _UNK_0060c2a4;\n      PTR_DAT_0060c298 = (undefined *)puVar8;\n      *puVar8 = _DAT_0060c2a0;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_00406200(PTR_DAT_0060c298);\n      PTR_DAT_0060c298 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_0060c2b0 * 4,0,(long)((param_1 + 1) - DAT_0060c2b0) << 4);\n    DAT_0060c2b0 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_00403d50(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_0060c380) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)FUN_004061a0(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_00403d50(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n",
            "funcName": "FUN_00404f80"
        },
        {
            "funcStartAddr": "0x405120",
            "funcEndAddr": "0x405154",
            "decompiledFuncCode": "\nvoid FUN_00405120(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060c480;\n  }\n  FUN_004063a0(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00405120"
        },
        {
            "funcStartAddr": "0x405160",
            "funcEndAddr": "0x40516f",
            "decompiledFuncCode": "\nundefined4 FUN_00405160(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060c480;\n  }\n  return *param_1;\n}\n\n",
            "funcName": "FUN_00405160"
        },
        {
            "funcStartAddr": "0x405170",
            "funcEndAddr": "0x40517f",
            "decompiledFuncCode": "\nvoid FUN_00405170(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060c480;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_00405170"
        },
        {
            "funcStartAddr": "0x405180",
            "funcEndAddr": "0x4051b3",
            "decompiledFuncCode": "\nuint FUN_00405180(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060c480;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n",
            "funcName": "FUN_00405180"
        },
        {
            "funcStartAddr": "0x4051c0",
            "funcEndAddr": "0x4051d3",
            "decompiledFuncCode": "\nundefined4 FUN_004051c0(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060c480;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n",
            "funcName": "FUN_004051c0"
        },
        {
            "funcStartAddr": "0x4051e0",
            "funcEndAddr": "0x40520b",
            "decompiledFuncCode": "\nvoid FUN_004051e0(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060c480;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004051e0"
        },
        {
            "funcStartAddr": "0x405210",
            "funcEndAddr": "0x405282",
            "decompiledFuncCode": "\nvoid FUN_00405210(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_0060c480;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00403d50(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00405210"
        },
        {
            "funcStartAddr": "0x405290",
            "funcEndAddr": "0x405371",
            "decompiledFuncCode": "\nundefined8 FUN_00405290(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_0060c480;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00403d50(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = FUN_004061a0(lVar3 + 1);\n  FUN_00403d50(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n",
            "funcName": "FUN_00405290"
        },
        {
            "funcStartAddr": "0x405380",
            "funcEndAddr": "0x40538a",
            "decompiledFuncCode": "\nvoid FUN_00405380(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00405290(param_1,param_2,0,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00405380"
        },
        {
            "funcStartAddr": "0x405390",
            "funcEndAddr": "0x405425",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00405390(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_0060c298;\n  if (1 < DAT_0060c2b0) {\n    ppvVar2 = (void **)(PTR_DAT_0060c298 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_0060c298 + (ulong)(DAT_0060c2b0 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_0060c380) {\n    free(*(undefined **)(__ptr_00 + 8));\n    _DAT_0060c2a0 = 0x100;\n    PTR_DAT_0060c2a8 = &DAT_0060c380;\n  }\n  if (__ptr_00 != &DAT_0060c2a0) {\n    free(__ptr_00);\n    PTR_DAT_0060c298 = &DAT_0060c2a0;\n  }\n  DAT_0060c2b0 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00405390"
        },
        {
            "funcStartAddr": "0x405430",
            "funcEndAddr": "0x405441",
            "decompiledFuncCode": "\nvoid FUN_00405430(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00404f80(param_1,param_2,0xffffffffffffffff,&DAT_0060c480);\n  return;\n}\n\n",
            "funcName": "FUN_00405430"
        },
        {
            "funcStartAddr": "0x405450",
            "funcEndAddr": "0x40545a",
            "decompiledFuncCode": "\nvoid FUN_00405450(void)\n\n{\n  FUN_00404f80();\n  return;\n}\n\n",
            "funcName": "FUN_00405450"
        },
        {
            "funcStartAddr": "0x405460",
            "funcEndAddr": "0x405476",
            "decompiledFuncCode": "\nvoid FUN_00405460(undefined8 param_1)\n\n{\n  FUN_00404f80(0,param_1,0xffffffffffffffff,&DAT_0060c480);\n  return;\n}\n\n",
            "funcName": "FUN_00405460"
        },
        {
            "funcStartAddr": "0x405480",
            "funcEndAddr": "0x405492",
            "decompiledFuncCode": "\nvoid FUN_00405480(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00404f80(0,param_1,param_2,&DAT_0060c480);\n  return;\n}\n\n",
            "funcName": "FUN_00405480"
        },
        {
            "funcStartAddr": "0x4054a0",
            "funcEndAddr": "0x405508",
            "decompiledFuncCode": "\nvoid FUN_004054a0(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00404f80(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004054a0"
        },
        {
            "funcStartAddr": "0x405510",
            "funcEndAddr": "0x405574",
            "decompiledFuncCode": "\nvoid FUN_00405510(undefined8 param_1,int param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00404f80(param_1,param_3,param_4,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405510"
        },
        {
            "funcStartAddr": "0x405580",
            "funcEndAddr": "0x40558c",
            "decompiledFuncCode": "\nvoid FUN_00405580(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_004054a0(0,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00405580"
        },
        {
            "funcStartAddr": "0x405590",
            "funcEndAddr": "0x40559f",
            "decompiledFuncCode": "\nvoid FUN_00405590(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00405510(0,param_1,param_2,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00405590"
        },
        {
            "funcStartAddr": "0x4055a0",
            "funcEndAddr": "0x405610",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_004055a0(undefined8 param_1,undefined8 param_2,byte param_3)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  \n  local_18 = DAT_0060c4b0;\n  local_48 = _DAT_0060c480;\n  uStack_40 = uRam000000000060c488;\n  local_38 = _DAT_0060c490;\n  uStack_30 = uRam000000000060c498;\n  puVar1 = (uint *)((long)&uStack_40 + (ulong)(param_3 >> 5) * 4);\n  local_28 = _DAT_0060c4a0;\n  uStack_20 = uRam000000000060c4a8;\n  uVar2 = *puVar1;\n  *puVar1 = (~(uVar2 >> (param_3 & 0x1f)) & 1) << (param_3 & 0x1f) ^ uVar2;\n  FUN_00404f80(0,param_1,param_2,&local_48);\n  return;\n}\n\n",
            "funcName": "FUN_004055a0"
        },
        {
            "funcStartAddr": "0x405610",
            "funcEndAddr": "0x40561d",
            "decompiledFuncCode": "\nvoid FUN_00405610(undefined8 param_1,char param_2)\n\n{\n  FUN_004055a0(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00405610"
        },
        {
            "funcStartAddr": "0x405620",
            "funcEndAddr": "0x405631",
            "decompiledFuncCode": "\nvoid FUN_00405620(undefined8 param_1)\n\n{\n  FUN_004055a0(param_1,0xffffffffffffffff,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00405620"
        },
        {
            "funcStartAddr": "0x405640",
            "funcEndAddr": "0x40564a",
            "decompiledFuncCode": "\nvoid FUN_00405640(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_004055a0(param_1,param_2,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00405640"
        },
        {
            "funcStartAddr": "0x405650",
            "funcEndAddr": "0x4056be",
            "decompiledFuncCode": "\nvoid FUN_00405650(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_40 = 0x400000000000000;\n    local_44 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00404f80(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405650"
        },
        {
            "funcStartAddr": "0x4056c0",
            "funcEndAddr": "0x40572c",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_004056c0(undefined8 param_1,long param_2,long param_3,undefined8 param_4,undefined8 param_5\n                 )\n\n{\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long lStack_20;\n  long local_18;\n  \n  uStack_40 = uRam000000000060c488;\n  local_38 = _DAT_0060c490;\n  uStack_30 = uRam000000000060c498;\n  local_28 = _DAT_0060c4a0;\n  lStack_20 = uRam000000000060c4a8;\n  local_18 = DAT_0060c4b0;\n  local_48 = CONCAT44((int)((ulong)_DAT_0060c480 >> 0x20),10);\n  if ((param_2 != 0) && (param_3 != 0)) {\n    lStack_20 = param_2;\n    local_18 = param_3;\n    FUN_00404f80(param_1,param_4,param_5,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004056c0"
        },
        {
            "funcStartAddr": "0x405730",
            "funcEndAddr": "0x405739",
            "decompiledFuncCode": "\nvoid FUN_00405730(void)\n\n{\n  FUN_004056c0();\n  return;\n}\n\n",
            "funcName": "FUN_00405730"
        },
        {
            "funcStartAddr": "0x405740",
            "funcEndAddr": "0x405757",
            "decompiledFuncCode": "\nvoid FUN_00405740(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_004056c0(0,param_1,param_2,param_3,0xffffffffffffffff);\n  return;\n}\n\n",
            "funcName": "FUN_00405740"
        },
        {
            "funcStartAddr": "0x405760",
            "funcEndAddr": "0x405773",
            "decompiledFuncCode": "\nvoid FUN_00405760(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_004056c0(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n",
            "funcName": "FUN_00405760"
        },
        {
            "funcStartAddr": "0x405780",
            "funcEndAddr": "0x40578a",
            "decompiledFuncCode": "\nvoid FUN_00405780(void)\n\n{\n  FUN_00404f80();\n  return;\n}\n\n",
            "funcName": "FUN_00405780"
        },
        {
            "funcStartAddr": "0x405790",
            "funcEndAddr": "0x4057a2",
            "decompiledFuncCode": "\nvoid FUN_00405790(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00404f80(0,param_1,param_2,&DAT_0060c260);\n  return;\n}\n\n",
            "funcName": "FUN_00405790"
        },
        {
            "funcStartAddr": "0x4057b0",
            "funcEndAddr": "0x4057c1",
            "decompiledFuncCode": "\nvoid FUN_004057b0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00404f80(param_1,param_2,0xffffffffffffffff,&DAT_0060c260);\n  return;\n}\n\n",
            "funcName": "FUN_004057b0"
        },
        {
            "funcStartAddr": "0x4057d0",
            "funcEndAddr": "0x4057e6",
            "decompiledFuncCode": "\nvoid FUN_004057d0(undefined8 param_1)\n\n{\n  FUN_00404f80(0,param_1,0xffffffffffffffff,&DAT_0060c260);\n  return;\n}\n\n",
            "funcName": "FUN_004057d0"
        },
        {
            "funcStartAddr": "0x4057f0",
            "funcEndAddr": "0x4058cf",
            "decompiledFuncCode": "\nvoid FUN_004057f0(long *param_1)\n\n{\n  long lVar1;\n  long lVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long *plVar5;\n  \n  lVar1 = param_1[6];\n  lVar2 = param_1[5];\n  if (lVar1 == lVar2) {\n    *(byte *)(param_1 + 0xd) = *(byte *)(param_1 + 0xd) | 2;\n  }\n  uVar3 = param_1[7];\n  uVar4 = lVar1 + param_1[9] & ~param_1[9];\n  param_1[6] = uVar4;\n  if (uVar3 - param_1[4] < uVar4 - param_1[4]) {\n    param_1[6] = uVar3;\n    uVar4 = uVar3;\n  }\n  param_1[5] = uVar4;\n  plVar5 = (long *)param_1[0x11];\n  if ((ulong)(param_1[0x12] - (long)plVar5) < 8) {\n    _obstack_newchunk(param_1 + 0xe,8);\n    plVar5 = (long *)param_1[0x11];\n  }\n  *plVar5 = lVar2;\n  plVar5 = (long *)param_1[0x1c];\n  param_1[0x11] = param_1[0x11] + 8;\n  if ((ulong)(param_1[0x1d] - (long)plVar5) < 8) {\n    _obstack_newchunk(param_1 + 0x19,8);\n    plVar5 = (long *)param_1[0x1c];\n  }\n  *plVar5 = (lVar1 - lVar2) + -1;\n  param_1[0x1c] = param_1[0x1c] + 8;\n  *param_1 = *param_1 + 1;\n  return;\n}\n\n",
            "funcName": "FUN_004057f0"
        },
        {
            "funcStartAddr": "0x4058e0",
            "funcEndAddr": "0x405947",
            "decompiledFuncCode": "\nvoid FUN_004058e0(undefined8 *param_1)\n\n{\n  *param_1 = 0;\n  param_1[1] = 0;\n  param_1[2] = 0;\n  _obstack_begin(param_1 + 3,0,0,malloc,free);\n  _obstack_begin(param_1 + 0xe,0,0,malloc,free);\n  *(byte *)(param_1 + 0x23) = *(byte *)(param_1 + 0x23) & 0xfe;\n  param_1[0x20] = malloc;\n  param_1[0x21] = free;\n  FUN_00407530(param_1 + 0x19,0,0);\n  return;\n}\n\n",
            "funcName": "FUN_004058e0"
        },
        {
            "funcStartAddr": "0x405950",
            "funcEndAddr": "0x405979",
            "decompiledFuncCode": "\nvoid FUN_00405950(long param_1)\n\n{\n  _obstack_free(param_1 + 0x18,0);\n  _obstack_free(param_1 + 0x70,0);\n  _obstack_free(param_1 + 200,0);\n  return;\n}\n\n",
            "funcName": "FUN_00405950"
        },
        {
            "funcStartAddr": "0x405980",
            "funcEndAddr": "0x405b7b",
            "decompiledFuncCode": "\nulong FUN_00405980(FILE *param_1,long param_2)\n\n{\n  long lVar1;\n  ulong uVar2;\n  int iVar3;\n  undefined *puVar4;\n  ulong uVar5;\n  undefined4 extraout_var;\n  undefined8 *puVar6;\n  \n  do {\n    iVar3 = fgetc(param_1);\n    while( true ) {\n      if (iVar3 == -1) {\n        puVar4 = *(undefined **)(param_2 + 0x30);\n        if (puVar4 != *(undefined **)(param_2 + 0x28)) {\n          if (puVar4 == *(undefined **)(param_2 + 0x38)) {\n            _obstack_newchunk(param_2 + 0x18,1);\n            puVar4 = *(undefined **)(param_2 + 0x30);\n          }\n          *(undefined **)(param_2 + 0x30) = puVar4 + 1;\n          *puVar4 = 0;\n          FUN_004057f0(param_2);\n        }\n        puVar6 = *(undefined8 **)(param_2 + 0x88);\n        if ((ulong)(*(long *)(param_2 + 0x90) - (long)puVar6) < 8) {\n          _obstack_newchunk(param_2 + 0x70,8);\n          puVar6 = *(undefined8 **)(param_2 + 0x88);\n        }\n        *puVar6 = 0;\n        lVar1 = *(long *)(param_2 + 0x88) + 8;\n        *(long *)(param_2 + 0x88) = lVar1;\n        if (lVar1 == *(long *)(param_2 + 0x80)) {\n          *(byte *)(param_2 + 0xc0) = *(byte *)(param_2 + 0xc0) | 2;\n        }\n        uVar5 = lVar1 + *(ulong *)(param_2 + 0xa0) & ~*(ulong *)(param_2 + 0xa0);\n        uVar2 = *(ulong *)(param_2 + 0x90);\n        *(ulong *)(param_2 + 0x88) = uVar5;\n        if (uVar2 - *(long *)(param_2 + 0x78) < uVar5 - *(long *)(param_2 + 0x78)) {\n          *(ulong *)(param_2 + 0x88) = uVar2;\n          uVar5 = uVar2;\n        }\n        *(long *)(param_2 + 8) = *(long *)(param_2 + 0x80);\n        lVar1 = *(long *)(param_2 + 0xd8);\n        *(ulong *)(param_2 + 0x80) = uVar5;\n        if (*(long *)(param_2 + 0xe0) == lVar1) {\n          *(byte *)(param_2 + 0x118) = *(byte *)(param_2 + 0x118) | 2;\n        }\n        uVar5 = *(long *)(param_2 + 0xe0) + *(ulong *)(param_2 + 0xf8) & ~*(ulong *)(param_2 + 0xf8)\n        ;\n        uVar2 = *(ulong *)(param_2 + 0xe8);\n        *(ulong *)(param_2 + 0xe0) = uVar5;\n        if (uVar2 - *(long *)(param_2 + 0xd0) < uVar5 - *(long *)(param_2 + 0xd0)) {\n          *(ulong *)(param_2 + 0xe0) = uVar2;\n          uVar5 = uVar2;\n        }\n        *(ulong *)(param_2 + 0xd8) = uVar5;\n        *(long *)(param_2 + 0x10) = lVar1;\n        iVar3 = ferror(param_1);\n        return CONCAT44(extraout_var,iVar3) & 0xffffffffffffff00 | (ulong)(iVar3 == 0);\n      }\n      puVar4 = *(undefined **)(param_2 + 0x30);\n      if (*(undefined **)(param_2 + 0x38) == puVar4) {\n        _obstack_newchunk(param_2 + 0x18,1);\n        puVar4 = *(undefined **)(param_2 + 0x30);\n        *(undefined **)(param_2 + 0x30) = puVar4 + 1;\n        *puVar4 = (char)iVar3;\n      }\n      else {\n        *(undefined **)(param_2 + 0x30) = puVar4 + 1;\n        *puVar4 = (char)iVar3;\n      }\n      if (iVar3 != 0) break;\n      FUN_004057f0(param_2);\n      iVar3 = fgetc(param_1);\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_00405980"
        },
        {
            "funcStartAddr": "0x405ba0",
            "funcEndAddr": "0x405bfd",
            "decompiledFuncCode": "\nssize_t FUN_00405ba0(int param_1,void *param_2,ulong param_3)\n\n{\n  ssize_t sVar1;\n  int *piVar2;\n  \n  while( true ) {\n    do {\n      sVar1 = read(param_1,param_2,param_3);\n      if (-1 < sVar1) {\n        return sVar1;\n      }\n      piVar2 = __errno_location();\n    } while (*piVar2 == 4);\n    if (param_3 < 0x7fffe001) break;\n    if (*piVar2 != 0x16) {\n      return sVar1;\n    }\n    param_3 = 0x7fffe000;\n  }\n  return sVar1;\n}\n\n",
            "funcName": "FUN_00405ba0"
        },
        {
            "funcStartAddr": "0x405c00",
            "funcEndAddr": "0x405fa4",
            "decompiledFuncCode": "\nundefined8\nFUN_00405c00(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0040974b,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00405e7c;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_00405e7c:\n    __fprintf_chk(param_1,1,uVar7,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[1];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar1 = param_5[2];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_00405f19;\n  case 7:\n    uVar1 = param_5[2];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    local_58 = param_5[1];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_00405f19:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_58,uVar1,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00405cfa;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_00405cfa:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_50,local_58,uVar6,uVar5,uVar4,uVar1,local_48);\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00405c00"
        },
        {
            "funcStartAddr": "0x405fe0",
            "funcEndAddr": "0x406000",
            "decompiledFuncCode": "\nvoid FUN_00405fe0(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_00405c00();\n  return;\n}\n\n",
            "funcName": "FUN_00405fe0"
        },
        {
            "funcStartAddr": "0x406000",
            "funcEndAddr": "0x406059",
            "decompiledFuncCode": "\nvoid FUN_00406000(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long local_58 [11];\n  \n  lVar4 = 0;\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_58[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_58[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_00405c00();\n  return;\n}\n\n",
            "funcName": "FUN_00406000"
        },
        {
            "funcStartAddr": "0x406060",
            "funcEndAddr": "0x406118",
            "decompiledFuncCode": "\nvoid FUN_00406060(void)\n\n{\n  long lVar1;\n  undefined8 in_R8;\n  ulong uVar2;\n  undefined8 in_R9;\n  long lVar3;\n  long *plVar4;\n  long local_88 [10];\n  long local_38 [4];\n  long local_18 [3];\n  \n  local_18[0] = in_R8;\n  plVar4 = (long *)&stack0x00000008;\n  uVar2 = 0x20;\n  local_18[1] = in_R9;\n  lVar3 = 0;\n  do {\n    if ((uint)uVar2 < 0x30) {\n      lVar1 = *(long *)((long)local_38 + uVar2);\n      local_88[lVar3] = lVar1;\n      uVar2 = (ulong)((uint)uVar2 + 8);\n    }\n    else {\n      lVar1 = *plVar4;\n      local_88[lVar3] = lVar1;\n      plVar4 = plVar4 + 1;\n    }\n  } while ((lVar1 != 0) && (lVar3 = lVar3 + 1, lVar3 != 10));\n  FUN_00405c00();\n  return;\n}\n\n",
            "funcName": "FUN_00406060"
        },
        {
            "funcStartAddr": "0x406120",
            "funcEndAddr": "0x406194",
            "decompiledFuncCode": "\nvoid FUN_00406120(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n",
            "funcName": "FUN_00406120"
        },
        {
            "funcStartAddr": "0x4061a0",
            "funcEndAddr": "0x4061ba",
            "decompiledFuncCode": "\nvoid FUN_004061a0(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_004063f0();\n  }\n  return;\n}\n\n",
            "funcName": "FUN_004061a0"
        },
        {
            "funcStartAddr": "0x4061c0",
            "funcEndAddr": "0x4061e1",
            "decompiledFuncCode": "\nvoid FUN_004061c0(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_004061a0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_004063f0();\n}\n\n",
            "funcName": "FUN_004061c0"
        },
        {
            "funcStartAddr": "0x4061f0",
            "funcEndAddr": "0x4061f2",
            "decompiledFuncCode": "\nvoid thunk_FUN_004061a0(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_004063f0();\n  }\n  return;\n}\n\n",
            "funcName": "thunk_4061f0"
        },
        {
            "funcStartAddr": "0x406200",
            "funcEndAddr": "0x406230",
            "decompiledFuncCode": "\nvoid * FUN_00406200(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_004063f0();\n  }\n  return pvVar1;\n}\n\n",
            "funcName": "FUN_00406200"
        },
        {
            "funcStartAddr": "0x406240",
            "funcEndAddr": "0x406261",
            "decompiledFuncCode": "\nvoid FUN_00406240(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_00406200();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_004063f0();\n}\n\n",
            "funcName": "FUN_00406240"
        },
        {
            "funcStartAddr": "0x406270",
            "funcEndAddr": "0x4062e8",
            "decompiledFuncCode": "\nvoid FUN_00406270(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar2 = *param_2;\n  if (param_1 == 0) {\n    if (uVar2 == 0) {\n      uVar2 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar3 = (ulong)(SUB168(ZEXT816(uVar2) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar2) * ZEXT816(param_3),0) < 0) || (uVar3 != 0)) goto LAB_004062cb;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar3 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar2) {\nLAB_004062cb:\n                    /* WARNING: Subroutine does not return */\n      FUN_004063f0(param_1,param_2,uVar3);\n    }\n    uVar2 = (uVar2 >> 1) + 1 + uVar2;\n  }\n  *param_2 = uVar2;\n  FUN_00406200(param_1,uVar2 * param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00406270"
        },
        {
            "funcStartAddr": "0x406300",
            "funcEndAddr": "0x40634a",
            "decompiledFuncCode": "\nvoid FUN_00406300(long param_1,ulong *param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = *param_2;\n  if (param_1 == 0) {\n    if (uVar1 == 0) {\n      *param_2 = 0x80;\n      FUN_00406200(0,0x80);\n      return;\n    }\n    if ((long)uVar1 < 0) goto LAB_0040634a;\n  }\n  else {\n    if (0x5555555555555553 < uVar1) {\nLAB_0040634a:\n                    /* WARNING: Subroutine does not return */\n      FUN_004063f0();\n    }\n    uVar1 = (uVar1 >> 1) + 1 + uVar1;\n  }\n  *param_2 = uVar1;\n  FUN_00406200(param_1,uVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00406300"
        },
        {
            "funcStartAddr": "0x406350",
            "funcEndAddr": "0x406367",
            "decompiledFuncCode": "\nvoid FUN_00406350(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_004061a0();\n  memset(__s,0,param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00406350"
        },
        {
            "funcStartAddr": "0x406370",
            "funcEndAddr": "0x40639e",
            "decompiledFuncCode": "\nvoid FUN_00406370(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_004063f0();\n}\n\n",
            "funcName": "FUN_00406370"
        },
        {
            "funcStartAddr": "0x4063a0",
            "funcEndAddr": "0x4063c8",
            "decompiledFuncCode": "\nvoid FUN_004063a0(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_004061a0(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_004063a0"
        },
        {
            "funcStartAddr": "0x4063d0",
            "funcEndAddr": "0x4063e3",
            "decompiledFuncCode": "\nvoid FUN_004063d0(char *param_1)\n\n{\n  void *__dest;\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  __dest = (void *)FUN_004061a0(sVar1 + 1);\n  memcpy(__dest,param_1,sVar1 + 1);\n  return;\n}\n\n",
            "funcName": "FUN_004063d0"
        },
        {
            "funcStartAddr": "0x4063f0",
            "funcEndAddr": "0x406421",
            "decompiledFuncCode": "\nvoid FUN_004063f0(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_0060c258,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004063f0"
        },
        {
            "funcStartAddr": "0x406430",
            "funcEndAddr": "0x4064a8",
            "decompiledFuncCode": "\nint FUN_00406430(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_00406497;\n    }\n    iVar1 = FUN_004064b0(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_00406497:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n",
            "funcName": "FUN_00406430"
        },
        {
            "funcStartAddr": "0x4064b0",
            "funcEndAddr": "0x4064eb",
            "decompiledFuncCode": "\nvoid FUN_004064b0(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if ((iVar1 != 0) && ((param_1->_flags & 0x100U) != 0)) {\n      FUN_004064f0(param_1,0,1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_004064b0"
        },
        {
            "funcStartAddr": "0x4064f0",
            "funcEndAddr": "0x406546",
            "decompiledFuncCode": "\nulong FUN_004064f0(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  uint uVar1;\n  int __fd;\n  ulong uVar2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    __fd = fileno(param_1);\n    uVar2 = lseek(__fd,param_2,param_3);\n    if (uVar2 != 0xffffffffffffffff) {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = uVar2;\n      uVar2 = 0;\n    }\n    return uVar2;\n  }\n  uVar1 = fseeko(param_1,param_2,param_3);\n  return (ulong)uVar1;\n}\n\n",
            "funcName": "FUN_004064f0"
        },
        {
            "funcStartAddr": "0x406550",
            "funcEndAddr": "0x406625",
            "decompiledFuncCode": "\nvoid FUN_00406550(long param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 *puVar5;\n  long lVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  \n  iVar1 = param_2[0xb];\n  iVar2 = *param_2;\n  iVar3 = param_2[0xc];\n  iVar8 = iVar1;\n  iVar9 = iVar2;\n  while (iVar3 < iVar9) {\n    while( true ) {\n      if (iVar3 <= iVar8) goto LAB_004065cc;\n      iVar10 = iVar9 - iVar3;\n      iVar7 = iVar3 - iVar8;\n      if (iVar10 <= iVar7) break;\n      lVar6 = (long)iVar8;\n      iVar9 = iVar9 - iVar7;\n      puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n      do {\n        uVar4 = *puVar5;\n        *puVar5 = puVar5[iVar9 - lVar6];\n        puVar5[iVar9 - lVar6] = uVar4;\n        puVar5 = puVar5 + 1;\n      } while ((undefined8 *)(param_1 + 8 + ((ulong)(iVar7 - 1) + lVar6) * 8) != puVar5);\n      if (iVar9 <= iVar3) goto LAB_004065cc;\n    }\n    lVar6 = (long)iVar8;\n    puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n    do {\n      uVar4 = *puVar5;\n      *puVar5 = puVar5[iVar3 - lVar6];\n      puVar5[iVar3 - lVar6] = uVar4;\n      puVar5 = puVar5 + 1;\n    } while (puVar5 != (undefined8 *)(param_1 + 8 + ((ulong)(iVar10 - 1) + lVar6) * 8));\n    iVar8 = iVar8 + iVar10;\n  }\nLAB_004065cc:\n  param_2[0xc] = iVar2;\n  param_2[0xb] = iVar1 + (iVar2 - iVar3);\n  return;\n}\n\n",
            "funcName": "FUN_00406550"
        },
        {
            "funcStartAddr": "0x406630",
            "funcEndAddr": "0x406c2e",
            "decompiledFuncCode": "\nint FUN_00406630(int param_1,undefined8 *param_2,char *param_3,char **param_4,undefined4 *param_5,\n                int param_6,int *param_7,int param_8,undefined8 param_9)\n\n{\n  char cVar1;\n  undefined8 uVar2;\n  bool bVar3;\n  bool bVar4;\n  int iVar5;\n  int iVar6;\n  size_t sVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  char **ppcVar10;\n  char *pcVar11;\n  char **ppcVar12;\n  char *pcVar13;\n  char *__s1;\n  FILE *__stream;\n  ulong uVar14;\n  size_t sVar15;\n  char *__s1_00;\n  long lVar16;\n  char *local_70;\n  uint local_44;\n  \n  pcVar13 = *(char **)(param_7 + 8);\n  cVar1 = *pcVar13;\n  pcVar11 = pcVar13;\n  if ((cVar1 == '=') || (cVar1 == '\\0')) {\n    sVar15 = 0;\n  }\n  else {\n    do {\n      pcVar11 = pcVar11 + 1;\n      if (*pcVar11 == '\\0') break;\n    } while (*pcVar11 != '=');\n    sVar15 = (long)pcVar11 - (long)pcVar13;\n  }\n  uVar14 = 0;\n  __s1 = *param_4;\n  ppcVar10 = param_4;\n  __s1_00 = __s1;\n  if (__s1 != (char *)0x0) {\n    while( true ) {\n      iVar5 = strncmp(__s1_00,pcVar13,sVar15);\n      if ((iVar5 == 0) && (sVar7 = strlen(__s1_00), sVar7 == sVar15)) goto LAB_00406850;\n      ppcVar10 = ppcVar10 + 4;\n      __s1_00 = *ppcVar10;\n      iVar5 = (int)uVar14 + 1;\n      if (__s1_00 == (char *)0x0) break;\n      uVar14 = (ulong)iVar5;\n    }\n    lVar16 = 0;\n    ppcVar10 = (char **)0x0;\n    local_44 = 0xffffffff;\n    bVar3 = false;\n    bVar4 = false;\n    local_70 = (char *)0x0;\n    ppcVar12 = param_4;\n    do {\n      iVar6 = strncmp(__s1,pcVar13,sVar15);\n      if (iVar6 == 0) {\n        if (ppcVar10 == (char **)0x0) {\n          local_44 = (uint)lVar16;\n          ppcVar10 = ppcVar12;\n        }\n        else if (((((param_6 != 0) || (*(int *)(ppcVar10 + 1) != *(int *)(ppcVar12 + 1))) ||\n                  (ppcVar10[2] != ppcVar12[2])) ||\n                 (*(int *)(ppcVar10 + 3) != *(int *)(ppcVar12 + 3))) && (!bVar3)) {\n          if (param_8 == 0) {\n            bVar3 = true;\n            if (local_70 == (char *)0x0) goto LAB_00406790;\n          }\n          else if (local_70 == (char *)0x0) {\n            local_70 = (char *)calloc((long)iVar5,1);\n            if (local_70 == (char *)0x0) {\n              bVar3 = true;\n              goto LAB_00406790;\n            }\n            bVar4 = true;\n            local_70[(int)local_44] = '\\x01';\n          }\n          local_70[lVar16] = '\\x01';\n        }\n      }\nLAB_00406790:\n      ppcVar12 = ppcVar12 + 4;\n      __s1 = *ppcVar12;\n      lVar16 = lVar16 + 1;\n    } while (__s1 != (char *)0x0);\n    if ((local_70 != (char *)0x0) || (bVar3)) {\n      if (param_8 != 0) {\n        if (bVar3) {\n          uVar2 = *param_2;\n          uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous\\n\",5);\n          __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n        else {\n          flockfile(stderr);\n          uVar2 = *(undefined8 *)(param_7 + 8);\n          uVar8 = *param_2;\n          uVar9 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous; possibilities:\",5);\n          __fprintf_chk(stderr,1,uVar9,uVar8,param_9,uVar2);\n          pcVar13 = local_70;\n          __stream = stderr;\n          do {\n            if (*pcVar13 != '\\0') {\n              __fprintf_chk(__stream,1,&DAT_00409bd1,param_9,*param_4);\n              __stream = stderr;\n            }\n            pcVar13 = pcVar13 + 1;\n            param_4 = param_4 + 4;\n          } while (local_70 + uVar14 + 1 != pcVar13);\n          fputc(10,__stream);\n          funlockfile(stderr);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n      }\n      if (bVar4) {\n        free(local_70);\n      }\n      sVar15 = strlen(pcVar13);\n      *(char **)(param_7 + 8) = pcVar13 + sVar15;\n      *param_7 = *param_7 + 1;\n      param_7[2] = 0;\n      return 0x3f;\n    }\n    if (ppcVar10 != (char **)0x0) {\n      uVar14 = (ulong)local_44;\nLAB_00406850:\n      iVar6 = *param_7;\n      *(undefined8 *)(param_7 + 8) = 0;\n      iVar5 = iVar6 + 1;\n      *param_7 = iVar5;\n      if (*pcVar11 == '\\0') {\n        if (*(int *)(ppcVar10 + 1) == 1) {\n          if (param_1 <= iVar5) {\n            if (param_8 != 0) {\n              pcVar13 = *ppcVar10;\n              uVar2 = *param_2;\n              uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' requires an argument\\n\",5);\n              __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n            }\n            param_7[2] = *(int *)(ppcVar10 + 3);\n            return (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          *param_7 = iVar6 + 2;\n          *(undefined8 *)(param_7 + 4) = param_2[iVar5];\n        }\n      }\n      else {\n        if (*(int *)(ppcVar10 + 1) == 0) {\n          if (param_8 != 0) {\n            pcVar13 = *ppcVar10;\n            uVar2 = *param_2;\n            uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' doesn\\'t allow an argument\\n\",5);\n            __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          }\n          param_7[2] = *(int *)(ppcVar10 + 3);\n          return 0x3f;\n        }\n        *(char **)(param_7 + 4) = pcVar11 + 1;\n      }\n      if (param_5 != (undefined4 *)0x0) {\n        *param_5 = (int)uVar14;\n      }\n      if ((int *)ppcVar10[2] == (int *)0x0) {\n        return *(int *)(ppcVar10 + 3);\n      }\n      *(int *)ppcVar10[2] = *(int *)(ppcVar10 + 3);\n      return 0;\n    }\n  }\n  if (((param_6 != 0) && (*(char *)(param_2[*param_7] + 1) != '-')) &&\n     (pcVar11 = strchr(param_3,(int)cVar1), pcVar11 != (char *)0x0)) {\n    return -1;\n  }\n  if (param_8 != 0) {\n    uVar2 = *param_2;\n    uVar8 = dcgettext(0,\"%s: unrecognized option \\'%s%s\\'\\n\",5);\n    __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n  }\n  *(undefined8 *)(param_7 + 8) = 0;\n  *param_7 = *param_7 + 1;\n  param_7[2] = 0;\n  return 0x3f;\n}\n\n",
            "funcName": "FUN_00406630"
        },
        {
            "funcStartAddr": "0x406c50",
            "funcEndAddr": "0x4071b7",
            "decompiledFuncCode": "\nuint FUN_00406c50(uint param_1,undefined8 *param_2,char *param_3,long param_4,undefined8 param_5,\n                 ulong param_6,uint *param_7,int param_8)\n\n{\n  undefined8 uVar1;\n  char cVar2;\n  uint uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  long lVar6;\n  uint uVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  uint uVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  undefined1 *puVar15;\n  \n  bVar14 = 0;\n  uVar3 = param_7[1];\n  if ((int)param_1 < 1) {\n    return 0xffffffff;\n  }\n  uVar11 = *param_7;\n  *(undefined8 *)(param_7 + 4) = 0;\n  if (uVar11 == 0) {\n    *param_7 = 1;\n    uVar11 = 1;\nLAB_00406c9a:\n    param_7[0xc] = uVar11;\n    param_7[0xb] = uVar11;\n    *(undefined8 *)(param_7 + 8) = 0;\n    if (*param_3 == '-') {\n      param_7[10] = 2;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else if (*param_3 == '+') {\n      param_7[10] = 0;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else {\n      pbVar8 = (byte *)0x0;\n      if (param_8 == 0) {\n        pcVar4 = getenv(\"POSIXLY_CORRECT\");\n        param_6 = param_6 & 0xffffffff;\n        if (pcVar4 == (char *)0x0) {\n          param_7[10] = 1;\n          pbVar8 = *(byte **)(param_7 + 8);\n          goto LAB_00406d9d;\n        }\n        pbVar8 = *(byte **)(param_7 + 8);\n      }\n      param_7[10] = 0;\n    }\nLAB_00406d9d:\n    param_7[6] = 1;\n    cVar2 = *param_3;\nLAB_00406da8:\n    if (cVar2 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 == (byte *)0x0) goto LAB_00406d18;\nLAB_00406dbc:\n    if (*pbVar8 == 0) goto LAB_00406d18;\n  }\n  else {\n    if (param_7[6] == 0) goto LAB_00406c9a;\n    cVar2 = *param_3;\n    pbVar8 = *(byte **)(param_7 + 8);\n    if ((cVar2 - 0x2bU & 0xfd) != 0) goto LAB_00406da8;\n    pcVar4 = param_3 + 1;\n    param_3 = param_3 + 1;\n    if (*pcVar4 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 != (byte *)0x0) goto LAB_00406dbc;\nLAB_00406d18:\n    uVar11 = *param_7;\n    if (param_7[0xc] != uVar11 && (int)uVar11 <= (int)param_7[0xc]) {\n      param_7[0xc] = uVar11;\n    }\n    if ((int)uVar11 < (int)param_7[0xb]) {\n      param_7[0xb] = uVar11;\n    }\n    if (param_7[10] == 1) {\n      uVar7 = param_7[0xc];\n      if (param_7[0xb] == uVar7) {\n        if (uVar11 != uVar7) {\n          param_7[0xb] = uVar11;\n          uVar7 = uVar11;\n        }\n      }\n      else if (uVar11 != uVar7) {\n        FUN_00406550(param_2,param_7);\n        param_6 = param_6 & 0xffffffff;\n        uVar7 = *param_7;\n      }\n      uVar11 = uVar7;\n      uVar7 = uVar11;\n      if ((int)uVar11 < (int)param_1) {\n        lVar6 = (long)(int)uVar11;\n        do {\n          if ((*(char *)param_2[lVar6] == '-') && (((char *)param_2[lVar6])[1] != '\\0')) {\n            uVar11 = *param_7;\n            uVar7 = (uint)lVar6;\n            break;\n          }\n          uVar11 = (uint)lVar6 + 1;\n          lVar6 = lVar6 + 1;\n          *param_7 = uVar11;\n          uVar7 = uVar11;\n        } while ((int)lVar6 < (int)param_1);\n      }\n      param_7[0xc] = uVar7;\n    }\n    bVar12 = param_1 < uVar11;\n    bVar13 = param_1 == uVar11;\n    if (bVar13) {\n      param_1 = param_7[0xc];\n      uVar11 = param_7[0xb];\nLAB_00406e86:\n      if (uVar11 != param_1) {\n        *param_7 = uVar11;\n      }\n      return 0xffffffff;\n    }\n    lVar6 = 3;\n    pbVar8 = (byte *)param_2[(int)uVar11];\n    pbVar9 = pbVar8;\n    pbVar10 = &DAT_00409be9;\n    do {\n      if (lVar6 == 0) break;\n      lVar6 = lVar6 + -1;\n      bVar12 = *pbVar9 < *pbVar10;\n      bVar13 = *pbVar9 == *pbVar10;\n      pbVar9 = pbVar9 + (ulong)bVar14 * -2 + 1;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n    if ((!bVar12 && !bVar13) == bVar12) {\n      uVar11 = uVar11 + 1;\n      *param_7 = uVar11;\n      if (param_7[0xb] == param_7[0xc]) {\n        param_7[0xb] = uVar11;\n      }\n      else {\n        bVar12 = uVar11 != param_7[0xc];\n        uVar11 = param_7[0xb];\n        if (bVar12) {\n          FUN_00406550(param_2,param_7);\n          uVar11 = param_7[0xb];\n        }\n      }\n      param_7[0xc] = param_1;\n      *param_7 = param_1;\n      goto LAB_00406e86;\n    }\n    if ((*pbVar8 != 0x2d) || (bVar14 = pbVar8[1], bVar14 == 0)) {\n      if (param_7[10] == 0) {\n        return 0xffffffff;\n      }\n      *(byte **)(param_7 + 4) = pbVar8;\n      *param_7 = uVar11 + 1;\n      return 1;\n    }\n    if (param_4 != 0) {\n      if (bVar14 == 0x2d) {\n        *(byte **)(param_7 + 8) = pbVar8 + 2;\n        puVar15 = &DAT_00409be9;\n        goto LAB_00406fe5;\n      }\n      if ((int)param_6 != 0) {\n        if (pbVar8[2] == 0) {\n          pcVar4 = strchr(param_3,(int)(char)bVar14);\n          param_6 = param_6 & 0xffffffff;\n          if (pcVar4 != (char *)0x0) goto LAB_00406f90;\n        }\n        *(byte **)(param_7 + 8) = pbVar8 + 1;\n        uVar11 = FUN_00406630(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,\n                              &DAT_00409bea);\n        if (uVar11 != 0xffffffff) {\n          return uVar11;\n        }\n        pbVar8 = (byte *)param_2[(int)*param_7];\n      }\n    }\nLAB_00406f90:\n    pbVar8 = pbVar8 + 1;\n  }\n  pbVar9 = pbVar8 + 1;\n  *(byte **)(param_7 + 8) = pbVar9;\n  bVar14 = *pbVar8;\n  uVar11 = (uint)(char)bVar14;\n  pcVar4 = strchr(param_3,uVar11);\n  if (pbVar8[1] == 0) {\n    *param_7 = *param_7 + 1;\n  }\n  if (((byte)(bVar14 - 0x3a) < 2) || (pcVar4 == (char *)0x0)) {\n    if (uVar3 != 0) {\n      uVar1 = *param_2;\n      uVar5 = dcgettext(0,\"%s: invalid option -- \\'%c\\'\\n\",5);\n      __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n    }\n    param_7[2] = uVar11;\n    return 0x3f;\n  }\n  if (((*pcVar4 != 'W') || (param_4 == 0)) || (pcVar4[1] != ';')) {\n    if (pcVar4[1] == ':') {\n      if (pcVar4[2] == ':') {\n        if (pbVar8[1] == 0) {\n          *(undefined8 *)(param_7 + 4) = 0;\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = *param_7 + 1;\n        }\n      }\n      else {\n        uVar7 = *param_7;\n        if (pbVar8[1] == 0) {\n          if (param_1 == uVar7) {\n            if (uVar3 != 0) {\n              uVar1 = *param_2;\n              uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n              __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n            }\n            param_7[2] = uVar11;\n            uVar11 = (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          else {\n            uVar1 = param_2[(int)uVar7];\n            *param_7 = uVar7 + 1;\n            *(undefined8 *)(param_7 + 4) = uVar1;\n          }\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = uVar7 + 1;\n        }\n      }\n      *(undefined8 *)(param_7 + 8) = 0;\n      return uVar11;\n    }\n    return uVar11;\n  }\n  if (pbVar8[1] == 0) {\n    if (*param_7 == param_1) {\n      if (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n        __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n      }\n      param_7[2] = uVar11;\n      return (uint)(*param_3 != ':') * 5 + 0x3a;\n    }\n    pbVar9 = (byte *)param_2[(int)*param_7];\n  }\n  *(byte **)(param_7 + 8) = pbVar9;\n  param_6 = 0;\n  *(undefined8 *)(param_7 + 4) = 0;\n  puVar15 = &DAT_00409c08;\nLAB_00406fe5:\n  uVar3 = FUN_00406630(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,puVar15);\n  return uVar3;\n}\n\n",
            "funcName": "FUN_00406c50"
        },
        {
            "funcStartAddr": "0x407220",
            "funcEndAddr": "0x407276",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00407220(void)\n\n{\n  DAT_0060c4c0 = DAT_0060c2bc;\n  _DAT_0060c4c4 = DAT_0060c2b8;\n  FUN_00406c50();\n  DAT_0060c2bc = DAT_0060c4c0;\n  DAT_0060c500 = DAT_0060c4d0;\n  _DAT_0060c2b4 = DAT_0060c4c8;\n  return;\n}\n\n",
            "funcName": "FUN_00407220"
        },
        {
            "funcStartAddr": "0x407280",
            "funcEndAddr": "0x407298",
            "decompiledFuncCode": "\nvoid FUN_00407280(void)\n\n{\n  FUN_00407220();\n  return;\n}\n\n",
            "funcName": "FUN_00407280"
        },
        {
            "funcStartAddr": "0x4072a0",
            "funcEndAddr": "0x4072b3",
            "decompiledFuncCode": "\nvoid FUN_004072a0(void)\n\n{\n  FUN_00407220();\n  return;\n}\n\n",
            "funcName": "FUN_004072a0"
        },
        {
            "funcStartAddr": "0x4072c0",
            "funcEndAddr": "0x4072d5",
            "decompiledFuncCode": "\nvoid FUN_004072c0(void)\n\n{\n  FUN_00406c50();\n  return;\n}\n\n",
            "funcName": "FUN_004072c0"
        },
        {
            "funcStartAddr": "0x4072e0",
            "funcEndAddr": "0x4072f6",
            "decompiledFuncCode": "\nvoid FUN_004072e0(void)\n\n{\n  FUN_00407220();\n  return;\n}\n\n",
            "funcName": "FUN_004072e0"
        },
        {
            "funcStartAddr": "0x407300",
            "funcEndAddr": "0x407318",
            "decompiledFuncCode": "\nvoid FUN_00407300(void)\n\n{\n  FUN_00406c50();\n  return;\n}\n\n",
            "funcName": "FUN_00407300"
        },
        {
            "funcStartAddr": "0x407320",
            "funcEndAddr": "0x40738f",
            "decompiledFuncCode": "\nsize_t FUN_00407320(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  wchar_t local_1c;\n  \n  if (param_2 == (byte *)0x0) {\n    param_3 = 1;\n    param_2 = (byte *)0x409c07;\n  }\n  else {\n    if (param_3 == 0) {\n      return 0xfffffffffffffffe;\n    }\n    if (param_1 != (wchar_t *)0x0) goto LAB_00407344;\n  }\n  param_1 = &local_1c;\nLAB_00407344:\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (cVar1 = FUN_00407840(0), cVar1 == '\\0')) {\n    sVar2 = 1;\n    *param_1 = (uint)*param_2;\n  }\n  return sVar2;\n}\n\n",
            "funcName": "FUN_00407320"
        },
        {
            "funcStartAddr": "0x4073a0",
            "funcEndAddr": "0x407483",
            "decompiledFuncCode": "\nulong * FUN_004073a0(ulong *param_1,char param_2,ulong param_3)\n\n{\n  char cVar1;\n  ulong uVar2;\n  ulong *puVar3;\n  ulong uVar4;\n  \n  if (param_3 == 0) {\n    return (ulong *)0x0;\n  }\n  if (((ulong)param_1 & 7) == 0) {\nLAB_004073e0:\n    uVar4 = (long)(int)(uint)CONCAT11(param_2,param_2) |\n            (long)(int)(uint)CONCAT11(param_2,param_2) << 0x10;\n    uVar4 = uVar4 | uVar4 << 0x20;\n    if (7 < param_3) {\n      uVar2 = *param_1 ^ uVar4;\n      for (uVar2 = ~uVar2 & uVar2 + 0xfefefefefefefeff; (uVar2 & 0x8080808080808080) == 0;\n          uVar2 = ~uVar2 & uVar2 + 0xfefefefefefefeff) {\n        param_3 = param_3 - 8;\n        param_1 = param_1 + 1;\n        if (param_3 < 8) {\n          if (param_3 == 0) {\n            return (ulong *)0x0;\n          }\n          break;\n        }\n        uVar2 = *param_1 ^ uVar4;\n      }\n    }\n    if (param_2 != *(char *)param_1) {\n      puVar3 = (ulong *)((long)param_1 + param_3);\n      do {\n        param_1 = (ulong *)((long)param_1 + 1);\n        if (param_1 == puVar3) {\n          return (ulong *)0x0;\n        }\n      } while (*(char *)param_1 != param_2);\n    }\n  }\n  else {\n    cVar1 = *(char *)param_1;\n    while (param_2 != cVar1) {\n      param_1 = (ulong *)((long)param_1 + 1);\n      param_3 = param_3 - 1;\n      if (param_3 == 0) {\n        return (ulong *)0x0;\n      }\n      if (((ulong)param_1 & 7) == 0) goto LAB_004073e0;\n      cVar1 = *(char *)param_1;\n    }\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_004073a0"
        },
        {
            "funcStartAddr": "0x4074b0",
            "funcEndAddr": "0x4074eb",
            "decompiledFuncCode": "\nvoid FUN_004074b0(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  __fprintf_chk(stderr,1,\"%s\\n\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  exit(DAT_0060c258);\n}\n\n",
            "funcName": "FUN_004074b0"
        },
        {
            "funcStartAddr": "0x4074f0",
            "funcEndAddr": "0x407505",
            "decompiledFuncCode": "\nvoid FUN_004074f0(long param_1,undefined8 param_2)\n\n{\n  if ((*(byte *)(param_1 + 0x50) & 1) != 0) {\n                    /* WARNING: Could not recover jumptable at 0x004074fe. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (**(code **)(param_1 + 0x38))(*(undefined8 *)(param_1 + 0x48));\n    return;\n  }\n                    /* WARNING: Could not recover jumptable at 0x00407503. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (**(code **)(param_1 + 0x38))(param_2);\n  return;\n}\n\n",
            "funcName": "FUN_004074f0"
        },
        {
            "funcStartAddr": "0x407510",
            "funcEndAddr": "0x407525",
            "decompiledFuncCode": "\nvoid FUN_00407510(long param_1,undefined8 param_2)\n\n{\n  if ((*(byte *)(param_1 + 0x50) & 1) != 0) {\n                    /* WARNING: Could not recover jumptable at 0x0040751e. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (**(code **)(param_1 + 0x40))(*(undefined8 *)(param_1 + 0x48));\n    return;\n  }\n                    /* WARNING: Could not recover jumptable at 0x00407523. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (**(code **)(param_1 + 0x40))(param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00407510"
        },
        {
            "funcStartAddr": "0x407530",
            "funcEndAddr": "0x4075bd",
            "decompiledFuncCode": "\nundefined8 FUN_00407530(long *param_1,long param_2,long param_3,long param_4,long param_5)\n\n{\n  long *plVar1;\n  undefined8 uVar2;\n  ulong uVar3;\n  long *plVar4;\n  long lVar5;\n  \n  if (param_3 == 0) {\n    lVar5 = 0xf;\n    param_3 = 0x10;\n  }\n  else {\n    lVar5 = param_3 + -1;\n  }\n  param_1[6] = lVar5;\n  if (param_2 == 0) {\n    param_2 = 0xfe0;\n  }\n  *param_1 = param_2;\n  plVar4 = param_1;\n  plVar1 = (long *)FUN_004074f0();\n  param_1[1] = (long)plVar1;\n  if (plVar1 != (long *)0x0) {\n    uVar3 = -param_3 & (long)plVar1 + lVar5 + 0x10;\n    lVar5 = *param_1;\n    param_1[2] = uVar3;\n    param_1[3] = uVar3;\n    *plVar1 = lVar5 + (long)plVar1;\n    param_1[4] = lVar5 + (long)plVar1;\n    plVar1[1] = 0;\n    *(byte *)(param_1 + 10) = *(byte *)(param_1 + 10) & 0xf9;\n    return 1;\n  }\n  (*(code *)obstack_alloc_failed_handler)();\n  *(byte *)(plVar4 + 10) = *(byte *)(plVar4 + 10) & 0xfe;\n  plVar4[7] = param_4;\n  plVar4[8] = param_5;\n  uVar2 = FUN_00407530();\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00407530"
        },
        {
            "funcStartAddr": "0x4075c0",
            "funcEndAddr": "0x4075d1",
            "decompiledFuncCode": "\nvoid _obstack_begin(long param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                   undefined8 param_5)\n\n{\n  *(byte *)(param_1 + 0x50) = *(byte *)(param_1 + 0x50) & 0xfe;\n  *(undefined8 *)(param_1 + 0x38) = param_4;\n  *(undefined8 *)(param_1 + 0x40) = param_5;\n  FUN_00407530();\n  return;\n}\n\n",
            "funcName": "obstack_begin"
        },
        {
            "funcStartAddr": "0x4075e0",
            "funcEndAddr": "0x4075f5",
            "decompiledFuncCode": "\nvoid _obstack_begin_1(long param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                     undefined8 param_5,undefined8 param_6)\n\n{\n  *(byte *)(param_1 + 0x50) = *(byte *)(param_1 + 0x50) | 1;\n  *(undefined8 *)(param_1 + 0x38) = param_4;\n  *(undefined8 *)(param_1 + 0x40) = param_5;\n  *(undefined8 *)(param_1 + 0x48) = param_6;\n  FUN_00407530();\n  return;\n}\n\n",
            "funcName": "obstack_begin_1"
        },
        {
            "funcStartAddr": "0x407600",
            "funcEndAddr": "0x4076f9",
            "decompiledFuncCode": "\nulong * _obstack_newchunk(ulong **param_1,ulong param_2)\n\n{\n  ulong *puVar1;\n  ulong **ppuVar2;\n  ulong *puVar3;\n  ulong *puVar4;\n  ulong **ppuVar5;\n  ulong __n;\n  \n  __n = (long)param_1[3] - (long)param_1[2];\n  puVar1 = param_1[1];\n  puVar4 = (ulong *)(param_2 + __n + (long)param_1[6]);\n  puVar3 = (ulong *)((long)puVar4 + (__n >> 3) + 100);\n  if (puVar4 <= *param_1) {\n    puVar4 = *param_1;\n  }\n  if (puVar3 <= puVar4) {\n    puVar3 = puVar4;\n  }\n  ppuVar5 = param_1;\n  if ((CARRY8(param_2,__n) == false) && (CARRY8(param_2 + __n,(ulong)param_1[6]) == false)) {\n    puVar4 = puVar3;\n    ppuVar2 = (ulong **)FUN_004074f0();\n    if (ppuVar2 != (ulong **)0x0) {\n      param_1[1] = (ulong *)ppuVar2;\n      ppuVar2[1] = puVar1;\n      param_1[4] = (ulong *)((long)ppuVar2 + (long)puVar3);\n      *ppuVar2 = (ulong *)((long)ppuVar2 + (long)puVar3);\n      puVar4 = (ulong *)((long)(ppuVar2 + 2) + (long)param_1[6] & ~(ulong)param_1[6]);\n      puVar3 = (ulong *)memcpy(puVar4,param_1[2],__n);\n      if ((*(byte *)(param_1 + 10) & 2) == 0) {\n        puVar3 = (ulong *)(~(ulong)param_1[6] & (long)(puVar1 + 2) + (long)param_1[6]);\n        if (param_1[2] == puVar3) {\n          ppuVar2[1] = (ulong *)puVar1[1];\n          puVar3 = (ulong *)FUN_00407510(param_1,puVar1);\n        }\n      }\n      param_1[2] = puVar4;\n      param_1[3] = (ulong *)(__n + (long)puVar4);\n      *(byte *)(param_1 + 10) = *(byte *)(param_1 + 10) & 0xfd;\n      return puVar3;\n    }\n  }\n  (*(code *)obstack_alloc_failed_handler)();\n  puVar3 = ppuVar5[1];\n  if (puVar3 != (ulong *)0x0) {\n    while ((puVar4 <= puVar3 || ((ulong *)*puVar3 < puVar4))) {\n      puVar3 = (ulong *)puVar3[1];\n      if (puVar3 == (ulong *)0x0) {\n        return (ulong *)0x0;\n      }\n    }\n    return (ulong *)0x1;\n  }\n  return puVar3;\n}\n\n",
            "funcName": "obstack_newchunk"
        },
        {
            "funcStartAddr": "0x407700",
            "funcEndAddr": "0x40772d",
            "decompiledFuncCode": "\nulong * _obstack_allocated_p(long param_1,ulong *param_2)\n\n{\n  ulong *puVar1;\n  \n  puVar1 = *(ulong **)(param_1 + 8);\n  if (puVar1 == (ulong *)0x0) {\n    return puVar1;\n  }\n  while ((param_2 <= puVar1 || ((ulong *)*puVar1 < param_2))) {\n    puVar1 = (ulong *)puVar1[1];\n    if (puVar1 == (ulong *)0x0) {\n      return (ulong *)0x0;\n    }\n  }\n  return (ulong *)0x1;\n}\n\n",
            "funcName": "obstack_allocated_p"
        },
        {
            "funcStartAddr": "0x407740",
            "funcEndAddr": "0x4077a0",
            "decompiledFuncCode": "\nvoid _obstack_free(long param_1,ulong *param_2)\n\n{\n  ulong *puVar1;\n  ulong *puVar2;\n  \n  puVar1 = *(ulong **)(param_1 + 8);\n  while( true ) {\n    if (puVar1 == (ulong *)0x0) {\n      if (param_2 == (ulong *)0x0) {\n        return;\n      }\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n    if ((puVar1 < param_2) && (puVar2 = (ulong *)*puVar1, param_2 <= puVar2)) break;\n    puVar1 = (ulong *)puVar1[1];\n    FUN_00407510(param_1);\n    *(byte *)(param_1 + 0x50) = *(byte *)(param_1 + 0x50) | 2;\n  }\n  *(ulong **)(param_1 + 0x18) = param_2;\n  *(ulong **)(param_1 + 0x10) = param_2;\n  *(ulong **)(param_1 + 0x20) = puVar2;\n  *(ulong **)(param_1 + 8) = puVar1;\n  return;\n}\n\n",
            "funcName": "obstack_free"
        },
        {
            "funcStartAddr": "0x4077b0",
            "funcEndAddr": "0x4077d4",
            "decompiledFuncCode": "\nlong _obstack_memory_used(long param_1)\n\n{\n  long lVar1;\n  long lVar2;\n  long *plVar3;\n  \n  plVar3 = *(long **)(param_1 + 8);\n  lVar1 = 0;\n  if (plVar3 == (long *)0x0) {\n    return 0;\n  }\n  do {\n    lVar2 = *plVar3 - (long)plVar3;\n    plVar3 = (long *)plVar3[1];\n    lVar1 = lVar1 + lVar2;\n  } while (plVar3 != (long *)0x0);\n  return lVar1;\n}\n\n",
            "funcName": "obstack_memory_used"
        },
        {
            "funcStartAddr": "0x4077e0",
            "funcEndAddr": "0x40783c",
            "decompiledFuncCode": "\nulong FUN_004077e0(uint *param_1)\n\n{\n  uint uVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  uVar1 = *param_1;\n  uVar3 = FUN_00406430(param_1);\n  if ((uVar1 & 0x20) == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_004077e0"
        },
        {
            "funcStartAddr": "0x407840",
            "funcEndAddr": "0x407896",
            "decompiledFuncCode": "\nbool FUN_00407840(int param_1)\n\n{\n  bool bVar1;\n  byte *pbVar2;\n  long lVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  bool bVar8;\n  byte bVar9;\n  \n  bVar9 = 0;\n  pbVar2 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar1 = true;\n  bVar6 = false;\n  bVar8 = pbVar2 == (byte *)0x0;\n  if (!bVar8) {\n    lVar3 = 2;\n    pbVar4 = pbVar2;\n    pbVar5 = &DAT_00409c0c;\n    do {\n      if (lVar3 == 0) break;\n      lVar3 = lVar3 + -1;\n      bVar6 = *pbVar4 < *pbVar5;\n      bVar8 = *pbVar4 == *pbVar5;\n      pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      pbVar5 = pbVar5 + (ulong)bVar9 * -2 + 1;\n    } while (bVar8);\n    bVar1 = false;\n    bVar7 = false;\n    bVar6 = (!bVar6 && !bVar8) == bVar6;\n    if (!bVar6) {\n      lVar3 = 6;\n      pbVar4 = (byte *)\"POSIX\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar2 < *pbVar4;\n        bVar6 = *pbVar2 == *pbVar4;\n        pbVar2 = pbVar2 + (ulong)bVar9 * -2 + 1;\n        pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      } while (bVar6);\n      return (!bVar7 && !bVar6) != bVar7;\n    }\n  }\n  return bVar1;\n}\n\n",
            "funcName": "FUN_00407840"
        },
        {
            "funcStartAddr": "0x4078a0",
            "funcEndAddr": "0x407df4",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nchar * FUN_004078a0(void)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  char *__s1;\n  size_t sVar5;\n  size_t sVar6;\n  char *pcVar7;\n  size_t __n;\n  char *__file;\n  FILE *__stream;\n  byte *pbVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  long lVar11;\n  ulong uVar12;\n  undefined8 *puVar13;\n  char *__ptr;\n  bool bVar14;\n  long local_d0;\n  undefined8 local_c0;\n  undefined8 local_b8;\n  undefined auStack_80 [8];\n  undefined8 local_78;\n  \n  __s1 = nl_langinfo(0xe);\n  if (__s1 == (char *)0x0) {\n    __s1 = \"\";\n  }\n  if (DAT_0060c4f8 != (char *)0x0) goto LAB_004078da;\n  pcVar7 = getenv(\"CHARSETALIASDIR\");\n  if ((pcVar7 == (char *)0x0) || (*pcVar7 == '\\0')) {\n    sVar6 = 0x73;\n    sVar5 = 0x65;\n    __n = 100;\n    pcVar7 = \n    \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\"\n    ;\nLAB_004079c5:\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      __file[__n] = '/';\n      goto LAB_004079e6;\n    }\n  }\n  else {\n    __n = strlen(pcVar7);\n    if (__n == 0) {\n      sVar6 = 0xe;\n    }\n    else {\n      if (pcVar7[__n - 1] != '/') {\n        sVar6 = __n + 0xf;\n        sVar5 = __n + 1;\n        goto LAB_004079c5;\n      }\n      sVar6 = __n + 0xe;\n    }\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      sVar5 = __n;\nLAB_004079e6:\n      puVar13 = (undefined8 *)(__file + sVar5);\n      *puVar13 = 0x2e74657372616863;\n      *(undefined2 *)((long)puVar13 + 0xc) = 0x73;\n      *(undefined4 *)(puVar13 + 1) = 0x61696c61;\n      iVar2 = open(__file,0);\n      if (-1 < iVar2) {\n        __stream = fdopen(iVar2,\"r\");\n        local_d0 = 0;\n        if (__stream != (FILE *)0x0) {\n          pcVar7 = (char *)0x0;\nLAB_00407a80:\n          pbVar8 = (byte *)__stream->_IO_read_ptr;\n          if (__stream->_IO_read_end <= pbVar8) goto LAB_00407c0c;\n          do {\n            __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n            uVar4 = (uint)*pbVar8;\n            __ptr = pcVar7;\n            while( true ) {\n              pcVar7 = __ptr;\n              if ((uVar4 - 9 < 2) || (uVar4 == 0x20)) goto LAB_00407a80;\n              if (uVar4 == 0x23) goto LAB_00407c71;\n              ungetc(uVar4,__stream);\n              iVar2 = fscanf(__stream,\"%50s %50s\",&local_b8,&local_78);\n              puVar13 = &local_b8;\n              if (iVar2 < 2) goto LAB_00407c1f;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              lVar11 = (long)puVar13 +\n                       ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_b8);\n              puVar13 = &local_78;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              local_c0 = (long)puVar13 +\n                         ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_78);\n              lVar9 = lVar11 + local_c0;\n              if (local_d0 == 0) {\n                pcVar7 = (char *)malloc(lVar9 + 3);\n              }\n              else {\n                lVar9 = lVar9 + local_d0;\n                pcVar7 = (char *)realloc(__ptr,lVar9 + 3);\n              }\n              local_d0 = lVar9 + 2;\n              if (pcVar7 == (char *)0x0) {\n                pcVar7 = \"\";\n                free(__ptr);\n                FUN_00406430(__stream);\n                goto LAB_00407a24;\n              }\n              uVar12 = lVar11 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (-2 - lVar11) + (local_d0 - local_c0));\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_b8;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 2));\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_b8;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 4));\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_b8._4_4_,(undefined4)local_b8);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 8));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_b8 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              uVar12 = local_c0 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (local_d0 - local_c0) + -1);\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_78;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 6);\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_78;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 4);\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_78._4_4_,(undefined4)local_78);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)auStack_80 + (uVar12 & 0xffffffff));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_78 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              pbVar8 = (byte *)__stream->_IO_read_ptr;\n              if (pbVar8 < __stream->_IO_read_end) break;\nLAB_00407c0c:\n              uVar4 = __uflow(__stream);\n              __ptr = pcVar7;\n              if (uVar4 == 0xffffffff) goto LAB_00407c1f;\n            }\n          } while( true );\n        }\n        close(iVar2);\n      }\n      goto LAB_00407a1e;\n    }\n  }\n  DAT_0060c4f8 = \"\";\nLAB_004078da:\n  cVar1 = *DAT_0060c4f8;\n  pcVar7 = DAT_0060c4f8;\n  do {\n    if (cVar1 == '\\0') {\nLAB_00407934:\n      if (*__s1 == '\\0') {\n        __s1 = \"ASCII\";\n      }\n      return __s1;\n    }\n    iVar2 = strcmp(__s1,pcVar7);\n    if ((iVar2 == 0) || ((cVar1 == '*' && (pcVar7[1] == '\\0')))) {\n      sVar6 = strlen(pcVar7);\n      __s1 = pcVar7 + sVar6 + 1;\n      goto LAB_00407934;\n    }\n    sVar6 = strlen(pcVar7);\n    sVar5 = strlen(pcVar7 + sVar6 + 1);\n    pcVar7 = pcVar7 + sVar6 + 1 + sVar5 + 1;\n    cVar1 = *pcVar7;\n  } while( true );\nLAB_00407c71:\n  do {\n    pbVar8 = (byte *)__stream->_IO_read_ptr;\n    if (pbVar8 < __stream->_IO_read_end) {\n      __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n      uVar4 = (uint)*pbVar8;\n      bVar14 = true;\n    }\n    else {\n      uVar4 = __uflow(__stream);\n      bVar14 = uVar4 != 0xffffffff;\n    }\n  } while ((uVar4 != 10) && (bVar14));\n  if (uVar4 == 0xffffffff) goto LAB_00407c1f;\n  goto LAB_00407a80;\nLAB_00407c1f:\n  FUN_00406430(__stream);\n  if (local_d0 == 0) {\nLAB_00407a1e:\n    pcVar7 = \"\";\n  }\n  else {\n    pcVar7[local_d0] = '\\0';\n  }\nLAB_00407a24:\n  free(__file);\n  DAT_0060c4f8 = pcVar7;\n  goto LAB_004078da;\n}\n\n",
            "funcName": "FUN_004078a0"
        },
        {
            "funcStartAddr": "0x407e10",
            "funcEndAddr": "0x407e6d",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00407e43) */\n/* WARNING: Removing unreachable block (ram,0x00407e48) */\n\nvoid FUN_00407e10(void)\n\n{\n  __DT_INIT();\n  return;\n}\n\n",
            "funcName": "FUN_00407e10"
        },
        {
            "funcStartAddr": "0x407e70",
            "funcEndAddr": "0x407e71",
            "decompiledFuncCode": "\nvoid FUN_00407e70(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00407e70"
        },
        {
            "funcStartAddr": "0x407e80",
            "funcEndAddr": "0x407e98",
            "decompiledFuncCode": "\nvoid FUN_00407e80(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,DAT_0060c248);\n  return;\n}\n\n",
            "funcName": "FUN_00407e80"
        },
        {
            "funcStartAddr": "0x407e98",
            "funcEndAddr": "0x407eb8",
            "decompiledFuncCode": "\nundefined8 FUN_00407e98(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  code **ppcVar1;\n  \n  for (ppcVar1 = (code **)&DAT_0060be30; *ppcVar1 != (code *)0xffffffffffffffff;\n      ppcVar1 = ppcVar1 + -1) {\n    (**ppcVar1)();\n  }\n  return param_3;\n}\n\n",
            "funcName": "FUN_00407e98"
        }
    ],
    "decompilerName": "Ghidra",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_wc.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O"
}