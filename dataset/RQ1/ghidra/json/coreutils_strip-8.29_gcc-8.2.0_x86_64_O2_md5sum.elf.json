{
    "funcCount": 105,
    "funcInfo": [
        {
            "funcStartAddr": "0x401925",
            "funcEndAddr": "0x40192a",
            "decompiledFuncCode": "\nvoid FUN_00401925(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401925"
        },
        {
            "funcStartAddr": "0x40192a",
            "funcEndAddr": "0x40192f",
            "decompiledFuncCode": "\nvoid FUN_0040192a(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040192a"
        },
        {
            "funcStartAddr": "0x40192f",
            "funcEndAddr": "0x401934",
            "decompiledFuncCode": "\nvoid FUN_0040192f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040192f"
        },
        {
            "funcStartAddr": "0x401934",
            "funcEndAddr": "0x401939",
            "decompiledFuncCode": "\nvoid FUN_00401934(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401934"
        },
        {
            "funcStartAddr": "0x401940",
            "funcEndAddr": "0x402836",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nbyte FUN_00401940(ulong param_1,undefined8 *param_2)\n\n{\n  undefined *puVar1;\n  byte bVar2;\n  char cVar3;\n  int iVar4;\n  uint uVar5;\n  long lVar6;\n  __ssize_t _Var7;\n  __int32_t **pp_Var8;\n  undefined8 uVar9;\n  int *piVar10;\n  FILE *__stream;\n  undefined8 uVar11;\n  long lVar12;\n  ulong uVar13;\n  ulong uVar14;\n  ulong uVar15;\n  byte *pbVar16;\n  char *pcVar17;\n  byte *pbVar18;\n  long lVar19;\n  long lVar20;\n  byte bVar21;\n  byte *pbVar22;\n  byte *pbVar23;\n  bool bVar24;\n  bool bVar25;\n  byte bVar26;\n  char **local_e8;\n  char *local_e0;\n  byte local_d5;\n  ulong local_d0;\n  char **local_b0;\n  ulong local_a8;\n  byte local_a0;\n  char local_9f;\n  char local_9e;\n  char local_9d;\n  int local_9c;\n  char local_89;\n  byte *local_88;\n  size_t local_80;\n  undefined local_78 [32];\n  byte local_58 [40];\n  \n  bVar26 = 0;\n  uVar13 = 0;\n  pbVar22 = (byte *)0x0;\n  lVar20 = 0xffffffff;\n  __stream = (FILE *)(param_1 & 0xffffffff);\n  FUN_00403f60(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\");\n  textdomain(\"coreutils\");\n  FUN_00407b30(FUN_00403080);\n  setvbuf(stdout,(char *)0x0,1,0);\nLAB_004019b8:\n  do {\n    while( true ) {\n      while( true ) {\n        while( true ) {\n          iVar4 = FUN_00407390(__stream,param_2,&DAT_00407c4f,&PTR_s_binary_004086e0,0);\n          if (iVar4 == -1) {\n            _DAT_0060c2e8 = 0x22;\n            DAT_0060c2e0 = 0x20;\n            if (((int)lVar20 == 0) && ((char)uVar13 != '\\0')) {\n              pcVar17 = \"--tag does not support --text mode\";\n              goto LAB_004026aa;\n            }\n            bVar21 = (byte)pbVar22;\n            if ((bVar21 != 0) &&\n               (pcVar17 = \"the --tag option is meaningless when verifying checksums\",\n               (char)uVar13 != '\\0')) goto LAB_004026aa;\n            pcVar17 = \"the --binary and --text options are meaningless when verifying checksums\";\n            if ((bVar21 & (byte)~(byte)((ulong)lVar20 >> 0x18) >> 7) != 0) goto LAB_004026aa;\n            if (DAT_0060c2da != '\\0') goto LAB_00401df3;\n            if (DAT_0060c2dc == '\\0') {\n              if (DAT_0060c2db == '\\0') goto LAB_0040268a;\n              pcVar17 = \"the --warn option is meaningful only when verifying checksums\";\n              if (bVar21 != 0) goto LAB_00401bdb;\n              goto LAB_004026aa;\n            }\n            pcVar17 = \"the --status option is meaningful only when verifying checksums\";\n            goto joined_r0x00401bb0;\n          }\n          if (iVar4 != 0x77) break;\n          DAT_0060c2dc = '\\0';\n          DAT_0060c2db = '\\x01';\n          DAT_0060c2d9 = '\\0';\n        }\n        if (iVar4 < 0x78) break;\n        if (iVar4 == 0x82) goto LAB_00401af8;\n        if (iVar4 < 0x83) {\n          if (iVar4 == 0x80) {\n            DAT_0060c2da = '\\x01';\n          }\n          else {\n            if (iVar4 != 0x81) goto LAB_004026bf;\n            DAT_0060c2dc = '\\x01';\n            DAT_0060c2db = '\\0';\n            DAT_0060c2d9 = '\\0';\n          }\n        }\n        else {\n          if (iVar4 != 0x83) {\n            if (iVar4 == 0x84) {\n              uVar13 = 1;\n              goto LAB_00401a39;\n            }\n            goto LAB_004026bf;\n          }\n          DAT_0060c2d8 = 1;\n        }\n      }\n      if (iVar4 != 0x62) break;\nLAB_00401a39:\n      lVar20 = 1;\n    }\n    if (0x62 < iVar4) {\n      if (iVar4 == 99) {\n        pbVar22 = (byte *)0x1;\n      }\n      else {\n        if (iVar4 != 0x74) break;\n        lVar20 = 0;\n      }\n      goto LAB_004019b8;\n    }\n    if (iVar4 == -0x83) {\n      FUN_00406010(stdout,\"md5sum\",\"GNU coreutils\",PTR_DAT_0060c218,\"Ulrich Drepper\",\"Scott Miller\",\n                   \"David Madore\",0);\n                    /* WARNING: Subroutine does not return */\n      exit(0);\n    }\n    if (iVar4 != -0x82) break;\n    FUN_00402c90(0);\nLAB_00401af8:\n    DAT_0060c2dc = '\\0';\n    DAT_0060c2db = '\\0';\n    DAT_0060c2d9 = '\\x01';\n  } while( true );\nLAB_004026bf:\n  FUN_00402c90(1);\nLAB_004026c9:\n  __stream = (FILE *)FUN_00405a00(0,3,local_e0);\n  uVar11 = dcgettext(0,\"%s: no file was verified\",5);\n  error(0,0,uVar11,__stream);\nLAB_00402036:\n  uVar5 = (uint)param_2 & 1;\nLAB_0040203b:\n  local_a0 = local_a0 & (byte)uVar5;\nLAB_004021b1:\n  do {\n    local_e8 = local_e8 + 1;\n    if (local_e8 < local_b0) goto LAB_00401c50;\nLAB_004021c5:\n    if ((DAT_0060c2f0 == '\\0') || (iVar4 = FUN_004063e0(stdin), iVar4 != -1)) {\n      return local_a0 ^ 1;\n    }\n    param_2 = (undefined8 *)dcgettext(0,\"standard input\",5);\n    piVar10 = __errno_location();\n    error(1,*piVar10,param_2);\nLAB_0040268a:\n    if ((DAT_0060c2d9 == '\\x01') &&\n       (pcVar17 = \"the --quiet option is meaningful only when verifying checksums\",\n       (char)pbVar22 == '\\0')) break;\nLAB_00401bbf:\n    if ((DAT_0060c2d8 != 0) &&\n       (pcVar17 = \"the --strict option is meaningful only when verifying checksums\",\n       (char)pbVar22 == '\\0')) break;\nLAB_00401bdb:\n    while( true ) {\n      if ((int)lVar20 == -1) {\n        lVar20 = 0;\n      }\n      local_b0 = (char **)(param_2 + (int)__stream);\n      lVar6 = (long)DAT_0060c29c;\n      if (DAT_0060c29c == (int)__stream) {\n        *local_b0 = \"-\";\n        local_b0 = local_b0 + 1;\n      }\n      local_e8 = (char **)(param_2 + lVar6);\n      if (local_b0 <= local_e8) {\n        local_a0 = 1;\n        goto LAB_004021c5;\n      }\n      local_a0 = 1;\n      local_d5 = (byte)pbVar22;\n      local_9e = (char)uVar13;\n      local_9c = (-(uint)((int)lVar20 == 0) & 0xfffffff6) + 0x2a;\n      local_9d = (char)local_9c;\nLAB_00401c50:\n      local_e0 = *local_e8;\n      if (local_d5 == 0) break;\n      iVar4 = strcmp(local_e0,\"-\");\n      if (iVar4 == 0) {\n        DAT_0060c2f0 = '\\x01';\n        local_e0 = (char *)dcgettext(0,\"standard input\",5);\n        __stream = stdin;\n      }\n      else {\n        __stream = (FILE *)FUN_00403ec0(local_e0,\"r\");\n        if (__stream == (FILE *)0x0) {\nLAB_00402259:\n          uVar11 = FUN_00405a00(0,3,local_e0);\n          piVar10 = __errno_location();\n          error(0,*piVar10,\"%s\",uVar11);\n          uVar5 = 0;\n          goto LAB_0040203b;\n        }\n      }\n      local_9f = '\\0';\n      uVar13 = 0;\n      lVar20 = 0;\n      lVar6 = 1;\n      local_88 = (byte *)0x0;\n      local_80 = 0;\n      local_a8 = 0;\n      local_d0 = 0;\n      do {\n        _Var7 = __getdelim((char **)&local_88,&local_80,10,__stream);\n        pbVar23 = local_88;\n        if (_Var7 < 1) {\nLAB_00401fa5:\n          free(local_88);\n          param_2 = (undefined8 *)0x0;\n          if ((__stream->_flags & 0x20U) != 0) {\n            uVar11 = FUN_00405a00(0,3,local_e0);\n            uVar9 = dcgettext(0,\"%s: read error\",5);\n            error(0,0,uVar9,uVar11);\n            uVar5 = 0;\n            goto LAB_0040203b;\n          }\n          if ((iVar4 != 0) && (iVar4 = FUN_004063e0(), iVar4 != 0)) goto LAB_00402259;\n          if ((char)uVar13 == '\\0') {\n            __stream = (FILE *)FUN_00405a00(0,3,local_e0);\n            uVar11 = dcgettext(0,\"%s: no properly formatted %s checksum lines found\",5);\n            error(0,0,uVar11,__stream,&DAT_00407b91);\n            goto LAB_00402036;\n          }\n          if (DAT_0060c2dc == '\\0') {\n            if (lVar20 != 0) {\n              uVar11 = dcngettext(0,\"WARNING: %lu line is improperly formatted\",\n                                  \"WARNING: %lu lines are improperly formatted\",lVar20,5);\n              error(0,0,uVar11,lVar20);\n            }\n            if (local_d0 != 0) {\n              uVar11 = dcngettext(0,\"WARNING: %lu listed file could not be read\",\n                                  \"WARNING: %lu listed files could not be read\",local_d0,5);\n              error(0,0,uVar11,local_d0);\n              uVar13 = local_d0;\n            }\n            if (local_a8 != 0) {\n              uVar11 = dcngettext(0,\"WARNING: %lu computed checksum did NOT match\",\n                                  \"WARNING: %lu computed checksums did NOT match\",local_a8,5);\n              error(0,0,uVar11,local_a8);\n              uVar13 = local_a8;\n            }\n            if (DAT_0060c2da == '\\0') goto LAB_004022a8;\n            if (local_9f == '\\0') goto LAB_004026c9;\n          }\n          else {\nLAB_004022a8:\n            if (local_9f == '\\0') goto LAB_00402036;\n          }\n          if ((local_d0 | local_a8) == 0) {\n            param_2 = (undefined8 *)(ulong)(DAT_0060c2d8 ^ 1 | (uint)(lVar20 == 0));\n          }\n          goto LAB_00402036;\n        }\n        bVar21 = *local_88;\n        if (bVar21 == 0x23) {\nLAB_00401da6:\n          bVar21 = *(byte *)&__stream->_flags;\n        }\n        else {\n          if (local_88[_Var7 + -1] == 10) {\n            _Var7 = _Var7 + -1;\n            local_88[_Var7] = 0;\n            bVar21 = *local_88;\n          }\n          uVar14 = 0;\n          if (bVar21 != 0x20) goto LAB_00401d3e;\n          do {\n            do {\n              uVar14 = uVar14 + 1;\n              bVar21 = local_88[uVar14];\n            } while (bVar21 == 0x20);\nLAB_00401d3e:\n          } while (bVar21 == 9);\n          bVar24 = bVar21 < 0x5c;\n          bVar25 = bVar21 == 0x5c;\n          bVar21 = 0;\n          if (bVar25) {\n            bVar24 = 0xfffffffffffffffe < uVar14;\n            uVar14 = uVar14 + 1;\n            bVar25 = uVar14 == 0;\n            bVar21 = local_d5;\n          }\n          pbVar22 = local_88 + uVar14;\n          lVar12 = 3;\n          pbVar16 = pbVar22;\n          pbVar18 = &DAT_00407b91;\n          do {\n            if (lVar12 == 0) break;\n            lVar12 = lVar12 + -1;\n            bVar24 = *pbVar16 < *pbVar18;\n            bVar25 = *pbVar16 == *pbVar18;\n            pbVar16 = pbVar16 + (ulong)bVar26 * -2 + 1;\n            pbVar18 = pbVar18 + (ulong)bVar26 * -2 + 1;\n          } while (bVar25);\n          if ((!bVar24 && !bVar25) == bVar24) {\n            bVar2 = local_88[uVar14 + 3];\n            lVar12 = uVar14 + 3;\n            if (bVar2 == 0x20) {\n              bVar2 = local_88[uVar14 + 4];\n              lVar12 = uVar14 + 4;\n            }\n            if (bVar2 == 0x28) {\n              lVar19 = _Var7 - (lVar12 + 1);\n              if (lVar19 != 0) {\n                pbVar23 = local_88 + lVar12 + 1;\n                lVar12 = lVar19 + -1;\n                if (lVar12 == 0) {\nLAB_00402229:\n                  if (*pbVar23 != 0x29) goto LAB_00401d95;\n                  lVar12 = 0;\n                  pbVar16 = pbVar23;\n                }\n                else {\n                  bVar2 = pbVar23[lVar19 + -1];\n                  while (bVar2 != 0x29) {\n                    lVar12 = lVar12 + -1;\n                    if (lVar12 == 0) goto LAB_00402229;\n                    bVar2 = pbVar23[lVar12];\n                  }\n                  pbVar16 = pbVar23 + lVar12;\n                }\n                if ((bVar21 == 0) || (lVar19 = FUN_004029b0(pbVar23,lVar12), lVar19 != 0)) {\n                  *pbVar16 = 0;\n                  bVar21 = pbVar23[lVar12 + 1];\n                  lVar12 = lVar12 + 1;\n                  if ((bVar21 == 9) || (bVar21 == 0x20)) {\n                    do {\n                      do {\n                        lVar12 = lVar12 + 1;\n                        bVar21 = pbVar23[lVar12];\n                      } while (bVar21 == 0x20);\n                    } while (bVar21 == 9);\n                  }\n                  if (bVar21 == 0x3d) {\n                    pbVar22 = pbVar23 + lVar12 + 1;\n                    if ((*pbVar22 == 0x20) || (*pbVar22 == 9)) {\n                      pbVar16 = pbVar23 + lVar12 + 2;\n                      do {\n                        do {\n                          pbVar22 = pbVar16;\n                          pbVar16 = pbVar22 + 1;\n                        } while (*pbVar22 == 0x20);\n                      } while (*pbVar22 == 9);\n                    }\n                    cVar3 = FUN_00402950(pbVar22);\n                    goto LAB_00402441;\n                  }\n                }\n              }\n            }\nLAB_00401d95:\n            lVar20 = lVar20 + 1;\n            if (DAT_0060c2db != '\\0') {\n              uVar11 = FUN_00405a00(0,3,local_e0);\n              uVar9 = dcgettext(0,\"%s: %lu: improperly formatted %s checksum line\",5);\n              error(0,0,uVar9,uVar11,lVar6,&DAT_00407b91);\n            }\n            goto LAB_00401da6;\n          }\n          if (_Var7 - uVar14 < (ulong)(*pbVar22 == 0x5c) + _DAT_0060c2e8) goto LAB_00401d95;\n          lVar12 = uVar14 + DAT_0060c2e0;\n          bVar2 = local_88[lVar12];\n          if ((bVar2 != 0x20) && (bVar2 != 9)) goto LAB_00401d95;\n          local_88[lVar12] = 0;\n          cVar3 = FUN_00402950(pbVar22);\n          if (cVar3 == '\\0') goto LAB_00401d95;\n          lVar19 = lVar12 + 1;\n          if ((_Var7 - lVar19 == 1) ||\n             ((bVar2 = pbVar23[lVar12 + 1], bVar2 != 0x20 && (bVar2 != 0x2a)))) {\n            if (DAT_0060c210 == 0) goto LAB_00401d95;\n            DAT_0060c210 = 1;\n          }\n          else if (DAT_0060c210 != 1) {\n            DAT_0060c210 = 0;\n            lVar19 = lVar12 + 2;\n          }\n          pbVar23 = pbVar23 + lVar19;\n          if (bVar21 != 0) {\n            lVar12 = FUN_004029b0(pbVar23,_Var7 - lVar19);\n            cVar3 = lVar12 != 0;\nLAB_00402441:\n            if (cVar3 == '\\0') goto LAB_00401d95;\n          }\n          bVar24 = false;\n          bVar25 = iVar4 == 0;\n          if (bVar25) {\n            lVar12 = 2;\n            pbVar16 = pbVar23;\n            pbVar18 = &DAT_00409b0a;\n            do {\n              if (lVar12 == 0) break;\n              lVar12 = lVar12 + -1;\n              bVar24 = *pbVar16 < *pbVar18;\n              bVar25 = *pbVar16 == *pbVar18;\n              pbVar16 = pbVar16 + (ulong)bVar26 * -2 + 1;\n              pbVar18 = pbVar18 + (ulong)bVar26 * -2 + 1;\n            } while (bVar25);\n            if ((!bVar24 && !bVar25) == bVar24) goto LAB_00401d95;\n          }\n          bVar24 = false;\n          if (DAT_0060c2dc == '\\0') {\n            pcVar17 = strchr((char *)pbVar23,10);\n            bVar24 = pcVar17 != (char *)0x0;\n          }\n          cVar3 = FUN_00402af0(pbVar23,local_58,&local_89);\n          if (cVar3 == '\\0') {\n            local_d0 = local_d0 + 1;\n            if (DAT_0060c2dc == '\\0') {\n              if (bVar24 != false) {\n                pcVar17 = stdout->_IO_write_ptr;\n                if (pcVar17 < stdout->_IO_write_end) {\n                  stdout->_IO_write_ptr = pcVar17 + 1;\n                  *pcVar17 = '\\\\';\n                }\n                else {\n                  __overflow(stdout,0x5c);\n                }\n              }\n              FUN_00402a40(pbVar23,bVar24);\n              pcVar17 = \"FAILED open or read\";\nLAB_00401f7a:\n              uVar11 = dcgettext(0,pcVar17,5);\n              __printf_chk(1,\": %s\\n\",uVar11);\n            }\n          }\n          else if ((DAT_0060c2da == '\\0') || (local_89 == '\\0')) {\n            uVar13 = DAT_0060c2e0 >> 1;\n            if (uVar13 == 0) {\n              uVar14 = 0;\n            }\n            else {\n              pp_Var8 = __ctype_tolower_loc();\n              uVar15 = 0;\n              do {\n                if (((*pp_Var8)[pbVar22[uVar15 * 2]] !=\n                     (int)\"0123456789abcdef\"[local_58[uVar15] >> 4]) ||\n                   ((*pp_Var8)[pbVar22[uVar15 * 2 + 1]] !=\n                    (int)\"0123456789abcdef\"[local_58[uVar15] & 0xf])) {\n                  local_a8 = local_a8 + 1;\n                  if (DAT_0060c2dc != '\\0') goto LAB_00401f95;\n                  uVar14 = uVar15;\n                  if (bVar24 == false) goto LAB_00402156;\n                  goto LAB_00402136;\n                }\n                uVar15 = uVar15 + 1;\n                uVar14 = uVar13;\n              } while (uVar13 != uVar15);\n            }\n            local_9f = DAT_0060c2dc;\n            if ((DAT_0060c2dc == '\\0') && (local_9f = DAT_0060c2d9, DAT_0060c2d9 == '\\0')) {\n              local_9f = cVar3;\n              if (bVar24 == false) {\n                FUN_00402a40(pbVar23,0);\n              }\n              else {\nLAB_00402136:\n                pcVar17 = stdout->_IO_write_ptr;\n                if (pcVar17 < stdout->_IO_write_end) {\n                  stdout->_IO_write_ptr = pcVar17 + 1;\n                  *pcVar17 = '\\\\';\n                }\n                else {\n                  __overflow(stdout,0x5c);\n                }\nLAB_00402156:\n                FUN_00402a40(pbVar23,bVar24);\n                if (uVar13 != uVar14) {\n                  pcVar17 = \"FAILED\";\n                  goto LAB_00401f7a;\n                }\n              }\n              if (DAT_0060c2d9 == '\\0') {\n                pcVar17 = \"OK\";\n                goto LAB_00401f7a;\n              }\n            }\n          }\nLAB_00401f95:\n          uVar13 = (ulong)local_d5;\n          bVar21 = *(byte *)&__stream->_flags;\n        }\n        if ((bVar21 & 0x30) != 0) goto LAB_00401fa5;\n        lVar6 = lVar6 + 1;\n      } while (lVar6 != 0);\n      param_2 = (undefined8 *)FUN_00405a00(0,3,local_e0);\n      uVar11 = dcgettext(0,\"%s: too many checksum lines\",5);\n      error(1,0,uVar11,param_2);\nLAB_00401df3:\n      pcVar17 = \"the --ignore-missing option is meaningful only when verifying checksums\";\n      bVar21 = (byte)pbVar22;\njoined_r0x00401bb0:\n      if (bVar21 == 0) goto LAB_004026aa;\n      if (DAT_0060c2db == '\\0') goto LAB_00401bbf;\n    }\n    cVar3 = FUN_00402af0(local_e0,local_78,local_58);\n    if (cVar3 == '\\0') {\n      local_a0 = 0;\n      goto LAB_004021b1;\n    }\n    pcVar17 = strchr(local_e0,0x5c);\n    if ((pcVar17 == (char *)0x0) && (pcVar17 = strchr(local_e0,10), pcVar17 == (char *)0x0)) {\n      uVar11 = 0;\n      if (local_9e != '\\0') goto LAB_004025d9;\njoined_r0x0040236f:\n      if (DAT_0060c2e0 >> 1 == 0) goto LAB_00402371;\n    }\n    else {\n      if (local_9e == '\\0') {\n        pcVar17 = stdout->_IO_write_ptr;\n        if (pcVar17 < stdout->_IO_write_end) {\n          stdout->_IO_write_ptr = pcVar17 + 1;\n          *pcVar17 = '\\\\';\n        }\n        else {\n          __overflow(stdout,0x5c);\n        }\n        uVar11 = 1;\n        goto joined_r0x0040236f;\n      }\n      pcVar17 = stdout->_IO_write_ptr;\n      if (stdout->_IO_write_end < pcVar17 || stdout->_IO_write_end == pcVar17) {\n        uVar11 = 1;\n        __overflow(stdout,0x5c);\n      }\n      else {\n        uVar11 = 1;\n        stdout->_IO_write_ptr = pcVar17 + 1;\n        *pcVar17 = '\\\\';\n      }\nLAB_004025d9:\n      fwrite_unlocked(&DAT_00407b91,1,3,stdout);\n      fwrite_unlocked(&DAT_00407cca,1,2,stdout);\n      FUN_00402a40(local_e0,uVar11);\n      fwrite_unlocked(&DAT_00407ccd,1,4,stdout);\n      if (DAT_0060c2e0 >> 1 == 0) goto LAB_00402339;\n    }\n    __stream = (FILE *)0x0;\n    do {\n      puVar1 = local_78 + (long)__stream;\n      __stream = (FILE *)((long)&__stream->_flags + 1);\n      __printf_chk(1,&DAT_00407cc5,*puVar1);\n    } while (__stream < (FILE *)(DAT_0060c2e0 >> 1));\nLAB_00402339:\n    if (local_9e == '\\0') {\nLAB_00402371:\n      pcVar17 = stdout->_IO_write_ptr;\n      if (pcVar17 < stdout->_IO_write_end) {\n        stdout->_IO_write_ptr = pcVar17 + 1;\n        *pcVar17 = ' ';\n      }\n      else {\n        __overflow(stdout,0x20);\n      }\n      pcVar17 = stdout->_IO_write_ptr;\n      if (pcVar17 < stdout->_IO_write_end) {\n        stdout->_IO_write_ptr = pcVar17 + 1;\n        *pcVar17 = local_9d;\n      }\n      else {\n        __overflow(stdout,local_9c);\n      }\n      FUN_00402a40(local_e0,uVar11);\n    }\n    pcVar17 = stdout->_IO_write_ptr;\n    if (pcVar17 < stdout->_IO_write_end) {\n      stdout->_IO_write_ptr = pcVar17 + 1;\n      *pcVar17 = '\\n';\n    }\n    else {\n      __overflow(stdout,10);\n    }\n  } while( true );\nLAB_004026aa:\n  uVar11 = dcgettext(0,pcVar17,5);\n  error(0,0,uVar11);\n  goto LAB_004026bf;\n}\n\n",
            "funcName": "FUN_00401940"
        },
        {
            "funcStartAddr": "0x402870",
            "funcEndAddr": "0x40289b",
            "decompiledFuncCode": "\nvoid FUN_00402870(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_0060bff0)\n            (FUN_00401940,unaff_retaddr,&stack0x00000008,FUN_00407ac0,FUN_00407b20,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "funcName": "FUN_00402870"
        },
        {
            "funcStartAddr": "0x40289b",
            "funcEndAddr": "0x4028ba",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004028a8) */\n/* WARNING: Removing unreachable block (ram,0x004028b2) */\n\nvoid FUN_0040289b(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_0040289b"
        },
        {
            "funcStartAddr": "0x4028ba",
            "funcEndAddr": "0x4028f1",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004028e9) */\n\nvoid FUN_004028ba(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_004028ba"
        },
        {
            "funcStartAddr": "0x4028f1",
            "funcEndAddr": "0x402948",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402926) */\n\nvoid FUN_004028f1(void)\n\n{\n  if (DAT_0060c2c8 != '\\0') {\n    return;\n  }\n  FUN_0040289b();\n  DAT_0060c2c8 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_004028f1"
        },
        {
            "funcStartAddr": "0x402948",
            "funcEndAddr": "0x40294d",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004028e9) */\n\nvoid thunk_FUN_004028ba(void)\n\n{\n  return;\n}\n\n",
            "funcName": "thunk_402948"
        },
        {
            "funcStartAddr": "0x402950",
            "funcEndAddr": "0x4029a0",
            "decompiledFuncCode": "\nulong FUN_00402950(byte *param_1)\n\n{\n  ulong uVar1;\n  ulong in_RAX;\n  ushort **ppuVar2;\n  \n  uVar1 = DAT_0060c2e0;\n  if (DAT_0060c2e0 != 0) {\n    ppuVar2 = __ctype_b_loc();\n    in_RAX = 0;\n    do {\n      if ((*(byte *)((long)*ppuVar2 + (ulong)*param_1 * 2 + 1) & 0x10) == 0) {\n        return 0;\n      }\n      in_RAX = (ulong)((int)in_RAX + 1);\n      param_1 = param_1 + 1;\n    } while (in_RAX < uVar1);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(*param_1 == 0);\n}\n\n",
            "funcName": "FUN_00402950"
        },
        {
            "funcStartAddr": "0x4029b0",
            "funcEndAddr": "0x402a1b",
            "decompiledFuncCode": "\nlong FUN_004029b0(long param_1,ulong param_2)\n\n{\n  char cVar1;\n  undefined *puVar2;\n  undefined *puVar3;\n  ulong uVar4;\n  \n  uVar4 = 0;\n  puVar2 = (undefined *)(param_1 + 1);\n  if (param_2 != 0) {\n    do {\n      puVar3 = puVar2;\n      cVar1 = *(char *)(param_1 + uVar4);\n      if (cVar1 == '\\0') {\n        return 0;\n      }\n      if (cVar1 == '\\\\') {\n        if (param_2 - 1 == uVar4) {\n          return 0;\n        }\n        uVar4 = uVar4 + 1;\n        if (*(char *)(param_1 + uVar4) == '\\\\') {\n          puVar3[-1] = 0x5c;\n        }\n        else {\n          if (*(char *)(param_1 + uVar4) != 'n') {\n            return 0;\n          }\n          puVar3[-1] = 10;\n        }\n      }\n      else {\n        puVar3[-1] = cVar1;\n      }\n      uVar4 = uVar4 + 1;\n      puVar2 = puVar3 + 1;\n    } while (uVar4 < param_2);\n    if (puVar3 < (undefined *)(param_2 + param_1)) {\n      *puVar3 = 0;\n    }\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_004029b0"
        },
        {
            "funcStartAddr": "0x402a40",
            "funcEndAddr": "0x402ac7",
            "decompiledFuncCode": "\nvoid FUN_00402a40(byte *param_1,char param_2)\n\n{\n  byte bVar1;\n  byte *pbVar2;\n  \n  if (param_2 == '\\0') {\n    fputs_unlocked((char *)param_1,stdout);\n    return;\n  }\n  while( true ) {\n    bVar1 = *param_1;\n    if (bVar1 == 0) break;\n    if (bVar1 == 10) {\n      fwrite_unlocked(&DAT_00407b84,1,2,stdout);\n    }\n    else if (bVar1 == 0x5c) {\n      fwrite_unlocked(&DAT_00407b87,1,2,stdout);\n    }\n    else {\n      pbVar2 = (byte *)stdout->_IO_write_ptr;\n      if (pbVar2 < stdout->_IO_write_end) {\n        stdout->_IO_write_ptr = (char *)(pbVar2 + 1);\n        *pbVar2 = bVar1;\n      }\n      else {\n        __overflow(stdout,(uint)bVar1);\n      }\n    }\n    param_1 = param_1 + 1;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00402a40"
        },
        {
            "funcStartAddr": "0x402af0",
            "funcEndAddr": "0x402c68",
            "decompiledFuncCode": "\nchar FUN_00402af0(byte *param_1,undefined8 param_2,undefined *param_3)\n\n{\n  char cVar1;\n  int iVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  long lVar5;\n  byte *pbVar6;\n  byte *pbVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  lVar5 = 2;\n  bVar8 = &stack0xffffffffffffffe0 < &DAT_00000008;\n  bVar9 = &stack0x00000000 == (undefined *)0x28;\n  pbVar6 = param_1;\n  pbVar7 = &DAT_00409b0a;\n  do {\n    if (lVar5 == 0) break;\n    lVar5 = lVar5 + -1;\n    bVar8 = *pbVar6 < *pbVar7;\n    bVar9 = *pbVar6 == *pbVar7;\n    pbVar6 = pbVar6 + 1;\n    pbVar7 = pbVar7 + 1;\n  } while (bVar9);\n  *param_3 = 0;\n  lVar5 = stdin;\n  if ((!bVar8 && !bVar9) == bVar8) {\n    DAT_0060c2f0 = 1;\n    FUN_00403e90(stdin,2);\n    iVar2 = FUN_00403d50(lVar5,param_2);\n    if (iVar2 != 0) {\nLAB_00402be0:\n      uVar3 = FUN_00405a00(0,3,param_1);\n      piVar4 = __errno_location();\n      error(0,*piVar4,\"%s\",uVar3);\n      if (stdin == lVar5) {\n        return '\\0';\n      }\n      FUN_004063e0(lVar5);\n      return '\\0';\n    }\n  }\n  else {\n    lVar5 = FUN_00403ec0(param_1,\"r\");\n    if (lVar5 == 0) {\n      piVar4 = __errno_location();\n      cVar1 = DAT_0060c2da;\n      if ((DAT_0060c2da != '\\0') && (*piVar4 == 2)) {\n        *param_3 = 1;\n        return cVar1;\n      }\n      uVar3 = FUN_00405a00(0,3,param_1);\n      error(0,*piVar4,\"%s\",uVar3);\n      return '\\0';\n    }\n    FUN_00403e90(lVar5,2);\n    iVar2 = FUN_00403d50(lVar5,param_2);\n    if (iVar2 != 0) goto LAB_00402be0;\n    iVar2 = FUN_004063e0(lVar5);\n    if (iVar2 != 0) {\n      uVar3 = FUN_00405a00(0,3,param_1);\n      piVar4 = __errno_location();\n      error(0,*piVar4,\"%s\",uVar3);\n      return '\\0';\n    }\n  }\n  return '\\x01';\n}\n\n",
            "funcName": "FUN_00402af0"
        },
        {
            "funcStartAddr": "0x402c90",
            "funcEndAddr": "0x40305d",
            "decompiledFuncCode": "\nvoid FUN_00402c90(int param_1)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  byte **ppbVar6;\n  char *pcVar8;\n  long lVar9;\n  byte *pbVar10;\n  byte *pbVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  byte *local_88;\n  char *local_80;\n  byte *local_78 [5];\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  char *local_38;\n  char *local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  byte **ppbVar7;\n  \n  uVar5 = DAT_0060c308;\n  bVar14 = 0;\n  if (param_1 != 0) {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar5);\n    goto LAB_00402ccf;\n  }\n  uVar3 = dcgettext(0,\"Usage: %s [OPTION]... [FILE]...\\nPrint or check %s (%d-bit) checksums.\\n\",5);\n  __printf_chk(1,uVar3,uVar5,&DAT_00407b91,0x80);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"\\nWith no FILE, or when FILE is -, read standard input.\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"\\n  -b, --binary         read in binary mode\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  uVar5 = dcgettext(0,\"  -c, --check          read %s sums from the FILEs and check them\\n\",5);\n  __printf_chk(1,uVar5,&DAT_00407b91);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --tag            create a BSD-style checksum\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"  -t, --text           read in text mode (default)\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nThe following five options are useful only when verifying checksums:\\n      --ignore-missing  don\\'t fail or report status for missing files\\n      --quiet          don\\'t print OK for each successfully verified file\\n      --status         don\\'t output anything, status code shows success\\n      --strict         exit non-zero for improperly formatted checksum lines\\n  -w, --warn           warn about improperly formatted checksum lines\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  uVar5 = dcgettext(0,\n                    \"\\nThe sums are computed as described in %s.  When checking, the input\\nshould be a former output of this program.  The default mode is to print a\\nline with checksum, a space, a character indicating input mode (\\'*\\' for binary,\\n\\' \\' for text or where binary is insignificant), and name for each FILE.\\n\"\n                    ,5);\n  __printf_chk(1,uVar5,\"RFC 1321\");\n  local_88 = &DAT_00407b9e;\n  local_80 = \"test invocation\";\n  local_78[0] = (byte *)0x407c18;\n  local_78[1] = (byte *)0x407bb0;\n  local_78[2] = (byte *)0x407bc6;\n  local_78[3] = (byte *)0x407bd0;\n  local_78[4] = (byte *)0x407bdf;\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha384sum\";\n  local_40 = \"sha2 utilities\";\n  local_38 = \"sha512sum\";\n  local_30 = \"sha2 utilities\";\n  local_28 = 0;\n  local_20 = 0;\n  ppbVar6 = &local_88;\n  do {\n    ppbVar7 = ppbVar6;\n    ppbVar6 = ppbVar7 + 2;\n    pbVar11 = *ppbVar6;\n    bVar12 = false;\n    bVar13 = pbVar11 == (byte *)0x0;\n    if (bVar13) break;\n    lVar9 = 7;\n    pbVar10 = (byte *)\"md5sum\";\n    do {\n      if (lVar9 == 0) break;\n      lVar9 = lVar9 + -1;\n      bVar12 = *pbVar10 < *pbVar11;\n      bVar13 = *pbVar10 == *pbVar11;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n      pbVar11 = pbVar11 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n  } while ((!bVar12 && !bVar13) != bVar12);\n  pcVar4 = (char *)ppbVar7[3];\n  if ((byte *)pcVar4 == (byte *)0x0) {\n    uVar5 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar5,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\n        pcVar4 = \"md5sum\";\n        goto LAB_00403033;\n      }\n    }\n    pcVar4 = \"md5sum\";\n    uVar5 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar8 = \" invocation\";\n    __printf_chk(1,uVar5,\"https://www.gnu.org/software/coreutils/\",\"md5sum\");\n  }\n  else {\n    uVar5 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar5,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar8 = setlocale(5,(char *)0x0);\n    if (pcVar8 != (char *)0x0) {\n      iVar2 = strncmp(pcVar8,\"en_\",3);\n      if (iVar2 != 0) {\nLAB_00403033:\n        uVar5 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar5,\"md5sum\");\n      }\n    }\n    pcVar8 = \" invocation\";\n    uVar5 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar5,\"https://www.gnu.org/software/coreutils/\",\"md5sum\");\n    if (pcVar4 != \"md5sum\") {\n      pcVar8 = \"\";\n    }\n  }\n  uVar5 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  __printf_chk(1,uVar5,pcVar4,pcVar8);\nLAB_00402ccf:\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n",
            "funcName": "FUN_00402c90"
        },
        {
            "funcStartAddr": "0x403060",
            "funcEndAddr": "0x403068",
            "decompiledFuncCode": "\nvoid FUN_00403060(undefined8 param_1)\n\n{\n  DAT_0060c300 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00403060"
        },
        {
            "funcStartAddr": "0x403070",
            "funcEndAddr": "0x403078",
            "decompiledFuncCode": "\nvoid FUN_00403070(undefined param_1)\n\n{\n  DAT_0060c2f8 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00403070"
        },
        {
            "funcStartAddr": "0x403080",
            "funcEndAddr": "0x40311e",
            "decompiledFuncCode": "\nvoid FUN_00403080(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_00407490(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_0060c2f8 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_0060c300 == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = FUN_004059d0();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_004030fe;\n    }\n  }\n  iVar1 = FUN_00407490(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_004030fe:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_0060c220);\n}\n\n",
            "funcName": "FUN_00403080"
        },
        {
            "funcStartAddr": "0x403120",
            "funcEndAddr": "0x40314b",
            "decompiledFuncCode": "\nvoid FUN_00403120(undefined8 *param_1)\n\n{\n  param_1[2] = 0;\n  *param_1 = 0xefcdab8967452301;\n  param_1[1] = 0x1032547698badcfe;\n  *(undefined4 *)(param_1 + 3) = 0;\n  return;\n}\n\n",
            "funcName": "FUN_00403120"
        },
        {
            "funcStartAddr": "0x403150",
            "funcEndAddr": "0x40316a",
            "decompiledFuncCode": "\nundefined4 * FUN_00403150(undefined4 *param_1,undefined4 *param_2)\n\n{\n  *param_2 = *param_1;\n  param_2[1] = param_1[1];\n  param_2[2] = param_1[2];\n  param_2[3] = param_1[3];\n  return param_2;\n}\n\n",
            "funcName": "FUN_00403150"
        },
        {
            "funcStartAddr": "0x403170",
            "funcEndAddr": "0x4038df",
            "decompiledFuncCode": "\nvoid FUN_00403170(int *param_1,ulong param_2,int *param_3)\n\n{\n  int *piVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  int iVar11;\n  int iVar12;\n  int iVar13;\n  int iVar14;\n  int iVar15;\n  int iVar16;\n  int iVar17;\n  uint uVar18;\n  uint uVar19;\n  uint uVar20;\n  uint uVar21;\n  uint uVar22;\n  uint uVar23;\n  uint uVar24;\n  uint local_50;\n  int local_48;\n  \n  uVar23 = param_3[1];\n  piVar1 = (int *)((long)param_1 + (param_2 & 0xfffffffffffffffc));\n  local_48 = *param_3;\n  uVar24 = param_3[2];\n  local_50 = param_3[3];\n  uVar18 = param_3[4];\n  param_3[4] = (uint)param_2 + param_3[4];\n  param_3[5] = (int)(param_2 >> 0x20) + param_3[5] + (uint)CARRY4((uint)param_2,uVar18);\n  if (param_1 < piVar1) {\n    do {\n      iVar2 = *param_1;\n      iVar3 = param_1[1];\n      iVar4 = param_1[3];\n      iVar5 = param_1[5];\n      iVar6 = param_1[6];\n      iVar7 = param_1[7];\n      iVar8 = param_1[9];\n      iVar9 = param_1[0xb];\n      uVar18 = ((local_50 ^ uVar24) & uVar23 ^ local_50) + iVar2 + -0x28955b88 + local_48;\n      uVar18 = (uVar18 * 0x80 | uVar18 >> 0x19) + uVar23;\n      uVar19 = ((uVar23 ^ uVar24) & uVar18 ^ uVar24) + iVar3 + -0x173848aa + local_50;\n      iVar10 = param_1[2];\n      uVar20 = (uVar19 * 0x1000 | uVar19 >> 0x14) + uVar18;\n      uVar19 = ((uVar18 ^ uVar23) & uVar20 ^ uVar23) + iVar10 + 0x242070db + uVar24;\n      iVar11 = param_1[4];\n      uVar19 = (uVar19 >> 0xf | uVar19 * 0x20000) + uVar20;\n      uVar21 = ((uVar18 ^ uVar20) & uVar19 ^ uVar18) + iVar4 + -0x3e423112 + uVar23;\n      iVar12 = param_1[0xf];\n      uVar21 = (uVar21 >> 10 | uVar21 * 0x400000) + uVar19;\n      uVar18 = ((uVar20 ^ uVar19) & uVar21 ^ uVar20) + iVar11 + -0xa83f051 + uVar18;\n      uVar18 = (uVar18 * 0x80 | uVar18 >> 0x19) + uVar21;\n      uVar20 = ((uVar19 ^ uVar21) & uVar18 ^ uVar19) + iVar5 + 0x4787c62a + uVar20;\n      uVar20 = (uVar20 * 0x1000 | uVar20 >> 0x14) + uVar18;\n      uVar19 = ((uVar21 ^ uVar18) & uVar20 ^ uVar21) + iVar6 + -0x57cfb9ed + uVar19;\n      iVar13 = param_1[8];\n      uVar19 = (uVar19 >> 0xf | uVar19 * 0x20000) + uVar20;\n      uVar21 = ((uVar18 ^ uVar20) & uVar19 ^ uVar18) + iVar7 + -0x2b96aff + uVar21;\n      iVar14 = param_1[0xc];\n      uVar21 = (uVar21 >> 10 | uVar21 * 0x400000) + uVar19;\n      uVar18 = ((uVar20 ^ uVar19) & uVar21 ^ uVar20) + iVar13 + 0x698098d8 + uVar18;\n      iVar15 = param_1[0xe];\n      uVar18 = (uVar18 * 0x80 | uVar18 >> 0x19) + uVar21;\n      uVar20 = ((uVar19 ^ uVar21) & uVar18 ^ uVar19) + iVar8 + -0x74bb0851 + uVar20;\n      iVar16 = param_1[10];\n      uVar20 = (uVar20 * 0x1000 | uVar20 >> 0x14) + uVar18;\n      uVar19 = ((uVar21 ^ uVar18) & uVar20 ^ uVar21) + iVar16 + -0xa44f + uVar19;\n      iVar17 = param_1[0xd];\n      param_1 = param_1 + 0x10;\n      uVar19 = (uVar19 >> 0xf | uVar19 * 0x20000) + uVar20;\n      uVar21 = ((uVar18 ^ uVar20) & uVar19 ^ uVar18) + iVar9 + -0x76a32842 + uVar21;\n      uVar21 = (uVar21 >> 10 | uVar21 * 0x400000) + uVar19;\n      uVar18 = ((uVar20 ^ uVar19) & uVar21 ^ uVar20) + iVar14 + 0x6b901122 + uVar18;\n      uVar18 = (uVar18 * 0x80 | uVar18 >> 0x19) + uVar21;\n      uVar20 = ((uVar19 ^ uVar21) & uVar18 ^ uVar19) + iVar17 + -0x2678e6d + uVar20;\n      uVar20 = (uVar20 * 0x1000 | uVar20 >> 0x14) + uVar18;\n      uVar19 = ((uVar21 ^ uVar18) & uVar20 ^ uVar21) + iVar15 + -0x5986bc72 + uVar19;\n      uVar19 = (uVar19 >> 0xf | uVar19 * 0x20000) + uVar20;\n      uVar21 = ((uVar18 ^ uVar20) & uVar19 ^ uVar18) + iVar12 + 0x49b40821 + uVar21;\n      uVar21 = (uVar21 >> 10 | uVar21 * 0x400000) + uVar19;\n      uVar18 = ((uVar19 ^ uVar21) & uVar20 ^ uVar19) + iVar3 + -0x9e1da9e + uVar18;\n      uVar18 = (uVar18 * 0x20 | uVar18 >> 0x1b) + uVar21;\n      uVar20 = ((uVar21 ^ uVar18) & uVar19 ^ uVar21) + iVar6 + -0x3fbf4cc0 + uVar20;\n      uVar20 = (uVar20 * 0x200 | uVar20 >> 0x17) + uVar18;\n      uVar19 = ((uVar18 ^ uVar20) & uVar21 ^ uVar18) + iVar9 + 0x265e5a51 + uVar19;\n      uVar19 = (uVar19 * 0x4000 | uVar19 >> 0x12) + uVar20;\n      uVar21 = ((uVar20 ^ uVar19) & uVar18 ^ uVar20) + iVar2 + -0x16493856 + uVar21;\n      uVar21 = (uVar21 >> 0xc | uVar21 * 0x100000) + uVar19;\n      uVar18 = ((uVar19 ^ uVar21) & uVar20 ^ uVar19) + iVar5 + -0x29d0efa3 + uVar18;\n      uVar18 = (uVar18 * 0x20 | uVar18 >> 0x1b) + uVar21;\n      uVar20 = ((uVar21 ^ uVar18) & uVar19 ^ uVar21) + iVar16 + 0x2441453 + uVar20;\n      uVar20 = (uVar20 * 0x200 | uVar20 >> 0x17) + uVar18;\n      uVar19 = ((uVar18 ^ uVar20) & uVar21 ^ uVar18) + iVar12 + -0x275e197f + uVar19;\n      uVar19 = (uVar19 * 0x4000 | uVar19 >> 0x12) + uVar20;\n      uVar21 = ((uVar20 ^ uVar19) & uVar18 ^ uVar20) + iVar11 + -0x182c0438 + uVar21;\n      uVar21 = (uVar21 >> 0xc | uVar21 * 0x100000) + uVar19;\n      uVar18 = ((uVar19 ^ uVar21) & uVar20 ^ uVar19) + iVar8 + 0x21e1cde6 + uVar18;\n      uVar18 = (uVar18 * 0x20 | uVar18 >> 0x1b) + uVar21;\n      uVar20 = ((uVar21 ^ uVar18) & uVar19 ^ uVar21) + iVar15 + -0x3cc8f82a + uVar20;\n      uVar20 = (uVar20 * 0x200 | uVar20 >> 0x17) + uVar18;\n      uVar19 = ((uVar18 ^ uVar20) & uVar21 ^ uVar18) + iVar4 + -0xb2af279 + uVar19;\n      uVar19 = (uVar19 * 0x4000 | uVar19 >> 0x12) + uVar20;\n      uVar21 = ((uVar20 ^ uVar19) & uVar18 ^ uVar20) + iVar13 + 0x455a14ed + uVar21;\n      uVar22 = (uVar21 >> 0xc | uVar21 * 0x100000) + uVar19;\n      uVar18 = ((uVar19 ^ uVar22) & uVar20 ^ uVar19) + iVar17 + -0x561c16fb + uVar18;\n      uVar18 = (uVar18 * 0x20 | uVar18 >> 0x1b) + uVar22;\n      uVar20 = ((uVar22 ^ uVar18) & uVar19 ^ uVar22) + iVar10 + -0x3105c08 + uVar20;\n      uVar20 = (uVar20 * 0x200 | uVar20 >> 0x17) + uVar18;\n      uVar19 = ((uVar18 ^ uVar20) & uVar22 ^ uVar18) + iVar7 + 0x676f02d9 + uVar19;\n      uVar21 = (uVar19 * 0x4000 | uVar19 >> 0x12) + uVar20;\n      uVar19 = ((uVar20 ^ uVar21) & uVar18 ^ uVar20) + iVar14 + -0x72d5b376 + uVar22;\n      uVar22 = (uVar19 >> 0xc | uVar19 * 0x100000) + uVar21;\n      uVar18 = (uVar20 ^ uVar21 ^ uVar22) + iVar5 + -0x5c6be + uVar18;\n      uVar19 = (uVar18 * 0x10 | uVar18 >> 0x1c) + uVar22;\n      uVar18 = (uVar21 ^ uVar22 ^ uVar19) + iVar13 + -0x788e097f + uVar20;\n      uVar20 = (uVar18 * 0x800 | uVar18 >> 0x15) + uVar19;\n      uVar18 = (uVar22 ^ uVar19 ^ uVar20) + iVar9 + 0x6d9d6122 + uVar21;\n      uVar21 = (uVar18 * 0x10000 | uVar18 >> 0x10) + uVar20;\n      uVar18 = (uVar19 ^ uVar20 ^ uVar21) + iVar15 + -0x21ac7f4 + uVar22;\n      uVar18 = (uVar18 >> 9 | uVar18 * 0x800000) + uVar21;\n      uVar19 = (uVar20 ^ uVar21 ^ uVar18) + iVar3 + -0x5b4115bc + uVar19;\n      uVar19 = (uVar19 * 0x10 | uVar19 >> 0x1c) + uVar18;\n      uVar20 = (uVar21 ^ uVar18 ^ uVar19) + iVar11 + 0x4bdecfa9 + uVar20;\n      uVar22 = (uVar20 * 0x800 | uVar20 >> 0x15) + uVar19;\n      uVar20 = (uVar18 ^ uVar19 ^ uVar22) + iVar7 + -0x944b4a0 + uVar21;\n      uVar20 = (uVar20 * 0x10000 | uVar20 >> 0x10) + uVar22;\n      uVar18 = (uVar19 ^ uVar22 ^ uVar20) + iVar16 + -0x41404390 + uVar18;\n      uVar21 = (uVar18 >> 9 | uVar18 * 0x800000) + uVar20;\n      uVar18 = (uVar22 ^ uVar20 ^ uVar21) + iVar17 + 0x289b7ec6 + uVar19;\n      uVar19 = (uVar18 * 0x10 | uVar18 >> 0x1c) + uVar21;\n      uVar18 = (uVar20 ^ uVar21 ^ uVar19) + iVar2 + -0x155ed806 + uVar22;\n      uVar18 = (uVar18 * 0x800 | uVar18 >> 0x15) + uVar19;\n      uVar20 = (uVar21 ^ uVar19 ^ uVar18) + iVar4 + -0x2b10cf7b + uVar20;\n      uVar22 = (uVar20 * 0x10000 | uVar20 >> 0x10) + uVar18;\n      uVar20 = (uVar19 ^ uVar18 ^ uVar22) + iVar6 + 0x4881d05 + uVar21;\n      uVar21 = (uVar20 >> 9 | uVar20 * 0x800000) + uVar22;\n      uVar19 = (uVar18 ^ uVar22 ^ uVar21) + iVar8 + -0x262b2fc7 + uVar19;\n      uVar20 = (uVar19 * 0x10 | uVar19 >> 0x1c) + uVar21;\n      uVar18 = (uVar22 ^ uVar21 ^ uVar20) + iVar14 + -0x1924661b + uVar18;\n      uVar19 = (uVar18 * 0x800 | uVar18 >> 0x15) + uVar20;\n      uVar18 = (uVar21 ^ uVar20 ^ uVar19) + iVar12 + 0x1fa27cf8 + uVar22;\n      uVar22 = (uVar18 * 0x10000 | uVar18 >> 0x10) + uVar19;\n      uVar18 = (uVar20 ^ uVar19 ^ uVar22) + iVar10 + -0x3b53a99b + uVar21;\n      uVar18 = (uVar18 >> 9 | uVar18 * 0x800000) + uVar22;\n      uVar20 = ((~uVar19 | uVar18) ^ uVar22) + iVar2 + -0xbd6ddbc + uVar20;\n      uVar20 = (uVar20 * 0x40 | uVar20 >> 0x1a) + uVar18;\n      uVar19 = ((~uVar22 | uVar20) ^ uVar18) + iVar7 + 0x432aff97 + uVar19;\n      uVar19 = (uVar19 * 0x400 | uVar19 >> 0x16) + uVar20;\n      uVar21 = ((~uVar18 | uVar19) ^ uVar20) + iVar15 + -0x546bdc59 + uVar22;\n      uVar21 = (uVar21 * 0x8000 | uVar21 >> 0x11) + uVar19;\n      uVar18 = ((~uVar20 | uVar21) ^ uVar19) + iVar5 + -0x36c5fc7 + uVar18;\n      uVar18 = (uVar18 >> 0xb | uVar18 * 0x200000) + uVar21;\n      uVar20 = ((~uVar19 | uVar18) ^ uVar21) + iVar14 + 0x655b59c3 + uVar20;\n      uVar20 = (uVar20 * 0x40 | uVar20 >> 0x1a) + uVar18;\n      uVar19 = ((~uVar21 | uVar20) ^ uVar18) + iVar4 + -0x70f3336e + uVar19;\n      uVar19 = (uVar19 * 0x400 | uVar19 >> 0x16) + uVar20;\n      uVar21 = ((~uVar18 | uVar19) ^ uVar20) + iVar16 + -0x100b83 + uVar21;\n      uVar21 = (uVar21 * 0x8000 | uVar21 >> 0x11) + uVar19;\n      uVar18 = ((~uVar20 | uVar21) ^ uVar19) + iVar3 + -0x7a7ba22f + uVar18;\n      uVar18 = (uVar18 >> 0xb | uVar18 * 0x200000) + uVar21;\n      uVar20 = ((~uVar19 | uVar18) ^ uVar21) + iVar13 + 0x6fa87e4f + uVar20;\n      uVar20 = (uVar20 * 0x40 | uVar20 >> 0x1a) + uVar18;\n      uVar19 = ((~uVar21 | uVar20) ^ uVar18) + iVar12 + -0x1d31920 + uVar19;\n      uVar19 = (uVar19 * 0x400 | uVar19 >> 0x16) + uVar20;\n      uVar21 = ((~uVar18 | uVar19) ^ uVar20) + iVar6 + -0x5cfebcec + uVar21;\n      uVar21 = (uVar21 * 0x8000 | uVar21 >> 0x11) + uVar19;\n      uVar18 = ((~uVar20 | uVar21) ^ uVar19) + iVar17 + 0x4e0811a1 + uVar18;\n      uVar22 = (uVar18 >> 0xb | uVar18 * 0x200000) + uVar21;\n      uVar18 = ((~uVar19 | uVar22) ^ uVar21) + iVar11 + -0x8ac817e + uVar20;\n      uVar18 = (uVar18 * 0x40 | uVar18 >> 0x1a) + uVar22;\n      uVar19 = ((~uVar21 | uVar18) ^ uVar22) + iVar9 + -0x42c50dcb + uVar19;\n      uVar20 = (uVar19 * 0x400 | uVar19 >> 0x16) + uVar18;\n      uVar19 = ((~uVar22 | uVar20) ^ uVar18) + iVar10 + 0x2ad7d2bb + uVar21;\n      uVar19 = (uVar19 * 0x8000 | uVar19 >> 0x11) + uVar20;\n      uVar21 = ((~uVar18 | uVar19) ^ uVar20) + iVar8 + -0x14792c6f + uVar22;\n      local_48 = local_48 + uVar18;\n      uVar24 = uVar24 + uVar19;\n      uVar23 = uVar23 + (uVar21 >> 0xb | uVar21 * 0x200000) + uVar19;\n      local_50 = local_50 + uVar20;\n    } while (param_1 < piVar1);\n  }\n  *param_3 = local_48;\n  param_3[1] = uVar23;\n  param_3[2] = uVar24;\n  param_3[3] = local_50;\n  return;\n}\n\n",
            "funcName": "FUN_00403170"
        },
        {
            "funcStartAddr": "0x4038e0",
            "funcEndAddr": "0x4039e1",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_004038e0(long param_1,undefined8 param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  ulong uVar3;\n  int iVar4;\n  uint uVar5;\n  undefined8 *puVar6;\n  long lVar7;\n  undefined8 *puVar8;\n  long lVar9;\n  \n  uVar1 = *(uint *)(param_1 + 0x18);\n  iVar4 = *(int *)(param_1 + 0x14);\n  lVar9 = (-(ulong)(uVar1 < 0x38) & 0xffffffffffffffc0) + 0x80;\n  uVar2 = *(uint *)(param_1 + 0x10);\n  uVar5 = uVar1 + *(uint *)(param_1 + 0x10);\n  *(uint *)(param_1 + 0x10) = uVar5;\n  if (CARRY4(uVar1,uVar2)) {\n    iVar4 = iVar4 + 1;\n    *(int *)(param_1 + 0x14) = iVar4;\n  }\n  *(uint *)(param_1 + 0x1c + ((-(ulong)(uVar1 < 0x38) & 0xfffffffffffffff0) + 0x1e) * 4) = uVar5 * 8\n  ;\n  lVar7 = lVar9 - (ulong)uVar1;\n  *(uint *)(param_1 + 0x1c + ((-(ulong)(uVar1 < 0x38) & 0xfffffffffffffff0) + 0x1f) * 4) =\n       iVar4 << 3 | uVar5 >> 0x1d;\n  puVar8 = (undefined8 *)(param_1 + 0x1c + (ulong)uVar1);\n  uVar3 = lVar7 - 8;\n  if (uVar3 < 8) {\n    if ((uVar3 & 4) == 0) {\n      if ((uVar3 != 0) && (*(char *)puVar8 = (char)_DAT_00408880, (uVar3 & 2) != 0)) {\n        *(undefined2 *)((long)puVar8 + lVar7 + -10) = *(undefined2 *)(\"%s: %s\" + lVar7 + 5);\n      }\n    }\n    else {\n      *(undefined4 *)puVar8 = _DAT_00408880;\n      *(undefined4 *)((long)puVar8 + lVar7 + -0xc) = *(undefined4 *)(\"%s: %s\" + lVar7 + 3);\n    }\n  }\n  else {\n    *puVar8 = CONCAT44(_UNK_00408884,_DAT_00408880);\n    *(undefined8 *)((long)puVar8 + lVar7 + -0x10) = *(undefined8 *)(\"write error\" + lVar7 + 0xb);\n    lVar7 = (long)puVar8 - (long)(undefined8 *)((ulong)(puVar8 + 1) & 0xfffffffffffffff8);\n    puVar6 = (undefined8 *)(&DAT_00408880 + -lVar7);\n    puVar8 = (undefined8 *)((ulong)(puVar8 + 1) & 0xfffffffffffffff8);\n    for (uVar3 = uVar3 + lVar7 >> 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n      *puVar8 = *puVar6;\n      puVar6 = puVar6 + 1;\n      puVar8 = puVar8 + 1;\n    }\n  }\n  FUN_00403170(param_1 + 0x1c,lVar9,param_1);\n  FUN_00403150(param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_004038e0"
        },
        {
            "funcStartAddr": "0x4039f0",
            "funcEndAddr": "0x403cd4",
            "decompiledFuncCode": "\nvoid FUN_004039f0(undefined8 *param_1,ulong param_2,long param_3)\n\n{\n  undefined8 *puVar1;\n  undefined8 uVar2;\n  uint uVar3;\n  ulong uVar4;\n  long lVar5;\n  uint uVar6;\n  ulong uVar7;\n  undefined8 *puVar8;\n  void *__dest;\n  uint uVar9;\n  ulong uVar10;\n  \n  if (*(uint *)(param_3 + 0x18) != 0) {\n    uVar10 = (ulong)*(uint *)(param_3 + 0x18);\n    lVar5 = param_3 + 0x1c;\n    uVar4 = 0x80 - uVar10;\n    if (param_2 < 0x80 - uVar10) {\n      uVar4 = param_2;\n    }\n    memcpy((void *)(lVar5 + uVar10),param_1,uVar4);\n    uVar9 = *(int *)(param_3 + 0x18) + (int)uVar4;\n    *(uint *)(param_3 + 0x18) = uVar9;\n    if (0x40 < uVar9) {\n      FUN_00403170(lVar5,uVar9 & 0xffffffc0,param_3);\n      uVar9 = *(uint *)(param_3 + 0x18);\n      puVar8 = (undefined8 *)((uVar10 + uVar4 & 0xffffffffffffffc0) + lVar5);\n      uVar3 = uVar9 & 0x3f;\n      uVar10 = (ulong)uVar3;\n      *(uint *)(param_3 + 0x18) = uVar3;\n      if (uVar3 < 8) {\n        if ((uVar9 & 4) == 0) {\n          if ((uVar3 != 0) &&\n             (*(undefined *)(param_3 + 0x1c) = *(undefined *)puVar8, (uVar9 & 2) != 0)) {\n            *(undefined2 *)(param_3 + 0x1a + uVar10) = *(undefined2 *)((long)puVar8 + (uVar10 - 2));\n          }\n        }\n        else {\n          *(undefined4 *)(param_3 + 0x1c) = *(undefined4 *)puVar8;\n          *(undefined4 *)(param_3 + 0x18 + uVar10) = *(undefined4 *)((long)puVar8 + (uVar10 - 4));\n        }\n      }\n      else {\n        *(undefined8 *)(param_3 + 0x1c) = *puVar8;\n        *(undefined8 *)(param_3 + 0x14 + uVar10) = *(undefined8 *)((long)puVar8 + (uVar10 - 8));\n        uVar10 = param_3 + 0x24U & 0xfffffffffffffff8;\n        lVar5 = lVar5 - uVar10;\n        uVar9 = (int)lVar5 + uVar3 & 0xfffffff8;\n        if (7 < uVar9) {\n          uVar7 = 0;\n          do {\n            uVar3 = (int)uVar7 + 8;\n            *(undefined8 *)(uVar10 + uVar7) = *(undefined8 *)((long)puVar8 + (uVar7 - lVar5));\n            uVar7 = (ulong)uVar3;\n          } while (uVar3 < uVar9);\n        }\n      }\n    }\n    param_1 = (undefined8 *)((long)param_1 + uVar4);\n    param_2 = param_2 - uVar4;\n  }\n  puVar8 = param_1;\n  if (0x3f < param_2) {\n    if (((ulong)param_1 & 3) != 0) {\n      if (param_2 != 0x40) {\n        uVar4 = param_2 - 0x41 >> 6;\n        do {\n          uVar2 = param_1[1];\n          puVar8 = param_1 + 8;\n          *(undefined8 *)(param_3 + 0x1c) = *param_1;\n          *(undefined8 *)(param_3 + 0x24) = uVar2;\n          uVar2 = param_1[3];\n          *(undefined8 *)(param_3 + 0x2c) = param_1[2];\n          *(undefined8 *)(param_3 + 0x34) = uVar2;\n          uVar2 = param_1[5];\n          *(undefined8 *)(param_3 + 0x3c) = param_1[4];\n          *(undefined8 *)(param_3 + 0x44) = uVar2;\n          uVar2 = param_1[7];\n          *(undefined8 *)(param_3 + 0x4c) = param_1[6];\n          *(undefined8 *)(param_3 + 0x54) = uVar2;\n          FUN_00403170((undefined8 *)(param_3 + 0x1c),0x40,param_3);\n          param_1 = puVar8;\n        } while (puVar8 != param_1 + (uVar4 + 1) * 8);\n        param_2 = (param_2 - 0x40) + uVar4 * -0x40;\n        puVar8 = param_1 + (uVar4 + 1) * 8;\n      }\n      goto LAB_00403a9b;\n    }\n    puVar8 = (undefined8 *)((long)param_1 + (param_2 & 0xffffffffffffffc0));\n    FUN_00403170(param_1,param_2 & 0xffffffffffffffc0,param_3);\n    param_2 = (ulong)((uint)param_2 & 0x3f);\n  }\n  if (param_2 == 0) {\n    return;\n  }\nLAB_00403a9b:\n  __dest = (void *)(param_3 + 0x1c);\n  uVar9 = *(uint *)(param_3 + 0x18);\n  uVar3 = (uint)param_2;\n  puVar1 = (undefined8 *)((long)__dest + (ulong)uVar9);\n  if (uVar3 < 8) {\n    if ((param_2 & 4) == 0) {\n      if ((uVar3 != 0) && (*(undefined *)puVar1 = *(undefined *)puVar8, (param_2 & 2) != 0)) {\n        *(undefined2 *)((long)puVar1 + ((param_2 & 0xffffffff) - 2)) =\n             *(undefined2 *)((long)puVar8 + ((param_2 & 0xffffffff) - 2));\n      }\n    }\n    else {\n      *(undefined4 *)puVar1 = *(undefined4 *)puVar8;\n      *(undefined4 *)((long)puVar1 + ((param_2 & 0xffffffff) - 4)) =\n           *(undefined4 *)((long)puVar8 + ((param_2 & 0xffffffff) - 4));\n    }\n  }\n  else {\n    *puVar1 = *puVar8;\n    *(undefined8 *)((long)puVar1 + ((param_2 & 0xffffffff) - 8)) =\n         *(undefined8 *)((long)puVar8 + ((param_2 & 0xffffffff) - 8));\n    lVar5 = (long)puVar1 - ((ulong)(puVar1 + 1) & 0xfffffffffffffff8);\n    uVar3 = (int)lVar5 + uVar3 & 0xfffffff8;\n    if (7 < uVar3) {\n      uVar6 = 0;\n      do {\n        uVar4 = (ulong)uVar6;\n        uVar6 = uVar6 + 8;\n        *(undefined8 *)(((ulong)(puVar1 + 1) & 0xfffffffffffffff8) + uVar4) =\n             *(undefined8 *)((long)puVar8 + (uVar4 - lVar5));\n      } while (uVar6 < uVar3);\n    }\n  }\n  param_2 = param_2 + uVar9;\n  if (0x3f < param_2) {\n    param_2 = param_2 - 0x40;\n    FUN_00403170(__dest,0x40,param_3);\n    memcpy(__dest,(void *)(param_3 + 0x5c),param_2);\n  }\n  *(int *)(param_3 + 0x18) = (int)param_2;\n  return;\n}\n\n",
            "funcName": "FUN_004039f0"
        },
        {
            "funcStartAddr": "0x403cf0",
            "funcEndAddr": "0x403d45",
            "decompiledFuncCode": "\nvoid FUN_00403cf0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 local_a8;\n  undefined8 local_a0;\n  undefined8 local_98;\n  undefined4 local_90;\n  \n  local_a8 = 0xefcdab8967452301;\n  local_a0 = 0x1032547698badcfe;\n  local_98 = 0;\n  local_90 = 0;\n  FUN_004039f0(param_1,param_2,&local_a8);\n  FUN_004038e0(&local_a8,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00403cf0"
        },
        {
            "funcStartAddr": "0x403d50",
            "funcEndAddr": "0x403e66",
            "decompiledFuncCode": "\nundefined8 FUN_00403d50(FILE *param_1,undefined8 param_2)\n\n{\n  void *__ptr;\n  size_t sVar1;\n  long lVar2;\n  undefined8 local_c8;\n  undefined8 local_c0;\n  undefined8 local_b8;\n  undefined4 local_b0;\n  \n  __ptr = malloc(0x8048);\n  if (__ptr == (void *)0x0) {\n    return 1;\n  }\n  local_b0 = 0;\n  local_c8 = 0xefcdab8967452301;\n  local_c0 = 0x1032547698badcfe;\n  local_b8 = 0;\n  do {\n    lVar2 = 0;\n    while( true ) {\n      sVar1 = fread_unlocked((void *)((long)__ptr + lVar2),1,0x8000 - lVar2,param_1);\n      lVar2 = lVar2 + sVar1;\n      if (lVar2 == 0x8000) break;\n      if (sVar1 == 0) {\n        if ((param_1->_flags & 0x20U) != 0) {\n          free(__ptr);\n          return 1;\n        }\n        goto LAB_00403dff;\n      }\n      if ((param_1->_flags & 0x10U) != 0) {\nLAB_00403dff:\n        if (lVar2 != 0) {\n          FUN_004039f0(__ptr,lVar2,&local_c8);\n        }\n        FUN_004038e0(&local_c8,param_2);\n        free(__ptr);\n        return 0;\n      }\n    }\n    FUN_00403170(__ptr,0x8000,&local_c8);\n  } while( true );\n}\n\n",
            "funcName": "FUN_00403d50"
        },
        {
            "funcStartAddr": "0x403e80",
            "funcEndAddr": "0x403e85",
            "decompiledFuncCode": "\nvoid FUN_00403e80(void)\n\n{\n  (*(code *)PTR_posix_fadvise_0060c0e8)();\n  return;\n}\n\n",
            "funcName": "FUN_00403e80"
        },
        {
            "funcStartAddr": "0x403e90",
            "funcEndAddr": "0x403eac",
            "decompiledFuncCode": "\nvoid FUN_00403e90(FILE *param_1,int param_2)\n\n{\n  int __fd;\n  \n  if (param_1 != (FILE *)0x0) {\n    __fd = fileno(param_1);\n    posix_fadvise(__fd,0,0,param_2);\n    return;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00403e90"
        },
        {
            "funcStartAddr": "0x403ec0",
            "funcEndAddr": "0x403f49",
            "decompiledFuncCode": "\nFILE * FUN_00403ec0(char *param_1,char *param_2)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  FILE *__stream;\n  FILE *pFVar4;\n  int *piVar5;\n  \n  __stream = fopen(param_1,param_2);\n  pFVar4 = __stream;\n  if ((__stream != (FILE *)0x0) && (uVar1 = fileno(__stream), uVar1 < 3)) {\n    iVar2 = FUN_00405ba0(uVar1);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      pFVar4 = (FILE *)0x0;\n      iVar2 = *piVar5;\n      FUN_004063e0(__stream);\n      *piVar5 = iVar2;\n    }\n    else {\n      iVar3 = FUN_004063e0(__stream);\n      if ((iVar3 == 0) && (pFVar4 = fdopen(iVar2,param_2), pFVar4 != (FILE *)0x0)) {\n        return pFVar4;\n      }\n      piVar5 = __errno_location();\n      iVar3 = *piVar5;\n      close(iVar2);\n      *piVar5 = iVar3;\n      pFVar4 = (FILE *)0x0;\n    }\n  }\n  return pFVar4;\n}\n\n",
            "funcName": "FUN_00403ec0"
        },
        {
            "funcStartAddr": "0x403f60",
            "funcEndAddr": "0x403ff9",
            "decompiledFuncCode": "\nvoid FUN_00403f60(byte *param_1)\n\n{\n  byte *pbVar1;\n  char *pcVar2;\n  long lVar3;\n  ulong uVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  byte bVar10;\n  \n  bVar10 = 0;\n  if (param_1 == (byte *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar2 = strrchr((char *)param_1,0x2f);\n  if (pcVar2 != (char *)0x0) {\n    pbVar1 = (byte *)(pcVar2 + 1);\n    uVar4 = (long)pbVar1 - (long)param_1;\n    bVar7 = uVar4 < 6;\n    bVar9 = uVar4 == 6;\n    if (6 < (long)uVar4) {\n      lVar3 = 7;\n      pbVar5 = (byte *)(pcVar2 + -6);\n      pbVar6 = (byte *)\"/.libs/\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar5 < *pbVar6;\n        bVar9 = *pbVar5 == *pbVar6;\n        pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      bVar8 = false;\n      bVar7 = (!bVar7 && !bVar9) == bVar7;\n      if (bVar7) {\n        lVar3 = 3;\n        pbVar5 = pbVar1;\n        pbVar6 = &DAT_00408900;\n        do {\n          if (lVar3 == 0) break;\n          lVar3 = lVar3 + -1;\n          bVar8 = *pbVar5 < *pbVar6;\n          bVar7 = *pbVar5 == *pbVar6;\n          pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n          pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        } while (bVar7);\n        param_1 = pbVar1;\n        if ((!bVar8 && !bVar7) == bVar8) {\n          param_1 = (byte *)(pcVar2 + 4);\n          program_invocation_short_name = param_1;\n        }\n      }\n    }\n  }\n  DAT_0060c308 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00403f60"
        },
        {
            "funcStartAddr": "0x404000",
            "funcEndAddr": "0x4040df",
            "decompiledFuncCode": "\nchar * FUN_00404000(char *param_1,int param_2)\n\n{\n  char cVar1;\n  char *pcVar2;\n  byte *pbVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    pbVar3 = (byte *)FUN_00407550();\n    if ((*pbVar3 & 0xdf) == 0x55) {\n      if (((((pbVar3[1] & 0xdf) != 0x54) || ((pbVar3[2] & 0xdf) != 0x46)) || (pbVar3[3] != 0x2d)) ||\n         ((pbVar3[4] != 0x38 || (pbVar3[5] != 0)))) {\nLAB_004040d8:\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_00408911;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_00408906;\n      }\n    }\n    else {\n      if (((((*pbVar3 & 0xdf) != 0x47) || ((pbVar3[1] & 0xdf) != 0x42)) || (pbVar3[2] != 0x31)) ||\n         (((pbVar3[3] != 0x38 || (pbVar3[4] != 0x30)) ||\n          ((pbVar3[5] != 0x33 || ((pbVar3[6] != 0x30 || (pbVar3[7] != 0)))))))) goto LAB_004040d8;\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_0040890d;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0040890a;\n      }\n    }\n  }\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_00404000"
        },
        {
            "funcStartAddr": "0x404100",
            "funcEndAddr": "0x405233",
            "decompiledFuncCode": "\nulong FUN_00404100(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  ulong uVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ulong uVar9;\n  ushort **ppuVar10;\n  long lVar11;\n  char *pcVar12;\n  byte bVar13;\n  char cVar14;\n  ulong uVar15;\n  ulong uVar16;\n  byte bVar17;\n  uint uVar18;\n  ulong uVar19;\n  bool bVar20;\n  ulong uVar21;\n  ulong uVar22;\n  bool bVar23;\n  bool bVar24;\n  bool bVar25;\n  bool bVar26;\n  size_t local_a0;\n  char *local_78;\n  ulong local_70;\n  bool local_5c;\n  bool local_5b;\n  wint_t local_44;\n  mbstate_t local_40 [2];\n  \n  sVar8 = __ctype_get_mb_cur_max();\n  uVar18 = param_6 & 2;\n  local_5c = uVar18 != 0;\n  uVar9 = param_2;\n  switch(param_5) {\n  case 0:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = false;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar18 != 0) {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = false;\n      local_a0 = 1;\n      local_78 = \"\\'\";\n      break;\n    }\n    bVar6 = false;\nLAB_00404d51:\n    if (param_2 != 0) {\n      bVar3 = false;\n      local_5b = false;\n      bVar2 = true;\n      local_70 = 0;\n      goto LAB_00404986;\n    }\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 1;\n    param_5 = 2;\n    local_70 = 0;\n    local_5b = false;\n    local_5c = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 3:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 4:\n    if (uVar18 == 0) {\n      bVar6 = true;\n      goto LAB_00404d51;\n    }\n  case 1:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 5:\n    if (uVar18 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      local_5b = false;\n      local_70 = 0;\n      bVar2 = true;\n      bVar3 = false;\n      local_5c = false;\n      uVar15 = 1;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    else {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 5;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\\"\";\n    break;\n  case 7:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = true;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      param_8 = (char *)FUN_00404000(&DAT_00408915,param_5);\n      param_9 = (char *)FUN_00404000(&DAT_00409af7);\n    }\n    uVar15 = 0;\n    if (uVar18 == 0) {\n      cVar14 = *param_8;\n      while (cVar14 != '\\0') {\n        if (uVar15 < param_2) {\n          param_1[uVar15] = cVar14;\n        }\n        uVar15 = uVar15 + 1;\n        cVar14 = param_8[uVar15];\n      }\n    }\n    local_a0 = strlen(param_9);\n    bVar2 = true;\n    bVar3 = false;\n    local_78 = param_9;\n    local_5b = false;\n    local_70 = 0;\n    bVar6 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\nLAB_00404198:\n  uVar22 = 0;\n  bVar5 = local_5b;\nLAB_004041a8:\n  bVar23 = param_4 != uVar22;\n  if (param_4 == 0xffffffffffffffff) {\n    bVar23 = param_3[uVar22] != '\\0';\n  }\n  bVar26 = bVar6;\n  if (!bVar23) goto LAB_00404928;\n  bVar20 = (bool)(param_5 != 2 & bVar6);\n  __s1 = (byte *)(param_3 + uVar22);\n  uVar16 = uVar15;\n  bVar4 = bVar3;\n  if (bVar20) {\n    if (local_a0 == 0) {\nLAB_004048a0:\n      uVar19 = (ulong)*__s1;\n      switch(uVar19) {\n      case 0:\n        goto switchD_004048b2_caseD_0;\n      default:\n        bVar20 = false;\n        goto switchD_0040471e_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_004045b5;\n      case 8:\n        bVar17 = 0x62;\n        break;\n      case 9:\nswitchD_004048b2_caseD_9:\n        bVar17 = 0x74;\n        break;\n      case 10:\nswitchD_004048b2_caseD_a:\n        bVar17 = 0x6e;\n        break;\n      case 0xb:\nswitchD_004048b2_caseD_b:\n        bVar17 = 0x76;\n        goto LAB_004045b5;\n      case 0xc:\nswitchD_004048b2_caseD_c:\n        bVar17 = 0x66;\nLAB_004045b5:\n        if (local_5c) {\n          bVar25 = false;\n          goto LAB_00404508;\n        }\nLAB_004045c0:\n        bVar23 = false;\n        goto LAB_0040437b;\n      case 0xd:\n        bVar20 = false;\nswitchD_00404298_caseD_d:\n        bVar25 = param_5 == 2;\n        uVar19 = 0xd;\n        bVar13 = 0x72;\n        goto LAB_004044d0;\n      case 0x20:\n        bVar25 = false;\nLAB_004048fa:\n        uVar19 = 0x20;\n        goto LAB_004048c2;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar20 = false;\nswitchD_00404298_caseD_21:\n        bVar25 = false;\n        goto LAB_004044db;\n      case 0x23:\n      case 0x7e:\n        bVar26 = false;\nLAB_004048da:\n        if (uVar22 == 0) {\n          bVar25 = false;\n          bVar23 = bVar20;\n          bVar20 = bVar26;\n          goto LAB_004042e8;\n        }\n        bVar23 = false;\n        goto LAB_004042ff;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar25 = false;\nLAB_004048c2:\n        bVar24 = false;\n        bVar23 = bVar20;\n        bVar20 = bVar25;\n        goto LAB_00404301;\n      case 0x27:\n        bVar20 = false;\n        goto switchD_0040471e_caseD_27;\n      case 0x3f:\n        bVar20 = false;\n        goto switchD_0040471e_caseD_3f;\n      case 0x5c:\n        bVar20 = false;\n        goto switchD_00404298_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        bVar20 = false;\n        goto switchD_0040471e_caseD_7b;\n      }\n      bVar25 = false;\n      bVar23 = false;\n      goto joined_r0x004044f7;\n    }\n    if ((param_4 == 0xffffffffffffffff) && (1 < local_a0)) {\n      param_4 = strlen(param_3);\n    }\n    if ((param_4 < uVar22 + local_a0) || (iVar7 = memcmp(__s1,local_78,local_a0), iVar7 != 0))\n    goto LAB_004048a0;\n    if (!local_5c) {\n      uVar19 = (ulong)*__s1;\n      bVar25 = bVar20;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00404298_caseD_0;\n      default:\n        goto switchD_0040471e_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_004045c0;\n      case 8:\n        bVar25 = false;\n        bVar23 = false;\n        bVar17 = 0x62;\n        break;\n      case 9:\n        goto switchD_004048b2_caseD_9;\n      case 10:\n        goto switchD_004048b2_caseD_a;\n      case 0xb:\n        goto switchD_004048b2_caseD_b;\n      case 0xc:\n        goto switchD_004048b2_caseD_c;\n      case 0xd:\n        goto switchD_00404298_caseD_d;\n      case 0x20:\n        goto LAB_004048fa;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        goto switchD_00404298_caseD_21;\n      case 0x23:\n      case 0x7e:\n        bVar26 = bVar20;\n        goto LAB_004048da;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        goto LAB_004048c2;\n      case 0x27:\n        goto switchD_0040471e_caseD_27;\n      case 0x3f:\n        goto switchD_0040471e_caseD_3f;\n      case 0x5c:\n        goto switchD_00404298_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        goto switchD_0040471e_caseD_7b;\n      }\n      goto LAB_00404342;\n    }\n    goto LAB_0040451a;\n  }\n  uVar19 = (ulong)*__s1;\n  switch(uVar19) {\n  case 0:\n    if (bVar6) {\nswitchD_004048b2_caseD_0:\n      if (!local_5c) {\n        bVar20 = false;\nswitchD_00404298_caseD_0:\n        bVar26 = param_5 == 2;\n        bVar24 = (bool)((bVar3 ^ 1U) & bVar26);\n        if (bVar24) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar16 = uVar15 + 3;\n          bVar3 = bVar24;\n          if (uVar9 <= uVar15 + 3) {\n            uVar16 = uVar15 + 4;\n            bVar23 = false;\n            bVar17 = 0x30;\n            bVar4 = bVar24;\n            goto LAB_004043f8;\n          }\nLAB_0040463a:\n          param_1[uVar16] = 0x5c;\n          uVar15 = uVar16;\n        }\n        else if (uVar15 < uVar9) goto LAB_0040463a;\n        uVar16 = uVar15 + 1;\n        bVar24 = bVar23;\n        if (param_5 == 2) {\n          bVar17 = 0x30;\n          bVar23 = false;\n          bVar4 = bVar3;\n          goto LAB_004043f8;\n        }\n        uVar19 = 0x30;\n        if ((uVar22 + 1 < param_4) && ((byte)(param_3[uVar22 + 1] - 0x30U) < 10)) {\n          if (uVar16 < uVar9) {\n            param_1[uVar16] = 0x30;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x30;\n          }\n          uVar16 = uVar15 + 3;\n          uVar19 = 0x30;\n        }\nLAB_00404679:\n        bVar17 = (byte)uVar19;\n        bVar23 = false;\n        uVar15 = uVar16;\n        bVar4 = bVar3;\n        if ((bool)(bVar6 ^ 1U | bVar26)) goto LAB_004043f8;\n        goto LAB_00404301;\n      }\n      bVar26 = param_5 == 2;\n      goto LAB_0040450c;\n    }\n    if ((param_6 & 1) == 0) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0;\n      bVar23 = false;\n      bVar20 = false;\n      goto LAB_004042e8;\n    }\n    uVar22 = uVar22 + 1;\n    goto LAB_004041a8;\n  default:\nswitchD_0040471e_caseD_1:\n    bVar25 = bVar6;\n    if (sVar8 != 1) {\n      local_40[0] = (mbstate_t)0x0;\n      if (param_4 == 0xffffffffffffffff) {\n        param_4 = strlen(param_3);\n      }\n      uVar21 = 0;\n      do {\n        uVar1 = uVar22 + uVar21;\n        lVar11 = FUN_00407410(&local_44,param_3 + uVar1,param_4 - uVar1,local_40);\n        if (lVar11 == 0) break;\n        if (lVar11 == -1) {\n          bVar23 = false;\n          goto LAB_0040502a;\n        }\n        if (lVar11 == -2) {\n          if ((param_4 <= uVar1) || (param_3[uVar1] == '\\0')) goto LAB_00405167;\n          goto LAB_00405157;\n        }\n        if (((param_5 == 2) && (local_5c)) && (lVar11 != 1)) {\n          pcVar12 = param_3 + uVar1 + 1;\n          do {\n            if (((byte)(*pcVar12 + 0xa5U) < 0x22) &&\n               ((1L << (*pcVar12 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n              param_5 = 2;\n              goto LAB_0040450c;\n            }\n            pcVar12 = pcVar12 + 1;\n          } while (param_3 + uVar1 + lVar11 != pcVar12);\n        }\n        iVar7 = iswprint(local_44);\n        if (iVar7 == 0) {\n          bVar23 = false;\n        }\n        uVar21 = uVar21 + lVar11;\n        iVar7 = mbsinit(local_40);\n      } while (iVar7 == 0);\n      bVar25 = (bool)((bVar23 ^ 1U) & bVar6);\n      goto LAB_0040502a;\n    }\n    ppuVar10 = __ctype_b_loc();\n    uVar21 = 1;\n    bVar25 = ((*ppuVar10)[uVar19] & 0x4000) == 0;\n    bVar23 = !bVar25;\n    bVar25 = (bool)(bVar25 & bVar6);\n    goto LAB_004046f4;\n  case 7:\n    bVar25 = param_5 == 2;\n    uVar19 = 7;\n    bVar13 = 0x61;\n    break;\n  case 8:\n    bVar25 = param_5 == 2;\n    uVar19 = 8;\n    bVar13 = 0x62;\n    break;\n  case 9:\n    uVar19 = 9;\n    bVar13 = 0x74;\n    goto LAB_00404732;\n  case 10:\n    uVar19 = 10;\n    bVar13 = 0x6e;\n    goto LAB_00404732;\n  case 0xb:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xb;\n    bVar13 = 0x76;\n    break;\n  case 0xc:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xc;\n    bVar13 = 0x66;\n    break;\n  case 0xd:\n    uVar19 = 0xd;\n    bVar13 = 0x72;\nLAB_00404732:\n    bVar25 = param_5 == 2;\n    bVar20 = (bool)(local_5c & bVar25);\n    if (bVar20) {\nLAB_0040474a:\n      param_5 = 2;\n      goto LAB_0040450c;\n    }\n    break;\n  case 0x20:\n    uVar19 = 0x20;\n    goto LAB_004042d6;\n  case 0x21:\n  case 0x22:\n  case 0x24:\n  case 0x26:\n  case 0x28:\n  case 0x29:\n  case 0x2a:\n  case 0x3b:\n  case 0x3c:\n  case 0x3d:\n  case 0x3e:\n  case 0x5b:\n  case 0x5e:\n  case 0x60:\n  case 0x7c:\n    bVar23 = false;\nLAB_004042d6:\n    bVar25 = param_5 == 2;\n    if ((local_5c) && (bVar25)) goto LAB_0040474a;\n    goto LAB_004042e8;\n  case 0x23:\n  case 0x7e:\nLAB_004042cd:\n    bVar25 = param_5 == 2;\n    if (uVar22 == 0) goto LAB_004042d6;\n    goto LAB_004044db;\n  case 0x25:\n  case 0x2b:\n  case 0x2c:\n  case 0x2d:\n  case 0x2e:\n  case 0x2f:\n  case 0x30:\n  case 0x31:\n  case 0x32:\n  case 0x33:\n  case 0x34:\n  case 0x35:\n  case 0x36:\n  case 0x37:\n  case 0x38:\n  case 0x39:\n  case 0x3a:\n  case 0x41:\n  case 0x42:\n  case 0x43:\n  case 0x44:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x48:\n  case 0x49:\n  case 0x4a:\n  case 0x4b:\n  case 0x4c:\n  case 0x4d:\n  case 0x4e:\n  case 0x4f:\n  case 0x50:\n  case 0x51:\n  case 0x52:\n  case 0x53:\n  case 0x54:\n  case 0x55:\n  case 0x56:\n  case 0x57:\n  case 0x58:\n  case 0x59:\n  case 0x5a:\n  case 0x5d:\n  case 0x5f:\n  case 0x61:\n  case 0x62:\n  case 99:\n  case 100:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n  case 0x68:\n  case 0x69:\n  case 0x6a:\n  case 0x6b:\n  case 0x6c:\n  case 0x6d:\n  case 0x6e:\n  case 0x6f:\n  case 0x70:\n  case 0x71:\n  case 0x72:\n  case 0x73:\n  case 0x74:\n  case 0x75:\n  case 0x76:\n  case 0x77:\n  case 0x78:\n  case 0x79:\n  case 0x7a:\n    goto switchD_0040471e_caseD_25;\n  case 0x27:\nswitchD_0040471e_caseD_27:\n    bVar5 = bVar23;\n    if (param_5 != 2) {\n      bVar25 = false;\n      uVar19 = 0x27;\n      goto LAB_004042e8;\n    }\n    if (!local_5c) {\n      if ((uVar9 == 0) || (uVar19 = 0, uVar21 = uVar9, local_70 != 0)) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x5c;\n        }\n        uVar19 = uVar9;\n        uVar21 = local_70;\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x27;\n        }\n      }\n      uVar16 = uVar15 + 3;\n      bVar17 = 0x27;\n      uVar9 = uVar19;\n      local_70 = uVar21;\n      bVar24 = false;\n      bVar4 = false;\n      goto LAB_004043f8;\n    }\n    goto LAB_0040450c;\n  case 0x3f:\nswitchD_0040471e_caseD_3f:\n    if (param_5 == 2) {\n      if (!local_5c) {\n        bVar17 = 0x3f;\n        bVar24 = false;\n        bVar23 = false;\n        goto LAB_004043f8;\n      }\n      goto LAB_0040450c;\n    }\n    if (param_5 != 5) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0x3f;\n      bVar23 = false;\n      goto LAB_004042e8;\n    }\n    if (((((param_6 & 4) != 0) && (uVar21 = uVar22 + 2, uVar21 < param_4)) &&\n        (param_3[uVar22 + 1] == '?')) &&\n       ((uVar19 = (ulong)(byte)param_3[uVar21], (byte)param_3[uVar21] < 0x3f &&\n        ((0x7000a38200000000U >> (uVar19 & 0x3f) & 1) != 0)))) {\n      if (!local_5c) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x3f;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x22;\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x22;\n        }\n        if (uVar15 + 3 < uVar9) {\n          param_1[uVar15 + 3] = 0x3f;\n        }\n        uVar16 = uVar15 + 4;\n        bVar26 = false;\n        uVar22 = uVar21;\n        bVar24 = false;\n        goto LAB_00404679;\n      }\n      goto LAB_0040451a;\n    }\n    bVar25 = false;\n    uVar19 = 0x3f;\n    bVar23 = false;\n    goto LAB_004042e8;\n  case 0x5c:\n    if (param_5 != 2) {\nswitchD_00404298_caseD_5c:\n      uVar19 = 0x5c;\n      bVar17 = 0x5c;\n      bVar13 = 0x5c;\n      bVar25 = (bool)(bVar6 & local_5c & local_a0 != 0);\n      if (!bVar25) break;\n      uVar22 = uVar22 + 1;\n      bVar23 = false;\n      goto LAB_00404414;\n    }\n    if (local_5c) goto LAB_0040450c;\n    uVar22 = uVar22 + 1;\n    bVar23 = false;\n    bVar17 = 0x5c;\n    goto LAB_00404414;\n  case 0x7b:\n  case 0x7d:\nswitchD_0040471e_caseD_7b:\n    bVar24 = param_4 != 1;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar24 = param_3[1] != '\\0';\n    }\n    bVar25 = param_5 == 2;\n    if (!bVar24) goto LAB_004042cd;\n    goto LAB_004044db;\n  }\nLAB_004044d0:\n  if (!bVar6) {\nLAB_004044db:\n    bVar23 = false;\n    goto LAB_004042e8;\n  }\n  bVar23 = false;\n  bVar17 = bVar13;\n  goto joined_r0x004044f7;\nLAB_00404928:\n  if ((uVar15 == 0) && ((bool)(local_5c & param_5 == 2))) {\n    param_5 = 2;\nLAB_0040450c:\n    if (bVar26) {\n      param_5 = 4;\n    }\nLAB_0040451a:\n    uVar9 = FUN_00404100(param_1,uVar9,param_3,param_4,param_5,param_6 & 0xfffffffd,0,param_8,\n                         param_9);\n    return uVar9;\n  }\n  bVar26 = (bool)(param_5 == 2 & (local_5c ^ 1U));\n  bVar23 = (bool)(local_5c ^ 1U);\n  if ((!bVar26) || (bVar23 = bVar26, !bVar5)) {\nLAB_004051fd:\n    uVar22 = uVar15;\n    if (((local_78 != (char *)0x0) && (bVar23)) && (cVar14 = *local_78, cVar14 != '\\0')) {\n      do {\n        if (uVar22 < uVar9) {\n          param_1[uVar22] = cVar14;\n        }\n        uVar22 = uVar22 + 1;\n        cVar14 = local_78[uVar22 - uVar15];\n      } while (cVar14 != '\\0');\n    }\n    if (uVar22 < uVar9) {\n      param_1[uVar22] = 0;\n    }\n    return uVar22;\n  }\n  if (bVar2) {\n    uVar9 = FUN_00404100(param_1,local_70,param_3,param_4,5,param_6,param_7,param_8,param_9);\n    return uVar9;\n  }\n  local_5b = uVar9 == 0 && local_70 != 0;\n  param_2 = local_70;\n  bVar23 = bVar5;\n  if (uVar9 != 0 || local_70 == 0) goto LAB_004051fd;\nLAB_00404986:\n  *param_1 = 0x27;\n  param_5 = 2;\n  uVar15 = 1;\n  local_78 = \"\\'\";\n  local_a0 = 1;\n  local_5c = false;\n  uVar9 = param_2;\n  goto LAB_00404198;\n  while (__s1[uVar21] != 0) {\nLAB_00405157:\n    uVar21 = uVar21 + 1;\n    if (param_4 <= uVar22 + uVar21) break;\n  }\nLAB_00405167:\n  bVar23 = false;\nLAB_0040502a:\n  if (1 < uVar21) {\nLAB_00404bee:\n    bVar26 = false;\n    uVar21 = uVar21 + uVar22;\n    uVar16 = uVar22;\n    do {\n      bVar17 = (byte)uVar19;\n      if (bVar25) {\n        bVar26 = param_5 == 2;\n        if (local_5c) goto LAB_0040450c;\n        bVar26 = (bool)(bVar26 & (bVar4 ^ 1U));\n        if (bVar26) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar15 = uVar15 + 3;\n          bVar4 = bVar26;\n        }\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x5c;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = (char)(uVar19 >> 6) + '0';\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = ((byte)(uVar19 >> 3) & 7) + 0x30;\n        }\n        uVar22 = uVar16 + 1;\n        uVar15 = uVar15 + 3;\n        bVar17 = (bVar17 & 7) + 0x30;\n        bVar26 = bVar25;\n        if (uVar21 <= uVar22) goto LAB_0040438d;\n      }\n      else {\n        bVar3 = (bool)((bVar26 ^ 1U) & bVar4);\n        if (bVar20) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x5c;\n          }\n          uVar15 = uVar15 + 1;\n        }\n        uVar22 = uVar16 + 1;\n        if (uVar21 <= uVar22) goto LAB_00404414;\n        if (bVar3) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x27;\n          }\n          uVar15 = uVar15 + 2;\n          bVar20 = false;\n          bVar4 = false;\n        }\n        else {\n          bVar20 = false;\n        }\n      }\n      uVar16 = uVar16 + 1;\n      if (uVar15 < uVar9) {\n        param_1[uVar15] = bVar17;\n      }\n      uVar19 = (ulong)(byte)param_3[uVar16];\n      uVar15 = uVar15 + 1;\n    } while( true );\n  }\nLAB_004046f4:\n  if (bVar25) {\n    bVar23 = false;\n    bVar25 = bVar6;\n    goto LAB_00404bee;\n  }\nswitchD_0040471e_caseD_25:\n  bVar25 = param_5 == 2;\nLAB_004042e8:\n  bVar17 = (byte)uVar19;\n  bVar24 = (bool)((bVar6 ^ 1U | bVar25) ^ 1 | local_5c);\n  bVar26 = bVar20;\n  if (bVar24) {\nLAB_004042ff:\n    bVar24 = false;\n    bVar20 = bVar26;\nLAB_00404301:\n    bVar17 = (byte)uVar19;\n    uVar16 = uVar15;\n    bVar4 = bVar3;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar19 >> 5) * 4) >> (bVar17 & 0x1f) & 1) == 0))\n    goto LAB_004043f8;\n    bVar25 = param_5 == 2;\n  }\n  else {\nLAB_004043f8:\n    bVar25 = param_5 == 2;\n    uVar15 = uVar16;\n    bVar3 = bVar4;\n    if (!bVar20) {\n      uVar22 = uVar22 + 1;\n      bVar3 = (bool)((bVar24 ^ 1U) & bVar4);\nLAB_00404414:\n      if (bVar3) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x27;\n        }\n        uVar15 = uVar15 + 2;\n        bVar4 = false;\n      }\n      goto LAB_0040438d;\n    }\n  }\njoined_r0x004044f7:\n  if (local_5c) {\nLAB_00404508:\n    bVar26 = (bool)(bVar6 & bVar25);\n    goto LAB_0040450c;\n  }\nLAB_00404342:\n  bVar25 = (bool)((bVar3 ^ 1U) & bVar25);\n  if (bVar25) {\n    if (uVar15 < uVar9) {\n      param_1[uVar15] = 0x27;\n    }\n    if (uVar15 + 1 < uVar9) {\n      param_1[uVar15 + 1] = 0x24;\n    }\n    if (uVar15 + 2 < uVar9) {\n      param_1[uVar15 + 2] = 0x27;\n    }\n    uVar15 = uVar15 + 3;\n    bVar3 = bVar25;\n  }\nLAB_0040437b:\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = 0x5c;\n  }\n  uVar15 = uVar15 + 1;\n  uVar22 = uVar22 + 1;\n  bVar4 = bVar3;\nLAB_0040438d:\n  bVar3 = bVar4;\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = bVar17;\n  }\n  uVar15 = uVar15 + 1;\n  if (!bVar23) {\n    bVar2 = false;\n  }\n  goto LAB_004041a8;\n}\n\n",
            "funcName": "FUN_00404100"
        },
        {
            "funcStartAddr": "0x405330",
            "funcEndAddr": "0x4054cb",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_00405330(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_0060c278;\n  if (DAT_0060c290 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_004063a0();\n    }\n    if (PTR_DAT_0060c278 == &DAT_0060c280) {\n      puVar8 = (undefined4 *)FUN_004061b0(0);\n      uVar6 = PTR_DAT_0060c288._4_4_;\n      uVar5 = PTR_DAT_0060c288._0_4_;\n      uVar3 = _UNK_0060c284;\n      PTR_DAT_0060c278 = (undefined *)puVar8;\n      *puVar8 = _DAT_0060c280;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_004061b0(PTR_DAT_0060c278);\n      PTR_DAT_0060c278 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_0060c290 * 4,0,(long)((param_1 + 1) - DAT_0060c290) << 4);\n    DAT_0060c290 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_00404100(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_0060c320) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)FUN_00406150(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_00404100(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n",
            "funcName": "FUN_00405330"
        },
        {
            "funcStartAddr": "0x4054d0",
            "funcEndAddr": "0x405504",
            "decompiledFuncCode": "\nvoid FUN_004054d0(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060c420;\n  }\n  FUN_00406350(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_004054d0"
        },
        {
            "funcStartAddr": "0x405510",
            "funcEndAddr": "0x40551f",
            "decompiledFuncCode": "\nundefined4 FUN_00405510(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060c420;\n  }\n  return *param_1;\n}\n\n",
            "funcName": "FUN_00405510"
        },
        {
            "funcStartAddr": "0x405520",
            "funcEndAddr": "0x40552f",
            "decompiledFuncCode": "\nvoid FUN_00405520(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060c420;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_00405520"
        },
        {
            "funcStartAddr": "0x405530",
            "funcEndAddr": "0x405563",
            "decompiledFuncCode": "\nuint FUN_00405530(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060c420;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n",
            "funcName": "FUN_00405530"
        },
        {
            "funcStartAddr": "0x405570",
            "funcEndAddr": "0x405583",
            "decompiledFuncCode": "\nundefined4 FUN_00405570(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060c420;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00405570"
        },
        {
            "funcStartAddr": "0x405590",
            "funcEndAddr": "0x4055bb",
            "decompiledFuncCode": "\nvoid FUN_00405590(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060c420;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405590"
        },
        {
            "funcStartAddr": "0x4055c0",
            "funcEndAddr": "0x405632",
            "decompiledFuncCode": "\nvoid FUN_004055c0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_0060c420;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00404100(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_004055c0"
        },
        {
            "funcStartAddr": "0x405640",
            "funcEndAddr": "0x405721",
            "decompiledFuncCode": "\nundefined8 FUN_00405640(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_0060c420;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00404100(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = FUN_00406150(lVar3 + 1);\n  FUN_00404100(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n",
            "funcName": "FUN_00405640"
        },
        {
            "funcStartAddr": "0x405730",
            "funcEndAddr": "0x40573a",
            "decompiledFuncCode": "\nvoid FUN_00405730(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00405640(param_1,param_2,0,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00405730"
        },
        {
            "funcStartAddr": "0x405740",
            "funcEndAddr": "0x4057d5",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00405740(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_0060c278;\n  if (1 < DAT_0060c290) {\n    ppvVar2 = (void **)(PTR_DAT_0060c278 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_0060c278 + (ulong)(DAT_0060c290 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_0060c320) {\n    free(*(undefined **)(__ptr_00 + 8));\n    _DAT_0060c280 = 0x100;\n    PTR_DAT_0060c288 = &DAT_0060c320;\n  }\n  if (__ptr_00 != &DAT_0060c280) {\n    free(__ptr_00);\n    PTR_DAT_0060c278 = &DAT_0060c280;\n  }\n  DAT_0060c290 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00405740"
        },
        {
            "funcStartAddr": "0x4057e0",
            "funcEndAddr": "0x4057f1",
            "decompiledFuncCode": "\nvoid FUN_004057e0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00405330(param_1,param_2,0xffffffffffffffff,&DAT_0060c420);\n  return;\n}\n\n",
            "funcName": "FUN_004057e0"
        },
        {
            "funcStartAddr": "0x405800",
            "funcEndAddr": "0x40580a",
            "decompiledFuncCode": "\nvoid FUN_00405800(void)\n\n{\n  FUN_00405330();\n  return;\n}\n\n",
            "funcName": "FUN_00405800"
        },
        {
            "funcStartAddr": "0x405810",
            "funcEndAddr": "0x405826",
            "decompiledFuncCode": "\nvoid FUN_00405810(undefined8 param_1)\n\n{\n  FUN_00405330(0,param_1,0xffffffffffffffff,&DAT_0060c420);\n  return;\n}\n\n",
            "funcName": "FUN_00405810"
        },
        {
            "funcStartAddr": "0x405830",
            "funcEndAddr": "0x405842",
            "decompiledFuncCode": "\nvoid FUN_00405830(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00405330(0,param_1,param_2,&DAT_0060c420);\n  return;\n}\n\n",
            "funcName": "FUN_00405830"
        },
        {
            "funcStartAddr": "0x405850",
            "funcEndAddr": "0x4058b8",
            "decompiledFuncCode": "\nvoid FUN_00405850(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00405330(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405850"
        },
        {
            "funcStartAddr": "0x4058c0",
            "funcEndAddr": "0x405924",
            "decompiledFuncCode": "\nvoid FUN_004058c0(undefined8 param_1,int param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00405330(param_1,param_3,param_4,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004058c0"
        },
        {
            "funcStartAddr": "0x405930",
            "funcEndAddr": "0x40593c",
            "decompiledFuncCode": "\nvoid FUN_00405930(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00405850(0,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00405930"
        },
        {
            "funcStartAddr": "0x405940",
            "funcEndAddr": "0x40594f",
            "decompiledFuncCode": "\nvoid FUN_00405940(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_004058c0(0,param_1,param_2,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00405940"
        },
        {
            "funcStartAddr": "0x405950",
            "funcEndAddr": "0x4059c0",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00405950(undefined8 param_1,undefined8 param_2,byte param_3)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  \n  local_18 = DAT_0060c450;\n  local_48 = _DAT_0060c420;\n  uStack_40 = uRam000000000060c428;\n  local_38 = _DAT_0060c430;\n  uStack_30 = uRam000000000060c438;\n  puVar1 = (uint *)((long)&uStack_40 + (ulong)(param_3 >> 5) * 4);\n  local_28 = _DAT_0060c440;\n  uStack_20 = uRam000000000060c448;\n  uVar2 = *puVar1;\n  *puVar1 = (~(uVar2 >> (param_3 & 0x1f)) & 1) << (param_3 & 0x1f) ^ uVar2;\n  FUN_00405330(0,param_1,param_2,&local_48);\n  return;\n}\n\n",
            "funcName": "FUN_00405950"
        },
        {
            "funcStartAddr": "0x4059c0",
            "funcEndAddr": "0x4059cd",
            "decompiledFuncCode": "\nvoid FUN_004059c0(undefined8 param_1,char param_2)\n\n{\n  FUN_00405950(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n",
            "funcName": "FUN_004059c0"
        },
        {
            "funcStartAddr": "0x4059d0",
            "funcEndAddr": "0x4059e1",
            "decompiledFuncCode": "\nvoid FUN_004059d0(undefined8 param_1)\n\n{\n  FUN_00405950(param_1,0xffffffffffffffff,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_004059d0"
        },
        {
            "funcStartAddr": "0x4059f0",
            "funcEndAddr": "0x4059fa",
            "decompiledFuncCode": "\nvoid FUN_004059f0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00405950(param_1,param_2,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_004059f0"
        },
        {
            "funcStartAddr": "0x405a00",
            "funcEndAddr": "0x405a6e",
            "decompiledFuncCode": "\nvoid FUN_00405a00(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_40 = 0x400000000000000;\n    local_44 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00405330(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405a00"
        },
        {
            "funcStartAddr": "0x405a70",
            "funcEndAddr": "0x405adc",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00405a70(undefined8 param_1,long param_2,long param_3,undefined8 param_4,undefined8 param_5\n                 )\n\n{\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long lStack_20;\n  long local_18;\n  \n  uStack_40 = uRam000000000060c428;\n  local_38 = _DAT_0060c430;\n  uStack_30 = uRam000000000060c438;\n  local_28 = _DAT_0060c440;\n  lStack_20 = uRam000000000060c448;\n  local_18 = DAT_0060c450;\n  local_48 = CONCAT44((int)((ulong)_DAT_0060c420 >> 0x20),10);\n  if ((param_2 != 0) && (param_3 != 0)) {\n    lStack_20 = param_2;\n    local_18 = param_3;\n    FUN_00405330(param_1,param_4,param_5,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405a70"
        },
        {
            "funcStartAddr": "0x405ae0",
            "funcEndAddr": "0x405ae9",
            "decompiledFuncCode": "\nvoid FUN_00405ae0(void)\n\n{\n  FUN_00405a70();\n  return;\n}\n\n",
            "funcName": "FUN_00405ae0"
        },
        {
            "funcStartAddr": "0x405af0",
            "funcEndAddr": "0x405b07",
            "decompiledFuncCode": "\nvoid FUN_00405af0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00405a70(0,param_1,param_2,param_3,0xffffffffffffffff);\n  return;\n}\n\n",
            "funcName": "FUN_00405af0"
        },
        {
            "funcStartAddr": "0x405b10",
            "funcEndAddr": "0x405b23",
            "decompiledFuncCode": "\nvoid FUN_00405b10(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00405a70(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n",
            "funcName": "FUN_00405b10"
        },
        {
            "funcStartAddr": "0x405b30",
            "funcEndAddr": "0x405b3a",
            "decompiledFuncCode": "\nvoid FUN_00405b30(void)\n\n{\n  FUN_00405330();\n  return;\n}\n\n",
            "funcName": "FUN_00405b30"
        },
        {
            "funcStartAddr": "0x405b40",
            "funcEndAddr": "0x405b52",
            "decompiledFuncCode": "\nvoid FUN_00405b40(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00405330(0,param_1,param_2,&DAT_0060c240);\n  return;\n}\n\n",
            "funcName": "FUN_00405b40"
        },
        {
            "funcStartAddr": "0x405b60",
            "funcEndAddr": "0x405b71",
            "decompiledFuncCode": "\nvoid FUN_00405b60(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00405330(param_1,param_2,0xffffffffffffffff,&DAT_0060c240);\n  return;\n}\n\n",
            "funcName": "FUN_00405b60"
        },
        {
            "funcStartAddr": "0x405b80",
            "funcEndAddr": "0x405b96",
            "decompiledFuncCode": "\nvoid FUN_00405b80(undefined8 param_1)\n\n{\n  FUN_00405330(0,param_1,0xffffffffffffffff,&DAT_0060c240);\n  return;\n}\n\n",
            "funcName": "FUN_00405b80"
        },
        {
            "funcStartAddr": "0x405ba0",
            "funcEndAddr": "0x405bae",
            "decompiledFuncCode": "\nvoid FUN_00405ba0(undefined8 param_1)\n\n{\n  FUN_00406460(param_1,0,3);\n  return;\n}\n\n",
            "funcName": "FUN_00405ba0"
        },
        {
            "funcStartAddr": "0x405bb0",
            "funcEndAddr": "0x405f54",
            "decompiledFuncCode": "\nundefined8\nFUN_00405bb0(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0040966b,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00405e2c;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_00405e2c:\n    __fprintf_chk(param_1,1,uVar7,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[1];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar1 = param_5[2];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_00405ec9;\n  case 7:\n    uVar1 = param_5[2];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    local_58 = param_5[1];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_00405ec9:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_58,uVar1,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00405caa;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_00405caa:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_50,local_58,uVar6,uVar5,uVar4,uVar1,local_48);\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00405bb0"
        },
        {
            "funcStartAddr": "0x405f90",
            "funcEndAddr": "0x405fb0",
            "decompiledFuncCode": "\nvoid FUN_00405f90(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_00405bb0();\n  return;\n}\n\n",
            "funcName": "FUN_00405f90"
        },
        {
            "funcStartAddr": "0x405fb0",
            "funcEndAddr": "0x406009",
            "decompiledFuncCode": "\nvoid FUN_00405fb0(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long local_58 [11];\n  \n  lVar4 = 0;\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_58[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_58[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_00405bb0();\n  return;\n}\n\n",
            "funcName": "FUN_00405fb0"
        },
        {
            "funcStartAddr": "0x406010",
            "funcEndAddr": "0x4060c8",
            "decompiledFuncCode": "\nvoid FUN_00406010(void)\n\n{\n  long lVar1;\n  undefined8 in_R8;\n  ulong uVar2;\n  undefined8 in_R9;\n  long lVar3;\n  long *plVar4;\n  long local_88 [10];\n  long local_38 [4];\n  long local_18 [3];\n  \n  local_18[0] = in_R8;\n  plVar4 = (long *)&stack0x00000008;\n  uVar2 = 0x20;\n  local_18[1] = in_R9;\n  lVar3 = 0;\n  do {\n    if ((uint)uVar2 < 0x30) {\n      lVar1 = *(long *)((long)local_38 + uVar2);\n      local_88[lVar3] = lVar1;\n      uVar2 = (ulong)((uint)uVar2 + 8);\n    }\n    else {\n      lVar1 = *plVar4;\n      local_88[lVar3] = lVar1;\n      plVar4 = plVar4 + 1;\n    }\n  } while ((lVar1 != 0) && (lVar3 = lVar3 + 1, lVar3 != 10));\n  FUN_00405bb0();\n  return;\n}\n\n",
            "funcName": "FUN_00406010"
        },
        {
            "funcStartAddr": "0x4060d0",
            "funcEndAddr": "0x406144",
            "decompiledFuncCode": "\nvoid FUN_004060d0(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n",
            "funcName": "FUN_004060d0"
        },
        {
            "funcStartAddr": "0x406150",
            "funcEndAddr": "0x40616a",
            "decompiledFuncCode": "\nvoid FUN_00406150(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_004063a0();\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00406150"
        },
        {
            "funcStartAddr": "0x406170",
            "funcEndAddr": "0x406191",
            "decompiledFuncCode": "\nvoid FUN_00406170(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_00406150();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_004063a0();\n}\n\n",
            "funcName": "FUN_00406170"
        },
        {
            "funcStartAddr": "0x4061a0",
            "funcEndAddr": "0x4061a2",
            "decompiledFuncCode": "\nvoid thunk_FUN_00406150(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_004063a0();\n  }\n  return;\n}\n\n",
            "funcName": "thunk_4061a0"
        },
        {
            "funcStartAddr": "0x4061b0",
            "funcEndAddr": "0x4061e0",
            "decompiledFuncCode": "\nvoid * FUN_004061b0(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_004063a0();\n  }\n  return pvVar1;\n}\n\n",
            "funcName": "FUN_004061b0"
        },
        {
            "funcStartAddr": "0x4061f0",
            "funcEndAddr": "0x406211",
            "decompiledFuncCode": "\nvoid FUN_004061f0(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_004061b0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_004063a0();\n}\n\n",
            "funcName": "FUN_004061f0"
        },
        {
            "funcStartAddr": "0x406220",
            "funcEndAddr": "0x406298",
            "decompiledFuncCode": "\nvoid FUN_00406220(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar2 = *param_2;\n  if (param_1 == 0) {\n    if (uVar2 == 0) {\n      uVar2 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar3 = (ulong)(SUB168(ZEXT816(uVar2) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar2) * ZEXT816(param_3),0) < 0) || (uVar3 != 0)) goto LAB_0040627b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar3 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar2) {\nLAB_0040627b:\n                    /* WARNING: Subroutine does not return */\n      FUN_004063a0(param_1,param_2,uVar3);\n    }\n    uVar2 = (uVar2 >> 1) + 1 + uVar2;\n  }\n  *param_2 = uVar2;\n  FUN_004061b0(param_1,uVar2 * param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00406220"
        },
        {
            "funcStartAddr": "0x4062b0",
            "funcEndAddr": "0x4062fa",
            "decompiledFuncCode": "\nvoid FUN_004062b0(long param_1,ulong *param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = *param_2;\n  if (param_1 == 0) {\n    if (uVar1 == 0) {\n      *param_2 = 0x80;\n      FUN_004061b0(0,0x80);\n      return;\n    }\n    if ((long)uVar1 < 0) goto LAB_004062fa;\n  }\n  else {\n    if (0x5555555555555553 < uVar1) {\nLAB_004062fa:\n                    /* WARNING: Subroutine does not return */\n      FUN_004063a0();\n    }\n    uVar1 = (uVar1 >> 1) + 1 + uVar1;\n  }\n  *param_2 = uVar1;\n  FUN_004061b0(param_1,uVar1);\n  return;\n}\n\n",
            "funcName": "FUN_004062b0"
        },
        {
            "funcStartAddr": "0x406300",
            "funcEndAddr": "0x406317",
            "decompiledFuncCode": "\nvoid FUN_00406300(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00406150();\n  memset(__s,0,param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00406300"
        },
        {
            "funcStartAddr": "0x406320",
            "funcEndAddr": "0x40634e",
            "decompiledFuncCode": "\nvoid FUN_00406320(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_004063a0();\n}\n\n",
            "funcName": "FUN_00406320"
        },
        {
            "funcStartAddr": "0x406350",
            "funcEndAddr": "0x406378",
            "decompiledFuncCode": "\nvoid FUN_00406350(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00406150(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00406350"
        },
        {
            "funcStartAddr": "0x406380",
            "funcEndAddr": "0x406393",
            "decompiledFuncCode": "\nvoid FUN_00406380(char *param_1)\n\n{\n  void *__dest;\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  __dest = (void *)FUN_00406150(sVar1 + 1);\n  memcpy(__dest,param_1,sVar1 + 1);\n  return;\n}\n\n",
            "funcName": "FUN_00406380"
        },
        {
            "funcStartAddr": "0x4063a0",
            "funcEndAddr": "0x4063d1",
            "decompiledFuncCode": "\nvoid FUN_004063a0(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_0060c220,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004063a0"
        },
        {
            "funcStartAddr": "0x4063e0",
            "funcEndAddr": "0x406458",
            "decompiledFuncCode": "\nint FUN_004063e0(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_00406447;\n    }\n    iVar1 = FUN_004065a0(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_00406447:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n",
            "funcName": "FUN_004063e0"
        },
        {
            "funcStartAddr": "0x406460",
            "funcEndAddr": "0x40658c",
            "decompiledFuncCode": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint FUN_00406460(ulong param_1,int param_2,ulong param_3)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  int *piVar4;\n  \n  if (param_2 != 0x406) {\n    iVar1 = fcntl((int)param_1,param_2,param_3);\n    return iVar1;\n  }\n  if (DAT_0060c458 < 0) {\n    iVar1 = FUN_00406460(param_1,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    if (DAT_0060c458 != -1) {\n      return iVar1;\n    }\n  }\n  else {\n    iVar1 = fcntl((int)param_1,0x406);\n    if ((-1 < iVar1) || (piVar4 = __errno_location(), *piVar4 != 0x16)) {\n      DAT_0060c458 = 1;\n      return iVar1;\n    }\n    iVar1 = FUN_00406460(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    DAT_0060c458 = -1;\n  }\n  uVar2 = fcntl(iVar1,1);\n  if ((-1 < (int)uVar2) && (iVar3 = fcntl(iVar1,2,(ulong)(uVar2 | 1)), iVar3 != -1)) {\n    return iVar1;\n  }\n  piVar4 = __errno_location();\n  iVar3 = *piVar4;\n  close(iVar1);\n  *piVar4 = iVar3;\n  return -1;\n}\n\n",
            "funcName": "FUN_00406460"
        },
        {
            "funcStartAddr": "0x4065a0",
            "funcEndAddr": "0x4065db",
            "decompiledFuncCode": "\nvoid FUN_004065a0(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if ((iVar1 != 0) && ((param_1->_flags & 0x100U) != 0)) {\n      FUN_004065e0(param_1,0,1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_004065a0"
        },
        {
            "funcStartAddr": "0x4065e0",
            "funcEndAddr": "0x406636",
            "decompiledFuncCode": "\nulong FUN_004065e0(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  uint uVar1;\n  int __fd;\n  ulong uVar2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    __fd = fileno(param_1);\n    uVar2 = lseek(__fd,param_2,param_3);\n    if (uVar2 != 0xffffffffffffffff) {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = uVar2;\n      uVar2 = 0;\n    }\n    return uVar2;\n  }\n  uVar1 = fseeko(param_1,param_2,param_3);\n  return (ulong)uVar1;\n}\n\n",
            "funcName": "FUN_004065e0"
        },
        {
            "funcStartAddr": "0x406640",
            "funcEndAddr": "0x406715",
            "decompiledFuncCode": "\nvoid FUN_00406640(long param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 *puVar5;\n  long lVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  \n  iVar1 = param_2[0xb];\n  iVar2 = *param_2;\n  iVar3 = param_2[0xc];\n  iVar8 = iVar1;\n  iVar9 = iVar2;\n  while (iVar3 < iVar9) {\n    while( true ) {\n      if (iVar3 <= iVar8) goto LAB_004066bc;\n      iVar10 = iVar9 - iVar3;\n      iVar7 = iVar3 - iVar8;\n      if (iVar10 <= iVar7) break;\n      lVar6 = (long)iVar8;\n      iVar9 = iVar9 - iVar7;\n      puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n      do {\n        uVar4 = *puVar5;\n        *puVar5 = puVar5[iVar9 - lVar6];\n        puVar5[iVar9 - lVar6] = uVar4;\n        puVar5 = puVar5 + 1;\n      } while ((undefined8 *)(param_1 + 8 + ((ulong)(iVar7 - 1) + lVar6) * 8) != puVar5);\n      if (iVar9 <= iVar3) goto LAB_004066bc;\n    }\n    lVar6 = (long)iVar8;\n    puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n    do {\n      uVar4 = *puVar5;\n      *puVar5 = puVar5[iVar3 - lVar6];\n      puVar5[iVar3 - lVar6] = uVar4;\n      puVar5 = puVar5 + 1;\n    } while (puVar5 != (undefined8 *)(param_1 + 8 + ((ulong)(iVar10 - 1) + lVar6) * 8));\n    iVar8 = iVar8 + iVar10;\n  }\nLAB_004066bc:\n  param_2[0xc] = iVar2;\n  param_2[0xb] = iVar1 + (iVar2 - iVar3);\n  return;\n}\n\n",
            "funcName": "FUN_00406640"
        },
        {
            "funcStartAddr": "0x406720",
            "funcEndAddr": "0x406d1e",
            "decompiledFuncCode": "\nint FUN_00406720(int param_1,undefined8 *param_2,char *param_3,char **param_4,undefined4 *param_5,\n                int param_6,int *param_7,int param_8,undefined8 param_9)\n\n{\n  char cVar1;\n  undefined8 uVar2;\n  bool bVar3;\n  bool bVar4;\n  int iVar5;\n  int iVar6;\n  size_t sVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  char **ppcVar10;\n  char *pcVar11;\n  char **ppcVar12;\n  char *pcVar13;\n  char *__s1;\n  FILE *__stream;\n  ulong uVar14;\n  size_t sVar15;\n  char *__s1_00;\n  long lVar16;\n  char *local_70;\n  uint local_44;\n  \n  pcVar13 = *(char **)(param_7 + 8);\n  cVar1 = *pcVar13;\n  pcVar11 = pcVar13;\n  if ((cVar1 == '=') || (cVar1 == '\\0')) {\n    sVar15 = 0;\n  }\n  else {\n    do {\n      pcVar11 = pcVar11 + 1;\n      if (*pcVar11 == '\\0') break;\n    } while (*pcVar11 != '=');\n    sVar15 = (long)pcVar11 - (long)pcVar13;\n  }\n  uVar14 = 0;\n  __s1 = *param_4;\n  ppcVar10 = param_4;\n  __s1_00 = __s1;\n  if (__s1 != (char *)0x0) {\n    while( true ) {\n      iVar5 = strncmp(__s1_00,pcVar13,sVar15);\n      if ((iVar5 == 0) && (sVar7 = strlen(__s1_00), sVar7 == sVar15)) goto LAB_00406940;\n      ppcVar10 = ppcVar10 + 4;\n      __s1_00 = *ppcVar10;\n      iVar5 = (int)uVar14 + 1;\n      if (__s1_00 == (char *)0x0) break;\n      uVar14 = (ulong)iVar5;\n    }\n    lVar16 = 0;\n    ppcVar10 = (char **)0x0;\n    local_44 = 0xffffffff;\n    bVar3 = false;\n    bVar4 = false;\n    local_70 = (char *)0x0;\n    ppcVar12 = param_4;\n    do {\n      iVar6 = strncmp(__s1,pcVar13,sVar15);\n      if (iVar6 == 0) {\n        if (ppcVar10 == (char **)0x0) {\n          local_44 = (uint)lVar16;\n          ppcVar10 = ppcVar12;\n        }\n        else if (((((param_6 != 0) || (*(int *)(ppcVar10 + 1) != *(int *)(ppcVar12 + 1))) ||\n                  (ppcVar10[2] != ppcVar12[2])) ||\n                 (*(int *)(ppcVar10 + 3) != *(int *)(ppcVar12 + 3))) && (!bVar3)) {\n          if (param_8 == 0) {\n            bVar3 = true;\n            if (local_70 == (char *)0x0) goto LAB_00406880;\n          }\n          else if (local_70 == (char *)0x0) {\n            local_70 = (char *)calloc((long)iVar5,1);\n            if (local_70 == (char *)0x0) {\n              bVar3 = true;\n              goto LAB_00406880;\n            }\n            bVar4 = true;\n            local_70[(int)local_44] = '\\x01';\n          }\n          local_70[lVar16] = '\\x01';\n        }\n      }\nLAB_00406880:\n      ppcVar12 = ppcVar12 + 4;\n      __s1 = *ppcVar12;\n      lVar16 = lVar16 + 1;\n    } while (__s1 != (char *)0x0);\n    if ((local_70 != (char *)0x0) || (bVar3)) {\n      if (param_8 != 0) {\n        if (bVar3) {\n          uVar2 = *param_2;\n          uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous\\n\",5);\n          __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n        else {\n          flockfile(stderr);\n          uVar2 = *(undefined8 *)(param_7 + 8);\n          uVar8 = *param_2;\n          uVar9 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous; possibilities:\",5);\n          __fprintf_chk(stderr,1,uVar9,uVar8,param_9,uVar2);\n          pcVar13 = local_70;\n          __stream = stderr;\n          do {\n            if (*pcVar13 != '\\0') {\n              __fprintf_chk(__stream,1,&DAT_00409af1,param_9,*param_4);\n              __stream = stderr;\n            }\n            pcVar13 = pcVar13 + 1;\n            param_4 = param_4 + 4;\n          } while (local_70 + uVar14 + 1 != pcVar13);\n          fputc(10,__stream);\n          funlockfile(stderr);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n      }\n      if (bVar4) {\n        free(local_70);\n      }\n      sVar15 = strlen(pcVar13);\n      *(char **)(param_7 + 8) = pcVar13 + sVar15;\n      *param_7 = *param_7 + 1;\n      param_7[2] = 0;\n      return 0x3f;\n    }\n    if (ppcVar10 != (char **)0x0) {\n      uVar14 = (ulong)local_44;\nLAB_00406940:\n      iVar6 = *param_7;\n      *(undefined8 *)(param_7 + 8) = 0;\n      iVar5 = iVar6 + 1;\n      *param_7 = iVar5;\n      if (*pcVar11 == '\\0') {\n        if (*(int *)(ppcVar10 + 1) == 1) {\n          if (param_1 <= iVar5) {\n            if (param_8 != 0) {\n              pcVar13 = *ppcVar10;\n              uVar2 = *param_2;\n              uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' requires an argument\\n\",5);\n              __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n            }\n            param_7[2] = *(int *)(ppcVar10 + 3);\n            return (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          *param_7 = iVar6 + 2;\n          *(undefined8 *)(param_7 + 4) = param_2[iVar5];\n        }\n      }\n      else {\n        if (*(int *)(ppcVar10 + 1) == 0) {\n          if (param_8 != 0) {\n            pcVar13 = *ppcVar10;\n            uVar2 = *param_2;\n            uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' doesn\\'t allow an argument\\n\",5);\n            __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          }\n          param_7[2] = *(int *)(ppcVar10 + 3);\n          return 0x3f;\n        }\n        *(char **)(param_7 + 4) = pcVar11 + 1;\n      }\n      if (param_5 != (undefined4 *)0x0) {\n        *param_5 = (int)uVar14;\n      }\n      if ((int *)ppcVar10[2] == (int *)0x0) {\n        return *(int *)(ppcVar10 + 3);\n      }\n      *(int *)ppcVar10[2] = *(int *)(ppcVar10 + 3);\n      return 0;\n    }\n  }\n  if (((param_6 != 0) && (*(char *)(param_2[*param_7] + 1) != '-')) &&\n     (pcVar11 = strchr(param_3,(int)cVar1), pcVar11 != (char *)0x0)) {\n    return -1;\n  }\n  if (param_8 != 0) {\n    uVar2 = *param_2;\n    uVar8 = dcgettext(0,\"%s: unrecognized option \\'%s%s\\'\\n\",5);\n    __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n  }\n  *(undefined8 *)(param_7 + 8) = 0;\n  *param_7 = *param_7 + 1;\n  param_7[2] = 0;\n  return 0x3f;\n}\n\n",
            "funcName": "FUN_00406720"
        },
        {
            "funcStartAddr": "0x406d40",
            "funcEndAddr": "0x4072a7",
            "decompiledFuncCode": "\nuint FUN_00406d40(uint param_1,undefined8 *param_2,char *param_3,long param_4,undefined8 param_5,\n                 ulong param_6,uint *param_7,int param_8)\n\n{\n  undefined8 uVar1;\n  char cVar2;\n  uint uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  long lVar6;\n  uint uVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  uint uVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  undefined1 *puVar15;\n  \n  bVar14 = 0;\n  uVar3 = param_7[1];\n  if ((int)param_1 < 1) {\n    return 0xffffffff;\n  }\n  uVar11 = *param_7;\n  *(undefined8 *)(param_7 + 4) = 0;\n  if (uVar11 == 0) {\n    *param_7 = 1;\n    uVar11 = 1;\nLAB_00406d8a:\n    param_7[0xc] = uVar11;\n    param_7[0xb] = uVar11;\n    *(undefined8 *)(param_7 + 8) = 0;\n    if (*param_3 == '-') {\n      param_7[10] = 2;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else if (*param_3 == '+') {\n      param_7[10] = 0;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else {\n      pbVar8 = (byte *)0x0;\n      if (param_8 == 0) {\n        pcVar4 = getenv(\"POSIXLY_CORRECT\");\n        param_6 = param_6 & 0xffffffff;\n        if (pcVar4 == (char *)0x0) {\n          param_7[10] = 1;\n          pbVar8 = *(byte **)(param_7 + 8);\n          goto LAB_00406e8d;\n        }\n        pbVar8 = *(byte **)(param_7 + 8);\n      }\n      param_7[10] = 0;\n    }\nLAB_00406e8d:\n    param_7[6] = 1;\n    cVar2 = *param_3;\nLAB_00406e98:\n    if (cVar2 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 == (byte *)0x0) goto LAB_00406e08;\nLAB_00406eac:\n    if (*pbVar8 == 0) goto LAB_00406e08;\n  }\n  else {\n    if (param_7[6] == 0) goto LAB_00406d8a;\n    cVar2 = *param_3;\n    pbVar8 = *(byte **)(param_7 + 8);\n    if ((cVar2 - 0x2bU & 0xfd) != 0) goto LAB_00406e98;\n    pcVar4 = param_3 + 1;\n    param_3 = param_3 + 1;\n    if (*pcVar4 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 != (byte *)0x0) goto LAB_00406eac;\nLAB_00406e08:\n    uVar11 = *param_7;\n    if (param_7[0xc] != uVar11 && (int)uVar11 <= (int)param_7[0xc]) {\n      param_7[0xc] = uVar11;\n    }\n    if ((int)uVar11 < (int)param_7[0xb]) {\n      param_7[0xb] = uVar11;\n    }\n    if (param_7[10] == 1) {\n      uVar7 = param_7[0xc];\n      if (param_7[0xb] == uVar7) {\n        if (uVar11 != uVar7) {\n          param_7[0xb] = uVar11;\n          uVar7 = uVar11;\n        }\n      }\n      else if (uVar11 != uVar7) {\n        FUN_00406640(param_2,param_7);\n        param_6 = param_6 & 0xffffffff;\n        uVar7 = *param_7;\n      }\n      uVar11 = uVar7;\n      uVar7 = uVar11;\n      if ((int)uVar11 < (int)param_1) {\n        lVar6 = (long)(int)uVar11;\n        do {\n          if ((*(char *)param_2[lVar6] == '-') && (((char *)param_2[lVar6])[1] != '\\0')) {\n            uVar11 = *param_7;\n            uVar7 = (uint)lVar6;\n            break;\n          }\n          uVar11 = (uint)lVar6 + 1;\n          lVar6 = lVar6 + 1;\n          *param_7 = uVar11;\n          uVar7 = uVar11;\n        } while ((int)lVar6 < (int)param_1);\n      }\n      param_7[0xc] = uVar7;\n    }\n    bVar12 = param_1 < uVar11;\n    bVar13 = param_1 == uVar11;\n    if (bVar13) {\n      param_1 = param_7[0xc];\n      uVar11 = param_7[0xb];\nLAB_00406f76:\n      if (uVar11 != param_1) {\n        *param_7 = uVar11;\n      }\n      return 0xffffffff;\n    }\n    lVar6 = 3;\n    pbVar8 = (byte *)param_2[(int)uVar11];\n    pbVar9 = pbVar8;\n    pbVar10 = &DAT_00409b09;\n    do {\n      if (lVar6 == 0) break;\n      lVar6 = lVar6 + -1;\n      bVar12 = *pbVar9 < *pbVar10;\n      bVar13 = *pbVar9 == *pbVar10;\n      pbVar9 = pbVar9 + (ulong)bVar14 * -2 + 1;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n    if ((!bVar12 && !bVar13) == bVar12) {\n      uVar11 = uVar11 + 1;\n      *param_7 = uVar11;\n      if (param_7[0xb] == param_7[0xc]) {\n        param_7[0xb] = uVar11;\n      }\n      else {\n        bVar12 = uVar11 != param_7[0xc];\n        uVar11 = param_7[0xb];\n        if (bVar12) {\n          FUN_00406640(param_2,param_7);\n          uVar11 = param_7[0xb];\n        }\n      }\n      param_7[0xc] = param_1;\n      *param_7 = param_1;\n      goto LAB_00406f76;\n    }\n    if ((*pbVar8 != 0x2d) || (bVar14 = pbVar8[1], bVar14 == 0)) {\n      if (param_7[10] == 0) {\n        return 0xffffffff;\n      }\n      *(byte **)(param_7 + 4) = pbVar8;\n      *param_7 = uVar11 + 1;\n      return 1;\n    }\n    if (param_4 != 0) {\n      if (bVar14 == 0x2d) {\n        *(byte **)(param_7 + 8) = pbVar8 + 2;\n        puVar15 = &DAT_00409b09;\n        goto LAB_004070d5;\n      }\n      if ((int)param_6 != 0) {\n        if (pbVar8[2] == 0) {\n          pcVar4 = strchr(param_3,(int)(char)bVar14);\n          param_6 = param_6 & 0xffffffff;\n          if (pcVar4 != (char *)0x0) goto LAB_00407080;\n        }\n        *(byte **)(param_7 + 8) = pbVar8 + 1;\n        uVar11 = FUN_00406720(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,\n                              &DAT_00409b0a);\n        if (uVar11 != 0xffffffff) {\n          return uVar11;\n        }\n        pbVar8 = (byte *)param_2[(int)*param_7];\n      }\n    }\nLAB_00407080:\n    pbVar8 = pbVar8 + 1;\n  }\n  pbVar9 = pbVar8 + 1;\n  *(byte **)(param_7 + 8) = pbVar9;\n  bVar14 = *pbVar8;\n  uVar11 = (uint)(char)bVar14;\n  pcVar4 = strchr(param_3,uVar11);\n  if (pbVar8[1] == 0) {\n    *param_7 = *param_7 + 1;\n  }\n  if (((byte)(bVar14 - 0x3a) < 2) || (pcVar4 == (char *)0x0)) {\n    if (uVar3 != 0) {\n      uVar1 = *param_2;\n      uVar5 = dcgettext(0,\"%s: invalid option -- \\'%c\\'\\n\",5);\n      __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n    }\n    param_7[2] = uVar11;\n    return 0x3f;\n  }\n  if (((*pcVar4 != 'W') || (param_4 == 0)) || (pcVar4[1] != ';')) {\n    if (pcVar4[1] == ':') {\n      if (pcVar4[2] == ':') {\n        if (pbVar8[1] == 0) {\n          *(undefined8 *)(param_7 + 4) = 0;\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = *param_7 + 1;\n        }\n      }\n      else {\n        uVar7 = *param_7;\n        if (pbVar8[1] == 0) {\n          if (param_1 == uVar7) {\n            if (uVar3 != 0) {\n              uVar1 = *param_2;\n              uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n              __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n            }\n            param_7[2] = uVar11;\n            uVar11 = (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          else {\n            uVar1 = param_2[(int)uVar7];\n            *param_7 = uVar7 + 1;\n            *(undefined8 *)(param_7 + 4) = uVar1;\n          }\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = uVar7 + 1;\n        }\n      }\n      *(undefined8 *)(param_7 + 8) = 0;\n      return uVar11;\n    }\n    return uVar11;\n  }\n  if (pbVar8[1] == 0) {\n    if (*param_7 == param_1) {\n      if (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n        __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n      }\n      param_7[2] = uVar11;\n      return (uint)(*param_3 != ':') * 5 + 0x3a;\n    }\n    pbVar9 = (byte *)param_2[(int)*param_7];\n  }\n  *(byte **)(param_7 + 8) = pbVar9;\n  param_6 = 0;\n  *(undefined8 *)(param_7 + 4) = 0;\n  puVar15 = &DAT_00409b28;\nLAB_004070d5:\n  uVar3 = FUN_00406720(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,puVar15);\n  return uVar3;\n}\n\n",
            "funcName": "FUN_00406d40"
        },
        {
            "funcStartAddr": "0x407310",
            "funcEndAddr": "0x407366",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00407310(void)\n\n{\n  DAT_0060c460 = DAT_0060c29c;\n  _DAT_0060c464 = DAT_0060c298;\n  FUN_00406d40();\n  DAT_0060c29c = DAT_0060c460;\n  _DAT_0060c4a0 = DAT_0060c470;\n  _DAT_0060c294 = DAT_0060c468;\n  return;\n}\n\n",
            "funcName": "FUN_00407310"
        },
        {
            "funcStartAddr": "0x407370",
            "funcEndAddr": "0x407388",
            "decompiledFuncCode": "\nvoid FUN_00407370(void)\n\n{\n  FUN_00407310();\n  return;\n}\n\n",
            "funcName": "FUN_00407370"
        },
        {
            "funcStartAddr": "0x407390",
            "funcEndAddr": "0x4073a3",
            "decompiledFuncCode": "\nvoid FUN_00407390(void)\n\n{\n  FUN_00407310();\n  return;\n}\n\n",
            "funcName": "FUN_00407390"
        },
        {
            "funcStartAddr": "0x4073b0",
            "funcEndAddr": "0x4073c5",
            "decompiledFuncCode": "\nvoid FUN_004073b0(void)\n\n{\n  FUN_00406d40();\n  return;\n}\n\n",
            "funcName": "FUN_004073b0"
        },
        {
            "funcStartAddr": "0x4073d0",
            "funcEndAddr": "0x4073e6",
            "decompiledFuncCode": "\nvoid FUN_004073d0(void)\n\n{\n  FUN_00407310();\n  return;\n}\n\n",
            "funcName": "FUN_004073d0"
        },
        {
            "funcStartAddr": "0x4073f0",
            "funcEndAddr": "0x407408",
            "decompiledFuncCode": "\nvoid FUN_004073f0(void)\n\n{\n  FUN_00406d40();\n  return;\n}\n\n",
            "funcName": "FUN_004073f0"
        },
        {
            "funcStartAddr": "0x407410",
            "funcEndAddr": "0x40747f",
            "decompiledFuncCode": "\nsize_t FUN_00407410(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  wchar_t local_1c;\n  \n  if (param_2 == (byte *)0x0) {\n    param_3 = 1;\n    param_2 = (byte *)0x409b27;\n  }\n  else {\n    if (param_3 == 0) {\n      return 0xfffffffffffffffe;\n    }\n    if (param_1 != (wchar_t *)0x0) goto LAB_00407434;\n  }\n  param_1 = &local_1c;\nLAB_00407434:\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (cVar1 = FUN_004074f0(0), cVar1 == '\\0')) {\n    sVar2 = 1;\n    *param_1 = (uint)*param_2;\n  }\n  return sVar2;\n}\n\n",
            "funcName": "FUN_00407410"
        },
        {
            "funcStartAddr": "0x407490",
            "funcEndAddr": "0x4074ec",
            "decompiledFuncCode": "\nulong FUN_00407490(uint *param_1)\n\n{\n  uint uVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  uVar1 = *param_1;\n  uVar3 = FUN_004063e0(param_1);\n  if ((uVar1 & 0x20) == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_00407490"
        },
        {
            "funcStartAddr": "0x4074f0",
            "funcEndAddr": "0x407546",
            "decompiledFuncCode": "\nbool FUN_004074f0(int param_1)\n\n{\n  bool bVar1;\n  byte *pbVar2;\n  long lVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  bool bVar8;\n  byte bVar9;\n  \n  bVar9 = 0;\n  pbVar2 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar1 = true;\n  bVar6 = false;\n  bVar8 = pbVar2 == (byte *)0x0;\n  if (!bVar8) {\n    lVar3 = 2;\n    pbVar4 = pbVar2;\n    pbVar5 = &DAT_00409b2c;\n    do {\n      if (lVar3 == 0) break;\n      lVar3 = lVar3 + -1;\n      bVar6 = *pbVar4 < *pbVar5;\n      bVar8 = *pbVar4 == *pbVar5;\n      pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      pbVar5 = pbVar5 + (ulong)bVar9 * -2 + 1;\n    } while (bVar8);\n    bVar1 = false;\n    bVar7 = false;\n    bVar6 = (!bVar6 && !bVar8) == bVar6;\n    if (!bVar6) {\n      lVar3 = 6;\n      pbVar4 = (byte *)\"POSIX\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar2 < *pbVar4;\n        bVar6 = *pbVar2 == *pbVar4;\n        pbVar2 = pbVar2 + (ulong)bVar9 * -2 + 1;\n        pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      } while (bVar6);\n      return (!bVar7 && !bVar6) != bVar7;\n    }\n  }\n  return bVar1;\n}\n\n",
            "funcName": "FUN_004074f0"
        },
        {
            "funcStartAddr": "0x407550",
            "funcEndAddr": "0x407aa4",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nchar * FUN_00407550(void)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  char *__s1;\n  size_t sVar5;\n  size_t sVar6;\n  char *pcVar7;\n  size_t __n;\n  char *__file;\n  FILE *__stream;\n  byte *pbVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  long lVar11;\n  ulong uVar12;\n  undefined8 *puVar13;\n  char *__ptr;\n  bool bVar14;\n  long local_d0;\n  undefined8 local_c0;\n  undefined8 local_b8;\n  undefined auStack_80 [8];\n  undefined8 local_78;\n  \n  __s1 = nl_langinfo(0xe);\n  if (__s1 == (char *)0x0) {\n    __s1 = \"\";\n  }\n  if (DAT_0060c498 != (char *)0x0) goto LAB_0040758a;\n  pcVar7 = getenv(\"CHARSETALIASDIR\");\n  if ((pcVar7 == (char *)0x0) || (*pcVar7 == '\\0')) {\n    sVar6 = 0x73;\n    sVar5 = 0x65;\n    __n = 100;\n    pcVar7 = \n    \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\"\n    ;\nLAB_00407675:\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      __file[__n] = '/';\n      goto LAB_00407696;\n    }\n  }\n  else {\n    __n = strlen(pcVar7);\n    if (__n == 0) {\n      sVar6 = 0xe;\n    }\n    else {\n      if (pcVar7[__n - 1] != '/') {\n        sVar6 = __n + 0xf;\n        sVar5 = __n + 1;\n        goto LAB_00407675;\n      }\n      sVar6 = __n + 0xe;\n    }\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      sVar5 = __n;\nLAB_00407696:\n      puVar13 = (undefined8 *)(__file + sVar5);\n      *puVar13 = 0x2e74657372616863;\n      *(undefined2 *)((long)puVar13 + 0xc) = 0x73;\n      *(undefined4 *)(puVar13 + 1) = 0x61696c61;\n      iVar2 = open(__file,0);\n      if (-1 < iVar2) {\n        __stream = fdopen(iVar2,\"r\");\n        local_d0 = 0;\n        if (__stream != (FILE *)0x0) {\n          pcVar7 = (char *)0x0;\nLAB_00407730:\n          pbVar8 = (byte *)__stream->_IO_read_ptr;\n          if (__stream->_IO_read_end <= pbVar8) goto LAB_004078bc;\n          do {\n            __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n            uVar4 = (uint)*pbVar8;\n            __ptr = pcVar7;\n            while( true ) {\n              pcVar7 = __ptr;\n              if ((uVar4 - 9 < 2) || (uVar4 == 0x20)) goto LAB_00407730;\n              if (uVar4 == 0x23) goto LAB_00407921;\n              ungetc(uVar4,__stream);\n              iVar2 = fscanf(__stream,\"%50s %50s\",&local_b8,&local_78);\n              puVar13 = &local_b8;\n              if (iVar2 < 2) goto LAB_004078cf;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              lVar11 = (long)puVar13 +\n                       ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_b8);\n              puVar13 = &local_78;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              local_c0 = (long)puVar13 +\n                         ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_78);\n              lVar9 = lVar11 + local_c0;\n              if (local_d0 == 0) {\n                pcVar7 = (char *)malloc(lVar9 + 3);\n              }\n              else {\n                lVar9 = lVar9 + local_d0;\n                pcVar7 = (char *)realloc(__ptr,lVar9 + 3);\n              }\n              local_d0 = lVar9 + 2;\n              if (pcVar7 == (char *)0x0) {\n                pcVar7 = \"\";\n                free(__ptr);\n                FUN_004063e0(__stream);\n                goto LAB_004076d4;\n              }\n              uVar12 = lVar11 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (-2 - lVar11) + (local_d0 - local_c0));\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_b8;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 2));\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_b8;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 4));\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_b8._4_4_,(undefined4)local_b8);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 8));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_b8 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              uVar12 = local_c0 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (local_d0 - local_c0) + -1);\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_78;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 6);\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_78;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 4);\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_78._4_4_,(undefined4)local_78);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)auStack_80 + (uVar12 & 0xffffffff));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_78 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              pbVar8 = (byte *)__stream->_IO_read_ptr;\n              if (pbVar8 < __stream->_IO_read_end) break;\nLAB_004078bc:\n              uVar4 = __uflow(__stream);\n              __ptr = pcVar7;\n              if (uVar4 == 0xffffffff) goto LAB_004078cf;\n            }\n          } while( true );\n        }\n        close(iVar2);\n      }\n      goto LAB_004076ce;\n    }\n  }\n  DAT_0060c498 = \"\";\nLAB_0040758a:\n  cVar1 = *DAT_0060c498;\n  pcVar7 = DAT_0060c498;\n  do {\n    if (cVar1 == '\\0') {\nLAB_004075e4:\n      if (*__s1 == '\\0') {\n        __s1 = \"ASCII\";\n      }\n      return __s1;\n    }\n    iVar2 = strcmp(__s1,pcVar7);\n    if ((iVar2 == 0) || ((cVar1 == '*' && (pcVar7[1] == '\\0')))) {\n      sVar6 = strlen(pcVar7);\n      __s1 = pcVar7 + sVar6 + 1;\n      goto LAB_004075e4;\n    }\n    sVar6 = strlen(pcVar7);\n    sVar5 = strlen(pcVar7 + sVar6 + 1);\n    pcVar7 = pcVar7 + sVar6 + 1 + sVar5 + 1;\n    cVar1 = *pcVar7;\n  } while( true );\nLAB_00407921:\n  do {\n    pbVar8 = (byte *)__stream->_IO_read_ptr;\n    if (pbVar8 < __stream->_IO_read_end) {\n      __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n      uVar4 = (uint)*pbVar8;\n      bVar14 = true;\n    }\n    else {\n      uVar4 = __uflow(__stream);\n      bVar14 = uVar4 != 0xffffffff;\n    }\n  } while ((uVar4 != 10) && (bVar14));\n  if (uVar4 == 0xffffffff) goto LAB_004078cf;\n  goto LAB_00407730;\nLAB_004078cf:\n  FUN_004063e0(__stream);\n  if (local_d0 == 0) {\nLAB_004076ce:\n    pcVar7 = \"\";\n  }\n  else {\n    pcVar7[local_d0] = '\\0';\n  }\nLAB_004076d4:\n  free(__file);\n  DAT_0060c498 = pcVar7;\n  goto LAB_0040758a;\n}\n\n",
            "funcName": "FUN_00407550"
        },
        {
            "funcStartAddr": "0x407ac0",
            "funcEndAddr": "0x407b1d",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00407af3) */\n/* WARNING: Removing unreachable block (ram,0x00407af8) */\n\nvoid FUN_00407ac0(void)\n\n{\n  __DT_INIT();\n  return;\n}\n\n",
            "funcName": "FUN_00407ac0"
        },
        {
            "funcStartAddr": "0x407b20",
            "funcEndAddr": "0x407b21",
            "decompiledFuncCode": "\nvoid FUN_00407b20(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00407b20"
        },
        {
            "funcStartAddr": "0x407b30",
            "funcEndAddr": "0x407b48",
            "decompiledFuncCode": "\nvoid FUN_00407b30(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,DAT_0060c208);\n  return;\n}\n\n",
            "funcName": "FUN_00407b30"
        },
        {
            "funcStartAddr": "0x407b48",
            "funcEndAddr": "0x407b68",
            "decompiledFuncCode": "\nundefined8 FUN_00407b48(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  code **ppcVar1;\n  \n  for (ppcVar1 = (code **)&DAT_0060be30; *ppcVar1 != (code *)0xffffffffffffffff;\n      ppcVar1 = ppcVar1 + -1) {\n    (**ppcVar1)();\n  }\n  return param_3;\n}\n\n",
            "funcName": "FUN_00407b48"
        }
    ],
    "decompilerName": "Ghidra",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_md5sum.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O"
}