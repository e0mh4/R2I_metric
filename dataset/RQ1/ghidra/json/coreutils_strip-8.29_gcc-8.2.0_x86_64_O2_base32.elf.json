{
    "funcCount": 104,
    "funcInfo": [
        {
            "funcStartAddr": "0x401815",
            "funcEndAddr": "0x40181a",
            "decompiledFuncCode": "\nvoid FUN_00401815(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401815"
        },
        {
            "funcStartAddr": "0x40181a",
            "funcEndAddr": "0x40181f",
            "decompiledFuncCode": "\nvoid FUN_0040181a(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040181a"
        },
        {
            "funcStartAddr": "0x40181f",
            "funcEndAddr": "0x401824",
            "decompiledFuncCode": "\nvoid FUN_0040181f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040181f"
        },
        {
            "funcStartAddr": "0x401824",
            "funcEndAddr": "0x401829",
            "decompiledFuncCode": "\nvoid FUN_00401824(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401824"
        },
        {
            "funcStartAddr": "0x401830",
            "funcEndAddr": "0x401aba",
            "decompiledFuncCode": "\nundefined8 FUN_00401830(int param_1,undefined8 *param_2)\n\n{\n  bool bVar1;\n  int iVar2;\n  uint uVar3;\n  long lVar4;\n  FILE *pFVar5;\n  undefined8 uVar6;\n  int *piVar7;\n  char *__s1;\n  undefined uVar8;\n  undefined8 uVar9;\n  \n  uVar9 = 0x4c;\n  bVar1 = false;\n  uVar8 = 0;\n  FUN_00402d10(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\n                 \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\"\n                );\n  textdomain(\"coreutils\");\n  FUN_00406de0(FUN_00402c30);\n  while (iVar2 = FUN_00406530(param_1,param_2,&DAT_00406f1a,&PTR_s_decode_00407440,0), iVar2 != -1)\n  {\n    if (iVar2 == 100) {\n      bVar1 = true;\n    }\n    else {\n      if (iVar2 < 0x65) {\n        if (iVar2 == -0x83) {\n          FUN_00404db0(stdout,\"base32\",\"GNU coreutils\",PTR_DAT_0060b1f0,\"Simon Josefsson\",0);\n                    /* WARNING: Subroutine does not return */\n          exit(0);\n        }\n        if (iVar2 == -0x82) {\n                    /* WARNING: Subroutine does not return */\n          FUN_004020a0(0);\n        }\n        goto LAB_00401ac3;\n      }\n      if (iVar2 == 0x69) {\n        uVar8 = 1;\n      }\n      else {\n        if (iVar2 != 0x77) goto LAB_00401ac3;\n        dcgettext(0,\"invalid wrap size\",5);\n        uVar9 = FUN_00405250(DAT_0060b440,0,0xffffffffffffffff,\"\");\n      }\n    }\n  }\n  lVar4 = (long)DAT_0060b25c;\n  if (1 < param_1 - DAT_0060b25c) goto LAB_00401a95;\n  if (DAT_0060b25c < param_1) {\n    __s1 = (char *)param_2[lVar4];\n    iVar2 = strcmp(__s1,\"-\");\n    pFVar5 = stdin;\n    if ((iVar2 != 0) && (pFVar5 = fopen(__s1,\"rb\"), pFVar5 == (FILE *)0x0)) {\n      uVar6 = FUN_004047b0(0,3,__s1);\n      piVar7 = __errno_location();\n      error(1,*piVar7,\"%s\",uVar6);\n      goto LAB_004019d2;\n    }\n  }\n  else {\nLAB_004019d2:\n    __s1 = \"-\";\n    pFVar5 = stdin;\n  }\n  FUN_00402ce0(pFVar5,2);\n  if (bVar1) {\n    FUN_00401bb0(pFVar5,stdout,uVar8);\n  }\n  else {\n    FUN_00401dd0(pFVar5,stdout,uVar9);\n  }\n  iVar2 = FUN_004056c0(pFVar5);\n  if (iVar2 != -1) {\n    return 0;\n  }\n  uVar3 = strcmp(__s1,\"-\");\n  param_2 = (undefined8 *)(ulong)uVar3;\n  piVar7 = __errno_location();\n  if (uVar3 == 0) {\n    uVar9 = dcgettext(0,\"closing standard input\",5);\n    error(1,*piVar7,uVar9);\n  }\n  uVar9 = FUN_004047b0(0,3,__s1);\n  lVar4 = error(1,*piVar7,\"%s\",uVar9);\nLAB_00401a95:\n  uVar9 = FUN_00404930(param_2[lVar4]);\n  uVar6 = dcgettext(0,\"extra operand %s\",5);\n  error(0,0,uVar6,uVar9);\nLAB_00401ac3:\n                    /* WARNING: Subroutine does not return */\n  FUN_004020a0(1);\n}\n\n",
            "funcName": "FUN_00401830"
        },
        {
            "funcStartAddr": "0x401ad0",
            "funcEndAddr": "0x401afb",
            "decompiledFuncCode": "\nvoid FUN_00401ad0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_0060aff0)\n            (FUN_00401830,unaff_retaddr,&stack0x00000008,FUN_00406d70,FUN_00406dd0,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "funcName": "FUN_00401ad0"
        },
        {
            "funcStartAddr": "0x401afb",
            "funcEndAddr": "0x401b1a",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00401b08) */\n/* WARNING: Removing unreachable block (ram,0x00401b12) */\n\nvoid FUN_00401afb(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00401afb"
        },
        {
            "funcStartAddr": "0x401b1a",
            "funcEndAddr": "0x401b51",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00401b49) */\n\nvoid FUN_00401b1a(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00401b1a"
        },
        {
            "funcStartAddr": "0x401b51",
            "funcEndAddr": "0x401ba8",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00401b86) */\n\nvoid FUN_00401b51(void)\n\n{\n  if (DAT_0060b288 != '\\0') {\n    return;\n  }\n  FUN_00401afb();\n  DAT_0060b288 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00401b51"
        },
        {
            "funcStartAddr": "0x401ba8",
            "funcEndAddr": "0x401bad",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00401b49) */\n\nvoid thunk_FUN_00401b1a(void)\n\n{\n  return;\n}\n\n",
            "funcName": "thunk_401ba8"
        },
        {
            "funcStartAddr": "0x401bb0",
            "funcEndAddr": "0x401dc5",
            "decompiledFuncCode": "\nvoid FUN_00401bb0(FILE *param_1,FILE *param_2,char param_3)\n\n{\n  ulong __n;\n  char cVar1;\n  char cVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  size_t sVar6;\n  int *piVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  char *pcVar10;\n  byte **ppbVar11;\n  char *pcVar13;\n  long lVar14;\n  long extraout_RDX;\n  uint uVar15;\n  _IO_FILE *p_Var16;\n  byte *pbVar17;\n  FILE *pFVar18;\n  byte *pbVar19;\n  ulong __n_00;\n  ulong uVar20;\n  ulong unaff_R13;\n  long unaff_R14;\n  ulong unaff_R15;\n  ulong uVar21;\n  bool bVar22;\n  bool bVar23;\n  byte bVar24;\n  byte *pbStack_16d48;\n  char *pcStack_16d40;\n  byte *apbStack_16d38 [5];\n  char *pcStack_16d10;\n  char *pcStack_16d08;\n  char *pcStack_16d00;\n  char *pcStack_16cf8;\n  char *pcStack_16cf0;\n  undefined8 uStack_16ce8;\n  undefined8 uStack_16ce0;\n  undefined8 uStack_16cd8;\n  long lStack_16cd0;\n  undefined8 uStack_16cc8;\n  long lStack_16cb8;\n  ulong uStack_16cb0;\n  ulong uStack_16ca8;\n  undefined auStack_16ca0 [30720];\n  undefined auStack_f4a0 [49160];\n  ulong uStack_3498;\n  ulong uStack_3490;\n  FILE *pFStack_3488;\n  ulong uStack_3480;\n  long lStack_3478;\n  ulong uStack_3470;\n  FILE *local_3468;\n  char local_3459;\n  size_t local_3450;\n  int local_3444 [3];\n  undefined local_3438 [5120];\n  char local_2038 [8200];\n  byte **ppbVar12;\n  \n  bVar24 = 0;\n  uStack_3470 = 0x401bd6;\n  local_3468 = param_2;\n  local_3459 = param_3;\n  FUN_004028f0(local_3444);\nLAB_00401be0:\n  uStack_3490 = 0;\nLAB_00401c11:\n  uStack_3470 = 0x401c32;\n  sVar6 = fread_unlocked(local_2038 + uStack_3490,1,0x2000 - uStack_3490,param_1);\n  local_3450 = sVar6;\n  if (local_3459 == '\\0') goto LAB_00401be8;\n  unaff_R15 = 0;\n  do {\n    if (sVar6 == 0) {\nLAB_00401be8:\n      uVar3 = param_1->_flags;\n      uStack_3490 = uStack_3490 + sVar6;\n    }\n    else {\n      do {\n        if (sVar6 <= unaff_R15) goto LAB_00401be8;\n        unaff_R14 = uStack_3490 + unaff_R15;\n        cVar1 = local_2038[unaff_R14];\n        unaff_R13 = (ulong)(uint)(int)cVar1;\n        uStack_3470 = 0x401c64;\n        cVar2 = FUN_004028d0();\n        if ((cVar1 != '=') && (cVar2 == '\\0')) goto LAB_00401cb0;\n        unaff_R15 = unaff_R15 + 1;\n      } while (sVar6 != 0);\n      uVar3 = param_1->_flags;\n    }\n    if ((uVar3 & 0x20) == 0) break;\n    uStack_3470 = 0x401c97;\n    sVar6 = dcgettext(0,\"read error\",5);\n    uStack_3470 = 0x401c9f;\n    piVar7 = __errno_location();\n    uStack_3470 = 0x401cb0;\n    error(1,*piVar7,sVar6);\nLAB_00401cb0:\n    sVar6 = sVar6 - 1;\n    uStack_3470 = 0x401cd8;\n    local_3450 = sVar6;\n    memmove(local_2038 + unaff_R14,local_2038 + unaff_R14 + 1,sVar6 - unaff_R15);\n  } while( true );\n  if ((0x1fff < uStack_3490) || ((uVar3 & 0x10) != 0)) goto LAB_00401ce0;\n  goto LAB_00401c11;\nLAB_00401ce0:\n  uStack_3498 = 0;\n  do {\n    uVar15 = (uint)uStack_3498;\n    uVar21 = uStack_3490;\n    if ((uVar3 & 0x10) == 0) {\n      if (uVar15 != 0) goto LAB_00401be0;\n    }\n    else {\n      if (1 < uVar15) {\n        return;\n      }\n      if (uVar15 == 1) {\n        if (local_3444[0] == 0) {\n          return;\n        }\n        uVar21 = 0;\n      }\n    }\n    local_3450 = 0x1400;\n    uStack_3470 = 0x401d18;\n    uVar3 = FUN_00402900(local_3444,local_2038,uVar21,local_3438,&local_3450);\n    unaff_R15 = (ulong)uVar3;\n    uStack_3470 = 0x401d33;\n    sVar6 = fwrite_unlocked(local_3438,1,local_3450,local_3468);\n    if (sVar6 < local_3450) {\n      uStack_3470 = 0x401d89;\n      uStack_3498 = dcgettext(0,\"write error\",5);\n      uStack_3470 = 0x401d91;\n      piVar7 = __errno_location();\n      uStack_3470 = 0x401da2;\n      error(1,*piVar7,uStack_3498);\nLAB_00401da2:\n      uStack_3470 = 0x401db3;\n      uVar8 = dcgettext(0,\"invalid input\",5);\n      p_Var16 = (_IO_FILE *)0x0;\n      pFVar18 = (FILE *)0x1;\n      uStack_3470 = 0x401dc4;\n      error(1,0,uVar8);\n      lStack_16cd0 = 0;\n      lStack_16cb8 = extraout_RDX;\n      pFStack_3488 = param_1;\n      uStack_3480 = unaff_R13;\n      lStack_3478 = unaff_R14;\n      uStack_3470 = unaff_R15;\n      break;\n    }\n    if ((char)uVar3 == '\\0') goto LAB_00401da2;\n    uVar3 = param_1->_flags;\n    uStack_3498 = (ulong)(uVar15 + 1);\n  } while( true );\n  do {\n    uVar21 = 0;\n    do {\n      uStack_16cc8 = 0x401e25;\n      sVar6 = fread_unlocked(auStack_16ca0 + uVar21,1,0x7800 - uVar21,pFVar18);\n      uVar21 = uVar21 + sVar6;\n      uVar3 = pFVar18->_flags;\n      if ((uVar3 & 0x30) != 0) {\n        if (uVar21 == 0) goto LAB_00401e33;\n        break;\n      }\n    } while (uVar21 < 0x7800);\n    __n = ((uVar21 + 4) / 5) * 8;\n    uStack_16cc8 = 0x401e95;\n    FUN_004025d0(auStack_16ca0,uVar21,auStack_f4a0,__n);\n    if (lStack_16cb8 == 0) {\n      uStack_16cc8 = 0x401eb9;\n      sVar6 = fwrite_unlocked(auStack_f4a0,1,__n,stdout);\n      if (sVar6 <= __n && __n - sVar6 != 0) goto LAB_00402043;\n    }\n    else {\n      uVar20 = 0;\n      if (__n != 0) {\n        do {\n          __n_00 = lStack_16cb8 - lStack_16cd0;\n          if (__n - uVar20 < (ulong)(lStack_16cb8 - lStack_16cd0)) {\n            __n_00 = __n - uVar20;\n          }\n          if (__n_00 == 0) {\n            pcVar10 = p_Var16->_IO_write_ptr;\n            if (pcVar10 < p_Var16->_IO_write_end) {\n              lStack_16cd0 = 0;\n              p_Var16->_IO_write_ptr = pcVar10 + 1;\n              *pcVar10 = '\\n';\n            }\n            else {\n              uStack_16cc8 = 0x401f82;\n              uStack_16cb0 = uVar20;\n              iVar4 = __overflow(p_Var16,10);\n              if (iVar4 == -1) goto LAB_00402019;\n              lStack_16cd0 = 0;\n              uVar20 = uStack_16cb0;\n            }\n          }\n          else {\n            uStack_16cc8 = 0x401f50;\n            uStack_16cb0 = __n_00;\n            uStack_16ca8 = uVar20;\n            sVar6 = fwrite_unlocked(auStack_f4a0 + uVar20,1,__n_00,stdout);\n            if (sVar6 < uStack_16cb0) goto LAB_00401fef;\n            lStack_16cd0 = lStack_16cd0 + uStack_16cb0;\n            uVar20 = uStack_16ca8 + uStack_16cb0;\n          }\n        } while (uVar20 <= __n && __n - uVar20 != 0);\n      }\n    }\n    uVar3 = pFVar18->_flags;\n  } while (((uVar3 & 0x30) == 0) && (uVar21 == 0x7800));\nLAB_00401e33:\n  if ((lStack_16cb8 == 0) || (lStack_16cd0 == 0)) {\nLAB_00401e44:\n    if ((uVar3 & 0x20) == 0) {\n      return;\n    }\n  }\n  else {\n    pcVar10 = p_Var16->_IO_write_ptr;\n    if (pcVar10 < p_Var16->_IO_write_end) {\n      p_Var16->_IO_write_ptr = pcVar10 + 1;\n      *pcVar10 = '\\n';\nLAB_00401fac:\n      uVar3 = pFVar18->_flags;\n      goto LAB_00401e44;\n    }\n    uStack_16cc8 = 0x401fc0;\n    iVar4 = __overflow(p_Var16,10);\n    if (iVar4 != -1) goto LAB_00401fac;\n    uStack_16cc8 = 0x401fd6;\n    uVar8 = dcgettext(0,\"write error\",5);\n    uStack_16cc8 = 0x401fde;\n    piVar7 = __errno_location();\n    uStack_16cc8 = 0x401fef;\n    error(1,*piVar7,uVar8);\nLAB_00401fef:\n    uStack_16cc8 = 0x402000;\n    uVar8 = dcgettext(0,\"write error\",5);\n    uStack_16cc8 = 0x402008;\n    piVar7 = __errno_location();\n    uStack_16cc8 = 0x402019;\n    error(1,*piVar7,uVar8);\nLAB_00402019:\n    uStack_16cc8 = 0x40202a;\n    uVar8 = dcgettext(0,\"write error\",5);\n    uStack_16cc8 = 0x402032;\n    piVar7 = __errno_location();\n    uStack_16cc8 = 0x402043;\n    error(1,*piVar7,uVar8);\nLAB_00402043:\n    uStack_16cc8 = 0x402054;\n    uVar8 = dcgettext(0,\"write error\",5);\n    uStack_16cc8 = 0x40205c;\n    piVar7 = __errno_location();\n    uStack_16cc8 = 0x40206d;\n    error(1,*piVar7,uVar8);\n  }\n  uStack_16cc8 = 0x40207e;\n  uStack_16cd8 = dcgettext(0,\"read error\",5);\n  uStack_16cc8 = 0x402086;\n  piVar7 = __errno_location();\n  iVar4 = 1;\n  uStack_16cc8 = 0x402097;\n  error(1,*piVar7,uStack_16cd8);\n  uVar8 = DAT_0060b2a8;\n  uStack_16cc8 = 0x7800;\n  if (iVar4 != 0) {\n    uVar9 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar9,uVar8);\n    goto LAB_004020df;\n  }\n  uVar9 = dcgettext(0,\n                    \"Usage: %s [OPTION]... [FILE]\\nBase%d encode or decode FILE, or standard input, to standard output.\\n\"\n                    ,5);\n  __printf_chk(1,uVar9,uVar8,0x20);\n  pFVar18 = stdout;\n  pcVar10 = (char *)dcgettext(0,\"\\nWith no FILE, or when FILE is -, read standard input.\\n\",5);\n  fputs_unlocked(pcVar10,pFVar18);\n  pFVar18 = stdout;\n  pcVar10 = (char *)dcgettext(0,\n                              \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                              ,5);\n  fputs_unlocked(pcVar10,pFVar18);\n  pFVar18 = stdout;\n  pcVar10 = (char *)dcgettext(0,\n                              \"  -d, --decode          decode data\\n  -i, --ignore-garbage  when decoding, ignore non-alphabet characters\\n  -w, --wrap=COLS       wrap encoded lines after COLS character (default 76).\\n                          Use 0 to disable line wrapping\\n\\n\"\n                              ,5);\n  fputs_unlocked(pcVar10,pFVar18);\n  pFVar18 = stdout;\n  pcVar10 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n  fputs_unlocked(pcVar10,pFVar18);\n  pFVar18 = stdout;\n  pcVar10 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n  fputs_unlocked(pcVar10,pFVar18);\n  uVar8 = dcgettext(0,\n                    \"\\nThe data are encoded as described for the %s alphabet in RFC 4648.\\nWhen decoding, the input may contain newlines in addition to the bytes of\\nthe formal %s alphabet.  Use --ignore-garbage to attempt to recover\\nfrom any other non-alphabet bytes in the encoded stream.\\n\"\n                    ,5);\n  __printf_chk(1,uVar8,\"base32\");\n  pbStack_16d48 = &DAT_00406e70;\n  pcStack_16d40 = \"test invocation\";\n  apbStack_16d38[0] = (byte *)0x406eea;\n  apbStack_16d38[1] = (byte *)0x406e82;\n  apbStack_16d38[2] = (byte *)0x406e98;\n  apbStack_16d38[3] = (byte *)0x406ea2;\n  apbStack_16d38[4] = (byte *)0x406eb1;\n  pcStack_16d10 = \"sha2 utilities\";\n  pcStack_16d08 = \"sha384sum\";\n  pcStack_16d00 = \"sha2 utilities\";\n  pcStack_16cf8 = \"sha512sum\";\n  pcStack_16cf0 = \"sha2 utilities\";\n  uStack_16ce8 = 0;\n  uStack_16ce0 = 0;\n  ppbVar11 = &pbStack_16d48;\n  do {\n    ppbVar12 = ppbVar11;\n    ppbVar11 = ppbVar12 + 2;\n    pbVar19 = *ppbVar11;\n    bVar22 = false;\n    bVar23 = pbVar19 == (byte *)0x0;\n    if (bVar23) break;\n    lVar14 = 7;\n    pbVar17 = (byte *)\"base32\";\n    do {\n      if (lVar14 == 0) break;\n      lVar14 = lVar14 + -1;\n      bVar22 = *pbVar17 < *pbVar19;\n      bVar23 = *pbVar17 == *pbVar19;\n      pbVar17 = pbVar17 + (ulong)bVar24 * -2 + 1;\n      pbVar19 = pbVar19 + (ulong)bVar24 * -2 + 1;\n    } while (bVar23);\n  } while ((!bVar22 && !bVar23) != bVar22);\n  pcVar10 = (char *)ppbVar12[3];\n  if ((byte *)pcVar10 == (byte *)0x0) {\n    uVar8 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar8,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar10 = setlocale(5,(char *)0x0);\n    if ((pcVar10 != (char *)0x0) && (iVar5 = strncmp(pcVar10,\"en_\",3), iVar5 != 0)) {\n      pcVar10 = \"base32\";\n      goto LAB_004023d3;\n    }\n    pcVar10 = \"base32\";\n    uVar8 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar13 = \" invocation\";\n    __printf_chk(1,uVar8,\"https://www.gnu.org/software/coreutils/\",\"base32\");\n  }\n  else {\n    uVar8 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar8,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar13 = setlocale(5,(char *)0x0);\n    if ((pcVar13 != (char *)0x0) && (iVar5 = strncmp(pcVar13,\"en_\",3), iVar5 != 0)) {\nLAB_004023d3:\n      uVar8 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\",5\n                       );\n      __printf_chk(1,uVar8,\"base32\");\n    }\n    pcVar13 = \" invocation\";\n    uVar8 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar8,\"https://www.gnu.org/software/coreutils/\",\"base32\");\n    if (pcVar10 != \"base32\") {\n      pcVar13 = \"\";\n    }\n  }\n  uVar8 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  __printf_chk(1,uVar8,pcVar10,pcVar13);\nLAB_004020df:\n                    /* WARNING: Subroutine does not return */\n  exit(iVar4);\n}\n\n",
            "funcName": "FUN_00401bb0"
        },
        {
            "funcStartAddr": "0x401dd0",
            "funcEndAddr": "0x40208e",
            "decompiledFuncCode": "\nvoid FUN_00401dd0(FILE *param_1,_IO_FILE *param_2,long param_3)\n\n{\n  ulong __n;\n  FILE *pFVar1;\n  uint uVar2;\n  int iVar3;\n  int iVar4;\n  size_t sVar5;\n  int *piVar6;\n  undefined8 uVar7;\n  char *pcVar8;\n  undefined8 uVar9;\n  byte **ppbVar10;\n  char *pcVar12;\n  long lVar13;\n  byte *pbVar14;\n  byte *pbVar15;\n  ulong __n_00;\n  ulong uVar16;\n  ulong uVar17;\n  bool bVar18;\n  bool bVar19;\n  byte bVar20;\n  byte *pbStack_138e0;\n  char *pcStack_138d8;\n  byte *apbStack_138d0 [5];\n  char *pcStack_138a8;\n  char *pcStack_138a0;\n  char *pcStack_13898;\n  char *pcStack_13890;\n  char *pcStack_13888;\n  undefined8 uStack_13880;\n  undefined8 uStack_13878;\n  undefined8 uStack_13870;\n  long lStack_13868;\n  undefined8 uStack_13860;\n  long lStack_13850;\n  ulong uStack_13848;\n  ulong uStack_13840;\n  undefined auStack_13838 [30720];\n  undefined local_c038 [49160];\n  byte **ppbVar11;\n  \n  bVar20 = 0;\n  lStack_13868 = 0;\n  lStack_13850 = param_3;\n  do {\n    uVar17 = 0;\n    do {\n      uStack_13860 = 0x401e25;\n      sVar5 = fread_unlocked(auStack_13838 + uVar17,1,0x7800 - uVar17,param_1);\n      uVar17 = uVar17 + sVar5;\n      uVar2 = param_1->_flags;\n      if ((uVar2 & 0x30) != 0) {\n        if (uVar17 == 0) goto LAB_00401e33;\n        break;\n      }\n    } while (uVar17 < 0x7800);\n    __n = ((uVar17 + 4) / 5) * 8;\n    uStack_13860 = 0x401e95;\n    FUN_004025d0(auStack_13838,uVar17,local_c038,__n);\n    if (lStack_13850 == 0) {\n      uStack_13860 = 0x401eb9;\n      sVar5 = fwrite_unlocked(local_c038,1,__n,stdout);\n      if (sVar5 <= __n && __n - sVar5 != 0) goto LAB_00402043;\n    }\n    else {\n      uVar16 = 0;\n      if (__n != 0) {\n        do {\n          __n_00 = lStack_13850 - lStack_13868;\n          if (__n - uVar16 < (ulong)(lStack_13850 - lStack_13868)) {\n            __n_00 = __n - uVar16;\n          }\n          if (__n_00 == 0) {\n            pcVar8 = param_2->_IO_write_ptr;\n            if (pcVar8 < param_2->_IO_write_end) {\n              lStack_13868 = 0;\n              param_2->_IO_write_ptr = pcVar8 + 1;\n              *pcVar8 = '\\n';\n            }\n            else {\n              uStack_13860 = 0x401f82;\n              uStack_13848 = uVar16;\n              iVar3 = __overflow(param_2,10);\n              if (iVar3 == -1) goto LAB_00402019;\n              lStack_13868 = 0;\n              uVar16 = uStack_13848;\n            }\n          }\n          else {\n            uStack_13860 = 0x401f50;\n            uStack_13848 = __n_00;\n            uStack_13840 = uVar16;\n            sVar5 = fwrite_unlocked(local_c038 + uVar16,1,__n_00,stdout);\n            if (sVar5 < uStack_13848) goto LAB_00401fef;\n            lStack_13868 = lStack_13868 + uStack_13848;\n            uVar16 = uStack_13840 + uStack_13848;\n          }\n        } while (uVar16 <= __n && __n - uVar16 != 0);\n      }\n    }\n    uVar2 = param_1->_flags;\n  } while (((uVar2 & 0x30) == 0) && (uVar17 == 0x7800));\nLAB_00401e33:\n  if ((lStack_13850 == 0) || (lStack_13868 == 0)) {\nLAB_00401e44:\n    if ((uVar2 & 0x20) == 0) {\n      return;\n    }\n  }\n  else {\n    pcVar8 = param_2->_IO_write_ptr;\n    if (pcVar8 < param_2->_IO_write_end) {\n      param_2->_IO_write_ptr = pcVar8 + 1;\n      *pcVar8 = '\\n';\nLAB_00401fac:\n      uVar2 = param_1->_flags;\n      goto LAB_00401e44;\n    }\n    uStack_13860 = 0x401fc0;\n    iVar3 = __overflow(param_2,10);\n    if (iVar3 != -1) goto LAB_00401fac;\n    uStack_13860 = 0x401fd6;\n    uVar9 = dcgettext(0,\"write error\",5);\n    uStack_13860 = 0x401fde;\n    piVar6 = __errno_location();\n    uStack_13860 = 0x401fef;\n    error(1,*piVar6,uVar9);\nLAB_00401fef:\n    uStack_13860 = 0x402000;\n    uVar9 = dcgettext(0,\"write error\",5);\n    uStack_13860 = 0x402008;\n    piVar6 = __errno_location();\n    uStack_13860 = 0x402019;\n    error(1,*piVar6,uVar9);\nLAB_00402019:\n    uStack_13860 = 0x40202a;\n    uVar9 = dcgettext(0,\"write error\",5);\n    uStack_13860 = 0x402032;\n    piVar6 = __errno_location();\n    uStack_13860 = 0x402043;\n    error(1,*piVar6,uVar9);\nLAB_00402043:\n    uStack_13860 = 0x402054;\n    uVar9 = dcgettext(0,\"write error\",5);\n    uStack_13860 = 0x40205c;\n    piVar6 = __errno_location();\n    uStack_13860 = 0x40206d;\n    error(1,*piVar6,uVar9);\n  }\n  uStack_13860 = 0x40207e;\n  uStack_13870 = dcgettext(0,\"read error\",5);\n  uStack_13860 = 0x402086;\n  piVar6 = __errno_location();\n  iVar3 = 1;\n  uStack_13860 = 0x402097;\n  error(1,*piVar6,uStack_13870);\n  uVar9 = DAT_0060b2a8;\n  uStack_13860 = 0x7800;\n  if (iVar3 != 0) {\n    uVar7 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar7,uVar9);\n    goto LAB_004020df;\n  }\n  uVar7 = dcgettext(0,\n                    \"Usage: %s [OPTION]... [FILE]\\nBase%d encode or decode FILE, or standard input, to standard output.\\n\"\n                    ,5);\n  __printf_chk(1,uVar7,uVar9,0x20);\n  pFVar1 = stdout;\n  pcVar8 = (char *)dcgettext(0,\"\\nWith no FILE, or when FILE is -, read standard input.\\n\",5);\n  fputs_unlocked(pcVar8,pFVar1);\n  pFVar1 = stdout;\n  pcVar8 = (char *)dcgettext(0,\n                             \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar8,pFVar1);\n  pFVar1 = stdout;\n  pcVar8 = (char *)dcgettext(0,\n                             \"  -d, --decode          decode data\\n  -i, --ignore-garbage  when decoding, ignore non-alphabet characters\\n  -w, --wrap=COLS       wrap encoded lines after COLS character (default 76).\\n                          Use 0 to disable line wrapping\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar8,pFVar1);\n  pFVar1 = stdout;\n  pcVar8 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n  fputs_unlocked(pcVar8,pFVar1);\n  pFVar1 = stdout;\n  pcVar8 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n  fputs_unlocked(pcVar8,pFVar1);\n  uVar9 = dcgettext(0,\n                    \"\\nThe data are encoded as described for the %s alphabet in RFC 4648.\\nWhen decoding, the input may contain newlines in addition to the bytes of\\nthe formal %s alphabet.  Use --ignore-garbage to attempt to recover\\nfrom any other non-alphabet bytes in the encoded stream.\\n\"\n                    ,5);\n  __printf_chk(1,uVar9,\"base32\");\n  pbStack_138e0 = &DAT_00406e70;\n  pcStack_138d8 = \"test invocation\";\n  apbStack_138d0[0] = (byte *)0x406eea;\n  apbStack_138d0[1] = (byte *)0x406e82;\n  apbStack_138d0[2] = (byte *)0x406e98;\n  apbStack_138d0[3] = (byte *)0x406ea2;\n  apbStack_138d0[4] = (byte *)0x406eb1;\n  pcStack_138a8 = \"sha2 utilities\";\n  pcStack_138a0 = \"sha384sum\";\n  pcStack_13898 = \"sha2 utilities\";\n  pcStack_13890 = \"sha512sum\";\n  pcStack_13888 = \"sha2 utilities\";\n  uStack_13880 = 0;\n  uStack_13878 = 0;\n  ppbVar10 = &pbStack_138e0;\n  do {\n    ppbVar11 = ppbVar10;\n    ppbVar10 = ppbVar11 + 2;\n    pbVar15 = *ppbVar10;\n    bVar18 = false;\n    bVar19 = pbVar15 == (byte *)0x0;\n    if (bVar19) break;\n    lVar13 = 7;\n    pbVar14 = (byte *)\"base32\";\n    do {\n      if (lVar13 == 0) break;\n      lVar13 = lVar13 + -1;\n      bVar18 = *pbVar14 < *pbVar15;\n      bVar19 = *pbVar14 == *pbVar15;\n      pbVar14 = pbVar14 + (ulong)bVar20 * -2 + 1;\n      pbVar15 = pbVar15 + (ulong)bVar20 * -2 + 1;\n    } while (bVar19);\n  } while ((!bVar18 && !bVar19) != bVar18);\n  pcVar8 = (char *)ppbVar11[3];\n  if ((byte *)pcVar8 == (byte *)0x0) {\n    uVar9 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar9,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar8 = setlocale(5,(char *)0x0);\n    if ((pcVar8 != (char *)0x0) && (iVar4 = strncmp(pcVar8,\"en_\",3), iVar4 != 0)) {\n      pcVar8 = \"base32\";\n      goto LAB_004023d3;\n    }\n    pcVar8 = \"base32\";\n    uVar9 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar12 = \" invocation\";\n    __printf_chk(1,uVar9,\"https://www.gnu.org/software/coreutils/\",\"base32\");\n  }\n  else {\n    uVar9 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar9,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar12 = setlocale(5,(char *)0x0);\n    if ((pcVar12 != (char *)0x0) && (iVar4 = strncmp(pcVar12,\"en_\",3), iVar4 != 0)) {\nLAB_004023d3:\n      uVar9 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\",5\n                       );\n      __printf_chk(1,uVar9,\"base32\");\n    }\n    pcVar12 = \" invocation\";\n    uVar9 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar9,\"https://www.gnu.org/software/coreutils/\",\"base32\");\n    if (pcVar8 != \"base32\") {\n      pcVar12 = \"\";\n    }\n  }\n  uVar9 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  __printf_chk(1,uVar9,pcVar8,pcVar12);\nLAB_004020df:\n                    /* WARNING: Subroutine does not return */\n  exit(iVar3);\n}\n\n",
            "funcName": "FUN_00401dd0"
        },
        {
            "funcStartAddr": "0x4020a0",
            "funcEndAddr": "0x4023fd",
            "decompiledFuncCode": "\nvoid FUN_004020a0(int param_1)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  byte **ppbVar6;\n  char *pcVar8;\n  long lVar9;\n  byte *pbVar10;\n  byte *pbVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  byte *local_88;\n  char *local_80;\n  byte *local_78 [5];\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  char *local_38;\n  char *local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  byte **ppbVar7;\n  \n  uVar5 = DAT_0060b2a8;\n  bVar14 = 0;\n  if (param_1 != 0) {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar5);\n    goto LAB_004020df;\n  }\n  uVar3 = dcgettext(0,\n                    \"Usage: %s [OPTION]... [FILE]\\nBase%d encode or decode FILE, or standard input, to standard output.\\n\"\n                    ,5);\n  __printf_chk(1,uVar3,uVar5,0x20);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"\\nWith no FILE, or when FILE is -, read standard input.\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -d, --decode          decode data\\n  -i, --ignore-garbage  when decoding, ignore non-alphabet characters\\n  -w, --wrap=COLS       wrap encoded lines after COLS character (default 76).\\n                          Use 0 to disable line wrapping\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  uVar5 = dcgettext(0,\n                    \"\\nThe data are encoded as described for the %s alphabet in RFC 4648.\\nWhen decoding, the input may contain newlines in addition to the bytes of\\nthe formal %s alphabet.  Use --ignore-garbage to attempt to recover\\nfrom any other non-alphabet bytes in the encoded stream.\\n\"\n                    ,5);\n  __printf_chk(1,uVar5,\"base32\");\n  local_88 = &DAT_00406e70;\n  local_80 = \"test invocation\";\n  local_78[0] = (byte *)0x406eea;\n  local_78[1] = (byte *)0x406e82;\n  local_78[2] = (byte *)0x406e98;\n  local_78[3] = (byte *)0x406ea2;\n  local_78[4] = (byte *)0x406eb1;\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha384sum\";\n  local_40 = \"sha2 utilities\";\n  local_38 = \"sha512sum\";\n  local_30 = \"sha2 utilities\";\n  local_28 = 0;\n  local_20 = 0;\n  ppbVar6 = &local_88;\n  do {\n    ppbVar7 = ppbVar6;\n    ppbVar6 = ppbVar7 + 2;\n    pbVar11 = *ppbVar6;\n    bVar12 = false;\n    bVar13 = pbVar11 == (byte *)0x0;\n    if (bVar13) break;\n    lVar9 = 7;\n    pbVar10 = (byte *)\"base32\";\n    do {\n      if (lVar9 == 0) break;\n      lVar9 = lVar9 + -1;\n      bVar12 = *pbVar10 < *pbVar11;\n      bVar13 = *pbVar10 == *pbVar11;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n      pbVar11 = pbVar11 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n  } while ((!bVar12 && !bVar13) != bVar12);\n  pcVar4 = (char *)ppbVar7[3];\n  if ((byte *)pcVar4 == (byte *)0x0) {\n    uVar5 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar5,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\n        pcVar4 = \"base32\";\n        goto LAB_004023d3;\n      }\n    }\n    pcVar4 = \"base32\";\n    uVar5 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar8 = \" invocation\";\n    __printf_chk(1,uVar5,\"https://www.gnu.org/software/coreutils/\",\"base32\");\n  }\n  else {\n    uVar5 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar5,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar8 = setlocale(5,(char *)0x0);\n    if (pcVar8 != (char *)0x0) {\n      iVar2 = strncmp(pcVar8,\"en_\",3);\n      if (iVar2 != 0) {\nLAB_004023d3:\n        uVar5 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar5,\"base32\");\n      }\n    }\n    pcVar8 = \" invocation\";\n    uVar5 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar5,\"https://www.gnu.org/software/coreutils/\",\"base32\");\n    if (pcVar4 != \"base32\") {\n      pcVar8 = \"\";\n    }\n  }\n  uVar5 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  __printf_chk(1,uVar5,pcVar4,pcVar8);\nLAB_004020df:\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n",
            "funcName": "FUN_004020a0"
        },
        {
            "funcStartAddr": "0x402400",
            "funcEndAddr": "0x4025ad",
            "decompiledFuncCode": "\nundefined8 FUN_00402400(byte *param_1,ulong param_2,byte **param_3,long *param_4)\n\n{\n  char cVar1;\n  char cVar2;\n  byte *pbVar3;\n  byte *pbVar4;\n  \n  if (param_2 < 8) {\n    return 0;\n  }\n  if ((char)(&DAT_00407540)[*param_1] < '\\0') {\n    return 0;\n  }\n  cVar1 = (&DAT_00407540)[param_1[1]];\n  if (cVar1 < '\\0') {\n    return 0;\n  }\n  pbVar3 = *param_3;\n  pbVar4 = pbVar3;\n  if (*param_4 != 0) {\n    pbVar4 = pbVar3 + 1;\n    *pbVar3 = (&DAT_00407540)[*param_1] << 3 | cVar1 >> 2;\n    *param_4 = *param_4 + -1;\n  }\n  if (param_1[2] == 0x3d) {\n    if ((param_1[3] != 0x3d) || (param_1[4] != 0x3d)) goto LAB_0040257c;\nLAB_004025b0:\n    if (param_1[5] != 0x3d) goto LAB_0040257c;\n  }\n  else {\n    if (((char)(&DAT_00407540)[param_1[2]] < '\\0') ||\n       (cVar2 = (&DAT_00407540)[param_1[3]], cVar2 < '\\0')) goto LAB_0040257c;\n    pbVar3 = pbVar4;\n    if (*param_4 != 0) {\n      pbVar3 = pbVar4 + 1;\n      *pbVar4 = cVar1 << 6 | (&DAT_00407540)[param_1[2]] * '\\x02' | cVar2 >> 4;\n      *param_4 = *param_4 + -1;\n    }\n    pbVar4 = pbVar3;\n    if (param_1[4] == 0x3d) goto LAB_004025b0;\n    cVar1 = (&DAT_00407540)[param_1[4]];\n    if (cVar1 < '\\0') goto LAB_0040257c;\n    if (*param_4 != 0) {\n      pbVar4 = pbVar3 + 1;\n      *pbVar3 = cVar2 << 4 | cVar1 >> 1;\n      *param_4 = *param_4 + -1;\n    }\n    if (param_1[5] != 0x3d) {\n      if (((char)(&DAT_00407540)[param_1[5]] < '\\0') ||\n         (cVar2 = (&DAT_00407540)[param_1[6]], cVar2 < '\\0')) goto LAB_0040257c;\n      pbVar3 = pbVar4;\n      if (*param_4 != 0) {\n        pbVar3 = pbVar4 + 1;\n        *pbVar4 = cVar1 << 7 | (&DAT_00407540)[param_1[5]] << 2 | cVar2 >> 3;\n        *param_4 = *param_4 + -1;\n      }\n      pbVar4 = pbVar3;\n      if (param_1[7] != 0x3d) {\n        if ((char)(&DAT_00407540)[param_1[7]] < '\\0') goto LAB_0040257c;\n        if (*param_4 != 0) {\n          pbVar4 = pbVar3 + 1;\n          *pbVar3 = cVar2 << 5 | (&DAT_00407540)[param_1[7]];\n          *param_4 = *param_4 + -1;\n        }\n      }\n      goto LAB_00402560;\n    }\n  }\n  if ((param_1[6] == 0x3d) && (param_1[7] == 0x3d)) {\nLAB_00402560:\n    *param_3 = pbVar4;\n    return 1;\n  }\nLAB_0040257c:\n  *param_3 = pbVar4;\n  return 0;\n}\n\n",
            "funcName": "FUN_00402400"
        },
        {
            "funcStartAddr": "0x4025d0",
            "funcEndAddr": "0x402815",
            "decompiledFuncCode": "\nvoid FUN_004025d0(byte *param_1,long param_2,undefined *param_3,long param_4)\n\n{\n  byte bVar1;\n  byte bVar2;\n  uint uVar3;\n  long lVar4;\n  undefined *puVar5;\n  undefined *puVar6;\n  \n  if ((param_2 == 0) || (lVar4 = param_4, puVar5 = param_3, param_4 == 0)) {\n    if (param_4 != 0) {\n      *param_3 = 0;\n    }\n    return;\n  }\n  do {\n    bVar2 = *param_1;\n    *puVar5 = (&DAT_00407520)[bVar2 >> 3];\n    if (lVar4 == 1) {\n      return;\n    }\n    uVar3 = (uint)bVar2 * 4;\n    if (param_2 == 1) {\n      puVar5[1] = (&DAT_00407520)[uVar3 & 0x1c];\n      if (lVar4 == 2) {\n        return;\n      }\n      puVar5[2] = 0x3d;\n      if (lVar4 == 3) {\n        return;\n      }\n      puVar5[3] = 0x3d;\n      if (lVar4 == 4) {\n        return;\n      }\nLAB_0040278f:\n      puVar5[4] = 0x3d;\n      if (lVar4 == 5) {\n        return;\n      }\nLAB_00402799:\n      puVar5[5] = 0x3d;\n      if (lVar4 == 6) {\n        return;\n      }\n      puVar5[6] = 0x3d;\n      if (lVar4 == 7) {\n        return;\n      }\nLAB_004027ad:\n      puVar5[7] = 0x3d;\n      if (param_3 + param_4 + -8 == puVar5) {\n        return;\n      }\n      param_2 = 0;\n    }\n    else {\n      bVar2 = param_1[1];\n      puVar5[1] = (&DAT_00407520)[uVar3 + (bVar2 >> 6) & 0x1f];\n      if (lVar4 == 2) {\n        return;\n      }\n      puVar5[2] = (&DAT_00407520)[bVar2 >> 1 & 0x1f];\n      if (lVar4 == 3) {\n        return;\n      }\n      if (param_2 == 2) {\n        puVar5[3] = (&DAT_00407520)[(int)((uint)bVar2 * 0x10 & 0x1f)];\n        if (param_3 + (param_4 - (long)puVar5) == (undefined *)0x4) {\n          return;\n        }\n        goto LAB_0040278f;\n      }\n      bVar1 = param_1[2];\n      puVar6 = param_3 + (param_4 - (long)puVar5);\n      puVar5[3] = (&DAT_00407520)[(uint)bVar2 * 0x10 + (uint)(bVar1 >> 4) & 0x1f];\n      if (puVar6 == (undefined *)0x4) {\n        return;\n      }\n      if (param_2 == 3) {\n        puVar5[4] = (&DAT_00407520)[(uint)bVar1 + (uint)bVar1 & 0x1e];\n        if (puVar6 == (undefined *)0x5) {\n          return;\n        }\n        goto LAB_00402799;\n      }\n      bVar2 = param_1[3];\n      puVar5[4] = (&DAT_00407520)[(uint)bVar1 + (uint)bVar1 + (uint)(bVar2 >> 7) & 0x1f];\n      if (puVar6 == (undefined *)0x5) {\n        return;\n      }\n      puVar5[5] = (&DAT_00407520)[bVar2 >> 2 & 0x1f];\n      if (lVar4 == 6) {\n        return;\n      }\n      if (param_2 == 4) {\n        puVar5[6] = (&DAT_00407520)[(uint)bVar2 * 8 & 0x18];\n        if (puVar6 == (undefined *)0x7) {\n          return;\n        }\n        goto LAB_004027ad;\n      }\n      bVar1 = param_1[4];\n      puVar5[6] = (&DAT_00407520)[(uint)bVar2 * 8 + (uint)(bVar1 >> 5) & 0x1f];\n      if (puVar6 == (undefined *)0x7) {\n        return;\n      }\n      puVar5[7] = (&DAT_00407520)[bVar1 & 0x1f];\n      if (param_3 + param_4 + -8 == puVar5) {\n        return;\n      }\n      param_2 = param_2 + -5;\n      if (param_2 != 0) {\n        param_1 = param_1 + 5;\n      }\n    }\n    puVar5 = puVar5 + 8;\n    lVar4 = lVar4 + -8;\n    if ((param_2 == 0) || (lVar4 == 0)) {\n      if (lVar4 == 0) {\n        return;\n      }\n      *puVar5 = 0;\n      return;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_004025d0"
        },
        {
            "funcStartAddr": "0x402830",
            "funcEndAddr": "0x4028bd",
            "decompiledFuncCode": "\nulong FUN_00402830(undefined8 param_1,ulong param_2,void **param_3)\n\n{\n  ulong __size;\n  ulong uVar1;\n  void *pvVar2;\n  \n  uVar1 = ((param_2 + 4) / 5) * 8;\n  __size = uVar1 + 1;\n  if (__size < param_2) {\n    *param_3 = (void *)0x0;\n    return 0;\n  }\n  pvVar2 = malloc(__size);\n  *param_3 = pvVar2;\n  if (pvVar2 != (void *)0x0) {\n    FUN_004025d0(param_1,param_2,pvVar2,__size);\n    return uVar1;\n  }\n  return __size;\n}\n\n",
            "funcName": "FUN_00402830"
        },
        {
            "funcStartAddr": "0x4028d0",
            "funcEndAddr": "0x4028e1",
            "decompiledFuncCode": "\nuint FUN_004028d0(byte param_1)\n\n{\n  return ~(uint)(byte)(&DAT_00407540)[param_1] & 0xffffff00 |\n         ~(uint)(byte)(&DAT_00407540)[param_1] >> 7 & 1;\n}\n\n",
            "funcName": "FUN_004028d0"
        },
        {
            "funcStartAddr": "0x4028f0",
            "funcEndAddr": "0x4028f7",
            "decompiledFuncCode": "\nvoid FUN_004028f0(undefined4 *param_1)\n\n{\n  *param_1 = 0;\n  return;\n}\n\n",
            "funcName": "FUN_004028f0"
        },
        {
            "funcStartAddr": "0x402900",
            "funcEndAddr": "0x402b37",
            "decompiledFuncCode": "\nulong FUN_00402900(uint *param_1,uint *param_2,ulong param_3,long param_4,long *param_5)\n\n{\n  char cVar1;\n  bool bVar2;\n  bool bVar3;\n  ulong in_RAX;\n  long lVar4;\n  uint uVar5;\n  uint *puVar6;\n  long lVar7;\n  bool bVar8;\n  uint *puVar9;\n  long lVar10;\n  bool bVar11;\n  long local_50 [2];\n  long local_40 [2];\n  \n  local_40[0] = *param_5;\n  bVar11 = param_1 == (uint *)0x0;\n  if (bVar11) {\n    bVar8 = true;\n  }\n  else {\n    in_RAX = (ulong)*param_1;\n    bVar8 = *param_1 == 0 && param_3 != 0;\n  }\n  bVar2 = param_3 != 0;\n  lVar4 = local_40[0];\n  local_50[0] = param_4;\n  while( true ) {\n    lVar10 = lVar4;\n    if (bVar8) {\n      lVar7 = (long)param_2 + param_3;\n      while( true ) {\n        param_3 = lVar7 - (long)param_2;\n        in_RAX = FUN_00402400(param_2,param_3,local_50,local_40);\n        lVar4 = local_40[0];\n        if ((char)in_RAX == '\\0') break;\n        param_2 = param_2 + 2;\n        lVar10 = local_40[0];\n      }\n    }\n    bVar3 = param_3 == 0 && (bVar11 || bVar2);\n    in_RAX = in_RAX & 0xffffffffffffff00 | (ulong)bVar3;\n    if (bVar3) goto LAB_00402a4a;\n    puVar6 = param_2;\n    if (param_3 == 0) break;\n    if (*(char *)param_2 == '\\n') {\n      if (param_1 == (uint *)0x0) {\n        puVar9 = (uint *)((long)param_2 + param_3);\n        local_50[0] = local_50[0] + (lVar4 - lVar10);\n        local_40[0] = lVar10;\n        goto LAB_00402a22;\n      }\n      param_2 = (uint *)((long)param_2 + 1);\n      param_3 = param_3 - 1;\n    }\n    else {\n      puVar9 = (uint *)((long)param_2 + param_3);\n      local_50[0] = local_50[0] + (lVar4 - lVar10);\n      local_40[0] = lVar10;\n      if (param_1 != (uint *)0x0) goto LAB_004029cd;\nLAB_00402972:\n      in_RAX = FUN_00402400(puVar6,param_3,local_50,local_40);\n      lVar4 = local_40[0];\n      if ((char)in_RAX == '\\0') goto LAB_00402a4a;\n      param_3 = (long)puVar9 - (long)param_2;\n    }\n  }\n  local_50[0] = local_50[0] + (lVar4 - lVar10);\n  puVar9 = param_2;\n  if (param_1 == (uint *)0x0) {\n    in_RAX = 1;\n    lVar4 = lVar10;\n  }\n  else {\nLAB_004029cd:\n    uVar5 = *param_1;\n    if (uVar5 == 8) {\n      *param_1 = 0;\nLAB_00402aaf:\n      local_40[0] = lVar10;\n      if ((7 < (long)param_3) && (lVar4 = FUN_00406630(param_2,10,8), lVar4 == 0)) {\n        param_3 = 8;\n        param_2 = param_2 + 2;\n        goto LAB_00402972;\n      }\n      uVar5 = *param_1;\n    }\n    else {\n      local_40[0] = lVar10;\n      if (uVar5 == 0) goto LAB_00402aaf;\n    }\n    param_3 = (ulong)uVar5;\n    if (param_2 < puVar9) {\n      do {\n        param_2 = (uint *)((long)puVar6 + 1);\n        cVar1 = *(char *)puVar6;\n        if (cVar1 != '\\n') {\n          uVar5 = (int)param_3 + 1;\n          *param_1 = uVar5;\n          *(char *)((long)param_1 + param_3 + 4) = cVar1;\n          if (uVar5 == 8) {\n            param_3 = 8;\n            break;\n          }\n          param_3 = (ulong)uVar5;\n        }\n        puVar6 = param_2;\n      } while (param_2 != puVar9);\n    }\n    puVar6 = param_1 + 1;\n    if (param_3 != 0) {\nLAB_00402a22:\n      if (((7 < param_3) || (!bVar11 && !bVar2)) || (bVar11)) goto LAB_00402972;\n    }\n    in_RAX = 1;\n    lVar4 = local_40[0];\n  }\nLAB_00402a4a:\n  *param_5 = *param_5 - lVar4;\n  return in_RAX;\n}\n\n",
            "funcName": "FUN_00402900"
        },
        {
            "funcStartAddr": "0x402b60",
            "funcEndAddr": "0x402c05",
            "decompiledFuncCode": "\nulong FUN_00402b60(undefined8 param_1,undefined8 param_2,ulong param_3,void **param_4,\n                  size_t *param_5)\n\n{\n  void *pvVar1;\n  ulong uVar2;\n  size_t local_30;\n  \n  local_30 = (param_3 >> 3) * 5 + 5;\n  pvVar1 = malloc(local_30);\n  *param_4 = pvVar1;\n  if (pvVar1 != (void *)0x0) {\n    uVar2 = FUN_00402900(param_1,param_2,param_3,pvVar1,&local_30);\n    if ((char)uVar2 == '\\0') {\n      free(*param_4);\n      *param_4 = (void *)0x0;\n      return uVar2 & 0xff;\n    }\n    if (param_5 != (size_t *)0x0) {\n      *param_5 = local_30;\n      return uVar2;\n    }\n  }\n  return 1;\n}\n\n",
            "funcName": "FUN_00402b60"
        },
        {
            "funcStartAddr": "0x402c10",
            "funcEndAddr": "0x402c18",
            "decompiledFuncCode": "\nvoid FUN_00402c10(undefined8 param_1)\n\n{\n  DAT_0060b2a0 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00402c10"
        },
        {
            "funcStartAddr": "0x402c20",
            "funcEndAddr": "0x402c28",
            "decompiledFuncCode": "\nvoid FUN_00402c20(undefined param_1)\n\n{\n  DAT_0060b298 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00402c20"
        },
        {
            "funcStartAddr": "0x402c30",
            "funcEndAddr": "0x402cce",
            "decompiledFuncCode": "\nvoid FUN_00402c30(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_00406740(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_0060b298 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_0060b2a0 == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = FUN_00404780();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_00402cae;\n    }\n  }\n  iVar1 = FUN_00406740(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_00402cae:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_0060b1f8);\n}\n\n",
            "funcName": "FUN_00402c30"
        },
        {
            "funcStartAddr": "0x402cd0",
            "funcEndAddr": "0x402cd5",
            "decompiledFuncCode": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint posix_fadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_posix_fadvise_0060b0f0)();\n  return iVar1;\n}\n\n",
            "funcName": "thunk_402cd0"
        },
        {
            "funcStartAddr": "0x402ce0",
            "funcEndAddr": "0x402cfc",
            "decompiledFuncCode": "\nvoid FUN_00402ce0(FILE *param_1,int param_2)\n\n{\n  int __fd;\n  \n  if (param_1 != (FILE *)0x0) {\n    __fd = fileno(param_1);\n    posix_fadvise(__fd,0,0,param_2);\n    return;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00402ce0"
        },
        {
            "funcStartAddr": "0x402d10",
            "funcEndAddr": "0x402da9",
            "decompiledFuncCode": "\nvoid FUN_00402d10(byte *param_1)\n\n{\n  byte *pbVar1;\n  char *pcVar2;\n  long lVar3;\n  ulong uVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  byte bVar10;\n  \n  bVar10 = 0;\n  if (param_1 == (byte *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar2 = strrchr((char *)param_1,0x2f);\n  if (pcVar2 != (char *)0x0) {\n    pbVar1 = (byte *)(pcVar2 + 1);\n    uVar4 = (long)pbVar1 - (long)param_1;\n    bVar7 = uVar4 < 6;\n    bVar9 = uVar4 == 6;\n    if (6 < (long)uVar4) {\n      lVar3 = 7;\n      pbVar5 = (byte *)(pcVar2 + -6);\n      pbVar6 = (byte *)\"/.libs/\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar5 < *pbVar6;\n        bVar9 = *pbVar5 == *pbVar6;\n        pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      bVar8 = false;\n      bVar7 = (!bVar7 && !bVar9) == bVar7;\n      if (bVar7) {\n        lVar3 = 3;\n        pbVar5 = pbVar1;\n        pbVar6 = &DAT_00407688;\n        do {\n          if (lVar3 == 0) break;\n          lVar3 = lVar3 + -1;\n          bVar8 = *pbVar5 < *pbVar6;\n          bVar7 = *pbVar5 == *pbVar6;\n          pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n          pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        } while (bVar7);\n        param_1 = pbVar1;\n        if ((!bVar8 && !bVar7) == bVar8) {\n          param_1 = (byte *)(pcVar2 + 4);\n          program_invocation_short_name = param_1;\n        }\n      }\n    }\n  }\n  DAT_0060b2a8 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00402d10"
        },
        {
            "funcStartAddr": "0x402db0",
            "funcEndAddr": "0x402e8f",
            "decompiledFuncCode": "\nchar * FUN_00402db0(char *param_1,int param_2)\n\n{\n  char cVar1;\n  char *pcVar2;\n  byte *pbVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    pbVar3 = (byte *)FUN_00406800();\n    if ((*pbVar3 & 0xdf) == 0x55) {\n      if (((((pbVar3[1] & 0xdf) != 0x54) || ((pbVar3[2] & 0xdf) != 0x46)) || (pbVar3[3] != 0x2d)) ||\n         ((pbVar3[4] != 0x38 || (pbVar3[5] != 0)))) {\nLAB_00402e88:\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_00407699;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0040768e;\n      }\n    }\n    else {\n      if (((((*pbVar3 & 0xdf) != 0x47) || ((pbVar3[1] & 0xdf) != 0x42)) || (pbVar3[2] != 0x31)) ||\n         (((pbVar3[3] != 0x38 || (pbVar3[4] != 0x30)) ||\n          ((pbVar3[5] != 0x33 || ((pbVar3[6] != 0x30 || (pbVar3[7] != 0)))))))) goto LAB_00402e88;\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_00407695;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_00407692;\n      }\n    }\n  }\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_00402db0"
        },
        {
            "funcStartAddr": "0x402eb0",
            "funcEndAddr": "0x403fe3",
            "decompiledFuncCode": "\nulong FUN_00402eb0(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  ulong uVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ulong uVar9;\n  ushort **ppuVar10;\n  long lVar11;\n  char *pcVar12;\n  byte bVar13;\n  char cVar14;\n  ulong uVar15;\n  ulong uVar16;\n  byte bVar17;\n  uint uVar18;\n  ulong uVar19;\n  bool bVar20;\n  ulong uVar21;\n  ulong uVar22;\n  bool bVar23;\n  bool bVar24;\n  bool bVar25;\n  bool bVar26;\n  size_t local_a0;\n  char *local_78;\n  ulong local_70;\n  bool local_5c;\n  bool local_5b;\n  wint_t local_44;\n  mbstate_t local_40 [2];\n  \n  sVar8 = __ctype_get_mb_cur_max();\n  uVar18 = param_6 & 2;\n  local_5c = uVar18 != 0;\n  uVar9 = param_2;\n  switch(param_5) {\n  case 0:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = false;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar18 != 0) {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = false;\n      local_a0 = 1;\n      local_78 = \"\\'\";\n      break;\n    }\n    bVar6 = false;\nLAB_00403b01:\n    if (param_2 != 0) {\n      bVar3 = false;\n      local_5b = false;\n      bVar2 = true;\n      local_70 = 0;\n      goto LAB_00403736;\n    }\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 1;\n    param_5 = 2;\n    local_70 = 0;\n    local_5b = false;\n    local_5c = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 3:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 4:\n    if (uVar18 == 0) {\n      bVar6 = true;\n      goto LAB_00403b01;\n    }\n  case 1:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 5:\n    if (uVar18 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      local_5b = false;\n      local_70 = 0;\n      bVar2 = true;\n      bVar3 = false;\n      local_5c = false;\n      uVar15 = 1;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    else {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 5;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\\"\";\n    break;\n  case 7:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = true;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      param_8 = (char *)FUN_00402db0(&DAT_0040769d,param_5);\n      param_9 = (char *)FUN_00402db0(&DAT_00408bef);\n    }\n    uVar15 = 0;\n    if (uVar18 == 0) {\n      cVar14 = *param_8;\n      while (cVar14 != '\\0') {\n        if (uVar15 < param_2) {\n          param_1[uVar15] = cVar14;\n        }\n        uVar15 = uVar15 + 1;\n        cVar14 = param_8[uVar15];\n      }\n    }\n    local_a0 = strlen(param_9);\n    bVar2 = true;\n    bVar3 = false;\n    local_78 = param_9;\n    local_5b = false;\n    local_70 = 0;\n    bVar6 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\nLAB_00402f48:\n  uVar22 = 0;\n  bVar5 = local_5b;\nLAB_00402f58:\n  bVar23 = param_4 != uVar22;\n  if (param_4 == 0xffffffffffffffff) {\n    bVar23 = param_3[uVar22] != '\\0';\n  }\n  bVar26 = bVar6;\n  if (!bVar23) goto LAB_004036d8;\n  bVar20 = (bool)(param_5 != 2 & bVar6);\n  __s1 = (byte *)(param_3 + uVar22);\n  uVar16 = uVar15;\n  bVar4 = bVar3;\n  if (bVar20) {\n    if (local_a0 == 0) {\nLAB_00403650:\n      uVar19 = (ulong)*__s1;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00403662_caseD_0;\n      default:\n        bVar20 = false;\n        goto switchD_004034ce_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00403365;\n      case 8:\n        bVar17 = 0x62;\n        break;\n      case 9:\nswitchD_00403662_caseD_9:\n        bVar17 = 0x74;\n        break;\n      case 10:\nswitchD_00403662_caseD_a:\n        bVar17 = 0x6e;\n        break;\n      case 0xb:\nswitchD_00403662_caseD_b:\n        bVar17 = 0x76;\n        goto LAB_00403365;\n      case 0xc:\nswitchD_00403662_caseD_c:\n        bVar17 = 0x66;\nLAB_00403365:\n        if (local_5c) {\n          bVar25 = false;\n          goto LAB_004032b8;\n        }\nLAB_00403370:\n        bVar23 = false;\n        goto LAB_0040312b;\n      case 0xd:\n        bVar20 = false;\nswitchD_00403048_caseD_d:\n        bVar25 = param_5 == 2;\n        uVar19 = 0xd;\n        bVar13 = 0x72;\n        goto LAB_00403280;\n      case 0x20:\n        bVar25 = false;\nLAB_004036aa:\n        uVar19 = 0x20;\n        goto LAB_00403672;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar20 = false;\nswitchD_00403048_caseD_21:\n        bVar25 = false;\n        goto LAB_0040328b;\n      case 0x23:\n      case 0x7e:\n        bVar26 = false;\nLAB_0040368a:\n        if (uVar22 == 0) {\n          bVar25 = false;\n          bVar23 = bVar20;\n          bVar20 = bVar26;\n          goto LAB_00403098;\n        }\n        bVar23 = false;\n        goto LAB_004030af;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar25 = false;\nLAB_00403672:\n        bVar24 = false;\n        bVar23 = bVar20;\n        bVar20 = bVar25;\n        goto LAB_004030b1;\n      case 0x27:\n        bVar20 = false;\n        goto switchD_004034ce_caseD_27;\n      case 0x3f:\n        bVar20 = false;\n        goto switchD_004034ce_caseD_3f;\n      case 0x5c:\n        bVar20 = false;\n        goto switchD_00403048_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        bVar20 = false;\n        goto switchD_004034ce_caseD_7b;\n      }\n      bVar25 = false;\n      bVar23 = false;\n      goto joined_r0x004032a7;\n    }\n    if ((param_4 == 0xffffffffffffffff) && (1 < local_a0)) {\n      param_4 = strlen(param_3);\n    }\n    if ((param_4 < uVar22 + local_a0) || (iVar7 = memcmp(__s1,local_78,local_a0), iVar7 != 0))\n    goto LAB_00403650;\n    if (!local_5c) {\n      uVar19 = (ulong)*__s1;\n      bVar25 = bVar20;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00403048_caseD_0;\n      default:\n        goto switchD_004034ce_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00403370;\n      case 8:\n        bVar25 = false;\n        bVar23 = false;\n        bVar17 = 0x62;\n        break;\n      case 9:\n        goto switchD_00403662_caseD_9;\n      case 10:\n        goto switchD_00403662_caseD_a;\n      case 0xb:\n        goto switchD_00403662_caseD_b;\n      case 0xc:\n        goto switchD_00403662_caseD_c;\n      case 0xd:\n        goto switchD_00403048_caseD_d;\n      case 0x20:\n        goto LAB_004036aa;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        goto switchD_00403048_caseD_21;\n      case 0x23:\n      case 0x7e:\n        bVar26 = bVar20;\n        goto LAB_0040368a;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        goto LAB_00403672;\n      case 0x27:\n        goto switchD_004034ce_caseD_27;\n      case 0x3f:\n        goto switchD_004034ce_caseD_3f;\n      case 0x5c:\n        goto switchD_00403048_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        goto switchD_004034ce_caseD_7b;\n      }\n      goto LAB_004030f2;\n    }\n    goto LAB_004032ca;\n  }\n  uVar19 = (ulong)*__s1;\n  switch(uVar19) {\n  case 0:\n    if (bVar6) {\nswitchD_00403662_caseD_0:\n      if (!local_5c) {\n        bVar20 = false;\nswitchD_00403048_caseD_0:\n        bVar26 = param_5 == 2;\n        bVar24 = (bool)((bVar3 ^ 1U) & bVar26);\n        if (bVar24) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar16 = uVar15 + 3;\n          bVar3 = bVar24;\n          if (uVar9 <= uVar15 + 3) {\n            uVar16 = uVar15 + 4;\n            bVar23 = false;\n            bVar17 = 0x30;\n            bVar4 = bVar24;\n            goto LAB_004031a8;\n          }\nLAB_004033ea:\n          param_1[uVar16] = 0x5c;\n          uVar15 = uVar16;\n        }\n        else if (uVar15 < uVar9) goto LAB_004033ea;\n        uVar16 = uVar15 + 1;\n        bVar24 = bVar23;\n        if (param_5 == 2) {\n          bVar17 = 0x30;\n          bVar23 = false;\n          bVar4 = bVar3;\n          goto LAB_004031a8;\n        }\n        uVar19 = 0x30;\n        if ((uVar22 + 1 < param_4) && ((byte)(param_3[uVar22 + 1] - 0x30U) < 10)) {\n          if (uVar16 < uVar9) {\n            param_1[uVar16] = 0x30;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x30;\n          }\n          uVar16 = uVar15 + 3;\n          uVar19 = 0x30;\n        }\nLAB_00403429:\n        bVar17 = (byte)uVar19;\n        bVar23 = false;\n        uVar15 = uVar16;\n        bVar4 = bVar3;\n        if ((bool)(bVar6 ^ 1U | bVar26)) goto LAB_004031a8;\n        goto LAB_004030b1;\n      }\n      bVar26 = param_5 == 2;\n      goto LAB_004032bc;\n    }\n    if ((param_6 & 1) == 0) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0;\n      bVar23 = false;\n      bVar20 = false;\n      goto LAB_00403098;\n    }\n    uVar22 = uVar22 + 1;\n    goto LAB_00402f58;\n  default:\nswitchD_004034ce_caseD_1:\n    bVar25 = bVar6;\n    if (sVar8 != 1) {\n      local_40[0] = (mbstate_t)0x0;\n      if (param_4 == 0xffffffffffffffff) {\n        param_4 = strlen(param_3);\n      }\n      uVar21 = 0;\n      do {\n        uVar1 = uVar22 + uVar21;\n        lVar11 = FUN_004065b0(&local_44,param_3 + uVar1,param_4 - uVar1,local_40);\n        if (lVar11 == 0) break;\n        if (lVar11 == -1) {\n          bVar23 = false;\n          goto LAB_00403dda;\n        }\n        if (lVar11 == -2) {\n          if ((param_4 <= uVar1) || (param_3[uVar1] == '\\0')) goto LAB_00403f17;\n          goto LAB_00403f07;\n        }\n        if (((param_5 == 2) && (local_5c)) && (lVar11 != 1)) {\n          pcVar12 = param_3 + uVar1 + 1;\n          do {\n            if (((byte)(*pcVar12 + 0xa5U) < 0x22) &&\n               ((1L << (*pcVar12 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n              param_5 = 2;\n              goto LAB_004032bc;\n            }\n            pcVar12 = pcVar12 + 1;\n          } while (param_3 + uVar1 + lVar11 != pcVar12);\n        }\n        iVar7 = iswprint(local_44);\n        if (iVar7 == 0) {\n          bVar23 = false;\n        }\n        uVar21 = uVar21 + lVar11;\n        iVar7 = mbsinit(local_40);\n      } while (iVar7 == 0);\n      bVar25 = (bool)((bVar23 ^ 1U) & bVar6);\n      goto LAB_00403dda;\n    }\n    ppuVar10 = __ctype_b_loc();\n    uVar21 = 1;\n    bVar25 = ((*ppuVar10)[uVar19] & 0x4000) == 0;\n    bVar23 = !bVar25;\n    bVar25 = (bool)(bVar25 & bVar6);\n    goto LAB_004034a4;\n  case 7:\n    bVar25 = param_5 == 2;\n    uVar19 = 7;\n    bVar13 = 0x61;\n    break;\n  case 8:\n    bVar25 = param_5 == 2;\n    uVar19 = 8;\n    bVar13 = 0x62;\n    break;\n  case 9:\n    uVar19 = 9;\n    bVar13 = 0x74;\n    goto LAB_004034e2;\n  case 10:\n    uVar19 = 10;\n    bVar13 = 0x6e;\n    goto LAB_004034e2;\n  case 0xb:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xb;\n    bVar13 = 0x76;\n    break;\n  case 0xc:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xc;\n    bVar13 = 0x66;\n    break;\n  case 0xd:\n    uVar19 = 0xd;\n    bVar13 = 0x72;\nLAB_004034e2:\n    bVar25 = param_5 == 2;\n    bVar20 = (bool)(local_5c & bVar25);\n    if (bVar20) {\nLAB_004034fa:\n      param_5 = 2;\n      goto LAB_004032bc;\n    }\n    break;\n  case 0x20:\n    uVar19 = 0x20;\n    goto LAB_00403086;\n  case 0x21:\n  case 0x22:\n  case 0x24:\n  case 0x26:\n  case 0x28:\n  case 0x29:\n  case 0x2a:\n  case 0x3b:\n  case 0x3c:\n  case 0x3d:\n  case 0x3e:\n  case 0x5b:\n  case 0x5e:\n  case 0x60:\n  case 0x7c:\n    bVar23 = false;\nLAB_00403086:\n    bVar25 = param_5 == 2;\n    if ((local_5c) && (bVar25)) goto LAB_004034fa;\n    goto LAB_00403098;\n  case 0x23:\n  case 0x7e:\nLAB_0040307d:\n    bVar25 = param_5 == 2;\n    if (uVar22 == 0) goto LAB_00403086;\n    goto LAB_0040328b;\n  case 0x25:\n  case 0x2b:\n  case 0x2c:\n  case 0x2d:\n  case 0x2e:\n  case 0x2f:\n  case 0x30:\n  case 0x31:\n  case 0x32:\n  case 0x33:\n  case 0x34:\n  case 0x35:\n  case 0x36:\n  case 0x37:\n  case 0x38:\n  case 0x39:\n  case 0x3a:\n  case 0x41:\n  case 0x42:\n  case 0x43:\n  case 0x44:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x48:\n  case 0x49:\n  case 0x4a:\n  case 0x4b:\n  case 0x4c:\n  case 0x4d:\n  case 0x4e:\n  case 0x4f:\n  case 0x50:\n  case 0x51:\n  case 0x52:\n  case 0x53:\n  case 0x54:\n  case 0x55:\n  case 0x56:\n  case 0x57:\n  case 0x58:\n  case 0x59:\n  case 0x5a:\n  case 0x5d:\n  case 0x5f:\n  case 0x61:\n  case 0x62:\n  case 99:\n  case 100:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n  case 0x68:\n  case 0x69:\n  case 0x6a:\n  case 0x6b:\n  case 0x6c:\n  case 0x6d:\n  case 0x6e:\n  case 0x6f:\n  case 0x70:\n  case 0x71:\n  case 0x72:\n  case 0x73:\n  case 0x74:\n  case 0x75:\n  case 0x76:\n  case 0x77:\n  case 0x78:\n  case 0x79:\n  case 0x7a:\n    goto switchD_004034ce_caseD_25;\n  case 0x27:\nswitchD_004034ce_caseD_27:\n    bVar5 = bVar23;\n    if (param_5 != 2) {\n      bVar25 = false;\n      uVar19 = 0x27;\n      goto LAB_00403098;\n    }\n    if (!local_5c) {\n      if ((uVar9 == 0) || (uVar19 = 0, uVar21 = uVar9, local_70 != 0)) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x5c;\n        }\n        uVar19 = uVar9;\n        uVar21 = local_70;\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x27;\n        }\n      }\n      uVar16 = uVar15 + 3;\n      bVar17 = 0x27;\n      uVar9 = uVar19;\n      local_70 = uVar21;\n      bVar24 = false;\n      bVar4 = false;\n      goto LAB_004031a8;\n    }\n    goto LAB_004032bc;\n  case 0x3f:\nswitchD_004034ce_caseD_3f:\n    if (param_5 == 2) {\n      if (!local_5c) {\n        bVar17 = 0x3f;\n        bVar24 = false;\n        bVar23 = false;\n        goto LAB_004031a8;\n      }\n      goto LAB_004032bc;\n    }\n    if (param_5 != 5) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0x3f;\n      bVar23 = false;\n      goto LAB_00403098;\n    }\n    if (((((param_6 & 4) != 0) && (uVar21 = uVar22 + 2, uVar21 < param_4)) &&\n        (param_3[uVar22 + 1] == '?')) &&\n       ((uVar19 = (ulong)(byte)param_3[uVar21], (byte)param_3[uVar21] < 0x3f &&\n        ((0x7000a38200000000U >> (uVar19 & 0x3f) & 1) != 0)))) {\n      if (!local_5c) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x3f;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x22;\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x22;\n        }\n        if (uVar15 + 3 < uVar9) {\n          param_1[uVar15 + 3] = 0x3f;\n        }\n        uVar16 = uVar15 + 4;\n        bVar26 = false;\n        uVar22 = uVar21;\n        bVar24 = false;\n        goto LAB_00403429;\n      }\n      goto LAB_004032ca;\n    }\n    bVar25 = false;\n    uVar19 = 0x3f;\n    bVar23 = false;\n    goto LAB_00403098;\n  case 0x5c:\n    if (param_5 != 2) {\nswitchD_00403048_caseD_5c:\n      uVar19 = 0x5c;\n      bVar17 = 0x5c;\n      bVar13 = 0x5c;\n      bVar25 = (bool)(bVar6 & local_5c & local_a0 != 0);\n      if (!bVar25) break;\n      uVar22 = uVar22 + 1;\n      bVar23 = false;\n      goto LAB_004031c4;\n    }\n    if (local_5c) goto LAB_004032bc;\n    uVar22 = uVar22 + 1;\n    bVar23 = false;\n    bVar17 = 0x5c;\n    goto LAB_004031c4;\n  case 0x7b:\n  case 0x7d:\nswitchD_004034ce_caseD_7b:\n    bVar24 = param_4 != 1;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar24 = param_3[1] != '\\0';\n    }\n    bVar25 = param_5 == 2;\n    if (!bVar24) goto LAB_0040307d;\n    goto LAB_0040328b;\n  }\nLAB_00403280:\n  if (!bVar6) {\nLAB_0040328b:\n    bVar23 = false;\n    goto LAB_00403098;\n  }\n  bVar23 = false;\n  bVar17 = bVar13;\n  goto joined_r0x004032a7;\nLAB_004036d8:\n  if ((uVar15 == 0) && ((bool)(local_5c & param_5 == 2))) {\n    param_5 = 2;\nLAB_004032bc:\n    if (bVar26) {\n      param_5 = 4;\n    }\nLAB_004032ca:\n    uVar9 = FUN_00402eb0(param_1,uVar9,param_3,param_4,param_5,param_6 & 0xfffffffd,0,param_8,\n                         param_9);\n    return uVar9;\n  }\n  bVar26 = (bool)(param_5 == 2 & (local_5c ^ 1U));\n  bVar23 = (bool)(local_5c ^ 1U);\n  if ((!bVar26) || (bVar23 = bVar26, !bVar5)) {\nLAB_00403fad:\n    uVar22 = uVar15;\n    if (((local_78 != (char *)0x0) && (bVar23)) && (cVar14 = *local_78, cVar14 != '\\0')) {\n      do {\n        if (uVar22 < uVar9) {\n          param_1[uVar22] = cVar14;\n        }\n        uVar22 = uVar22 + 1;\n        cVar14 = local_78[uVar22 - uVar15];\n      } while (cVar14 != '\\0');\n    }\n    if (uVar22 < uVar9) {\n      param_1[uVar22] = 0;\n    }\n    return uVar22;\n  }\n  if (bVar2) {\n    uVar9 = FUN_00402eb0(param_1,local_70,param_3,param_4,5,param_6,param_7,param_8,param_9);\n    return uVar9;\n  }\n  local_5b = uVar9 == 0 && local_70 != 0;\n  param_2 = local_70;\n  bVar23 = bVar5;\n  if (uVar9 != 0 || local_70 == 0) goto LAB_00403fad;\nLAB_00403736:\n  *param_1 = 0x27;\n  param_5 = 2;\n  uVar15 = 1;\n  local_78 = \"\\'\";\n  local_a0 = 1;\n  local_5c = false;\n  uVar9 = param_2;\n  goto LAB_00402f48;\n  while (__s1[uVar21] != 0) {\nLAB_00403f07:\n    uVar21 = uVar21 + 1;\n    if (param_4 <= uVar22 + uVar21) break;\n  }\nLAB_00403f17:\n  bVar23 = false;\nLAB_00403dda:\n  if (1 < uVar21) {\nLAB_0040399e:\n    bVar26 = false;\n    uVar21 = uVar21 + uVar22;\n    uVar16 = uVar22;\n    do {\n      bVar17 = (byte)uVar19;\n      if (bVar25) {\n        bVar26 = param_5 == 2;\n        if (local_5c) goto LAB_004032bc;\n        bVar26 = (bool)(bVar26 & (bVar4 ^ 1U));\n        if (bVar26) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar15 = uVar15 + 3;\n          bVar4 = bVar26;\n        }\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x5c;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = (char)(uVar19 >> 6) + '0';\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = ((byte)(uVar19 >> 3) & 7) + 0x30;\n        }\n        uVar22 = uVar16 + 1;\n        uVar15 = uVar15 + 3;\n        bVar17 = (bVar17 & 7) + 0x30;\n        bVar26 = bVar25;\n        if (uVar21 <= uVar22) goto LAB_0040313d;\n      }\n      else {\n        bVar3 = (bool)((bVar26 ^ 1U) & bVar4);\n        if (bVar20) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x5c;\n          }\n          uVar15 = uVar15 + 1;\n        }\n        uVar22 = uVar16 + 1;\n        if (uVar21 <= uVar22) goto LAB_004031c4;\n        if (bVar3) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x27;\n          }\n          uVar15 = uVar15 + 2;\n          bVar20 = false;\n          bVar4 = false;\n        }\n        else {\n          bVar20 = false;\n        }\n      }\n      uVar16 = uVar16 + 1;\n      if (uVar15 < uVar9) {\n        param_1[uVar15] = bVar17;\n      }\n      uVar19 = (ulong)(byte)param_3[uVar16];\n      uVar15 = uVar15 + 1;\n    } while( true );\n  }\nLAB_004034a4:\n  if (bVar25) {\n    bVar23 = false;\n    bVar25 = bVar6;\n    goto LAB_0040399e;\n  }\nswitchD_004034ce_caseD_25:\n  bVar25 = param_5 == 2;\nLAB_00403098:\n  bVar17 = (byte)uVar19;\n  bVar24 = (bool)((bVar6 ^ 1U | bVar25) ^ 1 | local_5c);\n  bVar26 = bVar20;\n  if (bVar24) {\nLAB_004030af:\n    bVar24 = false;\n    bVar20 = bVar26;\nLAB_004030b1:\n    bVar17 = (byte)uVar19;\n    uVar16 = uVar15;\n    bVar4 = bVar3;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar19 >> 5) * 4) >> (bVar17 & 0x1f) & 1) == 0))\n    goto LAB_004031a8;\n    bVar25 = param_5 == 2;\n  }\n  else {\nLAB_004031a8:\n    bVar25 = param_5 == 2;\n    uVar15 = uVar16;\n    bVar3 = bVar4;\n    if (!bVar20) {\n      uVar22 = uVar22 + 1;\n      bVar3 = (bool)((bVar24 ^ 1U) & bVar4);\nLAB_004031c4:\n      if (bVar3) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x27;\n        }\n        uVar15 = uVar15 + 2;\n        bVar4 = false;\n      }\n      goto LAB_0040313d;\n    }\n  }\njoined_r0x004032a7:\n  if (local_5c) {\nLAB_004032b8:\n    bVar26 = (bool)(bVar6 & bVar25);\n    goto LAB_004032bc;\n  }\nLAB_004030f2:\n  bVar25 = (bool)((bVar3 ^ 1U) & bVar25);\n  if (bVar25) {\n    if (uVar15 < uVar9) {\n      param_1[uVar15] = 0x27;\n    }\n    if (uVar15 + 1 < uVar9) {\n      param_1[uVar15 + 1] = 0x24;\n    }\n    if (uVar15 + 2 < uVar9) {\n      param_1[uVar15 + 2] = 0x27;\n    }\n    uVar15 = uVar15 + 3;\n    bVar3 = bVar25;\n  }\nLAB_0040312b:\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = 0x5c;\n  }\n  uVar15 = uVar15 + 1;\n  uVar22 = uVar22 + 1;\n  bVar4 = bVar3;\nLAB_0040313d:\n  bVar3 = bVar4;\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = bVar17;\n  }\n  uVar15 = uVar15 + 1;\n  if (!bVar23) {\n    bVar2 = false;\n  }\n  goto LAB_00402f58;\n}\n\n",
            "funcName": "FUN_00402eb0"
        },
        {
            "funcStartAddr": "0x4040e0",
            "funcEndAddr": "0x40427b",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_004040e0(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_0060b238;\n  if (DAT_0060b250 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00405140();\n    }\n    if (PTR_DAT_0060b238 == &DAT_0060b240) {\n      puVar8 = (undefined4 *)FUN_00404f50(0);\n      uVar6 = PTR_DAT_0060b248._4_4_;\n      uVar5 = PTR_DAT_0060b248._0_4_;\n      uVar3 = _UNK_0060b244;\n      PTR_DAT_0060b238 = (undefined *)puVar8;\n      *puVar8 = _DAT_0060b240;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_00404f50(PTR_DAT_0060b238);\n      PTR_DAT_0060b238 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_0060b250 * 4,0,(long)((param_1 + 1) - DAT_0060b250) << 4);\n    DAT_0060b250 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_00402eb0(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_0060b2c0) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)FUN_00404ef0(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_00402eb0(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n",
            "funcName": "FUN_004040e0"
        },
        {
            "funcStartAddr": "0x404280",
            "funcEndAddr": "0x4042b4",
            "decompiledFuncCode": "\nvoid FUN_00404280(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060b3c0;\n  }\n  FUN_004050f0(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00404280"
        },
        {
            "funcStartAddr": "0x4042c0",
            "funcEndAddr": "0x4042cf",
            "decompiledFuncCode": "\nundefined4 FUN_004042c0(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060b3c0;\n  }\n  return *param_1;\n}\n\n",
            "funcName": "FUN_004042c0"
        },
        {
            "funcStartAddr": "0x4042d0",
            "funcEndAddr": "0x4042df",
            "decompiledFuncCode": "\nvoid FUN_004042d0(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060b3c0;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_004042d0"
        },
        {
            "funcStartAddr": "0x4042e0",
            "funcEndAddr": "0x404313",
            "decompiledFuncCode": "\nuint FUN_004042e0(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060b3c0;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n",
            "funcName": "FUN_004042e0"
        },
        {
            "funcStartAddr": "0x404320",
            "funcEndAddr": "0x404333",
            "decompiledFuncCode": "\nundefined4 FUN_00404320(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060b3c0;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00404320"
        },
        {
            "funcStartAddr": "0x404340",
            "funcEndAddr": "0x40436b",
            "decompiledFuncCode": "\nvoid FUN_00404340(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060b3c0;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00404340"
        },
        {
            "funcStartAddr": "0x404370",
            "funcEndAddr": "0x4043e2",
            "decompiledFuncCode": "\nvoid FUN_00404370(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_0060b3c0;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00402eb0(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00404370"
        },
        {
            "funcStartAddr": "0x4043f0",
            "funcEndAddr": "0x4044d1",
            "decompiledFuncCode": "\nundefined8 FUN_004043f0(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_0060b3c0;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00402eb0(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = FUN_00404ef0(lVar3 + 1);\n  FUN_00402eb0(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n",
            "funcName": "FUN_004043f0"
        },
        {
            "funcStartAddr": "0x4044e0",
            "funcEndAddr": "0x4044ea",
            "decompiledFuncCode": "\nvoid FUN_004044e0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_004043f0(param_1,param_2,0,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_004044e0"
        },
        {
            "funcStartAddr": "0x4044f0",
            "funcEndAddr": "0x404585",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_004044f0(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_0060b238;\n  if (1 < DAT_0060b250) {\n    ppvVar2 = (void **)(PTR_DAT_0060b238 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_0060b238 + (ulong)(DAT_0060b250 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_0060b2c0) {\n    free(*(undefined **)(__ptr_00 + 8));\n    _DAT_0060b240 = 0x100;\n    PTR_DAT_0060b248 = &DAT_0060b2c0;\n  }\n  if (__ptr_00 != &DAT_0060b240) {\n    free(__ptr_00);\n    PTR_DAT_0060b238 = &DAT_0060b240;\n  }\n  DAT_0060b250 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_004044f0"
        },
        {
            "funcStartAddr": "0x404590",
            "funcEndAddr": "0x4045a1",
            "decompiledFuncCode": "\nvoid FUN_00404590(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_004040e0(param_1,param_2,0xffffffffffffffff,&DAT_0060b3c0);\n  return;\n}\n\n",
            "funcName": "FUN_00404590"
        },
        {
            "funcStartAddr": "0x4045b0",
            "funcEndAddr": "0x4045ba",
            "decompiledFuncCode": "\nvoid FUN_004045b0(void)\n\n{\n  FUN_004040e0();\n  return;\n}\n\n",
            "funcName": "FUN_004045b0"
        },
        {
            "funcStartAddr": "0x4045c0",
            "funcEndAddr": "0x4045d6",
            "decompiledFuncCode": "\nvoid FUN_004045c0(undefined8 param_1)\n\n{\n  FUN_004040e0(0,param_1,0xffffffffffffffff,&DAT_0060b3c0);\n  return;\n}\n\n",
            "funcName": "FUN_004045c0"
        },
        {
            "funcStartAddr": "0x4045e0",
            "funcEndAddr": "0x4045f2",
            "decompiledFuncCode": "\nvoid FUN_004045e0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_004040e0(0,param_1,param_2,&DAT_0060b3c0);\n  return;\n}\n\n",
            "funcName": "FUN_004045e0"
        },
        {
            "funcStartAddr": "0x404600",
            "funcEndAddr": "0x404668",
            "decompiledFuncCode": "\nvoid FUN_00404600(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_004040e0(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00404600"
        },
        {
            "funcStartAddr": "0x404670",
            "funcEndAddr": "0x4046d4",
            "decompiledFuncCode": "\nvoid FUN_00404670(undefined8 param_1,int param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_004040e0(param_1,param_3,param_4,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00404670"
        },
        {
            "funcStartAddr": "0x4046e0",
            "funcEndAddr": "0x4046ec",
            "decompiledFuncCode": "\nvoid FUN_004046e0(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00404600(0,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_004046e0"
        },
        {
            "funcStartAddr": "0x4046f0",
            "funcEndAddr": "0x4046ff",
            "decompiledFuncCode": "\nvoid FUN_004046f0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00404670(0,param_1,param_2,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_004046f0"
        },
        {
            "funcStartAddr": "0x404700",
            "funcEndAddr": "0x404770",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00404700(undefined8 param_1,undefined8 param_2,byte param_3)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  \n  local_18 = DAT_0060b3f0;\n  local_48 = _DAT_0060b3c0;\n  uStack_40 = uRam000000000060b3c8;\n  local_38 = _DAT_0060b3d0;\n  uStack_30 = uRam000000000060b3d8;\n  puVar1 = (uint *)((long)&uStack_40 + (ulong)(param_3 >> 5) * 4);\n  local_28 = _DAT_0060b3e0;\n  uStack_20 = uRam000000000060b3e8;\n  uVar2 = *puVar1;\n  *puVar1 = (~(uVar2 >> (param_3 & 0x1f)) & 1) << (param_3 & 0x1f) ^ uVar2;\n  FUN_004040e0(0,param_1,param_2,&local_48);\n  return;\n}\n\n",
            "funcName": "FUN_00404700"
        },
        {
            "funcStartAddr": "0x404770",
            "funcEndAddr": "0x40477d",
            "decompiledFuncCode": "\nvoid FUN_00404770(undefined8 param_1,char param_2)\n\n{\n  FUN_00404700(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00404770"
        },
        {
            "funcStartAddr": "0x404780",
            "funcEndAddr": "0x404791",
            "decompiledFuncCode": "\nvoid FUN_00404780(undefined8 param_1)\n\n{\n  FUN_00404700(param_1,0xffffffffffffffff,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00404780"
        },
        {
            "funcStartAddr": "0x4047a0",
            "funcEndAddr": "0x4047aa",
            "decompiledFuncCode": "\nvoid FUN_004047a0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00404700(param_1,param_2,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_004047a0"
        },
        {
            "funcStartAddr": "0x4047b0",
            "funcEndAddr": "0x40481e",
            "decompiledFuncCode": "\nvoid FUN_004047b0(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_40 = 0x400000000000000;\n    local_44 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_004040e0(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004047b0"
        },
        {
            "funcStartAddr": "0x404820",
            "funcEndAddr": "0x40488c",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00404820(undefined8 param_1,long param_2,long param_3,undefined8 param_4,undefined8 param_5\n                 )\n\n{\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long lStack_20;\n  long local_18;\n  \n  uStack_40 = uRam000000000060b3c8;\n  local_38 = _DAT_0060b3d0;\n  uStack_30 = uRam000000000060b3d8;\n  local_28 = _DAT_0060b3e0;\n  lStack_20 = uRam000000000060b3e8;\n  local_18 = DAT_0060b3f0;\n  local_48 = CONCAT44((int)((ulong)_DAT_0060b3c0 >> 0x20),10);\n  if ((param_2 != 0) && (param_3 != 0)) {\n    lStack_20 = param_2;\n    local_18 = param_3;\n    FUN_004040e0(param_1,param_4,param_5,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00404820"
        },
        {
            "funcStartAddr": "0x404890",
            "funcEndAddr": "0x404899",
            "decompiledFuncCode": "\nvoid FUN_00404890(void)\n\n{\n  FUN_00404820();\n  return;\n}\n\n",
            "funcName": "FUN_00404890"
        },
        {
            "funcStartAddr": "0x4048a0",
            "funcEndAddr": "0x4048b7",
            "decompiledFuncCode": "\nvoid FUN_004048a0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00404820(0,param_1,param_2,param_3,0xffffffffffffffff);\n  return;\n}\n\n",
            "funcName": "FUN_004048a0"
        },
        {
            "funcStartAddr": "0x4048c0",
            "funcEndAddr": "0x4048d3",
            "decompiledFuncCode": "\nvoid FUN_004048c0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00404820(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n",
            "funcName": "FUN_004048c0"
        },
        {
            "funcStartAddr": "0x4048e0",
            "funcEndAddr": "0x4048ea",
            "decompiledFuncCode": "\nvoid FUN_004048e0(void)\n\n{\n  FUN_004040e0();\n  return;\n}\n\n",
            "funcName": "FUN_004048e0"
        },
        {
            "funcStartAddr": "0x4048f0",
            "funcEndAddr": "0x404902",
            "decompiledFuncCode": "\nvoid FUN_004048f0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_004040e0(0,param_1,param_2,&DAT_0060b200);\n  return;\n}\n\n",
            "funcName": "FUN_004048f0"
        },
        {
            "funcStartAddr": "0x404910",
            "funcEndAddr": "0x404921",
            "decompiledFuncCode": "\nvoid FUN_00404910(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_004040e0(param_1,param_2,0xffffffffffffffff,&DAT_0060b200);\n  return;\n}\n\n",
            "funcName": "FUN_00404910"
        },
        {
            "funcStartAddr": "0x404930",
            "funcEndAddr": "0x404946",
            "decompiledFuncCode": "\nvoid FUN_00404930(undefined8 param_1)\n\n{\n  FUN_004040e0(0,param_1,0xffffffffffffffff,&DAT_0060b200);\n  return;\n}\n\n",
            "funcName": "FUN_00404930"
        },
        {
            "funcStartAddr": "0x404950",
            "funcEndAddr": "0x404cf4",
            "decompiledFuncCode": "\nundefined8\nFUN_00404950(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_004083eb,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00404bcc;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_00404bcc:\n    __fprintf_chk(param_1,1,uVar7,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[1];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar1 = param_5[2];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_00404c69;\n  case 7:\n    uVar1 = param_5[2];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    local_58 = param_5[1];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_00404c69:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_58,uVar1,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00404a4a;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_00404a4a:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_50,local_58,uVar6,uVar5,uVar4,uVar1,local_48);\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00404950"
        },
        {
            "funcStartAddr": "0x404d30",
            "funcEndAddr": "0x404d50",
            "decompiledFuncCode": "\nvoid FUN_00404d30(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_00404950();\n  return;\n}\n\n",
            "funcName": "FUN_00404d30"
        },
        {
            "funcStartAddr": "0x404d50",
            "funcEndAddr": "0x404da9",
            "decompiledFuncCode": "\nvoid FUN_00404d50(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long local_58 [11];\n  \n  lVar4 = 0;\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_58[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_58[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_00404950();\n  return;\n}\n\n",
            "funcName": "FUN_00404d50"
        },
        {
            "funcStartAddr": "0x404db0",
            "funcEndAddr": "0x404e68",
            "decompiledFuncCode": "\nvoid FUN_00404db0(void)\n\n{\n  long lVar1;\n  undefined8 in_R8;\n  ulong uVar2;\n  undefined8 in_R9;\n  long lVar3;\n  long *plVar4;\n  long local_88 [10];\n  long local_38 [4];\n  long local_18 [3];\n  \n  local_18[0] = in_R8;\n  plVar4 = (long *)&stack0x00000008;\n  uVar2 = 0x20;\n  local_18[1] = in_R9;\n  lVar3 = 0;\n  do {\n    if ((uint)uVar2 < 0x30) {\n      lVar1 = *(long *)((long)local_38 + uVar2);\n      local_88[lVar3] = lVar1;\n      uVar2 = (ulong)((uint)uVar2 + 8);\n    }\n    else {\n      lVar1 = *plVar4;\n      local_88[lVar3] = lVar1;\n      plVar4 = plVar4 + 1;\n    }\n  } while ((lVar1 != 0) && (lVar3 = lVar3 + 1, lVar3 != 10));\n  FUN_00404950();\n  return;\n}\n\n",
            "funcName": "FUN_00404db0"
        },
        {
            "funcStartAddr": "0x404e70",
            "funcEndAddr": "0x404ee4",
            "decompiledFuncCode": "\nvoid FUN_00404e70(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n",
            "funcName": "FUN_00404e70"
        },
        {
            "funcStartAddr": "0x404ef0",
            "funcEndAddr": "0x404f0a",
            "decompiledFuncCode": "\nvoid FUN_00404ef0(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00405140();\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00404ef0"
        },
        {
            "funcStartAddr": "0x404f10",
            "funcEndAddr": "0x404f31",
            "decompiledFuncCode": "\nvoid FUN_00404f10(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_00404ef0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00405140();\n}\n\n",
            "funcName": "FUN_00404f10"
        },
        {
            "funcStartAddr": "0x404f40",
            "funcEndAddr": "0x404f42",
            "decompiledFuncCode": "\nvoid thunk_FUN_00404ef0(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00405140();\n  }\n  return;\n}\n\n",
            "funcName": "thunk_404f40"
        },
        {
            "funcStartAddr": "0x404f50",
            "funcEndAddr": "0x404f80",
            "decompiledFuncCode": "\nvoid * FUN_00404f50(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00405140();\n  }\n  return pvVar1;\n}\n\n",
            "funcName": "FUN_00404f50"
        },
        {
            "funcStartAddr": "0x404f90",
            "funcEndAddr": "0x404fb1",
            "decompiledFuncCode": "\nvoid FUN_00404f90(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_00404f50();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00405140();\n}\n\n",
            "funcName": "FUN_00404f90"
        },
        {
            "funcStartAddr": "0x404fc0",
            "funcEndAddr": "0x405038",
            "decompiledFuncCode": "\nvoid FUN_00404fc0(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar2 = *param_2;\n  if (param_1 == 0) {\n    if (uVar2 == 0) {\n      uVar2 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar3 = (ulong)(SUB168(ZEXT816(uVar2) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar2) * ZEXT816(param_3),0) < 0) || (uVar3 != 0)) goto LAB_0040501b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar3 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar2) {\nLAB_0040501b:\n                    /* WARNING: Subroutine does not return */\n      FUN_00405140(param_1,param_2,uVar3);\n    }\n    uVar2 = (uVar2 >> 1) + 1 + uVar2;\n  }\n  *param_2 = uVar2;\n  FUN_00404f50(param_1,uVar2 * param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00404fc0"
        },
        {
            "funcStartAddr": "0x405050",
            "funcEndAddr": "0x40509a",
            "decompiledFuncCode": "\nvoid FUN_00405050(long param_1,ulong *param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = *param_2;\n  if (param_1 == 0) {\n    if (uVar1 == 0) {\n      *param_2 = 0x80;\n      FUN_00404f50(0,0x80);\n      return;\n    }\n    if ((long)uVar1 < 0) goto LAB_0040509a;\n  }\n  else {\n    if (0x5555555555555553 < uVar1) {\nLAB_0040509a:\n                    /* WARNING: Subroutine does not return */\n      FUN_00405140();\n    }\n    uVar1 = (uVar1 >> 1) + 1 + uVar1;\n  }\n  *param_2 = uVar1;\n  FUN_00404f50(param_1,uVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00405050"
        },
        {
            "funcStartAddr": "0x4050a0",
            "funcEndAddr": "0x4050b7",
            "decompiledFuncCode": "\nvoid FUN_004050a0(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00404ef0();\n  memset(__s,0,param_1);\n  return;\n}\n\n",
            "funcName": "FUN_004050a0"
        },
        {
            "funcStartAddr": "0x4050c0",
            "funcEndAddr": "0x4050ee",
            "decompiledFuncCode": "\nvoid FUN_004050c0(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00405140();\n}\n\n",
            "funcName": "FUN_004050c0"
        },
        {
            "funcStartAddr": "0x4050f0",
            "funcEndAddr": "0x405118",
            "decompiledFuncCode": "\nvoid FUN_004050f0(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00404ef0(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_004050f0"
        },
        {
            "funcStartAddr": "0x405120",
            "funcEndAddr": "0x405133",
            "decompiledFuncCode": "\nvoid FUN_00405120(char *param_1)\n\n{\n  void *__dest;\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  __dest = (void *)FUN_00404ef0(sVar1 + 1);\n  memcpy(__dest,param_1,sVar1 + 1);\n  return;\n}\n\n",
            "funcName": "FUN_00405120"
        },
        {
            "funcStartAddr": "0x405140",
            "funcEndAddr": "0x405171",
            "decompiledFuncCode": "\nvoid FUN_00405140(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_0060b1f8,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405140"
        },
        {
            "funcStartAddr": "0x405180",
            "funcEndAddr": "0x405248",
            "decompiledFuncCode": "\nulong FUN_00405180(undefined8 param_1,undefined4 param_2,ulong param_3,ulong param_4,\n                  undefined8 param_5,undefined8 param_6,int param_7)\n\n{\n  ulong uVar1;\n  int iVar2;\n  int *piVar3;\n  undefined8 uVar4;\n  ulong local_40 [2];\n  \n  iVar2 = FUN_00405280(param_1,0,param_2,local_40);\n  uVar1 = local_40[0];\n  if (iVar2 == 0) {\n    if ((param_3 <= local_40[0]) && (local_40[0] <= param_4)) {\n      return local_40[0];\n    }\n    piVar3 = __errno_location();\n    *piVar3 = (-(uint)(uVar1 < 0x40000000) & 0xffffffd7) + 0x4b;\n  }\n  else {\n    piVar3 = __errno_location();\n    if (iVar2 == 1) {\n      *piVar3 = 0x4b;\n    }\n    else if (iVar2 == 3) {\n      *piVar3 = 0;\n    }\n  }\n  uVar4 = FUN_00404930(param_1);\n  iVar2 = *piVar3;\n  if (iVar2 == 0x16) {\n    iVar2 = 0;\n  }\n  if (param_7 == 0) {\n    param_7 = 1;\n  }\n  error(param_7,iVar2,\"%s: %s\",param_6,uVar4);\n  return local_40[0];\n}\n\n",
            "funcName": "FUN_00405180"
        },
        {
            "funcStartAddr": "0x405250",
            "funcEndAddr": "0x405271",
            "decompiledFuncCode": "\nvoid FUN_00405250(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5,undefined8 param_6)\n\n{\n  FUN_00405180(param_1,10,param_2,param_3,param_4,param_5,param_6);\n  return;\n}\n\n",
            "funcName": "FUN_00405250"
        },
        {
            "funcStartAddr": "0x405280",
            "funcEndAddr": "0x40562e",
            "decompiledFuncCode": "\nulong FUN_00405280(byte *param_1,byte **param_2,uint param_3,ulong *param_4,char *param_5)\n\n{\n  byte bVar1;\n  undefined auVar2 [16];\n  int *piVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  ulong uVar6;\n  char *pcVar7;\n  byte bVar8;\n  uint uVar9;\n  int iVar10;\n  ulong uVar11;\n  byte bVar12;\n  uint uVar13;\n  ulong uVar14;\n  int iVar15;\n  int iVar16;\n  byte *local_40 [2];\n  \n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoumax\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = local_40;\n  }\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  bVar12 = *param_1;\n  ppuVar4 = __ctype_b_loc();\n  pbVar5 = param_1;\n  while ((*(byte *)((long)*ppuVar4 + (ulong)bVar12 * 2 + 1) & 0x20) != 0) {\n    pbVar5 = pbVar5 + 1;\n    bVar12 = *pbVar5;\n  }\n  if (bVar12 == 0x2d) {\n    return 4;\n  }\n  uVar6 = __strtoul_internal(param_1,param_2,param_3,0);\n  pbVar5 = *param_2;\n  if (pbVar5 == param_1) {\n    if ((param_5 == (char *)0x0) || (bVar12 = *param_1, bVar12 == 0)) {\n      return 4;\n    }\n    uVar14 = 0;\n    uVar6 = 1;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) {\n      return 4;\n    }\n  }\n  else {\n    if (*piVar3 == 0) {\n      uVar14 = 0;\n    }\n    else {\n      uVar14 = 1;\n      if (*piVar3 != 0x22) {\n        return 4;\n      }\n    }\n    uVar13 = (uint)uVar14;\n    if ((param_5 == (char *)0x0) || (bVar12 = *pbVar5, bVar12 == 0)) goto LAB_00405322;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) goto switchD_0040540c_caseD_1;\n  }\n  uVar13 = (uint)uVar14;\n  uVar9 = bVar12 - 0x45;\n  bVar8 = (byte)uVar9;\n  if (((bVar8 < 0x30) && ((0x814400308945U >> ((ulong)uVar9 & 0x3f) & 1) != 0)) &&\n     (pcVar7 = strchr(param_5,0x30), pcVar7 != (char *)0x0)) {\n    bVar1 = pbVar5[1];\n    if (bVar1 != 0x44) {\n      if (bVar1 == 0x69) {\n        uVar11 = 0x400;\n        iVar15 = (pbVar5[2] == 0x42) + 1 + (uint)(pbVar5[2] == 0x42);\n        goto LAB_004053fa;\n      }\n      if (bVar1 != 0x42) {\n                    /* WARNING: Could not recover jumptable at 0x004053e1. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        uVar6 = (*(code *)(&PTR_LAB_004087b8)[bVar8])();\n        return uVar6;\n      }\n    }\n    iVar15 = 2;\n    uVar11 = 1000;\n  }\n  else {\n    iVar15 = 1;\n    uVar11 = 0x400;\n  }\nLAB_004053fa:\n  iVar10 = (int)uVar11;\n  switch(bVar12 - 0x42 & 0xff) {\n  case 0:\n    if (uVar6 >> 0x36 == 0) {\n      uVar6 = uVar6 << 10;\n      break;\n    }\n    goto LAB_00405467;\n  default:\nswitchD_0040540c_caseD_1:\n    *param_4 = uVar6;\n    return (ulong)(uVar13 | 2);\n  case 3:\n    iVar16 = 6;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_004054f4;\n  case 5:\n  case 0x25:\n    uVar11 = (ulong)iVar10;\n    if (((SUB168(ZEXT816(uVar6) * ZEXT816(uVar11) >> 0x40,0) != 0) ||\n        (auVar2 = (ZEXT816(uVar6) * ZEXT816(uVar11) & (undefined  [16])0xffffffffffffffff) *\n                  ZEXT816(uVar11), SUB168(auVar2 >> 0x40,0) != 0)) ||\n       (auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816(uVar11),\n       uVar6 = SUB168(auVar2,0), SUB168(auVar2 >> 0x40,0) != 0)) {\n      uVar6 = 0xffffffffffffffff;\n      uVar14 = 1;\n    }\n    break;\n  case 9:\n  case 0x29:\n    auVar2 = ZEXT816(uVar6) * ZEXT816(uVar11);\n    goto joined_r0x0040542c;\n  case 0xb:\n  case 0x2b:\n    auVar2 = ZEXT816(uVar6) * ZEXT816((ulong)(long)iVar10);\n    if (SUB168(auVar2 >> 0x40,0) != 0) goto LAB_00405467;\n    auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816((ulong)(long)iVar10);\njoined_r0x0040542c:\n    uVar6 = SUB168(auVar2,0);\n    if (SUB168(auVar2 >> 0x40,0) != 0) {\nLAB_00405467:\n      uVar14 = 1;\n      uVar6 = 0xffffffffffffffff;\n    }\n    break;\n  case 0xe:\n    iVar16 = 5;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_004054f4;\n  case 0x12:\n  case 0x32:\n    iVar16 = 4;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_004054f4;\n  case 0x17:\n    iVar16 = 8;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_004054f4;\n  case 0x18:\n    iVar16 = 7;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\nLAB_004054f4:\n    uVar14 = (ulong)(uVar13 | uVar9);\n    break;\n  case 0x20:\n    if (uVar6 >> 0x37 != 0) goto LAB_00405467;\n    uVar6 = uVar6 << 9;\n    break;\n  case 0x21:\n    break;\n  case 0x35:\n    if ((long)uVar6 < 0) goto LAB_00405467;\n    uVar6 = uVar6 * 2;\n  }\n  *param_2 = pbVar5 + iVar15;\n  if (pbVar5[iVar15] != 0) {\n    uVar14 = (ulong)((uint)uVar14 | 2);\n  }\nLAB_00405322:\n  *param_4 = uVar6;\n  return uVar14;\n}\n\n",
            "funcName": "FUN_00405280"
        },
        {
            "funcStartAddr": "0x4056c0",
            "funcEndAddr": "0x405738",
            "decompiledFuncCode": "\nint FUN_004056c0(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_00405727;\n    }\n    iVar1 = FUN_00405740(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_00405727:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n",
            "funcName": "FUN_004056c0"
        },
        {
            "funcStartAddr": "0x405740",
            "funcEndAddr": "0x40577b",
            "decompiledFuncCode": "\nvoid FUN_00405740(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if ((iVar1 != 0) && ((param_1->_flags & 0x100U) != 0)) {\n      FUN_00405780(param_1,0,1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00405740"
        },
        {
            "funcStartAddr": "0x405780",
            "funcEndAddr": "0x4057d6",
            "decompiledFuncCode": "\nulong FUN_00405780(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  uint uVar1;\n  int __fd;\n  ulong uVar2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    __fd = fileno(param_1);\n    uVar2 = lseek(__fd,param_2,param_3);\n    if (uVar2 != 0xffffffffffffffff) {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = uVar2;\n      uVar2 = 0;\n    }\n    return uVar2;\n  }\n  uVar1 = fseeko(param_1,param_2,param_3);\n  return (ulong)uVar1;\n}\n\n",
            "funcName": "FUN_00405780"
        },
        {
            "funcStartAddr": "0x4057e0",
            "funcEndAddr": "0x4058b5",
            "decompiledFuncCode": "\nvoid FUN_004057e0(long param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 *puVar5;\n  long lVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  \n  iVar1 = param_2[0xb];\n  iVar2 = *param_2;\n  iVar3 = param_2[0xc];\n  iVar8 = iVar1;\n  iVar9 = iVar2;\n  while (iVar3 < iVar9) {\n    while( true ) {\n      if (iVar3 <= iVar8) goto LAB_0040585c;\n      iVar10 = iVar9 - iVar3;\n      iVar7 = iVar3 - iVar8;\n      if (iVar10 <= iVar7) break;\n      lVar6 = (long)iVar8;\n      iVar9 = iVar9 - iVar7;\n      puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n      do {\n        uVar4 = *puVar5;\n        *puVar5 = puVar5[iVar9 - lVar6];\n        puVar5[iVar9 - lVar6] = uVar4;\n        puVar5 = puVar5 + 1;\n      } while ((undefined8 *)(param_1 + 8 + ((ulong)(iVar7 - 1) + lVar6) * 8) != puVar5);\n      if (iVar9 <= iVar3) goto LAB_0040585c;\n    }\n    lVar6 = (long)iVar8;\n    puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n    do {\n      uVar4 = *puVar5;\n      *puVar5 = puVar5[iVar3 - lVar6];\n      puVar5[iVar3 - lVar6] = uVar4;\n      puVar5 = puVar5 + 1;\n    } while (puVar5 != (undefined8 *)(param_1 + 8 + ((ulong)(iVar10 - 1) + lVar6) * 8));\n    iVar8 = iVar8 + iVar10;\n  }\nLAB_0040585c:\n  param_2[0xc] = iVar2;\n  param_2[0xb] = iVar1 + (iVar2 - iVar3);\n  return;\n}\n\n",
            "funcName": "FUN_004057e0"
        },
        {
            "funcStartAddr": "0x4058c0",
            "funcEndAddr": "0x405ebe",
            "decompiledFuncCode": "\nint FUN_004058c0(int param_1,undefined8 *param_2,char *param_3,char **param_4,undefined4 *param_5,\n                int param_6,int *param_7,int param_8,undefined8 param_9)\n\n{\n  char cVar1;\n  undefined8 uVar2;\n  bool bVar3;\n  bool bVar4;\n  int iVar5;\n  int iVar6;\n  size_t sVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  char **ppcVar10;\n  char *pcVar11;\n  char **ppcVar12;\n  char *pcVar13;\n  char *__s1;\n  FILE *__stream;\n  ulong uVar14;\n  size_t sVar15;\n  char *__s1_00;\n  long lVar16;\n  char *local_70;\n  uint local_44;\n  \n  pcVar13 = *(char **)(param_7 + 8);\n  cVar1 = *pcVar13;\n  pcVar11 = pcVar13;\n  if ((cVar1 == '=') || (cVar1 == '\\0')) {\n    sVar15 = 0;\n  }\n  else {\n    do {\n      pcVar11 = pcVar11 + 1;\n      if (*pcVar11 == '\\0') break;\n    } while (*pcVar11 != '=');\n    sVar15 = (long)pcVar11 - (long)pcVar13;\n  }\n  uVar14 = 0;\n  __s1 = *param_4;\n  ppcVar10 = param_4;\n  __s1_00 = __s1;\n  if (__s1 != (char *)0x0) {\n    while( true ) {\n      iVar5 = strncmp(__s1_00,pcVar13,sVar15);\n      if ((iVar5 == 0) && (sVar7 = strlen(__s1_00), sVar7 == sVar15)) goto LAB_00405ae0;\n      ppcVar10 = ppcVar10 + 4;\n      __s1_00 = *ppcVar10;\n      iVar5 = (int)uVar14 + 1;\n      if (__s1_00 == (char *)0x0) break;\n      uVar14 = (ulong)iVar5;\n    }\n    lVar16 = 0;\n    ppcVar10 = (char **)0x0;\n    local_44 = 0xffffffff;\n    bVar3 = false;\n    bVar4 = false;\n    local_70 = (char *)0x0;\n    ppcVar12 = param_4;\n    do {\n      iVar6 = strncmp(__s1,pcVar13,sVar15);\n      if (iVar6 == 0) {\n        if (ppcVar10 == (char **)0x0) {\n          local_44 = (uint)lVar16;\n          ppcVar10 = ppcVar12;\n        }\n        else if (((((param_6 != 0) || (*(int *)(ppcVar10 + 1) != *(int *)(ppcVar12 + 1))) ||\n                  (ppcVar10[2] != ppcVar12[2])) ||\n                 (*(int *)(ppcVar10 + 3) != *(int *)(ppcVar12 + 3))) && (!bVar3)) {\n          if (param_8 == 0) {\n            bVar3 = true;\n            if (local_70 == (char *)0x0) goto LAB_00405a20;\n          }\n          else if (local_70 == (char *)0x0) {\n            local_70 = (char *)calloc((long)iVar5,1);\n            if (local_70 == (char *)0x0) {\n              bVar3 = true;\n              goto LAB_00405a20;\n            }\n            bVar4 = true;\n            local_70[(int)local_44] = '\\x01';\n          }\n          local_70[lVar16] = '\\x01';\n        }\n      }\nLAB_00405a20:\n      ppcVar12 = ppcVar12 + 4;\n      __s1 = *ppcVar12;\n      lVar16 = lVar16 + 1;\n    } while (__s1 != (char *)0x0);\n    if ((local_70 != (char *)0x0) || (bVar3)) {\n      if (param_8 != 0) {\n        if (bVar3) {\n          uVar2 = *param_2;\n          uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous\\n\",5);\n          __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n        else {\n          flockfile(stderr);\n          uVar2 = *(undefined8 *)(param_7 + 8);\n          uVar8 = *param_2;\n          uVar9 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous; possibilities:\",5);\n          __fprintf_chk(stderr,1,uVar9,uVar8,param_9,uVar2);\n          pcVar13 = local_70;\n          __stream = stderr;\n          do {\n            if (*pcVar13 != '\\0') {\n              __fprintf_chk(__stream,1,&DAT_00408be9,param_9,*param_4);\n              __stream = stderr;\n            }\n            pcVar13 = pcVar13 + 1;\n            param_4 = param_4 + 4;\n          } while (local_70 + uVar14 + 1 != pcVar13);\n          fputc(10,__stream);\n          funlockfile(stderr);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n      }\n      if (bVar4) {\n        free(local_70);\n      }\n      sVar15 = strlen(pcVar13);\n      *(char **)(param_7 + 8) = pcVar13 + sVar15;\n      *param_7 = *param_7 + 1;\n      param_7[2] = 0;\n      return 0x3f;\n    }\n    if (ppcVar10 != (char **)0x0) {\n      uVar14 = (ulong)local_44;\nLAB_00405ae0:\n      iVar6 = *param_7;\n      *(undefined8 *)(param_7 + 8) = 0;\n      iVar5 = iVar6 + 1;\n      *param_7 = iVar5;\n      if (*pcVar11 == '\\0') {\n        if (*(int *)(ppcVar10 + 1) == 1) {\n          if (param_1 <= iVar5) {\n            if (param_8 != 0) {\n              pcVar13 = *ppcVar10;\n              uVar2 = *param_2;\n              uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' requires an argument\\n\",5);\n              __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n            }\n            param_7[2] = *(int *)(ppcVar10 + 3);\n            return (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          *param_7 = iVar6 + 2;\n          *(undefined8 *)(param_7 + 4) = param_2[iVar5];\n        }\n      }\n      else {\n        if (*(int *)(ppcVar10 + 1) == 0) {\n          if (param_8 != 0) {\n            pcVar13 = *ppcVar10;\n            uVar2 = *param_2;\n            uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' doesn\\'t allow an argument\\n\",5);\n            __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          }\n          param_7[2] = *(int *)(ppcVar10 + 3);\n          return 0x3f;\n        }\n        *(char **)(param_7 + 4) = pcVar11 + 1;\n      }\n      if (param_5 != (undefined4 *)0x0) {\n        *param_5 = (int)uVar14;\n      }\n      if ((int *)ppcVar10[2] == (int *)0x0) {\n        return *(int *)(ppcVar10 + 3);\n      }\n      *(int *)ppcVar10[2] = *(int *)(ppcVar10 + 3);\n      return 0;\n    }\n  }\n  if (((param_6 != 0) && (*(char *)(param_2[*param_7] + 1) != '-')) &&\n     (pcVar11 = strchr(param_3,(int)cVar1), pcVar11 != (char *)0x0)) {\n    return -1;\n  }\n  if (param_8 != 0) {\n    uVar2 = *param_2;\n    uVar8 = dcgettext(0,\"%s: unrecognized option \\'%s%s\\'\\n\",5);\n    __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n  }\n  *(undefined8 *)(param_7 + 8) = 0;\n  *param_7 = *param_7 + 1;\n  param_7[2] = 0;\n  return 0x3f;\n}\n\n",
            "funcName": "FUN_004058c0"
        },
        {
            "funcStartAddr": "0x405ee0",
            "funcEndAddr": "0x406447",
            "decompiledFuncCode": "\nuint FUN_00405ee0(uint param_1,undefined8 *param_2,char *param_3,long param_4,undefined8 param_5,\n                 ulong param_6,uint *param_7,int param_8)\n\n{\n  undefined8 uVar1;\n  char cVar2;\n  uint uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  long lVar6;\n  uint uVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  uint uVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  undefined1 *puVar15;\n  \n  bVar14 = 0;\n  uVar3 = param_7[1];\n  if ((int)param_1 < 1) {\n    return 0xffffffff;\n  }\n  uVar11 = *param_7;\n  *(undefined8 *)(param_7 + 4) = 0;\n  if (uVar11 == 0) {\n    *param_7 = 1;\n    uVar11 = 1;\nLAB_00405f2a:\n    param_7[0xc] = uVar11;\n    param_7[0xb] = uVar11;\n    *(undefined8 *)(param_7 + 8) = 0;\n    if (*param_3 == '-') {\n      param_7[10] = 2;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else if (*param_3 == '+') {\n      param_7[10] = 0;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else {\n      pbVar8 = (byte *)0x0;\n      if (param_8 == 0) {\n        pcVar4 = getenv(\"POSIXLY_CORRECT\");\n        param_6 = param_6 & 0xffffffff;\n        if (pcVar4 == (char *)0x0) {\n          param_7[10] = 1;\n          pbVar8 = *(byte **)(param_7 + 8);\n          goto LAB_0040602d;\n        }\n        pbVar8 = *(byte **)(param_7 + 8);\n      }\n      param_7[10] = 0;\n    }\nLAB_0040602d:\n    param_7[6] = 1;\n    cVar2 = *param_3;\nLAB_00406038:\n    if (cVar2 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 == (byte *)0x0) goto LAB_00405fa8;\nLAB_0040604c:\n    if (*pbVar8 == 0) goto LAB_00405fa8;\n  }\n  else {\n    if (param_7[6] == 0) goto LAB_00405f2a;\n    cVar2 = *param_3;\n    pbVar8 = *(byte **)(param_7 + 8);\n    if ((cVar2 - 0x2bU & 0xfd) != 0) goto LAB_00406038;\n    pcVar4 = param_3 + 1;\n    param_3 = param_3 + 1;\n    if (*pcVar4 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 != (byte *)0x0) goto LAB_0040604c;\nLAB_00405fa8:\n    uVar11 = *param_7;\n    if (param_7[0xc] != uVar11 && (int)uVar11 <= (int)param_7[0xc]) {\n      param_7[0xc] = uVar11;\n    }\n    if ((int)uVar11 < (int)param_7[0xb]) {\n      param_7[0xb] = uVar11;\n    }\n    if (param_7[10] == 1) {\n      uVar7 = param_7[0xc];\n      if (param_7[0xb] == uVar7) {\n        if (uVar11 != uVar7) {\n          param_7[0xb] = uVar11;\n          uVar7 = uVar11;\n        }\n      }\n      else if (uVar11 != uVar7) {\n        FUN_004057e0(param_2,param_7);\n        param_6 = param_6 & 0xffffffff;\n        uVar7 = *param_7;\n      }\n      uVar11 = uVar7;\n      uVar7 = uVar11;\n      if ((int)uVar11 < (int)param_1) {\n        lVar6 = (long)(int)uVar11;\n        do {\n          if ((*(char *)param_2[lVar6] == '-') && (((char *)param_2[lVar6])[1] != '\\0')) {\n            uVar11 = *param_7;\n            uVar7 = (uint)lVar6;\n            break;\n          }\n          uVar11 = (uint)lVar6 + 1;\n          lVar6 = lVar6 + 1;\n          *param_7 = uVar11;\n          uVar7 = uVar11;\n        } while ((int)lVar6 < (int)param_1);\n      }\n      param_7[0xc] = uVar7;\n    }\n    bVar12 = param_1 < uVar11;\n    bVar13 = param_1 == uVar11;\n    if (bVar13) {\n      param_1 = param_7[0xc];\n      uVar11 = param_7[0xb];\nLAB_00406116:\n      if (uVar11 != param_1) {\n        *param_7 = uVar11;\n      }\n      return 0xffffffff;\n    }\n    lVar6 = 3;\n    pbVar8 = (byte *)param_2[(int)uVar11];\n    pbVar9 = pbVar8;\n    pbVar10 = &DAT_00408c01;\n    do {\n      if (lVar6 == 0) break;\n      lVar6 = lVar6 + -1;\n      bVar12 = *pbVar9 < *pbVar10;\n      bVar13 = *pbVar9 == *pbVar10;\n      pbVar9 = pbVar9 + (ulong)bVar14 * -2 + 1;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n    if ((!bVar12 && !bVar13) == bVar12) {\n      uVar11 = uVar11 + 1;\n      *param_7 = uVar11;\n      if (param_7[0xb] == param_7[0xc]) {\n        param_7[0xb] = uVar11;\n      }\n      else {\n        bVar12 = uVar11 != param_7[0xc];\n        uVar11 = param_7[0xb];\n        if (bVar12) {\n          FUN_004057e0(param_2,param_7);\n          uVar11 = param_7[0xb];\n        }\n      }\n      param_7[0xc] = param_1;\n      *param_7 = param_1;\n      goto LAB_00406116;\n    }\n    if ((*pbVar8 != 0x2d) || (bVar14 = pbVar8[1], bVar14 == 0)) {\n      if (param_7[10] == 0) {\n        return 0xffffffff;\n      }\n      *(byte **)(param_7 + 4) = pbVar8;\n      *param_7 = uVar11 + 1;\n      return 1;\n    }\n    if (param_4 != 0) {\n      if (bVar14 == 0x2d) {\n        *(byte **)(param_7 + 8) = pbVar8 + 2;\n        puVar15 = &DAT_00408c01;\n        goto LAB_00406275;\n      }\n      if ((int)param_6 != 0) {\n        if (pbVar8[2] == 0) {\n          pcVar4 = strchr(param_3,(int)(char)bVar14);\n          param_6 = param_6 & 0xffffffff;\n          if (pcVar4 != (char *)0x0) goto LAB_00406220;\n        }\n        *(byte **)(param_7 + 8) = pbVar8 + 1;\n        uVar11 = FUN_004058c0(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,\n                              &DAT_00408c02);\n        if (uVar11 != 0xffffffff) {\n          return uVar11;\n        }\n        pbVar8 = (byte *)param_2[(int)*param_7];\n      }\n    }\nLAB_00406220:\n    pbVar8 = pbVar8 + 1;\n  }\n  pbVar9 = pbVar8 + 1;\n  *(byte **)(param_7 + 8) = pbVar9;\n  bVar14 = *pbVar8;\n  uVar11 = (uint)(char)bVar14;\n  pcVar4 = strchr(param_3,uVar11);\n  if (pbVar8[1] == 0) {\n    *param_7 = *param_7 + 1;\n  }\n  if (((byte)(bVar14 - 0x3a) < 2) || (pcVar4 == (char *)0x0)) {\n    if (uVar3 != 0) {\n      uVar1 = *param_2;\n      uVar5 = dcgettext(0,\"%s: invalid option -- \\'%c\\'\\n\",5);\n      __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n    }\n    param_7[2] = uVar11;\n    return 0x3f;\n  }\n  if (((*pcVar4 != 'W') || (param_4 == 0)) || (pcVar4[1] != ';')) {\n    if (pcVar4[1] == ':') {\n      if (pcVar4[2] == ':') {\n        if (pbVar8[1] == 0) {\n          *(undefined8 *)(param_7 + 4) = 0;\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = *param_7 + 1;\n        }\n      }\n      else {\n        uVar7 = *param_7;\n        if (pbVar8[1] == 0) {\n          if (param_1 == uVar7) {\n            if (uVar3 != 0) {\n              uVar1 = *param_2;\n              uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n              __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n            }\n            param_7[2] = uVar11;\n            uVar11 = (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          else {\n            uVar1 = param_2[(int)uVar7];\n            *param_7 = uVar7 + 1;\n            *(undefined8 *)(param_7 + 4) = uVar1;\n          }\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = uVar7 + 1;\n        }\n      }\n      *(undefined8 *)(param_7 + 8) = 0;\n      return uVar11;\n    }\n    return uVar11;\n  }\n  if (pbVar8[1] == 0) {\n    if (*param_7 == param_1) {\n      if (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n        __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n      }\n      param_7[2] = uVar11;\n      return (uint)(*param_3 != ':') * 5 + 0x3a;\n    }\n    pbVar9 = (byte *)param_2[(int)*param_7];\n  }\n  *(byte **)(param_7 + 8) = pbVar9;\n  param_6 = 0;\n  *(undefined8 *)(param_7 + 4) = 0;\n  puVar15 = &DAT_00408c20;\nLAB_00406275:\n  uVar3 = FUN_004058c0(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,puVar15);\n  return uVar3;\n}\n\n",
            "funcName": "FUN_00405ee0"
        },
        {
            "funcStartAddr": "0x4064b0",
            "funcEndAddr": "0x406506",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_004064b0(void)\n\n{\n  DAT_0060b400 = DAT_0060b25c;\n  _DAT_0060b404 = DAT_0060b258;\n  FUN_00405ee0();\n  DAT_0060b25c = DAT_0060b400;\n  DAT_0060b440 = DAT_0060b410;\n  _DAT_0060b254 = DAT_0060b408;\n  return;\n}\n\n",
            "funcName": "FUN_004064b0"
        },
        {
            "funcStartAddr": "0x406510",
            "funcEndAddr": "0x406528",
            "decompiledFuncCode": "\nvoid FUN_00406510(void)\n\n{\n  FUN_004064b0();\n  return;\n}\n\n",
            "funcName": "FUN_00406510"
        },
        {
            "funcStartAddr": "0x406530",
            "funcEndAddr": "0x406543",
            "decompiledFuncCode": "\nvoid FUN_00406530(void)\n\n{\n  FUN_004064b0();\n  return;\n}\n\n",
            "funcName": "FUN_00406530"
        },
        {
            "funcStartAddr": "0x406550",
            "funcEndAddr": "0x406565",
            "decompiledFuncCode": "\nvoid FUN_00406550(void)\n\n{\n  FUN_00405ee0();\n  return;\n}\n\n",
            "funcName": "FUN_00406550"
        },
        {
            "funcStartAddr": "0x406570",
            "funcEndAddr": "0x406586",
            "decompiledFuncCode": "\nvoid FUN_00406570(void)\n\n{\n  FUN_004064b0();\n  return;\n}\n\n",
            "funcName": "FUN_00406570"
        },
        {
            "funcStartAddr": "0x406590",
            "funcEndAddr": "0x4065a8",
            "decompiledFuncCode": "\nvoid FUN_00406590(void)\n\n{\n  FUN_00405ee0();\n  return;\n}\n\n",
            "funcName": "FUN_00406590"
        },
        {
            "funcStartAddr": "0x4065b0",
            "funcEndAddr": "0x40661f",
            "decompiledFuncCode": "\nsize_t FUN_004065b0(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  wchar_t local_1c;\n  \n  if (param_2 == (byte *)0x0) {\n    param_3 = 1;\n    param_2 = (byte *)0x408c1f;\n  }\n  else {\n    if (param_3 == 0) {\n      return 0xfffffffffffffffe;\n    }\n    if (param_1 != (wchar_t *)0x0) goto LAB_004065d4;\n  }\n  param_1 = &local_1c;\nLAB_004065d4:\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (cVar1 = FUN_004067a0(0), cVar1 == '\\0')) {\n    sVar2 = 1;\n    *param_1 = (uint)*param_2;\n  }\n  return sVar2;\n}\n\n",
            "funcName": "FUN_004065b0"
        },
        {
            "funcStartAddr": "0x406630",
            "funcEndAddr": "0x406713",
            "decompiledFuncCode": "\nulong * FUN_00406630(ulong *param_1,char param_2,ulong param_3)\n\n{\n  char cVar1;\n  ulong uVar2;\n  ulong *puVar3;\n  ulong uVar4;\n  \n  if (param_3 == 0) {\n    return (ulong *)0x0;\n  }\n  if (((ulong)param_1 & 7) == 0) {\nLAB_00406670:\n    uVar4 = (long)(int)(uint)CONCAT11(param_2,param_2) |\n            (long)(int)(uint)CONCAT11(param_2,param_2) << 0x10;\n    uVar4 = uVar4 | uVar4 << 0x20;\n    if (7 < param_3) {\n      uVar2 = *param_1 ^ uVar4;\n      for (uVar2 = ~uVar2 & uVar2 + 0xfefefefefefefeff; (uVar2 & 0x8080808080808080) == 0;\n          uVar2 = ~uVar2 & uVar2 + 0xfefefefefefefeff) {\n        param_3 = param_3 - 8;\n        param_1 = param_1 + 1;\n        if (param_3 < 8) {\n          if (param_3 == 0) {\n            return (ulong *)0x0;\n          }\n          break;\n        }\n        uVar2 = *param_1 ^ uVar4;\n      }\n    }\n    if (param_2 != *(char *)param_1) {\n      puVar3 = (ulong *)((long)param_1 + param_3);\n      do {\n        param_1 = (ulong *)((long)param_1 + 1);\n        if (param_1 == puVar3) {\n          return (ulong *)0x0;\n        }\n      } while (*(char *)param_1 != param_2);\n    }\n  }\n  else {\n    cVar1 = *(char *)param_1;\n    while (param_2 != cVar1) {\n      param_1 = (ulong *)((long)param_1 + 1);\n      param_3 = param_3 - 1;\n      if (param_3 == 0) {\n        return (ulong *)0x0;\n      }\n      if (((ulong)param_1 & 7) == 0) goto LAB_00406670;\n      cVar1 = *(char *)param_1;\n    }\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_00406630"
        },
        {
            "funcStartAddr": "0x406740",
            "funcEndAddr": "0x40679c",
            "decompiledFuncCode": "\nulong FUN_00406740(uint *param_1)\n\n{\n  uint uVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  uVar1 = *param_1;\n  uVar3 = FUN_004056c0(param_1);\n  if ((uVar1 & 0x20) == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_00406740"
        },
        {
            "funcStartAddr": "0x4067a0",
            "funcEndAddr": "0x4067f6",
            "decompiledFuncCode": "\nbool FUN_004067a0(int param_1)\n\n{\n  bool bVar1;\n  byte *pbVar2;\n  long lVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  bool bVar8;\n  byte bVar9;\n  \n  bVar9 = 0;\n  pbVar2 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar1 = true;\n  bVar6 = false;\n  bVar8 = pbVar2 == (byte *)0x0;\n  if (!bVar8) {\n    lVar3 = 2;\n    pbVar4 = pbVar2;\n    pbVar5 = &DAT_00408c24;\n    do {\n      if (lVar3 == 0) break;\n      lVar3 = lVar3 + -1;\n      bVar6 = *pbVar4 < *pbVar5;\n      bVar8 = *pbVar4 == *pbVar5;\n      pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      pbVar5 = pbVar5 + (ulong)bVar9 * -2 + 1;\n    } while (bVar8);\n    bVar1 = false;\n    bVar7 = false;\n    bVar6 = (!bVar6 && !bVar8) == bVar6;\n    if (!bVar6) {\n      lVar3 = 6;\n      pbVar4 = (byte *)\"POSIX\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar2 < *pbVar4;\n        bVar6 = *pbVar2 == *pbVar4;\n        pbVar2 = pbVar2 + (ulong)bVar9 * -2 + 1;\n        pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      } while (bVar6);\n      return (!bVar7 && !bVar6) != bVar7;\n    }\n  }\n  return bVar1;\n}\n\n",
            "funcName": "FUN_004067a0"
        },
        {
            "funcStartAddr": "0x406800",
            "funcEndAddr": "0x406d54",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nchar * FUN_00406800(void)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  char *__s1;\n  size_t sVar5;\n  size_t sVar6;\n  char *pcVar7;\n  size_t __n;\n  char *__file;\n  FILE *__stream;\n  byte *pbVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  long lVar11;\n  ulong uVar12;\n  undefined8 *puVar13;\n  char *__ptr;\n  bool bVar14;\n  long local_d0;\n  undefined8 local_c0;\n  undefined8 local_b8;\n  undefined auStack_80 [8];\n  undefined8 local_78;\n  \n  __s1 = nl_langinfo(0xe);\n  if (__s1 == (char *)0x0) {\n    __s1 = \"\";\n  }\n  if (DAT_0060b438 != (char *)0x0) goto LAB_0040683a;\n  pcVar7 = getenv(\"CHARSETALIASDIR\");\n  if ((pcVar7 == (char *)0x0) || (*pcVar7 == '\\0')) {\n    sVar6 = 0x73;\n    sVar5 = 0x65;\n    __n = 100;\n    pcVar7 = \n    \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\"\n    ;\nLAB_00406925:\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      __file[__n] = '/';\n      goto LAB_00406946;\n    }\n  }\n  else {\n    __n = strlen(pcVar7);\n    if (__n == 0) {\n      sVar6 = 0xe;\n    }\n    else {\n      if (pcVar7[__n - 1] != '/') {\n        sVar6 = __n + 0xf;\n        sVar5 = __n + 1;\n        goto LAB_00406925;\n      }\n      sVar6 = __n + 0xe;\n    }\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      sVar5 = __n;\nLAB_00406946:\n      puVar13 = (undefined8 *)(__file + sVar5);\n      *puVar13 = 0x2e74657372616863;\n      *(undefined2 *)((long)puVar13 + 0xc) = 0x73;\n      *(undefined4 *)(puVar13 + 1) = 0x61696c61;\n      iVar2 = open(__file,0);\n      if (-1 < iVar2) {\n        __stream = fdopen(iVar2,\"r\");\n        local_d0 = 0;\n        if (__stream != (FILE *)0x0) {\n          pcVar7 = (char *)0x0;\nLAB_004069e0:\n          pbVar8 = (byte *)__stream->_IO_read_ptr;\n          if (__stream->_IO_read_end <= pbVar8) goto LAB_00406b6c;\n          do {\n            __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n            uVar4 = (uint)*pbVar8;\n            __ptr = pcVar7;\n            while( true ) {\n              pcVar7 = __ptr;\n              if ((uVar4 - 9 < 2) || (uVar4 == 0x20)) goto LAB_004069e0;\n              if (uVar4 == 0x23) goto LAB_00406bd1;\n              ungetc(uVar4,__stream);\n              iVar2 = fscanf(__stream,\"%50s %50s\",&local_b8,&local_78);\n              puVar13 = &local_b8;\n              if (iVar2 < 2) goto LAB_00406b7f;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              lVar11 = (long)puVar13 +\n                       ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_b8);\n              puVar13 = &local_78;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              local_c0 = (long)puVar13 +\n                         ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_78);\n              lVar9 = lVar11 + local_c0;\n              if (local_d0 == 0) {\n                pcVar7 = (char *)malloc(lVar9 + 3);\n              }\n              else {\n                lVar9 = lVar9 + local_d0;\n                pcVar7 = (char *)realloc(__ptr,lVar9 + 3);\n              }\n              local_d0 = lVar9 + 2;\n              if (pcVar7 == (char *)0x0) {\n                pcVar7 = \"\";\n                free(__ptr);\n                FUN_004056c0(__stream);\n                goto LAB_00406984;\n              }\n              uVar12 = lVar11 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (-2 - lVar11) + (local_d0 - local_c0));\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_b8;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 2));\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_b8;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 4));\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_b8._4_4_,(undefined4)local_b8);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 8));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_b8 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              uVar12 = local_c0 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (local_d0 - local_c0) + -1);\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_78;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 6);\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_78;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 4);\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_78._4_4_,(undefined4)local_78);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)auStack_80 + (uVar12 & 0xffffffff));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_78 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              pbVar8 = (byte *)__stream->_IO_read_ptr;\n              if (pbVar8 < __stream->_IO_read_end) break;\nLAB_00406b6c:\n              uVar4 = __uflow(__stream);\n              __ptr = pcVar7;\n              if (uVar4 == 0xffffffff) goto LAB_00406b7f;\n            }\n          } while( true );\n        }\n        close(iVar2);\n      }\n      goto LAB_0040697e;\n    }\n  }\n  DAT_0060b438 = \"\";\nLAB_0040683a:\n  cVar1 = *DAT_0060b438;\n  pcVar7 = DAT_0060b438;\n  do {\n    if (cVar1 == '\\0') {\nLAB_00406894:\n      if (*__s1 == '\\0') {\n        __s1 = \"ASCII\";\n      }\n      return __s1;\n    }\n    iVar2 = strcmp(__s1,pcVar7);\n    if ((iVar2 == 0) || ((cVar1 == '*' && (pcVar7[1] == '\\0')))) {\n      sVar6 = strlen(pcVar7);\n      __s1 = pcVar7 + sVar6 + 1;\n      goto LAB_00406894;\n    }\n    sVar6 = strlen(pcVar7);\n    sVar5 = strlen(pcVar7 + sVar6 + 1);\n    pcVar7 = pcVar7 + sVar6 + 1 + sVar5 + 1;\n    cVar1 = *pcVar7;\n  } while( true );\nLAB_00406bd1:\n  do {\n    pbVar8 = (byte *)__stream->_IO_read_ptr;\n    if (pbVar8 < __stream->_IO_read_end) {\n      __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n      uVar4 = (uint)*pbVar8;\n      bVar14 = true;\n    }\n    else {\n      uVar4 = __uflow(__stream);\n      bVar14 = uVar4 != 0xffffffff;\n    }\n  } while ((uVar4 != 10) && (bVar14));\n  if (uVar4 == 0xffffffff) goto LAB_00406b7f;\n  goto LAB_004069e0;\nLAB_00406b7f:\n  FUN_004056c0(__stream);\n  if (local_d0 == 0) {\nLAB_0040697e:\n    pcVar7 = \"\";\n  }\n  else {\n    pcVar7[local_d0] = '\\0';\n  }\nLAB_00406984:\n  free(__file);\n  DAT_0060b438 = pcVar7;\n  goto LAB_0040683a;\n}\n\n",
            "funcName": "FUN_00406800"
        },
        {
            "funcStartAddr": "0x406d70",
            "funcEndAddr": "0x406dcd",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00406da3) */\n/* WARNING: Removing unreachable block (ram,0x00406da8) */\n\nvoid FUN_00406d70(void)\n\n{\n  __DT_INIT();\n  return;\n}\n\n",
            "funcName": "FUN_00406d70"
        },
        {
            "funcStartAddr": "0x406dd0",
            "funcEndAddr": "0x406dd1",
            "decompiledFuncCode": "\nvoid FUN_00406dd0(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00406dd0"
        },
        {
            "funcStartAddr": "0x406de0",
            "funcEndAddr": "0x406df8",
            "decompiledFuncCode": "\nvoid FUN_00406de0(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,DAT_0060b1e8);\n  return;\n}\n\n",
            "funcName": "FUN_00406de0"
        },
        {
            "funcStartAddr": "0x406df8",
            "funcEndAddr": "0x406e18",
            "decompiledFuncCode": "\nundefined8 FUN_00406df8(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  code **ppcVar1;\n  \n  for (ppcVar1 = (code **)&DAT_0060ae30; *ppcVar1 != (code *)0xffffffffffffffff;\n      ppcVar1 = ppcVar1 + -1) {\n    (**ppcVar1)();\n  }\n  return param_3;\n}\n\n",
            "funcName": "FUN_00406df8"
        }
    ],
    "decompilerName": "Ghidra",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_base32.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O"
}