{
    "funcCount": 109,
    "funcInfo": [
        {
            "funcStartAddr": "0x401715",
            "funcEndAddr": "0x40171a",
            "decompiledFuncCode": "\nvoid FUN_00401715(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401715"
        },
        {
            "funcStartAddr": "0x40171a",
            "funcEndAddr": "0x40171f",
            "decompiledFuncCode": "\nvoid FUN_0040171a(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040171a"
        },
        {
            "funcStartAddr": "0x40171f",
            "funcEndAddr": "0x401724",
            "decompiledFuncCode": "\nvoid FUN_0040171f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040171f"
        },
        {
            "funcStartAddr": "0x401724",
            "funcEndAddr": "0x401729",
            "decompiledFuncCode": "\nvoid FUN_00401724(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401724"
        },
        {
            "funcStartAddr": "0x401730",
            "funcEndAddr": "0x401a38",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined  [16] FUN_00401730(int param_1,undefined8 *param_2)\n\n{\n  char cVar1;\n  int iVar2;\n  long lVar3;\n  undefined8 uVar4;\n  ulong uVar5;\n  char *pcVar6;\n  byte bVar7;\n  undefined8 uStack_28;\n  \n  bVar7 = 0;\n  FUN_00402a40(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\n                 \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\"\n                );\n  textdomain(\"coreutils\");\n  DAT_0060a2cb = FUN_00402800(3);\n  FUN_00406910(FUN_00402680);\n  DAT_0060a2ca = 1;\n  DAT_0060a2c9 = 1;\n  DAT_0060a2c8 = 1;\n  DAT_0060a2c7 = 0;\n  _DAT_0060a2c5 = 0;\n  DAT_0060a2c0 = 0;\n  DAT_0060a2c4 = 0;\nLAB_004017d0:\n  do {\n    iVar2 = FUN_00405ff0(param_1,param_2,&DAT_0040709d,&PTR_s_check_order_00407120,0);\n    pcVar6 = DAT_0060a480;\n    if (iVar2 == -1) {\n      if (DAT_0060a2b8 == 0) {\n        DAT_0060a2b8 = 1;\n      }\n      lVar3 = (long)DAT_0060a278._4_4_;\n      iVar2 = DAT_0060a278._4_4_;\n      if (param_1 - DAT_0060a278._4_4_ < 2) goto LAB_00401a27;\n      if (param_1 - DAT_0060a278._4_4_ == 2) {\n        FUN_00401ca0(param_2 + lVar3);\n        if (DAT_0060a2c5 == '\\0') {\n          uVar5 = (ulong)DAT_0060a2c6;\n        }\n        else {\n          uVar5 = 1;\n        }\n        return CONCAT88(uStack_28,uVar5);\n      }\nLAB_004019cc:\n      param_2 = (undefined8 *)FUN_00404660(param_2[lVar3 + 2]);\n      pcVar6 = \"extra operand %s\";\n      goto LAB_004019e3;\n    }\n    if (iVar2 == 0x33) {\n      DAT_0060a2c8 = 0;\n      goto LAB_004017d0;\n    }\n    if (iVar2 < 0x34) {\n      if (iVar2 == -0x82) {\n        lVar3 = FUN_00402220(0);\n        goto LAB_004019cc;\n      }\n      if (iVar2 < -0x81) {\n        if (iVar2 == -0x83) {\n          FUN_00404af0(stdout,&DAT_00406fec,\"GNU coreutils\",PTR_DAT_0060a200,\"Richard M. Stallman\",\n                       \"David MacKenzie\",0);\n                    /* WARNING: Subroutine does not return */\n          exit(0);\n        }\nLAB_004019fb:\n        do {\n          while( true ) {\n            FUN_00402220(1);\nLAB_00401a05:\n            uVar4 = dcgettext(0,\"multiple output delimiters specified\",5);\n            iVar2 = error(1,0,uVar4);\nLAB_00401a27:\n            if (iVar2 < param_1) break;\n            uVar4 = dcgettext(0,\"missing operand\",5);\n            error(0,0,uVar4);\n          }\n          param_2 = (undefined8 *)FUN_00404660(param_2[(long)param_1 + -1]);\n          pcVar6 = \"missing operand after %s\";\nLAB_004019e3:\n          uVar4 = dcgettext(0,pcVar6,5);\n          error(0,0,uVar4,param_2);\n        } while( true );\n      }\n      if (iVar2 == 0x31) {\n        DAT_0060a2ca = 0;\n      }\n      else {\n        if (iVar2 != 0x32) goto LAB_004019fb;\n        DAT_0060a2c9 = 0;\n      }\n    }\n    else if (iVar2 == 0x81) {\n      DAT_0060a2c0 = 2;\n    }\n    else if (iVar2 < 0x82) {\n      if (iVar2 == 0x7a) {\n        DAT_0060a1f8 = 0;\n      }\n      else {\n        if (iVar2 != 0x80) goto LAB_004019fb;\n        DAT_0060a2c0 = 1;\n      }\n    }\n    else if (iVar2 == 0x82) {\n      if ((DAT_0060a2b8 != 0) && (iVar2 = strcmp(PTR_DAT_0060a1f0,DAT_0060a480), iVar2 != 0))\n      goto LAB_00401a05;\n      DAT_0060a2b8 = 1;\n      PTR_DAT_0060a1f0 = pcVar6;\n      if (*pcVar6 != '\\0') {\n        uVar5 = 0xffffffffffffffff;\n        do {\n          if (uVar5 == 0) break;\n          uVar5 = uVar5 - 1;\n          cVar1 = *pcVar6;\n          pcVar6 = pcVar6 + (ulong)bVar7 * -2 + 1;\n        } while (cVar1 != '\\0');\n        DAT_0060a2b8 = ~uVar5 - 1;\n      }\n    }\n    else {\n      if (iVar2 != 0x83) goto LAB_004019fb;\n      DAT_0060a2c4 = 1;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_00401730"
        },
        {
            "funcStartAddr": "0x401a70",
            "funcEndAddr": "0x401a9b",
            "decompiledFuncCode": "\nvoid FUN_00401a70(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00609ff0)\n            (FUN_00401730,unaff_retaddr,&stack0x00000008,FUN_004068a0,FUN_00406900,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "funcName": "FUN_00401a70"
        },
        {
            "funcStartAddr": "0x401a9b",
            "funcEndAddr": "0x401aba",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00401aa8) */\n/* WARNING: Removing unreachable block (ram,0x00401ab2) */\n\nvoid FUN_00401a9b(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00401a9b"
        },
        {
            "funcStartAddr": "0x401aba",
            "funcEndAddr": "0x401af1",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00401ae9) */\n\nvoid FUN_00401aba(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00401aba"
        },
        {
            "funcStartAddr": "0x401af1",
            "funcEndAddr": "0x401b48",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00401b26) */\n\nvoid FUN_00401af1(void)\n\n{\n  if (DAT_0060a2a8 != '\\0') {\n    return;\n  }\n  FUN_00401a9b();\n  DAT_0060a2a8 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00401af1"
        },
        {
            "funcStartAddr": "0x401b48",
            "funcEndAddr": "0x401b4d",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00401ae9) */\n\nvoid thunk_FUN_00401aba(void)\n\n{\n  return;\n}\n\n",
            "funcName": "thunk_401b48"
        },
        {
            "funcStartAddr": "0x401b50",
            "funcEndAddr": "0x401bf8",
            "decompiledFuncCode": "\nvoid FUN_00401b50(size_t *param_1,void **param_2,FILE *param_3,int param_4)\n\n{\n  if (param_4 == 2) {\n    if (DAT_0060a2c9 == '\\0') {\n      return;\n    }\n    if (DAT_0060a2ca == '\\0') goto LAB_00401b70;\n  }\n  else {\n    if (param_4 != 3) {\n      if (DAT_0060a2ca == '\\0') {\n        return;\n      }\n      goto LAB_00401b70;\n    }\n    if (DAT_0060a2c8 == '\\0') {\n      return;\n    }\n    if (DAT_0060a2ca != '\\0') {\n      fwrite_unlocked(PTR_DAT_0060a1f0,1,DAT_0060a2b8,param_3);\n    }\n    if (DAT_0060a2c9 == '\\0') goto LAB_00401b70;\n  }\n  fwrite_unlocked(PTR_DAT_0060a1f0,1,DAT_0060a2b8,param_3);\nLAB_00401b70:\n  fwrite_unlocked(*param_2,1,*param_1,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00401b50"
        },
        {
            "funcStartAddr": "0x401c10",
            "funcEndAddr": "0x401c96",
            "decompiledFuncCode": "\nvoid FUN_00401c10(long *param_1,undefined8 *param_2,long *param_3,undefined8 *param_4,int param_5)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  \n  if ((&DAT_0060a2c5)[param_5 + -1] == '\\0') {\n    if (DAT_0060a2cb == '\\0') {\n      iVar1 = FUN_00402a00();\n    }\n    else {\n      iVar1 = FUN_00404f80(*param_2,*param_1 + -1,*param_4,*param_3 + -1);\n    }\n    if (0 < iVar1) {\n      uVar2 = dcgettext(0,\"file %d is not in sorted order\",5);\n      error(DAT_0060a2c0 == 1,0,uVar2,param_5);\n      (&DAT_0060a2c5)[param_5 + -1] = 1;\n    }\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00401c10"
        },
        {
            "funcStartAddr": "0x401ca0",
            "funcEndAddr": "0x402211",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nvoid FUN_00401ca0(byte **param_1)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  FILE *pFVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  int iVar7;\n  uint *puVar8;\n  uint *puVar9;\n  undefined8 uVar10;\n  int *piVar11;\n  undefined8 uVar12;\n  char *pcVar13;\n  byte **ppbVar14;\n  long lVar16;\n  ulong uVar17;\n  undefined *puVar18;\n  undefined *puVar19;\n  uint *puVar20;\n  byte *pbVar21;\n  byte *pbVar22;\n  byte *pbVar23;\n  ulong uVar24;\n  long *plVar25;\n  bool bVar26;\n  bool bVar27;\n  byte bVar28;\n  byte *pbStack_290;\n  char *pcStack_288;\n  byte *apbStack_280 [5];\n  char *pcStack_258;\n  char *pcStack_250;\n  char *pcStack_248;\n  char *pcStack_240;\n  char *pcStack_238;\n  undefined8 uStack_230;\n  undefined8 uStack_228;\n  undefined *puStack_220;\n  uint *puStack_218;\n  ulong uStack_210;\n  undefined *local_208;\n  long local_200;\n  long local_1f8;\n  long local_1f0;\n  uint local_1e8;\n  uint local_1e4;\n  byte **local_1e0;\n  uint *local_1d8;\n  long local_1d0;\n  uint *local_1c8 [2];\n  undefined local_1b8 [32];\n  undefined local_198 [32];\n  undefined2 local_178;\n  uint local_158 [8];\n  long local_138 [20];\n  undefined local_98 [104];\n  byte **ppbVar15;\n  \n  bVar28 = 0;\n  uVar24 = 0;\n  puVar18 = local_98;\n  puVar20 = local_158;\n  local_1e0 = param_1;\n  do {\n    local_208 = (undefined *)((ulong)local_208 & 0xffffffff00000000 | uVar24);\n    puVar19 = puVar18 + -0x60;\n    plVar25 = local_138 + uVar24 * 4;\n    do {\n      uStack_210 = 0x401cf3;\n      FUN_004028b0(puVar19);\n      *plVar25 = (long)puVar19;\n      puVar19 = puVar19 + 0x18;\n      bVar26 = puVar18 < puVar19;\n      bVar27 = puVar18 == puVar19;\n      plVar25 = plVar25 + 1;\n    } while (!bVar27);\n    pbVar21 = *param_1;\n    lVar16 = 2;\n    *puVar20 = 0;\n    puVar20[1] = 0;\n    puVar20[2] = 0;\n    pbVar22 = pbVar21;\n    pbVar23 = &DAT_00408502;\n    do {\n      if (lVar16 == 0) break;\n      lVar16 = lVar16 + -1;\n      bVar26 = *pbVar22 < *pbVar23;\n      bVar27 = *pbVar22 == *pbVar23;\n      pbVar22 = pbVar22 + (ulong)bVar28 * -2 + 1;\n      pbVar23 = pbVar23 + (ulong)bVar28 * -2 + 1;\n    } while (bVar27);\n    puStack_218 = stdin;\n    if ((!bVar26 && !bVar27) != bVar26) {\n      uStack_210 = 0x4020ac;\n      puStack_218 = (uint *)FUN_00402760(pbVar21,\"r\");\n    }\n    local_1c8[uVar24] = puStack_218;\n    if (puStack_218 == (uint *)0x0) goto LAB_004021f0;\n    uStack_210 = 0x401d59;\n    FUN_00402730(puStack_218,2);\n    uStack_210 = 0x401d78;\n    puVar8 = (uint *)FUN_004028c0(local_138[(long)(int)local_208 * 4],puStack_218,\n                                  (int)(char)DAT_0060a1f8);\n    (&local_1d8)[uVar24] = puVar8;\n    if ((*puStack_218 & 0x20) != 0) goto LAB_004021c3;\n    param_1 = param_1 + 1;\n    puVar20 = puVar20 + 3;\n    puVar18 = puVar18 + 0x60;\n    if (uVar24 == 1) break;\n    uVar24 = 1;\n  } while( true );\n  local_1f0 = 0;\n  local_200 = 0;\n  local_1f8 = 0;\n  local_1e4 = *puStack_218 & 0x20;\nLAB_00401dc8:\n  lVar16 = local_1d0;\n  puVar20 = local_1d8;\n  if (local_1d8 == (uint *)0x0) {\n    if (local_1d0 == 0) {\n      uStack_210 = 0x40206a;\n      iVar6 = FUN_00405040(local_1c8[0]);\n      if (iVar6 == 0) {\n        uStack_210 = 0x40207c;\n        iVar6 = FUN_00405040(local_1c8[1]);\n        if (iVar6 == 0) {\n          if (DAT_0060a2c4 != '\\0') {\n            uVar24 = (ulong)DAT_0060a1f8;\n            uStack_210 = 0x4020cd;\n            puStack_218 = (uint *)dcgettext(0,\"total\",5);\n            puStack_220 = PTR_DAT_0060a1f0;\n            uStack_210 = 0x4020e9;\n            uStack_228 = FUN_00402860(local_1f0,&local_178);\n            local_208 = PTR_DAT_0060a1f0;\n            uStack_210 = 0x402106;\n            uVar10 = FUN_00402860(local_200,local_198);\n            puVar18 = PTR_DAT_0060a1f0;\n            uStack_210 = 0x40211f;\n            uVar12 = FUN_00402860(local_1f8,local_1b8);\n            uStack_230 = 0x402144;\n            uStack_210 = uVar24;\n            __printf_chk(1,\"%s%s%s%s%s%s%s%c\",uVar12,puVar18,uVar10,local_208);\n          }\n          return;\n        }\nLAB_00402183:\n        local_1e4 = 1;\n      }\n      uStack_210 = 0x4021a5;\n      uVar10 = FUN_004044e0(0,3,local_1e0[(int)local_1e4]);\n      uStack_210 = 0x4021ad;\n      piVar11 = __errno_location();\n      uStack_210 = 0x4021c3;\n      error(1,*piVar11,\"%s\",uVar10);\n      puStack_218 = local_1d8;\nLAB_004021c3:\n      uStack_210 = 0x4021d2;\n      uVar10 = FUN_004044e0(0,3,*param_1);\n      uStack_210 = 0x4021da;\n      piVar11 = __errno_location();\n      uStack_210 = 0x4021f0;\n      error(1,*piVar11,\"%s\",uVar10);\nLAB_004021f0:\n      uStack_210 = 0x4021ff;\n      puStack_220 = (undefined *)FUN_004044e0(0,3,*param_1);\n      uStack_210 = 0x402207;\n      piVar11 = __errno_location();\n      iVar6 = 1;\n      uStack_210 = 0x40221d;\n      error(1,*piVar11,\"%s\",puStack_220);\n      uVar10 = DAT_0060a2e0;\n      uStack_210 = uVar24;\n      if (iVar6 != 0) {\n        uVar12 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n        __fprintf_chk(stderr,1,uVar12,uVar10);\n        goto LAB_0040225f;\n      }\n      uVar12 = dcgettext(0,\"Usage: %s [OPTION]... FILE1 FILE2\\n\",5);\n      __printf_chk(1,uVar12,uVar10);\n      pFVar3 = stdout;\n      pcVar13 = (char *)dcgettext(0,\"Compare sorted files FILE1 and FILE2 line by line.\\n\",5);\n      fputs_unlocked(pcVar13,pFVar3);\n      pFVar3 = stdout;\n      pcVar13 = (char *)dcgettext(0,\"\\nWhen FILE1 or FILE2 (not both) is -, read standard input.\\n\",\n                                  5);\n      fputs_unlocked(pcVar13,pFVar3);\n      pFVar3 = stdout;\n      pcVar13 = (char *)dcgettext(0,\n                                  \"\\nWith no options, produce three-column output.  Column one contains\\nlines unique to FILE1, column two contains lines unique to FILE2,\\nand column three contains lines common to both files.\\n\"\n                                  ,5);\n      fputs_unlocked(pcVar13,pFVar3);\n      pFVar3 = stdout;\n      pcVar13 = (char *)dcgettext(0,\n                                  \"\\n  -1              suppress column 1 (lines unique to FILE1)\\n  -2              suppress column 2 (lines unique to FILE2)\\n  -3              suppress column 3 (lines that appear in both files)\\n\"\n                                  ,5);\n      fputs_unlocked(pcVar13,pFVar3);\n      pFVar3 = stdout;\n      pcVar13 = (char *)dcgettext(0,\n                                  \"\\n  --check-order     check that the input is correctly sorted, even\\n                      if all input lines are pairable\\n  --nocheck-order   do not check that the input is correctly sorted\\n\"\n                                  ,5);\n      fputs_unlocked(pcVar13,pFVar3);\n      pFVar3 = stdout;\n      pcVar13 = (char *)dcgettext(0,\"  --output-delimiter=STR  separate columns with STR\\n\",5);\n      fputs_unlocked(pcVar13,pFVar3);\n      pFVar3 = stdout;\n      pcVar13 = (char *)dcgettext(0,\"  --total           output a summary\\n\",5);\n      fputs_unlocked(pcVar13,pFVar3);\n      pFVar3 = stdout;\n      pcVar13 = (char *)dcgettext(0,\n                                  \"  -z, --zero-terminated    line delimiter is NUL, not newline\\n\",\n                                  5);\n      fputs_unlocked(pcVar13,pFVar3);\n      pFVar3 = stdout;\n      pcVar13 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n      fputs_unlocked(pcVar13,pFVar3);\n      pFVar3 = stdout;\n      pcVar13 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n      fputs_unlocked(pcVar13,pFVar3);\n      pFVar3 = stdout;\n      pcVar13 = (char *)dcgettext(0,\n                                  \"\\nNote, comparisons honor the rules specified by \\'LC_COLLATE\\'.\\n\"\n                                  ,5);\n      fputs_unlocked(pcVar13,pFVar3);\n      uVar10 = DAT_0060a2e0;\n      uVar12 = dcgettext(0,\n                         \"\\nExamples:\\n  %s -12 file1 file2  Print only lines present in both file1 and file2.\\n  %s -3 file1 file2  Print lines in file1 not in file2, and vice versa.\\n\"\n                         ,5);\n      __printf_chk(1,uVar12,uVar10,uVar10);\n      pbStack_290 = &DAT_00406ff1;\n      pcStack_288 = \"test invocation\";\n      apbStack_280[0] = (byte *)0x40706b;\n      apbStack_280[1] = (byte *)0x407003;\n      apbStack_280[2] = (byte *)0x407019;\n      apbStack_280[3] = (byte *)0x407023;\n      apbStack_280[4] = (byte *)0x407032;\n      pcStack_258 = \"sha2 utilities\";\n      pcStack_250 = \"sha384sum\";\n      pcStack_248 = \"sha2 utilities\";\n      pcStack_240 = \"sha512sum\";\n      pcStack_238 = \"sha2 utilities\";\n      uStack_230 = 0;\n      uStack_228 = 0;\n      ppbVar14 = &pbStack_290;\n      do {\n        ppbVar15 = ppbVar14;\n        ppbVar14 = ppbVar15 + 2;\n        pbVar21 = *ppbVar14;\n        bVar26 = false;\n        bVar27 = pbVar21 == (byte *)0x0;\n        if (bVar27) break;\n        lVar16 = 5;\n        pbVar22 = &DAT_00406fec;\n        do {\n          if (lVar16 == 0) break;\n          lVar16 = lVar16 + -1;\n          bVar26 = *pbVar22 < *pbVar21;\n          bVar27 = *pbVar22 == *pbVar21;\n          pbVar22 = pbVar22 + (ulong)bVar28 * -2 + 1;\n          pbVar21 = pbVar21 + (ulong)bVar28 * -2 + 1;\n        } while (bVar27);\n      } while ((!bVar26 && !bVar27) != bVar26);\n      pbVar21 = ppbVar15[3];\n      if (pbVar21 == (byte *)0x0) {\n        uVar10 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n        __printf_chk(1,uVar10,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n        pcVar13 = setlocale(5,(char *)0x0);\n        if ((pcVar13 != (char *)0x0) && (iVar7 = strncmp(pcVar13,\"en_\",3), iVar7 != 0)) {\n          pbVar21 = &DAT_00406fec;\n          goto LAB_0040262b;\n        }\n        pbVar21 = &DAT_00406fec;\n        uVar10 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n        pcVar13 = \" invocation\";\n        __printf_chk(1,uVar10,\"https://www.gnu.org/software/coreutils/\",&DAT_00406fec);\n      }\n      else {\n        uVar10 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n        __printf_chk(1,uVar10,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n        pcVar13 = setlocale(5,(char *)0x0);\n        if ((pcVar13 != (char *)0x0) && (iVar7 = strncmp(pcVar13,\"en_\",3), iVar7 != 0)) {\nLAB_0040262b:\n          uVar10 = dcgettext(0,\n                             \"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                             ,5);\n          __printf_chk(1,uVar10,&DAT_00406fec);\n        }\n        pcVar13 = \" invocation\";\n        uVar10 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n        __printf_chk(1,uVar10,\"https://www.gnu.org/software/coreutils/\",&DAT_00406fec);\n        if (pbVar21 != &DAT_00406fec) {\n          pcVar13 = \"\";\n        }\n      }\n      uVar10 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n      __printf_chk(1,uVar10,pbVar21,pcVar13);\nLAB_0040225f:\n                    /* WARNING: Subroutine does not return */\n      exit(iVar6);\n    }\n    local_178 = local_178 & 0xff00;\nLAB_00401fd7:\n    DAT_0060a2c7 = '\\x01';\n    local_200 = local_200 + 1;\n    uStack_210 = 0x401fef;\n    FUN_00401b50(lVar16 + 8,lVar16 + 0x10,stdout,2);\n    local_178 = CONCAT11(1,(undefined)local_178);\n    bVar26 = false;\n  }\n  else {\n    local_178 = 0;\n    if (local_1d0 == 0) {\nLAB_0040200e:\n      DAT_0060a2c7 = '\\x01';\n      local_1f8 = local_1f8 + 1;\n      uStack_210 = 0x402026;\n      FUN_00401b50(puVar20 + 2,puVar20 + 4,stdout,1);\n    }\n    else {\n      uVar1 = *(ulong *)(local_1d0 + 8);\n      uVar2 = *(ulong *)(local_1d8 + 2);\n      if (DAT_0060a2cb == '\\0') {\n        uVar17 = uVar2;\n        if (uVar1 <= uVar2) {\n          uVar17 = uVar1;\n        }\n        uStack_210 = 0x401e1e;\n        uVar4 = memcmp(*(void **)(local_1d8 + 4),*(void **)(local_1d0 + 0x10),uVar17 - 1);\n        if (uVar4 == 0) {\n          if (uVar2 < uVar1) goto LAB_0040200e;\n          uVar4 = (uint)(uVar1 != uVar2);\n          goto LAB_00401e35;\n        }\nLAB_00402037:\n        if (0 < (int)uVar4) goto LAB_00401fd7;\n        goto LAB_0040200e;\n      }\n      uStack_210 = 0x40205b;\n      uVar4 = FUN_00404f80(*(void **)(local_1d8 + 4),uVar2 - 1,*(void **)(local_1d0 + 0x10),\n                           uVar1 - 1);\nLAB_00401e35:\n      if (uVar4 != 0) goto LAB_00402037;\n      local_1f0 = local_1f0 + 1;\n      uStack_210 = 0x401e5c;\n      FUN_00401b50(lVar16 + 8,lVar16 + 0x10,stdout,3);\n      local_178 = 0x100;\n    }\n    local_178 = CONCAT11(local_178._1_1_,1);\n    bVar26 = true;\n  }\n  param_1 = (byte **)0x0;\n  puVar20 = local_158;\n  iVar6 = 0;\n  if (bVar26) goto LAB_00401eaa;\n  while (puVar20 = puVar20 + 3, param_1 != (byte **)0x1) {\n    iVar6 = 1;\n    param_1 = (byte **)0x1;\n    if (local_178._1_1_ != '\\0') {\nLAB_00401eaa:\n      uVar4 = *puVar20;\n      uVar24 = (ulong)(int)uVar4;\n      local_1e8 = puVar20[1];\n      puVar8 = local_1c8[(long)param_1];\n      local_208 = (undefined *)((long)param_1 * 4);\n      puVar20[2] = local_1e8;\n      uVar5 = uVar4 + 1 & 3;\n      puVar20[1] = uVar4;\n      *puVar20 = uVar5;\n      uStack_210 = 0x401ef4;\n      puVar9 = (uint *)FUN_004028c0(local_138[(long)(int)uVar5 + (long)param_1 * 4],puVar8,\n                                    (int)(char)DAT_0060a1f8);\n      (&local_1d8)[(long)param_1] = puVar9;\n      iVar7 = (int)param_1;\n      if (puVar9 == (uint *)0x0) {\n        lVar16 = local_138[(long)local_208 + (long)(int)local_1e8];\n        if (((*(long *)(lVar16 + 0x10) != 0) && (DAT_0060a2c0 != 2)) &&\n           ((DAT_0060a2c0 == 1 || (DAT_0060a2c7 != '\\0')))) {\n          uStack_210 = 0x401fb3;\n          FUN_00401c10(lVar16 + 8,lVar16 + 0x10,local_138[uVar24 + (long)iVar7 * 4] + 8,\n                       local_138[uVar24 + (long)iVar7 * 4] + 0x10,iVar6 + 1);\n        }\n      }\n      else if ((DAT_0060a2c0 != 2) && ((DAT_0060a2c0 == 1 || (DAT_0060a2c7 != '\\0')))) {\n        uStack_210 = 0x401f48;\n        FUN_00401c10(local_138[uVar24 + (long)iVar7 * 4] + 8,\n                     local_138[uVar24 + (long)iVar7 * 4] + 0x10,puVar9 + 2,puVar9 + 4,iVar6 + 1);\n      }\n      if ((*(byte *)puVar8 & 0x20) != 0) {\n        uStack_210 = 0x402165;\n        uVar10 = FUN_004044e0(0,3,local_1e0[iVar7]);\n        uStack_210 = 0x40216d;\n        piVar11 = __errno_location();\n        uStack_210 = 0x402183;\n        error(1,*piVar11,\"%s\",uVar10);\n        local_1d8 = puVar20;\n        goto LAB_00402183;\n      }\n      *(undefined *)((long)&local_178 + (long)param_1) = 0;\n    }\n  }\n  goto LAB_00401dc8;\n}\n\n",
            "funcName": "FUN_00401ca0"
        },
        {
            "funcStartAddr": "0x402220",
            "funcEndAddr": "0x402655",
            "decompiledFuncCode": "\nvoid FUN_00402220(int param_1)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  byte **ppbVar5;\n  undefined8 uVar7;\n  long lVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  bool bVar11;\n  bool bVar12;\n  byte bVar13;\n  byte *local_88;\n  char *local_80;\n  byte *local_78 [5];\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  char *local_38;\n  char *local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  byte **ppbVar6;\n  \n  uVar7 = DAT_0060a2e0;\n  bVar13 = 0;\n  if (param_1 != 0) {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar7);\n    goto LAB_0040225f;\n  }\n  uVar3 = dcgettext(0,\"Usage: %s [OPTION]... FILE1 FILE2\\n\",5);\n  __printf_chk(1,uVar3,uVar7);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"Compare sorted files FILE1 and FILE2 line by line.\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"\\nWhen FILE1 or FILE2 (not both) is -, read standard input.\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nWith no options, produce three-column output.  Column one contains\\nlines unique to FILE1, column two contains lines unique to FILE2,\\nand column three contains lines common to both files.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\n  -1              suppress column 1 (lines unique to FILE1)\\n  -2              suppress column 2 (lines unique to FILE2)\\n  -3              suppress column 3 (lines that appear in both files)\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\n  --check-order     check that the input is correctly sorted, even\\n                      if all input lines are pairable\\n  --nocheck-order   do not check that the input is correctly sorted\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"  --output-delimiter=STR  separate columns with STR\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"  --total           output a summary\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"  -z, --zero-terminated    line delimiter is NUL, not newline\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"\\nNote, comparisons honor the rules specified by \\'LC_COLLATE\\'.\\n\",\n                             5);\n  fputs_unlocked(pcVar4,pFVar1);\n  uVar7 = DAT_0060a2e0;\n  uVar3 = dcgettext(0,\n                    \"\\nExamples:\\n  %s -12 file1 file2  Print only lines present in both file1 and file2.\\n  %s -3 file1 file2  Print lines in file1 not in file2, and vice versa.\\n\"\n                    ,5);\n  __printf_chk(1,uVar3,uVar7,uVar7);\n  local_88 = &DAT_00406ff1;\n  local_80 = \"test invocation\";\n  local_78[0] = (byte *)0x40706b;\n  local_78[1] = (byte *)0x407003;\n  local_78[2] = (byte *)0x407019;\n  local_78[3] = (byte *)0x407023;\n  local_78[4] = (byte *)0x407032;\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha384sum\";\n  local_40 = \"sha2 utilities\";\n  local_38 = \"sha512sum\";\n  local_30 = \"sha2 utilities\";\n  local_28 = 0;\n  local_20 = 0;\n  ppbVar5 = &local_88;\n  do {\n    ppbVar6 = ppbVar5;\n    ppbVar5 = ppbVar6 + 2;\n    pbVar9 = *ppbVar5;\n    bVar11 = false;\n    bVar12 = pbVar9 == (byte *)0x0;\n    if (bVar12) break;\n    lVar8 = 5;\n    pbVar10 = &DAT_00406fec;\n    do {\n      if (lVar8 == 0) break;\n      lVar8 = lVar8 + -1;\n      bVar11 = *pbVar10 < *pbVar9;\n      bVar12 = *pbVar10 == *pbVar9;\n      pbVar10 = pbVar10 + (ulong)bVar13 * -2 + 1;\n      pbVar9 = pbVar9 + (ulong)bVar13 * -2 + 1;\n    } while (bVar12);\n  } while ((!bVar11 && !bVar12) != bVar11);\n  pbVar9 = ppbVar6[3];\n  if (pbVar9 == (byte *)0x0) {\n    uVar7 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar7,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\n        pbVar9 = &DAT_00406fec;\n        goto LAB_0040262b;\n      }\n    }\n    pbVar9 = &DAT_00406fec;\n    uVar7 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar4 = \" invocation\";\n    __printf_chk(1,uVar7,\"https://www.gnu.org/software/coreutils/\",&DAT_00406fec);\n  }\n  else {\n    uVar7 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar7,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\nLAB_0040262b:\n        uVar7 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar7,&DAT_00406fec);\n      }\n    }\n    pcVar4 = \" invocation\";\n    uVar7 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar7,\"https://www.gnu.org/software/coreutils/\",&DAT_00406fec);\n    if (pbVar9 != &DAT_00406fec) {\n      pcVar4 = \"\";\n    }\n  }\n  uVar7 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  __printf_chk(1,uVar7,pbVar9,pcVar4);\nLAB_0040225f:\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n",
            "funcName": "FUN_00402220"
        },
        {
            "funcStartAddr": "0x402660",
            "funcEndAddr": "0x402668",
            "decompiledFuncCode": "\nvoid FUN_00402660(undefined8 param_1)\n\n{\n  DAT_0060a2d8 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00402660"
        },
        {
            "funcStartAddr": "0x402670",
            "funcEndAddr": "0x402678",
            "decompiledFuncCode": "\nvoid FUN_00402670(undefined param_1)\n\n{\n  DAT_0060a2d0 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00402670"
        },
        {
            "funcStartAddr": "0x402680",
            "funcEndAddr": "0x40271e",
            "decompiledFuncCode": "\nvoid FUN_00402680(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_004060f0(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_0060a2d0 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_0060a2d8 == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = FUN_004044b0();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_004026fe;\n    }\n  }\n  iVar1 = FUN_004060f0(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_004026fe:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_0060a208);\n}\n\n",
            "funcName": "FUN_00402680"
        },
        {
            "funcStartAddr": "0x402720",
            "funcEndAddr": "0x402725",
            "decompiledFuncCode": "\nvoid FUN_00402720(void)\n\n{\n  (*(code *)PTR_posix_fadvise_0060a0d8)();\n  return;\n}\n\n",
            "funcName": "FUN_00402720"
        },
        {
            "funcStartAddr": "0x402730",
            "funcEndAddr": "0x40274c",
            "decompiledFuncCode": "\nvoid FUN_00402730(FILE *param_1,int param_2)\n\n{\n  int __fd;\n  \n  if (param_1 != (FILE *)0x0) {\n    __fd = fileno(param_1);\n    posix_fadvise(__fd,0,0,param_2);\n    return;\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00402730"
        },
        {
            "funcStartAddr": "0x402760",
            "funcEndAddr": "0x4027e9",
            "decompiledFuncCode": "\nFILE * FUN_00402760(char *param_1,char *param_2)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  FILE *__stream;\n  FILE *pFVar4;\n  int *piVar5;\n  \n  __stream = fopen(param_1,param_2);\n  pFVar4 = __stream;\n  if ((__stream != (FILE *)0x0) && (uVar1 = fileno(__stream), uVar1 < 3)) {\n    iVar2 = FUN_00404680(uVar1);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      pFVar4 = (FILE *)0x0;\n      iVar2 = *piVar5;\n      FUN_00405040(__stream);\n      *piVar5 = iVar2;\n    }\n    else {\n      iVar3 = FUN_00405040(__stream);\n      if ((iVar3 == 0) && (pFVar4 = fdopen(iVar2,param_2), pFVar4 != (FILE *)0x0)) {\n        return pFVar4;\n      }\n      piVar5 = __errno_location();\n      iVar3 = *piVar5;\n      close(iVar2);\n      *piVar5 = iVar3;\n      pFVar4 = (FILE *)0x0;\n    }\n  }\n  return pFVar4;\n}\n\n",
            "funcName": "FUN_00402760"
        },
        {
            "funcStartAddr": "0x402800",
            "funcEndAddr": "0x402856",
            "decompiledFuncCode": "\nbool FUN_00402800(int param_1)\n\n{\n  bool bVar1;\n  byte *pbVar2;\n  long lVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  bool bVar8;\n  byte bVar9;\n  \n  bVar9 = 0;\n  pbVar2 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar1 = true;\n  bVar6 = false;\n  bVar8 = pbVar2 == (byte *)0x0;\n  if (!bVar8) {\n    lVar3 = 2;\n    pbVar4 = pbVar2;\n    pbVar5 = &DAT_00407238;\n    do {\n      if (lVar3 == 0) break;\n      lVar3 = lVar3 + -1;\n      bVar6 = *pbVar4 < *pbVar5;\n      bVar8 = *pbVar4 == *pbVar5;\n      pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      pbVar5 = pbVar5 + (ulong)bVar9 * -2 + 1;\n    } while (bVar8);\n    bVar1 = false;\n    bVar7 = false;\n    bVar6 = (!bVar6 && !bVar8) == bVar6;\n    if (!bVar6) {\n      lVar3 = 6;\n      pbVar4 = (byte *)\"POSIX\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar2 < *pbVar4;\n        bVar6 = *pbVar2 == *pbVar4;\n        pbVar2 = pbVar2 + (ulong)bVar9 * -2 + 1;\n        pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      } while (bVar6);\n      return (!bVar7 && !bVar6) != bVar7;\n    }\n  }\n  return bVar1;\n}\n\n",
            "funcName": "FUN_00402800"
        },
        {
            "funcStartAddr": "0x402860",
            "funcEndAddr": "0x4028a4",
            "decompiledFuncCode": "\nchar * FUN_00402860(ulong param_1,long param_2)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  \n  pcVar2 = (char *)(param_2 + 0x14);\n  *(undefined *)(param_2 + 0x14) = 0;\n  do {\n    pcVar2 = pcVar2 + -1;\n    *pcVar2 = (char)param_1 + (char)(param_1 / 10) * -10 + '0';\n    bVar1 = 9 < param_1;\n    param_1 = param_1 / 10;\n  } while (bVar1);\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_00402860"
        },
        {
            "funcStartAddr": "0x4028b0",
            "funcEndAddr": "0x4028c0",
            "decompiledFuncCode": "\nvoid FUN_004028b0(undefined (*param_1) [16])\n\n{\n  *(undefined8 *)param_1[1] = 0;\n  *param_1 = (undefined  [16])0x0;\n  return;\n}\n\n",
            "funcName": "FUN_004028b0"
        },
        {
            "funcStartAddr": "0x4028c0",
            "funcEndAddr": "0x4029c6",
            "decompiledFuncCode": "\nlong * FUN_004028c0(long *param_1,_IO_FILE *param_2,uint param_3)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  uint uVar3;\n  char *pcVar4;\n  char *pcVar5;\n  char *pcVar6;\n  char cVar7;\n  uint uVar8;\n  char *pcVar9;\n  \n  cVar7 = (char)param_3;\n  pcVar5 = (char *)param_1[2];\n  pcVar9 = pcVar5 + *param_1;\n  pcVar6 = pcVar5;\n  if ((*(byte *)&param_2->_flags & 0x10) != 0) {\n    return (long *)0x0;\n  }\n  do {\n    pbVar1 = (byte *)param_2->_IO_read_ptr;\n    if (pbVar1 < param_2->_IO_read_end) {\n      param_2->_IO_read_ptr = (char *)(pbVar1 + 1);\n      uVar3 = (uint)*pbVar1;\nLAB_0040290b:\n      pcVar4 = pcVar6;\n      uVar8 = uVar3;\n      if (pcVar6 == pcVar9) goto LAB_00402967;\n    }\n    else {\n      uVar3 = __uflow(param_2);\n      if (uVar3 != 0xffffffff) goto LAB_0040290b;\n      if (pcVar5 == pcVar6) {\n        return (long *)0x0;\n      }\n      if ((*(byte *)&param_2->_flags & 0x20) != 0) {\n        return (long *)0x0;\n      }\n      if (pcVar6[-1] == cVar7) goto LAB_004029bc;\n      if (pcVar6 != pcVar9) {\n        *pcVar6 = cVar7;\n        pcVar6 = pcVar6 + 1;\n        goto LAB_004029bc;\n      }\n      uVar3 = (int)cVar7;\n      uVar8 = param_3 & 0xff;\nLAB_00402967:\n      lVar2 = *param_1;\n      pcVar5 = (char *)FUN_00404d90(pcVar5,param_1);\n      param_1[2] = (long)pcVar5;\n      pcVar9 = pcVar5 + *param_1;\n      pcVar4 = pcVar5 + lVar2;\n      uVar8 = uVar8 & 0xff;\n    }\n    pcVar6 = pcVar4 + 1;\n    *pcVar4 = (char)uVar8;\n    if (uVar3 == (int)cVar7) {\nLAB_004029bc:\n      param_1[1] = (long)pcVar6 - (long)pcVar5;\n      return param_1;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_004028c0"
        },
        {
            "funcStartAddr": "0x4029e0",
            "funcEndAddr": "0x4029ea",
            "decompiledFuncCode": "\nvoid FUN_004029e0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_004028c0(param_1,param_2,10);\n  return;\n}\n\n",
            "funcName": "FUN_004029e0"
        },
        {
            "funcStartAddr": "0x4029f0",
            "funcEndAddr": "0x4029f9",
            "decompiledFuncCode": "\nvoid FUN_004029f0(long param_1)\n\n{\n  free(*(void **)(param_1 + 0x10));\n  return;\n}\n\n",
            "funcName": "FUN_004029f0"
        },
        {
            "funcStartAddr": "0x402a00",
            "funcEndAddr": "0x402a3b",
            "decompiledFuncCode": "\nuint FUN_00402a00(void *param_1,ulong param_2,void *param_3,ulong param_4)\n\n{\n  uint uVar1;\n  ulong __n;\n  \n  __n = param_4;\n  if (param_2 <= param_4) {\n    __n = param_2;\n  }\n  uVar1 = memcmp(param_1,param_3,__n);\n  if (uVar1 == 0) {\n    if (param_2 < param_4) {\n      uVar1 = 0xffffffff;\n    }\n    else {\n      uVar1 = (uint)(param_2 >= param_4 && param_2 != param_4);\n    }\n  }\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00402a00"
        },
        {
            "funcStartAddr": "0x402a40",
            "funcEndAddr": "0x402ad9",
            "decompiledFuncCode": "\nvoid FUN_00402a40(byte *param_1)\n\n{\n  byte *pbVar1;\n  char *pcVar2;\n  long lVar3;\n  ulong uVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  byte bVar10;\n  \n  bVar10 = 0;\n  if (param_1 == (byte *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar2 = strrchr((char *)param_1,0x2f);\n  if (pcVar2 != (char *)0x0) {\n    pbVar1 = (byte *)(pcVar2 + 1);\n    uVar4 = (long)pbVar1 - (long)param_1;\n    bVar7 = uVar4 < 6;\n    bVar9 = uVar4 == 6;\n    if (6 < (long)uVar4) {\n      lVar3 = 7;\n      pbVar5 = (byte *)(pcVar2 + -6);\n      pbVar6 = (byte *)\"/.libs/\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar5 < *pbVar6;\n        bVar9 = *pbVar5 == *pbVar6;\n        pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      bVar8 = false;\n      bVar7 = (!bVar7 && !bVar9) == bVar7;\n      if (bVar7) {\n        lVar3 = 3;\n        pbVar5 = pbVar1;\n        pbVar6 = &DAT_00407280;\n        do {\n          if (lVar3 == 0) break;\n          lVar3 = lVar3 + -1;\n          bVar8 = *pbVar5 < *pbVar6;\n          bVar7 = *pbVar5 == *pbVar6;\n          pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n          pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        } while (bVar7);\n        param_1 = pbVar1;\n        if ((!bVar8 && !bVar7) == bVar8) {\n          param_1 = (byte *)(pcVar2 + 4);\n          program_invocation_short_name = param_1;\n        }\n      }\n    }\n  }\n  DAT_0060a2e0 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00402a40"
        },
        {
            "funcStartAddr": "0x402ae0",
            "funcEndAddr": "0x402bbf",
            "decompiledFuncCode": "\nchar * FUN_00402ae0(char *param_1,int param_2)\n\n{\n  char cVar1;\n  char *pcVar2;\n  byte *pbVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    pbVar3 = (byte *)FUN_00406150();\n    if ((*pbVar3 & 0xdf) == 0x55) {\n      if (((((pbVar3[1] & 0xdf) != 0x54) || ((pbVar3[2] & 0xdf) != 0x46)) || (pbVar3[3] != 0x2d)) ||\n         ((pbVar3[4] != 0x38 || (pbVar3[5] != 0)))) {\nLAB_00402bb8:\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_00407291;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_00407286;\n      }\n    }\n    else {\n      if (((((*pbVar3 & 0xdf) != 0x47) || ((pbVar3[1] & 0xdf) != 0x42)) || (pbVar3[2] != 0x31)) ||\n         (((pbVar3[3] != 0x38 || (pbVar3[4] != 0x30)) ||\n          ((pbVar3[5] != 0x33 || ((pbVar3[6] != 0x30 || (pbVar3[7] != 0)))))))) goto LAB_00402bb8;\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_0040728d;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0040728a;\n      }\n    }\n  }\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_00402ae0"
        },
        {
            "funcStartAddr": "0x402be0",
            "funcEndAddr": "0x403d13",
            "decompiledFuncCode": "\nulong FUN_00402be0(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  ulong uVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ulong uVar9;\n  ushort **ppuVar10;\n  long lVar11;\n  char *pcVar12;\n  byte bVar13;\n  char cVar14;\n  ulong uVar15;\n  ulong uVar16;\n  byte bVar17;\n  uint uVar18;\n  ulong uVar19;\n  bool bVar20;\n  ulong uVar21;\n  ulong uVar22;\n  bool bVar23;\n  bool bVar24;\n  bool bVar25;\n  bool bVar26;\n  size_t local_a0;\n  char *local_78;\n  ulong local_70;\n  bool local_5c;\n  bool local_5b;\n  wint_t local_44;\n  mbstate_t local_40 [2];\n  \n  sVar8 = __ctype_get_mb_cur_max();\n  uVar18 = param_6 & 2;\n  local_5c = uVar18 != 0;\n  uVar9 = param_2;\n  switch(param_5) {\n  case 0:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = false;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar18 != 0) {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = false;\n      local_a0 = 1;\n      local_78 = \"\\'\";\n      break;\n    }\n    bVar6 = false;\nLAB_00403831:\n    if (param_2 != 0) {\n      bVar3 = false;\n      local_5b = false;\n      bVar2 = true;\n      local_70 = 0;\n      goto LAB_00403466;\n    }\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 1;\n    param_5 = 2;\n    local_70 = 0;\n    local_5b = false;\n    local_5c = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 3:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 4:\n    if (uVar18 == 0) {\n      bVar6 = true;\n      goto LAB_00403831;\n    }\n  case 1:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 5:\n    if (uVar18 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      local_5b = false;\n      local_70 = 0;\n      bVar2 = true;\n      bVar3 = false;\n      local_5c = false;\n      uVar15 = 1;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    else {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 5;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\\"\";\n    break;\n  case 7:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = true;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      param_8 = (char *)FUN_00402ae0(&DAT_00407295,param_5);\n      param_9 = (char *)FUN_00402ae0(&DAT_004084ef);\n    }\n    uVar15 = 0;\n    if (uVar18 == 0) {\n      cVar14 = *param_8;\n      while (cVar14 != '\\0') {\n        if (uVar15 < param_2) {\n          param_1[uVar15] = cVar14;\n        }\n        uVar15 = uVar15 + 1;\n        cVar14 = param_8[uVar15];\n      }\n    }\n    local_a0 = strlen(param_9);\n    bVar2 = true;\n    bVar3 = false;\n    local_78 = param_9;\n    local_5b = false;\n    local_70 = 0;\n    bVar6 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\nLAB_00402c78:\n  uVar22 = 0;\n  bVar5 = local_5b;\nLAB_00402c88:\n  bVar23 = param_4 != uVar22;\n  if (param_4 == 0xffffffffffffffff) {\n    bVar23 = param_3[uVar22] != '\\0';\n  }\n  bVar26 = bVar6;\n  if (!bVar23) goto LAB_00403408;\n  bVar20 = (bool)(param_5 != 2 & bVar6);\n  __s1 = (byte *)(param_3 + uVar22);\n  uVar16 = uVar15;\n  bVar4 = bVar3;\n  if (bVar20) {\n    if (local_a0 == 0) {\nLAB_00403380:\n      uVar19 = (ulong)*__s1;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00403392_caseD_0;\n      default:\n        bVar20 = false;\n        goto switchD_004031fe_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00403095;\n      case 8:\n        bVar17 = 0x62;\n        break;\n      case 9:\nswitchD_00403392_caseD_9:\n        bVar17 = 0x74;\n        break;\n      case 10:\nswitchD_00403392_caseD_a:\n        bVar17 = 0x6e;\n        break;\n      case 0xb:\nswitchD_00403392_caseD_b:\n        bVar17 = 0x76;\n        goto LAB_00403095;\n      case 0xc:\nswitchD_00403392_caseD_c:\n        bVar17 = 0x66;\nLAB_00403095:\n        if (local_5c) {\n          bVar25 = false;\n          goto LAB_00402fe8;\n        }\nLAB_004030a0:\n        bVar23 = false;\n        goto LAB_00402e5b;\n      case 0xd:\n        bVar20 = false;\nswitchD_00402d78_caseD_d:\n        bVar25 = param_5 == 2;\n        uVar19 = 0xd;\n        bVar13 = 0x72;\n        goto LAB_00402fb0;\n      case 0x20:\n        bVar25 = false;\nLAB_004033da:\n        uVar19 = 0x20;\n        goto LAB_004033a2;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar20 = false;\nswitchD_00402d78_caseD_21:\n        bVar25 = false;\n        goto LAB_00402fbb;\n      case 0x23:\n      case 0x7e:\n        bVar26 = false;\nLAB_004033ba:\n        if (uVar22 == 0) {\n          bVar25 = false;\n          bVar23 = bVar20;\n          bVar20 = bVar26;\n          goto LAB_00402dc8;\n        }\n        bVar23 = false;\n        goto LAB_00402ddf;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar25 = false;\nLAB_004033a2:\n        bVar24 = false;\n        bVar23 = bVar20;\n        bVar20 = bVar25;\n        goto LAB_00402de1;\n      case 0x27:\n        bVar20 = false;\n        goto switchD_004031fe_caseD_27;\n      case 0x3f:\n        bVar20 = false;\n        goto switchD_004031fe_caseD_3f;\n      case 0x5c:\n        bVar20 = false;\n        goto switchD_00402d78_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        bVar20 = false;\n        goto switchD_004031fe_caseD_7b;\n      }\n      bVar25 = false;\n      bVar23 = false;\n      goto joined_r0x00402fd7;\n    }\n    if ((param_4 == 0xffffffffffffffff) && (1 < local_a0)) {\n      param_4 = strlen(param_3);\n    }\n    if ((param_4 < uVar22 + local_a0) || (iVar7 = memcmp(__s1,local_78,local_a0), iVar7 != 0))\n    goto LAB_00403380;\n    if (!local_5c) {\n      uVar19 = (ulong)*__s1;\n      bVar25 = bVar20;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00402d78_caseD_0;\n      default:\n        goto switchD_004031fe_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_004030a0;\n      case 8:\n        bVar25 = false;\n        bVar23 = false;\n        bVar17 = 0x62;\n        break;\n      case 9:\n        goto switchD_00403392_caseD_9;\n      case 10:\n        goto switchD_00403392_caseD_a;\n      case 0xb:\n        goto switchD_00403392_caseD_b;\n      case 0xc:\n        goto switchD_00403392_caseD_c;\n      case 0xd:\n        goto switchD_00402d78_caseD_d;\n      case 0x20:\n        goto LAB_004033da;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        goto switchD_00402d78_caseD_21;\n      case 0x23:\n      case 0x7e:\n        bVar26 = bVar20;\n        goto LAB_004033ba;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        goto LAB_004033a2;\n      case 0x27:\n        goto switchD_004031fe_caseD_27;\n      case 0x3f:\n        goto switchD_004031fe_caseD_3f;\n      case 0x5c:\n        goto switchD_00402d78_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        goto switchD_004031fe_caseD_7b;\n      }\n      goto LAB_00402e22;\n    }\n    goto LAB_00402ffa;\n  }\n  uVar19 = (ulong)*__s1;\n  switch(uVar19) {\n  case 0:\n    if (bVar6) {\nswitchD_00403392_caseD_0:\n      if (!local_5c) {\n        bVar20 = false;\nswitchD_00402d78_caseD_0:\n        bVar26 = param_5 == 2;\n        bVar24 = (bool)((bVar3 ^ 1U) & bVar26);\n        if (bVar24) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar16 = uVar15 + 3;\n          bVar3 = bVar24;\n          if (uVar9 <= uVar15 + 3) {\n            uVar16 = uVar15 + 4;\n            bVar23 = false;\n            bVar17 = 0x30;\n            bVar4 = bVar24;\n            goto LAB_00402ed8;\n          }\nLAB_0040311a:\n          param_1[uVar16] = 0x5c;\n          uVar15 = uVar16;\n        }\n        else if (uVar15 < uVar9) goto LAB_0040311a;\n        uVar16 = uVar15 + 1;\n        bVar24 = bVar23;\n        if (param_5 == 2) {\n          bVar17 = 0x30;\n          bVar23 = false;\n          bVar4 = bVar3;\n          goto LAB_00402ed8;\n        }\n        uVar19 = 0x30;\n        if ((uVar22 + 1 < param_4) && ((byte)(param_3[uVar22 + 1] - 0x30U) < 10)) {\n          if (uVar16 < uVar9) {\n            param_1[uVar16] = 0x30;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x30;\n          }\n          uVar16 = uVar15 + 3;\n          uVar19 = 0x30;\n        }\nLAB_00403159:\n        bVar17 = (byte)uVar19;\n        bVar23 = false;\n        uVar15 = uVar16;\n        bVar4 = bVar3;\n        if ((bool)(bVar6 ^ 1U | bVar26)) goto LAB_00402ed8;\n        goto LAB_00402de1;\n      }\n      bVar26 = param_5 == 2;\n      goto LAB_00402fec;\n    }\n    if ((param_6 & 1) == 0) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0;\n      bVar23 = false;\n      bVar20 = false;\n      goto LAB_00402dc8;\n    }\n    uVar22 = uVar22 + 1;\n    goto LAB_00402c88;\n  default:\nswitchD_004031fe_caseD_1:\n    bVar25 = bVar6;\n    if (sVar8 != 1) {\n      local_40[0] = (mbstate_t)0x0;\n      if (param_4 == 0xffffffffffffffff) {\n        param_4 = strlen(param_3);\n      }\n      uVar21 = 0;\n      do {\n        uVar1 = uVar22 + uVar21;\n        lVar11 = FUN_00406070(&local_44,param_3 + uVar1,param_4 - uVar1,local_40);\n        if (lVar11 == 0) break;\n        if (lVar11 == -1) {\n          bVar23 = false;\n          goto LAB_00403b0a;\n        }\n        if (lVar11 == -2) {\n          if ((param_4 <= uVar1) || (param_3[uVar1] == '\\0')) goto LAB_00403c47;\n          goto LAB_00403c37;\n        }\n        if (((param_5 == 2) && (local_5c)) && (lVar11 != 1)) {\n          pcVar12 = param_3 + uVar1 + 1;\n          do {\n            if (((byte)(*pcVar12 + 0xa5U) < 0x22) &&\n               ((1L << (*pcVar12 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n              param_5 = 2;\n              goto LAB_00402fec;\n            }\n            pcVar12 = pcVar12 + 1;\n          } while (param_3 + uVar1 + lVar11 != pcVar12);\n        }\n        iVar7 = iswprint(local_44);\n        if (iVar7 == 0) {\n          bVar23 = false;\n        }\n        uVar21 = uVar21 + lVar11;\n        iVar7 = mbsinit(local_40);\n      } while (iVar7 == 0);\n      bVar25 = (bool)((bVar23 ^ 1U) & bVar6);\n      goto LAB_00403b0a;\n    }\n    ppuVar10 = __ctype_b_loc();\n    uVar21 = 1;\n    bVar25 = ((*ppuVar10)[uVar19] & 0x4000) == 0;\n    bVar23 = !bVar25;\n    bVar25 = (bool)(bVar25 & bVar6);\n    goto LAB_004031d4;\n  case 7:\n    bVar25 = param_5 == 2;\n    uVar19 = 7;\n    bVar13 = 0x61;\n    break;\n  case 8:\n    bVar25 = param_5 == 2;\n    uVar19 = 8;\n    bVar13 = 0x62;\n    break;\n  case 9:\n    uVar19 = 9;\n    bVar13 = 0x74;\n    goto LAB_00403212;\n  case 10:\n    uVar19 = 10;\n    bVar13 = 0x6e;\n    goto LAB_00403212;\n  case 0xb:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xb;\n    bVar13 = 0x76;\n    break;\n  case 0xc:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xc;\n    bVar13 = 0x66;\n    break;\n  case 0xd:\n    uVar19 = 0xd;\n    bVar13 = 0x72;\nLAB_00403212:\n    bVar25 = param_5 == 2;\n    bVar20 = (bool)(local_5c & bVar25);\n    if (bVar20) {\nLAB_0040322a:\n      param_5 = 2;\n      goto LAB_00402fec;\n    }\n    break;\n  case 0x20:\n    uVar19 = 0x20;\n    goto LAB_00402db6;\n  case 0x21:\n  case 0x22:\n  case 0x24:\n  case 0x26:\n  case 0x28:\n  case 0x29:\n  case 0x2a:\n  case 0x3b:\n  case 0x3c:\n  case 0x3d:\n  case 0x3e:\n  case 0x5b:\n  case 0x5e:\n  case 0x60:\n  case 0x7c:\n    bVar23 = false;\nLAB_00402db6:\n    bVar25 = param_5 == 2;\n    if ((local_5c) && (bVar25)) goto LAB_0040322a;\n    goto LAB_00402dc8;\n  case 0x23:\n  case 0x7e:\nLAB_00402dad:\n    bVar25 = param_5 == 2;\n    if (uVar22 == 0) goto LAB_00402db6;\n    goto LAB_00402fbb;\n  case 0x25:\n  case 0x2b:\n  case 0x2c:\n  case 0x2d:\n  case 0x2e:\n  case 0x2f:\n  case 0x30:\n  case 0x31:\n  case 0x32:\n  case 0x33:\n  case 0x34:\n  case 0x35:\n  case 0x36:\n  case 0x37:\n  case 0x38:\n  case 0x39:\n  case 0x3a:\n  case 0x41:\n  case 0x42:\n  case 0x43:\n  case 0x44:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x48:\n  case 0x49:\n  case 0x4a:\n  case 0x4b:\n  case 0x4c:\n  case 0x4d:\n  case 0x4e:\n  case 0x4f:\n  case 0x50:\n  case 0x51:\n  case 0x52:\n  case 0x53:\n  case 0x54:\n  case 0x55:\n  case 0x56:\n  case 0x57:\n  case 0x58:\n  case 0x59:\n  case 0x5a:\n  case 0x5d:\n  case 0x5f:\n  case 0x61:\n  case 0x62:\n  case 99:\n  case 100:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n  case 0x68:\n  case 0x69:\n  case 0x6a:\n  case 0x6b:\n  case 0x6c:\n  case 0x6d:\n  case 0x6e:\n  case 0x6f:\n  case 0x70:\n  case 0x71:\n  case 0x72:\n  case 0x73:\n  case 0x74:\n  case 0x75:\n  case 0x76:\n  case 0x77:\n  case 0x78:\n  case 0x79:\n  case 0x7a:\n    goto switchD_004031fe_caseD_25;\n  case 0x27:\nswitchD_004031fe_caseD_27:\n    bVar5 = bVar23;\n    if (param_5 != 2) {\n      bVar25 = false;\n      uVar19 = 0x27;\n      goto LAB_00402dc8;\n    }\n    if (!local_5c) {\n      if ((uVar9 == 0) || (uVar19 = 0, uVar21 = uVar9, local_70 != 0)) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x5c;\n        }\n        uVar19 = uVar9;\n        uVar21 = local_70;\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x27;\n        }\n      }\n      uVar16 = uVar15 + 3;\n      bVar17 = 0x27;\n      uVar9 = uVar19;\n      local_70 = uVar21;\n      bVar24 = false;\n      bVar4 = false;\n      goto LAB_00402ed8;\n    }\n    goto LAB_00402fec;\n  case 0x3f:\nswitchD_004031fe_caseD_3f:\n    if (param_5 == 2) {\n      if (!local_5c) {\n        bVar17 = 0x3f;\n        bVar24 = false;\n        bVar23 = false;\n        goto LAB_00402ed8;\n      }\n      goto LAB_00402fec;\n    }\n    if (param_5 != 5) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0x3f;\n      bVar23 = false;\n      goto LAB_00402dc8;\n    }\n    if (((((param_6 & 4) != 0) && (uVar21 = uVar22 + 2, uVar21 < param_4)) &&\n        (param_3[uVar22 + 1] == '?')) &&\n       ((uVar19 = (ulong)(byte)param_3[uVar21], (byte)param_3[uVar21] < 0x3f &&\n        ((0x7000a38200000000U >> (uVar19 & 0x3f) & 1) != 0)))) {\n      if (!local_5c) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x3f;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x22;\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x22;\n        }\n        if (uVar15 + 3 < uVar9) {\n          param_1[uVar15 + 3] = 0x3f;\n        }\n        uVar16 = uVar15 + 4;\n        bVar26 = false;\n        uVar22 = uVar21;\n        bVar24 = false;\n        goto LAB_00403159;\n      }\n      goto LAB_00402ffa;\n    }\n    bVar25 = false;\n    uVar19 = 0x3f;\n    bVar23 = false;\n    goto LAB_00402dc8;\n  case 0x5c:\n    if (param_5 != 2) {\nswitchD_00402d78_caseD_5c:\n      uVar19 = 0x5c;\n      bVar17 = 0x5c;\n      bVar13 = 0x5c;\n      bVar25 = (bool)(bVar6 & local_5c & local_a0 != 0);\n      if (!bVar25) break;\n      uVar22 = uVar22 + 1;\n      bVar23 = false;\n      goto LAB_00402ef4;\n    }\n    if (local_5c) goto LAB_00402fec;\n    uVar22 = uVar22 + 1;\n    bVar23 = false;\n    bVar17 = 0x5c;\n    goto LAB_00402ef4;\n  case 0x7b:\n  case 0x7d:\nswitchD_004031fe_caseD_7b:\n    bVar24 = param_4 != 1;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar24 = param_3[1] != '\\0';\n    }\n    bVar25 = param_5 == 2;\n    if (!bVar24) goto LAB_00402dad;\n    goto LAB_00402fbb;\n  }\nLAB_00402fb0:\n  if (!bVar6) {\nLAB_00402fbb:\n    bVar23 = false;\n    goto LAB_00402dc8;\n  }\n  bVar23 = false;\n  bVar17 = bVar13;\n  goto joined_r0x00402fd7;\nLAB_00403408:\n  if ((uVar15 == 0) && ((bool)(local_5c & param_5 == 2))) {\n    param_5 = 2;\nLAB_00402fec:\n    if (bVar26) {\n      param_5 = 4;\n    }\nLAB_00402ffa:\n    uVar9 = FUN_00402be0(param_1,uVar9,param_3,param_4,param_5,param_6 & 0xfffffffd,0,param_8,\n                         param_9);\n    return uVar9;\n  }\n  bVar26 = (bool)(param_5 == 2 & (local_5c ^ 1U));\n  bVar23 = (bool)(local_5c ^ 1U);\n  if ((!bVar26) || (bVar23 = bVar26, !bVar5)) {\nLAB_00403cdd:\n    uVar22 = uVar15;\n    if (((local_78 != (char *)0x0) && (bVar23)) && (cVar14 = *local_78, cVar14 != '\\0')) {\n      do {\n        if (uVar22 < uVar9) {\n          param_1[uVar22] = cVar14;\n        }\n        uVar22 = uVar22 + 1;\n        cVar14 = local_78[uVar22 - uVar15];\n      } while (cVar14 != '\\0');\n    }\n    if (uVar22 < uVar9) {\n      param_1[uVar22] = 0;\n    }\n    return uVar22;\n  }\n  if (bVar2) {\n    uVar9 = FUN_00402be0(param_1,local_70,param_3,param_4,5,param_6,param_7,param_8,param_9);\n    return uVar9;\n  }\n  local_5b = uVar9 == 0 && local_70 != 0;\n  param_2 = local_70;\n  bVar23 = bVar5;\n  if (uVar9 != 0 || local_70 == 0) goto LAB_00403cdd;\nLAB_00403466:\n  *param_1 = 0x27;\n  param_5 = 2;\n  uVar15 = 1;\n  local_78 = \"\\'\";\n  local_a0 = 1;\n  local_5c = false;\n  uVar9 = param_2;\n  goto LAB_00402c78;\n  while (__s1[uVar21] != 0) {\nLAB_00403c37:\n    uVar21 = uVar21 + 1;\n    if (param_4 <= uVar22 + uVar21) break;\n  }\nLAB_00403c47:\n  bVar23 = false;\nLAB_00403b0a:\n  if (1 < uVar21) {\nLAB_004036ce:\n    bVar26 = false;\n    uVar21 = uVar21 + uVar22;\n    uVar16 = uVar22;\n    do {\n      bVar17 = (byte)uVar19;\n      if (bVar25) {\n        bVar26 = param_5 == 2;\n        if (local_5c) goto LAB_00402fec;\n        bVar26 = (bool)(bVar26 & (bVar4 ^ 1U));\n        if (bVar26) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar15 = uVar15 + 3;\n          bVar4 = bVar26;\n        }\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x5c;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = (char)(uVar19 >> 6) + '0';\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = ((byte)(uVar19 >> 3) & 7) + 0x30;\n        }\n        uVar22 = uVar16 + 1;\n        uVar15 = uVar15 + 3;\n        bVar17 = (bVar17 & 7) + 0x30;\n        bVar26 = bVar25;\n        if (uVar21 <= uVar22) goto LAB_00402e6d;\n      }\n      else {\n        bVar3 = (bool)((bVar26 ^ 1U) & bVar4);\n        if (bVar20) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x5c;\n          }\n          uVar15 = uVar15 + 1;\n        }\n        uVar22 = uVar16 + 1;\n        if (uVar21 <= uVar22) goto LAB_00402ef4;\n        if (bVar3) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x27;\n          }\n          uVar15 = uVar15 + 2;\n          bVar20 = false;\n          bVar4 = false;\n        }\n        else {\n          bVar20 = false;\n        }\n      }\n      uVar16 = uVar16 + 1;\n      if (uVar15 < uVar9) {\n        param_1[uVar15] = bVar17;\n      }\n      uVar19 = (ulong)(byte)param_3[uVar16];\n      uVar15 = uVar15 + 1;\n    } while( true );\n  }\nLAB_004031d4:\n  if (bVar25) {\n    bVar23 = false;\n    bVar25 = bVar6;\n    goto LAB_004036ce;\n  }\nswitchD_004031fe_caseD_25:\n  bVar25 = param_5 == 2;\nLAB_00402dc8:\n  bVar17 = (byte)uVar19;\n  bVar24 = (bool)((bVar6 ^ 1U | bVar25) ^ 1 | local_5c);\n  bVar26 = bVar20;\n  if (bVar24) {\nLAB_00402ddf:\n    bVar24 = false;\n    bVar20 = bVar26;\nLAB_00402de1:\n    bVar17 = (byte)uVar19;\n    uVar16 = uVar15;\n    bVar4 = bVar3;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar19 >> 5) * 4) >> (bVar17 & 0x1f) & 1) == 0))\n    goto LAB_00402ed8;\n    bVar25 = param_5 == 2;\n  }\n  else {\nLAB_00402ed8:\n    bVar25 = param_5 == 2;\n    uVar15 = uVar16;\n    bVar3 = bVar4;\n    if (!bVar20) {\n      uVar22 = uVar22 + 1;\n      bVar3 = (bool)((bVar24 ^ 1U) & bVar4);\nLAB_00402ef4:\n      if (bVar3) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x27;\n        }\n        uVar15 = uVar15 + 2;\n        bVar4 = false;\n      }\n      goto LAB_00402e6d;\n    }\n  }\njoined_r0x00402fd7:\n  if (local_5c) {\nLAB_00402fe8:\n    bVar26 = (bool)(bVar6 & bVar25);\n    goto LAB_00402fec;\n  }\nLAB_00402e22:\n  bVar25 = (bool)((bVar3 ^ 1U) & bVar25);\n  if (bVar25) {\n    if (uVar15 < uVar9) {\n      param_1[uVar15] = 0x27;\n    }\n    if (uVar15 + 1 < uVar9) {\n      param_1[uVar15 + 1] = 0x24;\n    }\n    if (uVar15 + 2 < uVar9) {\n      param_1[uVar15 + 2] = 0x27;\n    }\n    uVar15 = uVar15 + 3;\n    bVar3 = bVar25;\n  }\nLAB_00402e5b:\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = 0x5c;\n  }\n  uVar15 = uVar15 + 1;\n  uVar22 = uVar22 + 1;\n  bVar4 = bVar3;\nLAB_00402e6d:\n  bVar3 = bVar4;\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = bVar17;\n  }\n  uVar15 = uVar15 + 1;\n  if (!bVar23) {\n    bVar2 = false;\n  }\n  goto LAB_00402c88;\n}\n\n",
            "funcName": "FUN_00402be0"
        },
        {
            "funcStartAddr": "0x403e10",
            "funcEndAddr": "0x403fab",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_00403e10(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_0060a258;\n  if (DAT_0060a270 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00404e80();\n    }\n    if (PTR_DAT_0060a258 == &DAT_0060a260) {\n      puVar8 = (undefined4 *)FUN_00404c90(0);\n      uVar6 = PTR_DAT_0060a268._4_4_;\n      uVar5 = PTR_DAT_0060a268._0_4_;\n      uVar3 = _UNK_0060a264;\n      PTR_DAT_0060a258 = (undefined *)puVar8;\n      *puVar8 = _DAT_0060a260;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_00404c90(PTR_DAT_0060a258);\n      PTR_DAT_0060a258 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_0060a270 * 4,0,(long)((param_1 + 1) - DAT_0060a270) << 4);\n    DAT_0060a270 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_00402be0(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_0060a300) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)FUN_00404c30(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_00402be0(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n",
            "funcName": "FUN_00403e10"
        },
        {
            "funcStartAddr": "0x403fb0",
            "funcEndAddr": "0x403fe4",
            "decompiledFuncCode": "\nvoid FUN_00403fb0(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060a400;\n  }\n  FUN_00404e30(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00403fb0"
        },
        {
            "funcStartAddr": "0x403ff0",
            "funcEndAddr": "0x403fff",
            "decompiledFuncCode": "\nundefined4 FUN_00403ff0(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060a400;\n  }\n  return *param_1;\n}\n\n",
            "funcName": "FUN_00403ff0"
        },
        {
            "funcStartAddr": "0x404000",
            "funcEndAddr": "0x40400f",
            "decompiledFuncCode": "\nvoid FUN_00404000(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060a400;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_00404000"
        },
        {
            "funcStartAddr": "0x404010",
            "funcEndAddr": "0x404043",
            "decompiledFuncCode": "\nuint FUN_00404010(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060a400;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n",
            "funcName": "FUN_00404010"
        },
        {
            "funcStartAddr": "0x404050",
            "funcEndAddr": "0x404063",
            "decompiledFuncCode": "\nundefined4 FUN_00404050(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060a400;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00404050"
        },
        {
            "funcStartAddr": "0x404070",
            "funcEndAddr": "0x40409b",
            "decompiledFuncCode": "\nvoid FUN_00404070(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060a400;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00404070"
        },
        {
            "funcStartAddr": "0x4040a0",
            "funcEndAddr": "0x404112",
            "decompiledFuncCode": "\nvoid FUN_004040a0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_0060a400;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00402be0(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_004040a0"
        },
        {
            "funcStartAddr": "0x404120",
            "funcEndAddr": "0x404201",
            "decompiledFuncCode": "\nundefined8 FUN_00404120(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_0060a400;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00402be0(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = FUN_00404c30(lVar3 + 1);\n  FUN_00402be0(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n",
            "funcName": "FUN_00404120"
        },
        {
            "funcStartAddr": "0x404210",
            "funcEndAddr": "0x40421a",
            "decompiledFuncCode": "\nvoid FUN_00404210(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00404120(param_1,param_2,0,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00404210"
        },
        {
            "funcStartAddr": "0x404220",
            "funcEndAddr": "0x4042b5",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00404220(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_0060a258;\n  if (1 < DAT_0060a270) {\n    ppvVar2 = (void **)(PTR_DAT_0060a258 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_0060a258 + (ulong)(DAT_0060a270 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_0060a300) {\n    free(*(undefined **)(__ptr_00 + 8));\n    _DAT_0060a260 = 0x100;\n    PTR_DAT_0060a268 = &DAT_0060a300;\n  }\n  if (__ptr_00 != &DAT_0060a260) {\n    free(__ptr_00);\n    PTR_DAT_0060a258 = &DAT_0060a260;\n  }\n  DAT_0060a270 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00404220"
        },
        {
            "funcStartAddr": "0x4042c0",
            "funcEndAddr": "0x4042d1",
            "decompiledFuncCode": "\nvoid FUN_004042c0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00403e10(param_1,param_2,0xffffffffffffffff,&DAT_0060a400);\n  return;\n}\n\n",
            "funcName": "FUN_004042c0"
        },
        {
            "funcStartAddr": "0x4042e0",
            "funcEndAddr": "0x4042ea",
            "decompiledFuncCode": "\nvoid FUN_004042e0(void)\n\n{\n  FUN_00403e10();\n  return;\n}\n\n",
            "funcName": "FUN_004042e0"
        },
        {
            "funcStartAddr": "0x4042f0",
            "funcEndAddr": "0x404306",
            "decompiledFuncCode": "\nvoid FUN_004042f0(undefined8 param_1)\n\n{\n  FUN_00403e10(0,param_1,0xffffffffffffffff,&DAT_0060a400);\n  return;\n}\n\n",
            "funcName": "FUN_004042f0"
        },
        {
            "funcStartAddr": "0x404310",
            "funcEndAddr": "0x404322",
            "decompiledFuncCode": "\nvoid FUN_00404310(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00403e10(0,param_1,param_2,&DAT_0060a400);\n  return;\n}\n\n",
            "funcName": "FUN_00404310"
        },
        {
            "funcStartAddr": "0x404330",
            "funcEndAddr": "0x404398",
            "decompiledFuncCode": "\nvoid FUN_00404330(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00403e10(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00404330"
        },
        {
            "funcStartAddr": "0x4043a0",
            "funcEndAddr": "0x404404",
            "decompiledFuncCode": "\nvoid FUN_004043a0(undefined8 param_1,int param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00403e10(param_1,param_3,param_4,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004043a0"
        },
        {
            "funcStartAddr": "0x404410",
            "funcEndAddr": "0x40441c",
            "decompiledFuncCode": "\nvoid FUN_00404410(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00404330(0,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00404410"
        },
        {
            "funcStartAddr": "0x404420",
            "funcEndAddr": "0x40442f",
            "decompiledFuncCode": "\nvoid FUN_00404420(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_004043a0(0,param_1,param_2,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00404420"
        },
        {
            "funcStartAddr": "0x404430",
            "funcEndAddr": "0x4044a0",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00404430(undefined8 param_1,undefined8 param_2,byte param_3)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  \n  local_18 = DAT_0060a430;\n  local_48 = _DAT_0060a400;\n  uStack_40 = uRam000000000060a408;\n  local_38 = _DAT_0060a410;\n  uStack_30 = uRam000000000060a418;\n  puVar1 = (uint *)((long)&uStack_40 + (ulong)(param_3 >> 5) * 4);\n  local_28 = _DAT_0060a420;\n  uStack_20 = uRam000000000060a428;\n  uVar2 = *puVar1;\n  *puVar1 = (~(uVar2 >> (param_3 & 0x1f)) & 1) << (param_3 & 0x1f) ^ uVar2;\n  FUN_00403e10(0,param_1,param_2,&local_48);\n  return;\n}\n\n",
            "funcName": "FUN_00404430"
        },
        {
            "funcStartAddr": "0x4044a0",
            "funcEndAddr": "0x4044ad",
            "decompiledFuncCode": "\nvoid FUN_004044a0(undefined8 param_1,char param_2)\n\n{\n  FUN_00404430(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n",
            "funcName": "FUN_004044a0"
        },
        {
            "funcStartAddr": "0x4044b0",
            "funcEndAddr": "0x4044c1",
            "decompiledFuncCode": "\nvoid FUN_004044b0(undefined8 param_1)\n\n{\n  FUN_00404430(param_1,0xffffffffffffffff,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_004044b0"
        },
        {
            "funcStartAddr": "0x4044d0",
            "funcEndAddr": "0x4044da",
            "decompiledFuncCode": "\nvoid FUN_004044d0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00404430(param_1,param_2,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_004044d0"
        },
        {
            "funcStartAddr": "0x4044e0",
            "funcEndAddr": "0x40454e",
            "decompiledFuncCode": "\nvoid FUN_004044e0(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_40 = 0x400000000000000;\n    local_44 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00403e10(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004044e0"
        },
        {
            "funcStartAddr": "0x404550",
            "funcEndAddr": "0x4045bc",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00404550(undefined8 param_1,long param_2,long param_3,undefined8 param_4,undefined8 param_5\n                 )\n\n{\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long lStack_20;\n  long local_18;\n  \n  uStack_40 = uRam000000000060a408;\n  local_38 = _DAT_0060a410;\n  uStack_30 = uRam000000000060a418;\n  local_28 = _DAT_0060a420;\n  lStack_20 = uRam000000000060a428;\n  local_18 = DAT_0060a430;\n  local_48 = CONCAT44((int)((ulong)_DAT_0060a400 >> 0x20),10);\n  if ((param_2 != 0) && (param_3 != 0)) {\n    lStack_20 = param_2;\n    local_18 = param_3;\n    FUN_00403e10(param_1,param_4,param_5,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00404550"
        },
        {
            "funcStartAddr": "0x4045c0",
            "funcEndAddr": "0x4045c9",
            "decompiledFuncCode": "\nvoid FUN_004045c0(void)\n\n{\n  FUN_00404550();\n  return;\n}\n\n",
            "funcName": "FUN_004045c0"
        },
        {
            "funcStartAddr": "0x4045d0",
            "funcEndAddr": "0x4045e7",
            "decompiledFuncCode": "\nvoid FUN_004045d0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00404550(0,param_1,param_2,param_3,0xffffffffffffffff);\n  return;\n}\n\n",
            "funcName": "FUN_004045d0"
        },
        {
            "funcStartAddr": "0x4045f0",
            "funcEndAddr": "0x404603",
            "decompiledFuncCode": "\nvoid FUN_004045f0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00404550(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n",
            "funcName": "FUN_004045f0"
        },
        {
            "funcStartAddr": "0x404610",
            "funcEndAddr": "0x40461a",
            "decompiledFuncCode": "\nvoid FUN_00404610(void)\n\n{\n  FUN_00403e10();\n  return;\n}\n\n",
            "funcName": "FUN_00404610"
        },
        {
            "funcStartAddr": "0x404620",
            "funcEndAddr": "0x404632",
            "decompiledFuncCode": "\nvoid FUN_00404620(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00403e10(0,param_1,param_2,&DAT_0060a220);\n  return;\n}\n\n",
            "funcName": "FUN_00404620"
        },
        {
            "funcStartAddr": "0x404640",
            "funcEndAddr": "0x404651",
            "decompiledFuncCode": "\nvoid FUN_00404640(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00403e10(param_1,param_2,0xffffffffffffffff,&DAT_0060a220);\n  return;\n}\n\n",
            "funcName": "FUN_00404640"
        },
        {
            "funcStartAddr": "0x404660",
            "funcEndAddr": "0x404676",
            "decompiledFuncCode": "\nvoid FUN_00404660(undefined8 param_1)\n\n{\n  FUN_00403e10(0,param_1,0xffffffffffffffff,&DAT_0060a220);\n  return;\n}\n\n",
            "funcName": "FUN_00404660"
        },
        {
            "funcStartAddr": "0x404680",
            "funcEndAddr": "0x40468e",
            "decompiledFuncCode": "\nvoid FUN_00404680(undefined8 param_1)\n\n{\n  FUN_004050c0(param_1,0,3);\n  return;\n}\n\n",
            "funcName": "FUN_00404680"
        },
        {
            "funcStartAddr": "0x404690",
            "funcEndAddr": "0x404a34",
            "decompiledFuncCode": "\nundefined8\nFUN_00404690(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_00407feb,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0040490c;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_0040490c:\n    __fprintf_chk(param_1,1,uVar7,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[1];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar1 = param_5[2];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_004049a9;\n  case 7:\n    uVar1 = param_5[2];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    local_58 = param_5[1];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_004049a9:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_58,uVar1,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0040478a;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_0040478a:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_50,local_58,uVar6,uVar5,uVar4,uVar1,local_48);\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00404690"
        },
        {
            "funcStartAddr": "0x404a70",
            "funcEndAddr": "0x404a90",
            "decompiledFuncCode": "\nvoid FUN_00404a70(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_00404690();\n  return;\n}\n\n",
            "funcName": "FUN_00404a70"
        },
        {
            "funcStartAddr": "0x404a90",
            "funcEndAddr": "0x404ae9",
            "decompiledFuncCode": "\nvoid FUN_00404a90(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long local_58 [11];\n  \n  lVar4 = 0;\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_58[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_58[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_00404690();\n  return;\n}\n\n",
            "funcName": "FUN_00404a90"
        },
        {
            "funcStartAddr": "0x404af0",
            "funcEndAddr": "0x404ba8",
            "decompiledFuncCode": "\nvoid FUN_00404af0(void)\n\n{\n  long lVar1;\n  undefined8 in_R8;\n  ulong uVar2;\n  undefined8 in_R9;\n  long lVar3;\n  long *plVar4;\n  long local_88 [10];\n  long local_38 [4];\n  long local_18 [3];\n  \n  local_18[0] = in_R8;\n  plVar4 = (long *)&stack0x00000008;\n  uVar2 = 0x20;\n  local_18[1] = in_R9;\n  lVar3 = 0;\n  do {\n    if ((uint)uVar2 < 0x30) {\n      lVar1 = *(long *)((long)local_38 + uVar2);\n      local_88[lVar3] = lVar1;\n      uVar2 = (ulong)((uint)uVar2 + 8);\n    }\n    else {\n      lVar1 = *plVar4;\n      local_88[lVar3] = lVar1;\n      plVar4 = plVar4 + 1;\n    }\n  } while ((lVar1 != 0) && (lVar3 = lVar3 + 1, lVar3 != 10));\n  FUN_00404690();\n  return;\n}\n\n",
            "funcName": "FUN_00404af0"
        },
        {
            "funcStartAddr": "0x404bb0",
            "funcEndAddr": "0x404c24",
            "decompiledFuncCode": "\nvoid FUN_00404bb0(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n",
            "funcName": "FUN_00404bb0"
        },
        {
            "funcStartAddr": "0x404c30",
            "funcEndAddr": "0x404c4a",
            "decompiledFuncCode": "\nvoid FUN_00404c30(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00404e80();\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00404c30"
        },
        {
            "funcStartAddr": "0x404c50",
            "funcEndAddr": "0x404c71",
            "decompiledFuncCode": "\nvoid FUN_00404c50(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_00404c30();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00404e80();\n}\n\n",
            "funcName": "FUN_00404c50"
        },
        {
            "funcStartAddr": "0x404c80",
            "funcEndAddr": "0x404c82",
            "decompiledFuncCode": "\nvoid thunk_FUN_00404c30(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00404e80();\n  }\n  return;\n}\n\n",
            "funcName": "thunk_404c80"
        },
        {
            "funcStartAddr": "0x404c90",
            "funcEndAddr": "0x404cc0",
            "decompiledFuncCode": "\nvoid * FUN_00404c90(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00404e80();\n  }\n  return pvVar1;\n}\n\n",
            "funcName": "FUN_00404c90"
        },
        {
            "funcStartAddr": "0x404cd0",
            "funcEndAddr": "0x404cf1",
            "decompiledFuncCode": "\nvoid FUN_00404cd0(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_00404c90();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00404e80();\n}\n\n",
            "funcName": "FUN_00404cd0"
        },
        {
            "funcStartAddr": "0x404d00",
            "funcEndAddr": "0x404d78",
            "decompiledFuncCode": "\nvoid FUN_00404d00(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar2 = *param_2;\n  if (param_1 == 0) {\n    if (uVar2 == 0) {\n      uVar2 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar3 = (ulong)(SUB168(ZEXT816(uVar2) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar2) * ZEXT816(param_3),0) < 0) || (uVar3 != 0)) goto LAB_00404d5b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar3 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar2) {\nLAB_00404d5b:\n                    /* WARNING: Subroutine does not return */\n      FUN_00404e80(param_1,param_2,uVar3);\n    }\n    uVar2 = (uVar2 >> 1) + 1 + uVar2;\n  }\n  *param_2 = uVar2;\n  FUN_00404c90(param_1,uVar2 * param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00404d00"
        },
        {
            "funcStartAddr": "0x404d90",
            "funcEndAddr": "0x404dda",
            "decompiledFuncCode": "\nvoid FUN_00404d90(long param_1,ulong *param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = *param_2;\n  if (param_1 == 0) {\n    if (uVar1 == 0) {\n      *param_2 = 0x80;\n      FUN_00404c90(0,0x80);\n      return;\n    }\n    if ((long)uVar1 < 0) goto LAB_00404dda;\n  }\n  else {\n    if (0x5555555555555553 < uVar1) {\nLAB_00404dda:\n                    /* WARNING: Subroutine does not return */\n      FUN_00404e80();\n    }\n    uVar1 = (uVar1 >> 1) + 1 + uVar1;\n  }\n  *param_2 = uVar1;\n  FUN_00404c90(param_1,uVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00404d90"
        },
        {
            "funcStartAddr": "0x404de0",
            "funcEndAddr": "0x404df7",
            "decompiledFuncCode": "\nvoid FUN_00404de0(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00404c30();\n  memset(__s,0,param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00404de0"
        },
        {
            "funcStartAddr": "0x404e00",
            "funcEndAddr": "0x404e2e",
            "decompiledFuncCode": "\nvoid FUN_00404e00(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00404e80();\n}\n\n",
            "funcName": "FUN_00404e00"
        },
        {
            "funcStartAddr": "0x404e30",
            "funcEndAddr": "0x404e58",
            "decompiledFuncCode": "\nvoid FUN_00404e30(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00404c30(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00404e30"
        },
        {
            "funcStartAddr": "0x404e60",
            "funcEndAddr": "0x404e73",
            "decompiledFuncCode": "\nvoid FUN_00404e60(char *param_1)\n\n{\n  void *__dest;\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  __dest = (void *)FUN_00404c30(sVar1 + 1);\n  memcpy(__dest,param_1,sVar1 + 1);\n  return;\n}\n\n",
            "funcName": "FUN_00404e60"
        },
        {
            "funcStartAddr": "0x404e80",
            "funcEndAddr": "0x404eb1",
            "decompiledFuncCode": "\nvoid FUN_00404e80(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_0060a208,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00404e80"
        },
        {
            "funcStartAddr": "0x404ec0",
            "funcEndAddr": "0x404f74",
            "decompiledFuncCode": "\nvoid FUN_00404ec0(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  \n  uVar1 = dcgettext(0,\"string comparison failed\",5);\n  error(0,param_1,uVar1);\n  uVar1 = dcgettext(0,\"Set LC_ALL=\\'C\\' to work around the problem.\",5);\n  error(0,0,uVar1);\n  uVar1 = FUN_004043a0(1,8,param_4,param_5);\n  uVar2 = FUN_004043a0(0,8,param_2,param_3);\n  uVar3 = dcgettext(0,\"The strings compared were %s and %s.\",5);\n  error(DAT_0060a208,0,uVar3,uVar2,uVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00404ec0"
        },
        {
            "funcStartAddr": "0x404f80",
            "funcEndAddr": "0x404fd0",
            "decompiledFuncCode": "\nundefined4 FUN_00404f80(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  undefined4 uVar1;\n  int *piVar2;\n  \n  uVar1 = FUN_00406780();\n  piVar2 = __errno_location();\n  if (*piVar2 == 0) {\n    return uVar1;\n  }\n  FUN_00404ec0(*piVar2,param_1,param_2,param_3,param_4);\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00404f80"
        },
        {
            "funcStartAddr": "0x404fe0",
            "funcEndAddr": "0x405032",
            "decompiledFuncCode": "\nundefined4 FUN_00404fe0(undefined8 param_1,long param_2,undefined8 param_3,long param_4)\n\n{\n  undefined4 uVar1;\n  int *piVar2;\n  \n  uVar1 = FUN_00406830();\n  piVar2 = __errno_location();\n  if (*piVar2 == 0) {\n    return uVar1;\n  }\n  FUN_00404ec0(*piVar2,param_1,param_2 + -1,param_3,param_4 + -1);\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00404fe0"
        },
        {
            "funcStartAddr": "0x405040",
            "funcEndAddr": "0x4050b8",
            "decompiledFuncCode": "\nint FUN_00405040(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_004050a7;\n    }\n    iVar1 = FUN_00405200(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_004050a7:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n",
            "funcName": "FUN_00405040"
        },
        {
            "funcStartAddr": "0x4050c0",
            "funcEndAddr": "0x4051ec",
            "decompiledFuncCode": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint FUN_004050c0(ulong param_1,int param_2,ulong param_3)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  int *piVar4;\n  \n  if (param_2 != 0x406) {\n    iVar1 = fcntl((int)param_1,param_2,param_3);\n    return iVar1;\n  }\n  if (DAT_0060a438 < 0) {\n    iVar1 = FUN_004050c0(param_1,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    if (DAT_0060a438 != -1) {\n      return iVar1;\n    }\n  }\n  else {\n    iVar1 = fcntl((int)param_1,0x406);\n    if ((-1 < iVar1) || (piVar4 = __errno_location(), *piVar4 != 0x16)) {\n      DAT_0060a438 = 1;\n      return iVar1;\n    }\n    iVar1 = FUN_004050c0(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    DAT_0060a438 = -1;\n  }\n  uVar2 = fcntl(iVar1,1);\n  if ((-1 < (int)uVar2) && (iVar3 = fcntl(iVar1,2,(ulong)(uVar2 | 1)), iVar3 != -1)) {\n    return iVar1;\n  }\n  piVar4 = __errno_location();\n  iVar3 = *piVar4;\n  close(iVar1);\n  *piVar4 = iVar3;\n  return -1;\n}\n\n",
            "funcName": "FUN_004050c0"
        },
        {
            "funcStartAddr": "0x405200",
            "funcEndAddr": "0x40523b",
            "decompiledFuncCode": "\nvoid FUN_00405200(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if ((iVar1 != 0) && ((param_1->_flags & 0x100U) != 0)) {\n      FUN_00405240(param_1,0,1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00405200"
        },
        {
            "funcStartAddr": "0x405240",
            "funcEndAddr": "0x405296",
            "decompiledFuncCode": "\nulong FUN_00405240(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  uint uVar1;\n  int __fd;\n  ulong uVar2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    __fd = fileno(param_1);\n    uVar2 = lseek(__fd,param_2,param_3);\n    if (uVar2 != 0xffffffffffffffff) {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = uVar2;\n      uVar2 = 0;\n    }\n    return uVar2;\n  }\n  uVar1 = fseeko(param_1,param_2,param_3);\n  return (ulong)uVar1;\n}\n\n",
            "funcName": "FUN_00405240"
        },
        {
            "funcStartAddr": "0x4052a0",
            "funcEndAddr": "0x405375",
            "decompiledFuncCode": "\nvoid FUN_004052a0(long param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 *puVar5;\n  long lVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  \n  iVar1 = param_2[0xb];\n  iVar2 = *param_2;\n  iVar3 = param_2[0xc];\n  iVar8 = iVar1;\n  iVar9 = iVar2;\n  while (iVar3 < iVar9) {\n    while( true ) {\n      if (iVar3 <= iVar8) goto LAB_0040531c;\n      iVar10 = iVar9 - iVar3;\n      iVar7 = iVar3 - iVar8;\n      if (iVar10 <= iVar7) break;\n      lVar6 = (long)iVar8;\n      iVar9 = iVar9 - iVar7;\n      puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n      do {\n        uVar4 = *puVar5;\n        *puVar5 = puVar5[iVar9 - lVar6];\n        puVar5[iVar9 - lVar6] = uVar4;\n        puVar5 = puVar5 + 1;\n      } while ((undefined8 *)(param_1 + 8 + ((ulong)(iVar7 - 1) + lVar6) * 8) != puVar5);\n      if (iVar9 <= iVar3) goto LAB_0040531c;\n    }\n    lVar6 = (long)iVar8;\n    puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n    do {\n      uVar4 = *puVar5;\n      *puVar5 = puVar5[iVar3 - lVar6];\n      puVar5[iVar3 - lVar6] = uVar4;\n      puVar5 = puVar5 + 1;\n    } while (puVar5 != (undefined8 *)(param_1 + 8 + ((ulong)(iVar10 - 1) + lVar6) * 8));\n    iVar8 = iVar8 + iVar10;\n  }\nLAB_0040531c:\n  param_2[0xc] = iVar2;\n  param_2[0xb] = iVar1 + (iVar2 - iVar3);\n  return;\n}\n\n",
            "funcName": "FUN_004052a0"
        },
        {
            "funcStartAddr": "0x405380",
            "funcEndAddr": "0x40597e",
            "decompiledFuncCode": "\nint FUN_00405380(int param_1,undefined8 *param_2,char *param_3,char **param_4,undefined4 *param_5,\n                int param_6,int *param_7,int param_8,undefined8 param_9)\n\n{\n  char cVar1;\n  undefined8 uVar2;\n  bool bVar3;\n  bool bVar4;\n  int iVar5;\n  int iVar6;\n  size_t sVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  char **ppcVar10;\n  char *pcVar11;\n  char **ppcVar12;\n  char *pcVar13;\n  char *__s1;\n  FILE *__stream;\n  ulong uVar14;\n  size_t sVar15;\n  char *__s1_00;\n  long lVar16;\n  char *local_70;\n  uint local_44;\n  \n  pcVar13 = *(char **)(param_7 + 8);\n  cVar1 = *pcVar13;\n  pcVar11 = pcVar13;\n  if ((cVar1 == '=') || (cVar1 == '\\0')) {\n    sVar15 = 0;\n  }\n  else {\n    do {\n      pcVar11 = pcVar11 + 1;\n      if (*pcVar11 == '\\0') break;\n    } while (*pcVar11 != '=');\n    sVar15 = (long)pcVar11 - (long)pcVar13;\n  }\n  uVar14 = 0;\n  __s1 = *param_4;\n  ppcVar10 = param_4;\n  __s1_00 = __s1;\n  if (__s1 != (char *)0x0) {\n    while( true ) {\n      iVar5 = strncmp(__s1_00,pcVar13,sVar15);\n      if ((iVar5 == 0) && (sVar7 = strlen(__s1_00), sVar7 == sVar15)) goto LAB_004055a0;\n      ppcVar10 = ppcVar10 + 4;\n      __s1_00 = *ppcVar10;\n      iVar5 = (int)uVar14 + 1;\n      if (__s1_00 == (char *)0x0) break;\n      uVar14 = (ulong)iVar5;\n    }\n    lVar16 = 0;\n    ppcVar10 = (char **)0x0;\n    local_44 = 0xffffffff;\n    bVar3 = false;\n    bVar4 = false;\n    local_70 = (char *)0x0;\n    ppcVar12 = param_4;\n    do {\n      iVar6 = strncmp(__s1,pcVar13,sVar15);\n      if (iVar6 == 0) {\n        if (ppcVar10 == (char **)0x0) {\n          local_44 = (uint)lVar16;\n          ppcVar10 = ppcVar12;\n        }\n        else if (((((param_6 != 0) || (*(int *)(ppcVar10 + 1) != *(int *)(ppcVar12 + 1))) ||\n                  (ppcVar10[2] != ppcVar12[2])) ||\n                 (*(int *)(ppcVar10 + 3) != *(int *)(ppcVar12 + 3))) && (!bVar3)) {\n          if (param_8 == 0) {\n            bVar3 = true;\n            if (local_70 == (char *)0x0) goto LAB_004054e0;\n          }\n          else if (local_70 == (char *)0x0) {\n            local_70 = (char *)calloc((long)iVar5,1);\n            if (local_70 == (char *)0x0) {\n              bVar3 = true;\n              goto LAB_004054e0;\n            }\n            bVar4 = true;\n            local_70[(int)local_44] = '\\x01';\n          }\n          local_70[lVar16] = '\\x01';\n        }\n      }\nLAB_004054e0:\n      ppcVar12 = ppcVar12 + 4;\n      __s1 = *ppcVar12;\n      lVar16 = lVar16 + 1;\n    } while (__s1 != (char *)0x0);\n    if ((local_70 != (char *)0x0) || (bVar3)) {\n      if (param_8 != 0) {\n        if (bVar3) {\n          uVar2 = *param_2;\n          uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous\\n\",5);\n          __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n        else {\n          flockfile(stderr);\n          uVar2 = *(undefined8 *)(param_7 + 8);\n          uVar8 = *param_2;\n          uVar9 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous; possibilities:\",5);\n          __fprintf_chk(stderr,1,uVar9,uVar8,param_9,uVar2);\n          pcVar13 = local_70;\n          __stream = stderr;\n          do {\n            if (*pcVar13 != '\\0') {\n              __fprintf_chk(__stream,1,&DAT_004084e9,param_9,*param_4);\n              __stream = stderr;\n            }\n            pcVar13 = pcVar13 + 1;\n            param_4 = param_4 + 4;\n          } while (local_70 + uVar14 + 1 != pcVar13);\n          fputc(10,__stream);\n          funlockfile(stderr);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n      }\n      if (bVar4) {\n        free(local_70);\n      }\n      sVar15 = strlen(pcVar13);\n      *(char **)(param_7 + 8) = pcVar13 + sVar15;\n      *param_7 = *param_7 + 1;\n      param_7[2] = 0;\n      return 0x3f;\n    }\n    if (ppcVar10 != (char **)0x0) {\n      uVar14 = (ulong)local_44;\nLAB_004055a0:\n      iVar6 = *param_7;\n      *(undefined8 *)(param_7 + 8) = 0;\n      iVar5 = iVar6 + 1;\n      *param_7 = iVar5;\n      if (*pcVar11 == '\\0') {\n        if (*(int *)(ppcVar10 + 1) == 1) {\n          if (param_1 <= iVar5) {\n            if (param_8 != 0) {\n              pcVar13 = *ppcVar10;\n              uVar2 = *param_2;\n              uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' requires an argument\\n\",5);\n              __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n            }\n            param_7[2] = *(int *)(ppcVar10 + 3);\n            return (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          *param_7 = iVar6 + 2;\n          *(undefined8 *)(param_7 + 4) = param_2[iVar5];\n        }\n      }\n      else {\n        if (*(int *)(ppcVar10 + 1) == 0) {\n          if (param_8 != 0) {\n            pcVar13 = *ppcVar10;\n            uVar2 = *param_2;\n            uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' doesn\\'t allow an argument\\n\",5);\n            __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          }\n          param_7[2] = *(int *)(ppcVar10 + 3);\n          return 0x3f;\n        }\n        *(char **)(param_7 + 4) = pcVar11 + 1;\n      }\n      if (param_5 != (undefined4 *)0x0) {\n        *param_5 = (int)uVar14;\n      }\n      if ((int *)ppcVar10[2] == (int *)0x0) {\n        return *(int *)(ppcVar10 + 3);\n      }\n      *(int *)ppcVar10[2] = *(int *)(ppcVar10 + 3);\n      return 0;\n    }\n  }\n  if (((param_6 != 0) && (*(char *)(param_2[*param_7] + 1) != '-')) &&\n     (pcVar11 = strchr(param_3,(int)cVar1), pcVar11 != (char *)0x0)) {\n    return -1;\n  }\n  if (param_8 != 0) {\n    uVar2 = *param_2;\n    uVar8 = dcgettext(0,\"%s: unrecognized option \\'%s%s\\'\\n\",5);\n    __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n  }\n  *(undefined8 *)(param_7 + 8) = 0;\n  *param_7 = *param_7 + 1;\n  param_7[2] = 0;\n  return 0x3f;\n}\n\n",
            "funcName": "FUN_00405380"
        },
        {
            "funcStartAddr": "0x4059a0",
            "funcEndAddr": "0x405f07",
            "decompiledFuncCode": "\nuint FUN_004059a0(uint param_1,undefined8 *param_2,char *param_3,long param_4,undefined8 param_5,\n                 ulong param_6,uint *param_7,int param_8)\n\n{\n  undefined8 uVar1;\n  char cVar2;\n  uint uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  long lVar6;\n  uint uVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  uint uVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  undefined1 *puVar15;\n  \n  bVar14 = 0;\n  uVar3 = param_7[1];\n  if ((int)param_1 < 1) {\n    return 0xffffffff;\n  }\n  uVar11 = *param_7;\n  *(undefined8 *)(param_7 + 4) = 0;\n  if (uVar11 == 0) {\n    *param_7 = 1;\n    uVar11 = 1;\nLAB_004059ea:\n    param_7[0xc] = uVar11;\n    param_7[0xb] = uVar11;\n    *(undefined8 *)(param_7 + 8) = 0;\n    if (*param_3 == '-') {\n      param_7[10] = 2;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else if (*param_3 == '+') {\n      param_7[10] = 0;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else {\n      pbVar8 = (byte *)0x0;\n      if (param_8 == 0) {\n        pcVar4 = getenv(\"POSIXLY_CORRECT\");\n        param_6 = param_6 & 0xffffffff;\n        if (pcVar4 == (char *)0x0) {\n          param_7[10] = 1;\n          pbVar8 = *(byte **)(param_7 + 8);\n          goto LAB_00405aed;\n        }\n        pbVar8 = *(byte **)(param_7 + 8);\n      }\n      param_7[10] = 0;\n    }\nLAB_00405aed:\n    param_7[6] = 1;\n    cVar2 = *param_3;\nLAB_00405af8:\n    if (cVar2 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 == (byte *)0x0) goto LAB_00405a68;\nLAB_00405b0c:\n    if (*pbVar8 == 0) goto LAB_00405a68;\n  }\n  else {\n    if (param_7[6] == 0) goto LAB_004059ea;\n    cVar2 = *param_3;\n    pbVar8 = *(byte **)(param_7 + 8);\n    if ((cVar2 - 0x2bU & 0xfd) != 0) goto LAB_00405af8;\n    pcVar4 = param_3 + 1;\n    param_3 = param_3 + 1;\n    if (*pcVar4 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 != (byte *)0x0) goto LAB_00405b0c;\nLAB_00405a68:\n    uVar11 = *param_7;\n    if (param_7[0xc] != uVar11 && (int)uVar11 <= (int)param_7[0xc]) {\n      param_7[0xc] = uVar11;\n    }\n    if ((int)uVar11 < (int)param_7[0xb]) {\n      param_7[0xb] = uVar11;\n    }\n    if (param_7[10] == 1) {\n      uVar7 = param_7[0xc];\n      if (param_7[0xb] == uVar7) {\n        if (uVar11 != uVar7) {\n          param_7[0xb] = uVar11;\n          uVar7 = uVar11;\n        }\n      }\n      else if (uVar11 != uVar7) {\n        FUN_004052a0(param_2,param_7);\n        param_6 = param_6 & 0xffffffff;\n        uVar7 = *param_7;\n      }\n      uVar11 = uVar7;\n      uVar7 = uVar11;\n      if ((int)uVar11 < (int)param_1) {\n        lVar6 = (long)(int)uVar11;\n        do {\n          if ((*(char *)param_2[lVar6] == '-') && (((char *)param_2[lVar6])[1] != '\\0')) {\n            uVar11 = *param_7;\n            uVar7 = (uint)lVar6;\n            break;\n          }\n          uVar11 = (uint)lVar6 + 1;\n          lVar6 = lVar6 + 1;\n          *param_7 = uVar11;\n          uVar7 = uVar11;\n        } while ((int)lVar6 < (int)param_1);\n      }\n      param_7[0xc] = uVar7;\n    }\n    bVar12 = param_1 < uVar11;\n    bVar13 = param_1 == uVar11;\n    if (bVar13) {\n      param_1 = param_7[0xc];\n      uVar11 = param_7[0xb];\nLAB_00405bd6:\n      if (uVar11 != param_1) {\n        *param_7 = uVar11;\n      }\n      return 0xffffffff;\n    }\n    lVar6 = 3;\n    pbVar8 = (byte *)param_2[(int)uVar11];\n    pbVar9 = pbVar8;\n    pbVar10 = &DAT_00408501;\n    do {\n      if (lVar6 == 0) break;\n      lVar6 = lVar6 + -1;\n      bVar12 = *pbVar9 < *pbVar10;\n      bVar13 = *pbVar9 == *pbVar10;\n      pbVar9 = pbVar9 + (ulong)bVar14 * -2 + 1;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n    if ((!bVar12 && !bVar13) == bVar12) {\n      uVar11 = uVar11 + 1;\n      *param_7 = uVar11;\n      if (param_7[0xb] == param_7[0xc]) {\n        param_7[0xb] = uVar11;\n      }\n      else {\n        bVar12 = uVar11 != param_7[0xc];\n        uVar11 = param_7[0xb];\n        if (bVar12) {\n          FUN_004052a0(param_2,param_7);\n          uVar11 = param_7[0xb];\n        }\n      }\n      param_7[0xc] = param_1;\n      *param_7 = param_1;\n      goto LAB_00405bd6;\n    }\n    if ((*pbVar8 != 0x2d) || (bVar14 = pbVar8[1], bVar14 == 0)) {\n      if (param_7[10] == 0) {\n        return 0xffffffff;\n      }\n      *(byte **)(param_7 + 4) = pbVar8;\n      *param_7 = uVar11 + 1;\n      return 1;\n    }\n    if (param_4 != 0) {\n      if (bVar14 == 0x2d) {\n        *(byte **)(param_7 + 8) = pbVar8 + 2;\n        puVar15 = &DAT_00408501;\n        goto LAB_00405d35;\n      }\n      if ((int)param_6 != 0) {\n        if (pbVar8[2] == 0) {\n          pcVar4 = strchr(param_3,(int)(char)bVar14);\n          param_6 = param_6 & 0xffffffff;\n          if (pcVar4 != (char *)0x0) goto LAB_00405ce0;\n        }\n        *(byte **)(param_7 + 8) = pbVar8 + 1;\n        uVar11 = FUN_00405380(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,\n                              &DAT_00408502);\n        if (uVar11 != 0xffffffff) {\n          return uVar11;\n        }\n        pbVar8 = (byte *)param_2[(int)*param_7];\n      }\n    }\nLAB_00405ce0:\n    pbVar8 = pbVar8 + 1;\n  }\n  pbVar9 = pbVar8 + 1;\n  *(byte **)(param_7 + 8) = pbVar9;\n  bVar14 = *pbVar8;\n  uVar11 = (uint)(char)bVar14;\n  pcVar4 = strchr(param_3,uVar11);\n  if (pbVar8[1] == 0) {\n    *param_7 = *param_7 + 1;\n  }\n  if (((byte)(bVar14 - 0x3a) < 2) || (pcVar4 == (char *)0x0)) {\n    if (uVar3 != 0) {\n      uVar1 = *param_2;\n      uVar5 = dcgettext(0,\"%s: invalid option -- \\'%c\\'\\n\",5);\n      __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n    }\n    param_7[2] = uVar11;\n    return 0x3f;\n  }\n  if (((*pcVar4 != 'W') || (param_4 == 0)) || (pcVar4[1] != ';')) {\n    if (pcVar4[1] == ':') {\n      if (pcVar4[2] == ':') {\n        if (pbVar8[1] == 0) {\n          *(undefined8 *)(param_7 + 4) = 0;\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = *param_7 + 1;\n        }\n      }\n      else {\n        uVar7 = *param_7;\n        if (pbVar8[1] == 0) {\n          if (param_1 == uVar7) {\n            if (uVar3 != 0) {\n              uVar1 = *param_2;\n              uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n              __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n            }\n            param_7[2] = uVar11;\n            uVar11 = (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          else {\n            uVar1 = param_2[(int)uVar7];\n            *param_7 = uVar7 + 1;\n            *(undefined8 *)(param_7 + 4) = uVar1;\n          }\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = uVar7 + 1;\n        }\n      }\n      *(undefined8 *)(param_7 + 8) = 0;\n      return uVar11;\n    }\n    return uVar11;\n  }\n  if (pbVar8[1] == 0) {\n    if (*param_7 == param_1) {\n      if (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n        __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n      }\n      param_7[2] = uVar11;\n      return (uint)(*param_3 != ':') * 5 + 0x3a;\n    }\n    pbVar9 = (byte *)param_2[(int)*param_7];\n  }\n  *(byte **)(param_7 + 8) = pbVar9;\n  param_6 = 0;\n  *(undefined8 *)(param_7 + 4) = 0;\n  puVar15 = &DAT_00408520;\nLAB_00405d35:\n  uVar3 = FUN_00405380(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,puVar15);\n  return uVar3;\n}\n\n",
            "funcName": "FUN_004059a0"
        },
        {
            "funcStartAddr": "0x405f70",
            "funcEndAddr": "0x405fc6",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00405f70(void)\n\n{\n  DAT_0060a440 = DAT_0060a278._4_4_;\n  _DAT_0060a444 = (undefined4)DAT_0060a278;\n  FUN_004059a0();\n  DAT_0060a278._4_4_ = DAT_0060a440;\n  DAT_0060a480 = DAT_0060a450;\n  _DAT_0060a274 = DAT_0060a448;\n  return;\n}\n\n",
            "funcName": "FUN_00405f70"
        },
        {
            "funcStartAddr": "0x405fd0",
            "funcEndAddr": "0x405fe8",
            "decompiledFuncCode": "\nvoid FUN_00405fd0(void)\n\n{\n  FUN_00405f70();\n  return;\n}\n\n",
            "funcName": "FUN_00405fd0"
        },
        {
            "funcStartAddr": "0x405ff0",
            "funcEndAddr": "0x406003",
            "decompiledFuncCode": "\nvoid FUN_00405ff0(void)\n\n{\n  FUN_00405f70();\n  return;\n}\n\n",
            "funcName": "FUN_00405ff0"
        },
        {
            "funcStartAddr": "0x406010",
            "funcEndAddr": "0x406025",
            "decompiledFuncCode": "\nvoid FUN_00406010(void)\n\n{\n  FUN_004059a0();\n  return;\n}\n\n",
            "funcName": "FUN_00406010"
        },
        {
            "funcStartAddr": "0x406030",
            "funcEndAddr": "0x406046",
            "decompiledFuncCode": "\nvoid FUN_00406030(void)\n\n{\n  FUN_00405f70();\n  return;\n}\n\n",
            "funcName": "FUN_00406030"
        },
        {
            "funcStartAddr": "0x406050",
            "funcEndAddr": "0x406068",
            "decompiledFuncCode": "\nvoid FUN_00406050(void)\n\n{\n  FUN_004059a0();\n  return;\n}\n\n",
            "funcName": "FUN_00406050"
        },
        {
            "funcStartAddr": "0x406070",
            "funcEndAddr": "0x4060df",
            "decompiledFuncCode": "\nsize_t FUN_00406070(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  wchar_t local_1c;\n  \n  if (param_2 == (byte *)0x0) {\n    param_3 = 1;\n    param_2 = &DAT_00407119;\n  }\n  else {\n    if (param_3 == 0) {\n      return 0xfffffffffffffffe;\n    }\n    if (param_1 != (wchar_t *)0x0) goto LAB_00406094;\n  }\n  param_1 = &local_1c;\nLAB_00406094:\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (cVar1 = FUN_00402800(0), cVar1 == '\\0')) {\n    sVar2 = 1;\n    *param_1 = (uint)*param_2;\n  }\n  return sVar2;\n}\n\n",
            "funcName": "FUN_00406070"
        },
        {
            "funcStartAddr": "0x4060f0",
            "funcEndAddr": "0x40614c",
            "decompiledFuncCode": "\nulong FUN_004060f0(uint *param_1)\n\n{\n  uint uVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  uVar1 = *param_1;\n  uVar3 = FUN_00405040(param_1);\n  if ((uVar1 & 0x20) == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_004060f0"
        },
        {
            "funcStartAddr": "0x406150",
            "funcEndAddr": "0x4066a4",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nchar * FUN_00406150(void)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  char *__s1;\n  size_t sVar5;\n  size_t sVar6;\n  char *pcVar7;\n  size_t __n;\n  char *__file;\n  FILE *__stream;\n  byte *pbVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  long lVar11;\n  ulong uVar12;\n  undefined8 *puVar13;\n  char *__ptr;\n  bool bVar14;\n  long local_d0;\n  undefined8 local_c0;\n  undefined8 local_b8;\n  undefined auStack_80 [8];\n  undefined8 local_78;\n  \n  __s1 = nl_langinfo(0xe);\n  if (__s1 == (char *)0x0) {\n    __s1 = \"\";\n  }\n  if (DAT_0060a478 != (char *)0x0) goto LAB_0040618a;\n  pcVar7 = getenv(\"CHARSETALIASDIR\");\n  if ((pcVar7 == (char *)0x0) || (*pcVar7 == '\\0')) {\n    sVar6 = 0x73;\n    sVar5 = 0x65;\n    __n = 100;\n    pcVar7 = \n    \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\"\n    ;\nLAB_00406275:\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      __file[__n] = '/';\n      goto LAB_00406296;\n    }\n  }\n  else {\n    __n = strlen(pcVar7);\n    if (__n == 0) {\n      sVar6 = 0xe;\n    }\n    else {\n      if (pcVar7[__n - 1] != '/') {\n        sVar6 = __n + 0xf;\n        sVar5 = __n + 1;\n        goto LAB_00406275;\n      }\n      sVar6 = __n + 0xe;\n    }\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      sVar5 = __n;\nLAB_00406296:\n      puVar13 = (undefined8 *)(__file + sVar5);\n      *puVar13 = 0x2e74657372616863;\n      *(undefined2 *)((long)puVar13 + 0xc) = 0x73;\n      *(undefined4 *)(puVar13 + 1) = 0x61696c61;\n      iVar2 = open(__file,0);\n      if (-1 < iVar2) {\n        __stream = fdopen(iVar2,\"r\");\n        local_d0 = 0;\n        if (__stream != (FILE *)0x0) {\n          pcVar7 = (char *)0x0;\nLAB_00406330:\n          pbVar8 = (byte *)__stream->_IO_read_ptr;\n          if (__stream->_IO_read_end <= pbVar8) goto LAB_004064bc;\n          do {\n            __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n            uVar4 = (uint)*pbVar8;\n            __ptr = pcVar7;\n            while( true ) {\n              pcVar7 = __ptr;\n              if ((uVar4 - 9 < 2) || (uVar4 == 0x20)) goto LAB_00406330;\n              if (uVar4 == 0x23) goto LAB_00406521;\n              ungetc(uVar4,__stream);\n              iVar2 = fscanf(__stream,\"%50s %50s\",&local_b8,&local_78);\n              puVar13 = &local_b8;\n              if (iVar2 < 2) goto LAB_004064cf;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              lVar11 = (long)puVar13 +\n                       ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_b8);\n              puVar13 = &local_78;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              local_c0 = (long)puVar13 +\n                         ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_78);\n              lVar9 = lVar11 + local_c0;\n              if (local_d0 == 0) {\n                pcVar7 = (char *)malloc(lVar9 + 3);\n              }\n              else {\n                lVar9 = lVar9 + local_d0;\n                pcVar7 = (char *)realloc(__ptr,lVar9 + 3);\n              }\n              local_d0 = lVar9 + 2;\n              if (pcVar7 == (char *)0x0) {\n                pcVar7 = \"\";\n                free(__ptr);\n                FUN_00405040(__stream);\n                goto LAB_004062d4;\n              }\n              uVar12 = lVar11 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (-2 - lVar11) + (local_d0 - local_c0));\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_b8;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 2));\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_b8;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 4));\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_b8._4_4_,(undefined4)local_b8);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 8));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_b8 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              uVar12 = local_c0 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (local_d0 - local_c0) + -1);\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_78;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 6);\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_78;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 4);\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_78._4_4_,(undefined4)local_78);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)auStack_80 + (uVar12 & 0xffffffff));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_78 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              pbVar8 = (byte *)__stream->_IO_read_ptr;\n              if (pbVar8 < __stream->_IO_read_end) break;\nLAB_004064bc:\n              uVar4 = __uflow(__stream);\n              __ptr = pcVar7;\n              if (uVar4 == 0xffffffff) goto LAB_004064cf;\n            }\n          } while( true );\n        }\n        close(iVar2);\n      }\n      goto LAB_004062ce;\n    }\n  }\n  DAT_0060a478 = \"\";\nLAB_0040618a:\n  cVar1 = *DAT_0060a478;\n  pcVar7 = DAT_0060a478;\n  do {\n    if (cVar1 == '\\0') {\nLAB_004061e4:\n      if (*__s1 == '\\0') {\n        __s1 = \"ASCII\";\n      }\n      return __s1;\n    }\n    iVar2 = strcmp(__s1,pcVar7);\n    if ((iVar2 == 0) || ((cVar1 == '*' && (pcVar7[1] == '\\0')))) {\n      sVar6 = strlen(pcVar7);\n      __s1 = pcVar7 + sVar6 + 1;\n      goto LAB_004061e4;\n    }\n    sVar6 = strlen(pcVar7);\n    sVar5 = strlen(pcVar7 + sVar6 + 1);\n    pcVar7 = pcVar7 + sVar6 + 1 + sVar5 + 1;\n    cVar1 = *pcVar7;\n  } while( true );\nLAB_00406521:\n  do {\n    pbVar8 = (byte *)__stream->_IO_read_ptr;\n    if (pbVar8 < __stream->_IO_read_end) {\n      __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n      uVar4 = (uint)*pbVar8;\n      bVar14 = true;\n    }\n    else {\n      uVar4 = __uflow(__stream);\n      bVar14 = uVar4 != 0xffffffff;\n    }\n  } while ((uVar4 != 10) && (bVar14));\n  if (uVar4 == 0xffffffff) goto LAB_004064cf;\n  goto LAB_00406330;\nLAB_004064cf:\n  FUN_00405040(__stream);\n  if (local_d0 == 0) {\nLAB_004062ce:\n    pcVar7 = \"\";\n  }\n  else {\n    pcVar7[local_d0] = '\\0';\n  }\nLAB_004062d4:\n  free(__file);\n  DAT_0060a478 = pcVar7;\n  goto LAB_0040618a;\n}\n\n",
            "funcName": "FUN_00406150"
        },
        {
            "funcStartAddr": "0x4066c0",
            "funcEndAddr": "0x406761",
            "decompiledFuncCode": "\nint FUN_004066c0(char *param_1,long param_2,char *param_3,long param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  size_t sVar3;\n  size_t sVar4;\n  \n  piVar2 = __errno_location();\n  while( true ) {\n    *piVar2 = 0;\n    iVar1 = strcoll(param_1,param_3);\n    if (iVar1 != 0) {\n      return iVar1;\n    }\n    sVar3 = strlen(param_1);\n    sVar4 = strlen(param_3);\n    param_1 = param_1 + sVar3 + 1;\n    param_3 = param_3 + sVar4 + 1;\n    param_4 = param_4 - (sVar4 + 1);\n    param_2 = param_2 - (sVar3 + 1);\n    if (param_2 == 0) break;\n    if (param_4 == 0) {\n      return 1;\n    }\n  }\n  return -(uint)(param_4 != 0);\n}\n\n",
            "funcName": "FUN_004066c0"
        },
        {
            "funcStartAddr": "0x406780",
            "funcEndAddr": "0x40681e",
            "decompiledFuncCode": "\nundefined4 FUN_00406780(void *param_1,size_t param_2,void *param_3,size_t param_4)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined uVar3;\n  undefined uVar4;\n  int iVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  \n  if ((param_2 == param_4) && (iVar5 = memcmp(param_1,param_3,param_2), iVar5 == 0)) {\n    piVar7 = __errno_location();\n    *piVar7 = 0;\n    return 0;\n  }\n  puVar1 = (undefined *)((long)param_1 + param_2);\n  puVar2 = (undefined *)((long)param_3 + param_4);\n  uVar3 = *puVar1;\n  uVar4 = *puVar2;\n  *puVar1 = 0;\n  *puVar2 = 0;\n  uVar6 = FUN_004066c0(param_1,param_2 + 1,param_3,param_4 + 1);\n  *puVar1 = uVar3;\n  *puVar2 = uVar4;\n  return uVar6;\n}\n\n",
            "funcName": "FUN_00406780"
        },
        {
            "funcStartAddr": "0x406830",
            "funcEndAddr": "0x40688d",
            "decompiledFuncCode": "\nundefined8 FUN_00406830(void *param_1,size_t param_2,void *param_3,size_t param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  \n  if (param_2 == param_4) {\n    iVar1 = memcmp(param_1,param_3,param_2);\n    if (iVar1 == 0) {\n      piVar2 = __errno_location();\n      *piVar2 = 0;\n      return 0;\n    }\n  }\n  uVar3 = FUN_004066c0(param_1,param_2,param_3,param_4);\n  return uVar3;\n}\n\n",
            "funcName": "FUN_00406830"
        },
        {
            "funcStartAddr": "0x4068a0",
            "funcEndAddr": "0x4068fd",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004068d3) */\n/* WARNING: Removing unreachable block (ram,0x004068d8) */\n\nvoid FUN_004068a0(void)\n\n{\n  __DT_INIT();\n  return;\n}\n\n",
            "funcName": "FUN_004068a0"
        },
        {
            "funcStartAddr": "0x406900",
            "funcEndAddr": "0x406901",
            "decompiledFuncCode": "\nvoid FUN_00406900(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_00406900"
        },
        {
            "funcStartAddr": "0x406910",
            "funcEndAddr": "0x406928",
            "decompiledFuncCode": "\nvoid FUN_00406910(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,DAT_0060a1e8);\n  return;\n}\n\n",
            "funcName": "FUN_00406910"
        },
        {
            "funcStartAddr": "0x406928",
            "funcEndAddr": "0x406948",
            "decompiledFuncCode": "\nundefined8 FUN_00406928(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  code **ppcVar1;\n  \n  for (ppcVar1 = (code **)&DAT_00609e30; *ppcVar1 != (code *)0xffffffffffffffff;\n      ppcVar1 = ppcVar1 + -1) {\n    (**ppcVar1)();\n  }\n  return param_3;\n}\n\n",
            "funcName": "FUN_00406928"
        }
    ],
    "decompilerName": "Ghidra",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_comm.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O"
}