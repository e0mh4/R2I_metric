{
    "funcCount": 182,
    "funcInfo": [
        {
            "funcStartAddr": "0x401e05",
            "funcEndAddr": "0x401e0a",
            "decompiledFuncCode": "\nvoid FUN_00401e05(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401e05"
        },
        {
            "funcStartAddr": "0x401e0a",
            "funcEndAddr": "0x401e0f",
            "decompiledFuncCode": "\nvoid FUN_00401e0a(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401e0a"
        },
        {
            "funcStartAddr": "0x401e0f",
            "funcEndAddr": "0x401e14",
            "decompiledFuncCode": "\nvoid FUN_00401e0f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401e0f"
        },
        {
            "funcStartAddr": "0x401e14",
            "funcEndAddr": "0x401e19",
            "decompiledFuncCode": "\nvoid FUN_00401e14(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401e14"
        },
        {
            "funcStartAddr": "0x401e1e",
            "funcEndAddr": "0x401e23",
            "decompiledFuncCode": "\nvoid FUN_00401e1e(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401e1e"
        },
        {
            "funcStartAddr": "0x401e23",
            "funcEndAddr": "0x401e28",
            "decompiledFuncCode": "\nvoid FUN_00401e23(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401e23"
        },
        {
            "funcStartAddr": "0x401e28",
            "funcEndAddr": "0x401e2d",
            "decompiledFuncCode": "\nvoid FUN_00401e28(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401e28"
        },
        {
            "funcStartAddr": "0x401e2d",
            "funcEndAddr": "0x401e32",
            "decompiledFuncCode": "\nvoid FUN_00401e2d(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401e2d"
        },
        {
            "funcStartAddr": "0x401e32",
            "funcEndAddr": "0x401e37",
            "decompiledFuncCode": "\nvoid FUN_00401e32(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401e32"
        },
        {
            "funcStartAddr": "0x401e37",
            "funcEndAddr": "0x401e3c",
            "decompiledFuncCode": "\nvoid FUN_00401e37(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401e37"
        },
        {
            "funcStartAddr": "0x401e3c",
            "funcEndAddr": "0x401e41",
            "decompiledFuncCode": "\nvoid FUN_00401e3c(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401e3c"
        },
        {
            "funcStartAddr": "0x401e41",
            "funcEndAddr": "0x401e46",
            "decompiledFuncCode": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "thunk_401e41"
        },
        {
            "funcStartAddr": "0x401e50",
            "funcEndAddr": "0x40232d",
            "decompiledFuncCode": "\nbool FUN_00401e50(uint param_1,undefined8 *param_2)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  int *piVar6;\n  undefined8 uVar7;\n  long lVar8;\n  ulong uVar9;\n  byte *pbVar10;\n  byte *pbVar11;\n  char *__filename;\n  bool bVar12;\n  bool bVar13;\n  bool bVar14;\n  byte bVar15;\n  char local_d8 [4];\n  undefined4 local_d4;\n  undefined local_d0;\n  char cStack_cf;\n  undefined local_ce;\n  long local_c8;\n  undefined local_c0;\n  undefined local_bf;\n  undefined uStack_be;\n  stat local_b8;\n  \n  bVar15 = 0;\n  uVar9 = (ulong)param_1;\n  bVar14 = true;\n  FUN_00403d10(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\n                 \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\"\n                );\n  textdomain(\"coreutils\");\n  FUN_0040b1f0();\n  local_d8[0] = '\\0';\n  local_d4 = 4;\n  local_d0 = 0;\n  cStack_cf = '\\0';\n  local_ce = 0;\n  local_c8 = 0;\n  iVar2 = isatty(0);\n  local_c0 = iVar2 != 0;\n  __filename = (char *)0x0;\n  local_bf = 0;\n  uStack_be = 0;\nLAB_00401ee0:\n  cVar1 = (char)__filename;\n  uVar3 = FUN_004093f0(uVar9,param_2,\"dfirvIR\",&PTR_s_force_0040bd60,0);\n  if (uVar3 != 0xffffffff) {\n    if (uVar3 != 0x69) {\n      if ((int)uVar3 < 0x6a) {\n        if (uVar3 == 0x49) {\nLAB_004020e0:\n          local_d4 = 4;\n          __filename = (char *)0x1;\n          local_d8[0] = '\\0';\n        }\n        else {\n          if ((int)uVar3 < 0x4a) {\n            if (uVar3 == 0xffffff7d) {\n              FUN_00405e00(stdout,&DAT_0040b244,\"GNU coreutils\",PTR_DAT_00610270,\"Paul Rubin\",\n                           \"David MacKenzie\",\"Richard M. Stallman\",\"Jim Meyering\",0);\n                    /* WARNING: Subroutine does not return */\n              exit(0);\n            }\n            if (uVar3 != 0xffffff7e) {\nLAB_00401fb1:\n              lVar8 = 1;\n              while( true ) {\n                if ((int)param_1 <= (int)lVar8) goto LAB_004022bc;\n                __filename = (char *)param_2[lVar8];\n                if (((*__filename == '-') && (__filename[1] != '\\0')) &&\n                   (iVar2 = __lxstat(1,__filename,&local_b8), iVar2 == 0)) break;\n                lVar8 = lVar8 + 1;\n              }\n              uVar4 = FUN_004056e0(4,__filename);\n              uVar9 = FUN_00405600(1,3,__filename);\n              uVar7 = *param_2;\n              uVar5 = dcgettext(0,\"Try \\'%s ./%s\\' to remove the file %s.\\n\",5);\n              __fprintf_chk(stderr,1,uVar5,uVar7,uVar9,uVar4);\n              goto LAB_004022bc;\n            }\n            FUN_00402450(0);\n            goto LAB_004020d0;\n          }\n          if (uVar3 == 100) {\n            local_ce = 1;\n          }\n          else if (uVar3 == 0x66) {\n            local_d4 = 5;\n            __filename = (char *)0x0;\n            local_d8[0] = '\\x01';\n          }\n          else {\n            if (uVar3 != 0x52) goto LAB_00401fb1;\nLAB_00402061:\n            cStack_cf = '\\x01';\n          }\n        }\n        goto LAB_00401ee0;\n      }\n      if (uVar3 == 0x81) {\n        local_d0 = 1;\n        goto LAB_00401ee0;\n      }\n      if (0x81 < (int)uVar3) {\n        bVar12 = uVar3 < 0x83;\n        bVar13 = uVar3 == 0x83;\n        if (bVar13) {\nLAB_004020d0:\n          bVar14 = true;\n        }\n        else if ((int)uVar3 < 0x83) {\n          lVar8 = 0x13;\n          pbVar10 = (byte *)param_2[(long)DAT_006102fc + -1];\n          pbVar11 = (byte *)\"--no-preserve-root\";\n          do {\n            if (lVar8 == 0) break;\n            lVar8 = lVar8 + -1;\n            bVar12 = *pbVar10 < *pbVar11;\n            bVar13 = *pbVar10 == *pbVar11;\n            pbVar10 = pbVar10 + (ulong)bVar15 * -2 + 1;\n            pbVar11 = pbVar11 + (ulong)bVar15 * -2 + 1;\n          } while (bVar13);\n          if ((!bVar12 && !bVar13) != bVar12) goto LAB_0040231d;\n          bVar14 = false;\n        }\n        else {\n          if (uVar3 != 0x84) goto LAB_00401fb1;\n          local_c0 = 1;\n        }\n        goto LAB_00401ee0;\n      }\n      if (uVar3 == 0x76) {\n        local_bf = 1;\n        goto LAB_00401ee0;\n      }\n      if (uVar3 != 0x80) {\n        if (uVar3 != 0x72) goto LAB_00401fb1;\n        goto LAB_00402061;\n      }\n      if (DAT_00610508 == 0) goto LAB_00402040;\n      lVar8 = FUN_00403900(\"--interactive\",DAT_00610508,&PTR_s_never_0040bd20,&DAT_0040bcf0,4,\n                           PTR_FUN_00610278);\n      iVar2 = *(int *)(&DAT_0040bcf0 + lVar8 * 4);\n      if (iVar2 == 1) goto LAB_004020e0;\n      if (iVar2 == 0) {\n        local_d4 = 5;\n        __filename = (char *)0x0;\n        goto LAB_00401ee0;\n      }\n      if (iVar2 != 2) goto LAB_00401ee0;\n    }\nLAB_00402040:\n    local_d4 = 3;\n    __filename = (char *)0x0;\n    local_d8[0] = '\\0';\n    goto LAB_00401ee0;\n  }\n  if (DAT_006102fc < (int)param_1) {\n    if ((cStack_cf != '\\0') && (bVar14)) goto LAB_004022c6;\nLAB_00402146:\n    uVar7 = DAT_00610368;\n    lVar8 = (long)DAT_006102fc;\n    if (cVar1 != '\\0') {\n      uVar9 = (ulong)(int)(param_1 - DAT_006102fc);\n      if (cStack_cf == '\\0') {\n        if (uVar9 < 4) goto LAB_004021b4;\n        uVar4 = dcngettext(0,\"%s: remove %lu argument? \",\"%s: remove %lu arguments? \",uVar9,5);\n      }\n      else {\n        uVar4 = dcngettext(0,\"%s: remove %lu argument recursively? \",\n                           \"%s: remove %lu arguments recursively? \",uVar9,5);\n      }\n      __fprintf_chk(stderr,1,uVar4,uVar7,uVar9);\n      cVar1 = FUN_00406290();\n      if (cVar1 == '\\0') goto LAB_004021f3;\n    }\nLAB_004021b4:\n    iVar2 = FUN_00402f50(param_2 + lVar8,local_d8);\n    bVar14 = iVar2 == 4;\n    if (2 < iVar2 - 2U) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"VALID_STATUS (status)\",\"src/rm.c\",0x163,\"main\");\n    }\n  }\n  else {\n    if (local_d8[0] == '\\0') {\n      while( true ) {\n        uVar7 = dcgettext(0,\"missing operand\",5);\n        error(0,0,uVar7);\nLAB_004022bc:\n        FUN_00402450(1);\nLAB_004022c6:\n        param_1 = (uint)uVar9;\n        cVar1 = (char)__filename;\n        local_c8 = FUN_00405950(&DAT_00610340);\n        if (local_c8 != 0) break;\n        param_2 = (undefined8 *)FUN_004056e0(4,&DAT_0040c3ce);\n        uVar7 = dcgettext(0,\"failed to get attributes of %s\",5);\n        piVar6 = __errno_location();\n        error(1,*piVar6,uVar7,param_2);\nLAB_0040231d:\n        uVar7 = dcgettext(0,\"you may not abbreviate the --no-preserve-root option\",5);\n        error(1,0,uVar7);\n      }\n      goto LAB_00402146;\n    }\nLAB_004021f3:\n    bVar14 = false;\n  }\n  return bVar14;\n}\n\n",
            "funcName": "FUN_00401e50"
        },
        {
            "funcStartAddr": "0x402370",
            "funcEndAddr": "0x40239b",
            "decompiledFuncCode": "\nvoid FUN_00402370(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_0060fff0)\n            (FUN_00401e50,unaff_retaddr,&stack0x00000008,FUN_0040b180,FUN_0040b1e0,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "funcName": "FUN_00402370"
        },
        {
            "funcStartAddr": "0x40239b",
            "funcEndAddr": "0x4023ba",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004023a8) */\n/* WARNING: Removing unreachable block (ram,0x004023b2) */\n\nvoid FUN_0040239b(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_0040239b"
        },
        {
            "funcStartAddr": "0x4023ba",
            "funcEndAddr": "0x4023f1",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004023e9) */\n\nvoid FUN_004023ba(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_004023ba"
        },
        {
            "funcStartAddr": "0x4023f1",
            "funcEndAddr": "0x402448",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402426) */\n\nvoid FUN_004023f1(void)\n\n{\n  if (DAT_00610328 != '\\0') {\n    return;\n  }\n  FUN_0040239b();\n  DAT_00610328 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_004023f1"
        },
        {
            "funcStartAddr": "0x402448",
            "funcEndAddr": "0x40244d",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004023e9) */\n\nvoid thunk_FUN_004023ba(void)\n\n{\n  return;\n}\n\n",
            "funcName": "thunk_402448"
        },
        {
            "funcStartAddr": "0x402450",
            "funcEndAddr": "0x40281d",
            "decompiledFuncCode": "\nvoid FUN_00402450(int param_1)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  byte **ppbVar5;\n  undefined8 uVar7;\n  long lVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  bool bVar11;\n  bool bVar12;\n  byte bVar13;\n  byte *local_88;\n  char *local_80;\n  byte *local_78 [5];\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  char *local_38;\n  char *local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  byte **ppbVar6;\n  \n  uVar7 = DAT_00610368;\n  bVar13 = 0;\n  if (param_1 != 0) {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar7);\n    goto LAB_0040248f;\n  }\n  uVar3 = dcgettext(0,\"Usage: %s [OPTION]... [FILE]...\\n\",5);\n  __printf_chk(1,uVar3,uVar7);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"Remove (unlink) the FILE(s).\\n\\n  -f, --force           ignore nonexistent files and arguments, never prompt\\n  -i                    prompt before every removal\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"  -I                    prompt once before removing more than three files, or\\n                          when removing recursively; less intrusive than -i,\\n                          while still giving protection against most mistakes\\n      --interactive[=WHEN]  prompt according to WHEN: never, once (-I), or\\n                          always (-i); without WHEN, prompt always\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --one-file-system  when removing a hierarchy recursively, skip any\\n                          directory that is on a file system different from\\n                          that of the corresponding command line argument\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"      --no-preserve-root  do not treat \\'/\\' specially\\n      --preserve-root   do not remove \\'/\\' (default)\\n  -r, -R, --recursive   remove directories and their contents recursively\\n  -d, --dir             remove empty directories\\n  -v, --verbose         explain what is being done\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n  fputs_unlocked(pcVar4,pFVar1);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nBy default, rm does not remove directories.  Use the --recursive (-r or -R)\\noption to remove each listed directory, too, along with all of its contents.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  uVar7 = DAT_00610368;\n  uVar3 = dcgettext(0,\n                    \"\\nTo remove a file whose name starts with a \\'-\\', for example \\'-foo\\',\\nuse one of these commands:\\n  %s -- -foo\\n\\n  %s ./-foo\\n\"\n                    ,5);\n  __printf_chk(1,uVar3,uVar7,uVar7);\n  pFVar1 = stdout;\n  pcVar4 = (char *)dcgettext(0,\n                             \"\\nNote that if you use rm to remove a file, it might be possible to recover\\nsome of its contents, given sufficient expertise and/or time.  For greater\\nassurance that the contents are truly unrecoverable, consider using shred.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar4,pFVar1);\n  local_88 = &DAT_0040b247;\n  local_80 = \"test invocation\";\n  local_78[0] = (byte *)0x40b2c1;\n  local_78[1] = (byte *)0x40b259;\n  local_78[2] = (byte *)0x40b26f;\n  local_78[3] = (byte *)0x40b279;\n  local_78[4] = (byte *)0x40b288;\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha384sum\";\n  local_40 = \"sha2 utilities\";\n  local_38 = \"sha512sum\";\n  local_30 = \"sha2 utilities\";\n  local_28 = 0;\n  local_20 = 0;\n  ppbVar5 = &local_88;\n  do {\n    ppbVar6 = ppbVar5;\n    ppbVar5 = ppbVar6 + 2;\n    pbVar9 = *ppbVar5;\n    bVar11 = false;\n    bVar12 = pbVar9 == (byte *)0x0;\n    if (bVar12) break;\n    lVar8 = 3;\n    pbVar10 = &DAT_0040b244;\n    do {\n      if (lVar8 == 0) break;\n      lVar8 = lVar8 + -1;\n      bVar11 = *pbVar10 < *pbVar9;\n      bVar12 = *pbVar10 == *pbVar9;\n      pbVar10 = pbVar10 + (ulong)bVar13 * -2 + 1;\n      pbVar9 = pbVar9 + (ulong)bVar13 * -2 + 1;\n    } while (bVar12);\n  } while ((!bVar11 && !bVar12) != bVar11);\n  pbVar9 = ppbVar6[3];\n  if (pbVar9 == (byte *)0x0) {\n    uVar7 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar7,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\n        pbVar9 = &DAT_0040b244;\n        goto LAB_004027f3;\n      }\n    }\n    pbVar9 = &DAT_0040b244;\n    uVar7 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar4 = \" invocation\";\n    __printf_chk(1,uVar7,\"https://www.gnu.org/software/coreutils/\",&DAT_0040b244);\n  }\n  else {\n    uVar7 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar7,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar2 = strncmp(pcVar4,\"en_\",3);\n      if (iVar2 != 0) {\nLAB_004027f3:\n        uVar7 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar7,&DAT_0040b244);\n      }\n    }\n    pcVar4 = \" invocation\";\n    uVar7 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar7,\"https://www.gnu.org/software/coreutils/\",&DAT_0040b244);\n    if (pbVar9 != &DAT_0040b244) {\n      pcVar4 = \"\";\n    }\n  }\n  uVar7 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  __printf_chk(1,uVar7,pbVar9,pcVar4);\nLAB_0040248f:\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n",
            "funcName": "FUN_00402450"
        },
        {
            "funcStartAddr": "0x402820",
            "funcEndAddr": "0x402a0e",
            "decompiledFuncCode": "\nundefined8 FUN_00402820(long param_1,long param_2,char *param_3,char param_4)\n\n{\n  short sVar1;\n  uint uVar2;\n  long lVar3;\n  long lVar4;\n  int iVar5;\n  uint *puVar6;\n  undefined8 uVar7;\n  undefined8 uVar8;\n  stat sStack_b8;\n  \n  iVar5 = unlinkat(*(int *)(param_1 + 0x2c),*(char **)(param_2 + 0x30),(uint)(param_4 != '\\0') << 9)\n  ;\n  if (iVar5 == 0) {\n    if (param_3[0x19] == '\\0') {\n      return 2;\n    }\n    uVar7 = FUN_004056e0(4,*(undefined8 *)(param_2 + 0x38));\n    if (param_4 == '\\0') {\n      uVar8 = dcgettext(0,\"removed %s\\n\",5);\n    }\n    else {\n      uVar8 = dcgettext(0,\"removed directory %s\\n\",5);\n    }\n    __printf_chk(1,uVar8,uVar7);\n    return 2;\n  }\n  puVar6 = (uint *)__errno_location();\n  uVar2 = *puVar6;\n  if (uVar2 == 0x1e) {\n    iVar5 = __fxstatat(1,*(int *)(param_1 + 0x2c),*(char **)(param_2 + 0x30),&sStack_b8,0x100);\n    if ((iVar5 == 0) || (uVar2 = *puVar6, uVar2 != 2)) {\n      *puVar6 = 0x1e;\n      goto LAB_0040289a;\n    }\n    if (*param_3 != '\\0') {\n      return 2;\n    }\n    if (*(short *)(param_2 + 0x70) != 4) goto LAB_0040289a;\n  }\n  else {\n    if (*param_3 == '\\0') {\nLAB_0040288f:\n      sVar1 = *(short *)(param_2 + 0x70);\n    }\n    else {\n      if (uVar2 == 0x14) {\n        return 2;\n      }\n      if (0x14 < (int)uVar2) {\n        if (uVar2 == 0x16) {\n          return 2;\n        }\n        if (uVar2 == 0x54) {\n          return 2;\n        }\n        goto LAB_0040288f;\n      }\n      if (uVar2 == 2) {\n        return 2;\n      }\n      sVar1 = *(short *)(param_2 + 0x70);\n    }\n    if ((sVar1 != 4) || (0x27 < uVar2)) goto LAB_0040289a;\n  }\n  if (((0x8000320000U >> ((ulong)uVar2 & 0x3f) & 1) != 0) &&\n     ((uVar2 = *(uint *)(param_2 + 0x40), uVar2 == 1 || (uVar2 == 0xd)))) {\n    *puVar6 = uVar2;\n  }\nLAB_0040289a:\n  uVar7 = FUN_004056e0(4,*(undefined8 *)(param_2 + 0x38));\n  uVar8 = dcgettext(0,\"cannot remove %s\",5);\n  error(0,*puVar6,uVar8,uVar7);\n  lVar3 = *(long *)(param_2 + 8);\n  lVar4 = *(long *)(lVar3 + 0x58);\n  while ((-1 < lVar4 && (*(long *)(lVar3 + 0x20) == 0))) {\n    *(undefined8 *)(lVar3 + 0x20) = 1;\n    lVar3 = *(long *)(lVar3 + 8);\n    lVar4 = *(long *)(lVar3 + 0x58);\n  }\n  return 4;\n}\n\n",
            "funcName": "FUN_00402820"
        },
        {
            "funcStartAddr": "0x402a30",
            "funcEndAddr": "0x402a93",
            "decompiledFuncCode": "\nundefined8 FUN_00402a30(int param_1,char *param_2,stat *param_3)\n\n{\n  int iVar1;\n  long lVar2;\n  int *piVar3;\n  \n  lVar2 = param_3->st_size;\n  if (lVar2 == -1) {\n    iVar1 = __fxstatat(1,param_1,param_2,param_3,0x100);\n    if (iVar1 != 0) {\n      param_3->st_size = -2;\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      param_3->st_ino = (long)iVar1;\n      goto LAB_00402a83;\n    }\n    lVar2 = param_3->st_size;\n  }\n  if (-1 < lVar2) {\n    return 0;\n  }\n  piVar3 = __errno_location();\n  iVar1 = *(int *)&param_3->st_ino;\nLAB_00402a83:\n  *piVar3 = iVar1;\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_00402a30"
        },
        {
            "funcStartAddr": "0x402aa0",
            "funcEndAddr": "0x402ee3",
            "decompiledFuncCode": "\nundefined8\nFUN_00402aa0(long param_1,long param_2,char param_3,char *param_4,int param_5,undefined4 *param_6)\n\n{\n  char *__file;\n  bool bVar1;\n  char cVar2;\n  int iVar3;\n  undefined4 uVar4;\n  int iVar5;\n  DIR *__dirp;\n  int *piVar6;\n  dirent *pdVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  uint uVar12;\n  undefined local_c8 [24];\n  uint local_b0;\n  undefined8 local_98;\n  \n  iVar5 = *(int *)(param_1 + 0x2c);\n  uVar10 = *(undefined8 *)(param_2 + 0x38);\n  __file = *(char **)(param_2 + 0x30);\n  if (param_6 == (undefined4 *)0x0) {\n    local_98 = 0xffffffffffffffff;\n    uVar12 = ~-(uint)(param_3 == '\\0') & 4;\n    if (param_3 != '\\0') {\n      param_3 = '\\0';\n    }\n  }\n  else {\n    *param_6 = 2;\n    local_98 = 0xffffffffffffffff;\n    uVar12 = (uint)(param_3 != '\\0') << 2;\n    iVar3 = openat(iVar5,__file,0x30900);\n    if (iVar3 < 0) {\nLAB_00402b57:\n      __dirp = (DIR *)0x0;\n      uVar4 = 3;\n    }\n    else {\n      __dirp = fdopendir(iVar3);\n      if (__dirp != (DIR *)0x0) {\n        piVar6 = __errno_location();\n        *piVar6 = 0;\n        do {\n          pdVar7 = readdir(__dirp);\n          if (pdVar7 == (dirent *)0x0) {\n            iVar3 = *piVar6;\n            closedir(__dirp);\n            if (iVar3 != 0) goto LAB_00402b57;\n            __dirp = (DIR *)0x1;\n            uVar4 = 4;\n            goto LAB_00402b5f;\n          }\n        } while ((pdVar7->d_name[0] == '.') &&\n                ((pdVar7->d_name[(ulong)(pdVar7->d_name[1] == '.') + 1] == '\\0' ||\n                 (pdVar7->d_name[(ulong)(pdVar7->d_name[1] == '.') + 1] == '/'))));\n        closedir(__dirp);\n        goto LAB_00402b57;\n      }\n      close(iVar3);\n      uVar4 = 3;\n    }\nLAB_00402b5f:\n    param_3 = (char)__dirp;\n    *param_6 = uVar4;\n  }\n  if (*(long *)(param_2 + 0x20) == 0) {\n    iVar3 = *(int *)(param_4 + 4);\n    if (iVar3 != 5) {\n      if (*param_4 == '\\0') {\n        if ((iVar3 == 3) || (param_4[0x18] != '\\0')) {\n          cVar2 = FUN_00405f40();\n          if (cVar2 != '\\0') {\nLAB_00402cb0:\n            iVar3 = *(int *)(param_4 + 4);\n            goto LAB_00402cb3;\n          }\n          iVar3 = FUN_00402a30(iVar5,__file,local_c8);\n          if (iVar3 != 0) goto LAB_00402e80;\n          if (((local_b0 & 0xf000) == 0xa000) ||\n             (iVar3 = faccessat(iVar5,__file,2,0x200), iVar3 == 0)) goto LAB_00402cb0;\n          piVar6 = __errno_location();\n          iVar3 = *piVar6;\n          if (iVar3 == 0xd) {\n            bVar1 = true;\n            goto LAB_00402cbb;\n          }\nLAB_00402e88:\n          uVar10 = FUN_004056e0(4,uVar10);\nLAB_00402cfd:\n          uVar11 = dcgettext(0,\"cannot remove %s\",5);\n          error(0,iVar3,uVar11,uVar10);\n          return 4;\n        }\n      }\n      else {\nLAB_00402cb3:\n        if (iVar3 == 3) {\n          bVar1 = false;\nLAB_00402cbb:\n          if (uVar12 == 0) {\n            iVar3 = FUN_00402a30(iVar5,__file,local_c8);\n            if (iVar3 != 0) {\nLAB_00402e80:\n              piVar6 = __errno_location();\n              iVar3 = *piVar6;\n              goto LAB_00402e88;\n            }\n            if ((local_b0 & 0xf000) == 0xa000) {\n              if (*(int *)(param_4 + 4) != 3) goto LAB_00402c80;\n            }\n            else if ((local_b0 & 0xf000) == 0x4000) goto LAB_00402ccc;\nLAB_00402e67:\n            uVar10 = FUN_004056e0(4,uVar10);\nLAB_00402c15:\n            iVar5 = FUN_00402a30(iVar5,__file,local_c8);\n            if (iVar5 != 0) {\n              uVar11 = dcgettext(0,\"cannot remove %s\",5);\n              piVar6 = __errno_location();\n              error(0,*piVar6,uVar11,uVar10);\n              return 4;\n            }\n            uVar8 = FUN_00403c20(local_c8);\n            uVar11 = DAT_00610368;\n            if (bVar1) {\n              uVar9 = dcgettext(0,\"%s: remove write-protected %s %s? \",5);\n            }\n            else {\n              uVar9 = dcgettext(0,\"%s: remove %s %s? \",5);\n            }\n            __fprintf_chk(stderr,1,uVar9,uVar11,uVar8,uVar10);\n          }\n          else {\n            if (uVar12 != 4) goto LAB_00402e67;\nLAB_00402ccc:\n            if (param_4[9] == '\\0') {\n              if ((param_4[10] == '\\0') || (param_3 == '\\0')) {\n                iVar3 = 0x15;\n                uVar10 = FUN_004056e0(4,uVar10);\n                goto LAB_00402cfd;\n              }\n              goto LAB_00402e67;\n            }\n            uVar10 = FUN_004056e0(4,uVar10);\n            uVar11 = DAT_00610368;\n            if ((param_5 != 2) || (param_3 != '\\0')) goto LAB_00402c15;\n            if (bVar1) {\n              uVar8 = dcgettext(0,\"%s: descend into write-protected directory %s? \",5);\n            }\n            else {\n              uVar8 = dcgettext(0,\"%s: descend into directory %s? \",5);\n            }\n            __fprintf_chk(stderr,1,uVar8,uVar11,uVar10);\n          }\n          cVar2 = FUN_00406290();\n          if (cVar2 == '\\0') goto LAB_00402ca0;\n        }\n      }\n    }\nLAB_00402c80:\n    uVar10 = 2;\n  }\n  else {\nLAB_00402ca0:\n    uVar10 = 3;\n  }\n  return uVar10;\n}\n\n",
            "funcName": "FUN_00402aa0"
        },
        {
            "funcStartAddr": "0x402f50",
            "funcEndAddr": "0x4035e3",
            "decompiledFuncCode": "\nint FUN_00402f50(long *param_1,long param_2)\n\n{\n  ushort uVar1;\n  undefined2 uVar2;\n  long *plVar3;\n  long lVar4;\n  int iVar5;\n  long lVar6;\n  long lVar7;\n  int *piVar8;\n  DIR *__dirp;\n  dirent *pdVar9;\n  char *pcVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  undefined8 uVar13;\n  long lVar14;\n  undefined4 uVar15;\n  byte *pbVar16;\n  byte *pbVar17;\n  int iVar18;\n  bool bVar19;\n  bool bVar20;\n  byte bVar21;\n  int local_3c [3];\n  \n  bVar21 = 0;\n  if (*param_1 == 0) {\n    return 2;\n  }\n  iVar18 = 2;\n  lVar6 = FUN_00406210(param_1,(-(uint)(*(char *)(param_2 + 8) == '\\0') & 0xffffffc0) + 600,0);\nLAB_00402f90:\n  lVar7 = fts_read(lVar6);\n  do {\n    if (lVar7 == 0) {\n      piVar8 = __errno_location();\n      if (*piVar8 == 0) {\n        iVar5 = fts_close(lVar6);\n      }\n      else {\n        iVar18 = 4;\n        uVar12 = dcgettext(0,\"fts_read failed\",5);\n        error(0,*piVar8,uVar12);\n        iVar5 = fts_close(lVar6);\n      }\n      if (iVar5 != 0) {\n        uVar12 = dcgettext(0,\"fts_close failed\",5);\n        error(0,*piVar8,uVar12);\n        return 4;\n      }\n      return iVar18;\n    }\n    uVar1 = *(ushort *)(lVar7 + 0x70);\n    switch(uVar1) {\n    default:\n      uVar12 = FUN_004057b0(0,3,*(undefined8 *)(lVar7 + 0x38));\n      uVar2 = *(undefined2 *)(lVar7 + 0x70);\n      uVar13 = dcgettext(0,\"unexpected failure: fts_info=%d: %s\\nplease report to %s\",5);\n      error(0,0,uVar13,uVar2,uVar12,\"bug-coreutils@gnu.org\");\n                    /* WARNING: Subroutine does not return */\n      abort();\n    case 1:\n      if (*(char *)(param_2 + 9) == '\\0') {\n        if (*(char *)(param_2 + 10) == '\\0') {\nLAB_004032d0:\n          uVar12 = 0x15;\n        }\n        else {\n          iVar5 = openat(*(int *)(lVar6 + 0x2c),*(char **)(lVar7 + 0x30),0x30900);\n          if (-1 < iVar5) {\n            __dirp = fdopendir(iVar5);\n            if (__dirp == (DIR *)0x0) {\n              close(iVar5);\n            }\n            else {\n              piVar8 = __errno_location();\n              *piVar8 = 0;\n              do {\n                pdVar9 = readdir(__dirp);\n                if (pdVar9 == (dirent *)0x0) {\n                  iVar5 = *piVar8;\n                  closedir(__dirp);\n                  if (iVar5 != 0) goto LAB_00403198;\n                  goto LAB_004031c0;\n                }\n              } while ((pdVar9->d_name[0] == '.') &&\n                      ((pdVar9->d_name[(ulong)(pdVar9->d_name[1] == '.') + 1] == '\\0' ||\n                       (pdVar9->d_name[(ulong)(pdVar9->d_name[1] == '.') + 1] == '/'))));\n              closedir(__dirp);\n            }\n          }\nLAB_00403198:\n          if (*(char *)(param_2 + 10) == '\\0') goto LAB_004032d0;\n          uVar12 = 0x27;\n        }\n        uVar13 = FUN_004056e0(4,*(undefined8 *)(lVar7 + 0x38));\n        uVar11 = dcgettext(0,\"cannot remove %s\",5);\n        error(0,uVar12,uVar11,uVar13);\n        lVar14 = *(long *)(lVar7 + 8);\n        lVar4 = *(long *)(lVar14 + 0x58);\n        while ((-1 < lVar4 && (*(long *)(lVar14 + 0x20) == 0))) {\n          *(undefined8 *)(lVar14 + 0x20) = 1;\n          lVar14 = *(long *)(lVar14 + 8);\n          lVar4 = *(long *)(lVar14 + 0x58);\n        }\n        goto LAB_00402ff6;\n      }\nLAB_004031c0:\n      if (*(long *)(lVar7 + 0x58) == 0) {\n        pcVar10 = (char *)FUN_00403b90(*(undefined8 *)(lVar7 + 0x30));\n        if ((*pcVar10 == '.') &&\n           ((pcVar10[(ulong)(pcVar10[1] == '.') + 1] == '\\0' ||\n            (pcVar10[(ulong)(pcVar10[1] == '.') + 1] == '/')))) {\n          FUN_00405600(2,4,*(undefined8 *)(lVar7 + 0x38));\n          uVar12 = FUN_00405600(1,4,&DAT_0040bf36);\n          uVar13 = FUN_00405600(0,4,&DAT_0040bf37);\n          uVar11 = dcgettext(0,\"refusing to remove %s or %s directory: skipping %s\",5);\n          error(0,0,uVar11,uVar13,uVar12);\n          goto LAB_00402ff6;\n        }\n        plVar3 = *(long **)(param_2 + 0x10);\n        if ((plVar3 != (long *)0x0) && (*(long *)(lVar7 + 0x80) == *plVar3)) {\n          bVar19 = *(ulong *)(lVar7 + 0x78) < (ulong)plVar3[1];\n          bVar20 = *(ulong *)(lVar7 + 0x78) == plVar3[1];\n          if (bVar20) {\n            lVar14 = 2;\n            pbVar16 = *(byte **)(lVar7 + 0x38);\n            pbVar17 = &DAT_0040c3ce;\n            do {\n              if (lVar14 == 0) break;\n              lVar14 = lVar14 + -1;\n              bVar19 = *pbVar16 < *pbVar17;\n              bVar20 = *pbVar16 == *pbVar17;\n              pbVar16 = pbVar16 + (ulong)bVar21 * -2 + 1;\n              pbVar17 = pbVar17 + (ulong)bVar21 * -2 + 1;\n            } while (bVar20);\n            if ((!bVar19 && !bVar20) == bVar19) {\n              uVar12 = FUN_004056e0(4,*(byte **)(lVar7 + 0x38));\n              uVar13 = dcgettext(0,\"it is dangerous to operate recursively on %s\",5);\n              error(0,0,uVar13,uVar12);\n            }\n            else {\n              uVar12 = FUN_00405600(1,4,&DAT_0040c3ce);\n              uVar13 = FUN_00405600(0,4,*(undefined8 *)(lVar7 + 0x38));\n              uVar11 = dcgettext(0,\"it is dangerous to operate recursively on %s (same as %s)\",5);\n              error(0,0,uVar11,uVar13,uVar12);\n            }\n            uVar12 = dcgettext(0,\"use --no-preserve-root to override this failsafe\",5);\n            error(0,0,uVar12);\n            goto LAB_00402ff6;\n          }\n        }\n      }\n      iVar5 = FUN_00402aa0(lVar6,lVar7,1,param_2,2,local_3c);\n      if (iVar5 == 2) {\n        if (local_3c[0] != 4) goto LAB_00402f90;\n        iVar5 = FUN_00402820(lVar6,lVar7,param_2,1);\n        fts_set(lVar6,lVar7,4);\n        fts_read(lVar6);\n        if (iVar5 == 2) goto LAB_00402f90;\n      }\n      lVar14 = *(long *)(lVar7 + 8);\n      lVar4 = *(long *)(lVar14 + 0x58);\n      while ((-1 < lVar4 && (*(long *)(lVar14 + 0x20) == 0))) {\n        *(undefined8 *)(lVar14 + 0x20) = 1;\n        lVar14 = *(long *)(lVar14 + 8);\n        lVar4 = *(long *)(lVar14 + 0x58);\n      }\n      fts_set(lVar6,lVar7,4);\n      fts_read(lVar6);\n      goto LAB_004030bc;\n    case 2:\n      uVar12 = FUN_004057b0(0,3,*(undefined8 *)(lVar7 + 0x38));\n      uVar13 = dcgettext(0,\n                         \"WARNING: Circular directory structure.\\nThis almost certainly means that you have a corrupted file system.\\nNOTIFY YOUR SYSTEM MANAGER.\\nThe following directory is part of the cycle:\\n  %s\\n\"\n                         ,5);\n      uVar15 = 0;\n      break;\n    case 3:\n    case 4:\n    case 6:\n    case 8:\n    case 10:\n    case 0xb:\n    case 0xc:\n    case 0xd:\n      goto switchD_00402fb5_caseD_3;\n    case 7:\n      uVar12 = FUN_004057b0(0,3,*(undefined8 *)(lVar7 + 0x38));\n      uVar13 = dcgettext(0,\"traversal failed: %s\",5);\n      uVar15 = *(undefined4 *)(lVar7 + 0x40);\n    }\n    error(0,uVar15,uVar13,uVar12);\nLAB_00402ff6:\n    iVar18 = 4;\n    fts_set(lVar6,lVar7,4);\n    fts_read(lVar6);\n    lVar7 = fts_read();\n  } while( true );\nswitchD_00402fb5_caseD_3:\n  if ((((uVar1 == 6) && (*(char *)(param_2 + 8) != '\\0')) && (0 < *(long *)(lVar7 + 0x58))) &&\n     (*(long *)(lVar7 + 0x78) != *(long *)(lVar6 + 0x18))) {\n    lVar14 = *(long *)(lVar7 + 8);\n    lVar4 = *(long *)(lVar14 + 0x58);\n    while ((-1 < lVar4 && (*(long *)(lVar14 + 0x20) == 0))) {\n      *(undefined8 *)(lVar14 + 0x20) = 1;\n      lVar14 = *(long *)(lVar14 + 8);\n      lVar4 = *(long *)(lVar14 + 0x58);\n    }\n    iVar18 = 4;\n    uVar12 = FUN_004056e0(4,*(undefined8 *)(lVar7 + 0x38));\n    uVar13 = dcgettext(0,\"skipping %s, since it\\'s on a different device\",5);\n    error(0,0,uVar13,uVar12);\n  }\n  else {\n    bVar19 = (uVar1 & 0xfffd) == 4;\n    iVar5 = FUN_00402aa0(lVar6,lVar7,bVar19,param_2,3,0);\n    if (iVar5 == 2) {\n      iVar5 = FUN_00402820(lVar6,lVar7,param_2,bVar19);\n    }\nLAB_004030bc:\n    if (2 < iVar5 - 2U) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"VALID_STATUS (s)\",\"src/remove.c\",0x23e,\"rm\");\n    }\n    if (iVar5 == 4) {\n      iVar18 = 4;\n    }\n    else if ((iVar5 == 3) && (iVar18 == 2)) {\n      iVar18 = 3;\n    }\n  }\n  goto LAB_00402f90;\n}\n\n",
            "funcName": "FUN_00402f50"
        },
        {
            "funcStartAddr": "0x403630",
            "funcEndAddr": "0x40363a",
            "decompiledFuncCode": "\nvoid FUN_00403630(void)\n\n{\n  FUN_00402450(1);\n  return;\n}\n\n",
            "funcName": "FUN_00403630"
        },
        {
            "funcStartAddr": "0x403640",
            "funcEndAddr": "0x403743",
            "decompiledFuncCode": "\nlong FUN_00403640(char *param_1,char **param_2,void *param_3,size_t param_4)\n\n{\n  bool bVar1;\n  long lVar2;\n  int iVar3;\n  size_t __n;\n  size_t sVar4;\n  long lVar5;\n  void *__s2;\n  char *__s1;\n  long local_58;\n  \n  __n = strlen(param_1);\n  __s1 = *param_2;\n  local_58 = -1;\n  lVar2 = local_58;\n  if (__s1 != (char *)0x0) {\n    bVar1 = false;\n    lVar2 = 0;\n    __s2 = param_3;\nLAB_004036d7:\n    do {\n      lVar5 = lVar2;\n      iVar3 = strncmp(__s1,param_1,__n);\n      if (iVar3 == 0) {\n        sVar4 = strlen(__s1);\n        if (sVar4 == __n) {\n          return lVar5;\n        }\n        if (local_58 == -1) {\n          __s2 = (void *)((long)__s2 + param_4);\n          __s1 = param_2[lVar5 + 1];\n          lVar2 = lVar5 + 1;\n          local_58 = lVar5;\n          if (__s1 == (char *)0x0) break;\n          goto LAB_004036d7;\n        }\n        if (param_3 == (void *)0x0) {\n          bVar1 = true;\n        }\n        else {\n          iVar3 = memcmp((void *)(local_58 * param_4 + (long)param_3),__s2,param_4);\n          if (iVar3 != 0) {\n            bVar1 = true;\n          }\n        }\n      }\n      __s2 = (void *)((long)__s2 + param_4);\n      __s1 = param_2[lVar5 + 1];\n      lVar2 = lVar5 + 1;\n    } while (__s1 != (char *)0x0);\n    lVar2 = -2;\n    if (!bVar1) {\n      lVar2 = local_58;\n    }\n  }\n  local_58 = lVar2;\n  return local_58;\n}\n\n",
            "funcName": "FUN_00403640"
        },
        {
            "funcStartAddr": "0x403760",
            "funcEndAddr": "0x4037cc",
            "decompiledFuncCode": "\nvoid FUN_00403760(undefined8 param_1,undefined8 param_2,long param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  \n  if (param_3 == -1) {\n    uVar1 = dcgettext(0,\"invalid argument %s for %s\",5);\n  }\n  else {\n    uVar1 = dcgettext(0,\"ambiguous argument %s for %s\",5);\n  }\n  uVar2 = FUN_00405910(1,param_1);\n  uVar3 = FUN_00405600(0,8,param_2);\n  error(0,0,uVar1,uVar3,uVar2);\n  return;\n}\n\n",
            "funcName": "FUN_00403760"
        },
        {
            "funcStartAddr": "0x4037e0",
            "funcEndAddr": "0x4038ef",
            "decompiledFuncCode": "\nvoid FUN_004037e0(long *param_1,void *param_2,size_t param_3)\n\n{\n  FILE *__stream;\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  long lVar4;\n  void *__s2;\n  long lVar5;\n  void *__s1;\n  \n  __stream = stderr;\n  __s1 = (void *)0x0;\n  pcVar2 = (char *)dcgettext(0,\"Valid arguments are:\",5);\n  lVar4 = 0;\n  fputs_unlocked(pcVar2,__stream);\n  lVar5 = *param_1;\n  while (lVar5 != 0) {\n    while ((__s2 = param_2, lVar4 == 0 || (iVar1 = memcmp(__s1,__s2,param_3), iVar1 != 0))) {\n      lVar4 = lVar4 + 1;\n      uVar3 = FUN_00405930(lVar5);\n      __fprintf_chk(stderr,1,\"\\n  - %s\",uVar3);\n      lVar5 = param_1[lVar4];\n      param_2 = (void *)((long)__s2 + param_3);\n      __s1 = __s2;\n      if (lVar5 == 0) goto LAB_004038b0;\n    }\n    lVar4 = lVar4 + 1;\n    param_2 = (void *)((long)__s2 + param_3);\n    uVar3 = FUN_00405930(lVar5);\n    __fprintf_chk(stderr,1,&DAT_0040c2e5,uVar3);\n    lVar5 = param_1[lVar4];\n  }\nLAB_004038b0:\n  pcVar2 = stderr->_IO_write_ptr;\n  if (pcVar2 < stderr->_IO_write_end) {\n    stderr->_IO_write_ptr = pcVar2 + 1;\n    *pcVar2 = '\\n';\n    return;\n  }\n  __overflow(stderr,10);\n  return;\n}\n\n",
            "funcName": "FUN_004037e0"
        },
        {
            "funcStartAddr": "0x403900",
            "funcEndAddr": "0x40396d",
            "decompiledFuncCode": "\nlong FUN_00403900(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5,code *param_6)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_00403640(param_2,param_3,param_4,param_5);\n  if (lVar1 < 0) {\n    FUN_00403760(param_1,param_2,lVar1);\n    FUN_004037e0(param_3,param_4,param_5);\n    (*param_6)();\n    lVar1 = -1;\n  }\n  return lVar1;\n}\n\n",
            "funcName": "FUN_00403900"
        },
        {
            "funcStartAddr": "0x403970",
            "funcEndAddr": "0x4039bc",
            "decompiledFuncCode": "\nlong FUN_00403970(void *param_1,long *param_2,void *param_3,size_t param_4)\n\n{\n  int iVar1;\n  long lVar2;\n  \n  lVar2 = *param_2;\n  if (lVar2 != 0) {\n    param_2 = param_2 + 1;\n    do {\n      iVar1 = memcmp(param_1,param_3,param_4);\n      if (iVar1 == 0) {\n        return lVar2;\n      }\n      lVar2 = *param_2;\n      param_3 = (void *)((long)param_3 + param_4);\n      param_2 = param_2 + 1;\n    } while (lVar2 != 0);\n  }\n  return lVar2;\n}\n\n",
            "funcName": "FUN_00403970"
        },
        {
            "funcStartAddr": "0x4039c0",
            "funcEndAddr": "0x4039c8",
            "decompiledFuncCode": "\nvoid FUN_004039c0(undefined8 param_1)\n\n{\n  DAT_00610350 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_004039c0"
        },
        {
            "funcStartAddr": "0x4039d0",
            "funcEndAddr": "0x403ac1",
            "decompiledFuncCode": "\nvoid FUN_004039d0(void)\n\n{\n  int iVar1;\n  long lVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  undefined8 uVar5;\n  \n  uVar3 = stdin;\n  lVar2 = FUN_00406340(stdin);\n  if (lVar2 == 0) {\n    iVar1 = FUN_004094f0(uVar3);\n    if (iVar1 == 0) {\n      FUN_00403af0();\n      return;\n    }\n  }\n  else {\n    iVar1 = FUN_00406370(uVar3,0,1);\n    if (iVar1 == 0) {\n      iVar1 = FUN_00406300(stdin);\n      if (iVar1 != 0) {\n        FUN_004094f0(stdin);\n        goto LAB_00403a28;\n      }\n    }\n    iVar1 = FUN_004094f0(stdin);\n    if (iVar1 == 0) {\n      FUN_00403af0();\n      return;\n    }\n  }\nLAB_00403a28:\n  uVar3 = dcgettext(0,\"error closing file\",5);\n  lVar2 = DAT_00610350;\n  piVar4 = __errno_location();\n  if (lVar2 == 0) {\n    error(0,*piVar4,&DAT_0040c2e7,uVar3);\n  }\n  else {\n    uVar5 = FUN_00405780(lVar2);\n    error(0,*piVar4,\"%s: %s\",uVar5,uVar3);\n  }\n  FUN_00403af0();\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_00610280);\n}\n\n",
            "funcName": "FUN_004039d0"
        },
        {
            "funcStartAddr": "0x403ad0",
            "funcEndAddr": "0x403ad8",
            "decompiledFuncCode": "\nvoid FUN_00403ad0(undefined8 param_1)\n\n{\n  DAT_00610360 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00403ad0"
        },
        {
            "funcStartAddr": "0x403ae0",
            "funcEndAddr": "0x403ae8",
            "decompiledFuncCode": "\nvoid FUN_00403ae0(undefined param_1)\n\n{\n  DAT_00610358 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00403ae0"
        },
        {
            "funcStartAddr": "0x403af0",
            "funcEndAddr": "0x403b8e",
            "decompiledFuncCode": "\nvoid FUN_00403af0(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_004094f0(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_00610358 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_00610360 == 0) {\n        error(0,*piVar2,&DAT_0040c2e7,uVar3);\n      }\n      else {\n        uVar4 = FUN_00405780();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_00403b6e;\n    }\n  }\n  iVar1 = FUN_004094f0(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_00403b6e:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_00610280);\n}\n\n",
            "funcName": "FUN_00403af0"
        },
        {
            "funcStartAddr": "0x403b90",
            "funcEndAddr": "0x403be2",
            "decompiledFuncCode": "\nchar * FUN_00403b90(char *param_1)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  char cVar3;\n  \n  cVar3 = *param_1;\n  while (cVar3 == '/') {\n    param_1 = param_1 + 1;\n    cVar3 = *param_1;\n  }\n  if (cVar3 != '\\0') {\n    bVar1 = false;\n    pcVar2 = param_1;\n    do {\n      while (cVar3 == '/') {\n        pcVar2 = pcVar2 + 1;\n        cVar3 = *pcVar2;\n        bVar1 = true;\n        if (cVar3 == '\\0') {\n          return param_1;\n        }\n      }\n      if (bVar1) {\n        bVar1 = false;\n        param_1 = pcVar2;\n      }\n      pcVar2 = pcVar2 + 1;\n      cVar3 = *pcVar2;\n    } while (cVar3 != '\\0');\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_00403b90"
        },
        {
            "funcStartAddr": "0x403bf0",
            "funcEndAddr": "0x403c17",
            "decompiledFuncCode": "\nvoid FUN_00403bf0(char *param_1)\n\n{\n  long lVar1;\n  size_t sVar2;\n  \n  sVar2 = strlen(param_1);\n  if (1 < sVar2) {\n    while (lVar1 = sVar2 - 1, sVar2 = sVar2 - 1, param_1[lVar1] == '/') {\n      if (sVar2 == 1) {\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00403bf0"
        },
        {
            "funcStartAddr": "0x403c20",
            "funcEndAddr": "0x403cdd",
            "decompiledFuncCode": "\nvoid FUN_00403c20(long param_1)\n\n{\n  uint uVar1;\n  \n  uVar1 = *(uint *)(param_1 + 0x18) & 0xf000;\n  if (uVar1 == 0x8000) {\n    if (*(long *)(param_1 + 0x30) == 0) {\n      dcgettext(0,\"regular empty file\",5);\n      return;\n    }\n    dcgettext(0,\"regular file\",5);\n    return;\n  }\n  if (uVar1 == 0x4000) {\n    dcgettext(0,\"directory\",5);\n    return;\n  }\n  if (uVar1 == 0xa000) {\n    dcgettext(0,\"symbolic link\",5);\n    return;\n  }\n  if (uVar1 != 0x6000) {\n    if (uVar1 == 0x2000) {\n      dcgettext(0,\"character special file\",5);\n      return;\n    }\n    if (uVar1 != 0x1000) {\n      if (uVar1 != 0xc000) {\n        dcgettext(0,\"weird file\",5);\n        return;\n      }\n      dcgettext(0,\"socket\",5);\n      return;\n    }\n    dcgettext(0,&DAT_0040c372,5);\n    return;\n  }\n  dcgettext(0,\"block special file\",5);\n  return;\n}\n\n",
            "funcName": "FUN_00403c20"
        },
        {
            "funcStartAddr": "0x403d10",
            "funcEndAddr": "0x403da9",
            "decompiledFuncCode": "\nvoid FUN_00403d10(byte *param_1)\n\n{\n  byte *pbVar1;\n  char *pcVar2;\n  long lVar3;\n  ulong uVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  byte bVar10;\n  \n  bVar10 = 0;\n  if (param_1 == (byte *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar2 = strrchr((char *)param_1,0x2f);\n  if (pcVar2 != (char *)0x0) {\n    pbVar1 = (byte *)(pcVar2 + 1);\n    uVar4 = (long)pbVar1 - (long)param_1;\n    bVar7 = uVar4 < 6;\n    bVar9 = uVar4 == 6;\n    if (6 < (long)uVar4) {\n      lVar3 = 7;\n      pbVar5 = (byte *)(pcVar2 + -6);\n      pbVar6 = &DAT_0040c3c8;\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar5 < *pbVar6;\n        bVar9 = *pbVar5 == *pbVar6;\n        pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      bVar8 = false;\n      bVar7 = (!bVar7 && !bVar9) == bVar7;\n      if (bVar7) {\n        lVar3 = 3;\n        pbVar5 = pbVar1;\n        pbVar6 = &DAT_0040c3d0;\n        do {\n          if (lVar3 == 0) break;\n          lVar3 = lVar3 + -1;\n          bVar8 = *pbVar5 < *pbVar6;\n          bVar7 = *pbVar5 == *pbVar6;\n          pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n          pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        } while (bVar7);\n        param_1 = pbVar1;\n        if ((!bVar8 && !bVar7) == bVar8) {\n          param_1 = (byte *)(pcVar2 + 4);\n          program_invocation_short_name = param_1;\n        }\n      }\n    }\n  }\n  DAT_00610368 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_00403d10"
        },
        {
            "funcStartAddr": "0x403db0",
            "funcEndAddr": "0x403e8f",
            "decompiledFuncCode": "\nchar * FUN_00403db0(char *param_1,int param_2)\n\n{\n  char cVar1;\n  char *pcVar2;\n  byte *pbVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    pbVar3 = (byte *)FUN_0040a9a0();\n    if ((*pbVar3 & 0xdf) == 0x55) {\n      if (((((pbVar3[1] & 0xdf) != 0x54) || ((pbVar3[2] & 0xdf) != 0x46)) || (pbVar3[3] != 0x2d)) ||\n         ((pbVar3[4] != 0x38 || (pbVar3[5] != 0)))) {\nLAB_00403e88:\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_0040c3e1;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0040c3d6;\n      }\n    }\n    else {\n      if (((((*pbVar3 & 0xdf) != 0x47) || ((pbVar3[1] & 0xdf) != 0x42)) || (pbVar3[2] != 0x31)) ||\n         (((pbVar3[3] != 0x38 || (pbVar3[4] != 0x30)) ||\n          ((pbVar3[5] != 0x33 || ((pbVar3[6] != 0x30 || (pbVar3[7] != 0)))))))) goto LAB_00403e88;\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_0040c3dd;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0040c3da;\n      }\n    }\n  }\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_00403db0"
        },
        {
            "funcStartAddr": "0x403eb0",
            "funcEndAddr": "0x404fe3",
            "decompiledFuncCode": "\nulong FUN_00403eb0(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  ulong uVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ulong uVar9;\n  ushort **ppuVar10;\n  long lVar11;\n  char *pcVar12;\n  byte bVar13;\n  char cVar14;\n  ulong uVar15;\n  ulong uVar16;\n  byte bVar17;\n  uint uVar18;\n  ulong uVar19;\n  bool bVar20;\n  ulong uVar21;\n  ulong uVar22;\n  bool bVar23;\n  bool bVar24;\n  bool bVar25;\n  bool bVar26;\n  size_t local_a0;\n  char *local_78;\n  ulong local_70;\n  bool local_5c;\n  bool local_5b;\n  wint_t local_44;\n  mbstate_t local_40 [2];\n  \n  sVar8 = __ctype_get_mb_cur_max();\n  uVar18 = param_6 & 2;\n  local_5c = uVar18 != 0;\n  uVar9 = param_2;\n  switch(param_5) {\n  case 0:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = false;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar18 != 0) {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = false;\n      local_a0 = 1;\n      local_78 = \"\\'\";\n      break;\n    }\n    bVar6 = false;\nLAB_00404b01:\n    if (param_2 != 0) {\n      bVar3 = false;\n      local_5b = false;\n      bVar2 = true;\n      local_70 = 0;\n      goto LAB_00404736;\n    }\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 1;\n    param_5 = 2;\n    local_70 = 0;\n    local_5b = false;\n    local_5c = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 3:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 4:\n    if (uVar18 == 0) {\n      bVar6 = true;\n      goto LAB_00404b01;\n    }\n  case 1:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 5:\n    if (uVar18 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      local_5b = false;\n      local_70 = 0;\n      bVar2 = true;\n      bVar3 = false;\n      local_5c = false;\n      uVar15 = 1;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    else {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 5;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\\"\";\n    break;\n  case 7:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = true;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      param_8 = (char *)FUN_00403db0(&DAT_0040c3e5,param_5);\n      param_9 = (char *)FUN_00403db0(&DAT_0040d607);\n    }\n    uVar15 = 0;\n    if (uVar18 == 0) {\n      cVar14 = *param_8;\n      while (cVar14 != '\\0') {\n        if (uVar15 < param_2) {\n          param_1[uVar15] = cVar14;\n        }\n        uVar15 = uVar15 + 1;\n        cVar14 = param_8[uVar15];\n      }\n    }\n    local_a0 = strlen(param_9);\n    bVar2 = true;\n    bVar3 = false;\n    local_78 = param_9;\n    local_5b = false;\n    local_70 = 0;\n    bVar6 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\nLAB_00403f48:\n  uVar22 = 0;\n  bVar5 = local_5b;\nLAB_00403f58:\n  bVar23 = param_4 != uVar22;\n  if (param_4 == 0xffffffffffffffff) {\n    bVar23 = param_3[uVar22] != '\\0';\n  }\n  bVar26 = bVar6;\n  if (!bVar23) goto LAB_004046d8;\n  bVar20 = (bool)(param_5 != 2 & bVar6);\n  __s1 = (byte *)(param_3 + uVar22);\n  uVar16 = uVar15;\n  bVar4 = bVar3;\n  if (bVar20) {\n    if (local_a0 == 0) {\nLAB_00404650:\n      uVar19 = (ulong)*__s1;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00404662_caseD_0;\n      default:\n        bVar20 = false;\n        goto switchD_004044ce_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00404365;\n      case 8:\n        bVar17 = 0x62;\n        break;\n      case 9:\nswitchD_00404662_caseD_9:\n        bVar17 = 0x74;\n        break;\n      case 10:\nswitchD_00404662_caseD_a:\n        bVar17 = 0x6e;\n        break;\n      case 0xb:\nswitchD_00404662_caseD_b:\n        bVar17 = 0x76;\n        goto LAB_00404365;\n      case 0xc:\nswitchD_00404662_caseD_c:\n        bVar17 = 0x66;\nLAB_00404365:\n        if (local_5c) {\n          bVar25 = false;\n          goto LAB_004042b8;\n        }\nLAB_00404370:\n        bVar23 = false;\n        goto LAB_0040412b;\n      case 0xd:\n        bVar20 = false;\nswitchD_00404048_caseD_d:\n        bVar25 = param_5 == 2;\n        uVar19 = 0xd;\n        bVar13 = 0x72;\n        goto LAB_00404280;\n      case 0x20:\n        bVar25 = false;\nLAB_004046aa:\n        uVar19 = 0x20;\n        goto LAB_00404672;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar20 = false;\nswitchD_00404048_caseD_21:\n        bVar25 = false;\n        goto LAB_0040428b;\n      case 0x23:\n      case 0x7e:\n        bVar26 = false;\nLAB_0040468a:\n        if (uVar22 == 0) {\n          bVar25 = false;\n          bVar23 = bVar20;\n          bVar20 = bVar26;\n          goto LAB_00404098;\n        }\n        bVar23 = false;\n        goto LAB_004040af;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar25 = false;\nLAB_00404672:\n        bVar24 = false;\n        bVar23 = bVar20;\n        bVar20 = bVar25;\n        goto LAB_004040b1;\n      case 0x27:\n        bVar20 = false;\n        goto switchD_004044ce_caseD_27;\n      case 0x3f:\n        bVar20 = false;\n        goto switchD_004044ce_caseD_3f;\n      case 0x5c:\n        bVar20 = false;\n        goto switchD_00404048_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        bVar20 = false;\n        goto switchD_004044ce_caseD_7b;\n      }\n      bVar25 = false;\n      bVar23 = false;\n      goto joined_r0x004042a7;\n    }\n    if ((param_4 == 0xffffffffffffffff) && (1 < local_a0)) {\n      param_4 = strlen(param_3);\n    }\n    if ((param_4 < uVar22 + local_a0) || (iVar7 = memcmp(__s1,local_78,local_a0), iVar7 != 0))\n    goto LAB_00404650;\n    if (!local_5c) {\n      uVar19 = (ulong)*__s1;\n      bVar25 = bVar20;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00404048_caseD_0;\n      default:\n        goto switchD_004044ce_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00404370;\n      case 8:\n        bVar25 = false;\n        bVar23 = false;\n        bVar17 = 0x62;\n        break;\n      case 9:\n        goto switchD_00404662_caseD_9;\n      case 10:\n        goto switchD_00404662_caseD_a;\n      case 0xb:\n        goto switchD_00404662_caseD_b;\n      case 0xc:\n        goto switchD_00404662_caseD_c;\n      case 0xd:\n        goto switchD_00404048_caseD_d;\n      case 0x20:\n        goto LAB_004046aa;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        goto switchD_00404048_caseD_21;\n      case 0x23:\n      case 0x7e:\n        bVar26 = bVar20;\n        goto LAB_0040468a;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        goto LAB_00404672;\n      case 0x27:\n        goto switchD_004044ce_caseD_27;\n      case 0x3f:\n        goto switchD_004044ce_caseD_3f;\n      case 0x5c:\n        goto switchD_00404048_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        goto switchD_004044ce_caseD_7b;\n      }\n      goto LAB_004040f2;\n    }\n    goto LAB_004042ca;\n  }\n  uVar19 = (ulong)*__s1;\n  switch(uVar19) {\n  case 0:\n    if (bVar6) {\nswitchD_00404662_caseD_0:\n      if (!local_5c) {\n        bVar20 = false;\nswitchD_00404048_caseD_0:\n        bVar26 = param_5 == 2;\n        bVar24 = (bool)((bVar3 ^ 1U) & bVar26);\n        if (bVar24) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar16 = uVar15 + 3;\n          bVar3 = bVar24;\n          if (uVar9 <= uVar15 + 3) {\n            uVar16 = uVar15 + 4;\n            bVar23 = false;\n            bVar17 = 0x30;\n            bVar4 = bVar24;\n            goto LAB_004041a8;\n          }\nLAB_004043ea:\n          param_1[uVar16] = 0x5c;\n          uVar15 = uVar16;\n        }\n        else if (uVar15 < uVar9) goto LAB_004043ea;\n        uVar16 = uVar15 + 1;\n        bVar24 = bVar23;\n        if (param_5 == 2) {\n          bVar17 = 0x30;\n          bVar23 = false;\n          bVar4 = bVar3;\n          goto LAB_004041a8;\n        }\n        uVar19 = 0x30;\n        if ((uVar22 + 1 < param_4) && ((byte)(param_3[uVar22 + 1] - 0x30U) < 10)) {\n          if (uVar16 < uVar9) {\n            param_1[uVar16] = 0x30;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x30;\n          }\n          uVar16 = uVar15 + 3;\n          uVar19 = 0x30;\n        }\nLAB_00404429:\n        bVar17 = (byte)uVar19;\n        bVar23 = false;\n        uVar15 = uVar16;\n        bVar4 = bVar3;\n        if ((bool)(bVar6 ^ 1U | bVar26)) goto LAB_004041a8;\n        goto LAB_004040b1;\n      }\n      bVar26 = param_5 == 2;\n      goto LAB_004042bc;\n    }\n    if ((param_6 & 1) == 0) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0;\n      bVar23 = false;\n      bVar20 = false;\n      goto LAB_00404098;\n    }\n    uVar22 = uVar22 + 1;\n    goto LAB_00403f58;\n  default:\nswitchD_004044ce_caseD_1:\n    bVar25 = bVar6;\n    if (sVar8 != 1) {\n      local_40[0] = (mbstate_t)0x0;\n      if (param_4 == 0xffffffffffffffff) {\n        param_4 = strlen(param_3);\n      }\n      uVar21 = 0;\n      do {\n        uVar1 = uVar22 + uVar21;\n        lVar11 = FUN_00409470(&local_44,param_3 + uVar1,param_4 - uVar1,local_40);\n        if (lVar11 == 0) break;\n        if (lVar11 == -1) {\n          bVar23 = false;\n          goto LAB_00404dda;\n        }\n        if (lVar11 == -2) {\n          if ((param_4 <= uVar1) || (param_3[uVar1] == '\\0')) goto LAB_00404f17;\n          goto LAB_00404f07;\n        }\n        if (((param_5 == 2) && (local_5c)) && (lVar11 != 1)) {\n          pcVar12 = param_3 + uVar1 + 1;\n          do {\n            if (((byte)(*pcVar12 + 0xa5U) < 0x22) &&\n               ((1L << (*pcVar12 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n              param_5 = 2;\n              goto LAB_004042bc;\n            }\n            pcVar12 = pcVar12 + 1;\n          } while (param_3 + uVar1 + lVar11 != pcVar12);\n        }\n        iVar7 = iswprint(local_44);\n        if (iVar7 == 0) {\n          bVar23 = false;\n        }\n        uVar21 = uVar21 + lVar11;\n        iVar7 = mbsinit(local_40);\n      } while (iVar7 == 0);\n      bVar25 = (bool)((bVar23 ^ 1U) & bVar6);\n      goto LAB_00404dda;\n    }\n    ppuVar10 = __ctype_b_loc();\n    uVar21 = 1;\n    bVar25 = ((*ppuVar10)[uVar19] & 0x4000) == 0;\n    bVar23 = !bVar25;\n    bVar25 = (bool)(bVar25 & bVar6);\n    goto LAB_004044a4;\n  case 7:\n    bVar25 = param_5 == 2;\n    uVar19 = 7;\n    bVar13 = 0x61;\n    break;\n  case 8:\n    bVar25 = param_5 == 2;\n    uVar19 = 8;\n    bVar13 = 0x62;\n    break;\n  case 9:\n    uVar19 = 9;\n    bVar13 = 0x74;\n    goto LAB_004044e2;\n  case 10:\n    uVar19 = 10;\n    bVar13 = 0x6e;\n    goto LAB_004044e2;\n  case 0xb:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xb;\n    bVar13 = 0x76;\n    break;\n  case 0xc:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xc;\n    bVar13 = 0x66;\n    break;\n  case 0xd:\n    uVar19 = 0xd;\n    bVar13 = 0x72;\nLAB_004044e2:\n    bVar25 = param_5 == 2;\n    bVar20 = (bool)(local_5c & bVar25);\n    if (bVar20) {\nLAB_004044fa:\n      param_5 = 2;\n      goto LAB_004042bc;\n    }\n    break;\n  case 0x20:\n    uVar19 = 0x20;\n    goto LAB_00404086;\n  case 0x21:\n  case 0x22:\n  case 0x24:\n  case 0x26:\n  case 0x28:\n  case 0x29:\n  case 0x2a:\n  case 0x3b:\n  case 0x3c:\n  case 0x3d:\n  case 0x3e:\n  case 0x5b:\n  case 0x5e:\n  case 0x60:\n  case 0x7c:\n    bVar23 = false;\nLAB_00404086:\n    bVar25 = param_5 == 2;\n    if ((local_5c) && (bVar25)) goto LAB_004044fa;\n    goto LAB_00404098;\n  case 0x23:\n  case 0x7e:\nLAB_0040407d:\n    bVar25 = param_5 == 2;\n    if (uVar22 == 0) goto LAB_00404086;\n    goto LAB_0040428b;\n  case 0x25:\n  case 0x2b:\n  case 0x2c:\n  case 0x2d:\n  case 0x2e:\n  case 0x2f:\n  case 0x30:\n  case 0x31:\n  case 0x32:\n  case 0x33:\n  case 0x34:\n  case 0x35:\n  case 0x36:\n  case 0x37:\n  case 0x38:\n  case 0x39:\n  case 0x3a:\n  case 0x41:\n  case 0x42:\n  case 0x43:\n  case 0x44:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x48:\n  case 0x49:\n  case 0x4a:\n  case 0x4b:\n  case 0x4c:\n  case 0x4d:\n  case 0x4e:\n  case 0x4f:\n  case 0x50:\n  case 0x51:\n  case 0x52:\n  case 0x53:\n  case 0x54:\n  case 0x55:\n  case 0x56:\n  case 0x57:\n  case 0x58:\n  case 0x59:\n  case 0x5a:\n  case 0x5d:\n  case 0x5f:\n  case 0x61:\n  case 0x62:\n  case 99:\n  case 100:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n  case 0x68:\n  case 0x69:\n  case 0x6a:\n  case 0x6b:\n  case 0x6c:\n  case 0x6d:\n  case 0x6e:\n  case 0x6f:\n  case 0x70:\n  case 0x71:\n  case 0x72:\n  case 0x73:\n  case 0x74:\n  case 0x75:\n  case 0x76:\n  case 0x77:\n  case 0x78:\n  case 0x79:\n  case 0x7a:\n    goto switchD_004044ce_caseD_25;\n  case 0x27:\nswitchD_004044ce_caseD_27:\n    bVar5 = bVar23;\n    if (param_5 != 2) {\n      bVar25 = false;\n      uVar19 = 0x27;\n      goto LAB_00404098;\n    }\n    if (!local_5c) {\n      if ((uVar9 == 0) || (uVar19 = 0, uVar21 = uVar9, local_70 != 0)) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x5c;\n        }\n        uVar19 = uVar9;\n        uVar21 = local_70;\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x27;\n        }\n      }\n      uVar16 = uVar15 + 3;\n      bVar17 = 0x27;\n      uVar9 = uVar19;\n      local_70 = uVar21;\n      bVar24 = false;\n      bVar4 = false;\n      goto LAB_004041a8;\n    }\n    goto LAB_004042bc;\n  case 0x3f:\nswitchD_004044ce_caseD_3f:\n    if (param_5 == 2) {\n      if (!local_5c) {\n        bVar17 = 0x3f;\n        bVar24 = false;\n        bVar23 = false;\n        goto LAB_004041a8;\n      }\n      goto LAB_004042bc;\n    }\n    if (param_5 != 5) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0x3f;\n      bVar23 = false;\n      goto LAB_00404098;\n    }\n    if (((((param_6 & 4) != 0) && (uVar21 = uVar22 + 2, uVar21 < param_4)) &&\n        (param_3[uVar22 + 1] == '?')) &&\n       ((uVar19 = (ulong)(byte)param_3[uVar21], (byte)param_3[uVar21] < 0x3f &&\n        ((0x7000a38200000000U >> (uVar19 & 0x3f) & 1) != 0)))) {\n      if (!local_5c) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x3f;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x22;\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x22;\n        }\n        if (uVar15 + 3 < uVar9) {\n          param_1[uVar15 + 3] = 0x3f;\n        }\n        uVar16 = uVar15 + 4;\n        bVar26 = false;\n        uVar22 = uVar21;\n        bVar24 = false;\n        goto LAB_00404429;\n      }\n      goto LAB_004042ca;\n    }\n    bVar25 = false;\n    uVar19 = 0x3f;\n    bVar23 = false;\n    goto LAB_00404098;\n  case 0x5c:\n    if (param_5 != 2) {\nswitchD_00404048_caseD_5c:\n      uVar19 = 0x5c;\n      bVar17 = 0x5c;\n      bVar13 = 0x5c;\n      bVar25 = (bool)(bVar6 & local_5c & local_a0 != 0);\n      if (!bVar25) break;\n      uVar22 = uVar22 + 1;\n      bVar23 = false;\n      goto LAB_004041c4;\n    }\n    if (local_5c) goto LAB_004042bc;\n    uVar22 = uVar22 + 1;\n    bVar23 = false;\n    bVar17 = 0x5c;\n    goto LAB_004041c4;\n  case 0x7b:\n  case 0x7d:\nswitchD_004044ce_caseD_7b:\n    bVar24 = param_4 != 1;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar24 = param_3[1] != '\\0';\n    }\n    bVar25 = param_5 == 2;\n    if (!bVar24) goto LAB_0040407d;\n    goto LAB_0040428b;\n  }\nLAB_00404280:\n  if (!bVar6) {\nLAB_0040428b:\n    bVar23 = false;\n    goto LAB_00404098;\n  }\n  bVar23 = false;\n  bVar17 = bVar13;\n  goto joined_r0x004042a7;\nLAB_004046d8:\n  if ((uVar15 == 0) && ((bool)(local_5c & param_5 == 2))) {\n    param_5 = 2;\nLAB_004042bc:\n    if (bVar26) {\n      param_5 = 4;\n    }\nLAB_004042ca:\n    uVar9 = FUN_00403eb0(param_1,uVar9,param_3,param_4,param_5,param_6 & 0xfffffffd,0,param_8,\n                         param_9);\n    return uVar9;\n  }\n  bVar26 = (bool)(param_5 == 2 & (local_5c ^ 1U));\n  bVar23 = (bool)(local_5c ^ 1U);\n  if ((!bVar26) || (bVar23 = bVar26, !bVar5)) {\nLAB_00404fad:\n    uVar22 = uVar15;\n    if (((local_78 != (char *)0x0) && (bVar23)) && (cVar14 = *local_78, cVar14 != '\\0')) {\n      do {\n        if (uVar22 < uVar9) {\n          param_1[uVar22] = cVar14;\n        }\n        uVar22 = uVar22 + 1;\n        cVar14 = local_78[uVar22 - uVar15];\n      } while (cVar14 != '\\0');\n    }\n    if (uVar22 < uVar9) {\n      param_1[uVar22] = 0;\n    }\n    return uVar22;\n  }\n  if (bVar2) {\n    uVar9 = FUN_00403eb0(param_1,local_70,param_3,param_4,5,param_6,param_7,param_8,param_9);\n    return uVar9;\n  }\n  local_5b = uVar9 == 0 && local_70 != 0;\n  param_2 = local_70;\n  bVar23 = bVar5;\n  if (uVar9 != 0 || local_70 == 0) goto LAB_00404fad;\nLAB_00404736:\n  *param_1 = 0x27;\n  param_5 = 2;\n  uVar15 = 1;\n  local_78 = \"\\'\";\n  local_a0 = 1;\n  local_5c = false;\n  uVar9 = param_2;\n  goto LAB_00403f48;\n  while (__s1[uVar21] != 0) {\nLAB_00404f07:\n    uVar21 = uVar21 + 1;\n    if (param_4 <= uVar22 + uVar21) break;\n  }\nLAB_00404f17:\n  bVar23 = false;\nLAB_00404dda:\n  if (1 < uVar21) {\nLAB_0040499e:\n    bVar26 = false;\n    uVar21 = uVar21 + uVar22;\n    uVar16 = uVar22;\n    do {\n      bVar17 = (byte)uVar19;\n      if (bVar25) {\n        bVar26 = param_5 == 2;\n        if (local_5c) goto LAB_004042bc;\n        bVar26 = (bool)(bVar26 & (bVar4 ^ 1U));\n        if (bVar26) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar15 = uVar15 + 3;\n          bVar4 = bVar26;\n        }\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x5c;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = (char)(uVar19 >> 6) + '0';\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = ((byte)(uVar19 >> 3) & 7) + 0x30;\n        }\n        uVar22 = uVar16 + 1;\n        uVar15 = uVar15 + 3;\n        bVar17 = (bVar17 & 7) + 0x30;\n        bVar26 = bVar25;\n        if (uVar21 <= uVar22) goto LAB_0040413d;\n      }\n      else {\n        bVar3 = (bool)((bVar26 ^ 1U) & bVar4);\n        if (bVar20) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x5c;\n          }\n          uVar15 = uVar15 + 1;\n        }\n        uVar22 = uVar16 + 1;\n        if (uVar21 <= uVar22) goto LAB_004041c4;\n        if (bVar3) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x27;\n          }\n          uVar15 = uVar15 + 2;\n          bVar20 = false;\n          bVar4 = false;\n        }\n        else {\n          bVar20 = false;\n        }\n      }\n      uVar16 = uVar16 + 1;\n      if (uVar15 < uVar9) {\n        param_1[uVar15] = bVar17;\n      }\n      uVar19 = (ulong)(byte)param_3[uVar16];\n      uVar15 = uVar15 + 1;\n    } while( true );\n  }\nLAB_004044a4:\n  if (bVar25) {\n    bVar23 = false;\n    bVar25 = bVar6;\n    goto LAB_0040499e;\n  }\nswitchD_004044ce_caseD_25:\n  bVar25 = param_5 == 2;\nLAB_00404098:\n  bVar17 = (byte)uVar19;\n  bVar24 = (bool)((bVar6 ^ 1U | bVar25) ^ 1 | local_5c);\n  bVar26 = bVar20;\n  if (bVar24) {\nLAB_004040af:\n    bVar24 = false;\n    bVar20 = bVar26;\nLAB_004040b1:\n    bVar17 = (byte)uVar19;\n    uVar16 = uVar15;\n    bVar4 = bVar3;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar19 >> 5) * 4) >> (bVar17 & 0x1f) & 1) == 0))\n    goto LAB_004041a8;\n    bVar25 = param_5 == 2;\n  }\n  else {\nLAB_004041a8:\n    bVar25 = param_5 == 2;\n    uVar15 = uVar16;\n    bVar3 = bVar4;\n    if (!bVar20) {\n      uVar22 = uVar22 + 1;\n      bVar3 = (bool)((bVar24 ^ 1U) & bVar4);\nLAB_004041c4:\n      if (bVar3) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x27;\n        }\n        uVar15 = uVar15 + 2;\n        bVar4 = false;\n      }\n      goto LAB_0040413d;\n    }\n  }\njoined_r0x004042a7:\n  if (local_5c) {\nLAB_004042b8:\n    bVar26 = (bool)(bVar6 & bVar25);\n    goto LAB_004042bc;\n  }\nLAB_004040f2:\n  bVar25 = (bool)((bVar3 ^ 1U) & bVar25);\n  if (bVar25) {\n    if (uVar15 < uVar9) {\n      param_1[uVar15] = 0x27;\n    }\n    if (uVar15 + 1 < uVar9) {\n      param_1[uVar15 + 1] = 0x24;\n    }\n    if (uVar15 + 2 < uVar9) {\n      param_1[uVar15 + 2] = 0x27;\n    }\n    uVar15 = uVar15 + 3;\n    bVar3 = bVar25;\n  }\nLAB_0040412b:\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = 0x5c;\n  }\n  uVar15 = uVar15 + 1;\n  uVar22 = uVar22 + 1;\n  bVar4 = bVar3;\nLAB_0040413d:\n  bVar3 = bVar4;\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = bVar17;\n  }\n  uVar15 = uVar15 + 1;\n  if (!bVar23) {\n    bVar2 = false;\n  }\n  goto LAB_00403f58;\n}\n\n",
            "funcName": "FUN_00403eb0"
        },
        {
            "funcStartAddr": "0x4050e0",
            "funcEndAddr": "0x40527b",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_004050e0(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_006102d8;\n  if (DAT_006102f0 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_004061d0();\n    }\n    if (PTR_DAT_006102d8 == &DAT_006102e0) {\n      puVar8 = (undefined4 *)FUN_00405fe0(0);\n      uVar6 = PTR_DAT_006102e8._4_4_;\n      uVar5 = PTR_DAT_006102e8._0_4_;\n      uVar3 = _UNK_006102e4;\n      PTR_DAT_006102d8 = (undefined *)puVar8;\n      *puVar8 = _DAT_006102e0;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_00405fe0(PTR_DAT_006102d8);\n      PTR_DAT_006102d8 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_006102f0 * 4,0,(long)((param_1 + 1) - DAT_006102f0) << 4);\n    DAT_006102f0 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_00403eb0(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_00610380) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)FUN_00405f80(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_00403eb0(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n",
            "funcName": "FUN_004050e0"
        },
        {
            "funcStartAddr": "0x405280",
            "funcEndAddr": "0x4052b4",
            "decompiledFuncCode": "\nvoid FUN_00405280(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00610480;\n  }\n  FUN_00406180(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00405280"
        },
        {
            "funcStartAddr": "0x4052c0",
            "funcEndAddr": "0x4052cf",
            "decompiledFuncCode": "\nundefined4 FUN_004052c0(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00610480;\n  }\n  return *param_1;\n}\n\n",
            "funcName": "FUN_004052c0"
        },
        {
            "funcStartAddr": "0x4052d0",
            "funcEndAddr": "0x4052df",
            "decompiledFuncCode": "\nvoid FUN_004052d0(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00610480;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_004052d0"
        },
        {
            "funcStartAddr": "0x4052e0",
            "funcEndAddr": "0x405313",
            "decompiledFuncCode": "\nuint FUN_004052e0(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00610480;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n",
            "funcName": "FUN_004052e0"
        },
        {
            "funcStartAddr": "0x405320",
            "funcEndAddr": "0x405333",
            "decompiledFuncCode": "\nundefined4 FUN_00405320(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00610480;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00405320"
        },
        {
            "funcStartAddr": "0x405340",
            "funcEndAddr": "0x40536b",
            "decompiledFuncCode": "\nvoid FUN_00405340(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00610480;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405340"
        },
        {
            "funcStartAddr": "0x405370",
            "funcEndAddr": "0x4053e2",
            "decompiledFuncCode": "\nvoid FUN_00405370(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_00610480;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00403eb0(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00405370"
        },
        {
            "funcStartAddr": "0x4053f0",
            "funcEndAddr": "0x4054d1",
            "decompiledFuncCode": "\nundefined8 FUN_004053f0(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_00610480;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00403eb0(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = FUN_00405f80(lVar3 + 1);\n  FUN_00403eb0(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n",
            "funcName": "FUN_004053f0"
        },
        {
            "funcStartAddr": "0x4054e0",
            "funcEndAddr": "0x4054ea",
            "decompiledFuncCode": "\nvoid FUN_004054e0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_004053f0(param_1,param_2,0,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_004054e0"
        },
        {
            "funcStartAddr": "0x4054f0",
            "funcEndAddr": "0x405585",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_004054f0(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_006102d8;\n  if (1 < DAT_006102f0) {\n    ppvVar2 = (void **)(PTR_DAT_006102d8 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_006102d8 + (ulong)(DAT_006102f0 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_00610380) {\n    free(*(undefined **)(__ptr_00 + 8));\n    _DAT_006102e0 = 0x100;\n    PTR_DAT_006102e8 = &DAT_00610380;\n  }\n  if (__ptr_00 != &DAT_006102e0) {\n    free(__ptr_00);\n    PTR_DAT_006102d8 = &DAT_006102e0;\n  }\n  DAT_006102f0 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_004054f0"
        },
        {
            "funcStartAddr": "0x405590",
            "funcEndAddr": "0x4055a1",
            "decompiledFuncCode": "\nvoid FUN_00405590(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_004050e0(param_1,param_2,0xffffffffffffffff,&DAT_00610480);\n  return;\n}\n\n",
            "funcName": "FUN_00405590"
        },
        {
            "funcStartAddr": "0x4055b0",
            "funcEndAddr": "0x4055ba",
            "decompiledFuncCode": "\nvoid FUN_004055b0(void)\n\n{\n  FUN_004050e0();\n  return;\n}\n\n",
            "funcName": "FUN_004055b0"
        },
        {
            "funcStartAddr": "0x4055c0",
            "funcEndAddr": "0x4055d6",
            "decompiledFuncCode": "\nvoid FUN_004055c0(undefined8 param_1)\n\n{\n  FUN_004050e0(0,param_1,0xffffffffffffffff,&DAT_00610480);\n  return;\n}\n\n",
            "funcName": "FUN_004055c0"
        },
        {
            "funcStartAddr": "0x4055e0",
            "funcEndAddr": "0x4055f2",
            "decompiledFuncCode": "\nvoid FUN_004055e0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_004050e0(0,param_1,param_2,&DAT_00610480);\n  return;\n}\n\n",
            "funcName": "FUN_004055e0"
        },
        {
            "funcStartAddr": "0x405600",
            "funcEndAddr": "0x405668",
            "decompiledFuncCode": "\nvoid FUN_00405600(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_004050e0(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405600"
        },
        {
            "funcStartAddr": "0x405670",
            "funcEndAddr": "0x4056d4",
            "decompiledFuncCode": "\nvoid FUN_00405670(undefined8 param_1,int param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_004050e0(param_1,param_3,param_4,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405670"
        },
        {
            "funcStartAddr": "0x4056e0",
            "funcEndAddr": "0x4056ec",
            "decompiledFuncCode": "\nvoid FUN_004056e0(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00405600(0,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_004056e0"
        },
        {
            "funcStartAddr": "0x4056f0",
            "funcEndAddr": "0x4056ff",
            "decompiledFuncCode": "\nvoid FUN_004056f0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00405670(0,param_1,param_2,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_004056f0"
        },
        {
            "funcStartAddr": "0x405700",
            "funcEndAddr": "0x405770",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00405700(undefined8 param_1,undefined8 param_2,byte param_3)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  \n  local_18 = DAT_006104b0;\n  local_48 = _DAT_00610480;\n  uStack_40 = uRam0000000000610488;\n  local_38 = _DAT_00610490;\n  uStack_30 = uRam0000000000610498;\n  puVar1 = (uint *)((long)&uStack_40 + (ulong)(param_3 >> 5) * 4);\n  local_28 = _DAT_006104a0;\n  uStack_20 = uRam00000000006104a8;\n  uVar2 = *puVar1;\n  *puVar1 = (~(uVar2 >> (param_3 & 0x1f)) & 1) << (param_3 & 0x1f) ^ uVar2;\n  FUN_004050e0(0,param_1,param_2,&local_48);\n  return;\n}\n\n",
            "funcName": "FUN_00405700"
        },
        {
            "funcStartAddr": "0x405770",
            "funcEndAddr": "0x40577d",
            "decompiledFuncCode": "\nvoid FUN_00405770(undefined8 param_1,char param_2)\n\n{\n  FUN_00405700(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00405770"
        },
        {
            "funcStartAddr": "0x405780",
            "funcEndAddr": "0x405791",
            "decompiledFuncCode": "\nvoid FUN_00405780(undefined8 param_1)\n\n{\n  FUN_00405700(param_1,0xffffffffffffffff,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00405780"
        },
        {
            "funcStartAddr": "0x4057a0",
            "funcEndAddr": "0x4057aa",
            "decompiledFuncCode": "\nvoid FUN_004057a0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00405700(param_1,param_2,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_004057a0"
        },
        {
            "funcStartAddr": "0x4057b0",
            "funcEndAddr": "0x40581e",
            "decompiledFuncCode": "\nvoid FUN_004057b0(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_40 = 0x400000000000000;\n    local_44 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_004050e0(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004057b0"
        },
        {
            "funcStartAddr": "0x405820",
            "funcEndAddr": "0x40588c",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00405820(undefined8 param_1,long param_2,long param_3,undefined8 param_4,undefined8 param_5\n                 )\n\n{\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long lStack_20;\n  long local_18;\n  \n  uStack_40 = uRam0000000000610488;\n  local_38 = _DAT_00610490;\n  uStack_30 = uRam0000000000610498;\n  local_28 = _DAT_006104a0;\n  lStack_20 = uRam00000000006104a8;\n  local_18 = DAT_006104b0;\n  local_48 = CONCAT44((int)((ulong)_DAT_00610480 >> 0x20),10);\n  if ((param_2 != 0) && (param_3 != 0)) {\n    lStack_20 = param_2;\n    local_18 = param_3;\n    FUN_004050e0(param_1,param_4,param_5,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405820"
        },
        {
            "funcStartAddr": "0x405890",
            "funcEndAddr": "0x405899",
            "decompiledFuncCode": "\nvoid FUN_00405890(void)\n\n{\n  FUN_00405820();\n  return;\n}\n\n",
            "funcName": "FUN_00405890"
        },
        {
            "funcStartAddr": "0x4058a0",
            "funcEndAddr": "0x4058b7",
            "decompiledFuncCode": "\nvoid FUN_004058a0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00405820(0,param_1,param_2,param_3,0xffffffffffffffff);\n  return;\n}\n\n",
            "funcName": "FUN_004058a0"
        },
        {
            "funcStartAddr": "0x4058c0",
            "funcEndAddr": "0x4058d3",
            "decompiledFuncCode": "\nvoid FUN_004058c0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00405820(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n",
            "funcName": "FUN_004058c0"
        },
        {
            "funcStartAddr": "0x4058e0",
            "funcEndAddr": "0x4058ea",
            "decompiledFuncCode": "\nvoid FUN_004058e0(void)\n\n{\n  FUN_004050e0();\n  return;\n}\n\n",
            "funcName": "FUN_004058e0"
        },
        {
            "funcStartAddr": "0x4058f0",
            "funcEndAddr": "0x405902",
            "decompiledFuncCode": "\nvoid FUN_004058f0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_004050e0(0,param_1,param_2,&DAT_006102a0);\n  return;\n}\n\n",
            "funcName": "FUN_004058f0"
        },
        {
            "funcStartAddr": "0x405910",
            "funcEndAddr": "0x405921",
            "decompiledFuncCode": "\nvoid FUN_00405910(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_004050e0(param_1,param_2,0xffffffffffffffff,&DAT_006102a0);\n  return;\n}\n\n",
            "funcName": "FUN_00405910"
        },
        {
            "funcStartAddr": "0x405930",
            "funcEndAddr": "0x405946",
            "decompiledFuncCode": "\nvoid FUN_00405930(undefined8 param_1)\n\n{\n  FUN_004050e0(0,param_1,0xffffffffffffffff,&DAT_006102a0);\n  return;\n}\n\n",
            "funcName": "FUN_00405930"
        },
        {
            "funcStartAddr": "0x405950",
            "funcEndAddr": "0x405998",
            "decompiledFuncCode": "\n__ino_t * FUN_00405950(__ino_t *param_1)\n\n{\n  int iVar1;\n  stat local_98;\n  \n  iVar1 = __lxstat(1,\"/\",&local_98);\n  if (iVar1 == 0) {\n    *param_1 = local_98.st_ino;\n    param_1[1] = local_98.st_dev;\n    return param_1;\n  }\n  return (undefined8 *)0x0;\n}\n\n",
            "funcName": "FUN_00405950"
        },
        {
            "funcStartAddr": "0x4059a0",
            "funcEndAddr": "0x405d44",
            "decompiledFuncCode": "\nundefined8\nFUN_004059a0(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0040d12b,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00405c1c;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_00405c1c:\n    __fprintf_chk(param_1,1,uVar7,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[1];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar1 = param_5[2];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_00405cb9;\n  case 7:\n    uVar1 = param_5[2];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    local_58 = param_5[1];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_00405cb9:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_58,uVar1,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00405a9a;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_00405a9a:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_50,local_58,uVar6,uVar5,uVar4,uVar1,local_48);\n  return uVar1;\n}\n\n",
            "funcName": "FUN_004059a0"
        },
        {
            "funcStartAddr": "0x405d80",
            "funcEndAddr": "0x405da0",
            "decompiledFuncCode": "\nvoid FUN_00405d80(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_004059a0();\n  return;\n}\n\n",
            "funcName": "FUN_00405d80"
        },
        {
            "funcStartAddr": "0x405da0",
            "funcEndAddr": "0x405df9",
            "decompiledFuncCode": "\nvoid FUN_00405da0(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long local_58 [11];\n  \n  lVar4 = 0;\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_58[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_58[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_004059a0();\n  return;\n}\n\n",
            "funcName": "FUN_00405da0"
        },
        {
            "funcStartAddr": "0x405e00",
            "funcEndAddr": "0x405eb8",
            "decompiledFuncCode": "\nvoid FUN_00405e00(void)\n\n{\n  long lVar1;\n  undefined8 in_R8;\n  ulong uVar2;\n  undefined8 in_R9;\n  long lVar3;\n  long *plVar4;\n  long local_88 [10];\n  long local_38 [4];\n  long local_18 [3];\n  \n  local_18[0] = in_R8;\n  plVar4 = (long *)&stack0x00000008;\n  uVar2 = 0x20;\n  local_18[1] = in_R9;\n  lVar3 = 0;\n  do {\n    if ((uint)uVar2 < 0x30) {\n      lVar1 = *(long *)((long)local_38 + uVar2);\n      local_88[lVar3] = lVar1;\n      uVar2 = (ulong)((uint)uVar2 + 8);\n    }\n    else {\n      lVar1 = *plVar4;\n      local_88[lVar3] = lVar1;\n      plVar4 = plVar4 + 1;\n    }\n  } while ((lVar1 != 0) && (lVar3 = lVar3 + 1, lVar3 != 10));\n  FUN_004059a0();\n  return;\n}\n\n",
            "funcName": "FUN_00405e00"
        },
        {
            "funcStartAddr": "0x405ec0",
            "funcEndAddr": "0x405f34",
            "decompiledFuncCode": "\nvoid FUN_00405ec0(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n",
            "funcName": "FUN_00405ec0"
        },
        {
            "funcStartAddr": "0x405f40",
            "funcEndAddr": "0x405f71",
            "decompiledFuncCode": "\nulong FUN_00405f40(void)\n\n{\n  __uid_t _Var1;\n  undefined4 extraout_var;\n  \n  if (DAT_006104b9 != '\\0') {\n    return (ulong)DAT_006104b8;\n  }\n  _Var1 = geteuid();\n  DAT_006104b9 = 1;\n  DAT_006104b8 = _Var1 == 0;\n  return CONCAT44(extraout_var,_Var1) & 0xffffffffffffff00 | (ulong)(_Var1 == 0);\n}\n\n",
            "funcName": "FUN_00405f40"
        },
        {
            "funcStartAddr": "0x405f80",
            "funcEndAddr": "0x405f9a",
            "decompiledFuncCode": "\nvoid FUN_00405f80(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_004061d0();\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00405f80"
        },
        {
            "funcStartAddr": "0x405fa0",
            "funcEndAddr": "0x405fc1",
            "decompiledFuncCode": "\nvoid FUN_00405fa0(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_00405f80();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_004061d0();\n}\n\n",
            "funcName": "FUN_00405fa0"
        },
        {
            "funcStartAddr": "0x405fd0",
            "funcEndAddr": "0x405fd2",
            "decompiledFuncCode": "\nvoid thunk_FUN_00405f80(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_004061d0();\n  }\n  return;\n}\n\n",
            "funcName": "thunk_405fd0"
        },
        {
            "funcStartAddr": "0x405fe0",
            "funcEndAddr": "0x406010",
            "decompiledFuncCode": "\nvoid * FUN_00405fe0(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_004061d0();\n  }\n  return pvVar1;\n}\n\n",
            "funcName": "FUN_00405fe0"
        },
        {
            "funcStartAddr": "0x406020",
            "funcEndAddr": "0x406041",
            "decompiledFuncCode": "\nvoid FUN_00406020(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_00405fe0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_004061d0();\n}\n\n",
            "funcName": "FUN_00406020"
        },
        {
            "funcStartAddr": "0x406050",
            "funcEndAddr": "0x4060c8",
            "decompiledFuncCode": "\nvoid FUN_00406050(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar2 = *param_2;\n  if (param_1 == 0) {\n    if (uVar2 == 0) {\n      uVar2 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar3 = (ulong)(SUB168(ZEXT816(uVar2) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar2) * ZEXT816(param_3),0) < 0) || (uVar3 != 0)) goto LAB_004060ab;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar3 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar2) {\nLAB_004060ab:\n                    /* WARNING: Subroutine does not return */\n      FUN_004061d0(param_1,param_2,uVar3);\n    }\n    uVar2 = (uVar2 >> 1) + 1 + uVar2;\n  }\n  *param_2 = uVar2;\n  FUN_00405fe0(param_1,uVar2 * param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00406050"
        },
        {
            "funcStartAddr": "0x4060e0",
            "funcEndAddr": "0x40612a",
            "decompiledFuncCode": "\nvoid FUN_004060e0(long param_1,ulong *param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = *param_2;\n  if (param_1 == 0) {\n    if (uVar1 == 0) {\n      *param_2 = 0x80;\n      FUN_00405fe0(0,0x80);\n      return;\n    }\n    if ((long)uVar1 < 0) goto LAB_0040612a;\n  }\n  else {\n    if (0x5555555555555553 < uVar1) {\nLAB_0040612a:\n                    /* WARNING: Subroutine does not return */\n      FUN_004061d0();\n    }\n    uVar1 = (uVar1 >> 1) + 1 + uVar1;\n  }\n  *param_2 = uVar1;\n  FUN_00405fe0(param_1,uVar1);\n  return;\n}\n\n",
            "funcName": "FUN_004060e0"
        },
        {
            "funcStartAddr": "0x406130",
            "funcEndAddr": "0x406147",
            "decompiledFuncCode": "\nvoid FUN_00406130(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00405f80();\n  memset(__s,0,param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00406130"
        },
        {
            "funcStartAddr": "0x406150",
            "funcEndAddr": "0x40617e",
            "decompiledFuncCode": "\nvoid FUN_00406150(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_004061d0();\n}\n\n",
            "funcName": "FUN_00406150"
        },
        {
            "funcStartAddr": "0x406180",
            "funcEndAddr": "0x4061a8",
            "decompiledFuncCode": "\nvoid FUN_00406180(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00405f80(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00406180"
        },
        {
            "funcStartAddr": "0x4061b0",
            "funcEndAddr": "0x4061c3",
            "decompiledFuncCode": "\nvoid FUN_004061b0(char *param_1)\n\n{\n  void *__dest;\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  __dest = (void *)FUN_00405f80(sVar1 + 1);\n  memcpy(__dest,param_1,sVar1 + 1);\n  return;\n}\n\n",
            "funcName": "FUN_004061b0"
        },
        {
            "funcStartAddr": "0x4061d0",
            "funcEndAddr": "0x406201",
            "decompiledFuncCode": "\nvoid FUN_004061d0(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_00610280,0,&DAT_0040c2e7,uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004061d0"
        },
        {
            "funcStartAddr": "0x406210",
            "funcEndAddr": "0x406251",
            "decompiledFuncCode": "\nvoid FUN_00406210(undefined8 param_1,uint param_2)\n\n{\n  long lVar1;\n  int *piVar2;\n  \n  lVar1 = fts_open(param_1,param_2 | 0x200);\n  if (lVar1 != 0) {\n    return;\n  }\n  piVar2 = __errno_location();\n  if (*piVar2 != 0x16) {\n                    /* WARNING: Subroutine does not return */\n    FUN_004061d0();\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"errno != EINVAL\",\"lib/xfts.c\",0x29,\"xfts_open\");\n}\n\n",
            "funcName": "FUN_00406210"
        },
        {
            "funcStartAddr": "0x406260",
            "funcEndAddr": "0x406281",
            "decompiledFuncCode": "\nbool FUN_00406260(long param_1,long param_2)\n\n{\n  bool bVar1;\n  uint uVar2;\n  \n  bVar1 = true;\n  uVar2 = *(uint *)(param_1 + 0x48) & 0x11;\n  if ((uVar2 != 0x10) && (bVar1 = false, uVar2 == 0x11)) {\n    return *(long *)(param_2 + 0x58) != 0;\n  }\n  return bVar1;\n}\n\n",
            "funcName": "FUN_00406260"
        },
        {
            "funcStartAddr": "0x406290",
            "funcEndAddr": "0x4062f8",
            "decompiledFuncCode": "\nbool FUN_00406290(void)\n\n{\n  int iVar1;\n  __ssize_t _Var2;\n  bool bVar3;\n  char *local_18;\n  size_t local_10;\n  \n  bVar3 = false;\n  local_18 = (char *)0x0;\n  local_10 = 0;\n  _Var2 = __getdelim(&local_18,&local_10,10,stdin);\n  if (0 < _Var2) {\n    if (local_18[_Var2 + -1] == '\\n') {\n      local_18[_Var2 + -1] = '\\0';\n    }\n    iVar1 = rpmatch(local_18);\n    bVar3 = 0 < iVar1;\n  }\n  free(local_18);\n  return bVar3;\n}\n\n",
            "funcName": "FUN_00406290"
        },
        {
            "funcStartAddr": "0x406300",
            "funcEndAddr": "0x40633b",
            "decompiledFuncCode": "\nvoid FUN_00406300(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if ((iVar1 != 0) && ((param_1->_flags & 0x100U) != 0)) {\n      FUN_00406370(param_1,0,1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00406300"
        },
        {
            "funcStartAddr": "0x406340",
            "funcEndAddr": "0x406368",
            "decompiledFuncCode": "\nlong FUN_00406340(uint *param_1)\n\n{\n  long lVar1;\n  \n  lVar1 = 0;\n  if ((*(ulong *)(param_1 + 10) < *(ulong *)(param_1 + 8) ||\n       *(ulong *)(param_1 + 10) == *(ulong *)(param_1 + 8)) &&\n     (lVar1 = *(long *)(param_1 + 4) - *(long *)(param_1 + 2), (*param_1 & 0x100) != 0)) {\n    lVar1 = lVar1 + (*(long *)(param_1 + 0x16) - *(long *)(param_1 + 0x12));\n  }\n  return lVar1;\n}\n\n",
            "funcName": "FUN_00406340"
        },
        {
            "funcStartAddr": "0x406370",
            "funcEndAddr": "0x4063c6",
            "decompiledFuncCode": "\nulong FUN_00406370(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  uint uVar1;\n  int __fd;\n  ulong uVar2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    __fd = fileno(param_1);\n    uVar2 = lseek(__fd,param_2,param_3);\n    if (uVar2 != 0xffffffffffffffff) {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = uVar2;\n      uVar2 = 0;\n    }\n    return uVar2;\n  }\n  uVar1 = fseeko(param_1,param_2,param_3);\n  return (ulong)uVar1;\n}\n\n",
            "funcName": "FUN_00406370"
        },
        {
            "funcStartAddr": "0x4063d0",
            "funcEndAddr": "0x4063e7",
            "decompiledFuncCode": "\nulong FUN_004063d0(ulong *param_1,ulong *param_2)\n\n{\n  if (param_1[1] != param_2[1]) {\n    return 0;\n  }\n  return *param_2 & 0xffffffffffffff00 | (ulong)(*param_1 == *param_2);\n}\n\n",
            "funcName": "FUN_004063d0"
        },
        {
            "funcStartAddr": "0x4063f0",
            "funcEndAddr": "0x4063fd",
            "decompiledFuncCode": "\nulong FUN_004063f0(long param_1,ulong param_2)\n\n{\n  return *(ulong *)(param_1 + 8) % param_2;\n}\n\n",
            "funcName": "FUN_004063f0"
        },
        {
            "funcStartAddr": "0x406400",
            "funcEndAddr": "0x40640c",
            "decompiledFuncCode": "\nulong FUN_00406400(ulong *param_1,ulong param_2)\n\n{\n  return *param_1 % param_2;\n}\n\n",
            "funcName": "FUN_00406400"
        },
        {
            "funcStartAddr": "0x406410",
            "funcEndAddr": "0x40641a",
            "decompiledFuncCode": "\nulong FUN_00406410(ulong *param_1,ulong *param_2)\n\n{\n  return *param_2 & 0xffffffffffffff00 | (ulong)(*param_1 == *param_2);\n}\n\n",
            "funcName": "FUN_00406410"
        },
        {
            "funcStartAddr": "0x406420",
            "funcEndAddr": "0x406442",
            "decompiledFuncCode": "\nulong FUN_00406420(long *param_1,long *param_2)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  bool bVar3;\n  \n  uVar2 = 0xffffffff;\n  uVar1 = *(ulong *)(*param_2 + 0x80);\n  bVar3 = uVar1 <= *(ulong *)(*param_1 + 0x80);\n  if (bVar3) {\n    uVar2 = (ulong)(bVar3 && *(ulong *)(*param_1 + 0x80) != uVar1);\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00406420"
        },
        {
            "funcStartAddr": "0x406450",
            "funcEndAddr": "0x4065de",
            "decompiledFuncCode": "\nint FUN_00406450(long param_1,long param_2,char param_3)\n\n{\n  stat *__stat_buf;\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  ulong uVar4;\n  undefined8 *puVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  __stat_buf = (stat *)(param_2 + 0x78);\n  if ((((*(long *)(param_2 + 0x58) == 0) && ((*(uint *)(param_1 + 0x48) & 1) != 0)) ||\n      ((*(uint *)(param_1 + 0x48) & 2) != 0)) || (param_3 != '\\0')) {\n    iVar1 = __xstat(1,*(char **)(param_2 + 0x30),__stat_buf);\n    if (iVar1 == 0) {\nLAB_004064e7:\n      uVar2 = *(uint *)(param_2 + 0x90) & 0xf000;\n      if (uVar2 == 0x4000) {\n        uVar4 = *(ulong *)(param_2 + 0x88);\n        if ((uVar4 < 2) || (*(long *)(param_2 + 0x58) < 1)) {\n          uVar4 = 0xffffffffffffffff;\n        }\n        else if ((*(byte *)(param_1 + 0x48) & 0x20) == 0) {\n          uVar4 = uVar4 - 2;\n        }\n        *(ulong *)(param_2 + 0x68) = uVar4;\n        iVar1 = 1;\n        if ((*(char *)(param_2 + 0x108) == '.') &&\n           ((*(char *)(param_2 + 0x109) == '\\0' ||\n            ((*(uint *)(param_2 + 0x108) & 0xffff00) == 0x2e00)))) {\n          iVar1 = (-(uint)(*(long *)(param_2 + 0x58) == 0) & 0xfffffffc) + 5;\n        }\n      }\n      else if (uVar2 == 0xa000) {\n        iVar1 = 0xc;\n      }\n      else {\n        iVar1 = (uint)(uVar2 == 0x8000) * 5 + 3;\n      }\n      return iVar1;\n    }\n    piVar3 = __errno_location();\n    iVar1 = *piVar3;\n    if (iVar1 == 2) {\n      iVar1 = __lxstat(1,*(char **)(param_2 + 0x30),__stat_buf);\n      if (iVar1 == 0) {\n        *piVar3 = 0;\n        return 0xd;\n      }\n      iVar1 = *piVar3;\n    }\n  }\n  else {\n    iVar1 = __fxstatat(1,*(int *)(param_1 + 0x2c),*(char **)(param_2 + 0x30),__stat_buf,0x100);\n    if (iVar1 == 0) goto LAB_004064e7;\n    piVar3 = __errno_location();\n    iVar1 = *piVar3;\n  }\n  *(int *)(param_2 + 0x40) = iVar1;\n  puVar5 = (undefined8 *)(param_2 + 0x80U & 0xfffffffffffffff8);\n  *(undefined8 *)(param_2 + 0x78) = 0;\n  *(undefined8 *)(param_2 + 0x100) = 0;\n  uVar4 = (ulong)(((int)__stat_buf - (int)puVar5) + 0x90U >> 3);\n  for (; uVar4 != 0; uVar4 = uVar4 - 1) {\n    *puVar5 = 0;\n    puVar5 = puVar5 + (ulong)bVar6 * -2 + 1;\n  }\n  return 10;\n}\n\n",
            "funcName": "FUN_00406450"
        },
        {
            "funcStartAddr": "0x406600",
            "funcEndAddr": "0x4066f2",
            "decompiledFuncCode": "\nlong FUN_00406600(long param_1,long param_2,ulong param_3)\n\n{\n  ulong uVar1;\n  long *plVar2;\n  __compar_fn_t __compar;\n  long *plVar3;\n  long lVar4;\n  long lVar5;\n  long *plVar6;\n  long lVar7;\n  \n  __compar = *(__compar_fn_t *)(param_1 + 0x40);\n  plVar3 = *(long **)(param_1 + 0x10);\n  if (param_3 <= *(ulong *)(param_1 + 0x38)) {\nLAB_00406655:\n    plVar6 = plVar3;\n    if (param_2 != 0) {\n      do {\n        *plVar6 = param_2;\n        param_2 = *(long *)(param_2 + 0x10);\n        plVar6 = plVar6 + 1;\n      } while (param_2 != 0);\n    }\n    qsort(plVar3,param_3,8,__compar);\n    plVar3 = *(long **)(param_1 + 0x10);\n    lVar7 = *plVar3;\n    lVar4 = lVar7;\n    lVar5 = param_3 - 1;\n    plVar6 = plVar3;\n    if (lVar5 != 0) {\n      while( true ) {\n        plVar2 = plVar6 + 1;\n        plVar6 = plVar6 + 1;\n        *(long *)(lVar7 + 0x10) = *plVar2;\n        lVar5 = lVar5 + -1;\n        if (lVar5 == 0) break;\n        lVar7 = *plVar6;\n      }\n      lVar7 = plVar3[param_3 - 1];\n    }\n    *(undefined8 *)(lVar7 + 0x10) = 0;\n    return lVar4;\n  }\n  uVar1 = param_3 + 0x28;\n  *(ulong *)(param_1 + 0x38) = uVar1;\n  if (uVar1 < 0x2000000000000000) {\n    plVar3 = (long *)realloc(plVar3,uVar1 * 8);\n    if (plVar3 != (long *)0x0) {\n      *(long **)(param_1 + 0x10) = plVar3;\n      goto LAB_00406655;\n    }\n    plVar3 = *(long **)(param_1 + 0x10);\n  }\n  free(plVar3);\n  *(undefined8 *)(param_1 + 0x10) = 0;\n  *(undefined8 *)(param_1 + 0x38) = 0;\n  return param_2;\n}\n\n",
            "funcName": "FUN_00406600"
        },
        {
            "funcStartAddr": "0x406700",
            "funcEndAddr": "0x40678a",
            "decompiledFuncCode": "\nvoid * FUN_00406700(long param_1,void *param_2,size_t param_3)\n\n{\n  undefined8 uVar1;\n  void *pvVar2;\n  \n  pvVar2 = malloc(param_3 + 0x110 & 0xfffffffffffffff8);\n  if (pvVar2 != (void *)0x0) {\n    memcpy((void *)((long)pvVar2 + 0x108),param_2,param_3);\n    uVar1 = *(undefined8 *)(param_1 + 0x20);\n    *(undefined *)((long)pvVar2 + param_3 + 0x108) = 0;\n    *(size_t *)((long)pvVar2 + 0x60) = param_3;\n    *(long *)((long)pvVar2 + 0x50) = param_1;\n    *(undefined8 *)((long)pvVar2 + 0x38) = uVar1;\n    *(undefined4 *)((long)pvVar2 + 0x40) = 0;\n    *(undefined8 *)((long)pvVar2 + 0x18) = 0;\n    *(undefined4 *)((long)pvVar2 + 0x72) = 0x30000;\n    *(undefined8 *)((long)pvVar2 + 0x20) = 0;\n    *(undefined8 *)((long)pvVar2 + 0x28) = 0;\n  }\n  return pvVar2;\n}\n\n",
            "funcName": "FUN_00406700"
        },
        {
            "funcStartAddr": "0x406790",
            "funcEndAddr": "0x4067ca",
            "decompiledFuncCode": "\nvoid FUN_00406790(void *param_1)\n\n{\n  void *pvVar1;\n  \n  if (param_1 == (void *)0x0) {\n    return;\n  }\n  do {\n    pvVar1 = *(void **)((long)param_1 + 0x10);\n    if (*(DIR **)((long)param_1 + 0x18) != (DIR *)0x0) {\n      closedir(*(DIR **)((long)param_1 + 0x18));\n    }\n    free(param_1);\n    param_1 = pvVar1;\n  } while (pvVar1 != (void *)0x0);\n  return;\n}\n\n",
            "funcName": "FUN_00406790"
        },
        {
            "funcStartAddr": "0x4067e0",
            "funcEndAddr": "0x406809",
            "decompiledFuncCode": "\nvoid FUN_004067e0(undefined8 param_1)\n\n{\n  char cVar1;\n  int __fd;\n  \n  while( true ) {\n    cVar1 = FUN_0040a900(param_1);\n    if (cVar1 != '\\0') break;\n    __fd = FUN_0040a950(param_1);\n    if (-1 < __fd) {\n      close(__fd);\n    }\n  }\n  return;\n}\n\n",
            "funcName": "FUN_004067e0"
        },
        {
            "funcStartAddr": "0x406820",
            "funcEndAddr": "0x406924",
            "decompiledFuncCode": "\nlong FUN_00406820(long param_1)\n\n{\n  undefined8 uVar1;\n  int iVar2;\n  long lVar3;\n  undefined8 *__ptr;\n  undefined8 *puVar4;\n  long lVar5;\n  statfs local_98;\n  \n  lVar3 = *(long *)(param_1 + 0x50);\n  if ((*(byte *)(lVar3 + 0x49) & 2) == 0) {\n    return 0;\n  }\n  lVar5 = *(long *)(lVar3 + 0x50);\n  if (lVar5 == 0) {\n    lVar5 = FUN_00409f20(0xd,0,FUN_00406400,FUN_00406410,free);\n    *(long *)(lVar3 + 0x50) = lVar5;\n    if (lVar5 == 0) {\n      iVar2 = fstatfs(*(int *)(*(long *)(param_1 + 0x50) + 0x2c),&local_98);\n      if (iVar2 == 0) {\n        return local_98.f_type;\n      }\n      return 0;\n    }\n  }\n  local_98.f_type = *(long *)(param_1 + 0x78);\n  lVar3 = FUN_00409cb0(lVar5,&local_98);\n  if (lVar3 == 0) {\n    iVar2 = fstatfs(*(int *)(*(long *)(param_1 + 0x50) + 0x2c),&local_98);\n    if (iVar2 != 0) {\n      return 0;\n    }\n    __ptr = (undefined8 *)malloc(0x10);\n    if (__ptr != (undefined8 *)0x0) {\n      uVar1 = *(undefined8 *)(param_1 + 0x78);\n      __ptr[1] = local_98.f_type;\n      *__ptr = uVar1;\n      puVar4 = (undefined8 *)FUN_0040a6c0(lVar5,__ptr);\n      if (puVar4 != (undefined8 *)0x0) {\n        if (__ptr == puVar4) {\n          return local_98.f_type;\n        }\n                    /* WARNING: Subroutine does not return */\n        abort();\n      }\n      free(__ptr);\n    }\n  }\n  else {\n    local_98.f_type = *(long *)(lVar3 + 8);\n  }\n  return local_98.f_type;\n}\n\n",
            "funcName": "FUN_00406820"
        },
        {
            "funcStartAddr": "0x406940",
            "funcEndAddr": "0x40699a",
            "decompiledFuncCode": "\nbool FUN_00406940(void)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_00406820();\n  if (lVar1 != 0x9fa0) {\n    if (lVar1 < 0x9fa1) {\n      if (lVar1 == 0) {\n        return false;\n      }\n      return lVar1 != 0x6969;\n    }\n    if (lVar1 != 0x5346414f) {\n      if (lVar1 == 0x58465342) {\n        return (bool)2;\n      }\n      return (bool)((lVar1 == 0x52654973) + '\\x01');\n    }\n  }\n  return false;\n}\n\n",
            "funcName": "FUN_00406940"
        },
        {
            "funcStartAddr": "0x4069b0",
            "funcEndAddr": "0x406a13",
            "decompiledFuncCode": "\nvoid FUN_004069b0(long param_1,int param_2,char param_3)\n\n{\n  int iVar1;\n  \n  iVar1 = *(int *)(param_1 + 0x2c);\n  if ((iVar1 == param_2) && (iVar1 != -100)) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  if (param_3 == '\\0') {\n    if (((*(byte *)(param_1 + 0x48) & 4) == 0) && (-1 < iVar1)) {\n      close(iVar1);\n      *(int *)(param_1 + 0x2c) = param_2;\n      return;\n    }\n  }\n  else {\n    iVar1 = FUN_0040a910(param_1 + 0x60);\n    if (-1 < iVar1) {\n      close(iVar1);\n      *(int *)(param_1 + 0x2c) = param_2;\n      return;\n    }\n  }\n  *(int *)(param_1 + 0x2c) = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_004069b0"
        },
        {
            "funcStartAddr": "0x406a20",
            "funcEndAddr": "0x406a6f",
            "decompiledFuncCode": "\nuint FUN_00406a20(long param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  uVar2 = *(uint *)(param_1 + 0x48) & 4;\n  if (uVar2 == 0) {\n    if ((*(uint *)(param_1 + 0x48) & 0x200) == 0) {\n      iVar1 = fchdir(*(int *)(param_1 + 0x28));\n      uVar2 = (uint)(iVar1 != 0);\n    }\n    else {\n      FUN_004069b0(param_1,0xffffff9c,1);\n    }\n  }\n  else {\n    uVar2 = 0;\n  }\n  FUN_004067e0(param_1 + 0x60);\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00406a20"
        },
        {
            "funcStartAddr": "0x406a80",
            "funcEndAddr": "0x406adf",
            "decompiledFuncCode": "\nundefined8 FUN_00406a80(void **param_1,size_t *param_2,long param_3)\n\n{\n  size_t __size;\n  void *pvVar1;\n  int *piVar2;\n  \n  pvVar1 = *param_1;\n  __size = *param_2 + 0x100 + param_3;\n  if (__size < *param_2) {\n    free(pvVar1);\n    *param_1 = (void *)0x0;\n    piVar2 = __errno_location();\n    *piVar2 = 0x24;\n    return 0;\n  }\n  *param_2 = __size;\n  pvVar1 = realloc(pvVar1,__size);\n  if (pvVar1 != (void *)0x0) {\n    *param_1 = pvVar1;\n    return 1;\n  }\n  free(*param_1);\n  *param_1 = (void *)0x0;\n  return 0;\n}\n\n",
            "funcName": "FUN_00406a80"
        },
        {
            "funcStartAddr": "0x406af0",
            "funcEndAddr": "0x406b46",
            "decompiledFuncCode": "\nulong FUN_00406af0(uint param_1,void **param_2)\n\n{\n  void *pvVar1;\n  ulong uVar2;\n  \n  if ((param_1 & 0x102) == 0) {\n    pvVar1 = malloc(0x20);\n    *param_2 = pvVar1;\n    uVar2 = 0;\n    if (pvVar1 != (void *)0x0) {\n      FUN_00409550();\n      return 1;\n    }\n  }\n  else {\n    pvVar1 = (void *)FUN_00409f20(0x1f,0,FUN_004063f0,FUN_004063d0,free);\n    *param_2 = pvVar1;\n    uVar2 = (ulong)pvVar1 & 0xffffffffffffff00 | (ulong)(pvVar1 != (void *)0x0);\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00406af0"
        },
        {
            "funcStartAddr": "0x406b50",
            "funcEndAddr": "0x406b8e",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00409608) */\n\nvoid FUN_00406b50(undefined8 param_1,uint param_2,char *param_3)\n\n{\n  int iVar1;\n  \n  if ((param_2 & 0x200) == 0) {\n    iVar1 = open(param_3,(param_2 & 0x10) << 0xd | (param_2 & 0x800) << 7 | 0x90900,0);\n    FUN_0040af60(iVar1);\n    return;\n  }\n  FUN_0040af10(param_1,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00406b50"
        },
        {
            "funcStartAddr": "0x406ba0",
            "funcEndAddr": "0x406d50",
            "decompiledFuncCode": "\nint FUN_00406ba0(long param_1,long param_2,int param_3,byte *param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  int iVar3;\n  int iVar4;\n  int *piVar5;\n  long lVar6;\n  byte *pbVar7;\n  byte *pbVar8;\n  uint uVar9;\n  bool bVar10;\n  bool bVar11;\n  stat local_c8;\n  \n  uVar9 = *(uint *)(param_1 + 0x48);\n  bVar10 = false;\n  bVar11 = param_4 == (byte *)0x0;\n  iVar3 = param_3;\n  if (bVar11) {\nLAB_00406c40:\n    if ((uVar9 & 4) != 0) {\nLAB_00406cb0:\n      if (((uVar9 & 0x200) != 0) && (-1 < param_3)) {\n        close(param_3);\n        return 0;\n      }\n      return 0;\n    }\n    if (param_3 < 0) {\n      bVar2 = 0;\nLAB_00406cde:\n      iVar3 = FUN_00406b50(*(undefined4 *)(param_1 + 0x2c),uVar9,param_4);\n      if (iVar3 < 0) {\n        return -1;\n      }\n    }\n    else {\n      bVar2 = 0;\n    }\n  }\n  else {\n    lVar6 = 3;\n    pbVar7 = param_4;\n    pbVar8 = &DAT_0040bf36;\n    do {\n      if (lVar6 == 0) break;\n      lVar6 = lVar6 + -1;\n      bVar10 = *pbVar7 < *pbVar8;\n      bVar11 = *pbVar7 == *pbVar8;\n      pbVar7 = pbVar7 + 1;\n      pbVar8 = pbVar8 + 1;\n    } while (bVar11);\n    if ((!bVar10 && !bVar11) != bVar10) goto LAB_00406c40;\n    if ((uVar9 & 4) != 0) goto LAB_00406cb0;\n    if (param_3 < 0) {\n      if ((uVar9 & 0x200) == 0) {\n        bVar2 = 1;\n      }\n      else {\n        bVar2 = FUN_0040a900(param_1 + 0x60);\n        if (bVar2 == 0) {\n          iVar3 = FUN_0040a950(param_1 + 0x60);\n          if (-1 < iVar3) {\n            bVar2 = 1;\n            param_3 = iVar3;\n            goto LAB_00406c52;\n          }\n          uVar9 = *(uint *)(param_1 + 0x48);\n          bVar2 = 1;\n        }\n      }\n      goto LAB_00406cde;\n    }\n    bVar2 = 1;\n  }\nLAB_00406c52:\n  iVar4 = __fxstat(1,iVar3,&local_c8);\n  if (iVar4 == 0) {\n    if ((*(__dev_t *)(param_2 + 0x78) == local_c8.st_dev) &&\n       (*(__ino_t *)(param_2 + 0x80) == local_c8.st_ino)) {\n      if ((*(byte *)(param_1 + 0x49) & 2) != 0) {\n        FUN_004069b0(param_1,iVar3,bVar2 ^ 1);\n        return 0;\n      }\n      iVar4 = fchdir(iVar3);\n      goto LAB_00406c93;\n    }\n    piVar5 = __errno_location();\n    *piVar5 = 2;\n  }\n  iVar4 = -1;\nLAB_00406c93:\n  if (param_3 < 0) {\n    piVar5 = __errno_location();\n    iVar1 = *piVar5;\n    close(iVar3);\n    *piVar5 = iVar1;\n  }\n  return iVar4;\n}\n\n",
            "funcName": "FUN_00406ba0"
        },
        {
            "funcStartAddr": "0x406d70",
            "funcEndAddr": "0x406e14",
            "decompiledFuncCode": "\nundefined8 FUN_00406d70(uint param_1,undefined8 *param_2,undefined8 *param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 *__ptr;\n  undefined8 *puVar2;\n  undefined8 uVar3;\n  \n  if ((param_1 & 0x102) == 0) {\n    uVar3 = FUN_00409560(*param_2,param_3 + 0xf);\n    if ((char)uVar3 != '\\0') {\n      *param_3 = param_3;\n      *(undefined2 *)(param_3 + 0xe) = 2;\n      return uVar3;\n    }\n  }\n  else {\n    __ptr = (undefined8 *)malloc(0x18);\n    if (__ptr == (undefined8 *)0x0) {\n      return 0;\n    }\n    uVar3 = param_3[0xf];\n    uVar1 = *param_2;\n    __ptr[2] = param_3;\n    *__ptr = uVar3;\n    __ptr[1] = param_3[0x10];\n    puVar2 = (undefined8 *)FUN_0040a6c0(uVar1,__ptr);\n    if (__ptr != puVar2) {\n      free(__ptr);\n      if (puVar2 == (undefined8 *)0x0) {\n        return 0;\n      }\n      uVar3 = puVar2[2];\n      *(undefined2 *)(param_3 + 0xe) = 2;\n      *param_3 = uVar3;\n    }\n  }\n  return 1;\n}\n\n",
            "funcName": "FUN_00406d70"
        },
        {
            "funcStartAddr": "0x406e20",
            "funcEndAddr": "0x406eb1",
            "decompiledFuncCode": "\nvoid FUN_00406e20(uint param_1,long **param_2,long param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  long lVar3;\n  void *__ptr;\n  undefined8 local_28;\n  undefined8 local_20;\n  \n  if ((param_1 & 0x102) == 0) {\n    lVar1 = *(long *)(param_3 + 8);\n    if ((lVar1 != 0) && (-1 < *(long *)(lVar1 + 0x58))) {\n      plVar2 = *param_2;\n      if (plVar2[2] == 0) goto FUN_00401e23;\n      if ((*plVar2 == *(long *)(param_3 + 0x80)) && (plVar2[1] == *(long *)(param_3 + 0x78))) {\n        lVar3 = *(long *)(lVar1 + 0x80);\n        plVar2[1] = *(long *)(lVar1 + 0x78);\n        *plVar2 = lVar3;\n      }\n    }\n    return;\n  }\n  local_28 = *(undefined8 *)(param_3 + 0x78);\n  local_20 = *(undefined8 *)(param_3 + 0x80);\n  __ptr = (void *)FUN_0040a700(*param_2,&local_28);\n  if (__ptr != (void *)0x0) {\n    free(__ptr);\n    return;\n  }\nFUN_00401e23:\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00406e20"
        },
        {
            "funcStartAddr": "0x406ec0",
            "funcEndAddr": "0x40782a",
            "decompiledFuncCode": "\nvoid * FUN_00406ec0(long *param_1,int param_2)\n\n{\n  DIR *__dirp;\n  ulong uVar1;\n  long lVar2;\n  bool bVar3;\n  undefined *puVar4;\n  char cVar5;\n  undefined2 uVar6;\n  int iVar7;\n  int iVar8;\n  int *piVar9;\n  dirent *pdVar10;\n  size_t sVar11;\n  void *pvVar12;\n  undefined8 uVar13;\n  void *pvVar14;\n  DIR *pDVar15;\n  long lVar16;\n  long lVar17;\n  uint uVar18;\n  ushort uVar19;\n  ulong uVar20;\n  uint uVar21;\n  undefined4 uVar22;\n  bool bVar23;\n  void *local_90;\n  ulong local_88;\n  void *local_80;\n  ulong local_78;\n  ulong local_60;\n  undefined *local_58;\n  ulong local_50;\n  char local_3a;\n  \n  lVar17 = *param_1;\n  __dirp = *(DIR **)(lVar17 + 0x18);\n  if (__dirp == (DIR *)0x0) {\n    uVar21 = *(uint *)(param_1 + 9);\n    uVar18 = uVar21 & 0x10;\n    if ((uVar18 != 0) && (uVar18 = 0x20000, (uVar21 & 1) != 0)) {\n      uVar18 = (uint)(*(long *)(lVar17 + 0x58) != 0) << 0x11;\n    }\n    uVar22 = 0xffffff9c;\n    if ((uVar21 & 0x204) == 0x200) {\n      uVar22 = *(undefined4 *)((long)param_1 + 0x2c);\n    }\n    iVar7 = FUN_0040af10(uVar22,*(undefined8 *)(lVar17 + 0x30),\n                         (uVar21 & 0x800) << 7 | uVar18 | 0x90900);\n    if (-1 < iVar7) {\n      pDVar15 = fdopendir(iVar7);\n      if (pDVar15 != (DIR *)0x0) {\n        *(DIR **)(lVar17 + 0x18) = pDVar15;\n        if (*(short *)(lVar17 + 0x70) == 0xb) {\n          uVar6 = FUN_00406450(param_1,lVar17,0);\n          *(undefined2 *)(lVar17 + 0x70) = uVar6;\n        }\n        else if ((*(uint *)(param_1 + 9) & 0x100) != 0) {\n          FUN_00406e20(*(uint *)(param_1 + 9),param_1 + 0xb,lVar17);\n          FUN_00406450(param_1,lVar17,0);\n          cVar5 = FUN_00406d70(*(undefined4 *)(param_1 + 9),param_1 + 0xb,lVar17);\n          if (cVar5 == '\\0') {\n            piVar9 = __errno_location();\n            *piVar9 = 0xc;\n            return (void *)0x0;\n          }\n        }\n        local_60 = (ulong)(-(uint)(param_1[8] == 0) & 0x186a1) - 1;\n        if (param_2 == 2) {\nLAB_00407670:\n          bVar23 = false;\n          uVar21 = *(uint *)(param_1 + 9);\n          goto LAB_00406f14;\n        }\n        if ((((*(uint *)(param_1 + 9) & 0x38) == 0x18) && (*(long *)(lVar17 + 0x88) == 2)) &&\n           (iVar8 = FUN_00406940(lVar17), iVar8 != 0)) {\n          if (param_2 != 3) goto LAB_00407670;\n          bVar3 = false;\n          bVar23 = true;\n        }\n        else {\n          bVar23 = param_2 == 3;\n          bVar3 = true;\n        }\n        if (((*(byte *)((long)param_1 + 0x49) & 2) == 0) ||\n           (iVar7 = FUN_0040b030(iVar7,0x406,3), -1 < iVar7)) {\n          iVar8 = FUN_00406ba0(param_1,lVar17,iVar7,0);\n          if (iVar8 == 0) goto LAB_00406f0b;\n          pDVar15 = *(DIR **)(lVar17 + 0x18);\n          uVar19 = *(ushort *)(lVar17 + 0x72) | 1;\n          if ((bVar23) && (bVar3)) goto LAB_004073ad;\nLAB_004073c2:\n          *(ushort *)(lVar17 + 0x72) = uVar19;\n          closedir(pDVar15);\n          uVar21 = *(uint *)(param_1 + 9);\n          *(undefined8 *)(lVar17 + 0x18) = 0;\n          if (((uVar21 & 0x200) != 0) && (-1 < iVar7)) {\n            close(iVar7);\n            uVar21 = *(uint *)(param_1 + 9);\n          }\n        }\n        else {\n          pDVar15 = *(DIR **)(lVar17 + 0x18);\n          uVar19 = *(ushort *)(lVar17 + 0x72) | 1;\n          if ((bVar23) && (bVar3)) {\nLAB_004073ad:\n            piVar9 = __errno_location();\n            *(int *)(lVar17 + 0x40) = *piVar9;\n            goto LAB_004073c2;\n          }\n          *(ushort *)(lVar17 + 0x72) = uVar19;\n          closedir(pDVar15);\n          uVar21 = *(uint *)(param_1 + 9);\n        }\n        *(undefined8 *)(lVar17 + 0x18) = 0;\n        bVar23 = false;\n        goto LAB_00406f14;\n      }\n      piVar9 = __errno_location();\n      iVar8 = *piVar9;\n      close(iVar7);\n      *piVar9 = iVar8;\n    }\n    *(undefined8 *)(lVar17 + 0x18) = 0;\njoined_r0x0040763f:\n    if (param_2 == 3) {\n      *(undefined2 *)(lVar17 + 0x70) = 4;\n      piVar9 = __errno_location();\n      *(int *)(lVar17 + 0x40) = *piVar9;\n    }\n    return (void *)0x0;\n  }\n  iVar7 = dirfd(__dirp);\n  if (iVar7 < 0) {\n    closedir(*(DIR **)(lVar17 + 0x18));\n    *(undefined8 *)(lVar17 + 0x18) = 0;\n    goto joined_r0x0040763f;\n  }\n  if (param_1[8] == 0) {\n    local_60 = 100000;\n    uVar21 = *(uint *)(param_1 + 9);\n    bVar23 = true;\n  }\n  else {\n    local_60 = 0xffffffffffffffff;\nLAB_00406f0b:\n    bVar23 = true;\n    uVar21 = *(uint *)(param_1 + 9);\n  }\nLAB_00406f14:\n  uVar1 = *(ulong *)(lVar17 + 0x48);\n  local_88 = uVar1;\n  local_50 = uVar1 - 1;\n  if (*(char *)(*(long *)(lVar17 + 0x38) + -1 + uVar1) != '/') {\n    local_88 = uVar1 + 1;\n    local_50 = uVar1;\n  }\n  local_58 = (undefined *)0x0;\n  if ((uVar21 & 4) != 0) {\n    local_58 = (undefined *)(local_50 + param_1[4]) + 1;\n    *(undefined *)(local_50 + param_1[4]) = 0x2f;\n  }\n  local_78 = param_1[6] - local_88;\n  local_3a = '\\0';\n  lVar16 = *(long *)(lVar17 + 0x58);\n  local_90 = (void *)0x0;\n  local_80 = (void *)0x0;\n  uVar1 = 0;\n  do {\n    do {\n      uVar20 = uVar1;\n      pDVar15 = *(DIR **)(lVar17 + 0x18);\n      if (pDVar15 == (DIR *)0x0) goto joined_r0x004074eb;\n      piVar9 = __errno_location();\n      *piVar9 = 0;\n      pdVar10 = readdir(pDVar15);\n      if (pdVar10 == (dirent *)0x0) {\n        if (*piVar9 != 0) {\n          *(int *)(lVar17 + 0x40) = *piVar9;\n          *(ushort *)(lVar17 + 0x70) = (-(ushort)(((ulong)__dirp | uVar20) == 0) & 0xfffd) + 7;\n        }\n        if (*(DIR **)(lVar17 + 0x18) != (DIR *)0x0) {\n          closedir(*(DIR **)(lVar17 + 0x18));\n          *(undefined8 *)(lVar17 + 0x18) = 0;\n        }\n        goto joined_r0x004074eb;\n      }\n    } while ((((*(byte *)(param_1 + 9) & 0x20) == 0) && (pdVar10->d_name[0] == '.')) &&\n            ((uVar1 = uVar20, pdVar10->d_name[1] == '\\0' ||\n             (*(short *)(pdVar10->d_name + 1) == 0x2e))));\n    sVar11 = strlen(pdVar10->d_name);\n    pvVar12 = (void *)FUN_00406700(param_1,pdVar10->d_name,sVar11);\n    if (pvVar12 == (void *)0x0) {\nLAB_00407420:\n      iVar7 = *piVar9;\n      free(pvVar12);\n      FUN_00406790(local_80);\n      closedir(*(DIR **)(lVar17 + 0x18));\n      *(undefined8 *)(lVar17 + 0x18) = 0;\n      *(undefined2 *)(lVar17 + 0x70) = 7;\n      *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n      *piVar9 = iVar7;\n      return (void *)0x0;\n    }\n    if (local_78 <= sVar11) {\n      lVar2 = param_1[4];\n      cVar5 = FUN_00406a80(param_1 + 4,param_1 + 6,local_50 + 2 + sVar11);\n      if (cVar5 == '\\0') goto LAB_00407420;\n      puVar4 = local_58;\n      if ((param_1[4] != lVar2) &&\n         (local_3a = cVar5, puVar4 = (undefined *)(param_1[4] + local_88),\n         (*(byte *)(param_1 + 9) & 4) == 0)) {\n        puVar4 = local_58;\n      }\n      local_58 = puVar4;\n      local_78 = param_1[6] - local_88;\n    }\n    if (CARRY8(sVar11,local_88)) {\n      free(pvVar12);\n      FUN_00406790(local_80);\n      closedir(*(DIR **)(lVar17 + 0x18));\n      *(undefined8 *)(lVar17 + 0x18) = 0;\n      *(undefined2 *)(lVar17 + 0x70) = 7;\n      *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n      *piVar9 = 0x24;\n      return (void *)0x0;\n    }\n    *(long *)((long)pvVar12 + 0x58) = lVar16 + 1;\n    lVar2 = *param_1;\n    *(size_t *)((long)pvVar12 + 0x48) = sVar11 + local_88;\n    *(long *)((long)pvVar12 + 8) = lVar2;\n    *(__ino_t *)((long)pvVar12 + 0x80) = pdVar10->d_ino;\n    uVar21 = *(uint *)(param_1 + 9);\n    if ((uVar21 & 4) == 0) {\n      *(void **)((long)pvVar12 + 0x30) = (void *)((long)pvVar12 + 0x108);\n    }\n    else {\n      *(undefined8 *)((long)pvVar12 + 0x30) = *(undefined8 *)((long)pvVar12 + 0x38);\n      memmove(local_58,(void *)((long)pvVar12 + 0x108),*(long *)((long)pvVar12 + 0x60) + 1);\n      uVar21 = *(uint *)(param_1 + 9);\n    }\n    if ((param_1[8] == 0) || ((uVar21 & 0x400) != 0)) {\n      uVar18 = pdVar10->d_type - 1;\n      if (((uVar21 & 0x18) == 0x18) && ((pdVar10->d_type & 0xfb) != 0)) {\n        *(undefined2 *)((long)pvVar12 + 0x70) = 0xb;\n        if (uVar18 < 0xc) {\n          *(undefined4 *)((long)pvVar12 + 0x90) = *(undefined4 *)(&DAT_0040d4e0 + (ulong)uVar18 * 4)\n          ;\n          uVar13 = 1;\n        }\n        else {\n          *(undefined4 *)((long)pvVar12 + 0x90) = 0;\n          uVar13 = 1;\n        }\n      }\n      else {\n        *(undefined2 *)((long)pvVar12 + 0x70) = 0xb;\n        if (uVar18 < 0xc) {\n          *(undefined4 *)((long)pvVar12 + 0x90) = *(undefined4 *)(&DAT_0040d4e0 + (ulong)uVar18 * 4)\n          ;\n          uVar13 = 2;\n        }\n        else {\n          *(undefined4 *)((long)pvVar12 + 0x90) = 0;\n          uVar13 = 2;\n        }\n      }\n      *(undefined8 *)((long)pvVar12 + 0xa8) = uVar13;\n    }\n    else {\n      uVar6 = FUN_00406450(param_1,pvVar12,0);\n      *(undefined2 *)((long)pvVar12 + 0x70) = uVar6;\n    }\n    *(undefined8 *)((long)pvVar12 + 0x10) = 0;\n    pvVar14 = pvVar12;\n    if (local_80 != (void *)0x0) {\n      *(void **)((long)local_90 + 0x10) = pvVar12;\n      pvVar14 = local_80;\n    }\n    local_80 = pvVar14;\n    uVar1 = uVar20 + 1;\n    local_90 = pvVar12;\n  } while (uVar20 + 1 < local_60);\n  uVar20 = uVar20 + 1;\njoined_r0x004074eb:\n  if (local_3a != '\\0') {\n    lVar2 = param_1[4];\n    for (lVar16 = param_1[1]; pvVar12 = local_80, lVar16 != 0; lVar16 = *(long *)(lVar16 + 0x10)) {\n      if (*(long *)(lVar16 + 0x30) != lVar16 + 0x108) {\n        *(long *)(lVar16 + 0x30) = (*(long *)(lVar16 + 0x30) - *(long *)(lVar16 + 0x38)) + lVar2;\n      }\n      *(long *)(lVar16 + 0x38) = lVar2;\n    }\n    while (pvVar14 = pvVar12, -1 < *(long *)((long)pvVar14 + 0x58)) {\n      if (*(long *)((long)pvVar14 + 0x30) != (long)pvVar14 + 0x108) {\n        *(long *)((long)pvVar14 + 0x30) =\n             (*(long *)((long)pvVar14 + 0x30) - *(long *)((long)pvVar14 + 0x38)) + lVar2;\n      }\n      *(long *)((long)pvVar14 + 0x38) = lVar2;\n      pvVar12 = *(void **)((long)pvVar14 + 0x10);\n      if (*(void **)((long)pvVar14 + 0x10) == (void *)0x0) {\n        pvVar12 = *(void **)((long)pvVar14 + 8);\n      }\n    }\n  }\n  if ((*(byte *)(param_1 + 9) & 4) != 0) {\n    if ((param_1[6] == local_88) || (uVar20 == 0)) {\n      local_58 = local_58 + -1;\n    }\n    *local_58 = 0;\n  }\n  if ((__dirp == (DIR *)0x0) && (bVar23)) {\n    if ((param_2 == 1) || (uVar20 == 0)) {\n      if (*(long *)(lVar17 + 0x58) == 0) {\n        iVar7 = FUN_00406a20(param_1);\n      }\n      else {\n        iVar7 = FUN_00406ba0(param_1,*(undefined8 *)(lVar17 + 8),0xffffffff,&DAT_0040bf36);\n      }\n      if (iVar7 != 0) {\n        *(undefined2 *)(lVar17 + 0x70) = 7;\n        *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n        FUN_00406790(local_80);\n        return (void *)0x0;\n      }\n      goto LAB_00407588;\n    }\n  }\n  else {\nLAB_00407588:\n    if (uVar20 == 0) {\n      if (((param_2 == 3) && (*(short *)(lVar17 + 0x70) != 4)) && (*(short *)(lVar17 + 0x70) != 7))\n      {\n        *(undefined2 *)(lVar17 + 0x70) = 6;\n      }\n      FUN_00406790(local_80);\n      return (void *)0x0;\n    }\n  }\n  lVar16 = param_1[8];\n  if (10000 < uVar20) {\n    if (lVar16 != 0) goto LAB_00407547;\n    lVar17 = FUN_00406820(lVar17);\n    if ((lVar17 != 0x6969) && (lVar17 != 0x1021994)) {\n      param_1[8] = (long)FUN_00406420;\n      pvVar12 = (void *)FUN_00406600(param_1,local_80,uVar20);\n      param_1[8] = 0;\n      return pvVar12;\n    }\n    lVar16 = param_1[8];\n  }\n  if (lVar16 == 0) {\n    return local_80;\n  }\n  if (uVar20 == 1) {\n    return local_80;\n  }\nLAB_00407547:\n  pvVar12 = (void *)FUN_00406600(param_1,local_80,uVar20);\n  return pvVar12;\n}\n\n",
            "funcName": "FUN_00406ec0"
        },
        {
            "funcStartAddr": "0x407880",
            "funcEndAddr": "0x407bf0",
            "decompiledFuncCode": "\nlong * fts_open(char **param_1,uint param_2,long param_3)\n\n{\n  undefined4 uVar1;\n  char cVar2;\n  undefined2 uVar3;\n  int iVar4;\n  long *__ptr;\n  size_t sVar5;\n  long lVar6;\n  long lVar7;\n  long lVar8;\n  int *piVar9;\n  ulong uVar10;\n  char *pcVar11;\n  char **ppcVar12;\n  void *local_50;\n  byte local_42;\n  long local_40;\n  \n  if ((((param_2 & 0xffffe000) != 0) || ((param_2 & 0x204) == 0x204)) || ((param_2 & 0x12) == 0)) {\n    piVar9 = __errno_location();\n    *piVar9 = 0x16;\n    return (long *)0x0;\n  }\n  __ptr = (long *)calloc(0x80,1);\n  if (__ptr == (long *)0x0) {\n    return (long *)0x0;\n  }\n  __ptr[8] = param_3;\n  if ((param_2 & 2) == 0) {\n    *(uint *)(__ptr + 9) = param_2;\n  }\n  else {\n    *(uint *)(__ptr + 9) = param_2 & 0xfffffdff | 4;\n  }\n  pcVar11 = *param_1;\n  *(undefined4 *)((long)__ptr + 0x2c) = 0xffffff9c;\n  if (pcVar11 == (char *)0x0) {\n    uVar10 = 0x1000;\n  }\n  else {\n    uVar10 = 0;\n    ppcVar12 = param_1;\n    do {\n      sVar5 = strlen(pcVar11);\n      if (uVar10 < sVar5) {\n        uVar10 = sVar5;\n      }\n      ppcVar12 = ppcVar12 + 1;\n      pcVar11 = *ppcVar12;\n    } while (pcVar11 != (char *)0x0);\n    uVar10 = uVar10 + 1;\n    if (uVar10 < 0x1000) {\n      uVar10 = 0x1000;\n    }\n  }\n  local_42 = FUN_00406a80(__ptr + 4,__ptr + 6,uVar10);\n  if (local_42 == 0) goto LAB_00407b4b;\n  pcVar11 = *param_1;\n  if (pcVar11 == (char *)0x0) {\n    local_50 = (void *)0x0;\n    if (param_3 != 0) {\nLAB_00407993:\n      local_42 = (byte)(*(uint *)(__ptr + 9) >> 10) & 1;\n      goto LAB_004079a0;\n    }\nLAB_00407b82:\n    lVar7 = 0;\nLAB_00407abc:\n    lVar8 = FUN_00406700(__ptr,\"\",0);\n    *__ptr = lVar8;\n    if (lVar8 != 0) {\n      *(long *)(lVar8 + 0x10) = lVar7;\n      uVar1 = *(undefined4 *)(__ptr + 9);\n      *(undefined2 *)(lVar8 + 0x70) = 9;\n      cVar2 = FUN_00406af0(uVar1,__ptr + 0xb);\n      if (cVar2 != '\\0') {\n        if ((*(uint *)(__ptr + 9) & 0x204) == 0) {\n          iVar4 = FUN_00406b50(*(undefined4 *)((long)__ptr + 0x2c),*(uint *)(__ptr + 9),\n                               &DAT_0040bf37);\n          *(int *)(__ptr + 5) = iVar4;\n          if (iVar4 < 0) {\n            *(uint *)(__ptr + 9) = *(uint *)(__ptr + 9) | 4;\n          }\n        }\n        FUN_0040a8e0(__ptr + 0xc,0xffffffff);\n        return __ptr;\n      }\n    }\nLAB_00407b30:\n    FUN_00406790(lVar7);\n    free(local_50);\n  }\n  else {\n    local_50 = (void *)FUN_00406700(__ptr,\"\",0);\n    if (local_50 != (void *)0x0) {\n      pcVar11 = *param_1;\n      *(undefined8 *)((long)local_50 + 0x58) = 0xffffffffffffffff;\n      *(undefined8 *)((long)local_50 + 0x68) = 0xffffffffffffffff;\n      if (param_3 != 0) goto LAB_00407993;\nLAB_004079a0:\n      if (pcVar11 == (char *)0x0) goto LAB_00407b82;\n      local_40 = 0;\n      uVar10 = 0;\n      lVar8 = 0;\n      do {\n        sVar5 = strlen(pcVar11);\n        if (((2 < sVar5) && ((((byte)(param_2 >> 0xc) ^ 1) & 1) != 0)) &&\n           (pcVar11[sVar5 - 1] == '/')) {\n          do {\n            if (pcVar11[sVar5 - 2] != '/') break;\n            sVar5 = sVar5 - 1;\n          } while (sVar5 != 1);\n        }\n        lVar6 = FUN_00406700(__ptr,pcVar11,sVar5);\n        lVar7 = lVar8;\n        if (lVar6 == 0) goto LAB_00407b30;\n        *(undefined8 *)(lVar6 + 0x58) = 0;\n        *(void **)(lVar6 + 8) = local_50;\n        *(long *)(lVar6 + 0x30) = lVar6 + 0x108;\n        lVar7 = lVar6;\n        if ((lVar8 == 0) || (local_42 == 0)) {\n          uVar3 = FUN_00406450(__ptr,lVar6,0);\n          *(undefined2 *)(lVar6 + 0x70) = uVar3;\n          if (param_3 != 0) goto LAB_00407a38;\n          *(undefined8 *)(lVar6 + 0x10) = 0;\n          if (lVar8 != 0) goto LAB_00407bd0;\n        }\n        else {\n          *(undefined8 *)(lVar6 + 0xa8) = 2;\n          *(undefined2 *)(lVar6 + 0x70) = 0xb;\n          if (param_3 == 0) {\n            *(undefined8 *)(lVar6 + 0x10) = 0;\nLAB_00407bd0:\n            *(long *)(local_40 + 0x10) = lVar6;\n            lVar7 = lVar8;\n          }\n          else {\nLAB_00407a38:\n            *(long *)(lVar6 + 0x10) = lVar8;\n            lVar6 = local_40;\n          }\n        }\n        local_40 = lVar6;\n        uVar10 = uVar10 + 1;\n        pcVar11 = param_1[uVar10];\n        lVar8 = lVar7;\n      } while (pcVar11 != (char *)0x0);\n      if ((param_3 != 0) && (1 < uVar10)) {\n        lVar7 = FUN_00406600(__ptr,lVar7,uVar10);\n      }\n      goto LAB_00407abc;\n    }\n  }\n  free((void *)__ptr[4]);\nLAB_00407b4b:\n  free(__ptr);\n  return (long *)0x0;\n}\n\n",
            "funcName": "fts_open"
        },
        {
            "funcStartAddr": "0x407c20",
            "funcEndAddr": "0x407d6e",
            "decompiledFuncCode": "\nint fts_close(void **param_1)\n\n{\n  long lVar1;\n  int iVar2;\n  int iVar3;\n  int *piVar4;\n  void *__ptr;\n  void *__ptr_00;\n  \n  __ptr = *param_1;\n  if (__ptr != (void *)0x0) {\n    lVar1 = *(long *)((long)__ptr + 0x58);\n    while (__ptr_00 = __ptr, -1 < lVar1) {\n      while (__ptr = *(void **)((long)__ptr_00 + 0x10), __ptr != (void *)0x0) {\n        free(__ptr_00);\n        __ptr_00 = __ptr;\n        if (*(long *)((long)__ptr + 0x58) < 0) goto LAB_00407c6b;\n      }\n      __ptr = *(void **)((long)__ptr_00 + 8);\n      free(__ptr_00);\n      lVar1 = *(long *)((long)__ptr + 0x58);\n    }\nLAB_00407c6b:\n    free(__ptr);\n  }\n  if (param_1[1] != (void *)0x0) {\n    FUN_00406790();\n  }\n  free(param_1[2]);\n  free(param_1[4]);\n  if ((*(uint *)(param_1 + 9) & 0x200) == 0) {\n    if ((*(uint *)(param_1 + 9) & 4) == 0) {\n      iVar2 = fchdir(*(int *)(param_1 + 5));\n      if (iVar2 == 0) {\n        iVar2 = close(*(int *)(param_1 + 5));\n        if (iVar2 == 0) goto LAB_00407ca2;\n        piVar4 = __errno_location();\n      }\n      else {\n        piVar4 = __errno_location();\n        iVar2 = *piVar4;\n        iVar3 = close(*(int *)(param_1 + 5));\n        if ((iVar3 == 0) || (iVar2 != 0)) goto LAB_00407ca4;\n      }\n      iVar2 = *piVar4;\n      goto LAB_00407ca4;\n    }\n  }\n  else if ((-1 < *(int *)((long)param_1 + 0x2c)) &&\n          (iVar2 = close(*(int *)((long)param_1 + 0x2c)), iVar2 != 0)) {\n    piVar4 = __errno_location();\n    iVar2 = *piVar4;\n    goto LAB_00407ca4;\n  }\nLAB_00407ca2:\n  iVar2 = 0;\nLAB_00407ca4:\n  FUN_004067e0(param_1 + 0xc);\n  if (param_1[10] != (void *)0x0) {\n    FUN_0040a160();\n  }\n  if ((*(uint *)(param_1 + 9) & 0x102) == 0) {\n    free(param_1[0xb]);\n  }\n  else if (param_1[0xb] != (void *)0x0) {\n    FUN_0040a160();\n  }\n  free(param_1);\n  if (iVar2 != 0) {\n    piVar4 = __errno_location();\n    *piVar4 = iVar2;\n    iVar2 = -1;\n  }\n  return iVar2;\n}\n\n",
            "funcName": "fts_close"
        },
        {
            "funcStartAddr": "0x407da0",
            "funcEndAddr": "0x4084ca",
            "decompiledFuncCode": "\nvoid * fts_read(void **param_1)\n\n{\n  ulong uVar1;\n  char *__s;\n  short sVar2;\n  undefined4 uVar3;\n  long lVar4;\n  char cVar5;\n  undefined2 uVar6;\n  short sVar7;\n  int iVar8;\n  int *piVar9;\n  char *pcVar10;\n  size_t sVar11;\n  long lVar12;\n  void *pvVar13;\n  void *pvVar14;\n  uint uVar15;\n  \n  pvVar14 = *param_1;\n  if (pvVar14 == (void *)0x0) {\n    return (void *)0x0;\n  }\n  uVar15 = *(uint *)(param_1 + 9);\n  if ((uVar15 & 0x4000) != 0) {\n    return (void *)0x0;\n  }\n  sVar7 = *(short *)((long)pvVar14 + 0x74);\n  *(undefined2 *)((long)pvVar14 + 0x74) = 3;\n  if (sVar7 == 1) {\n    uVar6 = FUN_00406450(param_1,pvVar14,0);\n    *(undefined2 *)((long)pvVar14 + 0x70) = uVar6;\n    return pvVar14;\n  }\n  sVar2 = *(short *)((long)pvVar14 + 0x70);\n  pvVar13 = pvVar14;\n  if (sVar7 == 2) {\n    if (1 < (ushort)(sVar2 - 0xcU)) {\n      if (sVar2 == 1) goto LAB_00407ef7;\n      goto LAB_00407e20;\n    }\n    sVar7 = FUN_00406450(param_1,pvVar14,1);\n    *(short *)((long)pvVar14 + 0x70) = sVar7;\n    if (sVar7 != 1) {\n      *param_1 = pvVar14;\n      if (sVar7 != 0xb) {\n        return pvVar14;\n      }\n      goto LAB_00408160;\n    }\n    if ((*(uint *)(param_1 + 9) & 4) == 0) {\n      iVar8 = FUN_00406b50(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                           &DAT_0040bf37);\n      *(int *)((long)pvVar14 + 0x44) = iVar8;\n      if (iVar8 < 0) {\n        piVar9 = __errno_location();\n        iVar8 = *piVar9;\n        *(undefined2 *)((long)pvVar14 + 0x70) = 7;\n        *(int *)((long)pvVar14 + 0x40) = iVar8;\n        *param_1 = pvVar14;\n        return pvVar14;\n      }\n      *(ushort *)((long)pvVar14 + 0x72) = *(ushort *)((long)pvVar14 + 0x72) | 2;\n      sVar7 = *(short *)((long)pvVar14 + 0x70);\n      goto LAB_004080d7;\n    }\n    *param_1 = pvVar14;\nLAB_004080ee:\n    if (*(long *)((long)pvVar14 + 0x58) != 0) goto LAB_004080fe;\n  }\n  else {\n    if (sVar2 == 1) {\n      if (sVar7 == 4) goto LAB_00407f92;\nLAB_00407ef7:\n      if (((uVar15 & 0x40) != 0) && (*(void **)((long)pvVar14 + 0x78) != param_1[3])) {\nLAB_00407f92:\n        if ((*(byte *)((long)pvVar14 + 0x72) & 2) != 0) {\n          close(*(int *)((long)pvVar14 + 0x44));\n        }\n        if (param_1[1] != (void *)0x0) {\n          FUN_00406790();\n          param_1[1] = (void *)0x0;\n        }\n        uVar3 = *(undefined4 *)(param_1 + 9);\n        *(undefined2 *)((long)pvVar14 + 0x70) = 6;\n        FUN_00406e20(uVar3,param_1 + 0xb,pvVar14);\n        return pvVar14;\n      }\n      if (param_1[1] == (void *)0x0) {\nLAB_004081b9:\n        pvVar13 = (void *)FUN_00406ec0(param_1,3);\n        param_1[1] = pvVar13;\n        if (pvVar13 == (void *)0x0) {\n          uVar15 = *(uint *)(param_1 + 9);\n          if ((uVar15 & 0x4000) != 0) {\n            return (void *)0x0;\n          }\n          if ((*(int *)((long)pvVar14 + 0x40) != 0) && (*(short *)((long)pvVar14 + 0x70) != 4)) {\n            *(undefined2 *)((long)pvVar14 + 0x70) = 7;\n          }\n          FUN_00406e20(uVar15,param_1 + 0xb,pvVar14);\n          return pvVar14;\n        }\n      }\n      else {\n        if ((uVar15 & 0x2000) != 0) {\n          *(uint *)(param_1 + 9) = uVar15 & 0xffffdfff;\n          FUN_00406790();\n          param_1[1] = (void *)0x0;\n          goto LAB_004081b9;\n        }\n        iVar8 = FUN_00406ba0(param_1,pvVar14,0xffffffff,*(undefined8 *)((long)pvVar14 + 0x30));\n        if (iVar8 == 0) {\n          pvVar13 = param_1[1];\n        }\n        else {\n          piVar9 = __errno_location();\n          pvVar13 = param_1[1];\n          iVar8 = *piVar9;\n          *(ushort *)((long)pvVar14 + 0x72) = *(ushort *)((long)pvVar14 + 0x72) | 1;\n          *(int *)((long)pvVar14 + 0x40) = iVar8;\n          for (pvVar14 = pvVar13; pvVar14 != (void *)0x0; pvVar14 = *(void **)((long)pvVar14 + 0x10)\n              ) {\n            *(undefined8 *)((long)pvVar14 + 0x30) =\n                 *(undefined8 *)(*(long *)((long)pvVar14 + 8) + 0x30);\n          }\n        }\n      }\n      param_1[1] = (void *)0x0;\n      pvVar14 = pvVar13;\n    }\n    else {\nLAB_00407e20:\n      do {\n        pvVar14 = *(void **)((long)pvVar13 + 0x10);\n        if (pvVar14 == (void *)0x0) {\n          pvVar14 = *(void **)((long)pvVar13 + 8);\n          if (*(long *)((long)pvVar14 + 0x18) != 0) {\n            lVar4 = *(long *)((long)pvVar14 + 0x48);\n            *param_1 = pvVar14;\n            *(undefined *)((long)param_1[4] + lVar4) = 0;\n            pvVar14 = (void *)FUN_00406ec0(param_1,3);\n            if (pvVar14 != (void *)0x0) {\n              free(pvVar13);\n              goto LAB_0040809a;\n            }\n            if ((*(byte *)((long)param_1 + 0x49) & 0x40) != 0) {\n              return (void *)0x0;\n            }\n            pvVar14 = *(void **)((long)pvVar13 + 8);\n          }\n          *param_1 = pvVar14;\n          free(pvVar13);\n          if (*(long *)((long)pvVar14 + 0x58) == -1) {\n            free(pvVar14);\n            piVar9 = __errno_location();\n            *piVar9 = 0;\n            *param_1 = (void *)0x0;\n            return (void *)0x0;\n          }\n          if (*(short *)((long)pvVar14 + 0x70) != 0xb) {\n            *(undefined *)((long)param_1[4] + *(long *)((long)pvVar14 + 0x48)) = 0;\n            if (*(long *)((long)pvVar14 + 0x58) == 0) {\n              iVar8 = FUN_00406a20(param_1);\n              if (iVar8 == 0) goto LAB_00407e86;\nLAB_0040829f:\n              piVar9 = __errno_location();\n              *(int *)((long)pvVar14 + 0x40) = *piVar9;\n              *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n              if (*(short *)((long)pvVar14 + 0x70) == 2) {\n                return (void *)0x0;\n              }\n              uVar15 = *(uint *)(param_1 + 9);\n            }\n            else {\n              if ((*(ushort *)((long)pvVar14 + 0x72) & 2) == 0) {\n                if (((*(ushort *)((long)pvVar14 + 0x72) & 1) == 0) &&\n                   (iVar8 = FUN_00406ba0(param_1,*(undefined8 *)((long)pvVar14 + 8),0xffffffff,\n                                         &DAT_0040bf36), iVar8 != 0)) goto LAB_0040829f;\n              }\n              else {\n                iVar8 = *(int *)((long)pvVar14 + 0x44);\n                if ((*(uint *)(param_1 + 9) & 4) == 0) {\n                  if ((*(uint *)(param_1 + 9) & 0x200) == 0) {\n                    iVar8 = fchdir(iVar8);\n                    if (iVar8 != 0) {\n                      piVar9 = __errno_location();\n                      *(int *)((long)pvVar14 + 0x40) = *piVar9;\n                      *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n                    }\n                    iVar8 = *(int *)((long)pvVar14 + 0x44);\n                  }\n                  else {\n                    FUN_004069b0(param_1,iVar8,1);\n                    iVar8 = *(int *)((long)pvVar14 + 0x44);\n                  }\n                }\n                close(iVar8);\n              }\nLAB_00407e86:\n              uVar15 = *(uint *)(param_1 + 9);\n              if (*(short *)((long)pvVar14 + 0x70) == 2) goto LAB_00407eb8;\n            }\n            if (*(int *)((long)pvVar14 + 0x40) == 0) {\n              *(undefined2 *)((long)pvVar14 + 0x70) = 6;\n              FUN_00406e20(uVar15,param_1 + 0xb,pvVar14);\n              uVar15 = *(uint *)(param_1 + 9);\n            }\n            else {\n              *(undefined2 *)((long)pvVar14 + 0x70) = 7;\n            }\nLAB_00407eb8:\n            if ((uVar15 & 0x4000) != 0) {\n              return (void *)0x0;\n            }\n            return pvVar14;\n          }\n          goto FUN_00401e28;\n        }\n        *param_1 = pvVar14;\n        free(pvVar13);\n        if (*(long *)((long)pvVar14 + 0x58) == 0) {\n          iVar8 = FUN_00406a20(param_1);\n          if (iVar8 != 0) {\n            *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n            return (void *)0x0;\n          }\n          if ((*(uint *)(param_1 + 9) & 0x102) == 0) {\n            free(param_1[0xb]);\n          }\n          else if (param_1[0xb] != (void *)0x0) {\n            FUN_0040a160();\n          }\n          __s = (char *)((long)pvVar14 + 0x108);\n          pvVar13 = param_1[4];\n          *(long *)((long)pvVar14 + 0x48) = *(long *)((long)pvVar14 + 0x60);\n          memmove(pvVar13,__s,*(long *)((long)pvVar14 + 0x60) + 1);\n          pcVar10 = strrchr(__s,0x2f);\n          if ((pcVar10 != (char *)0x0) &&\n             ((__s != pcVar10 || (*(char *)((long)pvVar14 + 0x109) != '\\0')))) {\n            sVar11 = strlen(pcVar10 + 1);\n            memmove(__s,pcVar10 + 1,sVar11 + 1);\n            *(size_t *)((long)pvVar14 + 0x60) = sVar11;\n          }\n          pvVar13 = param_1[4];\n          uVar3 = *(undefined4 *)(param_1 + 9);\n          *(void **)((long)pvVar14 + 0x38) = pvVar13;\n          *(void **)((long)pvVar14 + 0x30) = pvVar13;\n          FUN_00406af0(uVar3,param_1 + 0xb);\n          sVar7 = *(short *)((long)pvVar14 + 0x70);\n          goto LAB_004080d7;\n        }\n        pvVar13 = pvVar14;\n      } while (*(short *)((long)pvVar14 + 0x74) == 4);\n      if (*(short *)((long)pvVar14 + 0x74) == 2) {\n        sVar7 = FUN_00406450(param_1,pvVar14,1);\n        *(short *)((long)pvVar14 + 0x70) = sVar7;\n        if ((sVar7 == 1) && ((*(uint *)(param_1 + 9) & 4) == 0)) {\n          iVar8 = FUN_00406b50(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                               &DAT_0040bf37);\n          *(int *)((long)pvVar14 + 0x44) = iVar8;\n          if (iVar8 < 0) {\n            piVar9 = __errno_location();\n            iVar8 = *piVar9;\n            *(undefined2 *)((long)pvVar14 + 0x70) = 7;\n            *(int *)((long)pvVar14 + 0x40) = iVar8;\n          }\n          else {\n            *(ushort *)((long)pvVar14 + 0x72) = *(ushort *)((long)pvVar14 + 0x72) | 2;\n          }\n        }\n        *(undefined2 *)((long)pvVar14 + 0x74) = 3;\n      }\n    }\nLAB_0040809a:\n    lVar4 = *(long *)(*(long *)((long)pvVar14 + 8) + 0x48);\n    lVar12 = lVar4 + -1;\n    if (*(char *)(*(long *)(*(long *)((long)pvVar14 + 8) + 0x38) + -1 + lVar4) != '/') {\n      lVar12 = lVar4;\n    }\n    pvVar13 = param_1[4];\n    *(undefined *)(lVar12 + (long)pvVar13) = 0x2f;\n    memmove((undefined *)(lVar12 + (long)pvVar13) + 1,(void *)((long)pvVar14 + 0x108),\n            *(long *)((long)pvVar14 + 0x60) + 1);\n    sVar7 = *(short *)((long)pvVar14 + 0x70);\nLAB_004080d7:\n    *param_1 = pvVar14;\n    if (sVar7 != 0xb) {\nLAB_004080e1:\n      if (sVar7 != 1) {\n        return pvVar14;\n      }\n      goto LAB_004080ee;\n    }\nLAB_00408160:\n    if (*(long *)((long)pvVar14 + 0xa8) != 2) {\n      if (*(long *)((long)pvVar14 + 0xa8) == 1) {\n        return pvVar14;\n      }\nFUN_00401e28:\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n    lVar4 = *(long *)((long)pvVar14 + 8);\n    if (((*(long *)(lVar4 + 0x68) == 0) && ((*(uint *)(param_1 + 9) & 0x18) == 0x18)) &&\n       (iVar8 = FUN_00406940(lVar4), iVar8 == 2)) {\n      sVar7 = *(short *)((long)pvVar14 + 0x70);\n      goto LAB_004080e1;\n    }\n    sVar7 = FUN_00406450(param_1,pvVar14,0);\n    *(short *)((long)pvVar14 + 0x70) = sVar7;\n    if ((*(uint *)((long)pvVar14 + 0x90) & 0xf000) != 0x4000) goto LAB_004080e1;\n    if (*(long *)((long)pvVar14 + 0x58) != 0) {\n      uVar1 = *(long *)(lVar4 + 0x68) - 1;\n      if (uVar1 < 0xfffffffffffffffe) {\n        *(ulong *)(lVar4 + 0x68) = uVar1;\n      }\n      if (sVar7 != 1) {\n        return pvVar14;\n      }\n      goto LAB_004080fe;\n    }\n    if (sVar7 != 1) {\n      return pvVar14;\n    }\n  }\n  param_1[3] = *(void **)((long)pvVar14 + 0x78);\nLAB_004080fe:\n  cVar5 = FUN_00406d70(*(undefined4 *)(param_1 + 9),param_1 + 0xb,pvVar14);\n  if (cVar5 == '\\0') {\n    piVar9 = __errno_location();\n    pvVar14 = (void *)0x0;\n    *piVar9 = 0xc;\n  }\n  return pvVar14;\n}\n\n",
            "funcName": "fts_read"
        },
        {
            "funcStartAddr": "0x408500",
            "funcEndAddr": "0x408525",
            "decompiledFuncCode": "\nundefined8 fts_set(undefined8 param_1,long param_2,uint param_3)\n\n{\n  int *piVar1;\n  \n  if (param_3 < 5) {\n    *(short *)(param_2 + 0x74) = (short)param_3;\n    return 0;\n  }\n  piVar1 = __errno_location();\n  *piVar1 = 0x16;\n  return 1;\n}\n\n",
            "funcName": "fts_set"
        },
        {
            "funcStartAddr": "0x408530",
            "funcEndAddr": "0x40867c",
            "decompiledFuncCode": "\nlong fts_children(long *param_1,uint param_2)\n\n{\n  int __fd;\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  long lVar4;\n  undefined8 uVar5;\n  \n  piVar2 = __errno_location();\n  if ((param_2 & 0xffffdfff) != 0) {\n    *piVar2 = 0x16;\n    return 0;\n  }\n  lVar4 = *param_1;\n  *piVar2 = 0;\n  if ((*(byte *)((long)param_1 + 0x49) & 0x40) == 0) {\n    if (*(short *)(lVar4 + 0x70) == 9) {\n      return *(long *)(lVar4 + 0x10);\n    }\n    lVar3 = 0;\n    if (*(short *)(lVar4 + 0x70) == 1) {\n      if (param_1[1] != 0) {\n        FUN_00406790();\n      }\n      uVar5 = 1;\n      if (param_2 == 0x2000) {\n        *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x2000;\n        uVar5 = 2;\n      }\n      if (((*(long *)(lVar4 + 0x58) == 0) && (**(char **)(lVar4 + 0x30) != '/')) &&\n         ((*(uint *)(param_1 + 9) & 4) == 0)) {\n        __fd = FUN_00406b50(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                            &DAT_0040bf37);\n        if (__fd < 0) {\n          param_1[1] = 0;\n          lVar3 = 0;\n        }\n        else {\n          lVar4 = FUN_00406ec0(param_1,uVar5);\n          param_1[1] = lVar4;\n          if ((*(byte *)((long)param_1 + 0x49) & 2) == 0) {\n            iVar1 = fchdir(__fd);\n            if (iVar1 != 0) {\n              iVar1 = *piVar2;\n              close(__fd);\n              *piVar2 = iVar1;\n              return 0;\n            }\n            close(__fd);\n          }\n          else {\n            FUN_004069b0(param_1,__fd,1);\n          }\n          lVar3 = param_1[1];\n        }\n      }\n      else {\n        lVar3 = FUN_00406ec0(param_1,uVar5);\n        param_1[1] = lVar3;\n      }\n    }\n    return lVar3;\n  }\n  return 0;\n}\n\n",
            "funcName": "fts_children"
        },
        {
            "funcStartAddr": "0x4086a0",
            "funcEndAddr": "0x408775",
            "decompiledFuncCode": "\nvoid FUN_004086a0(long param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 *puVar5;\n  long lVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  \n  iVar1 = param_2[0xb];\n  iVar2 = *param_2;\n  iVar3 = param_2[0xc];\n  iVar8 = iVar1;\n  iVar9 = iVar2;\n  while (iVar3 < iVar9) {\n    while( true ) {\n      if (iVar3 <= iVar8) goto LAB_0040871c;\n      iVar10 = iVar9 - iVar3;\n      iVar7 = iVar3 - iVar8;\n      if (iVar10 <= iVar7) break;\n      lVar6 = (long)iVar8;\n      iVar9 = iVar9 - iVar7;\n      puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n      do {\n        uVar4 = *puVar5;\n        *puVar5 = puVar5[iVar9 - lVar6];\n        puVar5[iVar9 - lVar6] = uVar4;\n        puVar5 = puVar5 + 1;\n      } while ((undefined8 *)(param_1 + 8 + ((ulong)(iVar7 - 1) + lVar6) * 8) != puVar5);\n      if (iVar9 <= iVar3) goto LAB_0040871c;\n    }\n    lVar6 = (long)iVar8;\n    puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n    do {\n      uVar4 = *puVar5;\n      *puVar5 = puVar5[iVar3 - lVar6];\n      puVar5[iVar3 - lVar6] = uVar4;\n      puVar5 = puVar5 + 1;\n    } while (puVar5 != (undefined8 *)(param_1 + 8 + ((ulong)(iVar10 - 1) + lVar6) * 8));\n    iVar8 = iVar8 + iVar10;\n  }\nLAB_0040871c:\n  param_2[0xc] = iVar2;\n  param_2[0xb] = iVar1 + (iVar2 - iVar3);\n  return;\n}\n\n",
            "funcName": "FUN_004086a0"
        },
        {
            "funcStartAddr": "0x408780",
            "funcEndAddr": "0x408d7e",
            "decompiledFuncCode": "\nint FUN_00408780(int param_1,undefined8 *param_2,char *param_3,char **param_4,undefined4 *param_5,\n                int param_6,int *param_7,int param_8,undefined8 param_9)\n\n{\n  char cVar1;\n  undefined8 uVar2;\n  bool bVar3;\n  bool bVar4;\n  int iVar5;\n  int iVar6;\n  size_t sVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  char **ppcVar10;\n  char *pcVar11;\n  char **ppcVar12;\n  char *pcVar13;\n  char *__s1;\n  FILE *__stream;\n  ulong uVar14;\n  size_t sVar15;\n  char *__s1_00;\n  long lVar16;\n  char *local_70;\n  uint local_44;\n  \n  pcVar13 = *(char **)(param_7 + 8);\n  cVar1 = *pcVar13;\n  pcVar11 = pcVar13;\n  if ((cVar1 == '=') || (cVar1 == '\\0')) {\n    sVar15 = 0;\n  }\n  else {\n    do {\n      pcVar11 = pcVar11 + 1;\n      if (*pcVar11 == '\\0') break;\n    } while (*pcVar11 != '=');\n    sVar15 = (long)pcVar11 - (long)pcVar13;\n  }\n  uVar14 = 0;\n  __s1 = *param_4;\n  ppcVar10 = param_4;\n  __s1_00 = __s1;\n  if (__s1 != (char *)0x0) {\n    while( true ) {\n      iVar5 = strncmp(__s1_00,pcVar13,sVar15);\n      if ((iVar5 == 0) && (sVar7 = strlen(__s1_00), sVar7 == sVar15)) goto LAB_004089a0;\n      ppcVar10 = ppcVar10 + 4;\n      __s1_00 = *ppcVar10;\n      iVar5 = (int)uVar14 + 1;\n      if (__s1_00 == (char *)0x0) break;\n      uVar14 = (ulong)iVar5;\n    }\n    lVar16 = 0;\n    ppcVar10 = (char **)0x0;\n    local_44 = 0xffffffff;\n    bVar3 = false;\n    bVar4 = false;\n    local_70 = (char *)0x0;\n    ppcVar12 = param_4;\n    do {\n      iVar6 = strncmp(__s1,pcVar13,sVar15);\n      if (iVar6 == 0) {\n        if (ppcVar10 == (char **)0x0) {\n          local_44 = (uint)lVar16;\n          ppcVar10 = ppcVar12;\n        }\n        else if (((((param_6 != 0) || (*(int *)(ppcVar10 + 1) != *(int *)(ppcVar12 + 1))) ||\n                  (ppcVar10[2] != ppcVar12[2])) ||\n                 (*(int *)(ppcVar10 + 3) != *(int *)(ppcVar12 + 3))) && (!bVar3)) {\n          if (param_8 == 0) {\n            bVar3 = true;\n            if (local_70 == (char *)0x0) goto LAB_004088e0;\n          }\n          else if (local_70 == (char *)0x0) {\n            local_70 = (char *)calloc((long)iVar5,1);\n            if (local_70 == (char *)0x0) {\n              bVar3 = true;\n              goto LAB_004088e0;\n            }\n            bVar4 = true;\n            local_70[(int)local_44] = '\\x01';\n          }\n          local_70[lVar16] = '\\x01';\n        }\n      }\nLAB_004088e0:\n      ppcVar12 = ppcVar12 + 4;\n      __s1 = *ppcVar12;\n      lVar16 = lVar16 + 1;\n    } while (__s1 != (char *)0x0);\n    if ((local_70 != (char *)0x0) || (bVar3)) {\n      if (param_8 != 0) {\n        if (bVar3) {\n          uVar2 = *param_2;\n          uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous\\n\",5);\n          __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n        else {\n          flockfile(stderr);\n          uVar2 = *(undefined8 *)(param_7 + 8);\n          uVar8 = *param_2;\n          uVar9 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous; possibilities:\",5);\n          __fprintf_chk(stderr,1,uVar9,uVar8,param_9,uVar2);\n          pcVar13 = local_70;\n          __stream = stderr;\n          do {\n            if (*pcVar13 != '\\0') {\n              __fprintf_chk(__stream,1,&DAT_0040d601,param_9,*param_4);\n              __stream = stderr;\n            }\n            pcVar13 = pcVar13 + 1;\n            param_4 = param_4 + 4;\n          } while (local_70 + uVar14 + 1 != pcVar13);\n          fputc(10,__stream);\n          funlockfile(stderr);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n      }\n      if (bVar4) {\n        free(local_70);\n      }\n      sVar15 = strlen(pcVar13);\n      *(char **)(param_7 + 8) = pcVar13 + sVar15;\n      *param_7 = *param_7 + 1;\n      param_7[2] = 0;\n      return 0x3f;\n    }\n    if (ppcVar10 != (char **)0x0) {\n      uVar14 = (ulong)local_44;\nLAB_004089a0:\n      iVar6 = *param_7;\n      *(undefined8 *)(param_7 + 8) = 0;\n      iVar5 = iVar6 + 1;\n      *param_7 = iVar5;\n      if (*pcVar11 == '\\0') {\n        if (*(int *)(ppcVar10 + 1) == 1) {\n          if (param_1 <= iVar5) {\n            if (param_8 != 0) {\n              pcVar13 = *ppcVar10;\n              uVar2 = *param_2;\n              uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' requires an argument\\n\",5);\n              __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n            }\n            param_7[2] = *(int *)(ppcVar10 + 3);\n            return (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          *param_7 = iVar6 + 2;\n          *(undefined8 *)(param_7 + 4) = param_2[iVar5];\n        }\n      }\n      else {\n        if (*(int *)(ppcVar10 + 1) == 0) {\n          if (param_8 != 0) {\n            pcVar13 = *ppcVar10;\n            uVar2 = *param_2;\n            uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' doesn\\'t allow an argument\\n\",5);\n            __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          }\n          param_7[2] = *(int *)(ppcVar10 + 3);\n          return 0x3f;\n        }\n        *(char **)(param_7 + 4) = pcVar11 + 1;\n      }\n      if (param_5 != (undefined4 *)0x0) {\n        *param_5 = (int)uVar14;\n      }\n      if ((int *)ppcVar10[2] == (int *)0x0) {\n        return *(int *)(ppcVar10 + 3);\n      }\n      *(int *)ppcVar10[2] = *(int *)(ppcVar10 + 3);\n      return 0;\n    }\n  }\n  if (((param_6 != 0) && (*(char *)(param_2[*param_7] + 1) != '-')) &&\n     (pcVar11 = strchr(param_3,(int)cVar1), pcVar11 != (char *)0x0)) {\n    return -1;\n  }\n  if (param_8 != 0) {\n    uVar2 = *param_2;\n    uVar8 = dcgettext(0,\"%s: unrecognized option \\'%s%s\\'\\n\",5);\n    __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n  }\n  *(undefined8 *)(param_7 + 8) = 0;\n  *param_7 = *param_7 + 1;\n  param_7[2] = 0;\n  return 0x3f;\n}\n\n",
            "funcName": "FUN_00408780"
        },
        {
            "funcStartAddr": "0x408da0",
            "funcEndAddr": "0x409307",
            "decompiledFuncCode": "\nuint FUN_00408da0(uint param_1,undefined8 *param_2,char *param_3,long param_4,undefined8 param_5,\n                 ulong param_6,uint *param_7,int param_8)\n\n{\n  undefined8 uVar1;\n  char cVar2;\n  uint uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  long lVar6;\n  uint uVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  uint uVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  undefined1 *puVar15;\n  \n  bVar14 = 0;\n  uVar3 = param_7[1];\n  if ((int)param_1 < 1) {\n    return 0xffffffff;\n  }\n  uVar11 = *param_7;\n  *(undefined8 *)(param_7 + 4) = 0;\n  if (uVar11 == 0) {\n    *param_7 = 1;\n    uVar11 = 1;\nLAB_00408dea:\n    param_7[0xc] = uVar11;\n    param_7[0xb] = uVar11;\n    *(undefined8 *)(param_7 + 8) = 0;\n    if (*param_3 == '-') {\n      param_7[10] = 2;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else if (*param_3 == '+') {\n      param_7[10] = 0;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else {\n      pbVar8 = (byte *)0x0;\n      if (param_8 == 0) {\n        pcVar4 = getenv(\"POSIXLY_CORRECT\");\n        param_6 = param_6 & 0xffffffff;\n        if (pcVar4 == (char *)0x0) {\n          param_7[10] = 1;\n          pbVar8 = *(byte **)(param_7 + 8);\n          goto LAB_00408eed;\n        }\n        pbVar8 = *(byte **)(param_7 + 8);\n      }\n      param_7[10] = 0;\n    }\nLAB_00408eed:\n    param_7[6] = 1;\n    cVar2 = *param_3;\nLAB_00408ef8:\n    if (cVar2 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 == (byte *)0x0) goto LAB_00408e68;\nLAB_00408f0c:\n    if (*pbVar8 == 0) goto LAB_00408e68;\n  }\n  else {\n    if (param_7[6] == 0) goto LAB_00408dea;\n    cVar2 = *param_3;\n    pbVar8 = *(byte **)(param_7 + 8);\n    if ((cVar2 - 0x2bU & 0xfd) != 0) goto LAB_00408ef8;\n    pcVar4 = param_3 + 1;\n    param_3 = param_3 + 1;\n    if (*pcVar4 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 != (byte *)0x0) goto LAB_00408f0c;\nLAB_00408e68:\n    uVar11 = *param_7;\n    if (param_7[0xc] != uVar11 && (int)uVar11 <= (int)param_7[0xc]) {\n      param_7[0xc] = uVar11;\n    }\n    if ((int)uVar11 < (int)param_7[0xb]) {\n      param_7[0xb] = uVar11;\n    }\n    if (param_7[10] == 1) {\n      uVar7 = param_7[0xc];\n      if (param_7[0xb] == uVar7) {\n        if (uVar11 != uVar7) {\n          param_7[0xb] = uVar11;\n          uVar7 = uVar11;\n        }\n      }\n      else if (uVar11 != uVar7) {\n        FUN_004086a0(param_2,param_7);\n        param_6 = param_6 & 0xffffffff;\n        uVar7 = *param_7;\n      }\n      uVar11 = uVar7;\n      uVar7 = uVar11;\n      if ((int)uVar11 < (int)param_1) {\n        lVar6 = (long)(int)uVar11;\n        do {\n          if ((*(char *)param_2[lVar6] == '-') && (((char *)param_2[lVar6])[1] != '\\0')) {\n            uVar11 = *param_7;\n            uVar7 = (uint)lVar6;\n            break;\n          }\n          uVar11 = (uint)lVar6 + 1;\n          lVar6 = lVar6 + 1;\n          *param_7 = uVar11;\n          uVar7 = uVar11;\n        } while ((int)lVar6 < (int)param_1);\n      }\n      param_7[0xc] = uVar7;\n    }\n    bVar12 = param_1 < uVar11;\n    bVar13 = param_1 == uVar11;\n    if (bVar13) {\n      param_1 = param_7[0xc];\n      uVar11 = param_7[0xb];\nLAB_00408fd6:\n      if (uVar11 != param_1) {\n        *param_7 = uVar11;\n      }\n      return 0xffffffff;\n    }\n    lVar6 = 3;\n    pbVar8 = (byte *)param_2[(int)uVar11];\n    pbVar9 = pbVar8;\n    pbVar10 = &DAT_0040d619;\n    do {\n      if (lVar6 == 0) break;\n      lVar6 = lVar6 + -1;\n      bVar12 = *pbVar9 < *pbVar10;\n      bVar13 = *pbVar9 == *pbVar10;\n      pbVar9 = pbVar9 + (ulong)bVar14 * -2 + 1;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n    if ((!bVar12 && !bVar13) == bVar12) {\n      uVar11 = uVar11 + 1;\n      *param_7 = uVar11;\n      if (param_7[0xb] == param_7[0xc]) {\n        param_7[0xb] = uVar11;\n      }\n      else {\n        bVar12 = uVar11 != param_7[0xc];\n        uVar11 = param_7[0xb];\n        if (bVar12) {\n          FUN_004086a0(param_2,param_7);\n          uVar11 = param_7[0xb];\n        }\n      }\n      param_7[0xc] = param_1;\n      *param_7 = param_1;\n      goto LAB_00408fd6;\n    }\n    if ((*pbVar8 != 0x2d) || (bVar14 = pbVar8[1], bVar14 == 0)) {\n      if (param_7[10] == 0) {\n        return 0xffffffff;\n      }\n      *(byte **)(param_7 + 4) = pbVar8;\n      *param_7 = uVar11 + 1;\n      return 1;\n    }\n    if (param_4 != 0) {\n      if (bVar14 == 0x2d) {\n        *(byte **)(param_7 + 8) = pbVar8 + 2;\n        puVar15 = &DAT_0040d619;\n        goto LAB_00409135;\n      }\n      if ((int)param_6 != 0) {\n        if (pbVar8[2] == 0) {\n          pcVar4 = strchr(param_3,(int)(char)bVar14);\n          param_6 = param_6 & 0xffffffff;\n          if (pcVar4 != (char *)0x0) goto LAB_004090e0;\n        }\n        *(byte **)(param_7 + 8) = pbVar8 + 1;\n        uVar11 = FUN_00408780(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,\n                              &DAT_0040d61a);\n        if (uVar11 != 0xffffffff) {\n          return uVar11;\n        }\n        pbVar8 = (byte *)param_2[(int)*param_7];\n      }\n    }\nLAB_004090e0:\n    pbVar8 = pbVar8 + 1;\n  }\n  pbVar9 = pbVar8 + 1;\n  *(byte **)(param_7 + 8) = pbVar9;\n  bVar14 = *pbVar8;\n  uVar11 = (uint)(char)bVar14;\n  pcVar4 = strchr(param_3,uVar11);\n  if (pbVar8[1] == 0) {\n    *param_7 = *param_7 + 1;\n  }\n  if (((byte)(bVar14 - 0x3a) < 2) || (pcVar4 == (char *)0x0)) {\n    if (uVar3 != 0) {\n      uVar1 = *param_2;\n      uVar5 = dcgettext(0,\"%s: invalid option -- \\'%c\\'\\n\",5);\n      __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n    }\n    param_7[2] = uVar11;\n    return 0x3f;\n  }\n  if (((*pcVar4 != 'W') || (param_4 == 0)) || (pcVar4[1] != ';')) {\n    if (pcVar4[1] == ':') {\n      if (pcVar4[2] == ':') {\n        if (pbVar8[1] == 0) {\n          *(undefined8 *)(param_7 + 4) = 0;\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = *param_7 + 1;\n        }\n      }\n      else {\n        uVar7 = *param_7;\n        if (pbVar8[1] == 0) {\n          if (param_1 == uVar7) {\n            if (uVar3 != 0) {\n              uVar1 = *param_2;\n              uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n              __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n            }\n            param_7[2] = uVar11;\n            uVar11 = (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          else {\n            uVar1 = param_2[(int)uVar7];\n            *param_7 = uVar7 + 1;\n            *(undefined8 *)(param_7 + 4) = uVar1;\n          }\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = uVar7 + 1;\n        }\n      }\n      *(undefined8 *)(param_7 + 8) = 0;\n      return uVar11;\n    }\n    return uVar11;\n  }\n  if (pbVar8[1] == 0) {\n    if (*param_7 == param_1) {\n      if (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n        __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n      }\n      param_7[2] = uVar11;\n      return (uint)(*param_3 != ':') * 5 + 0x3a;\n    }\n    pbVar9 = (byte *)param_2[(int)*param_7];\n  }\n  *(byte **)(param_7 + 8) = pbVar9;\n  param_6 = 0;\n  *(undefined8 *)(param_7 + 4) = 0;\n  puVar15 = &DAT_0040d638;\nLAB_00409135:\n  uVar3 = FUN_00408780(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,puVar15);\n  return uVar3;\n}\n\n",
            "funcName": "FUN_00408da0"
        },
        {
            "funcStartAddr": "0x409370",
            "funcEndAddr": "0x4093c6",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00409370(void)\n\n{\n  DAT_006104c0 = DAT_006102fc;\n  _DAT_006104c4 = DAT_006102f8;\n  FUN_00408da0();\n  DAT_006102fc = DAT_006104c0;\n  DAT_00610508 = DAT_006104d0;\n  _DAT_006102f4 = DAT_006104c8;\n  return;\n}\n\n",
            "funcName": "FUN_00409370"
        },
        {
            "funcStartAddr": "0x4093d0",
            "funcEndAddr": "0x4093e8",
            "decompiledFuncCode": "\nvoid FUN_004093d0(void)\n\n{\n  FUN_00409370();\n  return;\n}\n\n",
            "funcName": "FUN_004093d0"
        },
        {
            "funcStartAddr": "0x4093f0",
            "funcEndAddr": "0x409403",
            "decompiledFuncCode": "\nvoid FUN_004093f0(void)\n\n{\n  FUN_00409370();\n  return;\n}\n\n",
            "funcName": "FUN_004093f0"
        },
        {
            "funcStartAddr": "0x409410",
            "funcEndAddr": "0x409425",
            "decompiledFuncCode": "\nvoid FUN_00409410(void)\n\n{\n  FUN_00408da0();\n  return;\n}\n\n",
            "funcName": "FUN_00409410"
        },
        {
            "funcStartAddr": "0x409430",
            "funcEndAddr": "0x409446",
            "decompiledFuncCode": "\nvoid FUN_00409430(void)\n\n{\n  FUN_00409370();\n  return;\n}\n\n",
            "funcName": "FUN_00409430"
        },
        {
            "funcStartAddr": "0x409450",
            "funcEndAddr": "0x409468",
            "decompiledFuncCode": "\nvoid FUN_00409450(void)\n\n{\n  FUN_00408da0();\n  return;\n}\n\n",
            "funcName": "FUN_00409450"
        },
        {
            "funcStartAddr": "0x409470",
            "funcEndAddr": "0x4094df",
            "decompiledFuncCode": "\nsize_t FUN_00409470(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  wchar_t local_1c;\n  \n  if (param_2 == (byte *)0x0) {\n    param_3 = 1;\n    param_2 = (byte *)0x40d637;\n  }\n  else {\n    if (param_3 == 0) {\n      return 0xfffffffffffffffe;\n    }\n    if (param_1 != (wchar_t *)0x0) goto LAB_00409494;\n  }\n  param_1 = &local_1c;\nLAB_00409494:\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (cVar1 = FUN_00409630(0), cVar1 == '\\0')) {\n    sVar2 = 1;\n    *param_1 = (uint)*param_2;\n  }\n  return sVar2;\n}\n\n",
            "funcName": "FUN_00409470"
        },
        {
            "funcStartAddr": "0x4094f0",
            "funcEndAddr": "0x40954c",
            "decompiledFuncCode": "\nulong FUN_004094f0(uint *param_1)\n\n{\n  uint uVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  uVar1 = *param_1;\n  uVar3 = FUN_0040afb0(param_1);\n  if ((uVar1 & 0x20) == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_004094f0"
        },
        {
            "funcStartAddr": "0x409550",
            "funcEndAddr": "0x409560",
            "decompiledFuncCode": "\nvoid FUN_00409550(long param_1)\n\n{\n  *(undefined8 *)(param_1 + 0x10) = 0;\n  *(undefined4 *)(param_1 + 0x18) = 0x95f616;\n  return;\n}\n\n",
            "funcName": "FUN_00409550"
        },
        {
            "funcStartAddr": "0x409560",
            "funcEndAddr": "0x4095d4",
            "decompiledFuncCode": "\nundefined8 FUN_00409560(long *param_1,long *param_2)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  long lVar3;\n  long lVar4;\n  \n  if (*(int *)(param_1 + 3) != 0x95f616) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"state->magic == 9827862\",\"lib/cycle-check.c\",0x3c,\"cycle_check\");\n  }\n  uVar2 = param_1[2];\n  lVar3 = param_2[1];\n  if (uVar2 == 0) {\n    param_1[2] = 1;\n  }\n  else {\n    if ((*param_1 == lVar3) && (*param_2 == param_1[1])) {\n      return 1;\n    }\n    uVar1 = uVar2 + 1;\n    param_1[2] = uVar1;\n    if ((uVar2 & uVar1) != 0) {\n      return 0;\n    }\n    if (uVar1 == 0) {\n      return 1;\n    }\n  }\n  lVar4 = *param_2;\n  *param_1 = lVar3;\n  param_1[1] = lVar4;\n  return 0;\n}\n\n",
            "funcName": "FUN_00409560"
        },
        {
            "funcStartAddr": "0x4095e0",
            "funcEndAddr": "0x409626",
            "decompiledFuncCode": "\nvoid FUN_004095e0(char *param_1,uint param_2,ulong param_3)\n\n{\n  int iVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  if ((param_2 & 0x40) != 0) {\n    uVar2 = param_3 & 0xffffffff;\n  }\n  iVar1 = open(param_1,param_2,uVar2);\n  FUN_0040af60(iVar1);\n  return;\n}\n\n",
            "funcName": "FUN_004095e0"
        },
        {
            "funcStartAddr": "0x409630",
            "funcEndAddr": "0x409686",
            "decompiledFuncCode": "\nbool FUN_00409630(int param_1)\n\n{\n  bool bVar1;\n  byte *pbVar2;\n  long lVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  bool bVar8;\n  byte bVar9;\n  \n  bVar9 = 0;\n  pbVar2 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar1 = true;\n  bVar6 = false;\n  bVar8 = pbVar2 == (byte *)0x0;\n  if (!bVar8) {\n    lVar3 = 2;\n    pbVar4 = pbVar2;\n    pbVar5 = &DAT_0040d674;\n    do {\n      if (lVar3 == 0) break;\n      lVar3 = lVar3 + -1;\n      bVar6 = *pbVar4 < *pbVar5;\n      bVar8 = *pbVar4 == *pbVar5;\n      pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      pbVar5 = pbVar5 + (ulong)bVar9 * -2 + 1;\n    } while (bVar8);\n    bVar1 = false;\n    bVar7 = false;\n    bVar6 = (!bVar6 && !bVar8) == bVar6;\n    if (!bVar6) {\n      lVar3 = 6;\n      pbVar4 = (byte *)\"POSIX\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar2 < *pbVar4;\n        bVar6 = *pbVar2 == *pbVar4;\n        pbVar2 = pbVar2 + (ulong)bVar9 * -2 + 1;\n        pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      } while (bVar6);\n      return (!bVar7 && !bVar6) != bVar7;\n    }\n  }\n  return bVar1;\n}\n\n",
            "funcName": "FUN_00409630"
        },
        {
            "funcStartAddr": "0x409690",
            "funcEndAddr": "0x409721",
            "decompiledFuncCode": "\nulong FUN_00409690(ulong param_1)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long lVar5;\n  \n  uVar3 = 10;\n  if (9 < param_1) {\n    uVar3 = param_1;\n  }\n  uVar3 = uVar3 | 1;\n  do {\n    if (uVar3 == 0xffffffffffffffff) {\n      return 0xffffffffffffffff;\n    }\n    uVar1 = uVar3 % 3;\n    if (uVar3 < 10) {\nLAB_00409710:\n      if (uVar1 != 0) {\n        return uVar3;\n      }\n    }\n    else if (uVar1 != 0) {\n      lVar5 = 0x10;\n      uVar4 = 9;\n      uVar2 = 3;\n      do {\n        uVar2 = uVar2 + 2;\n        uVar4 = uVar4 + lVar5;\n        uVar1 = uVar3 % uVar2;\n        if (uVar3 <= uVar4) goto LAB_00409710;\n        lVar5 = lVar5 + 8;\n      } while (uVar1 != 0);\n    }\n    uVar3 = uVar3 + 2;\n  } while( true );\n}\n\n",
            "funcName": "FUN_00409690"
        },
        {
            "funcStartAddr": "0x409730",
            "funcEndAddr": "0x409740",
            "decompiledFuncCode": "\nulong FUN_00409730(ulong param_1,ulong param_2)\n\n{\n  return (param_1 >> 3 | param_1 << 0x3d) % param_2;\n}\n\n",
            "funcName": "FUN_00409730"
        },
        {
            "funcStartAddr": "0x409740",
            "funcEndAddr": "0x409747",
            "decompiledFuncCode": "\nbool FUN_00409740(long param_1,long param_2)\n\n{\n  return param_1 == param_2;\n}\n\n",
            "funcName": "FUN_00409740"
        },
        {
            "funcStartAddr": "0x409750",
            "funcEndAddr": "0x409771",
            "decompiledFuncCode": "\nlong FUN_00409750(long *param_1,undefined8 param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = (*(code *)param_1[6])(param_2,param_1[2]);\n  if (uVar1 <= (ulong)param_1[2] && param_1[2] != uVar1) {\n    return uVar1 * 0x10 + *param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00409750"
        },
        {
            "funcStartAddr": "0x409780",
            "funcEndAddr": "0x409885",
            "decompiledFuncCode": "\nlong FUN_00409780(long param_1,long param_2,long **param_3,char param_4)\n\n{\n  undefined8 *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  char cVar5;\n  long *plVar6;\n  long *plVar7;\n  long lVar8;\n  \n  plVar6 = (long *)FUN_00409750();\n  *param_3 = plVar6;\n  lVar8 = *plVar6;\n  if (lVar8 == 0) {\n    return 0;\n  }\n  if (lVar8 != param_2) {\n    cVar5 = (**(code **)(param_1 + 0x38))(param_2);\n    if (cVar5 == '\\0') {\n      plVar7 = (long *)plVar6[1];\n      if (plVar7 == (long *)0x0) {\n        return 0;\n      }\n      lVar8 = *plVar7;\n      do {\n        if (param_2 == lVar8) {\nLAB_0040980c:\n          if (param_4 == '\\0') {\n            return lVar8;\n          }\n          plVar6[1] = plVar7[1];\n          *plVar7 = 0;\n          plVar7[1] = *(long *)(param_1 + 0x48);\n          *(long **)(param_1 + 0x48) = plVar7;\n          return lVar8;\n        }\n        cVar5 = (**(code **)(param_1 + 0x38))(param_2);\n        if (cVar5 != '\\0') {\n          plVar7 = (long *)plVar6[1];\n          lVar8 = *plVar7;\n          goto LAB_0040980c;\n        }\n        plVar6 = (long *)plVar6[1];\n        plVar7 = (long *)plVar6[1];\n        if (plVar7 == (long *)0x0) {\n          return 0;\n        }\n        lVar8 = *plVar7;\n      } while( true );\n    }\n    lVar8 = *plVar6;\n  }\n  if (param_4 != '\\0') {\n    puVar1 = (undefined8 *)plVar6[1];\n    if (puVar1 != (undefined8 *)0x0) {\n      uVar2 = *(undefined4 *)((long)puVar1 + 4);\n      uVar3 = *(undefined4 *)(puVar1 + 1);\n      uVar4 = *(undefined4 *)((long)puVar1 + 0xc);\n      *(undefined4 *)plVar6 = *(undefined4 *)puVar1;\n      *(undefined4 *)((long)plVar6 + 4) = uVar2;\n      *(undefined4 *)(plVar6 + 1) = uVar3;\n      *(undefined4 *)((long)plVar6 + 0xc) = uVar4;\n      *puVar1 = 0;\n      puVar1[1] = *(undefined8 *)(param_1 + 0x48);\n      *(undefined8 **)(param_1 + 0x48) = puVar1;\n      return lVar8;\n    }\n    *plVar6 = 0;\n  }\n  return lVar8;\n}\n\n",
            "funcName": "FUN_00409780"
        },
        {
            "funcStartAddr": "0x4098a0",
            "funcEndAddr": "0x40991a",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_004098a0(float **param_1)\n\n{\n  float fVar1;\n  float *pfVar2;\n  float fVar3;\n  \n  pfVar2 = *param_1;\n  if (pfVar2 == (float *)&DAT_0040d6f0) {\n    return 1;\n  }\n  fVar1 = pfVar2[2];\n  if ((((_DAT_0040d704 < fVar1) && (fVar1 < DAT_0040d708)) && (_DAT_0040d70c < pfVar2[3])) &&\n     (_DAT_0040d710 <= *pfVar2)) {\n    fVar3 = *pfVar2 + _DAT_0040d704;\n    if (((fVar3 < pfVar2[1]) && (pfVar2[1] <= DAT_0040d714)) && (fVar3 < fVar1)) {\n      return 1;\n    }\n  }\n  *param_1 = (float *)&DAT_0040d6f0;\n  return 0;\n}\n\n",
            "funcName": "FUN_004098a0"
        },
        {
            "funcStartAddr": "0x409920",
            "funcEndAddr": "0x409a5a",
            "decompiledFuncCode": "\nundefined8 FUN_00409920(long param_1,long **param_2,char param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  long lVar6;\n  \n  plVar5 = *param_2;\n  if (param_2[1] <= plVar5) {\n    return 1;\n  }\n  do {\n    while (lVar6 = *plVar5, lVar6 == 0) {\nLAB_00409948:\n      plVar5 = plVar5 + 2;\n      if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n        return 1;\n      }\n    }\n    plVar3 = (long *)plVar5[1];\n    if ((long *)plVar5[1] != (long *)0x0) {\n      do {\n        while( true ) {\n          lVar6 = *plVar3;\n          plVar2 = (long *)FUN_00409750(param_1,lVar6);\n          plVar4 = (long *)plVar3[1];\n          if (*plVar2 != 0) break;\n          *plVar2 = lVar6;\n          *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n          *plVar3 = 0;\n          plVar3[1] = *(long *)(param_1 + 0x48);\n          *(long **)(param_1 + 0x48) = plVar3;\n          plVar3 = plVar4;\n          if (plVar4 == (long *)0x0) goto LAB_004099bf;\n        }\n        plVar3[1] = plVar2[1];\n        plVar2[1] = (long)plVar3;\n        plVar3 = plVar4;\n      } while (plVar4 != (long *)0x0);\nLAB_004099bf:\n      lVar6 = *plVar5;\n    }\n    plVar5[1] = 0;\n    if (param_3 != '\\0') goto LAB_00409948;\n    plVar3 = (long *)FUN_00409750(param_1,lVar6);\n    if (*plVar3 == 0) {\n      *plVar3 = lVar6;\n      *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n    }\n    else {\n      plVar4 = *(long **)(param_1 + 0x48);\n      if (plVar4 == (long *)0x0) {\n        plVar4 = (long *)malloc(0x10);\n        if (plVar4 == (long *)0x0) {\n          return 0;\n        }\n      }\n      else {\n        *(long *)(param_1 + 0x48) = plVar4[1];\n      }\n      lVar1 = plVar3[1];\n      *plVar4 = lVar6;\n      plVar4[1] = lVar1;\n      plVar3[1] = (long)plVar4;\n    }\n    *plVar5 = 0;\n    plVar5 = plVar5 + 2;\n    param_2[3] = (long *)((long)param_2[3] + -1);\n    if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n      return 1;\n    }\n  } while( true );\n}\n\n",
            "funcName": "FUN_00409920"
        },
        {
            "funcStartAddr": "0x409a70",
            "funcEndAddr": "0x409a75",
            "decompiledFuncCode": "\nundefined8 FUN_00409a70(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x10);\n}\n\n",
            "funcName": "FUN_00409a70"
        },
        {
            "funcStartAddr": "0x409a80",
            "funcEndAddr": "0x409a85",
            "decompiledFuncCode": "\nundefined8 FUN_00409a80(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x18);\n}\n\n",
            "funcName": "FUN_00409a80"
        },
        {
            "funcStartAddr": "0x409a90",
            "funcEndAddr": "0x409a95",
            "decompiledFuncCode": "\nundefined8 FUN_00409a90(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x20);\n}\n\n",
            "funcName": "FUN_00409a90"
        },
        {
            "funcStartAddr": "0x409aa0",
            "funcEndAddr": "0x409aef",
            "decompiledFuncCode": "\nvoid FUN_00409aa0(long **param_1)\n\n{\n  long *plVar1;\n  long lVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  plVar1 = param_1[1];\n  uVar3 = 0;\n  if (plVar1 <= plVar5) {\n    return;\n  }\n  do {\n    while (*plVar5 == 0) {\n      plVar5 = plVar5 + 2;\n      if (plVar1 <= plVar5) {\n        return;\n      }\n    }\n    uVar4 = 1;\n    for (lVar2 = plVar5[1]; lVar2 != 0; lVar2 = *(long *)(lVar2 + 8)) {\n      uVar4 = uVar4 + 1;\n    }\n    if (uVar3 < uVar4) {\n      uVar3 = uVar4;\n    }\n    plVar5 = plVar5 + 2;\n  } while (plVar5 < plVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00409aa0"
        },
        {
            "funcStartAddr": "0x409af0",
            "funcEndAddr": "0x409b52",
            "decompiledFuncCode": "\nbool FUN_00409af0(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  \n  plVar2 = *param_1;\n  plVar3 = (long *)0x0;\n  plVar4 = (long *)0x0;\n  do {\n    while( true ) {\n      if (param_1[1] <= plVar2) {\n        if (param_1[3] != plVar4) {\n          return false;\n        }\n        return param_1[4] == plVar3;\n      }\n      if (*plVar2 != 0) break;\nLAB_00409b08:\n      plVar2 = plVar2 + 2;\n    }\n    lVar1 = plVar2[1];\n    plVar4 = (long *)((long)plVar4 + 1);\n    plVar3 = (long *)((long)plVar3 + 1);\n    if (lVar1 == 0) goto LAB_00409b08;\n    do {\n      lVar1 = *(long *)(lVar1 + 8);\n      plVar3 = (long *)((long)plVar3 + 1);\n    } while (lVar1 != 0);\n    plVar2 = plVar2 + 2;\n  } while( true );\n}\n\n",
            "funcName": "FUN_00409af0"
        },
        {
            "funcStartAddr": "0x409b60",
            "funcEndAddr": "0x409c9c",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00409b60(long **param_1,undefined8 param_2)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long lVar3;\n  ulong uVar4;\n  ulong uVar5;\n  long *plVar6;\n  double dVar7;\n  double dVar8;\n  \n  uVar5 = 0;\n  plVar1 = param_1[2];\n  plVar2 = param_1[3];\n  for (plVar6 = *param_1; plVar6 < param_1[1]; plVar6 = plVar6 + 2) {\n    while (*plVar6 != 0) {\n      uVar4 = 1;\n      for (lVar3 = plVar6[1]; lVar3 != 0; lVar3 = *(long *)(lVar3 + 8)) {\n        uVar4 = uVar4 + 1;\n      }\n      if (uVar5 < uVar4) {\n        uVar5 = uVar4;\n      }\n      plVar6 = plVar6 + 2;\n      if (param_1[1] <= plVar6) goto LAB_00409bcd;\n    }\n  }\nLAB_00409bcd:\n  __fprintf_chk(param_2,1,\"# entries:         %lu\\n\",param_1[4]);\n  __fprintf_chk(param_2,1,\"# buckets:         %lu\\n\",plVar1);\n  if ((long)plVar2 < 0) {\n    dVar7 = (double)((ulong)plVar2 >> 1 | (ulong)((uint)plVar2 & 1));\n    dVar7 = dVar7 + dVar7;\n  }\n  else {\n    dVar7 = (double)(long)plVar2;\n  }\n  if ((long)plVar1 < 0) {\n    dVar8 = (double)((ulong)plVar1 >> 1 | (ulong)((uint)plVar1 & 1));\n    dVar8 = dVar8 + dVar8;\n  }\n  else {\n    dVar8 = (double)(long)plVar1;\n  }\n  __fprintf_chk((dVar7 * _DAT_0040d728) / dVar8,param_2,1,\"# buckets used:    %lu (%.2f%%)\\n\",plVar2\n               );\n  __fprintf_chk(param_2,1,\"max bucket length: %lu\\n\",uVar5);\n  return;\n}\n\n",
            "funcName": "FUN_00409b60"
        },
        {
            "funcStartAddr": "0x409cb0",
            "funcEndAddr": "0x409cfb",
            "decompiledFuncCode": "\nlong FUN_00409cb0(long param_1,long param_2)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  \n  plVar2 = (long *)FUN_00409750();\n  lVar3 = *plVar2;\n  if (lVar3 == 0) {\n    return 0;\n  }\n  while( true ) {\n    if (lVar3 == param_2) {\n      return param_2;\n    }\n    cVar1 = (**(code **)(param_1 + 0x38))(param_2);\n    if (cVar1 != '\\0') break;\n    plVar2 = (long *)plVar2[1];\n    if (plVar2 == (long *)0x0) {\n      return 0;\n    }\n    lVar3 = *plVar2;\n  }\n  return *plVar2;\n}\n\n",
            "funcName": "FUN_00409cb0"
        },
        {
            "funcStartAddr": "0x409d10",
            "funcEndAddr": "0x409d4a",
            "decompiledFuncCode": "\nlong FUN_00409d10(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  \n  if (param_1[4] == (long *)0x0) {\n    return 0;\n  }\n  plVar2 = *param_1;\n  if (param_1[1] <= plVar2) {\n    lVar1 = FUN_00401e32();\n    return lVar1;\n  }\n  do {\n    if (*plVar2 != 0) {\n      return *plVar2;\n    }\n    plVar2 = plVar2 + 2;\n  } while (plVar2 < param_1[1]);\n  lVar1 = FUN_00401e32();\n  return lVar1;\n}\n\n",
            "funcName": "FUN_00409d10"
        },
        {
            "funcStartAddr": "0x409d60",
            "funcEndAddr": "0x409db9",
            "decompiledFuncCode": "\nlong FUN_00409d60(long param_1,long param_2)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  \n  plVar2 = (long *)FUN_00409750();\n  plVar3 = plVar2;\n  do {\n    lVar1 = *plVar3;\n    plVar3 = (long *)plVar3[1];\n    if (lVar1 == param_2) {\n      if (plVar3 != (long *)0x0) {\n        return *plVar3;\n      }\n      break;\n    }\n  } while (plVar3 != (long *)0x0);\n  do {\n    plVar2 = plVar2 + 2;\n    if (*(long **)(param_1 + 8) <= plVar2) {\n      return 0;\n    }\n  } while (*plVar2 == 0);\n  return *plVar2;\n}\n\n",
            "funcName": "FUN_00409d60"
        },
        {
            "funcStartAddr": "0x409dd0",
            "funcEndAddr": "0x409e30",
            "decompiledFuncCode": "\nulong FUN_00409dd0(long **param_1,long param_2,ulong param_3)\n\n{\n  undefined8 *puVar1;\n  ulong uVar2;\n  long *plVar3;\n  \n  plVar3 = *param_1;\n  if (param_1[1] < plVar3 || param_1[1] == plVar3) {\n    return 0;\n  }\n  uVar2 = 0;\n  do {\n    if (*plVar3 != 0) {\n      if (param_3 <= uVar2) {\n        return uVar2;\n      }\n      *(long *)(param_2 + uVar2 * 8) = *plVar3;\n      uVar2 = uVar2 + 1;\n      for (puVar1 = (undefined8 *)plVar3[1]; puVar1 != (undefined8 *)0x0;\n          puVar1 = (undefined8 *)puVar1[1]) {\n        if (param_3 == uVar2) {\n          return param_3;\n        }\n        uVar2 = uVar2 + 1;\n        *(undefined8 *)(param_2 + -8 + uVar2 * 8) = *puVar1;\n      }\n    }\n    plVar3 = plVar3 + 2;\n  } while (plVar3 <= param_1[1] && param_1[1] != plVar3);\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00409dd0"
        },
        {
            "funcStartAddr": "0x409e40",
            "funcEndAddr": "0x409eab",
            "decompiledFuncCode": "\nlong FUN_00409e40(long **param_1,code *param_2,undefined8 param_3)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  long lVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (param_1[1] < plVar5 || param_1[1] == plVar5) {\n    lVar3 = 0;\n  }\n  else {\n    lVar3 = 0;\n    do {\n      lVar4 = *plVar5;\n      plVar2 = plVar5;\n      if (lVar4 != 0) {\n        while( true ) {\n          cVar1 = (*param_2)(lVar4,param_3);\n          if (cVar1 == '\\0') {\n            return lVar3;\n          }\n          plVar2 = (long *)plVar2[1];\n          lVar3 = lVar3 + 1;\n          if (plVar2 == (long *)0x0) break;\n          lVar4 = *plVar2;\n        }\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\n  return lVar3;\n}\n\n",
            "funcName": "FUN_00409e40"
        },
        {
            "funcStartAddr": "0x409ec0",
            "funcEndAddr": "0x409ef1",
            "decompiledFuncCode": "\nulong FUN_00409ec0(byte *param_1,ulong param_2)\n\n{\n  byte bVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  bVar1 = *param_1;\n  while (bVar1 != 0) {\n    param_1 = param_1 + 1;\n    uVar2 = (uVar2 * 0x1f + (ulong)bVar1) % param_2;\n    bVar1 = *param_1;\n  }\n  return uVar2;\n}\n\n",
            "funcName": "FUN_00409ec0"
        },
        {
            "funcStartAddr": "0x409f00",
            "funcEndAddr": "0x409f20",
            "decompiledFuncCode": "\nvoid FUN_00409f00(undefined8 *param_1)\n\n{\n  *(undefined *)(param_1 + 2) = 0;\n  *param_1 = 0x3f80000000000000;\n  param_1[1] = 0x3fb4fdf43f4ccccd;\n  return;\n}\n\n",
            "funcName": "FUN_00409f00"
        },
        {
            "funcStartAddr": "0x409f20",
            "funcEndAddr": "0x40a0a0",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid ** FUN_00409f20(ulong param_1,void *param_2,code *param_3,code *param_4,void *param_5)\n\n{\n  char cVar1;\n  void **__ptr;\n  void *__nmemb;\n  void *pvVar2;\n  float fVar3;\n  float fVar4;\n  \n  if (param_3 == (code *)0x0) {\n    param_3 = FUN_00409730;\n  }\n  if (param_4 == (code *)0x0) {\n    param_4 = FUN_00409740;\n  }\n  __ptr = (void **)malloc(0x50);\n  if (__ptr == (void **)0x0) {\n    return (void **)0x0;\n  }\n  if (param_2 == (void *)0x0) {\n    __ptr[5] = &DAT_0040d6f0;\n    cVar1 = FUN_004098a0(__ptr + 5);\n    if (cVar1 == '\\0') goto LAB_0040a000;\n    fVar4 = DAT_0040d718;\n    if ((long)param_1 < 0) goto LAB_0040a083;\nLAB_0040a03e:\n    fVar3 = (float)param_1;\nLAB_0040a047:\n    fVar3 = fVar3 / fVar4;\n    if (_DAT_0040d71c <= fVar3) goto LAB_0040a000;\n    if (fVar3 < _DAT_0040d720) {\n      param_1 = (ulong)fVar3;\n    }\n    else {\n      param_1 = (long)(fVar3 - _DAT_0040d720) ^ 0x8000000000000000;\n    }\n  }\n  else {\n    __ptr[5] = param_2;\n    cVar1 = FUN_004098a0(__ptr + 5);\n    if (cVar1 == '\\0') goto LAB_0040a000;\n    if (*(char *)((long)param_2 + 0x10) == '\\0') {\n      fVar4 = *(float *)((long)param_2 + 8);\n      if (-1 < (long)param_1) goto LAB_0040a03e;\nLAB_0040a083:\n      fVar3 = (float)(param_1 >> 1 | (ulong)((uint)param_1 & 1));\n      fVar3 = fVar3 + fVar3;\n      goto LAB_0040a047;\n    }\n  }\n  __nmemb = (void *)FUN_00409690(param_1);\n  if (((((ulong)__nmemb >> 0x3c & 1) == 0) && ((ulong)__nmemb >> 0x3d == 0)) &&\n     (__ptr[2] = __nmemb, __nmemb != (void *)0x0)) {\n    pvVar2 = calloc((size_t)__nmemb,0x10);\n    *__ptr = pvVar2;\n    if (pvVar2 != (void *)0x0) {\n      __ptr[3] = (void *)0x0;\n      __ptr[4] = (void *)0x0;\n      __ptr[1] = (void *)((long)__nmemb * 0x10 + (long)pvVar2);\n      __ptr[6] = param_3;\n      __ptr[7] = param_4;\n      __ptr[8] = param_5;\n      __ptr[9] = (void *)0x0;\n      return __ptr;\n    }\n  }\nLAB_0040a000:\n  free(__ptr);\n  return (void **)0x0;\n}\n\n",
            "funcName": "FUN_00409f20"
        },
        {
            "funcStartAddr": "0x40a0b0",
            "funcEndAddr": "0x40a155",
            "decompiledFuncCode": "\nvoid FUN_0040a0b0(long **param_1)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (*param_1 < param_1[1]) {\n    do {\n      while (*plVar5 != 0) {\n        plVar4 = param_1[8];\n        plVar3 = (long *)plVar5[1];\n        while (plVar3 != (long *)0x0) {\n          if (plVar4 != (long *)0x0) {\n            (*(code *)plVar4)(*plVar3);\n            plVar4 = param_1[8];\n          }\n          plVar1 = (long *)plVar3[1];\n          plVar2 = param_1[9];\n          *plVar3 = 0;\n          plVar3[1] = (long)plVar2;\n          param_1[9] = plVar3;\n          plVar3 = plVar1;\n        }\n        if (plVar4 != (long *)0x0) {\n          (*(code *)plVar4)(*plVar5);\n        }\n        *plVar5 = 0;\n        plVar4 = plVar5 + 2;\n        plVar5[1] = 0;\n        plVar5 = plVar4;\n        if (param_1[1] < plVar4 || param_1[1] == plVar4) goto LAB_0040a143;\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\nLAB_0040a143:\n  param_1[3] = (long *)0x0;\n  param_1[4] = (long *)0x0;\n  return;\n}\n\n",
            "funcName": "FUN_0040a0b0"
        },
        {
            "funcStartAddr": "0x40a160",
            "funcEndAddr": "0x40a230",
            "decompiledFuncCode": "\nvoid FUN_0040a160(long **param_1)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long lVar5;\n  \n  plVar4 = *param_1;\n  plVar2 = param_1[1];\n  if ((param_1[8] != (long *)0x0) && (param_1[4] != (long *)0x0)) {\n    if (plVar2 <= plVar4) goto LAB_0040a1fc;\n    do {\n      while (lVar5 = *plVar4, plVar3 = plVar4, lVar5 == 0) {\n        plVar4 = plVar4 + 2;\n        if (plVar2 <= plVar4) goto LAB_0040a1bf;\n      }\n      while( true ) {\n        (*(code *)param_1[8])(lVar5);\n        plVar3 = (long *)plVar3[1];\n        if (plVar3 == (long *)0x0) break;\n        lVar5 = *plVar3;\n      }\n      plVar2 = param_1[1];\n      plVar4 = plVar4 + 2;\n    } while (plVar4 < plVar2);\nLAB_0040a1bf:\n    plVar4 = *param_1;\n  }\n  if (plVar4 < plVar2) {\n    do {\n      __ptr = (void *)plVar4[1];\n      while (__ptr != (void *)0x0) {\n        pvVar1 = *(void **)((long)__ptr + 8);\n        free(__ptr);\n        __ptr = pvVar1;\n      }\n      plVar4 = plVar4 + 2;\n    } while (plVar4 <= param_1[1] && param_1[1] != plVar4);\n  }\nLAB_0040a1fc:\n  plVar4 = param_1[9];\n  while (plVar4 != (long *)0x0) {\n    plVar2 = (long *)plVar4[1];\n    free(plVar4);\n    plVar4 = plVar2;\n  }\n  free(*param_1);\n  free(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_0040a160"
        },
        {
            "funcStartAddr": "0x40a240",
            "funcEndAddr": "0x40a42b",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined4 FUN_0040a240(void **param_1,ulong param_2)\n\n{\n  char cVar1;\n  undefined4 uVar2;\n  float fVar3;\n  void *local_68;\n  void *local_60;\n  void *local_58;\n  void *local_50;\n  undefined8 local_48;\n  void *local_40;\n  void *local_38;\n  void *local_30;\n  void *local_28;\n  void *local_20;\n  \n  local_40 = param_1[5];\n  if (*(char *)((long)local_40 + 0x10) == '\\0') {\n    if ((long)param_2 < 0) {\n      fVar3 = (float)(param_2 >> 1 | (ulong)((uint)param_2 & 1));\n      fVar3 = fVar3 + fVar3;\n    }\n    else {\n      fVar3 = (float)param_2;\n    }\n    fVar3 = fVar3 / *(float *)((long)local_40 + 8);\n    if (_DAT_0040d71c <= fVar3) {\n      return 0;\n    }\n    if (fVar3 < _DAT_0040d720) {\n      param_2 = (ulong)fVar3;\n    }\n    else {\n      param_2 = (long)(fVar3 - _DAT_0040d720) ^ 0x8000000000000000;\n    }\n  }\n  local_58 = (void *)FUN_00409690(param_2);\n  if ((local_58 != (void *)0x0) && (-1 < (long)local_58 * 8 && (ulong)local_58 >> 0x3d == 0)) {\n    if (param_1[2] == local_58) {\n      return 1;\n    }\n    local_68 = calloc((size_t)local_58,0x10);\n    if (local_68 != (void *)0x0) {\n      local_60 = (void *)((long)local_58 * 0x10 + (long)local_68);\n      local_38 = param_1[6];\n      local_50 = (void *)0x0;\n      local_30 = param_1[7];\n      local_48 = 0;\n      local_28 = param_1[8];\n      local_20 = param_1[9];\n      uVar2 = FUN_00409920(&local_68,param_1,0);\n      if ((char)uVar2 != '\\0') {\n        free(*param_1);\n        *param_1 = local_68;\n        param_1[1] = local_60;\n        param_1[2] = local_58;\n        param_1[3] = local_50;\n        param_1[9] = local_20;\n        return uVar2;\n      }\n      param_1[9] = local_20;\n      cVar1 = FUN_00409920(param_1,&local_68,1);\n      if ((cVar1 != '\\0') && (cVar1 = FUN_00409920(param_1,&local_68,0), cVar1 != '\\0')) {\n        free(local_68);\n        return uVar2;\n      }\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040a240"
        },
        {
            "funcStartAddr": "0x40a440",
            "funcEndAddr": "0x40a691",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_0040a440(long param_1,long param_2,long *param_3)\n\n{\n  char cVar1;\n  long lVar2;\n  ulong uVar3;\n  long *plVar4;\n  undefined8 uVar5;\n  ulong uVar6;\n  float fVar7;\n  float fVar8;\n  long *local_20;\n  \n  if (param_2 == 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  lVar2 = FUN_00409780(param_1,param_2,&local_20,0);\n  if (lVar2 != 0) {\n    if (param_3 != (long *)0x0) {\n      *param_3 = lVar2;\n    }\n    return 0;\n  }\n  uVar6 = *(ulong *)(param_1 + 0x18);\n  if ((long)uVar6 < 0) {\n    uVar3 = *(ulong *)(param_1 + 0x10);\n    fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n    lVar2 = *(long *)(param_1 + 0x28);\n    fVar7 = fVar7 + fVar7;\n    if ((long)uVar3 < 0) goto LAB_0040a53a;\nLAB_0040a4ab:\n    if (fVar7 <= (float)uVar3 * *(float *)(lVar2 + 8)) goto LAB_0040a4c2;\n  }\n  else {\n    lVar2 = *(long *)(param_1 + 0x28);\n    fVar7 = (float)uVar6;\n    uVar3 = *(ulong *)(param_1 + 0x10);\n    if (-1 < (long)uVar3) goto LAB_0040a4ab;\nLAB_0040a53a:\n    fVar8 = (float)(uVar3 >> 1 | (ulong)((uint)uVar3 & 1));\n    if (fVar7 <= (fVar8 + fVar8) * *(float *)(lVar2 + 8)) goto LAB_0040a4c2;\n  }\n  FUN_004098a0(param_1 + 0x28);\n  lVar2 = *(long *)(param_1 + 0x28);\n  uVar6 = *(ulong *)(param_1 + 0x10);\n  if ((long)uVar6 < 0) {\n    fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n    fVar7 = fVar7 + fVar7;\n  }\n  else {\n    fVar7 = (float)uVar6;\n  }\n  uVar6 = *(ulong *)(param_1 + 0x18);\n  if ((long)uVar6 < 0) {\n    fVar8 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n    fVar8 = fVar8 + fVar8;\n  }\n  else {\n    fVar8 = (float)uVar6;\n  }\n  if (*(float *)(lVar2 + 8) * fVar7 < fVar8) {\n    fVar7 = fVar7 * *(float *)(lVar2 + 0xc);\n    if (*(char *)(lVar2 + 0x10) == '\\0') {\n      fVar7 = fVar7 * *(float *)(lVar2 + 8);\n    }\n    if (_DAT_0040d71c <= fVar7) {\n      return 0xffffffff;\n    }\n    if (_DAT_0040d720 <= fVar7) {\n      uVar6 = (long)(fVar7 - _DAT_0040d720) ^ 0x8000000000000000;\n    }\n    else {\n      uVar6 = (ulong)fVar7;\n    }\n    cVar1 = FUN_0040a240(param_1,uVar6);\n    if (cVar1 == '\\0') {\n      return 0xffffffff;\n    }\n    lVar2 = FUN_00409780(param_1,param_2,&local_20,0);\n    if (lVar2 != 0) {\n      uVar5 = FUN_00401e3c();\n      return uVar5;\n    }\n  }\nLAB_0040a4c2:\n  if (*local_20 == 0) {\n    *local_20 = param_2;\n    *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n    *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n    return 1;\n  }\n  plVar4 = *(long **)(param_1 + 0x48);\n  if (plVar4 == (long *)0x0) {\n    plVar4 = (long *)malloc(0x10);\n    if (plVar4 == (long *)0x0) {\n      return 0xffffffff;\n    }\n  }\n  else {\n    *(long *)(param_1 + 0x48) = plVar4[1];\n  }\n  lVar2 = local_20[1];\n  *plVar4 = param_2;\n  plVar4[1] = lVar2;\n  local_20[1] = (long)plVar4;\n  *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n  return 1;\n}\n\n",
            "funcName": "FUN_0040a440"
        },
        {
            "funcStartAddr": "0x40a6c0",
            "funcEndAddr": "0x40a6f4",
            "decompiledFuncCode": "\nundefined8 FUN_0040a6c0(undefined8 param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  undefined8 local_10;\n  \n  iVar1 = FUN_0040a440(param_1,param_2,&local_10);\n  if (iVar1 != -1) {\n    if (iVar1 == 0) {\n      param_2 = local_10;\n    }\n    return param_2;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_0040a6c0"
        },
        {
            "funcStartAddr": "0x40a700",
            "funcEndAddr": "0x40a8bf",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nlong FUN_0040a700(long param_1,undefined8 param_2)\n\n{\n  float *pfVar1;\n  ulong uVar2;\n  void *pvVar3;\n  void *__ptr;\n  char cVar4;\n  long lVar5;\n  ulong uVar6;\n  float fVar7;\n  float fVar8;\n  long *local_20;\n  \n  lVar5 = FUN_00409780(param_1,param_2,&local_20,1);\n  if (lVar5 == 0) {\n    return 0;\n  }\n  *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + -1;\n  if (*local_20 == 0) {\n    uVar6 = *(long *)(param_1 + 0x18) - 1;\n    *(ulong *)(param_1 + 0x18) = uVar6;\n    if ((long)uVar6 < 0) {\n      uVar2 = *(ulong *)(param_1 + 0x10);\n      fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n      pfVar1 = *(float **)(param_1 + 0x28);\n      fVar7 = fVar7 + fVar7;\n    }\n    else {\n      pfVar1 = *(float **)(param_1 + 0x28);\n      fVar7 = (float)uVar6;\n      uVar2 = *(ulong *)(param_1 + 0x10);\n    }\n    if ((long)uVar2 < 0) {\n      fVar8 = (float)(uVar2 >> 1 | (ulong)((uint)uVar2 & 1));\n      fVar8 = fVar8 + fVar8;\n    }\n    else {\n      fVar8 = (float)uVar2;\n    }\n    if (fVar7 < fVar8 * *pfVar1) {\n      FUN_004098a0(param_1 + 0x28);\n      uVar6 = *(ulong *)(param_1 + 0x10);\n      pfVar1 = *(float **)(param_1 + 0x28);\n      if ((long)uVar6 < 0) {\n        fVar7 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n        fVar7 = fVar7 + fVar7;\n      }\n      else {\n        fVar7 = (float)uVar6;\n      }\n      uVar6 = *(ulong *)(param_1 + 0x18);\n      if ((long)uVar6 < 0) {\n        fVar8 = (float)(uVar6 >> 1 | (ulong)((uint)uVar6 & 1));\n        fVar8 = fVar8 + fVar8;\n      }\n      else {\n        fVar8 = (float)uVar6;\n      }\n      if (fVar8 < *pfVar1 * fVar7) {\n        fVar7 = fVar7 * pfVar1[1];\n        if (*(char *)(pfVar1 + 4) == '\\0') {\n          fVar7 = fVar7 * pfVar1[2];\n        }\n        if (_DAT_0040d720 <= fVar7) {\n          uVar6 = (long)(fVar7 - _DAT_0040d720) ^ 0x8000000000000000;\n        }\n        else {\n          uVar6 = (ulong)fVar7;\n        }\n        cVar4 = FUN_0040a240(param_1,uVar6);\n        if (cVar4 == '\\0') {\n          __ptr = *(void **)(param_1 + 0x48);\n          while (__ptr != (void *)0x0) {\n            pvVar3 = *(void **)((long)__ptr + 8);\n            free(__ptr);\n            __ptr = pvVar3;\n          }\n          *(undefined8 *)(param_1 + 0x48) = 0;\n        }\n      }\n    }\n    return lVar5;\n  }\n  return lVar5;\n}\n\n",
            "funcName": "FUN_0040a700"
        },
        {
            "funcStartAddr": "0x40a8e0",
            "funcEndAddr": "0x40a8fb",
            "decompiledFuncCode": "\nvoid FUN_0040a8e0(undefined4 *param_1,undefined4 param_2)\n\n{\n  *(undefined8 *)(param_1 + 5) = 0;\n  *(undefined *)(param_1 + 7) = 1;\n  *param_1 = param_2;\n  param_1[1] = param_2;\n  param_1[2] = param_2;\n  param_1[3] = param_2;\n  param_1[4] = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_0040a8e0"
        },
        {
            "funcStartAddr": "0x40a900",
            "funcEndAddr": "0x40a905",
            "decompiledFuncCode": "\nundefined FUN_0040a900(long param_1)\n\n{\n  return *(undefined *)(param_1 + 0x1c);\n}\n\n",
            "funcName": "FUN_0040a900"
        },
        {
            "funcStartAddr": "0x40a910",
            "funcEndAddr": "0x40a945",
            "decompiledFuncCode": "\nundefined4 FUN_0040a910(long param_1,undefined4 param_2)\n\n{\n  undefined4 *puVar1;\n  undefined4 uVar2;\n  uint uVar3;\n  uint uVar4;\n  \n  uVar4 = (uint)(*(byte *)(param_1 + 0x1c) ^ 1);\n  uVar3 = *(int *)(param_1 + 0x14) + uVar4 & 3;\n  puVar1 = (undefined4 *)(param_1 + (ulong)uVar3 * 4);\n  uVar2 = *puVar1;\n  *puVar1 = param_2;\n  *(uint *)(param_1 + 0x14) = uVar3;\n  if (*(uint *)(param_1 + 0x18) == uVar3) {\n    *(uint *)(param_1 + 0x18) = uVar4 + *(uint *)(param_1 + 0x18) & 3;\n  }\n  *(undefined *)(param_1 + 0x1c) = 0;\n  return uVar2;\n}\n\n",
            "funcName": "FUN_0040a910"
        },
        {
            "funcStartAddr": "0x40a950",
            "funcEndAddr": "0x40a98b",
            "decompiledFuncCode": "\nundefined4 FUN_0040a950(long param_1)\n\n{\n  undefined4 *puVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  \n  if (*(char *)(param_1 + 0x1c) != '\\0') {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  uVar2 = *(uint *)(param_1 + 0x14);\n  puVar1 = (undefined4 *)(param_1 + (ulong)uVar2 * 4);\n  uVar3 = *puVar1;\n  *puVar1 = *(undefined4 *)(param_1 + 0x10);\n  if (uVar2 != *(uint *)(param_1 + 0x18)) {\n    *(uint *)(param_1 + 0x14) = uVar2 + 3 & 3;\n    return uVar3;\n  }\n  *(undefined *)(param_1 + 0x1c) = 1;\n  return uVar3;\n}\n\n",
            "funcName": "FUN_0040a950"
        },
        {
            "funcStartAddr": "0x40a9a0",
            "funcEndAddr": "0x40aef4",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nchar * FUN_0040a9a0(void)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  char *__s1;\n  size_t sVar5;\n  size_t sVar6;\n  char *pcVar7;\n  size_t __n;\n  char *__file;\n  FILE *__stream;\n  byte *pbVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  long lVar11;\n  ulong uVar12;\n  undefined8 *puVar13;\n  char *__ptr;\n  bool bVar14;\n  long local_d0;\n  undefined8 local_c0;\n  undefined8 local_b8;\n  undefined auStack_80 [8];\n  undefined8 local_78;\n  \n  __s1 = nl_langinfo(0xe);\n  if (__s1 == (char *)0x0) {\n    __s1 = \"\";\n  }\n  if (DAT_006104f8 != (char *)0x0) goto LAB_0040a9da;\n  pcVar7 = getenv(\"CHARSETALIASDIR\");\n  if ((pcVar7 == (char *)0x0) || (*pcVar7 == '\\0')) {\n    sVar6 = 0x73;\n    sVar5 = 0x65;\n    __n = 100;\n    pcVar7 = \n    \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\"\n    ;\nLAB_0040aac5:\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      __file[__n] = '/';\n      goto LAB_0040aae6;\n    }\n  }\n  else {\n    __n = strlen(pcVar7);\n    if (__n == 0) {\n      sVar6 = 0xe;\n    }\n    else {\n      if (pcVar7[__n - 1] != '/') {\n        sVar6 = __n + 0xf;\n        sVar5 = __n + 1;\n        goto LAB_0040aac5;\n      }\n      sVar6 = __n + 0xe;\n    }\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      sVar5 = __n;\nLAB_0040aae6:\n      puVar13 = (undefined8 *)(__file + sVar5);\n      *puVar13 = 0x2e74657372616863;\n      *(undefined2 *)((long)puVar13 + 0xc) = 0x73;\n      *(undefined4 *)(puVar13 + 1) = 0x61696c61;\n      iVar2 = open(__file,0);\n      if (-1 < iVar2) {\n        __stream = fdopen(iVar2,\"r\");\n        local_d0 = 0;\n        if (__stream != (FILE *)0x0) {\n          pcVar7 = (char *)0x0;\nLAB_0040ab80:\n          pbVar8 = (byte *)__stream->_IO_read_ptr;\n          if (__stream->_IO_read_end <= pbVar8) goto LAB_0040ad0c;\n          do {\n            __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n            uVar4 = (uint)*pbVar8;\n            __ptr = pcVar7;\n            while( true ) {\n              pcVar7 = __ptr;\n              if ((uVar4 - 9 < 2) || (uVar4 == 0x20)) goto LAB_0040ab80;\n              if (uVar4 == 0x23) goto LAB_0040ad71;\n              ungetc(uVar4,__stream);\n              iVar2 = fscanf(__stream,\"%50s %50s\",&local_b8,&local_78);\n              puVar13 = &local_b8;\n              if (iVar2 < 2) goto LAB_0040ad1f;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              lVar11 = (long)puVar13 +\n                       ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_b8);\n              puVar13 = &local_78;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              local_c0 = (long)puVar13 +\n                         ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_78);\n              lVar9 = lVar11 + local_c0;\n              if (local_d0 == 0) {\n                pcVar7 = (char *)malloc(lVar9 + 3);\n              }\n              else {\n                lVar9 = lVar9 + local_d0;\n                pcVar7 = (char *)realloc(__ptr,lVar9 + 3);\n              }\n              local_d0 = lVar9 + 2;\n              if (pcVar7 == (char *)0x0) {\n                pcVar7 = \"\";\n                free(__ptr);\n                FUN_0040afb0(__stream);\n                goto LAB_0040ab24;\n              }\n              uVar12 = lVar11 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (-2 - lVar11) + (local_d0 - local_c0));\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_b8;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 2));\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_b8;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 4));\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_b8._4_4_,(undefined4)local_b8);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 8));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_b8 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              uVar12 = local_c0 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (local_d0 - local_c0) + -1);\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_78;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 6);\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_78;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 4);\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_78._4_4_,(undefined4)local_78);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)auStack_80 + (uVar12 & 0xffffffff));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_78 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              pbVar8 = (byte *)__stream->_IO_read_ptr;\n              if (pbVar8 < __stream->_IO_read_end) break;\nLAB_0040ad0c:\n              uVar4 = __uflow(__stream);\n              __ptr = pcVar7;\n              if (uVar4 == 0xffffffff) goto LAB_0040ad1f;\n            }\n          } while( true );\n        }\n        close(iVar2);\n      }\n      goto LAB_0040ab1e;\n    }\n  }\n  DAT_006104f8 = \"\";\nLAB_0040a9da:\n  cVar1 = *DAT_006104f8;\n  pcVar7 = DAT_006104f8;\n  do {\n    if (cVar1 == '\\0') {\nLAB_0040aa34:\n      if (*__s1 == '\\0') {\n        __s1 = \"ASCII\";\n      }\n      return __s1;\n    }\n    iVar2 = strcmp(__s1,pcVar7);\n    if ((iVar2 == 0) || ((cVar1 == '*' && (pcVar7[1] == '\\0')))) {\n      sVar6 = strlen(pcVar7);\n      __s1 = pcVar7 + sVar6 + 1;\n      goto LAB_0040aa34;\n    }\n    sVar6 = strlen(pcVar7);\n    sVar5 = strlen(pcVar7 + sVar6 + 1);\n    pcVar7 = pcVar7 + sVar6 + 1 + sVar5 + 1;\n    cVar1 = *pcVar7;\n  } while( true );\nLAB_0040ad71:\n  do {\n    pbVar8 = (byte *)__stream->_IO_read_ptr;\n    if (pbVar8 < __stream->_IO_read_end) {\n      __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n      uVar4 = (uint)*pbVar8;\n      bVar14 = true;\n    }\n    else {\n      uVar4 = __uflow(__stream);\n      bVar14 = uVar4 != 0xffffffff;\n    }\n  } while ((uVar4 != 10) && (bVar14));\n  if (uVar4 == 0xffffffff) goto LAB_0040ad1f;\n  goto LAB_0040ab80;\nLAB_0040ad1f:\n  FUN_0040afb0(__stream);\n  if (local_d0 == 0) {\nLAB_0040ab1e:\n    pcVar7 = \"\";\n  }\n  else {\n    pcVar7[local_d0] = '\\0';\n  }\nLAB_0040ab24:\n  free(__file);\n  DAT_006104f8 = pcVar7;\n  goto LAB_0040a9da;\n}\n\n",
            "funcName": "FUN_0040a9a0"
        },
        {
            "funcStartAddr": "0x40af10",
            "funcEndAddr": "0x40af55",
            "decompiledFuncCode": "\nvoid FUN_0040af10(int param_1,char *param_2,uint param_3,ulong param_4)\n\n{\n  int iVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  if ((param_3 & 0x40) != 0) {\n    uVar2 = param_4 & 0xffffffff;\n  }\n  iVar1 = openat(param_1,param_2,param_3,uVar2);\n  FUN_0040af60(iVar1);\n  return;\n}\n\n",
            "funcName": "FUN_0040af10"
        },
        {
            "funcStartAddr": "0x40af60",
            "funcEndAddr": "0x40afac",
            "decompiledFuncCode": "\nuint FUN_0040af60(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  \n  if (2 < param_1) {\n    return param_1;\n  }\n  uVar2 = FUN_0040b170();\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  close(param_1);\n  *piVar3 = iVar1;\n  return uVar2;\n}\n\n",
            "funcName": "FUN_0040af60"
        },
        {
            "funcStartAddr": "0x40afb0",
            "funcEndAddr": "0x40b028",
            "decompiledFuncCode": "\nint FUN_0040afb0(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_0040b017;\n    }\n    iVar1 = FUN_00406300(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_0040b017:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n",
            "funcName": "FUN_0040afb0"
        },
        {
            "funcStartAddr": "0x40b030",
            "funcEndAddr": "0x40b15c",
            "decompiledFuncCode": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint FUN_0040b030(ulong param_1,int param_2,ulong param_3)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  int *piVar4;\n  \n  if (param_2 != 0x406) {\n    iVar1 = fcntl((int)param_1,param_2,param_3);\n    return iVar1;\n  }\n  if (DAT_00610500 < 0) {\n    iVar1 = FUN_0040b030(param_1,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    if (DAT_00610500 != -1) {\n      return iVar1;\n    }\n  }\n  else {\n    iVar1 = fcntl((int)param_1,0x406);\n    if ((-1 < iVar1) || (piVar4 = __errno_location(), *piVar4 != 0x16)) {\n      DAT_00610500 = 1;\n      return iVar1;\n    }\n    iVar1 = FUN_0040b030(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n    DAT_00610500 = -1;\n  }\n  uVar2 = fcntl(iVar1,1);\n  if ((-1 < (int)uVar2) && (iVar3 = fcntl(iVar1,2,(ulong)(uVar2 | 1)), iVar3 != -1)) {\n    return iVar1;\n  }\n  piVar4 = __errno_location();\n  iVar3 = *piVar4;\n  close(iVar1);\n  *piVar4 = iVar3;\n  return -1;\n}\n\n",
            "funcName": "FUN_0040b030"
        },
        {
            "funcStartAddr": "0x40b170",
            "funcEndAddr": "0x40b17e",
            "decompiledFuncCode": "\nvoid FUN_0040b170(undefined8 param_1)\n\n{\n  FUN_0040b030(param_1,0,3);\n  return;\n}\n\n",
            "funcName": "FUN_0040b170"
        },
        {
            "funcStartAddr": "0x40b180",
            "funcEndAddr": "0x40b1dd",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x0040b1b3) */\n/* WARNING: Removing unreachable block (ram,0x0040b1b8) */\n\nvoid FUN_0040b180(void)\n\n{\n  __DT_INIT();\n  return;\n}\n\n",
            "funcName": "FUN_0040b180"
        },
        {
            "funcStartAddr": "0x40b1e0",
            "funcEndAddr": "0x40b1e1",
            "decompiledFuncCode": "\nvoid FUN_0040b1e0(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_0040b1e0"
        },
        {
            "funcStartAddr": "0x40b1f0",
            "funcEndAddr": "0x40b208",
            "decompiledFuncCode": "\nvoid FUN_0040b1f0(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,DAT_00610268);\n  return;\n}\n\n",
            "funcName": "FUN_0040b1f0"
        },
        {
            "funcStartAddr": "0x40b208",
            "funcEndAddr": "0x40b228",
            "decompiledFuncCode": "\nundefined8 FUN_0040b208(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  code **ppcVar1;\n  \n  for (ppcVar1 = (code **)&DAT_0060fe30; *ppcVar1 != (code *)0xffffffffffffffff;\n      ppcVar1 = ppcVar1 + -1) {\n    (**ppcVar1)();\n  }\n  return param_3;\n}\n\n",
            "funcName": "FUN_0040b208"
        }
    ],
    "decompilerName": "Ghidra",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_rm.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O"
}