{
    "funcCount": 105,
    "funcInfo": [
        {
            "funcStartAddr": "0x401785",
            "funcEndAddr": "0x40178a",
            "decompiledFuncCode": "\nvoid FUN_00401785(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401785"
        },
        {
            "funcStartAddr": "0x40178a",
            "funcEndAddr": "0x40178f",
            "decompiledFuncCode": "\nvoid FUN_0040178a(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040178a"
        },
        {
            "funcStartAddr": "0x40178f",
            "funcEndAddr": "0x401794",
            "decompiledFuncCode": "\nvoid FUN_0040178f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_0040178f"
        },
        {
            "funcStartAddr": "0x401794",
            "funcEndAddr": "0x401799",
            "decompiledFuncCode": "\nvoid FUN_00401794(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00401794"
        },
        {
            "funcStartAddr": "0x4017a0",
            "funcEndAddr": "0x402882",
            "decompiledFuncCode": "\nbyte FUN_004017a0(int param_1,undefined8 *param_2)\n\n{\n  byte **ppbVar1;\n  byte bVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  byte *pbVar6;\n  int *piVar7;\n  void **__ptr;\n  ulong uVar8;\n  void *pvVar9;\n  void *pvVar10;\n  size_t __n;\n  long lVar11;\n  ulong uVar12;\n  void *pvVar13;\n  undefined **ppuVar14;\n  undefined8 uVar15;\n  long lVar16;\n  undefined8 uVar17;\n  byte *pbVar18;\n  ulong uVar19;\n  ulong uVar20;\n  undefined8 *puVar21;\n  byte *pbVar22;\n  char *pcVar23;\n  uint uVar24;\n  char cVar25;\n  char cVar26;\n  ulong uVar27;\n  void **ppvVar28;\n  int unaff_R14D;\n  byte bVar29;\n  byte *unaff_R15;\n  bool bVar30;\n  bool bVar31;\n  byte bVar32;\n  ulong local_160;\n  byte **local_158;\n  int local_150;\n  byte local_14b;\n  char local_14a;\n  byte local_149;\n  ulong local_148;\n  void *local_140;\n  byte *local_138;\n  ulong local_130;\n  byte *local_128;\n  ulong local_120;\n  long local_118;\n  ulong local_110;\n  ulong local_108;\n  int local_100;\n  void *local_f8;\n  long local_f0;\n  ulong local_e8;\n  ulong local_e0;\n  void *local_d8;\n  long local_d0;\n  stat local_c8;\n  \n  bVar32 = 0;\n  FUN_004036d0(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\n                 \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/share/locale\"\n                );\n  textdomain(\"coreutils\");\n  FUN_00407800();\n  DAT_0060b2b8 = '\\0';\n  DAT_0060b2ba = '\\0';\n  DAT_0060b2b9 = '\\n';\n  puVar21 = param_2;\n  if (((param_1 < 2) || (pcVar23 = (char *)param_2[1], *pcVar23 != '-')) ||\n     (9 < (int)pcVar23[1] - 0x30U)) {\n    local_14a = '\\x01';\n    iVar5 = 0;\n    local_160 = 10;\n  }\n  else {\n    pbVar6 = (byte *)(pcVar23 + 1);\n    do {\n      pbVar22 = pbVar6;\n      pbVar6 = pbVar22 + 1;\n      uVar4 = (uint)(char)*pbVar6;\n    } while (uVar4 - 0x30 < 10);\n    if (*pbVar6 == 0) {\n      local_14a = '\\x01';\n      iVar5 = 0;\n    }\n    else {\n      bVar30 = false;\n      cVar25 = '\\n';\n      uVar24 = 0;\n      cVar26 = '\\x01';\n      iVar5 = 0;\n      pbVar18 = pbVar6;\n      do {\n        switch(uVar4 - 0x62 & 0xff) {\n        case 0:\n        case 9:\n        case 0xb:\n          cVar26 = '\\0';\n          uVar24 = uVar4;\n          break;\n        case 1:\n          uVar24 = 0;\n          cVar26 = '\\0';\n          break;\n        default:\n          if (bVar30) {\n            DAT_0060b2b9 = cVar25;\n          }\n          uVar15 = dcgettext(0,\"invalid trailing option -- %c\",5);\n          iVar3 = (int)(char)uVar4;\n          goto LAB_0040237a;\n        case 10:\n          cVar26 = '\\x01';\n          break;\n        case 0xf:\n          iVar5 = 2;\n          break;\n        case 0x14:\n          iVar5 = 1;\n          break;\n        case 0x18:\n          bVar30 = true;\n          cVar25 = '\\0';\n        }\n        pbVar18 = pbVar18 + 1;\n        uVar4 = (uint)*pbVar18;\n      } while (*pbVar18 != 0);\n      if (bVar30) {\n        DAT_0060b2b9 = cVar25;\n      }\n      *pbVar6 = (byte)uVar24;\n      local_14a = cVar26;\n      if ((byte)uVar24 != 0) {\n        pbVar22[2] = 0;\n      }\n    }\n    puVar21 = param_2 + 1;\n    param_1 = param_1 + -1;\n    local_160 = FUN_00402990(local_14a);\n    *puVar21 = *param_2;\n  }\n  local_14b = 0;\n  uVar4 = 1;\nLAB_00401838:\n  do {\n    iVar3 = FUN_00406e30(param_1,puVar21,\"c:n:qvz0123456789\",&PTR_s_bytes_004081a0,0);\n    if (iVar3 == -1) {\n      if ((iVar5 == 1) || ((iVar5 == 0 && (DAT_0060b27c < param_1 + -1)))) {\n        DAT_0060b2ba = '\\x01';\n      }\n      if (((local_14a != '\\0') || (local_14b == 0)) || (-1 < (long)local_160)) {\n        if (DAT_0060b27c < param_1) {\n          ppuVar14 = (undefined **)(puVar21 + DAT_0060b27c);\n          pbVar6 = *ppuVar14;\n          if (pbVar6 == (byte *)0x0) {\n            local_149 = 1;\n            pbVar6 = unaff_R15;\n            goto LAB_00401ecc;\n          }\n        }\n        else {\n          ppuVar14 = &PTR_DAT_00408190;\n          pbVar6 = &DAT_004098a2;\n        }\n        local_138 = &DAT_004098a2;\n        local_158 = ppuVar14 + 1;\n        local_149 = 1;\n        local_e0 = (ulong)((uint)local_160 & 0x1fff);\n        local_e8 = 0x2000 - local_e0;\n        local_120 = local_160 + 0x2000;\n        local_f0 = local_120 * 2;\n        local_110 = local_160 + local_e8 >> 0xd;\n        local_130 = local_110 + 1;\n        bVar30 = (local_130 & 1) != 0;\n        local_108 = local_130 >> 1;\n        bVar31 = local_108 == 0;\n        goto LAB_00401c32;\n      }\nLAB_00402840:\n      uVar15 = FUN_00403680(local_160,&local_c8);\n      uVar15 = FUN_004052f0(uVar15);\n      uVar17 = dcgettext(0,\"invalid number of bytes\",5);\n      local_140 = (void *)error(1,0x4b,\"%s: %s\",uVar17,uVar15);\n      unaff_R14D = local_100;\n      bVar2 = local_14b;\nLAB_00402576:\n      free(local_f8);\n      pbVar6 = local_128;\nLAB_004024b7:\n      if ((local_118 != -1) && (lVar16 = FUN_004029f0(local_150,local_140,0,pbVar6), lVar16 < 0)) {\n        bVar2 = 0;\n      }\nLAB_00401c0d:\n      do {\n        if ((unaff_R14D != 0) && (iVar5 = close(local_150), iVar5 != 0)) {\n          uVar15 = FUN_004050a0(4,pbVar6);\n          pcVar23 = \"failed to close %s\";\n          goto LAB_00401c85;\n        }\n        while( true ) {\n          ppbVar1 = local_158 + 1;\n          local_149 = local_149 & bVar2;\n          pbVar6 = *local_158;\n          bVar30 = false;\n          bVar31 = pbVar6 == (byte *)0x0;\n          local_158 = ppbVar1;\n          if (bVar31) break;\nLAB_00401c32:\n          lVar16 = 2;\n          pbVar22 = pbVar6;\n          pbVar18 = local_138;\n          do {\n            if (lVar16 == 0) break;\n            lVar16 = lVar16 + -1;\n            bVar30 = *pbVar22 < *pbVar18;\n            bVar31 = *pbVar22 == *pbVar18;\n            pbVar22 = pbVar22 + (ulong)bVar32 * -2 + 1;\n            pbVar18 = pbVar18 + (ulong)bVar32 * -2 + 1;\n          } while (bVar31);\n          unaff_R14D = (int)(char)((!bVar30 && !bVar31) - bVar30);\n          if (unaff_R14D == 0) {\n            DAT_0060b2b8 = '\\x01';\n            pbVar6 = (byte *)dcgettext(0,\"standard input\",5);\n            local_150 = 0;\nLAB_00401bab:\n            if (DAT_0060b2ba != '\\0') {\n              pcVar23 = \"\";\n              if (DAT_0060b1f0 == '\\0') {\n                pcVar23 = \"\\n\";\n              }\n              __printf_chk(1,\"%s==> %s <==\\n\",pcVar23,pbVar6);\n              DAT_0060b1f0 = '\\0';\n            }\n            if (local_14b == 0) {\n              if (local_14a == '\\0') {\n                bVar2 = FUN_00402d30(pbVar6,local_150,local_160);\n              }\n              else {\n                bVar2 = FUN_00402bc0();\n              }\n              goto LAB_00401c0d;\n            }\n            iVar5 = __fxstat(1,local_150,&local_c8);\n            if (iVar5 != 0) {\n              uVar15 = FUN_004050a0(4,pbVar6);\n              uVar17 = dcgettext(0,\"cannot fstat %s\",5);\n              piVar7 = __errno_location();\n              error(0,*piVar7,uVar17,uVar15);\n              bVar2 = 0;\n              goto LAB_00401c0d;\n            }\n            if ((DAT_0060b2bb == 0) && ((local_c8.st_mode & 0xd000) == 0x8000)) goto LAB_004022bc;\n            local_118 = -1;\n            if (local_14a != '\\0') goto LAB_00401f0e;\n            goto LAB_00401d16;\n          }\n          local_150 = open((char *)pbVar6,0);\n          if (-1 < local_150) goto LAB_00401bab;\n          uVar15 = FUN_004050a0(4,pbVar6);\n          pcVar23 = \"cannot open %s for reading\";\nLAB_00401c85:\n          uVar17 = dcgettext(0,pcVar23,5);\n          piVar7 = __errno_location();\n          bVar2 = 0;\n          error(0,*piVar7,uVar17,uVar15);\n        }\nLAB_00401ecc:\n        if ((DAT_0060b2b8 == '\\0') || (iVar5 = close(0), -1 < iVar5)) {\n          return local_149 ^ 1;\n        }\n        piVar7 = __errno_location();\n        error(1,*piVar7,&DAT_004098a2);\nLAB_004022bc:\n        local_118 = FUN_004029f0(local_150,0,1,pbVar6);\n        bVar29 = DAT_0060b2bb;\n        if (local_118 < 0) {\nLAB_00402234:\n          bVar2 = 0;\n          goto LAB_00401c0d;\n        }\n        if (local_14a == '\\0') {\n          if (DAT_0060b2bb != 0) goto LAB_00401d16;\n          lVar16 = local_c8.st_blksize;\n          if (0x1fffffffffffffff < local_c8.st_blksize - 1U) {\n            lVar16 = 0x200;\n          }\n          if (local_c8.st_size <= lVar16) goto LAB_00401d16;\n          uVar12 = local_c8.st_size - local_118;\n          if ((long)uVar12 < 0) {\n            uVar12 = 0;\n          }\n          bVar2 = local_14b;\n          if ((local_160 < uVar12) &&\n             (iVar5 = FUN_00402b10(local_150,uVar12 - local_160), iVar5 != 0)) {\n            FUN_00402e00(iVar5,pbVar6);\n            bVar2 = bVar29;\n          }\n        }\n        else if (DAT_0060b2bb == 0) {\n          lVar16 = local_c8.st_blksize;\n          if (0x1fffffffffffffff < local_c8.st_blksize - 1U) {\n            lVar16 = 0x200;\n          }\n          if (local_c8.st_size <= lVar16) goto LAB_00401f0e;\n          bVar2 = 1;\n          if (local_118 < local_c8.st_size) {\n            bVar2 = FUN_00402e80(pbVar6,local_150,local_160,local_118);\n          }\n          bVar2 = bVar2 & 1;\n        }\n        else {\nLAB_00401f0e:\n          local_128 = (byte *)local_118;\n          pvVar9 = (void *)FUN_00405910(0x2018);\n          *(undefined8 *)((long)pvVar9 + 0x2008) = 0;\n          *(undefined8 *)((long)pvVar9 + 0x2000) = 0;\n          *(undefined8 *)((long)pvVar9 + 0x2010) = 0;\n          pvVar10 = (void *)FUN_00405910(0x2018);\n          local_148 = 0;\n          local_140 = pvVar9;\n          while (__n = FUN_00405310(local_150,pvVar10,0x2000), __n - 1 < 0xfffffffffffffffe) {\n            if (local_160 == 0) {\n              local_128 = (byte *)((long)local_128 + __n);\n              FUN_00402a90(pvVar10,__n);\n            }\n            else {\n              *(size_t *)((long)pvVar10 + 0x2000) = __n;\n              *(undefined8 *)((long)pvVar10 + 0x2008) = 0;\n              iVar5 = (int)DAT_0060b2b9;\n              *(undefined8 *)((long)pvVar10 + 0x2010) = 0;\n              pvVar13 = pvVar10;\n              lVar16 = 0;\n              while( true ) {\n                lVar11 = FUN_00406f30(pvVar13,iVar5,(long)pvVar10 + (__n - (long)pvVar13));\n                if (lVar11 == 0) break;\n                *(long *)((long)pvVar10 + 0x2008) = lVar16 + 1;\n                pvVar13 = (void *)(lVar11 + 1);\n                lVar16 = lVar16 + 1;\n              }\n              local_148 = local_148 + lVar16;\n              if (__n + *(long *)((long)local_140 + 0x2000) < 0x2000) {\n                memcpy((void *)(*(long *)((long)local_140 + 0x2000) + (long)local_140),pvVar10,__n);\n                *(long *)((long)local_140 + 0x2000) =\n                     *(long *)((long)local_140 + 0x2000) + *(long *)((long)pvVar10 + 0x2000);\n                *(long *)((long)local_140 + 0x2008) =\n                     *(long *)((long)local_140 + 0x2008) + *(long *)((long)pvVar10 + 0x2008);\n              }\n              else {\n                *(void **)((long)local_140 + 0x2010) = pvVar10;\n                local_140 = pvVar10;\n                if (local_160 < local_148 - *(long *)((long)pvVar9 + 0x2008)) {\n                  local_128 = (byte *)((long)local_128 + *(long *)((long)pvVar9 + 0x2000));\n                  if (*(long *)((long)pvVar9 + 0x2000) != 0) {\n                    FUN_00402a90(pvVar9);\n                  }\n                  local_148 = local_148 - *(long *)((long)pvVar9 + 0x2008);\n                  pvVar10 = pvVar9;\n                  pvVar9 = *(void **)((long)pvVar9 + 0x2010);\n                }\n                else {\n                  pvVar10 = (void *)FUN_00405910(0x2018);\n                }\n              }\n            }\n          }\n          free(pvVar10);\n          if (__n == 0xffffffffffffffff) {\n            uVar15 = FUN_004050a0(4,pbVar6);\n            uVar17 = dcgettext(0,\"error reading %s\",5);\n            piVar7 = __errno_location();\n            bVar2 = 0;\n            error(0,*piVar7,uVar17,uVar15);\n            goto joined_r0x0040278a;\n          }\n          if ((*(long *)((long)local_140 + 0x2000) != 0) &&\n             (*(char *)((long)local_140 + *(long *)((long)local_140 + 0x2000) + -1) != DAT_0060b2b9)\n             ) {\n            *(long *)((long)local_140 + 0x2008) = *(long *)((long)local_140 + 0x2008) + 1;\n            local_148 = local_148 + 1;\n          }\n          uVar12 = local_148 - *(long *)((long)pvVar9 + 0x2008);\n          pvVar10 = pvVar9;\n          while (local_160 < uVar12) {\n            local_128 = (byte *)((long)local_128 + *(long *)((long)pvVar10 + 0x2000));\n            if (*(long *)((long)pvVar10 + 0x2000) != 0) {\n              FUN_00402a90(pvVar10);\n            }\n            local_148 = local_148 - *(long *)((long)pvVar10 + 0x2008);\n            pvVar10 = *(void **)((long)pvVar10 + 0x2010);\n            uVar12 = local_148 - *(long *)((long)pvVar10 + 0x2008);\n          }\n          bVar2 = local_14b;\n          if (local_160 < local_148) {\n            lVar16 = *(long *)((long)pvVar10 + 0x2000);\n            iVar5 = (int)DAT_0060b2b9;\n            lVar11 = local_148 - local_160;\n            pvVar13 = pvVar10;\n            do {\n              pvVar13 = (void *)FUN_00406f30(pvVar13,iVar5,(long)pvVar10 + (lVar16 - (long)pvVar13))\n              ;\n              if (pvVar13 == (void *)0x0) break;\n              pvVar13 = (void *)((long)pvVar13 + 1);\n              *(long *)((long)pvVar10 + 0x2008) = *(long *)((long)pvVar10 + 0x2008) + 1;\n              lVar11 = lVar11 + -1;\n            } while (lVar11 != 0);\n            lVar16 = (long)pvVar13 - (long)pvVar10;\n            local_128 = (byte *)((long)local_128 + lVar16);\n            if (lVar16 != 0) {\n              FUN_00402a90(pvVar10,lVar16);\n            }\n          }\n          do {\n            pvVar10 = *(void **)((long)pvVar9 + 0x2010);\n            free(pvVar9);\n            pvVar9 = pvVar10;\njoined_r0x0040278a:\n          } while (pvVar9 != (void *)0x0);\n          if ((local_118 != -1) && (lVar16 = FUN_004029f0(local_150,local_128,0,pbVar6), lVar16 < 0)\n             ) goto LAB_00402234;\n        }\n      } while( true );\n    }\n    if (iVar3 == 0x6e) {\n      local_14b = *DAT_0060b460 == '-';\n      if ((bool)local_14b) {\n        DAT_0060b460 = DAT_0060b460 + 1;\n      }\n      local_160 = FUN_00402990(1,DAT_0060b460);\n      local_14a = '\\x01';\n      goto LAB_00401838;\n    }\n    if (iVar3 < 0x6f) {\n      if (iVar3 == -0x82) {\n        FUN_004030d0(0);\n        goto LAB_00402840;\n      }\n      if (iVar3 != 99) {\n        if (iVar3 != -0x83) goto LAB_004018e6;\n        FUN_004057d0(stdout,&DAT_0040790d,\"GNU coreutils\",PTR_DAT_0060b1f8,\"David MacKenzie\",\n                     \"Jim Meyering\",0);\n                    /* WARNING: Subroutine does not return */\n        exit(0);\n      }\n      local_14b = *DAT_0060b460 == '-';\n      if ((bool)local_14b) {\n        DAT_0060b460 = DAT_0060b460 + 1;\n      }\n      local_160 = FUN_00402990(0,DAT_0060b460);\n      local_14a = '\\0';\n    }\n    else if (iVar3 == 0x76) {\n      iVar5 = 1;\n    }\n    else if (iVar3 < 0x77) {\n      if (iVar3 != 0x71) goto LAB_004018e6;\n      iVar5 = 2;\n    }\n    else if (iVar3 == 0x7a) {\n      DAT_0060b2b9 = '\\0';\n    }\n    else {\n      while (iVar3 != 0x80) {\nLAB_004018e6:\n        unaff_R14D = iVar3;\n        if (iVar3 - 0x30U < 10) {\n          uVar15 = dcgettext(0,\"invalid trailing option -- %c\",5);\nLAB_0040237a:\n          error(0,0,uVar15,iVar3);\n        }\n        iVar3 = FUN_004030d0();\n      }\n      DAT_0060b2bb = (byte)uVar4;\n    }\n  } while( true );\nLAB_00401d16:\n  local_140 = (void *)local_118;\n  if (local_160 < 0x100001) goto LAB_004024e6;\n  local_128 = (byte *)0x0;\n  __ptr = (void **)0x0;\n  uVar12 = 0;\n  uVar27 = 0;\n  uVar19 = 1;\n  bVar29 = 0;\nLAB_00401d58:\n  if (uVar12 == 0) {\n    uVar12 = 0x10;\n    if (local_130 < 0x11) {\n      uVar12 = local_130;\n    }\n  }\n  else {\n    bVar30 = local_108 < uVar12;\n    uVar12 = uVar12 * 2;\n    if (bVar30) {\n      uVar12 = local_130;\n    }\n  }\n  __ptr = (void **)FUN_00405970(__ptr,uVar12 * 8);\n  uVar20 = uVar27;\n  while (uVar27 = uVar19, bVar29 != 0) {\n    uVar8 = FUN_00403560(local_150,__ptr[uVar20],0x2000);\n    if (uVar8 < 0x2000) {\n      piVar7 = __errno_location();\n      bVar2 = bVar29;\n      if (*piVar7 != 0) goto LAB_004026e7;\nLAB_00401dd3:\n      local_140 = (void *)((long)local_140 + uVar8);\n      bVar29 = local_14b;\n      if (uVar8 == 0) goto LAB_00401de7;\n    }\n    else {\n      local_140 = (void *)((long)local_140 + uVar8);\n      bVar2 = 0;\n    }\n    FUN_00402a90(__ptr[uVar27],uVar8);\n    bVar29 = local_14b;\nLAB_00401de7:\n    uVar19 = (uVar27 + 1) % local_130;\n    if (bVar2 != 0) {\n      if (bVar29 == 0) {\n        if ((local_110 == uVar27) &&\n           (local_140 = (void *)((long)local_140 + (uVar8 - local_e0)), uVar8 - local_e0 != 0)) {\n          FUN_00402a90(__ptr[uVar19]);\n        }\n      }\n      else {\n        local_140 = (void *)((long)local_140 + local_e8);\n        bVar2 = bVar29;\n        if (local_e8 < -uVar8 + 0x2000) {\n          FUN_00402a90((long)__ptr[uVar27] + uVar8,local_e8);\n        }\n        else if ((-uVar8 == -0x2000) ||\n                (FUN_00402a90((long)__ptr[uVar27] + uVar8), local_e0 != uVar8)) {\n          FUN_00402a90(__ptr[uVar19],uVar8 - local_e0);\n        }\n      }\n      goto LAB_0040248f;\n    }\n    uVar20 = uVar27;\n    if (uVar12 == uVar27) goto LAB_00401d58;\n  }\n  pvVar9 = (void *)FUN_00405910(0x2000);\n  local_128 = (byte *)(uVar20 + 1);\n  __ptr[uVar20] = pvVar9;\n  uVar8 = FUN_00403560(local_150,pvVar9,0x2000);\n  bVar2 = 0;\n  if ((0x1fff < uVar8) || (piVar7 = __errno_location(), bVar2 = local_14b, *piVar7 == 0)) {\n    if (local_110 == uVar20) goto LAB_00401dd3;\n    goto LAB_00401de7;\n  }\nLAB_004026e7:\n  uVar15 = FUN_004050a0(4,pbVar6);\n  uVar17 = dcgettext(0,\"error reading %s\",5);\n  bVar2 = 0;\n  error(0,*piVar7,uVar17,uVar15);\nLAB_0040248f:\n  for (ppvVar28 = __ptr; ppvVar28 != __ptr + (long)local_128; ppvVar28 = ppvVar28 + 1) {\n    free(*ppvVar28);\n  }\n  free(__ptr);\n  goto LAB_004024b7;\nLAB_004024e6:\n  uVar12 = 0;\n  local_f8 = (void *)FUN_00405910(local_f0);\n  local_d8 = local_f8;\n  local_d0 = (long)local_f8 + local_120;\n  lVar16 = local_118;\n  bVar29 = local_14b;\n  do {\n    pvVar9 = (&local_d8)[uVar12];\n    uVar19 = FUN_00403560(local_150,pvVar9,local_120);\n    uVar4 = (uint)uVar12;\n    local_128 = pbVar6;\n    if (uVar19 < local_120) {\n      piVar7 = __errno_location();\n      local_140 = (void *)lVar16;\n      if (*piVar7 != 0) {\n        uVar15 = FUN_004050a0(4,pbVar6);\n        uVar17 = dcgettext(0,\"error reading %s\",5);\n        error(0,*piVar7,uVar17,uVar15);\n        bVar2 = 0;\n        goto LAB_00402576;\n      }\n      if (local_160 < uVar19) {\n        if (bVar29 == 0) {\n          pvVar10 = (&local_d8)[uVar4 ^ 1];\n          bVar29 = local_14b;\n          if (local_160 != 0) goto LAB_004025ff;\n        }\n        else {\n          uVar19 = uVar19 - local_160;\n        }\n        lVar16 = uVar19 + lVar16;\n        local_140 = (void *)lVar16;\n        bVar2 = bVar29;\n        if (uVar19 == 0) goto LAB_00402576;\nLAB_00402641:\n        FUN_00402a90(pvVar9,uVar19);\n      }\n      else {\n        bVar2 = local_14b;\n        if (bVar29 != 0) goto LAB_00402576;\n        local_140 = (void *)(lVar16 + uVar19);\n        pvVar10 = (&local_d8)[uVar4 ^ 1];\n        uVar12 = uVar19;\n        bVar29 = local_14b;\n        if (uVar19 == 0) goto LAB_00402576;\nLAB_00402609:\n        FUN_00402a90((long)pvVar10 + 0x2000,uVar12);\n        lVar16 = (long)local_140;\n        if (local_160 < uVar19) {\nLAB_00402636:\n          uVar19 = uVar19 - local_160;\n          lVar16 = (long)local_140 + uVar19;\n          if (uVar19 != 0) goto LAB_00402641;\n        }\n      }\n      uVar12 = (ulong)(uVar4 ^ 1);\n      local_140 = (void *)lVar16;\n      bVar2 = bVar29;\n      if (bVar29 != 0) goto LAB_00402576;\n    }\n    else if (bVar29 == 0) {\n      local_140 = (void *)(local_160 + lVar16);\n      pvVar10 = (&local_d8)[uVar4 ^ 1];\n      if (local_160 != 0) {\nLAB_004025ff:\n        local_140 = (void *)(local_160 + lVar16);\n        uVar12 = local_160;\n        goto LAB_00402609;\n      }\n      if (uVar19 != 0) goto LAB_00402636;\n      uVar12 = (ulong)(uVar4 ^ 1);\n      lVar16 = (long)local_140;\n    }\n    else if (local_160 < uVar19) {\n      uVar19 = uVar19 - local_160;\n      lVar16 = lVar16 + uVar19;\n      if (uVar19 != 0) {\n        bVar29 = 0;\n        goto LAB_00402641;\n      }\n      uVar12 = (ulong)(uVar4 ^ 1);\n    }\n    else {\n      uVar12 = (ulong)(uVar4 ^ 1);\n    }\n    bVar29 = 0;\n  } while( true );\n}\n\n",
            "funcName": "FUN_004017a0"
        },
        {
            "funcStartAddr": "0x4028b0",
            "funcEndAddr": "0x4028db",
            "decompiledFuncCode": "\nvoid FUN_004028b0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_0060aff0)\n            (FUN_004017a0,unaff_retaddr,&stack0x00000008,FUN_00407790,FUN_004077f0,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "funcName": "FUN_004028b0"
        },
        {
            "funcStartAddr": "0x4028db",
            "funcEndAddr": "0x4028fa",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004028e8) */\n/* WARNING: Removing unreachable block (ram,0x004028f2) */\n\nvoid FUN_004028db(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_004028db"
        },
        {
            "funcStartAddr": "0x4028fa",
            "funcEndAddr": "0x402931",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402929) */\n\nvoid FUN_004028fa(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_004028fa"
        },
        {
            "funcStartAddr": "0x402931",
            "funcEndAddr": "0x402988",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402966) */\n\nvoid FUN_00402931(void)\n\n{\n  if (DAT_0060b2a8 != '\\0') {\n    return;\n  }\n  FUN_004028db();\n  DAT_0060b2a8 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00402931"
        },
        {
            "funcStartAddr": "0x402988",
            "funcEndAddr": "0x40298d",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x00402929) */\n\nvoid thunk_FUN_004028fa(void)\n\n{\n  return;\n}\n\n",
            "funcName": "thunk_402988"
        },
        {
            "funcStartAddr": "0x402990",
            "funcEndAddr": "0x4029d8",
            "decompiledFuncCode": "\nvoid FUN_00402990(char param_1,undefined8 param_2)\n\n{\n  undefined8 uVar1;\n  \n  if (param_1 == '\\0') {\n    uVar1 = dcgettext(0,\"invalid number of bytes\",5);\n  }\n  else {\n    uVar1 = dcgettext(0,\"invalid number of lines\",5);\n  }\n  FUN_00405c70(param_2,0,0xffffffffffffffff,\"bkKmMGTPEZY0\",uVar1,0);\n  return;\n}\n\n",
            "funcName": "FUN_00402990"
        },
        {
            "funcStartAddr": "0x4029f0",
            "funcEndAddr": "0x402a83",
            "decompiledFuncCode": "\n__off_t FUN_004029f0(int param_1,__off_t param_2,int param_3,undefined8 param_4)\n\n{\n  __off_t _Var1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  int *piVar5;\n  char *pcVar6;\n  undefined auStack_48 [40];\n  \n  _Var1 = lseek(param_1,param_2,param_3);\n  if (-1 < _Var1) {\n    return _Var1;\n  }\n  uVar2 = FUN_004035e0(param_2,auStack_48);\n  uVar3 = FUN_00405170(0,3,param_4);\n  pcVar6 = \"%s: cannot seek to offset %s\";\n  if (param_3 != 0) {\n    pcVar6 = \"%s: cannot seek to relative offset %s\";\n  }\n  uVar4 = dcgettext(0,pcVar6,5);\n  piVar5 = __errno_location();\n  error(0,*piVar5,uVar4,uVar3,uVar2);\n  return _Var1;\n}\n\n",
            "funcName": "FUN_004029f0"
        },
        {
            "funcStartAddr": "0x402a90",
            "funcEndAddr": "0x402b10",
            "decompiledFuncCode": "\nsize_t FUN_00402a90(void *param_1,ulong param_2)\n\n{\n  size_t sVar1;\n  uint *puVar2;\n  long lVar3;\n  ulong uVar4;\n  ulong uVar5;\n  ulong uVar6;\n  undefined auStack_2030 [8192];\n  undefined8 uStack_30;\n  undefined8 uStack_28;\n  \n  sVar1 = fwrite_unlocked(param_1,1,param_2,stdout);\n  if (param_2 <= sVar1) {\n    return sVar1;\n  }\n  clearerr_unlocked(stdout);\n  uStack_28 = FUN_004050a0(4,\"standard output\");\n  uStack_30 = dcgettext(0,\"error writing %s\",5);\n  puVar2 = (uint *)__errno_location();\n  uVar6 = 1;\n  uVar5 = (ulong)*puVar2;\n  error(1,uVar5,uStack_30,uStack_28);\n  if (uVar5 != 0) {\n    do {\n      uVar4 = 0x2000;\n      if (uVar5 < 0x2001) {\n        uVar4 = uVar5;\n      }\n      lVar3 = FUN_00405310(uVar6 & 0xffffffff,auStack_2030,uVar4);\n      if (lVar3 == -1) {\n        return 1;\n      }\n      uVar5 = uVar5 - lVar3;\n      if ((lVar3 == 0) && (uVar5 != 0)) {\n        return 2;\n      }\n      if (lVar3 != 0) {\n        FUN_00402a90(auStack_2030,lVar3);\n      }\n    } while (uVar5 != 0);\n    return 0;\n  }\n  return 0;\n}\n\n",
            "funcName": "FUN_00402a90"
        },
        {
            "funcStartAddr": "0x402b10",
            "funcEndAddr": "0x402ba4",
            "decompiledFuncCode": "\nundefined8 FUN_00402b10(undefined4 param_1,ulong param_2)\n\n{\n  long lVar1;\n  ulong uVar2;\n  undefined auStack_2018 [8192];\n  \n  if (param_2 == 0) {\n    return 0;\n  }\n  do {\n    uVar2 = 0x2000;\n    if (param_2 < 0x2001) {\n      uVar2 = param_2;\n    }\n    lVar1 = FUN_00405310(param_1,auStack_2018,uVar2);\n    if (lVar1 == -1) {\n      return 1;\n    }\n    param_2 = param_2 - lVar1;\n    if ((lVar1 == 0) && (param_2 != 0)) {\n      return 2;\n    }\n    if (lVar1 != 0) {\n      FUN_00402a90(auStack_2018,lVar1);\n    }\n  } while (param_2 != 0);\n  return 0;\n}\n\n",
            "funcName": "FUN_00402b10"
        },
        {
            "funcStartAddr": "0x402bc0",
            "funcEndAddr": "0x402d1a",
            "decompiledFuncCode": "\nundefined8 FUN_00402bc0(undefined8 param_1,int param_2,long param_3)\n\n{\n  int iVar1;\n  long lVar2;\n  __off_t _Var3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  int *piVar6;\n  long lVar7;\n  stat sStack_20b8;\n  char local_2028 [8200];\n  long lVar8;\n  \n  if (param_3 == 0) {\n    return 1;\n  }\n  while( true ) {\n    lVar2 = FUN_00405310(param_2,local_2028,0x2000);\n    if (lVar2 == -1) {\n      uVar4 = FUN_004050a0(4,param_1);\n      uVar5 = dcgettext(0,\"error reading %s\",5);\n      piVar6 = __errno_location();\n      error(0,*piVar6,uVar5,uVar4);\n      return 0;\n    }\n    if (lVar2 == 0) break;\n    lVar8 = 0;\n    do {\n      lVar7 = lVar8 + 1;\n      if ((local_2028[lVar8] == DAT_0060b2b9) && (param_3 = param_3 + -1, param_3 == 0)) {\n        _Var3 = lseek(param_2,lVar7 - lVar2,1);\n        if (_Var3 < 0) {\n          iVar1 = __fxstat(1,param_2,&sStack_20b8);\n          if ((iVar1 != 0) || ((sStack_20b8.st_mode & 0xf000) == 0x8000)) {\n            FUN_004029f0(param_2,lVar7 - lVar2,1,param_1);\n          }\n        }\n        FUN_00402a90(local_2028,lVar7);\n        return 1;\n      }\n      lVar8 = lVar7;\n    } while (lVar2 != lVar7);\n    FUN_00402a90(local_2028,lVar2);\n  }\n  return 1;\n}\n\n",
            "funcName": "FUN_00402bc0"
        },
        {
            "funcStartAddr": "0x402d30",
            "funcEndAddr": "0x402df3",
            "decompiledFuncCode": "\nundefined8 FUN_00402d30(undefined8 param_1,undefined4 param_2,ulong param_3)\n\n{\n  long lVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  ulong uVar5;\n  undefined auStack_2028 [8192];\n  \n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar5 = 0x2000;\n  do {\n    if (param_3 < uVar5) {\n      uVar5 = param_3;\n    }\n    lVar1 = FUN_00405310(param_2,auStack_2028,uVar5);\n    if (lVar1 == -1) {\n      uVar2 = FUN_004050a0(4,param_1);\n      uVar3 = dcgettext(0,\"error reading %s\",5);\n      piVar4 = __errno_location();\n      error(0,*piVar4,uVar3,uVar2);\n      return 0;\n    }\n    if (lVar1 == 0) {\n      return 1;\n    }\n    FUN_00402a90(auStack_2028,lVar1);\n    param_3 = param_3 - lVar1;\n  } while (param_3 != 0);\n  return 1;\n}\n\n",
            "funcName": "FUN_00402d30"
        },
        {
            "funcStartAddr": "0x402e00",
            "funcEndAddr": "0x402e70",
            "decompiledFuncCode": "\nvoid FUN_00402e00(int param_1,undefined8 param_2)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  int *piVar3;\n  char *pcVar4;\n  \n  if (param_1 == 1) {\n    uVar1 = FUN_004050a0(4);\n    pcVar4 = \"error reading %s\";\n  }\n  else {\n    if (param_1 != 2) {\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n    uVar1 = FUN_00405170(0,3,param_2);\n    pcVar4 = \"%s: file has shrunk too much\";\n  }\n  uVar2 = dcgettext(0,pcVar4,5);\n  piVar3 = __errno_location();\n  error(0,*piVar3,uVar2,uVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00402e00"
        },
        {
            "funcStartAddr": "0x402e80",
            "funcEndAddr": "0x4030b3",
            "decompiledFuncCode": "\nulong FUN_00402e80(undefined8 param_1,undefined4 param_2,long param_3,size_t param_4,long param_5)\n\n{\n  size_t sVar1;\n  size_t __n;\n  void *pvVar2;\n  long lVar3;\n  ulong uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  int *piVar7;\n  long lVar8;\n  size_t sVar9;\n  int iVar10;\n  undefined8 local_2040;\n  undefined local_2038 [8200];\n  \n  lVar8 = (long)(param_5 - param_4) % 0x2000;\n  lVar3 = 0x2000;\n  if (lVar8 != 0) {\n    lVar3 = lVar8;\n  }\n  sVar9 = param_5 - lVar3;\n  local_2040 = param_4;\n  lVar8 = FUN_004029f0(param_2,sVar9,0,param_1);\n  if (lVar8 < 0) {\nLAB_00403000:\n    uVar4 = 0;\n  }\n  else {\n    __n = FUN_00405310(param_2,local_2038,lVar3);\n    if (__n == 0xffffffffffffffff) {\nLAB_0040306d:\n      uVar5 = FUN_004050a0(4,param_1);\n      uVar6 = dcgettext(0,\"error reading %s\",5);\n      piVar7 = __errno_location();\n      error(0,*piVar7,uVar6,uVar5);\n      uVar4 = 0;\n    }\n    else {\n      lVar3 = param_3;\n      if ((param_3 != 0) && (__n != 0)) {\n        lVar3 = param_3 - (ulong)(local_2038[__n - 1] != DAT_0060b2b9);\n      }\n      do {\n        if (__n != 0) {\n          iVar10 = (int)DAT_0060b2b9;\n          do {\n            if (param_3 == 0) {\n              __n = __n - 1;\n              sVar1 = local_2040;\n            }\n            else {\n              pvVar2 = memrchr(local_2038,iVar10,__n);\n              if (pvVar2 == (void *)0x0) break;\n              __n = (long)pvVar2 - (long)local_2038;\n              sVar1 = local_2040;\n            }\n            local_2040 = sVar1;\n            if (lVar3 == 0) {\n              if ((long)sVar1 < (long)sVar9) {\n                local_2040 = __n;\n                lVar3 = FUN_004029f0(param_2,sVar1,0,param_1);\n                if (lVar3 < 0) goto LAB_00403000;\n                iVar10 = FUN_00402b10(param_2,sVar9 - sVar1);\n                __n = local_2040;\n                if (iVar10 != 0) {\n                  FUN_00402e00(iVar10,param_1);\n                  return 0;\n                }\n              }\n              lVar3 = __n + 1;\n              if (lVar3 != 0) {\n                FUN_00402a90(local_2038,lVar3);\n              }\n              uVar4 = FUN_004029f0(param_2,sVar9 + lVar3,0,param_1);\n              return ~uVar4 >> 0x3f;\n            }\n            lVar3 = lVar3 + -1;\n          } while (__n != 0);\n        }\n        if (sVar9 == local_2040) break;\n        sVar9 = sVar9 - 0x2000;\n        lVar8 = FUN_004029f0(param_2,sVar9,0,param_1);\n        if (lVar8 < 0) goto LAB_00403000;\n        __n = FUN_00405310(param_2,local_2038,0x2000);\n        if (__n == 0xffffffffffffffff) goto LAB_0040306d;\n      } while (__n != 0);\n      uVar4 = 1;\n    }\n  }\n  return uVar4;\n}\n\n",
            "funcName": "FUN_00402e80"
        },
        {
            "funcStartAddr": "0x4030d0",
            "funcEndAddr": "0x403495",
            "decompiledFuncCode": "\nvoid FUN_004030d0(int param_1)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  char *pcVar5;\n  byte **ppbVar6;\n  long lVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  bool bVar11;\n  bool bVar12;\n  byte bVar13;\n  byte *local_88;\n  char *local_80;\n  byte *local_78 [5];\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  char *local_38;\n  char *local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  byte **ppbVar7;\n  \n  uVar4 = DAT_0060b2d0;\n  bVar13 = 0;\n  if (param_1 != 0) {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar4);\n    goto LAB_0040310f;\n  }\n  uVar3 = dcgettext(0,\"Usage: %s [OPTION]... [FILE]...\\n\",5);\n  __printf_chk(1,uVar3,uVar4);\n  uVar4 = dcgettext(0,\n                    \"Print the first %d lines of each FILE to standard output.\\nWith more than one FILE, precede each with a header giving the file name.\\n\"\n                    ,5);\n  __printf_chk(1,uVar4,10);\n  pFVar1 = stdout;\n  pcVar5 = (char *)dcgettext(0,\"\\nWith no FILE, or when FILE is -, read standard input.\\n\",5);\n  fputs_unlocked(pcVar5,pFVar1);\n  pFVar1 = stdout;\n  pcVar5 = (char *)dcgettext(0,\n                             \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar5,pFVar1);\n  uVar4 = dcgettext(0,\n                    \"  -c, --bytes=[-]NUM       print the first NUM bytes of each file;\\n                             with the leading \\'-\\', print all but the last\\n                             NUM bytes of each file\\n  -n, --lines=[-]NUM       print the first NUM lines instead of the first %d;\\n                             with the leading \\'-\\', print all but the last\\n                             NUM lines of each file\\n\"\n                    ,5);\n  __printf_chk(1,uVar4,10);\n  pFVar1 = stdout;\n  pcVar5 = (char *)dcgettext(0,\n                             \"  -q, --quiet, --silent    never print headers giving file names\\n  -v, --verbose            always print headers giving file names\\n\"\n                             ,5);\n  fputs_unlocked(pcVar5,pFVar1);\n  pFVar1 = stdout;\n  pcVar5 = (char *)dcgettext(0,\"  -z, --zero-terminated    line delimiter is NUL, not newline\\n\",5);\n  fputs_unlocked(pcVar5,pFVar1);\n  pFVar1 = stdout;\n  pcVar5 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n  fputs_unlocked(pcVar5,pFVar1);\n  pFVar1 = stdout;\n  pcVar5 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n  fputs_unlocked(pcVar5,pFVar1);\n  pFVar1 = stdout;\n  pcVar5 = (char *)dcgettext(0,\n                             \"\\nNUM may have a multiplier suffix:\\nb 512, kB 1000, K 1024, MB 1000*1000, M 1024*1024,\\nGB 1000*1000*1000, G 1024*1024*1024, and so on for T, P, E, Z, Y.\\n\"\n                             ,5);\n  fputs_unlocked(pcVar5,pFVar1);\n  local_88 = &DAT_00407912;\n  local_80 = \"test invocation\";\n  local_78[0] = (byte *)0x40798c;\n  local_78[1] = (byte *)0x407924;\n  local_78[2] = (byte *)0x40793a;\n  local_78[3] = (byte *)0x407944;\n  local_78[4] = (byte *)0x407953;\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha384sum\";\n  local_40 = \"sha2 utilities\";\n  local_38 = \"sha512sum\";\n  local_30 = \"sha2 utilities\";\n  local_28 = 0;\n  local_20 = 0;\n  ppbVar6 = &local_88;\n  do {\n    ppbVar7 = ppbVar6;\n    ppbVar6 = ppbVar7 + 2;\n    pbVar9 = *ppbVar6;\n    bVar11 = false;\n    bVar12 = pbVar9 == (byte *)0x0;\n    if (bVar12) break;\n    lVar8 = 5;\n    pbVar10 = &DAT_0040790d;\n    do {\n      if (lVar8 == 0) break;\n      lVar8 = lVar8 + -1;\n      bVar11 = *pbVar10 < *pbVar9;\n      bVar12 = *pbVar10 == *pbVar9;\n      pbVar10 = pbVar10 + (ulong)bVar13 * -2 + 1;\n      pbVar9 = pbVar9 + (ulong)bVar13 * -2 + 1;\n    } while (bVar12);\n  } while ((!bVar11 && !bVar12) != bVar11);\n  pbVar9 = ppbVar7[3];\n  if (pbVar9 == (byte *)0x0) {\n    uVar4 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar4,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar5 = setlocale(5,(char *)0x0);\n    if (pcVar5 != (char *)0x0) {\n      iVar2 = strncmp(pcVar5,\"en_\",3);\n      if (iVar2 != 0) {\n        pbVar9 = &DAT_0040790d;\n        goto LAB_0040346b;\n      }\n    }\n    pbVar9 = &DAT_0040790d;\n    uVar4 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar5 = \" invocation\";\n    __printf_chk(1,uVar4,\"https://www.gnu.org/software/coreutils/\",&DAT_0040790d);\n  }\n  else {\n    uVar4 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar4,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar5 = setlocale(5,(char *)0x0);\n    if (pcVar5 != (char *)0x0) {\n      iVar2 = strncmp(pcVar5,\"en_\",3);\n      if (iVar2 != 0) {\nLAB_0040346b:\n        uVar4 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar4,&DAT_0040790d);\n      }\n    }\n    pcVar5 = \" invocation\";\n    uVar4 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar4,\"https://www.gnu.org/software/coreutils/\",&DAT_0040790d);\n    if (pbVar9 != &DAT_0040790d) {\n      pcVar5 = \"\";\n    }\n  }\n  uVar4 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  __printf_chk(1,uVar4,pbVar9,pcVar5);\nLAB_0040310f:\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n",
            "funcName": "FUN_004030d0"
        },
        {
            "funcStartAddr": "0x4034a0",
            "funcEndAddr": "0x4034a8",
            "decompiledFuncCode": "\nvoid FUN_004034a0(undefined8 param_1)\n\n{\n  DAT_0060b2c8 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_004034a0"
        },
        {
            "funcStartAddr": "0x4034b0",
            "funcEndAddr": "0x4034b8",
            "decompiledFuncCode": "\nvoid FUN_004034b0(undefined param_1)\n\n{\n  DAT_0060b2c0 = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_004034b0"
        },
        {
            "funcStartAddr": "0x4034c0",
            "funcEndAddr": "0x40355e",
            "decompiledFuncCode": "\nvoid FUN_004034c0(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_00407040(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_0060b2c0 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_0060b2c8 == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = FUN_00405140();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_0040353e;\n    }\n  }\n  iVar1 = FUN_00407040(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_0040353e:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_0060b200);\n}\n\n",
            "funcName": "FUN_004034c0"
        },
        {
            "funcStartAddr": "0x403560",
            "funcEndAddr": "0x4035cd",
            "decompiledFuncCode": "\nlong FUN_00403560(undefined4 param_1,long param_2,long param_3)\n\n{\n  long lVar1;\n  int *piVar2;\n  long lVar3;\n  \n  if (param_3 == 0) {\n    lVar3 = 0;\n  }\n  else {\n    lVar3 = 0;\n    do {\n      lVar1 = FUN_00405310(param_1,param_2,param_3);\n      if (lVar1 == -1) {\n        return lVar3;\n      }\n      if (lVar1 == 0) {\n        piVar2 = __errno_location();\n        *piVar2 = 0;\n        return lVar3;\n      }\n      lVar3 = lVar3 + lVar1;\n      param_2 = param_2 + lVar1;\n      param_3 = param_3 - lVar1;\n    } while (param_3 != 0);\n  }\n  return lVar3;\n}\n\n",
            "funcName": "FUN_00403560"
        },
        {
            "funcStartAddr": "0x4035e0",
            "funcEndAddr": "0x403676",
            "decompiledFuncCode": "\nchar * FUN_004035e0(ulong param_1,long param_2)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  ulong uVar3;\n  \n  pcVar1 = (char *)(param_2 + 0x14);\n  *(undefined *)(param_2 + 0x14) = 0;\n  if ((long)param_1 < 0) {\n    do {\n      pcVar2 = pcVar1;\n      uVar3 = (long)param_1 / 10;\n      pcVar2[-1] = ((char)uVar3 * '\\n' + '0') - (char)param_1;\n      pcVar1 = pcVar2 + -1;\n      param_1 = uVar3;\n    } while (uVar3 != 0);\n    pcVar2[-2] = '-';\n    return pcVar2 + -2;\n  }\n  do {\n    pcVar1 = pcVar1 + -1;\n    uVar3 = param_1 / 10;\n    *pcVar1 = (char)param_1 + (char)uVar3 * -10 + '0';\n    param_1 = uVar3;\n  } while (uVar3 != 0);\n  return pcVar1;\n}\n\n",
            "funcName": "FUN_004035e0"
        },
        {
            "funcStartAddr": "0x403680",
            "funcEndAddr": "0x4036c4",
            "decompiledFuncCode": "\nchar * FUN_00403680(ulong param_1,long param_2)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  \n  pcVar2 = (char *)(param_2 + 0x14);\n  *(undefined *)(param_2 + 0x14) = 0;\n  do {\n    pcVar2 = pcVar2 + -1;\n    *pcVar2 = (char)param_1 + (char)(param_1 / 10) * -10 + '0';\n    bVar1 = 9 < param_1;\n    param_1 = param_1 / 10;\n  } while (bVar1);\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_00403680"
        },
        {
            "funcStartAddr": "0x4036d0",
            "funcEndAddr": "0x403769",
            "decompiledFuncCode": "\nvoid FUN_004036d0(byte *param_1)\n\n{\n  byte *pbVar1;\n  char *pcVar2;\n  long lVar3;\n  ulong uVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  byte bVar10;\n  \n  bVar10 = 0;\n  if (param_1 == (byte *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar2 = strrchr((char *)param_1,0x2f);\n  if (pcVar2 != (char *)0x0) {\n    pbVar1 = (byte *)(pcVar2 + 1);\n    uVar4 = (long)pbVar1 - (long)param_1;\n    bVar7 = uVar4 < 6;\n    bVar9 = uVar4 == 6;\n    if (6 < (long)uVar4) {\n      lVar3 = 7;\n      pbVar5 = (byte *)(pcVar2 + -6);\n      pbVar6 = (byte *)\"/.libs/\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar5 < *pbVar6;\n        bVar9 = *pbVar5 == *pbVar6;\n        pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      bVar8 = false;\n      bVar7 = (!bVar7 && !bVar9) == bVar7;\n      if (bVar7) {\n        lVar3 = 3;\n        pbVar5 = pbVar1;\n        pbVar6 = &DAT_00408338;\n        do {\n          if (lVar3 == 0) break;\n          lVar3 = lVar3 + -1;\n          bVar8 = *pbVar5 < *pbVar6;\n          bVar7 = *pbVar5 == *pbVar6;\n          pbVar5 = pbVar5 + (ulong)bVar10 * -2 + 1;\n          pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        } while (bVar7);\n        param_1 = pbVar1;\n        if ((!bVar8 && !bVar7) == bVar8) {\n          param_1 = (byte *)(pcVar2 + 4);\n          program_invocation_short_name = param_1;\n        }\n      }\n    }\n  }\n  DAT_0060b2d0 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n",
            "funcName": "FUN_004036d0"
        },
        {
            "funcStartAddr": "0x403770",
            "funcEndAddr": "0x40384f",
            "decompiledFuncCode": "\nchar * FUN_00403770(char *param_1,int param_2)\n\n{\n  char cVar1;\n  char *pcVar2;\n  byte *pbVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    pbVar3 = (byte *)FUN_00407100();\n    if ((*pbVar3 & 0xdf) == 0x55) {\n      if (((((pbVar3[1] & 0xdf) != 0x54) || ((pbVar3[2] & 0xdf) != 0x46)) || (pbVar3[3] != 0x2d)) ||\n         ((pbVar3[4] != 0x38 || (pbVar3[5] != 0)))) {\nLAB_00403848:\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_00408349;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_0040833e;\n      }\n    }\n    else {\n      if (((((*pbVar3 & 0xdf) != 0x47) || ((pbVar3[1] & 0xdf) != 0x42)) || (pbVar3[2] != 0x31)) ||\n         (((pbVar3[3] != 0x38 || (pbVar3[4] != 0x30)) ||\n          ((pbVar3[5] != 0x33 || ((pbVar3[6] != 0x30 || (pbVar3[7] != 0)))))))) goto LAB_00403848;\n      cVar1 = *pcVar2;\n      pcVar2 = &DAT_00408345;\n      if (cVar1 != '`') {\n        pcVar2 = &DAT_00408342;\n      }\n    }\n  }\n  return pcVar2;\n}\n\n",
            "funcName": "FUN_00403770"
        },
        {
            "funcStartAddr": "0x403870",
            "funcEndAddr": "0x4049a3",
            "decompiledFuncCode": "\nulong FUN_00403870(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  ulong uVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ulong uVar9;\n  ushort **ppuVar10;\n  long lVar11;\n  char *pcVar12;\n  byte bVar13;\n  char cVar14;\n  ulong uVar15;\n  ulong uVar16;\n  byte bVar17;\n  uint uVar18;\n  ulong uVar19;\n  bool bVar20;\n  ulong uVar21;\n  ulong uVar22;\n  bool bVar23;\n  bool bVar24;\n  bool bVar25;\n  bool bVar26;\n  size_t local_a0;\n  char *local_78;\n  ulong local_70;\n  bool local_5c;\n  bool local_5b;\n  wint_t local_44;\n  mbstate_t local_40 [2];\n  \n  sVar8 = __ctype_get_mb_cur_max();\n  uVar18 = param_6 & 2;\n  local_5c = uVar18 != 0;\n  uVar9 = param_2;\n  switch(param_5) {\n  case 0:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = false;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar18 != 0) {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = false;\n      local_a0 = 1;\n      local_78 = \"\\'\";\n      break;\n    }\n    bVar6 = false;\nLAB_004044c1:\n    if (param_2 != 0) {\n      bVar3 = false;\n      local_5b = false;\n      bVar2 = true;\n      local_70 = 0;\n      goto LAB_004040f6;\n    }\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 1;\n    param_5 = 2;\n    local_70 = 0;\n    local_5b = false;\n    local_5c = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 3:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 4:\n    if (uVar18 == 0) {\n      bVar6 = true;\n      goto LAB_004044c1;\n    }\n  case 1:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 2;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = false;\n    local_a0 = 1;\n    local_78 = \"\\'\";\n    break;\n  case 5:\n    if (uVar18 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      local_5b = false;\n      local_70 = 0;\n      bVar2 = true;\n      bVar3 = false;\n      local_5c = false;\n      uVar15 = 1;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    else {\n      bVar2 = true;\n      bVar3 = false;\n      uVar15 = 0;\n      local_5b = false;\n      local_70 = 0;\n      local_5c = true;\n      bVar6 = true;\n      local_a0 = 1;\n      local_78 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    param_5 = 5;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = true;\n    bVar6 = true;\n    local_a0 = 1;\n    local_78 = \"\\\"\";\n    break;\n  case 7:\n    bVar2 = true;\n    bVar3 = false;\n    uVar15 = 0;\n    local_5b = false;\n    local_70 = 0;\n    local_5c = false;\n    bVar6 = true;\n    local_a0 = 0;\n    local_78 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      param_8 = (char *)FUN_00403770(&DAT_0040834d,param_5);\n      param_9 = (char *)FUN_00403770(&DAT_0040988f);\n    }\n    uVar15 = 0;\n    if (uVar18 == 0) {\n      cVar14 = *param_8;\n      while (cVar14 != '\\0') {\n        if (uVar15 < param_2) {\n          param_1[uVar15] = cVar14;\n        }\n        uVar15 = uVar15 + 1;\n        cVar14 = param_8[uVar15];\n      }\n    }\n    local_a0 = strlen(param_9);\n    bVar2 = true;\n    bVar3 = false;\n    local_78 = param_9;\n    local_5b = false;\n    local_70 = 0;\n    bVar6 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\nLAB_00403908:\n  uVar22 = 0;\n  bVar5 = local_5b;\nLAB_00403918:\n  bVar23 = param_4 != uVar22;\n  if (param_4 == 0xffffffffffffffff) {\n    bVar23 = param_3[uVar22] != '\\0';\n  }\n  bVar26 = bVar6;\n  if (!bVar23) goto LAB_00404098;\n  bVar20 = (bool)(param_5 != 2 & bVar6);\n  __s1 = (byte *)(param_3 + uVar22);\n  uVar16 = uVar15;\n  bVar4 = bVar3;\n  if (bVar20) {\n    if (local_a0 == 0) {\nLAB_00404010:\n      uVar19 = (ulong)*__s1;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00404022_caseD_0;\n      default:\n        bVar20 = false;\n        goto switchD_00403e8e_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00403d25;\n      case 8:\n        bVar17 = 0x62;\n        break;\n      case 9:\nswitchD_00404022_caseD_9:\n        bVar17 = 0x74;\n        break;\n      case 10:\nswitchD_00404022_caseD_a:\n        bVar17 = 0x6e;\n        break;\n      case 0xb:\nswitchD_00404022_caseD_b:\n        bVar17 = 0x76;\n        goto LAB_00403d25;\n      case 0xc:\nswitchD_00404022_caseD_c:\n        bVar17 = 0x66;\nLAB_00403d25:\n        if (local_5c) {\n          bVar25 = false;\n          goto LAB_00403c78;\n        }\nLAB_00403d30:\n        bVar23 = false;\n        goto LAB_00403aeb;\n      case 0xd:\n        bVar20 = false;\nswitchD_00403a08_caseD_d:\n        bVar25 = param_5 == 2;\n        uVar19 = 0xd;\n        bVar13 = 0x72;\n        goto LAB_00403c40;\n      case 0x20:\n        bVar25 = false;\nLAB_0040406a:\n        uVar19 = 0x20;\n        goto LAB_00404032;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar20 = false;\nswitchD_00403a08_caseD_21:\n        bVar25 = false;\n        goto LAB_00403c4b;\n      case 0x23:\n      case 0x7e:\n        bVar26 = false;\nLAB_0040404a:\n        if (uVar22 == 0) {\n          bVar25 = false;\n          bVar23 = bVar20;\n          bVar20 = bVar26;\n          goto LAB_00403a58;\n        }\n        bVar23 = false;\n        goto LAB_00403a6f;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar25 = false;\nLAB_00404032:\n        bVar24 = false;\n        bVar23 = bVar20;\n        bVar20 = bVar25;\n        goto LAB_00403a71;\n      case 0x27:\n        bVar20 = false;\n        goto switchD_00403e8e_caseD_27;\n      case 0x3f:\n        bVar20 = false;\n        goto switchD_00403e8e_caseD_3f;\n      case 0x5c:\n        bVar20 = false;\n        goto switchD_00403a08_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        bVar20 = false;\n        goto switchD_00403e8e_caseD_7b;\n      }\n      bVar25 = false;\n      bVar23 = false;\n      goto joined_r0x00403c67;\n    }\n    if ((param_4 == 0xffffffffffffffff) && (1 < local_a0)) {\n      param_4 = strlen(param_3);\n    }\n    if ((param_4 < uVar22 + local_a0) || (iVar7 = memcmp(__s1,local_78,local_a0), iVar7 != 0))\n    goto LAB_00404010;\n    if (!local_5c) {\n      uVar19 = (ulong)*__s1;\n      bVar25 = bVar20;\n      switch(uVar19) {\n      case 0:\n        goto switchD_00403a08_caseD_0;\n      default:\n        goto switchD_00403e8e_caseD_1;\n      case 7:\n        bVar17 = 0x61;\n        goto LAB_00403d30;\n      case 8:\n        bVar25 = false;\n        bVar23 = false;\n        bVar17 = 0x62;\n        break;\n      case 9:\n        goto switchD_00404022_caseD_9;\n      case 10:\n        goto switchD_00404022_caseD_a;\n      case 0xb:\n        goto switchD_00404022_caseD_b;\n      case 0xc:\n        goto switchD_00404022_caseD_c;\n      case 0xd:\n        goto switchD_00403a08_caseD_d;\n      case 0x20:\n        goto LAB_0040406a;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        goto switchD_00403a08_caseD_21;\n      case 0x23:\n      case 0x7e:\n        bVar26 = bVar20;\n        goto LAB_0040404a;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        goto LAB_00404032;\n      case 0x27:\n        goto switchD_00403e8e_caseD_27;\n      case 0x3f:\n        goto switchD_00403e8e_caseD_3f;\n      case 0x5c:\n        goto switchD_00403a08_caseD_5c;\n      case 0x7b:\n      case 0x7d:\n        goto switchD_00403e8e_caseD_7b;\n      }\n      goto LAB_00403ab2;\n    }\n    goto LAB_00403c8a;\n  }\n  uVar19 = (ulong)*__s1;\n  switch(uVar19) {\n  case 0:\n    if (bVar6) {\nswitchD_00404022_caseD_0:\n      if (!local_5c) {\n        bVar20 = false;\nswitchD_00403a08_caseD_0:\n        bVar26 = param_5 == 2;\n        bVar24 = (bool)((bVar3 ^ 1U) & bVar26);\n        if (bVar24) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar16 = uVar15 + 3;\n          bVar3 = bVar24;\n          if (uVar9 <= uVar15 + 3) {\n            uVar16 = uVar15 + 4;\n            bVar23 = false;\n            bVar17 = 0x30;\n            bVar4 = bVar24;\n            goto LAB_00403b68;\n          }\nLAB_00403daa:\n          param_1[uVar16] = 0x5c;\n          uVar15 = uVar16;\n        }\n        else if (uVar15 < uVar9) goto LAB_00403daa;\n        uVar16 = uVar15 + 1;\n        bVar24 = bVar23;\n        if (param_5 == 2) {\n          bVar17 = 0x30;\n          bVar23 = false;\n          bVar4 = bVar3;\n          goto LAB_00403b68;\n        }\n        uVar19 = 0x30;\n        if ((uVar22 + 1 < param_4) && ((byte)(param_3[uVar22 + 1] - 0x30U) < 10)) {\n          if (uVar16 < uVar9) {\n            param_1[uVar16] = 0x30;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x30;\n          }\n          uVar16 = uVar15 + 3;\n          uVar19 = 0x30;\n        }\nLAB_00403de9:\n        bVar17 = (byte)uVar19;\n        bVar23 = false;\n        uVar15 = uVar16;\n        bVar4 = bVar3;\n        if ((bool)(bVar6 ^ 1U | bVar26)) goto LAB_00403b68;\n        goto LAB_00403a71;\n      }\n      bVar26 = param_5 == 2;\n      goto LAB_00403c7c;\n    }\n    if ((param_6 & 1) == 0) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0;\n      bVar23 = false;\n      bVar20 = false;\n      goto LAB_00403a58;\n    }\n    uVar22 = uVar22 + 1;\n    goto LAB_00403918;\n  default:\nswitchD_00403e8e_caseD_1:\n    bVar25 = bVar6;\n    if (sVar8 != 1) {\n      local_40[0] = (mbstate_t)0x0;\n      if (param_4 == 0xffffffffffffffff) {\n        param_4 = strlen(param_3);\n      }\n      uVar21 = 0;\n      do {\n        uVar1 = uVar22 + uVar21;\n        lVar11 = FUN_00406eb0(&local_44,param_3 + uVar1,param_4 - uVar1,local_40);\n        if (lVar11 == 0) break;\n        if (lVar11 == -1) {\n          bVar23 = false;\n          goto LAB_0040479a;\n        }\n        if (lVar11 == -2) {\n          if ((param_4 <= uVar1) || (param_3[uVar1] == '\\0')) goto LAB_004048d7;\n          goto LAB_004048c7;\n        }\n        if (((param_5 == 2) && (local_5c)) && (lVar11 != 1)) {\n          pcVar12 = param_3 + uVar1 + 1;\n          do {\n            if (((byte)(*pcVar12 + 0xa5U) < 0x22) &&\n               ((1L << (*pcVar12 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n              param_5 = 2;\n              goto LAB_00403c7c;\n            }\n            pcVar12 = pcVar12 + 1;\n          } while (param_3 + uVar1 + lVar11 != pcVar12);\n        }\n        iVar7 = iswprint(local_44);\n        if (iVar7 == 0) {\n          bVar23 = false;\n        }\n        uVar21 = uVar21 + lVar11;\n        iVar7 = mbsinit(local_40);\n      } while (iVar7 == 0);\n      bVar25 = (bool)((bVar23 ^ 1U) & bVar6);\n      goto LAB_0040479a;\n    }\n    ppuVar10 = __ctype_b_loc();\n    uVar21 = 1;\n    bVar25 = ((*ppuVar10)[uVar19] & 0x4000) == 0;\n    bVar23 = !bVar25;\n    bVar25 = (bool)(bVar25 & bVar6);\n    goto LAB_00403e64;\n  case 7:\n    bVar25 = param_5 == 2;\n    uVar19 = 7;\n    bVar13 = 0x61;\n    break;\n  case 8:\n    bVar25 = param_5 == 2;\n    uVar19 = 8;\n    bVar13 = 0x62;\n    break;\n  case 9:\n    uVar19 = 9;\n    bVar13 = 0x74;\n    goto LAB_00403ea2;\n  case 10:\n    uVar19 = 10;\n    bVar13 = 0x6e;\n    goto LAB_00403ea2;\n  case 0xb:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xb;\n    bVar13 = 0x76;\n    break;\n  case 0xc:\n    bVar25 = param_5 == 2;\n    uVar19 = 0xc;\n    bVar13 = 0x66;\n    break;\n  case 0xd:\n    uVar19 = 0xd;\n    bVar13 = 0x72;\nLAB_00403ea2:\n    bVar25 = param_5 == 2;\n    bVar20 = (bool)(local_5c & bVar25);\n    if (bVar20) {\nLAB_00403eba:\n      param_5 = 2;\n      goto LAB_00403c7c;\n    }\n    break;\n  case 0x20:\n    uVar19 = 0x20;\n    goto LAB_00403a46;\n  case 0x21:\n  case 0x22:\n  case 0x24:\n  case 0x26:\n  case 0x28:\n  case 0x29:\n  case 0x2a:\n  case 0x3b:\n  case 0x3c:\n  case 0x3d:\n  case 0x3e:\n  case 0x5b:\n  case 0x5e:\n  case 0x60:\n  case 0x7c:\n    bVar23 = false;\nLAB_00403a46:\n    bVar25 = param_5 == 2;\n    if ((local_5c) && (bVar25)) goto LAB_00403eba;\n    goto LAB_00403a58;\n  case 0x23:\n  case 0x7e:\nLAB_00403a3d:\n    bVar25 = param_5 == 2;\n    if (uVar22 == 0) goto LAB_00403a46;\n    goto LAB_00403c4b;\n  case 0x25:\n  case 0x2b:\n  case 0x2c:\n  case 0x2d:\n  case 0x2e:\n  case 0x2f:\n  case 0x30:\n  case 0x31:\n  case 0x32:\n  case 0x33:\n  case 0x34:\n  case 0x35:\n  case 0x36:\n  case 0x37:\n  case 0x38:\n  case 0x39:\n  case 0x3a:\n  case 0x41:\n  case 0x42:\n  case 0x43:\n  case 0x44:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x48:\n  case 0x49:\n  case 0x4a:\n  case 0x4b:\n  case 0x4c:\n  case 0x4d:\n  case 0x4e:\n  case 0x4f:\n  case 0x50:\n  case 0x51:\n  case 0x52:\n  case 0x53:\n  case 0x54:\n  case 0x55:\n  case 0x56:\n  case 0x57:\n  case 0x58:\n  case 0x59:\n  case 0x5a:\n  case 0x5d:\n  case 0x5f:\n  case 0x61:\n  case 0x62:\n  case 99:\n  case 100:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n  case 0x68:\n  case 0x69:\n  case 0x6a:\n  case 0x6b:\n  case 0x6c:\n  case 0x6d:\n  case 0x6e:\n  case 0x6f:\n  case 0x70:\n  case 0x71:\n  case 0x72:\n  case 0x73:\n  case 0x74:\n  case 0x75:\n  case 0x76:\n  case 0x77:\n  case 0x78:\n  case 0x79:\n  case 0x7a:\n    goto switchD_00403e8e_caseD_25;\n  case 0x27:\nswitchD_00403e8e_caseD_27:\n    bVar5 = bVar23;\n    if (param_5 != 2) {\n      bVar25 = false;\n      uVar19 = 0x27;\n      goto LAB_00403a58;\n    }\n    if (!local_5c) {\n      if ((uVar9 == 0) || (uVar19 = 0, uVar21 = uVar9, local_70 != 0)) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x5c;\n        }\n        uVar19 = uVar9;\n        uVar21 = local_70;\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x27;\n        }\n      }\n      uVar16 = uVar15 + 3;\n      bVar17 = 0x27;\n      uVar9 = uVar19;\n      local_70 = uVar21;\n      bVar24 = false;\n      bVar4 = false;\n      goto LAB_00403b68;\n    }\n    goto LAB_00403c7c;\n  case 0x3f:\nswitchD_00403e8e_caseD_3f:\n    if (param_5 == 2) {\n      if (!local_5c) {\n        bVar17 = 0x3f;\n        bVar24 = false;\n        bVar23 = false;\n        goto LAB_00403b68;\n      }\n      goto LAB_00403c7c;\n    }\n    if (param_5 != 5) {\n      bVar25 = param_5 == 2;\n      uVar19 = 0x3f;\n      bVar23 = false;\n      goto LAB_00403a58;\n    }\n    if (((((param_6 & 4) != 0) && (uVar21 = uVar22 + 2, uVar21 < param_4)) &&\n        (param_3[uVar22 + 1] == '?')) &&\n       ((uVar19 = (ulong)(byte)param_3[uVar21], (byte)param_3[uVar21] < 0x3f &&\n        ((0x7000a38200000000U >> (uVar19 & 0x3f) & 1) != 0)))) {\n      if (!local_5c) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x3f;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x22;\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = 0x22;\n        }\n        if (uVar15 + 3 < uVar9) {\n          param_1[uVar15 + 3] = 0x3f;\n        }\n        uVar16 = uVar15 + 4;\n        bVar26 = false;\n        uVar22 = uVar21;\n        bVar24 = false;\n        goto LAB_00403de9;\n      }\n      goto LAB_00403c8a;\n    }\n    bVar25 = false;\n    uVar19 = 0x3f;\n    bVar23 = false;\n    goto LAB_00403a58;\n  case 0x5c:\n    if (param_5 != 2) {\nswitchD_00403a08_caseD_5c:\n      uVar19 = 0x5c;\n      bVar17 = 0x5c;\n      bVar13 = 0x5c;\n      bVar25 = (bool)(bVar6 & local_5c & local_a0 != 0);\n      if (!bVar25) break;\n      uVar22 = uVar22 + 1;\n      bVar23 = false;\n      goto LAB_00403b84;\n    }\n    if (local_5c) goto LAB_00403c7c;\n    uVar22 = uVar22 + 1;\n    bVar23 = false;\n    bVar17 = 0x5c;\n    goto LAB_00403b84;\n  case 0x7b:\n  case 0x7d:\nswitchD_00403e8e_caseD_7b:\n    bVar24 = param_4 != 1;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar24 = param_3[1] != '\\0';\n    }\n    bVar25 = param_5 == 2;\n    if (!bVar24) goto LAB_00403a3d;\n    goto LAB_00403c4b;\n  }\nLAB_00403c40:\n  if (!bVar6) {\nLAB_00403c4b:\n    bVar23 = false;\n    goto LAB_00403a58;\n  }\n  bVar23 = false;\n  bVar17 = bVar13;\n  goto joined_r0x00403c67;\nLAB_00404098:\n  if ((uVar15 == 0) && ((bool)(local_5c & param_5 == 2))) {\n    param_5 = 2;\nLAB_00403c7c:\n    if (bVar26) {\n      param_5 = 4;\n    }\nLAB_00403c8a:\n    uVar9 = FUN_00403870(param_1,uVar9,param_3,param_4,param_5,param_6 & 0xfffffffd,0,param_8,\n                         param_9);\n    return uVar9;\n  }\n  bVar26 = (bool)(param_5 == 2 & (local_5c ^ 1U));\n  bVar23 = (bool)(local_5c ^ 1U);\n  if ((!bVar26) || (bVar23 = bVar26, !bVar5)) {\nLAB_0040496d:\n    uVar22 = uVar15;\n    if (((local_78 != (char *)0x0) && (bVar23)) && (cVar14 = *local_78, cVar14 != '\\0')) {\n      do {\n        if (uVar22 < uVar9) {\n          param_1[uVar22] = cVar14;\n        }\n        uVar22 = uVar22 + 1;\n        cVar14 = local_78[uVar22 - uVar15];\n      } while (cVar14 != '\\0');\n    }\n    if (uVar22 < uVar9) {\n      param_1[uVar22] = 0;\n    }\n    return uVar22;\n  }\n  if (bVar2) {\n    uVar9 = FUN_00403870(param_1,local_70,param_3,param_4,5,param_6,param_7,param_8,param_9);\n    return uVar9;\n  }\n  local_5b = uVar9 == 0 && local_70 != 0;\n  param_2 = local_70;\n  bVar23 = bVar5;\n  if (uVar9 != 0 || local_70 == 0) goto LAB_0040496d;\nLAB_004040f6:\n  *param_1 = 0x27;\n  param_5 = 2;\n  uVar15 = 1;\n  local_78 = \"\\'\";\n  local_a0 = 1;\n  local_5c = false;\n  uVar9 = param_2;\n  goto LAB_00403908;\n  while (__s1[uVar21] != 0) {\nLAB_004048c7:\n    uVar21 = uVar21 + 1;\n    if (param_4 <= uVar22 + uVar21) break;\n  }\nLAB_004048d7:\n  bVar23 = false;\nLAB_0040479a:\n  if (1 < uVar21) {\nLAB_0040435e:\n    bVar26 = false;\n    uVar21 = uVar21 + uVar22;\n    uVar16 = uVar22;\n    do {\n      bVar17 = (byte)uVar19;\n      if (bVar25) {\n        bVar26 = param_5 == 2;\n        if (local_5c) goto LAB_00403c7c;\n        bVar26 = (bool)(bVar26 & (bVar4 ^ 1U));\n        if (bVar26) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x24;\n          }\n          if (uVar15 + 2 < uVar9) {\n            param_1[uVar15 + 2] = 0x27;\n          }\n          uVar15 = uVar15 + 3;\n          bVar4 = bVar26;\n        }\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x5c;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = (char)(uVar19 >> 6) + '0';\n        }\n        if (uVar15 + 2 < uVar9) {\n          param_1[uVar15 + 2] = ((byte)(uVar19 >> 3) & 7) + 0x30;\n        }\n        uVar22 = uVar16 + 1;\n        uVar15 = uVar15 + 3;\n        bVar17 = (bVar17 & 7) + 0x30;\n        bVar26 = bVar25;\n        if (uVar21 <= uVar22) goto LAB_00403afd;\n      }\n      else {\n        bVar3 = (bool)((bVar26 ^ 1U) & bVar4);\n        if (bVar20) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x5c;\n          }\n          uVar15 = uVar15 + 1;\n        }\n        uVar22 = uVar16 + 1;\n        if (uVar21 <= uVar22) goto LAB_00403b84;\n        if (bVar3) {\n          if (uVar15 < uVar9) {\n            param_1[uVar15] = 0x27;\n          }\n          if (uVar15 + 1 < uVar9) {\n            param_1[uVar15 + 1] = 0x27;\n          }\n          uVar15 = uVar15 + 2;\n          bVar20 = false;\n          bVar4 = false;\n        }\n        else {\n          bVar20 = false;\n        }\n      }\n      uVar16 = uVar16 + 1;\n      if (uVar15 < uVar9) {\n        param_1[uVar15] = bVar17;\n      }\n      uVar19 = (ulong)(byte)param_3[uVar16];\n      uVar15 = uVar15 + 1;\n    } while( true );\n  }\nLAB_00403e64:\n  if (bVar25) {\n    bVar23 = false;\n    bVar25 = bVar6;\n    goto LAB_0040435e;\n  }\nswitchD_00403e8e_caseD_25:\n  bVar25 = param_5 == 2;\nLAB_00403a58:\n  bVar17 = (byte)uVar19;\n  bVar24 = (bool)((bVar6 ^ 1U | bVar25) ^ 1 | local_5c);\n  bVar26 = bVar20;\n  if (bVar24) {\nLAB_00403a6f:\n    bVar24 = false;\n    bVar20 = bVar26;\nLAB_00403a71:\n    bVar17 = (byte)uVar19;\n    uVar16 = uVar15;\n    bVar4 = bVar3;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar19 >> 5) * 4) >> (bVar17 & 0x1f) & 1) == 0))\n    goto LAB_00403b68;\n    bVar25 = param_5 == 2;\n  }\n  else {\nLAB_00403b68:\n    bVar25 = param_5 == 2;\n    uVar15 = uVar16;\n    bVar3 = bVar4;\n    if (!bVar20) {\n      uVar22 = uVar22 + 1;\n      bVar3 = (bool)((bVar24 ^ 1U) & bVar4);\nLAB_00403b84:\n      if (bVar3) {\n        if (uVar15 < uVar9) {\n          param_1[uVar15] = 0x27;\n        }\n        if (uVar15 + 1 < uVar9) {\n          param_1[uVar15 + 1] = 0x27;\n        }\n        uVar15 = uVar15 + 2;\n        bVar4 = false;\n      }\n      goto LAB_00403afd;\n    }\n  }\njoined_r0x00403c67:\n  if (local_5c) {\nLAB_00403c78:\n    bVar26 = (bool)(bVar6 & bVar25);\n    goto LAB_00403c7c;\n  }\nLAB_00403ab2:\n  bVar25 = (bool)((bVar3 ^ 1U) & bVar25);\n  if (bVar25) {\n    if (uVar15 < uVar9) {\n      param_1[uVar15] = 0x27;\n    }\n    if (uVar15 + 1 < uVar9) {\n      param_1[uVar15 + 1] = 0x24;\n    }\n    if (uVar15 + 2 < uVar9) {\n      param_1[uVar15 + 2] = 0x27;\n    }\n    uVar15 = uVar15 + 3;\n    bVar3 = bVar25;\n  }\nLAB_00403aeb:\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = 0x5c;\n  }\n  uVar15 = uVar15 + 1;\n  uVar22 = uVar22 + 1;\n  bVar4 = bVar3;\nLAB_00403afd:\n  bVar3 = bVar4;\n  if (uVar15 < uVar9) {\n    param_1[uVar15] = bVar17;\n  }\n  uVar15 = uVar15 + 1;\n  if (!bVar23) {\n    bVar2 = false;\n  }\n  goto LAB_00403918;\n}\n\n",
            "funcName": "FUN_00403870"
        },
        {
            "funcStartAddr": "0x404aa0",
            "funcEndAddr": "0x404c3b",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_00404aa0(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_0060b258;\n  if (DAT_0060b270 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00405b60();\n    }\n    if (PTR_DAT_0060b258 == &DAT_0060b260) {\n      puVar8 = (undefined4 *)FUN_00405970(0);\n      uVar6 = PTR_DAT_0060b268._4_4_;\n      uVar5 = PTR_DAT_0060b268._0_4_;\n      uVar3 = _UNK_0060b264;\n      PTR_DAT_0060b258 = (undefined *)puVar8;\n      *puVar8 = _DAT_0060b260;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_00405970(PTR_DAT_0060b258);\n      PTR_DAT_0060b258 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_0060b270 * 4,0,(long)((param_1 + 1) - DAT_0060b270) << 4);\n    DAT_0060b270 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_00403870(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_0060b2e0) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)FUN_00405910(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_00403870(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n",
            "funcName": "FUN_00404aa0"
        },
        {
            "funcStartAddr": "0x404c40",
            "funcEndAddr": "0x404c74",
            "decompiledFuncCode": "\nvoid FUN_00404c40(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060b3e0;\n  }\n  FUN_00405b10(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00404c40"
        },
        {
            "funcStartAddr": "0x404c80",
            "funcEndAddr": "0x404c8f",
            "decompiledFuncCode": "\nundefined4 FUN_00404c80(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060b3e0;\n  }\n  return *param_1;\n}\n\n",
            "funcName": "FUN_00404c80"
        },
        {
            "funcStartAddr": "0x404c90",
            "funcEndAddr": "0x404c9f",
            "decompiledFuncCode": "\nvoid FUN_00404c90(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060b3e0;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n",
            "funcName": "FUN_00404c90"
        },
        {
            "funcStartAddr": "0x404ca0",
            "funcEndAddr": "0x404cd3",
            "decompiledFuncCode": "\nuint FUN_00404ca0(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060b3e0;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n",
            "funcName": "FUN_00404ca0"
        },
        {
            "funcStartAddr": "0x404ce0",
            "funcEndAddr": "0x404cf3",
            "decompiledFuncCode": "\nundefined4 FUN_00404ce0(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0060b3e0;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00404ce0"
        },
        {
            "funcStartAddr": "0x404d00",
            "funcEndAddr": "0x404d2b",
            "decompiledFuncCode": "\nvoid FUN_00404d00(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0060b3e0;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00404d00"
        },
        {
            "funcStartAddr": "0x404d30",
            "funcEndAddr": "0x404da2",
            "decompiledFuncCode": "\nvoid FUN_00404d30(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_0060b3e0;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00403870(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n",
            "funcName": "FUN_00404d30"
        },
        {
            "funcStartAddr": "0x404db0",
            "funcEndAddr": "0x404e91",
            "decompiledFuncCode": "\nundefined8 FUN_00404db0(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_0060b3e0;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00403870(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = FUN_00405910(lVar3 + 1);\n  FUN_00403870(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n",
            "funcName": "FUN_00404db0"
        },
        {
            "funcStartAddr": "0x404ea0",
            "funcEndAddr": "0x404eaa",
            "decompiledFuncCode": "\nvoid FUN_00404ea0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00404db0(param_1,param_2,0,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_00404ea0"
        },
        {
            "funcStartAddr": "0x404eb0",
            "funcEndAddr": "0x404f45",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00404eb0(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_0060b258;\n  if (1 < DAT_0060b270) {\n    ppvVar2 = (void **)(PTR_DAT_0060b258 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_0060b258 + (ulong)(DAT_0060b270 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_0060b2e0) {\n    free(*(undefined **)(__ptr_00 + 8));\n    _DAT_0060b260 = 0x100;\n    PTR_DAT_0060b268 = &DAT_0060b2e0;\n  }\n  if (__ptr_00 != &DAT_0060b260) {\n    free(__ptr_00);\n    PTR_DAT_0060b258 = &DAT_0060b260;\n  }\n  DAT_0060b270 = 1;\n  return;\n}\n\n",
            "funcName": "FUN_00404eb0"
        },
        {
            "funcStartAddr": "0x404f50",
            "funcEndAddr": "0x404f61",
            "decompiledFuncCode": "\nvoid FUN_00404f50(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00404aa0(param_1,param_2,0xffffffffffffffff,&DAT_0060b3e0);\n  return;\n}\n\n",
            "funcName": "FUN_00404f50"
        },
        {
            "funcStartAddr": "0x404f70",
            "funcEndAddr": "0x404f7a",
            "decompiledFuncCode": "\nvoid FUN_00404f70(void)\n\n{\n  FUN_00404aa0();\n  return;\n}\n\n",
            "funcName": "FUN_00404f70"
        },
        {
            "funcStartAddr": "0x404f80",
            "funcEndAddr": "0x404f96",
            "decompiledFuncCode": "\nvoid FUN_00404f80(undefined8 param_1)\n\n{\n  FUN_00404aa0(0,param_1,0xffffffffffffffff,&DAT_0060b3e0);\n  return;\n}\n\n",
            "funcName": "FUN_00404f80"
        },
        {
            "funcStartAddr": "0x404fa0",
            "funcEndAddr": "0x404fb2",
            "decompiledFuncCode": "\nvoid FUN_00404fa0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00404aa0(0,param_1,param_2,&DAT_0060b3e0);\n  return;\n}\n\n",
            "funcName": "FUN_00404fa0"
        },
        {
            "funcStartAddr": "0x404fc0",
            "funcEndAddr": "0x405028",
            "decompiledFuncCode": "\nvoid FUN_00404fc0(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00404aa0(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00404fc0"
        },
        {
            "funcStartAddr": "0x405030",
            "funcEndAddr": "0x405094",
            "decompiledFuncCode": "\nvoid FUN_00405030(undefined8 param_1,int param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_44 = 0;\n    local_40 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00404aa0(param_1,param_3,param_4,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405030"
        },
        {
            "funcStartAddr": "0x4050a0",
            "funcEndAddr": "0x4050ac",
            "decompiledFuncCode": "\nvoid FUN_004050a0(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00404fc0(0,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_004050a0"
        },
        {
            "funcStartAddr": "0x4050b0",
            "funcEndAddr": "0x4050bf",
            "decompiledFuncCode": "\nvoid FUN_004050b0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00405030(0,param_1,param_2,param_3);\n  return;\n}\n\n",
            "funcName": "FUN_004050b0"
        },
        {
            "funcStartAddr": "0x4050c0",
            "funcEndAddr": "0x405130",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_004050c0(undefined8 param_1,undefined8 param_2,byte param_3)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  \n  local_18 = DAT_0060b410;\n  local_48 = _DAT_0060b3e0;\n  uStack_40 = uRam000000000060b3e8;\n  local_38 = _DAT_0060b3f0;\n  uStack_30 = uRam000000000060b3f8;\n  puVar1 = (uint *)((long)&uStack_40 + (ulong)(param_3 >> 5) * 4);\n  local_28 = _DAT_0060b400;\n  uStack_20 = uRam000000000060b408;\n  uVar2 = *puVar1;\n  *puVar1 = (~(uVar2 >> (param_3 & 0x1f)) & 1) << (param_3 & 0x1f) ^ uVar2;\n  FUN_00404aa0(0,param_1,param_2,&local_48);\n  return;\n}\n\n",
            "funcName": "FUN_004050c0"
        },
        {
            "funcStartAddr": "0x405130",
            "funcEndAddr": "0x40513d",
            "decompiledFuncCode": "\nvoid FUN_00405130(undefined8 param_1,char param_2)\n\n{\n  FUN_004050c0(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00405130"
        },
        {
            "funcStartAddr": "0x405140",
            "funcEndAddr": "0x405151",
            "decompiledFuncCode": "\nvoid FUN_00405140(undefined8 param_1)\n\n{\n  FUN_004050c0(param_1,0xffffffffffffffff,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00405140"
        },
        {
            "funcStartAddr": "0x405160",
            "funcEndAddr": "0x40516a",
            "decompiledFuncCode": "\nvoid FUN_00405160(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_004050c0(param_1,param_2,0x3a);\n  return;\n}\n\n",
            "funcName": "FUN_00405160"
        },
        {
            "funcStartAddr": "0x405170",
            "funcEndAddr": "0x4051de",
            "decompiledFuncCode": "\nvoid FUN_00405170(undefined8 param_1,int param_2,undefined8 param_3)\n\n{\n  int local_48;\n  undefined4 local_44;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  \n  if (param_2 != 10) {\n    local_40 = 0x400000000000000;\n    local_44 = 0;\n    local_38 = 0;\n    local_30 = 0;\n    local_28 = 0;\n    local_20 = 0;\n    local_18 = 0;\n    local_48 = param_2;\n    FUN_00404aa0(param_1,param_3,0xffffffffffffffff,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405170"
        },
        {
            "funcStartAddr": "0x4051e0",
            "funcEndAddr": "0x40524c",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_004051e0(undefined8 param_1,long param_2,long param_3,undefined8 param_4,undefined8 param_5\n                 )\n\n{\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long lStack_20;\n  long local_18;\n  \n  uStack_40 = uRam000000000060b3e8;\n  local_38 = _DAT_0060b3f0;\n  uStack_30 = uRam000000000060b3f8;\n  local_28 = _DAT_0060b400;\n  lStack_20 = uRam000000000060b408;\n  local_18 = DAT_0060b410;\n  local_48 = CONCAT44((int)((ulong)_DAT_0060b3e0 >> 0x20),10);\n  if ((param_2 != 0) && (param_3 != 0)) {\n    lStack_20 = param_2;\n    local_18 = param_3;\n    FUN_00404aa0(param_1,param_4,param_5,&local_48);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_004051e0"
        },
        {
            "funcStartAddr": "0x405250",
            "funcEndAddr": "0x405259",
            "decompiledFuncCode": "\nvoid FUN_00405250(void)\n\n{\n  FUN_004051e0();\n  return;\n}\n\n",
            "funcName": "FUN_00405250"
        },
        {
            "funcStartAddr": "0x405260",
            "funcEndAddr": "0x405277",
            "decompiledFuncCode": "\nvoid FUN_00405260(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_004051e0(0,param_1,param_2,param_3,0xffffffffffffffff);\n  return;\n}\n\n",
            "funcName": "FUN_00405260"
        },
        {
            "funcStartAddr": "0x405280",
            "funcEndAddr": "0x405293",
            "decompiledFuncCode": "\nvoid FUN_00405280(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_004051e0(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n",
            "funcName": "FUN_00405280"
        },
        {
            "funcStartAddr": "0x4052a0",
            "funcEndAddr": "0x4052aa",
            "decompiledFuncCode": "\nvoid FUN_004052a0(void)\n\n{\n  FUN_00404aa0();\n  return;\n}\n\n",
            "funcName": "FUN_004052a0"
        },
        {
            "funcStartAddr": "0x4052b0",
            "funcEndAddr": "0x4052c2",
            "decompiledFuncCode": "\nvoid FUN_004052b0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00404aa0(0,param_1,param_2,&DAT_0060b220);\n  return;\n}\n\n",
            "funcName": "FUN_004052b0"
        },
        {
            "funcStartAddr": "0x4052d0",
            "funcEndAddr": "0x4052e1",
            "decompiledFuncCode": "\nvoid FUN_004052d0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00404aa0(param_1,param_2,0xffffffffffffffff,&DAT_0060b220);\n  return;\n}\n\n",
            "funcName": "FUN_004052d0"
        },
        {
            "funcStartAddr": "0x4052f0",
            "funcEndAddr": "0x405306",
            "decompiledFuncCode": "\nvoid FUN_004052f0(undefined8 param_1)\n\n{\n  FUN_00404aa0(0,param_1,0xffffffffffffffff,&DAT_0060b220);\n  return;\n}\n\n",
            "funcName": "FUN_004052f0"
        },
        {
            "funcStartAddr": "0x405310",
            "funcEndAddr": "0x40536d",
            "decompiledFuncCode": "\nssize_t FUN_00405310(int param_1,void *param_2,ulong param_3)\n\n{\n  ssize_t sVar1;\n  int *piVar2;\n  \n  while( true ) {\n    do {\n      sVar1 = read(param_1,param_2,param_3);\n      if (-1 < sVar1) {\n        return sVar1;\n      }\n      piVar2 = __errno_location();\n    } while (*piVar2 == 4);\n    if (param_3 < 0x7fffe001) break;\n    if (*piVar2 != 0x16) {\n      return sVar1;\n    }\n    param_3 = 0x7fffe000;\n  }\n  return sVar1;\n}\n\n",
            "funcName": "FUN_00405310"
        },
        {
            "funcStartAddr": "0x405370",
            "funcEndAddr": "0x405714",
            "decompiledFuncCode": "\nundefined8\nFUN_00405370(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0040908b,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e1);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_004055ec;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar7 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_004055ec:\n    __fprintf_chk(param_1,1,uVar7,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[1];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar1 = param_5[2];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_00405689;\n  case 7:\n    uVar1 = param_5[2];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    local_58 = param_5[1];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_00405689:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_58,uVar1,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0040546a;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_58 = param_5[2];\n    local_50 = param_5[1];\n    uVar1 = param_5[6];\n    uVar4 = param_5[5];\n    uVar5 = param_5[4];\n    uVar6 = param_5[3];\n    uVar7 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_0040546a:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar7,local_50,local_58,uVar6,uVar5,uVar4,uVar1,local_48);\n  return uVar1;\n}\n\n",
            "funcName": "FUN_00405370"
        },
        {
            "funcStartAddr": "0x405750",
            "funcEndAddr": "0x405770",
            "decompiledFuncCode": "\nvoid FUN_00405750(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_00405370();\n  return;\n}\n\n",
            "funcName": "FUN_00405750"
        },
        {
            "funcStartAddr": "0x405770",
            "funcEndAddr": "0x4057c9",
            "decompiledFuncCode": "\nvoid FUN_00405770(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long local_58 [11];\n  \n  lVar4 = 0;\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_58[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_58[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_00405370();\n  return;\n}\n\n",
            "funcName": "FUN_00405770"
        },
        {
            "funcStartAddr": "0x4057d0",
            "funcEndAddr": "0x405888",
            "decompiledFuncCode": "\nvoid FUN_004057d0(void)\n\n{\n  long lVar1;\n  undefined8 in_R8;\n  ulong uVar2;\n  undefined8 in_R9;\n  long lVar3;\n  long *plVar4;\n  long local_88 [10];\n  long local_38 [4];\n  long local_18 [3];\n  \n  local_18[0] = in_R8;\n  plVar4 = (long *)&stack0x00000008;\n  uVar2 = 0x20;\n  local_18[1] = in_R9;\n  lVar3 = 0;\n  do {\n    if ((uint)uVar2 < 0x30) {\n      lVar1 = *(long *)((long)local_38 + uVar2);\n      local_88[lVar3] = lVar1;\n      uVar2 = (ulong)((uint)uVar2 + 8);\n    }\n    else {\n      lVar1 = *plVar4;\n      local_88[lVar3] = lVar1;\n      plVar4 = plVar4 + 1;\n    }\n  } while ((lVar1 != 0) && (lVar3 = lVar3 + 1, lVar3 != 10));\n  FUN_00405370();\n  return;\n}\n\n",
            "funcName": "FUN_004057d0"
        },
        {
            "funcStartAddr": "0x405890",
            "funcEndAddr": "0x405904",
            "decompiledFuncCode": "\nvoid FUN_00405890(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n",
            "funcName": "FUN_00405890"
        },
        {
            "funcStartAddr": "0x405910",
            "funcEndAddr": "0x40592a",
            "decompiledFuncCode": "\nvoid FUN_00405910(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00405b60();\n  }\n  return;\n}\n\n",
            "funcName": "FUN_00405910"
        },
        {
            "funcStartAddr": "0x405930",
            "funcEndAddr": "0x405951",
            "decompiledFuncCode": "\nvoid FUN_00405930(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_00405910();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00405b60();\n}\n\n",
            "funcName": "FUN_00405930"
        },
        {
            "funcStartAddr": "0x405960",
            "funcEndAddr": "0x405962",
            "decompiledFuncCode": "\nvoid thunk_FUN_00405910(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00405b60();\n  }\n  return;\n}\n\n",
            "funcName": "thunk_405960"
        },
        {
            "funcStartAddr": "0x405970",
            "funcEndAddr": "0x4059a0",
            "decompiledFuncCode": "\nvoid * FUN_00405970(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00405b60();\n  }\n  return pvVar1;\n}\n\n",
            "funcName": "FUN_00405970"
        },
        {
            "funcStartAddr": "0x4059b0",
            "funcEndAddr": "0x4059d1",
            "decompiledFuncCode": "\nvoid FUN_004059b0(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_00405970();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00405b60();\n}\n\n",
            "funcName": "FUN_004059b0"
        },
        {
            "funcStartAddr": "0x4059e0",
            "funcEndAddr": "0x405a58",
            "decompiledFuncCode": "\nvoid FUN_004059e0(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar2 = *param_2;\n  if (param_1 == 0) {\n    if (uVar2 == 0) {\n      uVar2 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar3 = (ulong)(SUB168(ZEXT816(uVar2) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar2) * ZEXT816(param_3),0) < 0) || (uVar3 != 0)) goto LAB_00405a3b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar3 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar2) {\nLAB_00405a3b:\n                    /* WARNING: Subroutine does not return */\n      FUN_00405b60(param_1,param_2,uVar3);\n    }\n    uVar2 = (uVar2 >> 1) + 1 + uVar2;\n  }\n  *param_2 = uVar2;\n  FUN_00405970(param_1,uVar2 * param_3);\n  return;\n}\n\n",
            "funcName": "FUN_004059e0"
        },
        {
            "funcStartAddr": "0x405a70",
            "funcEndAddr": "0x405aba",
            "decompiledFuncCode": "\nvoid FUN_00405a70(long param_1,ulong *param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = *param_2;\n  if (param_1 == 0) {\n    if (uVar1 == 0) {\n      *param_2 = 0x80;\n      FUN_00405970(0,0x80);\n      return;\n    }\n    if ((long)uVar1 < 0) goto LAB_00405aba;\n  }\n  else {\n    if (0x5555555555555553 < uVar1) {\nLAB_00405aba:\n                    /* WARNING: Subroutine does not return */\n      FUN_00405b60();\n    }\n    uVar1 = (uVar1 >> 1) + 1 + uVar1;\n  }\n  *param_2 = uVar1;\n  FUN_00405970(param_1,uVar1);\n  return;\n}\n\n",
            "funcName": "FUN_00405a70"
        },
        {
            "funcStartAddr": "0x405ac0",
            "funcEndAddr": "0x405ad7",
            "decompiledFuncCode": "\nvoid FUN_00405ac0(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00405910();\n  memset(__s,0,param_1);\n  return;\n}\n\n",
            "funcName": "FUN_00405ac0"
        },
        {
            "funcStartAddr": "0x405ae0",
            "funcEndAddr": "0x405b0e",
            "decompiledFuncCode": "\nvoid FUN_00405ae0(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00405b60();\n}\n\n",
            "funcName": "FUN_00405ae0"
        },
        {
            "funcStartAddr": "0x405b10",
            "funcEndAddr": "0x405b38",
            "decompiledFuncCode": "\nvoid FUN_00405b10(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00405910(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n",
            "funcName": "FUN_00405b10"
        },
        {
            "funcStartAddr": "0x405b40",
            "funcEndAddr": "0x405b53",
            "decompiledFuncCode": "\nvoid FUN_00405b40(char *param_1)\n\n{\n  void *__dest;\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  __dest = (void *)FUN_00405910(sVar1 + 1);\n  memcpy(__dest,param_1,sVar1 + 1);\n  return;\n}\n\n",
            "funcName": "FUN_00405b40"
        },
        {
            "funcStartAddr": "0x405b60",
            "funcEndAddr": "0x405b91",
            "decompiledFuncCode": "\nvoid FUN_00405b60(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_0060b200,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
            "funcName": "FUN_00405b60"
        },
        {
            "funcStartAddr": "0x405ba0",
            "funcEndAddr": "0x405c68",
            "decompiledFuncCode": "\nulong FUN_00405ba0(undefined8 param_1,undefined4 param_2,ulong param_3,ulong param_4,\n                  undefined8 param_5,undefined8 param_6,int param_7)\n\n{\n  ulong uVar1;\n  int iVar2;\n  int *piVar3;\n  undefined8 uVar4;\n  ulong local_40 [2];\n  \n  iVar2 = FUN_00405ca0(param_1,0,param_2,local_40);\n  uVar1 = local_40[0];\n  if (iVar2 == 0) {\n    if ((param_3 <= local_40[0]) && (local_40[0] <= param_4)) {\n      return local_40[0];\n    }\n    piVar3 = __errno_location();\n    *piVar3 = (-(uint)(uVar1 < 0x40000000) & 0xffffffd7) + 0x4b;\n  }\n  else {\n    piVar3 = __errno_location();\n    if (iVar2 == 1) {\n      *piVar3 = 0x4b;\n    }\n    else if (iVar2 == 3) {\n      *piVar3 = 0;\n    }\n  }\n  uVar4 = FUN_004052f0(param_1);\n  iVar2 = *piVar3;\n  if (iVar2 == 0x16) {\n    iVar2 = 0;\n  }\n  if (param_7 == 0) {\n    param_7 = 1;\n  }\n  error(param_7,iVar2,\"%s: %s\",param_6,uVar4);\n  return local_40[0];\n}\n\n",
            "funcName": "FUN_00405ba0"
        },
        {
            "funcStartAddr": "0x405c70",
            "funcEndAddr": "0x405c91",
            "decompiledFuncCode": "\nvoid FUN_00405c70(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5,undefined8 param_6)\n\n{\n  FUN_00405ba0(param_1,10,param_2,param_3,param_4,param_5,param_6);\n  return;\n}\n\n",
            "funcName": "FUN_00405c70"
        },
        {
            "funcStartAddr": "0x405ca0",
            "funcEndAddr": "0x40604e",
            "decompiledFuncCode": "\nulong FUN_00405ca0(byte *param_1,byte **param_2,uint param_3,ulong *param_4,char *param_5)\n\n{\n  byte bVar1;\n  undefined auVar2 [16];\n  int *piVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  ulong uVar6;\n  char *pcVar7;\n  byte bVar8;\n  uint uVar9;\n  int iVar10;\n  ulong uVar11;\n  byte bVar12;\n  uint uVar13;\n  ulong uVar14;\n  int iVar15;\n  int iVar16;\n  byte *local_40 [2];\n  \n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoumax\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = local_40;\n  }\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  bVar12 = *param_1;\n  ppuVar4 = __ctype_b_loc();\n  pbVar5 = param_1;\n  while ((*(byte *)((long)*ppuVar4 + (ulong)bVar12 * 2 + 1) & 0x20) != 0) {\n    pbVar5 = pbVar5 + 1;\n    bVar12 = *pbVar5;\n  }\n  if (bVar12 == 0x2d) {\n    return 4;\n  }\n  uVar6 = __strtoul_internal(param_1,param_2,param_3,0);\n  pbVar5 = *param_2;\n  if (pbVar5 == param_1) {\n    if ((param_5 == (char *)0x0) || (bVar12 = *param_1, bVar12 == 0)) {\n      return 4;\n    }\n    uVar14 = 0;\n    uVar6 = 1;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) {\n      return 4;\n    }\n  }\n  else {\n    if (*piVar3 == 0) {\n      uVar14 = 0;\n    }\n    else {\n      uVar14 = 1;\n      if (*piVar3 != 0x22) {\n        return 4;\n      }\n    }\n    uVar13 = (uint)uVar14;\n    if ((param_5 == (char *)0x0) || (bVar12 = *pbVar5, bVar12 == 0)) goto LAB_00405d42;\n    pcVar7 = strchr(param_5,(int)(char)bVar12);\n    if (pcVar7 == (char *)0x0) goto switchD_00405e2c_caseD_1;\n  }\n  uVar13 = (uint)uVar14;\n  uVar9 = bVar12 - 0x45;\n  bVar8 = (byte)uVar9;\n  if (((bVar8 < 0x30) && ((0x814400308945U >> ((ulong)uVar9 & 0x3f) & 1) != 0)) &&\n     (pcVar7 = strchr(param_5,0x30), pcVar7 != (char *)0x0)) {\n    bVar1 = pbVar5[1];\n    if (bVar1 != 0x44) {\n      if (bVar1 == 0x69) {\n        uVar11 = 0x400;\n        iVar15 = (pbVar5[2] == 0x42) + 1 + (uint)(pbVar5[2] == 0x42);\n        goto LAB_00405e1a;\n      }\n      if (bVar1 != 0x42) {\n                    /* WARNING: Could not recover jumptable at 0x00405e01. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        uVar6 = (*(code *)(&PTR_LAB_00409458)[bVar8])();\n        return uVar6;\n      }\n    }\n    iVar15 = 2;\n    uVar11 = 1000;\n  }\n  else {\n    iVar15 = 1;\n    uVar11 = 0x400;\n  }\nLAB_00405e1a:\n  iVar10 = (int)uVar11;\n  switch(bVar12 - 0x42 & 0xff) {\n  case 0:\n    if (uVar6 >> 0x36 == 0) {\n      uVar6 = uVar6 << 10;\n      break;\n    }\n    goto LAB_00405e87;\n  default:\nswitchD_00405e2c_caseD_1:\n    *param_4 = uVar6;\n    return (ulong)(uVar13 | 2);\n  case 3:\n    iVar16 = 6;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00405f14;\n  case 5:\n  case 0x25:\n    uVar11 = (ulong)iVar10;\n    if (((SUB168(ZEXT816(uVar6) * ZEXT816(uVar11) >> 0x40,0) != 0) ||\n        (auVar2 = (ZEXT816(uVar6) * ZEXT816(uVar11) & (undefined  [16])0xffffffffffffffff) *\n                  ZEXT816(uVar11), SUB168(auVar2 >> 0x40,0) != 0)) ||\n       (auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816(uVar11),\n       uVar6 = SUB168(auVar2,0), SUB168(auVar2 >> 0x40,0) != 0)) {\n      uVar6 = 0xffffffffffffffff;\n      uVar14 = 1;\n    }\n    break;\n  case 9:\n  case 0x29:\n    auVar2 = ZEXT816(uVar6) * ZEXT816(uVar11);\n    goto joined_r0x00405e4c;\n  case 0xb:\n  case 0x2b:\n    auVar2 = ZEXT816(uVar6) * ZEXT816((ulong)(long)iVar10);\n    if (SUB168(auVar2 >> 0x40,0) != 0) goto LAB_00405e87;\n    auVar2 = (auVar2 & (undefined  [16])0xffffffffffffffff) * ZEXT816((ulong)(long)iVar10);\njoined_r0x00405e4c:\n    uVar6 = SUB168(auVar2,0);\n    if (SUB168(auVar2 >> 0x40,0) != 0) {\nLAB_00405e87:\n      uVar14 = 1;\n      uVar6 = 0xffffffffffffffff;\n    }\n    break;\n  case 0xe:\n    iVar16 = 5;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00405f14;\n  case 0x12:\n  case 0x32:\n    iVar16 = 4;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00405f14;\n  case 0x17:\n    iVar16 = 8;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\n    goto LAB_00405f14;\n  case 0x18:\n    iVar16 = 7;\n    uVar9 = 0;\n    do {\n      auVar2 = ZEXT816(uVar6);\n      uVar6 = SUB168(auVar2 * ZEXT816((ulong)(long)iVar10),0);\n      if (SUB168(auVar2 * ZEXT816((ulong)(long)iVar10) >> 0x40,0) != 0) {\n        uVar9 = 1;\n        uVar6 = 0xffffffffffffffff;\n      }\n      iVar16 = iVar16 + -1;\n    } while (iVar16 != 0);\nLAB_00405f14:\n    uVar14 = (ulong)(uVar13 | uVar9);\n    break;\n  case 0x20:\n    if (uVar6 >> 0x37 != 0) goto LAB_00405e87;\n    uVar6 = uVar6 << 9;\n    break;\n  case 0x21:\n    break;\n  case 0x35:\n    if ((long)uVar6 < 0) goto LAB_00405e87;\n    uVar6 = uVar6 * 2;\n  }\n  *param_2 = pbVar5 + iVar15;\n  if (pbVar5[iVar15] != 0) {\n    uVar14 = (ulong)((uint)uVar14 | 2);\n  }\nLAB_00405d42:\n  *param_4 = uVar6;\n  return uVar14;\n}\n\n",
            "funcName": "FUN_00405ca0"
        },
        {
            "funcStartAddr": "0x4060e0",
            "funcEndAddr": "0x4061b5",
            "decompiledFuncCode": "\nvoid FUN_004060e0(long param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 *puVar5;\n  long lVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  \n  iVar1 = param_2[0xb];\n  iVar2 = *param_2;\n  iVar3 = param_2[0xc];\n  iVar8 = iVar1;\n  iVar9 = iVar2;\n  while (iVar3 < iVar9) {\n    while( true ) {\n      if (iVar3 <= iVar8) goto LAB_0040615c;\n      iVar10 = iVar9 - iVar3;\n      iVar7 = iVar3 - iVar8;\n      if (iVar10 <= iVar7) break;\n      lVar6 = (long)iVar8;\n      iVar9 = iVar9 - iVar7;\n      puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n      do {\n        uVar4 = *puVar5;\n        *puVar5 = puVar5[iVar9 - lVar6];\n        puVar5[iVar9 - lVar6] = uVar4;\n        puVar5 = puVar5 + 1;\n      } while ((undefined8 *)(param_1 + 8 + ((ulong)(iVar7 - 1) + lVar6) * 8) != puVar5);\n      if (iVar9 <= iVar3) goto LAB_0040615c;\n    }\n    lVar6 = (long)iVar8;\n    puVar5 = (undefined8 *)(param_1 + lVar6 * 8);\n    do {\n      uVar4 = *puVar5;\n      *puVar5 = puVar5[iVar3 - lVar6];\n      puVar5[iVar3 - lVar6] = uVar4;\n      puVar5 = puVar5 + 1;\n    } while (puVar5 != (undefined8 *)(param_1 + 8 + ((ulong)(iVar10 - 1) + lVar6) * 8));\n    iVar8 = iVar8 + iVar10;\n  }\nLAB_0040615c:\n  param_2[0xc] = iVar2;\n  param_2[0xb] = iVar1 + (iVar2 - iVar3);\n  return;\n}\n\n",
            "funcName": "FUN_004060e0"
        },
        {
            "funcStartAddr": "0x4061c0",
            "funcEndAddr": "0x4067be",
            "decompiledFuncCode": "\nint FUN_004061c0(int param_1,undefined8 *param_2,char *param_3,char **param_4,undefined4 *param_5,\n                int param_6,int *param_7,int param_8,undefined8 param_9)\n\n{\n  char cVar1;\n  undefined8 uVar2;\n  bool bVar3;\n  bool bVar4;\n  int iVar5;\n  int iVar6;\n  size_t sVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  char **ppcVar10;\n  char *pcVar11;\n  char **ppcVar12;\n  char *pcVar13;\n  char *__s1;\n  FILE *__stream;\n  ulong uVar14;\n  size_t sVar15;\n  char *__s1_00;\n  long lVar16;\n  char *local_70;\n  uint local_44;\n  \n  pcVar13 = *(char **)(param_7 + 8);\n  cVar1 = *pcVar13;\n  pcVar11 = pcVar13;\n  if ((cVar1 == '=') || (cVar1 == '\\0')) {\n    sVar15 = 0;\n  }\n  else {\n    do {\n      pcVar11 = pcVar11 + 1;\n      if (*pcVar11 == '\\0') break;\n    } while (*pcVar11 != '=');\n    sVar15 = (long)pcVar11 - (long)pcVar13;\n  }\n  uVar14 = 0;\n  __s1 = *param_4;\n  ppcVar10 = param_4;\n  __s1_00 = __s1;\n  if (__s1 != (char *)0x0) {\n    while( true ) {\n      iVar5 = strncmp(__s1_00,pcVar13,sVar15);\n      if ((iVar5 == 0) && (sVar7 = strlen(__s1_00), sVar7 == sVar15)) goto LAB_004063e0;\n      ppcVar10 = ppcVar10 + 4;\n      __s1_00 = *ppcVar10;\n      iVar5 = (int)uVar14 + 1;\n      if (__s1_00 == (char *)0x0) break;\n      uVar14 = (ulong)iVar5;\n    }\n    lVar16 = 0;\n    ppcVar10 = (char **)0x0;\n    local_44 = 0xffffffff;\n    bVar3 = false;\n    bVar4 = false;\n    local_70 = (char *)0x0;\n    ppcVar12 = param_4;\n    do {\n      iVar6 = strncmp(__s1,pcVar13,sVar15);\n      if (iVar6 == 0) {\n        if (ppcVar10 == (char **)0x0) {\n          local_44 = (uint)lVar16;\n          ppcVar10 = ppcVar12;\n        }\n        else if (((((param_6 != 0) || (*(int *)(ppcVar10 + 1) != *(int *)(ppcVar12 + 1))) ||\n                  (ppcVar10[2] != ppcVar12[2])) ||\n                 (*(int *)(ppcVar10 + 3) != *(int *)(ppcVar12 + 3))) && (!bVar3)) {\n          if (param_8 == 0) {\n            bVar3 = true;\n            if (local_70 == (char *)0x0) goto LAB_00406320;\n          }\n          else if (local_70 == (char *)0x0) {\n            local_70 = (char *)calloc((long)iVar5,1);\n            if (local_70 == (char *)0x0) {\n              bVar3 = true;\n              goto LAB_00406320;\n            }\n            bVar4 = true;\n            local_70[(int)local_44] = '\\x01';\n          }\n          local_70[lVar16] = '\\x01';\n        }\n      }\nLAB_00406320:\n      ppcVar12 = ppcVar12 + 4;\n      __s1 = *ppcVar12;\n      lVar16 = lVar16 + 1;\n    } while (__s1 != (char *)0x0);\n    if ((local_70 != (char *)0x0) || (bVar3)) {\n      if (param_8 != 0) {\n        if (bVar3) {\n          uVar2 = *param_2;\n          uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous\\n\",5);\n          __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n        else {\n          flockfile(stderr);\n          uVar2 = *(undefined8 *)(param_7 + 8);\n          uVar8 = *param_2;\n          uVar9 = dcgettext(0,\"%s: option \\'%s%s\\' is ambiguous; possibilities:\",5);\n          __fprintf_chk(stderr,1,uVar9,uVar8,param_9,uVar2);\n          pcVar13 = local_70;\n          __stream = stderr;\n          do {\n            if (*pcVar13 != '\\0') {\n              __fprintf_chk(__stream,1,&DAT_00409889,param_9,*param_4);\n              __stream = stderr;\n            }\n            pcVar13 = pcVar13 + 1;\n            param_4 = param_4 + 4;\n          } while (local_70 + uVar14 + 1 != pcVar13);\n          fputc(10,__stream);\n          funlockfile(stderr);\n          pcVar13 = *(char **)(param_7 + 8);\n        }\n      }\n      if (bVar4) {\n        free(local_70);\n      }\n      sVar15 = strlen(pcVar13);\n      *(char **)(param_7 + 8) = pcVar13 + sVar15;\n      *param_7 = *param_7 + 1;\n      param_7[2] = 0;\n      return 0x3f;\n    }\n    if (ppcVar10 != (char **)0x0) {\n      uVar14 = (ulong)local_44;\nLAB_004063e0:\n      iVar6 = *param_7;\n      *(undefined8 *)(param_7 + 8) = 0;\n      iVar5 = iVar6 + 1;\n      *param_7 = iVar5;\n      if (*pcVar11 == '\\0') {\n        if (*(int *)(ppcVar10 + 1) == 1) {\n          if (param_1 <= iVar5) {\n            if (param_8 != 0) {\n              pcVar13 = *ppcVar10;\n              uVar2 = *param_2;\n              uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' requires an argument\\n\",5);\n              __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n            }\n            param_7[2] = *(int *)(ppcVar10 + 3);\n            return (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          *param_7 = iVar6 + 2;\n          *(undefined8 *)(param_7 + 4) = param_2[iVar5];\n        }\n      }\n      else {\n        if (*(int *)(ppcVar10 + 1) == 0) {\n          if (param_8 != 0) {\n            pcVar13 = *ppcVar10;\n            uVar2 = *param_2;\n            uVar8 = dcgettext(0,\"%s: option \\'%s%s\\' doesn\\'t allow an argument\\n\",5);\n            __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n          }\n          param_7[2] = *(int *)(ppcVar10 + 3);\n          return 0x3f;\n        }\n        *(char **)(param_7 + 4) = pcVar11 + 1;\n      }\n      if (param_5 != (undefined4 *)0x0) {\n        *param_5 = (int)uVar14;\n      }\n      if ((int *)ppcVar10[2] == (int *)0x0) {\n        return *(int *)(ppcVar10 + 3);\n      }\n      *(int *)ppcVar10[2] = *(int *)(ppcVar10 + 3);\n      return 0;\n    }\n  }\n  if (((param_6 != 0) && (*(char *)(param_2[*param_7] + 1) != '-')) &&\n     (pcVar11 = strchr(param_3,(int)cVar1), pcVar11 != (char *)0x0)) {\n    return -1;\n  }\n  if (param_8 != 0) {\n    uVar2 = *param_2;\n    uVar8 = dcgettext(0,\"%s: unrecognized option \\'%s%s\\'\\n\",5);\n    __fprintf_chk(stderr,1,uVar8,uVar2,param_9,pcVar13);\n  }\n  *(undefined8 *)(param_7 + 8) = 0;\n  *param_7 = *param_7 + 1;\n  param_7[2] = 0;\n  return 0x3f;\n}\n\n",
            "funcName": "FUN_004061c0"
        },
        {
            "funcStartAddr": "0x4067e0",
            "funcEndAddr": "0x406d47",
            "decompiledFuncCode": "\nuint FUN_004067e0(uint param_1,undefined8 *param_2,char *param_3,long param_4,undefined8 param_5,\n                 ulong param_6,uint *param_7,int param_8)\n\n{\n  undefined8 uVar1;\n  char cVar2;\n  uint uVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  long lVar6;\n  uint uVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  uint uVar11;\n  bool bVar12;\n  bool bVar13;\n  byte bVar14;\n  undefined1 *puVar15;\n  \n  bVar14 = 0;\n  uVar3 = param_7[1];\n  if ((int)param_1 < 1) {\n    return 0xffffffff;\n  }\n  uVar11 = *param_7;\n  *(undefined8 *)(param_7 + 4) = 0;\n  if (uVar11 == 0) {\n    *param_7 = 1;\n    uVar11 = 1;\nLAB_0040682a:\n    param_7[0xc] = uVar11;\n    param_7[0xb] = uVar11;\n    *(undefined8 *)(param_7 + 8) = 0;\n    if (*param_3 == '-') {\n      param_7[10] = 2;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else if (*param_3 == '+') {\n      param_7[10] = 0;\n      param_3 = param_3 + 1;\n      pbVar8 = (byte *)0x0;\n    }\n    else {\n      pbVar8 = (byte *)0x0;\n      if (param_8 == 0) {\n        pcVar4 = getenv(\"POSIXLY_CORRECT\");\n        param_6 = param_6 & 0xffffffff;\n        if (pcVar4 == (char *)0x0) {\n          param_7[10] = 1;\n          pbVar8 = *(byte **)(param_7 + 8);\n          goto LAB_0040692d;\n        }\n        pbVar8 = *(byte **)(param_7 + 8);\n      }\n      param_7[10] = 0;\n    }\nLAB_0040692d:\n    param_7[6] = 1;\n    cVar2 = *param_3;\nLAB_00406938:\n    if (cVar2 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 == (byte *)0x0) goto LAB_004068a8;\nLAB_0040694c:\n    if (*pbVar8 == 0) goto LAB_004068a8;\n  }\n  else {\n    if (param_7[6] == 0) goto LAB_0040682a;\n    cVar2 = *param_3;\n    pbVar8 = *(byte **)(param_7 + 8);\n    if ((cVar2 - 0x2bU & 0xfd) != 0) goto LAB_00406938;\n    pcVar4 = param_3 + 1;\n    param_3 = param_3 + 1;\n    if (*pcVar4 == ':') {\n      uVar3 = 0;\n    }\n    if (pbVar8 != (byte *)0x0) goto LAB_0040694c;\nLAB_004068a8:\n    uVar11 = *param_7;\n    if (param_7[0xc] != uVar11 && (int)uVar11 <= (int)param_7[0xc]) {\n      param_7[0xc] = uVar11;\n    }\n    if ((int)uVar11 < (int)param_7[0xb]) {\n      param_7[0xb] = uVar11;\n    }\n    if (param_7[10] == 1) {\n      uVar7 = param_7[0xc];\n      if (param_7[0xb] == uVar7) {\n        if (uVar11 != uVar7) {\n          param_7[0xb] = uVar11;\n          uVar7 = uVar11;\n        }\n      }\n      else if (uVar11 != uVar7) {\n        FUN_004060e0(param_2,param_7);\n        param_6 = param_6 & 0xffffffff;\n        uVar7 = *param_7;\n      }\n      uVar11 = uVar7;\n      uVar7 = uVar11;\n      if ((int)uVar11 < (int)param_1) {\n        lVar6 = (long)(int)uVar11;\n        do {\n          if ((*(char *)param_2[lVar6] == '-') && (((char *)param_2[lVar6])[1] != '\\0')) {\n            uVar11 = *param_7;\n            uVar7 = (uint)lVar6;\n            break;\n          }\n          uVar11 = (uint)lVar6 + 1;\n          lVar6 = lVar6 + 1;\n          *param_7 = uVar11;\n          uVar7 = uVar11;\n        } while ((int)lVar6 < (int)param_1);\n      }\n      param_7[0xc] = uVar7;\n    }\n    bVar12 = param_1 < uVar11;\n    bVar13 = param_1 == uVar11;\n    if (bVar13) {\n      param_1 = param_7[0xc];\n      uVar11 = param_7[0xb];\nLAB_00406a16:\n      if (uVar11 != param_1) {\n        *param_7 = uVar11;\n      }\n      return 0xffffffff;\n    }\n    lVar6 = 3;\n    pbVar8 = (byte *)param_2[(int)uVar11];\n    pbVar9 = pbVar8;\n    pbVar10 = &DAT_004098a1;\n    do {\n      if (lVar6 == 0) break;\n      lVar6 = lVar6 + -1;\n      bVar12 = *pbVar9 < *pbVar10;\n      bVar13 = *pbVar9 == *pbVar10;\n      pbVar9 = pbVar9 + (ulong)bVar14 * -2 + 1;\n      pbVar10 = pbVar10 + (ulong)bVar14 * -2 + 1;\n    } while (bVar13);\n    if ((!bVar12 && !bVar13) == bVar12) {\n      uVar11 = uVar11 + 1;\n      *param_7 = uVar11;\n      if (param_7[0xb] == param_7[0xc]) {\n        param_7[0xb] = uVar11;\n      }\n      else {\n        bVar12 = uVar11 != param_7[0xc];\n        uVar11 = param_7[0xb];\n        if (bVar12) {\n          FUN_004060e0(param_2,param_7);\n          uVar11 = param_7[0xb];\n        }\n      }\n      param_7[0xc] = param_1;\n      *param_7 = param_1;\n      goto LAB_00406a16;\n    }\n    if ((*pbVar8 != 0x2d) || (bVar14 = pbVar8[1], bVar14 == 0)) {\n      if (param_7[10] == 0) {\n        return 0xffffffff;\n      }\n      *(byte **)(param_7 + 4) = pbVar8;\n      *param_7 = uVar11 + 1;\n      return 1;\n    }\n    if (param_4 != 0) {\n      if (bVar14 == 0x2d) {\n        *(byte **)(param_7 + 8) = pbVar8 + 2;\n        puVar15 = &DAT_004098a1;\n        goto LAB_00406b75;\n      }\n      if ((int)param_6 != 0) {\n        if (pbVar8[2] == 0) {\n          pcVar4 = strchr(param_3,(int)(char)bVar14);\n          param_6 = param_6 & 0xffffffff;\n          if (pcVar4 != (char *)0x0) goto LAB_00406b20;\n        }\n        *(byte **)(param_7 + 8) = pbVar8 + 1;\n        uVar11 = FUN_004061c0(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,\n                              &DAT_004098a2);\n        if (uVar11 != 0xffffffff) {\n          return uVar11;\n        }\n        pbVar8 = (byte *)param_2[(int)*param_7];\n      }\n    }\nLAB_00406b20:\n    pbVar8 = pbVar8 + 1;\n  }\n  pbVar9 = pbVar8 + 1;\n  *(byte **)(param_7 + 8) = pbVar9;\n  bVar14 = *pbVar8;\n  uVar11 = (uint)(char)bVar14;\n  pcVar4 = strchr(param_3,uVar11);\n  if (pbVar8[1] == 0) {\n    *param_7 = *param_7 + 1;\n  }\n  if (((byte)(bVar14 - 0x3a) < 2) || (pcVar4 == (char *)0x0)) {\n    if (uVar3 != 0) {\n      uVar1 = *param_2;\n      uVar5 = dcgettext(0,\"%s: invalid option -- \\'%c\\'\\n\",5);\n      __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n    }\n    param_7[2] = uVar11;\n    return 0x3f;\n  }\n  if (((*pcVar4 != 'W') || (param_4 == 0)) || (pcVar4[1] != ';')) {\n    if (pcVar4[1] == ':') {\n      if (pcVar4[2] == ':') {\n        if (pbVar8[1] == 0) {\n          *(undefined8 *)(param_7 + 4) = 0;\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = *param_7 + 1;\n        }\n      }\n      else {\n        uVar7 = *param_7;\n        if (pbVar8[1] == 0) {\n          if (param_1 == uVar7) {\n            if (uVar3 != 0) {\n              uVar1 = *param_2;\n              uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n              __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n            }\n            param_7[2] = uVar11;\n            uVar11 = (uint)(*param_3 != ':') * 5 + 0x3a;\n          }\n          else {\n            uVar1 = param_2[(int)uVar7];\n            *param_7 = uVar7 + 1;\n            *(undefined8 *)(param_7 + 4) = uVar1;\n          }\n        }\n        else {\n          *(byte **)(param_7 + 4) = pbVar9;\n          *param_7 = uVar7 + 1;\n        }\n      }\n      *(undefined8 *)(param_7 + 8) = 0;\n      return uVar11;\n    }\n    return uVar11;\n  }\n  if (pbVar8[1] == 0) {\n    if (*param_7 == param_1) {\n      if (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar5 = dcgettext(0,\"%s: option requires an argument -- \\'%c\\'\\n\",5);\n        __fprintf_chk(stderr,1,uVar5,uVar1,uVar11);\n      }\n      param_7[2] = uVar11;\n      return (uint)(*param_3 != ':') * 5 + 0x3a;\n    }\n    pbVar9 = (byte *)param_2[(int)*param_7];\n  }\n  *(byte **)(param_7 + 8) = pbVar9;\n  param_6 = 0;\n  *(undefined8 *)(param_7 + 4) = 0;\n  puVar15 = &DAT_004098c0;\nLAB_00406b75:\n  uVar3 = FUN_004061c0(param_1,param_2,param_3,param_4,param_5,param_6,param_7,uVar3,puVar15);\n  return uVar3;\n}\n\n",
            "funcName": "FUN_004067e0"
        },
        {
            "funcStartAddr": "0x406db0",
            "funcEndAddr": "0x406e06",
            "decompiledFuncCode": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00406db0(void)\n\n{\n  DAT_0060b420 = DAT_0060b27c;\n  _DAT_0060b424 = DAT_0060b278;\n  FUN_004067e0();\n  DAT_0060b27c = DAT_0060b420;\n  DAT_0060b460 = DAT_0060b430;\n  _DAT_0060b274 = DAT_0060b428;\n  return;\n}\n\n",
            "funcName": "FUN_00406db0"
        },
        {
            "funcStartAddr": "0x406e10",
            "funcEndAddr": "0x406e28",
            "decompiledFuncCode": "\nvoid FUN_00406e10(void)\n\n{\n  FUN_00406db0();\n  return;\n}\n\n",
            "funcName": "FUN_00406e10"
        },
        {
            "funcStartAddr": "0x406e30",
            "funcEndAddr": "0x406e43",
            "decompiledFuncCode": "\nvoid FUN_00406e30(void)\n\n{\n  FUN_00406db0();\n  return;\n}\n\n",
            "funcName": "FUN_00406e30"
        },
        {
            "funcStartAddr": "0x406e50",
            "funcEndAddr": "0x406e65",
            "decompiledFuncCode": "\nvoid FUN_00406e50(void)\n\n{\n  FUN_004067e0();\n  return;\n}\n\n",
            "funcName": "FUN_00406e50"
        },
        {
            "funcStartAddr": "0x406e70",
            "funcEndAddr": "0x406e86",
            "decompiledFuncCode": "\nvoid FUN_00406e70(void)\n\n{\n  FUN_00406db0();\n  return;\n}\n\n",
            "funcName": "FUN_00406e70"
        },
        {
            "funcStartAddr": "0x406e90",
            "funcEndAddr": "0x406ea8",
            "decompiledFuncCode": "\nvoid FUN_00406e90(void)\n\n{\n  FUN_004067e0();\n  return;\n}\n\n",
            "funcName": "FUN_00406e90"
        },
        {
            "funcStartAddr": "0x406eb0",
            "funcEndAddr": "0x406f1f",
            "decompiledFuncCode": "\nsize_t FUN_00406eb0(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  wchar_t local_1c;\n  \n  if (param_2 == (byte *)0x0) {\n    param_3 = 1;\n    param_2 = (byte *)0x4098bf;\n  }\n  else {\n    if (param_3 == 0) {\n      return 0xfffffffffffffffe;\n    }\n    if (param_1 != (wchar_t *)0x0) goto LAB_00406ed4;\n  }\n  param_1 = &local_1c;\nLAB_00406ed4:\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (cVar1 = FUN_004070a0(0), cVar1 == '\\0')) {\n    sVar2 = 1;\n    *param_1 = (uint)*param_2;\n  }\n  return sVar2;\n}\n\n",
            "funcName": "FUN_00406eb0"
        },
        {
            "funcStartAddr": "0x406f30",
            "funcEndAddr": "0x407013",
            "decompiledFuncCode": "\nulong * FUN_00406f30(ulong *param_1,char param_2,ulong param_3)\n\n{\n  char cVar1;\n  ulong uVar2;\n  ulong *puVar3;\n  ulong uVar4;\n  \n  if (param_3 == 0) {\n    return (ulong *)0x0;\n  }\n  if (((ulong)param_1 & 7) == 0) {\nLAB_00406f70:\n    uVar4 = (long)(int)(uint)CONCAT11(param_2,param_2) |\n            (long)(int)(uint)CONCAT11(param_2,param_2) << 0x10;\n    uVar4 = uVar4 | uVar4 << 0x20;\n    if (7 < param_3) {\n      uVar2 = *param_1 ^ uVar4;\n      for (uVar2 = ~uVar2 & uVar2 + 0xfefefefefefefeff; (uVar2 & 0x8080808080808080) == 0;\n          uVar2 = ~uVar2 & uVar2 + 0xfefefefefefefeff) {\n        param_3 = param_3 - 8;\n        param_1 = param_1 + 1;\n        if (param_3 < 8) {\n          if (param_3 == 0) {\n            return (ulong *)0x0;\n          }\n          break;\n        }\n        uVar2 = *param_1 ^ uVar4;\n      }\n    }\n    if (param_2 != *(char *)param_1) {\n      puVar3 = (ulong *)((long)param_1 + param_3);\n      do {\n        param_1 = (ulong *)((long)param_1 + 1);\n        if (param_1 == puVar3) {\n          return (ulong *)0x0;\n        }\n      } while (*(char *)param_1 != param_2);\n    }\n  }\n  else {\n    cVar1 = *(char *)param_1;\n    while (param_2 != cVar1) {\n      param_1 = (ulong *)((long)param_1 + 1);\n      param_3 = param_3 - 1;\n      if (param_3 == 0) {\n        return (ulong *)0x0;\n      }\n      if (((ulong)param_1 & 7) == 0) goto LAB_00406f70;\n      cVar1 = *(char *)param_1;\n    }\n  }\n  return param_1;\n}\n\n",
            "funcName": "FUN_00406f30"
        },
        {
            "funcStartAddr": "0x407040",
            "funcEndAddr": "0x40709c",
            "decompiledFuncCode": "\nulong FUN_00407040(uint *param_1)\n\n{\n  uint uVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  uVar1 = *param_1;\n  uVar3 = FUN_00407670(param_1);\n  if ((uVar1 & 0x20) == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n",
            "funcName": "FUN_00407040"
        },
        {
            "funcStartAddr": "0x4070a0",
            "funcEndAddr": "0x4070f6",
            "decompiledFuncCode": "\nbool FUN_004070a0(int param_1)\n\n{\n  bool bVar1;\n  byte *pbVar2;\n  long lVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  bool bVar8;\n  byte bVar9;\n  \n  bVar9 = 0;\n  pbVar2 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar1 = true;\n  bVar6 = false;\n  bVar8 = pbVar2 == (byte *)0x0;\n  if (!bVar8) {\n    lVar3 = 2;\n    pbVar4 = pbVar2;\n    pbVar5 = &DAT_004098c4;\n    do {\n      if (lVar3 == 0) break;\n      lVar3 = lVar3 + -1;\n      bVar6 = *pbVar4 < *pbVar5;\n      bVar8 = *pbVar4 == *pbVar5;\n      pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      pbVar5 = pbVar5 + (ulong)bVar9 * -2 + 1;\n    } while (bVar8);\n    bVar1 = false;\n    bVar7 = false;\n    bVar6 = (!bVar6 && !bVar8) == bVar6;\n    if (!bVar6) {\n      lVar3 = 6;\n      pbVar4 = (byte *)\"POSIX\";\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar2 < *pbVar4;\n        bVar6 = *pbVar2 == *pbVar4;\n        pbVar2 = pbVar2 + (ulong)bVar9 * -2 + 1;\n        pbVar4 = pbVar4 + (ulong)bVar9 * -2 + 1;\n      } while (bVar6);\n      return (!bVar7 && !bVar6) != bVar7;\n    }\n  }\n  return bVar1;\n}\n\n",
            "funcName": "FUN_004070a0"
        },
        {
            "funcStartAddr": "0x407100",
            "funcEndAddr": "0x407654",
            "decompiledFuncCode": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nchar * FUN_00407100(void)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  char *__s1;\n  size_t sVar5;\n  size_t sVar6;\n  char *pcVar7;\n  size_t __n;\n  char *__file;\n  FILE *__stream;\n  byte *pbVar8;\n  long lVar9;\n  undefined8 *puVar10;\n  long lVar11;\n  ulong uVar12;\n  undefined8 *puVar13;\n  char *__ptr;\n  bool bVar14;\n  long local_d0;\n  undefined8 local_c0;\n  undefined8 local_b8;\n  undefined auStack_80 [8];\n  undefined8 local_78;\n  \n  __s1 = nl_langinfo(0xe);\n  if (__s1 == (char *)0x0) {\n    __s1 = \"\";\n  }\n  if (DAT_0060b458 != (char *)0x0) goto LAB_0040713a;\n  pcVar7 = getenv(\"CHARSETALIASDIR\");\n  if ((pcVar7 == (char *)0x0) || (*pcVar7 == '\\0')) {\n    sVar6 = 0x73;\n    sVar5 = 0x65;\n    __n = 100;\n    pcVar7 = \n    \"/home/dongkwan/data/scripts/gnu_packages/coreutils/coreutils-8.29_gcc-8.2.0_x86_64_O2_debug/gogo/lib\"\n    ;\nLAB_00407225:\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      __file[__n] = '/';\n      goto LAB_00407246;\n    }\n  }\n  else {\n    __n = strlen(pcVar7);\n    if (__n == 0) {\n      sVar6 = 0xe;\n    }\n    else {\n      if (pcVar7[__n - 1] != '/') {\n        sVar6 = __n + 0xf;\n        sVar5 = __n + 1;\n        goto LAB_00407225;\n      }\n      sVar6 = __n + 0xe;\n    }\n    __file = (char *)malloc(sVar6);\n    if (__file != (char *)0x0) {\n      memcpy(__file,pcVar7,__n);\n      sVar5 = __n;\nLAB_00407246:\n      puVar13 = (undefined8 *)(__file + sVar5);\n      *puVar13 = 0x2e74657372616863;\n      *(undefined2 *)((long)puVar13 + 0xc) = 0x73;\n      *(undefined4 *)(puVar13 + 1) = 0x61696c61;\n      iVar2 = open(__file,0);\n      if (-1 < iVar2) {\n        __stream = fdopen(iVar2,\"r\");\n        local_d0 = 0;\n        if (__stream != (FILE *)0x0) {\n          pcVar7 = (char *)0x0;\nLAB_004072e0:\n          pbVar8 = (byte *)__stream->_IO_read_ptr;\n          if (__stream->_IO_read_end <= pbVar8) goto LAB_0040746c;\n          do {\n            __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n            uVar4 = (uint)*pbVar8;\n            __ptr = pcVar7;\n            while( true ) {\n              pcVar7 = __ptr;\n              if ((uVar4 - 9 < 2) || (uVar4 == 0x20)) goto LAB_004072e0;\n              if (uVar4 == 0x23) goto LAB_004074d1;\n              ungetc(uVar4,__stream);\n              iVar2 = fscanf(__stream,\"%50s %50s\",&local_b8,&local_78);\n              puVar13 = &local_b8;\n              if (iVar2 < 2) goto LAB_0040747f;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              lVar11 = (long)puVar13 +\n                       ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_b8);\n              puVar13 = &local_78;\n              do {\n                puVar10 = puVar13;\n                uVar3 = *(uint *)puVar10 + 0xfefefeff & ~*(uint *)puVar10;\n                uVar4 = uVar3 & 0x80808080;\n                puVar13 = (undefined8 *)((long)puVar10 + 4);\n              } while (uVar4 == 0);\n              bVar14 = (uVar3 & 0x8080) == 0;\n              if (bVar14) {\n                uVar4 = uVar4 >> 0x10;\n              }\n              if (bVar14) {\n                puVar13 = (undefined8 *)((long)puVar10 + 6);\n              }\n              local_c0 = (long)puVar13 +\n                         ((-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)) - (long)&local_78);\n              lVar9 = lVar11 + local_c0;\n              if (local_d0 == 0) {\n                pcVar7 = (char *)malloc(lVar9 + 3);\n              }\n              else {\n                lVar9 = lVar9 + local_d0;\n                pcVar7 = (char *)realloc(__ptr,lVar9 + 3);\n              }\n              local_d0 = lVar9 + 2;\n              if (pcVar7 == (char *)0x0) {\n                pcVar7 = \"\";\n                free(__ptr);\n                FUN_00407670(__stream);\n                goto LAB_00407284;\n              }\n              uVar12 = lVar11 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (-2 - lVar11) + (local_d0 - local_c0));\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_b8;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 2));\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_b8;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 4));\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_b8._4_4_,(undefined4)local_b8);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)&local_b8 + ((uVar12 & 0xffffffff) - 8));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_b8 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              uVar12 = local_c0 + 1;\n              puVar13 = (undefined8 *)(pcVar7 + (local_d0 - local_c0) + -1);\n              uVar4 = (uint)uVar12;\n              if (uVar4 < 8) {\n                if ((uVar12 & 4) == 0) {\n                  if (uVar4 != 0) {\n                    *(undefined *)puVar13 = (undefined)local_78;\n                    if ((uVar12 & 2) != 0) {\n                      *(undefined2 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 2)) =\n                           *(undefined2 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 6);\n                    }\n                  }\n                }\n                else {\n                  *(undefined4 *)puVar13 = (undefined4)local_78;\n                  *(undefined4 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 4)) =\n                       *(undefined4 *)((long)auStack_80 + (uVar12 & 0xffffffff) + 4);\n                }\n              }\n              else {\n                *puVar13 = CONCAT44(local_78._4_4_,(undefined4)local_78);\n                *(undefined8 *)((long)puVar13 + ((uVar12 & 0xffffffff) - 8)) =\n                     *(undefined8 *)((long)auStack_80 + (uVar12 & 0xffffffff));\n                lVar11 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n                uVar4 = uVar4 + (int)lVar11 & 0xfffffff8;\n                if (7 < uVar4) {\n                  uVar3 = 0;\n                  do {\n                    uVar12 = (ulong)uVar3;\n                    uVar3 = uVar3 + 8;\n                    *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar12) =\n                         *(undefined8 *)((long)&local_78 + (uVar12 - lVar11));\n                  } while (uVar3 < uVar4);\n                }\n              }\n              pbVar8 = (byte *)__stream->_IO_read_ptr;\n              if (pbVar8 < __stream->_IO_read_end) break;\nLAB_0040746c:\n              uVar4 = __uflow(__stream);\n              __ptr = pcVar7;\n              if (uVar4 == 0xffffffff) goto LAB_0040747f;\n            }\n          } while( true );\n        }\n        close(iVar2);\n      }\n      goto LAB_0040727e;\n    }\n  }\n  DAT_0060b458 = \"\";\nLAB_0040713a:\n  cVar1 = *DAT_0060b458;\n  pcVar7 = DAT_0060b458;\n  do {\n    if (cVar1 == '\\0') {\nLAB_00407194:\n      if (*__s1 == '\\0') {\n        __s1 = \"ASCII\";\n      }\n      return __s1;\n    }\n    iVar2 = strcmp(__s1,pcVar7);\n    if ((iVar2 == 0) || ((cVar1 == '*' && (pcVar7[1] == '\\0')))) {\n      sVar6 = strlen(pcVar7);\n      __s1 = pcVar7 + sVar6 + 1;\n      goto LAB_00407194;\n    }\n    sVar6 = strlen(pcVar7);\n    sVar5 = strlen(pcVar7 + sVar6 + 1);\n    pcVar7 = pcVar7 + sVar6 + 1 + sVar5 + 1;\n    cVar1 = *pcVar7;\n  } while( true );\nLAB_004074d1:\n  do {\n    pbVar8 = (byte *)__stream->_IO_read_ptr;\n    if (pbVar8 < __stream->_IO_read_end) {\n      __stream->_IO_read_ptr = (char *)(pbVar8 + 1);\n      uVar4 = (uint)*pbVar8;\n      bVar14 = true;\n    }\n    else {\n      uVar4 = __uflow(__stream);\n      bVar14 = uVar4 != 0xffffffff;\n    }\n  } while ((uVar4 != 10) && (bVar14));\n  if (uVar4 == 0xffffffff) goto LAB_0040747f;\n  goto LAB_004072e0;\nLAB_0040747f:\n  FUN_00407670(__stream);\n  if (local_d0 == 0) {\nLAB_0040727e:\n    pcVar7 = \"\";\n  }\n  else {\n    pcVar7[local_d0] = '\\0';\n  }\nLAB_00407284:\n  free(__file);\n  DAT_0060b458 = pcVar7;\n  goto LAB_0040713a;\n}\n\n",
            "funcName": "FUN_00407100"
        },
        {
            "funcStartAddr": "0x407670",
            "funcEndAddr": "0x4076e8",
            "decompiledFuncCode": "\nint FUN_00407670(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_004076d7;\n    }\n    iVar1 = FUN_004076f0(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_004076d7:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n",
            "funcName": "FUN_00407670"
        },
        {
            "funcStartAddr": "0x4076f0",
            "funcEndAddr": "0x40772b",
            "decompiledFuncCode": "\nvoid FUN_004076f0(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if ((iVar1 != 0) && ((param_1->_flags & 0x100U) != 0)) {\n      FUN_00407730(param_1,0,1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n",
            "funcName": "FUN_004076f0"
        },
        {
            "funcStartAddr": "0x407730",
            "funcEndAddr": "0x407786",
            "decompiledFuncCode": "\nulong FUN_00407730(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  uint uVar1;\n  int __fd;\n  ulong uVar2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    __fd = fileno(param_1);\n    uVar2 = lseek(__fd,param_2,param_3);\n    if (uVar2 != 0xffffffffffffffff) {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = uVar2;\n      uVar2 = 0;\n    }\n    return uVar2;\n  }\n  uVar1 = fseeko(param_1,param_2,param_3);\n  return (ulong)uVar1;\n}\n\n",
            "funcName": "FUN_00407730"
        },
        {
            "funcStartAddr": "0x407790",
            "funcEndAddr": "0x4077ed",
            "decompiledFuncCode": "\n/* WARNING: Removing unreachable block (ram,0x004077c3) */\n/* WARNING: Removing unreachable block (ram,0x004077c8) */\n\nvoid FUN_00407790(void)\n\n{\n  __DT_INIT();\n  return;\n}\n\n",
            "funcName": "FUN_00407790"
        },
        {
            "funcStartAddr": "0x4077f0",
            "funcEndAddr": "0x4077f1",
            "decompiledFuncCode": "\nvoid FUN_004077f0(void)\n\n{\n  return;\n}\n\n",
            "funcName": "FUN_004077f0"
        },
        {
            "funcStartAddr": "0x407800",
            "funcEndAddr": "0x407818",
            "decompiledFuncCode": "\nvoid FUN_00407800(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,DAT_0060b1e8);\n  return;\n}\n\n",
            "funcName": "FUN_00407800"
        },
        {
            "funcStartAddr": "0x407818",
            "funcEndAddr": "0x407838",
            "decompiledFuncCode": "\nundefined8 FUN_00407818(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  code **ppcVar1;\n  \n  for (ppcVar1 = (code **)&DAT_0060ae30; *ppcVar1 != (code *)0xffffffffffffffff;\n      ppcVar1 = ppcVar1 + -1) {\n    (**ppcVar1)();\n  }\n  return param_3;\n}\n\n",
            "funcName": "FUN_00407818"
        }
    ],
    "decompilerName": "Ghidra",
    "binaryName": "coreutils_strip-8.29_gcc-8.2.0_x86_64_O2_head.elf",
    "isStripped": "True",
    "compilerName": "gcc",
    "optLevel": "-O"
}